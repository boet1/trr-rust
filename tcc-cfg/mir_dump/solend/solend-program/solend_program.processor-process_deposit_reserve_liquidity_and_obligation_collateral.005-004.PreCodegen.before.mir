// MIR for `process_deposit_reserve_liquidity_and_obligation_collateral` before PreCodegen

fn process_deposit_reserve_liquidity_and_obligation_collateral(_1: &Pubkey, _2: u64, _3: &[AccountInfo<'_>]) -> Result<(), ProgramError> {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug accounts => _3;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _4: ();
    let mut _5: bool;
    let mut _6: u64;
    let mut _7: !;
    let _8: ();
    let mut _9: &str;
    let _10: &str;
    let mut _11: solana_program::program_error::ProgramError;
    let mut _12: solend_sdk::error::LendingError;
    let _13: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _14: std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _15: &[solana_program::account_info::AccountInfo<'_>];
    let mut _17: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _18: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _19: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _20: isize;
    let mut _22: !;
    let mut _23: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _26: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _27: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _28: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _29: isize;
    let mut _31: !;
    let mut _32: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _35: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _36: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _37: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _38: isize;
    let mut _40: !;
    let mut _41: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _44: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _45: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _46: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _47: isize;
    let mut _49: !;
    let mut _50: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _53: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _54: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _55: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _56: isize;
    let mut _58: !;
    let mut _59: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _62: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _63: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _64: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _65: isize;
    let mut _67: !;
    let mut _68: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _71: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _72: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _73: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _74: isize;
    let mut _76: !;
    let mut _77: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _80: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _81: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _82: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _83: isize;
    let mut _85: !;
    let mut _86: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _89: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _90: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _91: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _92: isize;
    let mut _94: !;
    let mut _95: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _98: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _99: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _100: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _101: isize;
    let mut _103: !;
    let mut _104: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _107: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _108: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _109: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _110: isize;
    let mut _112: !;
    let mut _113: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _116: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _117: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _118: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _119: isize;
    let mut _121: !;
    let mut _122: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _125: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _126: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _127: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _128: isize;
    let mut _130: !;
    let mut _131: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _134: solana_program::clock::Clock;
    let mut _135: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::clock::Clock>;
    let mut _136: std::result::Result<solana_program::clock::Clock, solana_program::program_error::ProgramError>;
    let mut _137: isize;
    let mut _139: !;
    let mut _140: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _143: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _144: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _145: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _146: isize;
    let mut _148: !;
    let mut _149: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _151: ();
    let mut _152: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _153: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _154: &solana_program::pubkey::Pubkey;
    let mut _155: &solana_program::account_info::AccountInfo<'_>;
    let mut _156: &solana_program::clock::Clock;
    let mut _157: isize;
    let mut _159: !;
    let mut _160: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _163: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, u64>;
    let mut _164: std::result::Result<u64, solana_program::program_error::ProgramError>;
    let mut _165: &solana_program::pubkey::Pubkey;
    let mut _166: u64;
    let mut _167: &solana_program::account_info::AccountInfo<'_>;
    let mut _168: &solana_program::account_info::AccountInfo<'_>;
    let mut _169: &solana_program::account_info::AccountInfo<'_>;
    let mut _170: &solana_program::account_info::AccountInfo<'_>;
    let mut _171: &solana_program::account_info::AccountInfo<'_>;
    let mut _172: &solana_program::account_info::AccountInfo<'_>;
    let mut _173: &solana_program::account_info::AccountInfo<'_>;
    let mut _174: &solana_program::account_info::AccountInfo<'_>;
    let mut _175: &solana_program::clock::Clock;
    let mut _176: &solana_program::account_info::AccountInfo<'_>;
    let mut _177: isize;
    let mut _179: !;
    let mut _180: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _182: ();
    let mut _183: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _184: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _185: &solana_program::pubkey::Pubkey;
    let mut _186: &solana_program::account_info::AccountInfo<'_>;
    let mut _187: &solana_program::clock::Clock;
    let mut _188: isize;
    let mut _190: !;
    let mut _191: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _193: ();
    let mut _194: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _195: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _196: &solana_program::pubkey::Pubkey;
    let mut _197: u64;
    let mut _198: &solana_program::account_info::AccountInfo<'_>;
    let mut _199: &solana_program::account_info::AccountInfo<'_>;
    let mut _200: &solana_program::account_info::AccountInfo<'_>;
    let mut _201: &solana_program::account_info::AccountInfo<'_>;
    let mut _202: &solana_program::account_info::AccountInfo<'_>;
    let mut _203: &solana_program::account_info::AccountInfo<'_>;
    let mut _204: &solana_program::account_info::AccountInfo<'_>;
    let mut _205: &solana_program::clock::Clock;
    let mut _206: &solana_program::account_info::AccountInfo<'_>;
    let mut _207: isize;
    let mut _209: !;
    let mut _210: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _213: solend_sdk::state::Reserve;
    let mut _214: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solend_sdk::state::Reserve>;
    let mut _215: std::result::Result<solend_sdk::state::Reserve, solana_program::program_error::ProgramError>;
    let mut _216: &[u8];
    let _217: &&mut [u8];
    let mut _218: &std::cell::Ref<'_, &mut [u8]>;
    let _219: &std::cell::Ref<'_, &mut [u8]>;
    let _220: std::cell::Ref<'_, &mut [u8]>;
    let mut _221: &std::cell::RefCell<&mut [u8]>;
    let _222: &std::cell::RefCell<&mut [u8]>;
    let mut _223: &std::rc::Rc<std::cell::RefCell<&mut [u8]>>;
    let mut _224: isize;
    let mut _226: !;
    let mut _227: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _229: ();
    let mut _230: &mut solend_sdk::state::LastUpdate;
    let _231: ();
    let mut _232: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _233: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _234: solend_sdk::state::Reserve;
    let mut _235: &mut [u8];
    let mut _236: &mut &mut [u8];
    let mut _237: &mut std::cell::RefMut<'_, &mut [u8]>;
    let mut _238: &mut std::cell::RefMut<'_, &mut [u8]>;
    let mut _239: std::cell::RefMut<'_, &mut [u8]>;
    let mut _240: &std::cell::RefCell<&mut [u8]>;
    let _241: &std::cell::RefCell<&mut [u8]>;
    let mut _242: &std::rc::Rc<std::cell::RefCell<&mut [u8]>>;
    let mut _243: isize;
    let mut _245: !;
    let mut _246: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _248: ();
    let mut _249: &mut [u8];
    let mut _250: &mut [u8];
    let mut _251: bool;
    let mut _252: bool;
    let mut _253: isize;
    let mut _254: isize;
    let mut _255: isize;
    let mut _256: isize;
    let mut _257: isize;
    let mut _258: isize;
    let mut _259: isize;
    let mut _260: isize;
    let mut _261: isize;
    let mut _262: isize;
    let mut _263: isize;
    let mut _264: isize;
    let mut _265: isize;
    let mut _266: isize;
    let mut _267: isize;
    let mut _268: isize;
    let mut _269: isize;
    let mut _270: isize;
    let mut _271: isize;
    let mut _272: isize;
    let mut _273: isize;
    let mut _274: isize;
    let mut _275: isize;
    let mut _276: isize;
    let mut _277: isize;
    let mut _278: isize;
    let mut _279: isize;
    let mut _280: isize;
    let mut _281: isize;
    let mut _282: isize;
    let mut _283: isize;
    let mut _284: isize;
    let mut _285: isize;
    let mut _286: isize;
    let mut _287: isize;
    let mut _288: isize;
    let mut _289: isize;
    let mut _290: isize;
    let mut _291: isize;
    let mut _292: isize;
    let mut _293: isize;
    let mut _294: isize;
    let mut _295: isize;
    let mut _296: isize;
    let mut _297: isize;
    let mut _298: isize;
    let mut _299: isize;
    let mut _300: isize;
    let mut _301: isize;
    let mut _302: isize;
    let mut _303: isize;
    let mut _304: isize;
    let mut _305: isize;
    let mut _306: isize;
    let mut _307: isize;
    let mut _308: isize;
    let mut _309: isize;
    let mut _310: isize;
    let mut _311: isize;
    let mut _312: isize;
    let mut _313: isize;
    let mut _314: isize;
    let mut _315: isize;
    let mut _316: isize;
    let mut _317: isize;
    let mut _318: isize;
    let mut _319: isize;
    let mut _320: isize;
    let mut _321: isize;
    let mut _322: isize;
    let mut _323: isize;
    let mut _324: isize;
    let mut _325: isize;
    let mut _326: isize;
    let mut _327: isize;
    let mut _328: isize;
    let mut _329: isize;
    let mut _330: isize;
    let mut _331: isize;
    let mut _332: isize;
    let mut _333: isize;
    let mut _334: isize;
    let mut _335: isize;
    let mut _336: isize;
    let mut _337: isize;
    let mut _338: isize;
    let mut _339: isize;
    let mut _340: isize;
    let mut _341: isize;
    let mut _342: isize;
    let mut _343: isize;
    let mut _344: isize;
    let mut _345: isize;
    let mut _346: isize;
    let mut _347: isize;
    let mut _348: isize;
    let mut _349: isize;
    let mut _350: isize;
    let mut _351: isize;
    let mut _352: isize;
    let mut _353: isize;
    let mut _354: isize;
    let mut _355: isize;
    let mut _356: isize;
    let mut _357: isize;
    let mut _358: *const solend_sdk::state::Reserve;
    let mut _359: *const solend_sdk::state::Reserve;
    scope 1 {
        debug account_info_iter => _13;
        let _16: &solana_program::account_info::AccountInfo<'_>;
        let _21: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _24: &solana_program::account_info::AccountInfo<'_>;
        scope 2 {
            debug source_liquidity_info => _16;
            let _25: &solana_program::account_info::AccountInfo<'_>;
            let _30: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _33: &solana_program::account_info::AccountInfo<'_>;
            scope 7 {
                debug user_collateral_info => _25;
                let _34: &solana_program::account_info::AccountInfo<'_>;
                let _39: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _42: &solana_program::account_info::AccountInfo<'_>;
                scope 12 {
                    debug reserve_info => _34;
                    let _43: &solana_program::account_info::AccountInfo<'_>;
                    let _48: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _51: &solana_program::account_info::AccountInfo<'_>;
                    scope 17 {
                        debug reserve_liquidity_supply_info => _43;
                        let _52: &solana_program::account_info::AccountInfo<'_>;
                        let _57: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _60: &solana_program::account_info::AccountInfo<'_>;
                        scope 22 {
                            debug reserve_collateral_mint_info => _52;
                            let _61: &solana_program::account_info::AccountInfo<'_>;
                            let _66: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                            let _69: &solana_program::account_info::AccountInfo<'_>;
                            scope 27 {
                                debug lending_market_info => _61;
                                let _70: &solana_program::account_info::AccountInfo<'_>;
                                let _75: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                let _78: &solana_program::account_info::AccountInfo<'_>;
                                scope 32 {
                                    debug lending_market_authority_info => _70;
                                    let _79: &solana_program::account_info::AccountInfo<'_>;
                                    let _84: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                    let _87: &solana_program::account_info::AccountInfo<'_>;
                                    scope 37 {
                                        debug destination_collateral_info => _79;
                                        let _88: &solana_program::account_info::AccountInfo<'_>;
                                        let _93: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _96: &solana_program::account_info::AccountInfo<'_>;
                                        scope 42 {
                                            debug obligation_info => _88;
                                            let _97: &solana_program::account_info::AccountInfo<'_>;
                                            let _102: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                            let _105: &solana_program::account_info::AccountInfo<'_>;
                                            scope 47 {
                                                debug obligation_owner_info => _97;
                                                let _106: &solana_program::account_info::AccountInfo<'_>;
                                                let _111: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                let _114: &solana_program::account_info::AccountInfo<'_>;
                                                scope 52 {
                                                    debug _pyth_price_info => _106;
                                                    let _115: &solana_program::account_info::AccountInfo<'_>;
                                                    let _120: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                    let _123: &solana_program::account_info::AccountInfo<'_>;
                                                    scope 57 {
                                                        debug _switchboard_feed_info => _115;
                                                        let _124: &solana_program::account_info::AccountInfo<'_>;
                                                        let _129: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                        let _132: &solana_program::account_info::AccountInfo<'_>;
                                                        scope 62 {
                                                            debug user_transfer_authority_info => _124;
                                                            let _133: &solana_program::clock::Clock;
                                                            let _138: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                            let _141: solana_program::clock::Clock;
                                                            scope 67 {
                                                                debug clock => _133;
                                                                let _142: &solana_program::account_info::AccountInfo<'_>;
                                                                let _147: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                let _150: &solana_program::account_info::AccountInfo<'_>;
                                                                scope 72 {
                                                                    debug token_program_id => _142;
                                                                    let _158: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                    let _161: ();
                                                                    let _162: u64;
                                                                    let _178: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                    let _181: u64;
                                                                    scope 77 {
                                                                        debug residual => _158;
                                                                        scope 78 {
                                                                        }
                                                                    }
                                                                    scope 79 {
                                                                        debug val => _161;
                                                                        scope 80 {
                                                                        }
                                                                    }
                                                                    scope 81 {
                                                                        debug collateral_amount => _162;
                                                                        let _189: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                        let _192: ();
                                                                        let _208: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                        let _211: ();
                                                                        let mut _212: std::boxed::Box<solend_sdk::state::Reserve>;
                                                                        let _225: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                        let _228: solend_sdk::state::Reserve;
                                                                        scope 86 {
                                                                            debug residual => _189;
                                                                            scope 87 {
                                                                            }
                                                                        }
                                                                        scope 88 {
                                                                            debug val => _192;
                                                                            scope 89 {
                                                                            }
                                                                        }
                                                                        scope 90 {
                                                                            debug residual => _208;
                                                                            scope 91 {
                                                                            }
                                                                        }
                                                                        scope 92 {
                                                                            debug val => _211;
                                                                            scope 93 {
                                                                            }
                                                                        }
                                                                        scope 94 {
                                                                            debug reserve => _212;
                                                                            let _244: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                            let _247: ();
                                                                            let mut _360: *const ();
                                                                            let mut _361: usize;
                                                                            let mut _362: usize;
                                                                            let mut _363: usize;
                                                                            let mut _364: usize;
                                                                            let mut _365: bool;
                                                                            scope 99 {
                                                                                debug residual => _244;
                                                                                scope 100 {
                                                                                }
                                                                            }
                                                                            scope 101 {
                                                                                debug val => _247;
                                                                                scope 102 {
                                                                                }
                                                                            }
                                                                        }
                                                                        scope 95 {
                                                                            debug residual => _225;
                                                                            scope 96 {
                                                                            }
                                                                        }
                                                                        scope 97 {
                                                                            debug val => _228;
                                                                            scope 98 {
                                                                            }
                                                                        }
                                                                    }
                                                                    scope 82 {
                                                                        debug residual => _178;
                                                                        scope 83 {
                                                                        }
                                                                    }
                                                                    scope 84 {
                                                                        debug val => _181;
                                                                        scope 85 {
                                                                        }
                                                                    }
                                                                }
                                                                scope 73 {
                                                                    debug residual => _147;
                                                                    scope 74 {
                                                                    }
                                                                }
                                                                scope 75 {
                                                                    debug val => _150;
                                                                    scope 76 {
                                                                    }
                                                                }
                                                            }
                                                            scope 68 {
                                                                debug residual => _138;
                                                                scope 69 {
                                                                }
                                                            }
                                                            scope 70 {
                                                                debug val => _141;
                                                                scope 71 {
                                                                }
                                                            }
                                                        }
                                                        scope 63 {
                                                            debug residual => _129;
                                                            scope 64 {
                                                            }
                                                        }
                                                        scope 65 {
                                                            debug val => _132;
                                                            scope 66 {
                                                            }
                                                        }
                                                    }
                                                    scope 58 {
                                                        debug residual => _120;
                                                        scope 59 {
                                                        }
                                                    }
                                                    scope 60 {
                                                        debug val => _123;
                                                        scope 61 {
                                                        }
                                                    }
                                                }
                                                scope 53 {
                                                    debug residual => _111;
                                                    scope 54 {
                                                    }
                                                }
                                                scope 55 {
                                                    debug val => _114;
                                                    scope 56 {
                                                    }
                                                }
                                            }
                                            scope 48 {
                                                debug residual => _102;
                                                scope 49 {
                                                }
                                            }
                                            scope 50 {
                                                debug val => _105;
                                                scope 51 {
                                                }
                                            }
                                        }
                                        scope 43 {
                                            debug residual => _93;
                                            scope 44 {
                                            }
                                        }
                                        scope 45 {
                                            debug val => _96;
                                            scope 46 {
                                            }
                                        }
                                    }
                                    scope 38 {
                                        debug residual => _84;
                                        scope 39 {
                                        }
                                    }
                                    scope 40 {
                                        debug val => _87;
                                        scope 41 {
                                        }
                                    }
                                }
                                scope 33 {
                                    debug residual => _75;
                                    scope 34 {
                                    }
                                }
                                scope 35 {
                                    debug val => _78;
                                    scope 36 {
                                    }
                                }
                            }
                            scope 28 {
                                debug residual => _66;
                                scope 29 {
                                }
                            }
                            scope 30 {
                                debug val => _69;
                                scope 31 {
                                }
                            }
                        }
                        scope 23 {
                            debug residual => _57;
                            scope 24 {
                            }
                        }
                        scope 25 {
                            debug val => _60;
                            scope 26 {
                            }
                        }
                    }
                    scope 18 {
                        debug residual => _48;
                        scope 19 {
                        }
                    }
                    scope 20 {
                        debug val => _51;
                        scope 21 {
                        }
                    }
                }
                scope 13 {
                    debug residual => _39;
                    scope 14 {
                    }
                }
                scope 15 {
                    debug val => _42;
                    scope 16 {
                    }
                }
            }
            scope 8 {
                debug residual => _30;
                scope 9 {
                }
            }
            scope 10 {
                debug val => _33;
                scope 11 {
                }
            }
        }
        scope 3 {
            debug residual => _21;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _24;
            scope 6 {
            }
        }
    }

    bb0: {
        _252 = const false;
        _251 = const false;
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _2;
        _5 = Eq(move _6, const 0_u64);
        switchInt(move _5) -> [0: bb4, otherwise: bb1];
    }

    bb1: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = const "Liquidity amount provided cannot be zero";
        _9 = &(*_10);
        _8 = solana_program::log::sol_log(move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_10);
        StorageDead(_8);
        StorageLive(_11);
        StorageLive(_12);
        _12 = InvalidAmount;
        _11 = <LendingError as Into<ProgramError>>::into(move _12) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_12);
        _0 = Result::<(), ProgramError>::Err(move _11);
        StorageDead(_11);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb142;
    }

    bb4: {
        StorageDead(_6);
        _4 = const ();
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &(*_3);
        _14 = bytemuck::core::slice::<impl [AccountInfo<'_>]>::iter(move _15) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_15);
        _13 = &mut _14;
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &mut (*_13);
        _18 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _19) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_19);
        _17 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _18) -> [return: bb7, unwind: bb146];
    }

    bb7: {
        StorageDead(_18);
        _20 = discriminant(_17);
        switchInt(move _20) -> [0: bb8, 1: bb10, otherwise: bb9];
    }

    bb8: {
        StorageLive(_24);
        _24 = ((_17 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _16 = _24;
        StorageDead(_24);
        _253 = discriminant(_17);
        StorageDead(_17);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &mut (*_13);
        _27 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _28) -> [return: bb12, unwind continue];
    }

    bb9: {
        unreachable;
    }

    bb10: {
        StorageLive(_21);
        _21 = move ((_17 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_23);
        _23 = move _21;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _23) -> [return: bb11, unwind: bb167];
    }

    bb11: {
        StorageDead(_23);
        StorageDead(_21);
        _335 = discriminant(_17);
        StorageDead(_17);
        goto -> bb141;
    }

    bb12: {
        StorageDead(_28);
        _26 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _27) -> [return: bb13, unwind: bb146];
    }

    bb13: {
        StorageDead(_27);
        _29 = discriminant(_26);
        switchInt(move _29) -> [0: bb14, 1: bb15, otherwise: bb9];
    }

    bb14: {
        StorageLive(_33);
        _33 = ((_26 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _25 = _33;
        StorageDead(_33);
        _255 = discriminant(_26);
        StorageDead(_26);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut (*_13);
        _36 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _37) -> [return: bb17, unwind continue];
    }

    bb15: {
        StorageLive(_30);
        _30 = move ((_26 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_32);
        _32 = move _30;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _32) -> [return: bb16, unwind: bb166];
    }

    bb16: {
        StorageDead(_32);
        StorageDead(_30);
        _333 = discriminant(_26);
        StorageDead(_26);
        goto -> bb140;
    }

    bb17: {
        StorageDead(_37);
        _35 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _36) -> [return: bb18, unwind: bb146];
    }

    bb18: {
        StorageDead(_36);
        _38 = discriminant(_35);
        switchInt(move _38) -> [0: bb19, 1: bb20, otherwise: bb9];
    }

    bb19: {
        StorageLive(_42);
        _42 = ((_35 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _34 = _42;
        StorageDead(_42);
        _257 = discriminant(_35);
        StorageDead(_35);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &mut (*_13);
        _45 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _46) -> [return: bb22, unwind continue];
    }

    bb20: {
        StorageLive(_39);
        _39 = move ((_35 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_41);
        _41 = move _39;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _41) -> [return: bb21, unwind: bb165];
    }

    bb21: {
        StorageDead(_41);
        StorageDead(_39);
        _331 = discriminant(_35);
        StorageDead(_35);
        goto -> bb139;
    }

    bb22: {
        StorageDead(_46);
        _44 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _45) -> [return: bb23, unwind: bb146];
    }

    bb23: {
        StorageDead(_45);
        _47 = discriminant(_44);
        switchInt(move _47) -> [0: bb24, 1: bb25, otherwise: bb9];
    }

    bb24: {
        StorageLive(_51);
        _51 = ((_44 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _43 = _51;
        StorageDead(_51);
        _259 = discriminant(_44);
        StorageDead(_44);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &mut (*_13);
        _54 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _55) -> [return: bb27, unwind continue];
    }

    bb25: {
        StorageLive(_48);
        _48 = move ((_44 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_50);
        _50 = move _48;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _50) -> [return: bb26, unwind: bb164];
    }

    bb26: {
        StorageDead(_50);
        StorageDead(_48);
        _329 = discriminant(_44);
        StorageDead(_44);
        goto -> bb138;
    }

    bb27: {
        StorageDead(_55);
        _53 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _54) -> [return: bb28, unwind: bb146];
    }

    bb28: {
        StorageDead(_54);
        _56 = discriminant(_53);
        switchInt(move _56) -> [0: bb29, 1: bb30, otherwise: bb9];
    }

    bb29: {
        StorageLive(_60);
        _60 = ((_53 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _52 = _60;
        StorageDead(_60);
        _261 = discriminant(_53);
        StorageDead(_53);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &mut (*_13);
        _63 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _64) -> [return: bb32, unwind continue];
    }

    bb30: {
        StorageLive(_57);
        _57 = move ((_53 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_59);
        _59 = move _57;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _59) -> [return: bb31, unwind: bb163];
    }

    bb31: {
        StorageDead(_59);
        StorageDead(_57);
        _327 = discriminant(_53);
        StorageDead(_53);
        goto -> bb137;
    }

    bb32: {
        StorageDead(_64);
        _62 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _63) -> [return: bb33, unwind: bb146];
    }

    bb33: {
        StorageDead(_63);
        _65 = discriminant(_62);
        switchInt(move _65) -> [0: bb34, 1: bb35, otherwise: bb9];
    }

    bb34: {
        StorageLive(_69);
        _69 = ((_62 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _61 = _69;
        StorageDead(_69);
        _263 = discriminant(_62);
        StorageDead(_62);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &mut (*_13);
        _72 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _73) -> [return: bb37, unwind continue];
    }

    bb35: {
        StorageLive(_66);
        _66 = move ((_62 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_68);
        _68 = move _66;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _68) -> [return: bb36, unwind: bb162];
    }

    bb36: {
        StorageDead(_68);
        StorageDead(_66);
        _325 = discriminant(_62);
        StorageDead(_62);
        goto -> bb136;
    }

    bb37: {
        StorageDead(_73);
        _71 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _72) -> [return: bb38, unwind: bb146];
    }

    bb38: {
        StorageDead(_72);
        _74 = discriminant(_71);
        switchInt(move _74) -> [0: bb39, 1: bb40, otherwise: bb9];
    }

    bb39: {
        StorageLive(_78);
        _78 = ((_71 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _70 = _78;
        StorageDead(_78);
        _265 = discriminant(_71);
        StorageDead(_71);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        _82 = &mut (*_13);
        _81 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _82) -> [return: bb42, unwind continue];
    }

    bb40: {
        StorageLive(_75);
        _75 = move ((_71 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_77);
        _77 = move _75;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _77) -> [return: bb41, unwind: bb161];
    }

    bb41: {
        StorageDead(_77);
        StorageDead(_75);
        _323 = discriminant(_71);
        StorageDead(_71);
        goto -> bb135;
    }

    bb42: {
        StorageDead(_82);
        _80 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _81) -> [return: bb43, unwind: bb146];
    }

    bb43: {
        StorageDead(_81);
        _83 = discriminant(_80);
        switchInt(move _83) -> [0: bb44, 1: bb45, otherwise: bb9];
    }

    bb44: {
        StorageLive(_87);
        _87 = ((_80 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _79 = _87;
        StorageDead(_87);
        _267 = discriminant(_80);
        StorageDead(_80);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        _91 = &mut (*_13);
        _90 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _91) -> [return: bb47, unwind continue];
    }

    bb45: {
        StorageLive(_84);
        _84 = move ((_80 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_86);
        _86 = move _84;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _86) -> [return: bb46, unwind: bb160];
    }

    bb46: {
        StorageDead(_86);
        StorageDead(_84);
        _321 = discriminant(_80);
        StorageDead(_80);
        goto -> bb134;
    }

    bb47: {
        StorageDead(_91);
        _89 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _90) -> [return: bb48, unwind: bb146];
    }

    bb48: {
        StorageDead(_90);
        _92 = discriminant(_89);
        switchInt(move _92) -> [0: bb49, 1: bb50, otherwise: bb9];
    }

    bb49: {
        StorageLive(_96);
        _96 = ((_89 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _88 = _96;
        StorageDead(_96);
        _269 = discriminant(_89);
        StorageDead(_89);
        StorageLive(_97);
        StorageLive(_98);
        StorageLive(_99);
        StorageLive(_100);
        _100 = &mut (*_13);
        _99 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _100) -> [return: bb52, unwind continue];
    }

    bb50: {
        StorageLive(_93);
        _93 = move ((_89 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_95);
        _95 = move _93;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _95) -> [return: bb51, unwind: bb159];
    }

    bb51: {
        StorageDead(_95);
        StorageDead(_93);
        _319 = discriminant(_89);
        StorageDead(_89);
        goto -> bb133;
    }

    bb52: {
        StorageDead(_100);
        _98 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _99) -> [return: bb53, unwind: bb146];
    }

    bb53: {
        StorageDead(_99);
        _101 = discriminant(_98);
        switchInt(move _101) -> [0: bb54, 1: bb55, otherwise: bb9];
    }

    bb54: {
        StorageLive(_105);
        _105 = ((_98 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _97 = _105;
        StorageDead(_105);
        _271 = discriminant(_98);
        StorageDead(_98);
        StorageLive(_106);
        StorageLive(_107);
        StorageLive(_108);
        StorageLive(_109);
        _109 = &mut (*_13);
        _108 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _109) -> [return: bb57, unwind continue];
    }

    bb55: {
        StorageLive(_102);
        _102 = move ((_98 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_104);
        _104 = move _102;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _104) -> [return: bb56, unwind: bb158];
    }

    bb56: {
        StorageDead(_104);
        StorageDead(_102);
        _317 = discriminant(_98);
        StorageDead(_98);
        goto -> bb132;
    }

    bb57: {
        StorageDead(_109);
        _107 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _108) -> [return: bb58, unwind: bb146];
    }

    bb58: {
        StorageDead(_108);
        _110 = discriminant(_107);
        switchInt(move _110) -> [0: bb59, 1: bb60, otherwise: bb9];
    }

    bb59: {
        StorageLive(_114);
        _114 = ((_107 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _106 = _114;
        StorageDead(_114);
        _273 = discriminant(_107);
        StorageDead(_107);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        _118 = &mut (*_13);
        _117 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _118) -> [return: bb62, unwind continue];
    }

    bb60: {
        StorageLive(_111);
        _111 = move ((_107 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_113);
        _113 = move _111;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _113) -> [return: bb61, unwind: bb157];
    }

    bb61: {
        StorageDead(_113);
        StorageDead(_111);
        _315 = discriminant(_107);
        StorageDead(_107);
        goto -> bb131;
    }

    bb62: {
        StorageDead(_118);
        _116 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _117) -> [return: bb63, unwind: bb146];
    }

    bb63: {
        StorageDead(_117);
        _119 = discriminant(_116);
        switchInt(move _119) -> [0: bb64, 1: bb65, otherwise: bb9];
    }

    bb64: {
        StorageLive(_123);
        _123 = ((_116 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _115 = _123;
        StorageDead(_123);
        _275 = discriminant(_116);
        StorageDead(_116);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        _127 = &mut (*_13);
        _126 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _127) -> [return: bb67, unwind continue];
    }

    bb65: {
        StorageLive(_120);
        _120 = move ((_116 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_122);
        _122 = move _120;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _122) -> [return: bb66, unwind: bb156];
    }

    bb66: {
        StorageDead(_122);
        StorageDead(_120);
        _313 = discriminant(_116);
        StorageDead(_116);
        goto -> bb130;
    }

    bb67: {
        StorageDead(_127);
        _125 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _126) -> [return: bb68, unwind: bb146];
    }

    bb68: {
        StorageDead(_126);
        _128 = discriminant(_125);
        switchInt(move _128) -> [0: bb69, 1: bb70, otherwise: bb9];
    }

    bb69: {
        StorageLive(_132);
        _132 = ((_125 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _124 = _132;
        StorageDead(_132);
        _277 = discriminant(_125);
        StorageDead(_125);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        _136 = <Clock as Sysvar>::get() -> [return: bb72, unwind continue];
    }

    bb70: {
        StorageLive(_129);
        _129 = move ((_125 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_131);
        _131 = move _129;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _131) -> [return: bb71, unwind: bb155];
    }

    bb71: {
        StorageDead(_131);
        StorageDead(_129);
        _311 = discriminant(_125);
        StorageDead(_125);
        goto -> bb129;
    }

    bb72: {
        _135 = <Result<Clock, ProgramError> as Try>::branch(move _136) -> [return: bb73, unwind: bb146];
    }

    bb73: {
        StorageDead(_136);
        _137 = discriminant(_135);
        switchInt(move _137) -> [0: bb74, 1: bb75, otherwise: bb9];
    }

    bb74: {
        StorageLive(_141);
        _141 = move ((_135 as Continue).0: solana_program::clock::Clock);
        _134 = move _141;
        StorageDead(_141);
        _133 = &_134;
        _279 = discriminant(_135);
        StorageDead(_135);
        StorageLive(_142);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        _145 = &mut (*_13);
        _144 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _145) -> [return: bb77, unwind continue];
    }

    bb75: {
        StorageLive(_138);
        _138 = move ((_135 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_140);
        _140 = move _138;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _140) -> [return: bb76, unwind: bb154];
    }

    bb76: {
        StorageDead(_140);
        StorageDead(_138);
        _309 = discriminant(_135);
        StorageDead(_135);
        goto -> bb128;
    }

    bb77: {
        StorageDead(_145);
        _143 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _144) -> [return: bb78, unwind: bb146];
    }

    bb78: {
        StorageDead(_144);
        _146 = discriminant(_143);
        switchInt(move _146) -> [0: bb79, 1: bb80, otherwise: bb9];
    }

    bb79: {
        StorageLive(_150);
        _150 = ((_143 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _142 = _150;
        StorageDead(_150);
        _281 = discriminant(_143);
        StorageDead(_143);
        StorageLive(_151);
        StorageLive(_152);
        StorageLive(_153);
        StorageLive(_154);
        _154 = &(*_1);
        StorageLive(_155);
        _155 = &(*_34);
        StorageLive(_156);
        _156 = &(*_133);
        _153 = _refresh_reserve_interest(move _154, move _155, move _156) -> [return: bb82, unwind continue];
    }

    bb80: {
        StorageLive(_147);
        _147 = move ((_143 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_149);
        _149 = move _147;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _149) -> [return: bb81, unwind: bb153];
    }

    bb81: {
        StorageDead(_149);
        StorageDead(_147);
        _307 = discriminant(_143);
        StorageDead(_143);
        goto -> bb127;
    }

    bb82: {
        StorageDead(_156);
        StorageDead(_155);
        StorageDead(_154);
        _152 = <Result<(), ProgramError> as Try>::branch(move _153) -> [return: bb83, unwind: bb146];
    }

    bb83: {
        StorageDead(_153);
        _157 = discriminant(_152);
        switchInt(move _157) -> [0: bb84, 1: bb85, otherwise: bb9];
    }

    bb84: {
        StorageLive(_161);
        _161 = ((_152 as Continue).0: ());
        _151 = _161;
        StorageDead(_161);
        _283 = discriminant(_152);
        StorageDead(_152);
        StorageDead(_151);
        StorageLive(_162);
        StorageLive(_163);
        StorageLive(_164);
        StorageLive(_165);
        _165 = &(*_1);
        StorageLive(_166);
        _166 = _2;
        StorageLive(_167);
        _167 = &(*_16);
        StorageLive(_168);
        _168 = &(*_25);
        StorageLive(_169);
        _169 = &(*_34);
        StorageLive(_170);
        _170 = &(*_43);
        StorageLive(_171);
        _171 = &(*_52);
        StorageLive(_172);
        _172 = &(*_61);
        StorageLive(_173);
        _173 = &(*_70);
        StorageLive(_174);
        _174 = &(*_124);
        StorageLive(_175);
        _175 = &(*_133);
        StorageLive(_176);
        _176 = &(*_142);
        _164 = _deposit_reserve_liquidity(move _165, move _166, move _167, move _168, move _169, move _170, move _171, move _172, move _173, move _174, move _175, move _176) -> [return: bb87, unwind continue];
    }

    bb85: {
        StorageLive(_158);
        _158 = move ((_152 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_160);
        _160 = move _158;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _160) -> [return: bb86, unwind: bb152];
    }

    bb86: {
        StorageDead(_160);
        StorageDead(_158);
        _305 = discriminant(_152);
        StorageDead(_152);
        StorageDead(_151);
        goto -> bb127;
    }

    bb87: {
        StorageDead(_176);
        StorageDead(_175);
        StorageDead(_174);
        StorageDead(_173);
        StorageDead(_172);
        StorageDead(_171);
        StorageDead(_170);
        StorageDead(_169);
        StorageDead(_168);
        StorageDead(_167);
        StorageDead(_166);
        StorageDead(_165);
        _163 = <Result<u64, ProgramError> as Try>::branch(move _164) -> [return: bb88, unwind: bb146];
    }

    bb88: {
        StorageDead(_164);
        _177 = discriminant(_163);
        switchInt(move _177) -> [0: bb89, 1: bb90, otherwise: bb9];
    }

    bb89: {
        StorageLive(_181);
        _181 = ((_163 as Continue).0: u64);
        _162 = _181;
        StorageDead(_181);
        _285 = discriminant(_163);
        StorageDead(_163);
        StorageLive(_182);
        StorageLive(_183);
        StorageLive(_184);
        StorageLive(_185);
        _185 = &(*_1);
        StorageLive(_186);
        _186 = &(*_34);
        StorageLive(_187);
        _187 = &(*_133);
        _184 = _refresh_reserve_interest(move _185, move _186, move _187) -> [return: bb92, unwind continue];
    }

    bb90: {
        StorageLive(_178);
        _178 = move ((_163 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_180);
        _180 = move _178;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _180) -> [return: bb91, unwind: bb151];
    }

    bb91: {
        StorageDead(_180);
        StorageDead(_178);
        _303 = discriminant(_163);
        StorageDead(_163);
        goto -> bb126;
    }

    bb92: {
        StorageDead(_187);
        StorageDead(_186);
        StorageDead(_185);
        _183 = <Result<(), ProgramError> as Try>::branch(move _184) -> [return: bb93, unwind: bb146];
    }

    bb93: {
        StorageDead(_184);
        _188 = discriminant(_183);
        switchInt(move _188) -> [0: bb94, 1: bb95, otherwise: bb9];
    }

    bb94: {
        StorageLive(_192);
        _192 = ((_183 as Continue).0: ());
        _182 = _192;
        StorageDead(_192);
        _287 = discriminant(_183);
        StorageDead(_183);
        StorageDead(_182);
        StorageLive(_193);
        StorageLive(_194);
        StorageLive(_195);
        StorageLive(_196);
        _196 = &(*_1);
        StorageLive(_197);
        _197 = _162;
        StorageLive(_198);
        _198 = &(*_25);
        StorageLive(_199);
        _199 = &(*_79);
        StorageLive(_200);
        _200 = &(*_34);
        StorageLive(_201);
        _201 = &(*_88);
        StorageLive(_202);
        _202 = &(*_61);
        StorageLive(_203);
        _203 = &(*_97);
        StorageLive(_204);
        _204 = &(*_124);
        StorageLive(_205);
        _205 = &(*_133);
        StorageLive(_206);
        _206 = &(*_142);
        _195 = _deposit_obligation_collateral(move _196, move _197, move _198, move _199, move _200, move _201, move _202, move _203, move _204, move _205, move _206) -> [return: bb97, unwind continue];
    }

    bb95: {
        StorageLive(_189);
        _189 = move ((_183 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_191);
        _191 = move _189;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _191) -> [return: bb96, unwind: bb150];
    }

    bb96: {
        StorageDead(_191);
        StorageDead(_189);
        _301 = discriminant(_183);
        StorageDead(_183);
        StorageDead(_182);
        goto -> bb126;
    }

    bb97: {
        StorageDead(_206);
        StorageDead(_205);
        StorageDead(_204);
        StorageDead(_203);
        StorageDead(_202);
        StorageDead(_201);
        StorageDead(_200);
        StorageDead(_199);
        StorageDead(_198);
        StorageDead(_197);
        StorageDead(_196);
        _194 = <Result<(), ProgramError> as Try>::branch(move _195) -> [return: bb98, unwind: bb146];
    }

    bb98: {
        StorageDead(_195);
        _207 = discriminant(_194);
        switchInt(move _207) -> [0: bb99, 1: bb100, otherwise: bb9];
    }

    bb99: {
        StorageLive(_211);
        _211 = ((_194 as Continue).0: ());
        _193 = _211;
        StorageDead(_211);
        _289 = discriminant(_194);
        StorageDead(_194);
        StorageDead(_193);
        StorageLive(_212);
        StorageLive(_213);
        StorageLive(_214);
        StorageLive(_215);
        StorageLive(_216);
        StorageLive(_217);
        StorageLive(_218);
        StorageLive(_219);
        StorageLive(_220);
        StorageLive(_221);
        StorageLive(_222);
        StorageLive(_223);
        _223 = &((*_34).2: std::rc::Rc<std::cell::RefCell<&mut [u8]>>);
        _222 = <Rc<RefCell<&mut [u8]>> as Deref>::deref(move _223) -> [return: bb102, unwind continue];
    }

    bb100: {
        StorageLive(_208);
        _208 = move ((_194 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_210);
        _210 = move _208;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _210) -> [return: bb101, unwind: bb149];
    }

    bb101: {
        StorageDead(_210);
        StorageDead(_208);
        _299 = discriminant(_194);
        StorageDead(_194);
        StorageDead(_193);
        goto -> bb126;
    }

    bb102: {
        _221 = &(*_222);
        StorageDead(_223);
        _220 = RefCell::<&mut [u8]>::borrow(move _221) -> [return: bb103, unwind continue];
    }

    bb103: {
        StorageDead(_221);
        _219 = &_220;
        _218 = &(*_219);
        _217 = <Ref<'_, &mut [u8]> as Deref>::deref(move _218) -> [return: bb104, unwind: bb145];
    }

    bb104: {
        _249 = deref_copy (*_217);
        _216 = &(*_249);
        StorageDead(_218);
        _215 = <Reserve as Pack>::unpack(move _216) -> [return: bb105, unwind: bb145];
    }

    bb105: {
        StorageDead(_216);
        _214 = <Result<Reserve, ProgramError> as Try>::branch(move _215) -> [return: bb106, unwind: bb145];
    }

    bb106: {
        _251 = const true;
        _252 = const true;
        StorageDead(_215);
        _224 = discriminant(_214);
        switchInt(move _224) -> [0: bb107, 1: bb108, otherwise: bb9];
    }

    bb107: {
        StorageLive(_228);
        _228 = move ((_214 as Continue).0: solend_sdk::state::Reserve);
        _213 = move _228;
        StorageDead(_228);
        _212 = Box::<Reserve>::new(move _213) -> [return: bb110, unwind: bb148];
    }

    bb108: {
        StorageLive(_225);
        _225 = move ((_214 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_227);
        _227 = move _225;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _227) -> [return: bb109, unwind: bb148];
    }

    bb109: {
        StorageDead(_227);
        StorageDead(_225);
        StorageDead(_213);
        _297 = discriminant(_214);
        drop(_220) -> [return: bb124, unwind: bb146];
    }

    bb110: {
        StorageDead(_213);
        _291 = discriminant(_214);
        drop(_220) -> [return: bb111, unwind: bb144];
    }

    bb111: {
        StorageDead(_222);
        StorageDead(_220);
        StorageDead(_219);
        StorageDead(_217);
        _251 = const false;
        _252 = const false;
        StorageDead(_214);
        StorageLive(_229);
        StorageLive(_230);
        _358 = (((_212.0: std::ptr::Unique<solend_sdk::state::Reserve>).0: std::ptr::NonNull<solend_sdk::state::Reserve>).0: *const solend_sdk::state::Reserve);
        _230 = &mut ((*_358).1: solend_sdk::state::LastUpdate);
        _229 = LastUpdate::mark_stale(move _230) -> [return: bb112, unwind: bb144];
    }

    bb112: {
        StorageDead(_230);
        StorageDead(_229);
        StorageLive(_231);
        StorageLive(_232);
        StorageLive(_233);
        StorageLive(_234);
        _359 = (((_212.0: std::ptr::Unique<solend_sdk::state::Reserve>).0: std::ptr::NonNull<solend_sdk::state::Reserve>).0: *const solend_sdk::state::Reserve);
        _360 = _359 as *const () (PtrToPtr);
        _361 = _360 as usize (Transmute);
        _362 = AlignOf(solend_sdk::state::Reserve);
        _363 = Sub(_362, const 1_usize);
        _364 = BitAnd(_361, _363);
        _365 = Eq(_364, const 0_usize);
        assert(_365, "misaligned pointer dereference: address must be a multiple of {} but is {}", _362, _361) -> [success: bb168, unwind unreachable];
    }

    bb113: {
        _240 = &(*_241);
        StorageDead(_242);
        _239 = RefCell::<&mut [u8]>::borrow_mut(move _240) -> [return: bb114, unwind: bb144];
    }

    bb114: {
        StorageDead(_240);
        _238 = &mut _239;
        _237 = &mut (*_238);
        _236 = <RefMut<'_, &mut [u8]> as DerefMut>::deref_mut(move _237) -> [return: bb115, unwind: bb143];
    }

    bb115: {
        _250 = deref_copy (*_236);
        _235 = &mut (*_250);
        StorageDead(_237);
        _233 = <Reserve as Pack>::pack(move _234, move _235) -> [return: bb116, unwind: bb143];
    }

    bb116: {
        StorageDead(_235);
        StorageDead(_234);
        _232 = <Result<(), ProgramError> as Try>::branch(move _233) -> [return: bb117, unwind: bb143];
    }

    bb117: {
        StorageDead(_233);
        _243 = discriminant(_232);
        switchInt(move _243) -> [0: bb118, 1: bb119, otherwise: bb9];
    }

    bb118: {
        StorageLive(_247);
        _247 = ((_232 as Continue).0: ());
        _231 = _247;
        StorageDead(_247);
        _293 = discriminant(_232);
        drop(_239) -> [return: bb121, unwind: bb144];
    }

    bb119: {
        StorageLive(_244);
        _244 = move ((_232 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_246);
        _246 = move _244;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _246) -> [return: bb120, unwind: bb147];
    }

    bb120: {
        StorageDead(_246);
        StorageDead(_244);
        _295 = discriminant(_232);
        drop(_239) -> [return: bb123, unwind: bb144];
    }

    bb121: {
        StorageDead(_241);
        StorageDead(_239);
        StorageDead(_238);
        StorageDead(_236);
        StorageDead(_232);
        StorageDead(_231);
        StorageLive(_248);
        _248 = ();
        _0 = Result::<(), ProgramError>::Ok(move _248);
        StorageDead(_248);
        drop(_212) -> [return: bb122, unwind: bb146];
    }

    bb122: {
        StorageDead(_212);
        StorageDead(_162);
        StorageDead(_142);
        StorageDead(_134);
        StorageDead(_133);
        StorageDead(_124);
        StorageDead(_115);
        StorageDead(_106);
        StorageDead(_97);
        StorageDead(_88);
        StorageDead(_79);
        StorageDead(_70);
        StorageDead(_61);
        StorageDead(_52);
        StorageDead(_43);
        StorageDead(_34);
        StorageDead(_25);
        StorageDead(_16);
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb142;
    }

    bb123: {
        StorageDead(_241);
        StorageDead(_239);
        StorageDead(_238);
        StorageDead(_236);
        StorageDead(_232);
        StorageDead(_231);
        drop(_212) -> [return: bb125, unwind: bb146];
    }

    bb124: {
        StorageDead(_222);
        StorageDead(_220);
        StorageDead(_219);
        StorageDead(_217);
        _251 = const false;
        _252 = const false;
        StorageDead(_214);
        goto -> bb125;
    }

    bb125: {
        StorageDead(_212);
        goto -> bb126;
    }

    bb126: {
        StorageDead(_162);
        goto -> bb127;
    }

    bb127: {
        StorageDead(_142);
        goto -> bb128;
    }

    bb128: {
        StorageDead(_134);
        StorageDead(_133);
        goto -> bb129;
    }

    bb129: {
        StorageDead(_124);
        goto -> bb130;
    }

    bb130: {
        StorageDead(_115);
        goto -> bb131;
    }

    bb131: {
        StorageDead(_106);
        goto -> bb132;
    }

    bb132: {
        StorageDead(_97);
        goto -> bb133;
    }

    bb133: {
        StorageDead(_88);
        goto -> bb134;
    }

    bb134: {
        StorageDead(_79);
        goto -> bb135;
    }

    bb135: {
        StorageDead(_70);
        goto -> bb136;
    }

    bb136: {
        StorageDead(_61);
        goto -> bb137;
    }

    bb137: {
        StorageDead(_52);
        goto -> bb138;
    }

    bb138: {
        StorageDead(_43);
        goto -> bb139;
    }

    bb139: {
        StorageDead(_34);
        goto -> bb140;
    }

    bb140: {
        StorageDead(_25);
        goto -> bb141;
    }

    bb141: {
        StorageDead(_16);
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb142;
    }

    bb142: {
        return;
    }

    bb143 (cleanup): {
        drop(_239) -> [return: bb144, unwind terminate(cleanup)];
    }

    bb144 (cleanup): {
        drop(_212) -> [return: bb146, unwind terminate(cleanup)];
    }

    bb145 (cleanup): {
        drop(_220) -> [return: bb146, unwind terminate(cleanup)];
    }

    bb146 (cleanup): {
        resume;
    }

    bb147 (cleanup): {
        _337 = discriminant(_232);
        goto -> bb143;
    }

    bb148 (cleanup): {
        _338 = discriminant(_214);
        goto -> bb145;
    }

    bb149 (cleanup): {
        _339 = discriminant(_194);
        goto -> bb146;
    }

    bb150 (cleanup): {
        _340 = discriminant(_183);
        goto -> bb146;
    }

    bb151 (cleanup): {
        _341 = discriminant(_163);
        goto -> bb146;
    }

    bb152 (cleanup): {
        _342 = discriminant(_152);
        goto -> bb146;
    }

    bb153 (cleanup): {
        _343 = discriminant(_143);
        goto -> bb146;
    }

    bb154 (cleanup): {
        _344 = discriminant(_135);
        goto -> bb146;
    }

    bb155 (cleanup): {
        _345 = discriminant(_125);
        goto -> bb146;
    }

    bb156 (cleanup): {
        _346 = discriminant(_116);
        goto -> bb146;
    }

    bb157 (cleanup): {
        _347 = discriminant(_107);
        goto -> bb146;
    }

    bb158 (cleanup): {
        _348 = discriminant(_98);
        goto -> bb146;
    }

    bb159 (cleanup): {
        _349 = discriminant(_89);
        goto -> bb146;
    }

    bb160 (cleanup): {
        _350 = discriminant(_80);
        goto -> bb146;
    }

    bb161 (cleanup): {
        _351 = discriminant(_71);
        goto -> bb146;
    }

    bb162 (cleanup): {
        _352 = discriminant(_62);
        goto -> bb146;
    }

    bb163 (cleanup): {
        _353 = discriminant(_53);
        goto -> bb146;
    }

    bb164 (cleanup): {
        _354 = discriminant(_44);
        goto -> bb146;
    }

    bb165 (cleanup): {
        _355 = discriminant(_35);
        goto -> bb146;
    }

    bb166 (cleanup): {
        _356 = discriminant(_26);
        goto -> bb146;
    }

    bb167 (cleanup): {
        _357 = discriminant(_17);
        goto -> bb146;
    }

    bb168: {
        _234 = move (*_359);
        StorageLive(_235);
        StorageLive(_236);
        StorageLive(_237);
        StorageLive(_238);
        StorageLive(_239);
        StorageLive(_240);
        StorageLive(_241);
        StorageLive(_242);
        _242 = &((*_34).2: std::rc::Rc<std::cell::RefCell<&mut [u8]>>);
        _241 = <Rc<RefCell<&mut [u8]>> as Deref>::deref(move _242) -> [return: bb113, unwind: bb144];
    }
}
