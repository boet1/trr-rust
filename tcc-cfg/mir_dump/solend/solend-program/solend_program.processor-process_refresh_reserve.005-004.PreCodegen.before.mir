// MIR for `process_refresh_reserve` before PreCodegen

fn process_refresh_reserve(_1: &Pubkey, _2: &[AccountInfo<'_>]) -> Result<(), ProgramError> {
    debug program_id => _1;
    debug accounts => _2;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _3: &mut std::iter::Peekable<std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>>;
    let mut _4: std::iter::Peekable<std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>>;
    let mut _5: std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _6: &[solana_program::account_info::AccountInfo<'_>];
    let mut _8: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _9: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _10: &mut std::iter::Peekable<std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>>;
    let mut _11: isize;
    let mut _13: !;
    let mut _14: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _17: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _18: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _19: &mut std::iter::Peekable<std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>>;
    let mut _20: isize;
    let mut _22: !;
    let mut _23: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _26: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _27: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _28: &mut std::iter::Peekable<std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>>;
    let mut _29: isize;
    let mut _31: !;
    let mut _32: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _35: solana_program::clock::Clock;
    let mut _36: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::clock::Clock>;
    let mut _37: std::result::Result<solana_program::clock::Clock, solana_program::program_error::ProgramError>;
    let mut _38: isize;
    let mut _40: !;
    let mut _41: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _44: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _45: &mut std::iter::Peekable<std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>>;
    let mut _46: &solana_program::pubkey::Pubkey;
    let mut _47: &solana_program::account_info::AccountInfo<'_>;
    let mut _48: &solana_program::account_info::AccountInfo<'_>;
    let mut _49: std::option::Option<&solana_program::account_info::AccountInfo<'_>>;
    let mut _50: &solana_program::account_info::AccountInfo<'_>;
    let mut _51: &solana_program::clock::Clock;
    let mut _52: std::option::Option<&solana_program::account_info::AccountInfo<'_>>;
    let mut _53: isize;
    let mut _54: isize;
    let mut _55: isize;
    let mut _56: isize;
    let mut _57: isize;
    let mut _58: isize;
    let mut _59: isize;
    let mut _60: isize;
    let mut _61: isize;
    let mut _62: isize;
    let mut _63: isize;
    let mut _64: isize;
    let mut _65: isize;
    let mut _66: isize;
    let mut _67: isize;
    let mut _68: isize;
    let mut _69: isize;
    let mut _70: isize;
    let mut _71: isize;
    let mut _72: isize;
    scope 1 {
        debug account_info_iter => _3;
        let _7: &solana_program::account_info::AccountInfo<'_>;
        let _12: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _15: &solana_program::account_info::AccountInfo<'_>;
        scope 2 {
            debug reserve_info => _7;
            let _16: &solana_program::account_info::AccountInfo<'_>;
            let _21: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _24: &solana_program::account_info::AccountInfo<'_>;
            scope 7 {
                debug pyth_price_info => _16;
                let _25: &solana_program::account_info::AccountInfo<'_>;
                let _30: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _33: &solana_program::account_info::AccountInfo<'_>;
                scope 12 {
                    debug switchboard_feed_info => _25;
                    let _34: &solana_program::clock::Clock;
                    let _39: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _42: solana_program::clock::Clock;
                    scope 17 {
                        debug clock => _34;
                        let _43: std::option::Option<&solana_program::account_info::AccountInfo<'_>>;
                        scope 22 {
                            debug extra_oracle_account_info => _43;
                        }
                    }
                    scope 18 {
                        debug residual => _39;
                        scope 19 {
                        }
                    }
                    scope 20 {
                        debug val => _42;
                        scope 21 {
                        }
                    }
                }
                scope 13 {
                    debug residual => _30;
                    scope 14 {
                    }
                }
                scope 15 {
                    debug val => _33;
                    scope 16 {
                    }
                }
            }
            scope 8 {
                debug residual => _21;
                scope 9 {
                }
            }
            scope 10 {
                debug val => _24;
                scope 11 {
                }
            }
        }
        scope 3 {
            debug residual => _12;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _15;
            scope 6 {
            }
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &(*_2);
        _5 = bytemuck::core::slice::<impl [AccountInfo<'_>]>::iter(move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        _4 = <std::slice::Iter<'_, AccountInfo<'_>> as Iterator>::peekable(move _5) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_5);
        _3 = &mut _4;
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &mut (*_3);
        _9 = next_account_info::<'_, '_, Peekable<std::slice::Iter<'_, AccountInfo<'_>>>>(move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        _8 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _9) -> [return: bb4, unwind: bb31];
    }

    bb4: {
        StorageDead(_9);
        _11 = discriminant(_8);
        switchInt(move _11) -> [0: bb5, 1: bb7, otherwise: bb6];
    }

    bb5: {
        StorageLive(_15);
        _15 = ((_8 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _7 = _15;
        StorageDead(_15);
        _53 = discriminant(_8);
        StorageDead(_8);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &mut (*_3);
        _18 = next_account_info::<'_, '_, Peekable<std::slice::Iter<'_, AccountInfo<'_>>>>(move _19) -> [return: bb9, unwind continue];
    }

    bb6: {
        unreachable;
    }

    bb7: {
        StorageLive(_12);
        _12 = move ((_8 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_14);
        _14 = move _12;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _14) -> [return: bb8, unwind: bb35];
    }

    bb8: {
        StorageDead(_14);
        StorageDead(_12);
        _67 = discriminant(_8);
        StorageDead(_8);
        goto -> bb29;
    }

    bb9: {
        StorageDead(_19);
        _17 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _18) -> [return: bb10, unwind: bb31];
    }

    bb10: {
        StorageDead(_18);
        _20 = discriminant(_17);
        switchInt(move _20) -> [0: bb11, 1: bb12, otherwise: bb6];
    }

    bb11: {
        StorageLive(_24);
        _24 = ((_17 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _16 = _24;
        StorageDead(_24);
        _55 = discriminant(_17);
        StorageDead(_17);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &mut (*_3);
        _27 = next_account_info::<'_, '_, Peekable<std::slice::Iter<'_, AccountInfo<'_>>>>(move _28) -> [return: bb14, unwind continue];
    }

    bb12: {
        StorageLive(_21);
        _21 = move ((_17 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_23);
        _23 = move _21;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _23) -> [return: bb13, unwind: bb34];
    }

    bb13: {
        StorageDead(_23);
        StorageDead(_21);
        _65 = discriminant(_17);
        StorageDead(_17);
        goto -> bb28;
    }

    bb14: {
        StorageDead(_28);
        _26 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _27) -> [return: bb15, unwind: bb31];
    }

    bb15: {
        StorageDead(_27);
        _29 = discriminant(_26);
        switchInt(move _29) -> [0: bb16, 1: bb17, otherwise: bb6];
    }

    bb16: {
        StorageLive(_33);
        _33 = ((_26 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _25 = _33;
        StorageDead(_33);
        _57 = discriminant(_26);
        StorageDead(_26);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = <Clock as Sysvar>::get() -> [return: bb19, unwind continue];
    }

    bb17: {
        StorageLive(_30);
        _30 = move ((_26 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_32);
        _32 = move _30;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _32) -> [return: bb18, unwind: bb33];
    }

    bb18: {
        StorageDead(_32);
        StorageDead(_30);
        _63 = discriminant(_26);
        StorageDead(_26);
        goto -> bb27;
    }

    bb19: {
        _36 = <Result<Clock, ProgramError> as Try>::branch(move _37) -> [return: bb20, unwind: bb31];
    }

    bb20: {
        StorageDead(_37);
        _38 = discriminant(_36);
        switchInt(move _38) -> [0: bb21, 1: bb22, otherwise: bb6];
    }

    bb21: {
        StorageLive(_42);
        _42 = move ((_36 as Continue).0: solana_program::clock::Clock);
        _35 = move _42;
        StorageDead(_42);
        _34 = &_35;
        _59 = discriminant(_36);
        StorageDead(_36);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &mut (*_3);
        _44 = next_account_info::<'_, '_, Peekable<std::slice::Iter<'_, AccountInfo<'_>>>>(move _45) -> [return: bb24, unwind continue];
    }

    bb22: {
        StorageLive(_39);
        _39 = move ((_36 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_41);
        _41 = move _39;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _41) -> [return: bb23, unwind: bb32];
    }

    bb23: {
        StorageDead(_41);
        StorageDead(_39);
        _61 = discriminant(_36);
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        goto -> bb27;
    }

    bb24: {
        StorageDead(_45);
        _43 = Result::<&AccountInfo<'_>, ProgramError>::ok(move _44) -> [return: bb25, unwind: bb31];
    }

    bb25: {
        StorageDead(_44);
        StorageLive(_46);
        _46 = &(*_1);
        StorageLive(_47);
        _47 = &(*_7);
        StorageLive(_48);
        _48 = &(*_16);
        StorageLive(_49);
        StorageLive(_50);
        _50 = &(*_25);
        _49 = Option::<&AccountInfo<'_>>::Some(move _50);
        StorageDead(_50);
        StorageLive(_51);
        _51 = &(*_34);
        StorageLive(_52);
        _52 = _43;
        _0 = _refresh_reserve(move _46, move _47, move _48, move _49, move _51, move _52) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_52);
        StorageDead(_51);
        StorageDead(_49);
        StorageDead(_48);
        StorageDead(_47);
        StorageDead(_46);
        StorageDead(_43);
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_25);
        StorageDead(_16);
        StorageDead(_7);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb30;
    }

    bb27: {
        StorageDead(_25);
        goto -> bb28;
    }

    bb28: {
        StorageDead(_16);
        goto -> bb29;
    }

    bb29: {
        StorageDead(_7);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb30;
    }

    bb30: {
        return;
    }

    bb31 (cleanup): {
        resume;
    }

    bb32 (cleanup): {
        _69 = discriminant(_36);
        goto -> bb31;
    }

    bb33 (cleanup): {
        _70 = discriminant(_26);
        goto -> bb31;
    }

    bb34 (cleanup): {
        _71 = discriminant(_17);
        goto -> bb31;
    }

    bb35 (cleanup): {
        _72 = discriminant(_8);
        goto -> bb31;
    }
}
