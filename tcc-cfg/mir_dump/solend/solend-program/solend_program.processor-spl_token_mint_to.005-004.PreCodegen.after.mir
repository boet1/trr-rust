// MIR for `spl_token_mint_to` after PreCodegen

fn spl_token_mint_to(_1: TokenMintToParams<'_, '_>) -> Result<(), ProgramError> {
    debug params => _1;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _2: solana_program::account_info::AccountInfo<'_>;
    let _3: solana_program::account_info::AccountInfo<'_>;
    let _4: solana_program::account_info::AccountInfo<'_>;
    let _5: solana_program::account_info::AccountInfo<'_>;
    let _6: u64;
    let _7: &[&[u8]];
    let mut _9: &solana_program::instruction::Instruction;
    let _10: &solana_program::instruction::Instruction;
    let _11: solana_program::instruction::Instruction;
    let mut _12: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::instruction::Instruction>;
    let mut _13: std::result::Result<solana_program::instruction::Instruction, solana_program::program_error::ProgramError>;
    let mut _14: &solana_program::pubkey::Pubkey;
    let mut _15: &solana_program::pubkey::Pubkey;
    let mut _16: &solana_program::pubkey::Pubkey;
    let mut _17: &solana_program::pubkey::Pubkey;
    let mut _18: &[&solana_program::pubkey::Pubkey];
    let mut _19: &[&solana_program::pubkey::Pubkey; 0];
    let _20: &[&solana_program::pubkey::Pubkey; 0];
    let _21: [&solana_program::pubkey::Pubkey; 0];
    let mut _22: u64;
    let mut _23: isize;
    let mut _25: !;
    let mut _26: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _28: &[solana_program::account_info::AccountInfo<'_>];
    let mut _29: &[solana_program::account_info::AccountInfo<'_>; 4];
    let _30: &[solana_program::account_info::AccountInfo<'_>; 4];
    let _31: [solana_program::account_info::AccountInfo<'_>; 4];
    let mut _32: solana_program::account_info::AccountInfo<'_>;
    let mut _33: solana_program::account_info::AccountInfo<'_>;
    let mut _34: solana_program::account_info::AccountInfo<'_>;
    let mut _35: solana_program::account_info::AccountInfo<'_>;
    let mut _36: &[&[u8]];
    let mut _37: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _38: {closure@token-lending\program\src\processor.rs:3418:20: 3418:23};
    let mut _40: &solana_program::pubkey::Pubkey;
    let mut _41: &solana_program::pubkey::Pubkey;
    let mut _42: &solana_program::pubkey::Pubkey;
    let mut _43: &solana_program::pubkey::Pubkey;
    let mut _44: bool;
    let mut _45: bool;
    let mut _46: bool;
    let mut _47: bool;
    let mut _48: bool;
    let mut _49: bool;
    let mut _50: bool;
    let mut _51: isize;
    let mut _52: isize;
    let mut _53: isize;
    let mut _54: isize;
    let mut _55: isize;
    let mut _56: isize;
    scope 1 {
        debug mint => _2;
        debug destination => _3;
        debug authority => _4;
        debug token_program => _5;
        debug amount => _6;
        debug authority_signer_seeds => _7;
        let _8: std::result::Result<(), solana_program::program_error::ProgramError>;
        let _24: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _27: solana_program::instruction::Instruction;
        let mut _39: &[&solana_program::pubkey::Pubkey; 0];
        scope 2 {
            debug result => _8;
        }
        scope 3 {
            debug residual => _24;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _27;
            scope 6 {
            }
        }
    }

    bb0: {
        _50 = const false;
        _49 = const false;
        _48 = const false;
        _47 = const false;
        _44 = const false;
        _46 = const false;
        _45 = const false;
        StorageLive(_2);
        _50 = const true;
        _2 = move (_1.0: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_3);
        _49 = const true;
        _3 = move (_1.1: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_4);
        _48 = const true;
        _4 = move (_1.3: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_5);
        _47 = const true;
        _5 = move (_1.5: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_6);
        _6 = (_1.2: u64);
        StorageLive(_7);
        _7 = (_1.4: &[&[u8]]);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        _40 = deref_copy (_5.0: &solana_program::pubkey::Pubkey);
        _14 = &(*_40);
        StorageLive(_15);
        _41 = deref_copy (_2.0: &solana_program::pubkey::Pubkey);
        _15 = &(*_41);
        StorageLive(_16);
        _42 = deref_copy (_3.0: &solana_program::pubkey::Pubkey);
        _16 = &(*_42);
        StorageLive(_17);
        _43 = deref_copy (_4.0: &solana_program::pubkey::Pubkey);
        _17 = &(*_43);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _39 = const _;
        _20 = &(*_39);
        _19 = &(*_20);
        _18 = move _19 as &[&solana_program::pubkey::Pubkey] (PointerCoercion(Unsize));
        StorageDead(_19);
        StorageLive(_22);
        _22 = _6;
        _13 = mint_to(move _14, move _15, move _16, move _17, move _18, move _22) -> [return: bb1, unwind: bb25];
    }

    bb1: {
        StorageDead(_22);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        _12 = <Result<Instruction, ProgramError> as Try>::branch(move _13) -> [return: bb2, unwind: bb25];
    }

    bb2: {
        _45 = const true;
        _46 = const true;
        StorageDead(_13);
        _23 = discriminant(_12);
        switchInt(move _23) -> [0: bb3, 1: bb5, otherwise: bb4];
    }

    bb3: {
        StorageLive(_27);
        _27 = move ((_12 as Continue).0: solana_program::instruction::Instruction);
        _11 = move _27;
        StorageDead(_27);
        _10 = &_11;
        _9 = &(*_10);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        _50 = const false;
        _32 = move _2;
        StorageLive(_33);
        _49 = const false;
        _33 = move _3;
        StorageLive(_34);
        _48 = const false;
        _34 = move _4;
        StorageLive(_35);
        _47 = const false;
        _35 = move _5;
        _31 = [move _32, move _33, move _34, move _35];
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_32);
        _30 = &_31;
        _29 = &(*_30);
        _28 = move _29 as &[solana_program::account_info::AccountInfo<'_>] (PointerCoercion(Unsize));
        StorageDead(_29);
        StorageLive(_36);
        _36 = &(*_7);
        _8 = invoke_optionally_signed(move _9, move _28, move _36) -> [return: bb7, unwind: bb16];
    }

    bb4: {
        unreachable;
    }

    bb5: {
        StorageLive(_24);
        _24 = move ((_12 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_26);
        _26 = move _24;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _26) -> [return: bb6, unwind: bb23];
    }

    bb6: {
        StorageDead(_26);
        StorageDead(_24);
        StorageDead(_9);
        _53 = discriminant(_12);
        StorageDead(_20);
        _45 = const false;
        _46 = const false;
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        _44 = const false;
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        drop(_5) -> [return: bb10, unwind: bb27];
    }

    bb7: {
        _44 = const true;
        StorageDead(_36);
        StorageDead(_28);
        StorageDead(_9);
        drop(_31) -> [return: bb8, unwind: bb15];
    }

    bb8: {
        StorageDead(_31);
        StorageDead(_30);
        drop(_11) -> [return: bb19, unwind: bb20];
    }

    bb9: {
        StorageDead(_38);
        StorageDead(_37);
        _44 = const false;
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        _47 = const false;
        StorageDead(_5);
        _48 = const false;
        StorageDead(_4);
        _49 = const false;
        StorageDead(_3);
        _50 = const false;
        StorageDead(_2);
        goto -> bb14;
    }

    bb10: {
        _47 = const false;
        StorageDead(_5);
        drop(_4) -> [return: bb11, unwind: bb29];
    }

    bb11: {
        _48 = const false;
        StorageDead(_4);
        drop(_3) -> [return: bb12, unwind: bb31];
    }

    bb12: {
        _49 = const false;
        StorageDead(_3);
        drop(_2) -> [return: bb13, unwind: bb18];
    }

    bb13: {
        _50 = const false;
        StorageDead(_2);
        goto -> bb14;
    }

    bb14: {
        return;
    }

    bb15 (cleanup): {
        drop(_11) -> [return: bb20, unwind terminate(cleanup)];
    }

    bb16 (cleanup): {
        drop(_31) -> [return: bb17, unwind terminate(cleanup)];
    }

    bb17 (cleanup): {
        drop(_11) -> [return: bb23, unwind terminate(cleanup)];
    }

    bb18 (cleanup): {
        resume;
    }

    bb19: {
        _51 = discriminant(_12);
        StorageDead(_20);
        _45 = const false;
        _46 = const false;
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_37);
        _44 = const false;
        _37 = move _8;
        StorageLive(_38);
        _38 = {closure@token-lending\program\src\processor.rs:3418:20: 3418:23};
        _0 = Result::<(), ProgramError>::map_err::<ProgramError, {closure@token-lending\program\src\processor.rs:3418:20: 3418:23}>(move _37, move _38) -> [return: bb9, unwind: bb22];
    }

    bb20 (cleanup): {
        _55 = discriminant(_12);
        goto -> bb22;
    }

    bb21 (cleanup): {
        drop(_8) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb22 (cleanup): {
        switchInt(_44) -> [0: bb25, otherwise: bb21];
    }

    bb23 (cleanup): {
        _56 = discriminant(_12);
        goto -> bb25;
    }

    bb24 (cleanup): {
        drop(_5) -> [return: bb27, unwind terminate(cleanup)];
    }

    bb25 (cleanup): {
        switchInt(_47) -> [0: bb27, otherwise: bb24];
    }

    bb26 (cleanup): {
        drop(_4) -> [return: bb29, unwind terminate(cleanup)];
    }

    bb27 (cleanup): {
        switchInt(_48) -> [0: bb29, otherwise: bb26];
    }

    bb28 (cleanup): {
        drop(_3) -> [return: bb31, unwind terminate(cleanup)];
    }

    bb29 (cleanup): {
        switchInt(_49) -> [0: bb31, otherwise: bb28];
    }

    bb30 (cleanup): {
        drop(_2) -> [return: bb18, unwind terminate(cleanup)];
    }

    bb31 (cleanup): {
        switchInt(_50) -> [0: bb18, otherwise: bb30];
    }
}
