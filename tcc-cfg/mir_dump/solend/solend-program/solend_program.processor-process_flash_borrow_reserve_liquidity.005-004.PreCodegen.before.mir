// MIR for `process_flash_borrow_reserve_liquidity` before PreCodegen

fn process_flash_borrow_reserve_liquidity(_1: &Pubkey, _2: u64, _3: &[AccountInfo<'_>]) -> Result<(), ProgramError> {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug accounts => _3;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _4: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _5: std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _6: &[solana_program::account_info::AccountInfo<'_>];
    let mut _8: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _9: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _10: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _11: isize;
    let mut _13: !;
    let mut _14: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _17: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _18: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _19: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _20: isize;
    let mut _22: !;
    let mut _23: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _26: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _27: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _28: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _29: isize;
    let mut _31: !;
    let mut _32: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _35: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _36: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _37: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _38: isize;
    let mut _40: !;
    let mut _41: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _44: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _45: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _46: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _47: isize;
    let mut _49: !;
    let mut _50: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _53: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _54: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _55: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _56: isize;
    let mut _58: !;
    let mut _59: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _62: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _63: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _64: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _65: isize;
    let mut _67: !;
    let mut _68: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _71: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::clock::Clock>;
    let mut _72: std::result::Result<solana_program::clock::Clock, solana_program::program_error::ProgramError>;
    let mut _73: isize;
    let mut _75: !;
    let mut _76: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _78: ();
    let mut _79: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _80: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _81: &solana_program::pubkey::Pubkey;
    let mut _82: &solana_program::account_info::AccountInfo<'_>;
    let mut _83: &solana_program::clock::Clock;
    let _84: &solana_program::clock::Clock;
    let mut _85: isize;
    let mut _87: !;
    let mut _88: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _90: ();
    let mut _91: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _92: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _93: &solana_program::pubkey::Pubkey;
    let mut _94: u64;
    let mut _95: &solana_program::account_info::AccountInfo<'_>;
    let mut _96: &solana_program::account_info::AccountInfo<'_>;
    let mut _97: &solana_program::account_info::AccountInfo<'_>;
    let mut _98: &solana_program::account_info::AccountInfo<'_>;
    let mut _99: &solana_program::account_info::AccountInfo<'_>;
    let mut _100: &solana_program::account_info::AccountInfo<'_>;
    let mut _101: &solana_program::account_info::AccountInfo<'_>;
    let mut _102: isize;
    let mut _104: !;
    let mut _105: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _107: ();
    let mut _108: isize;
    let mut _109: isize;
    let mut _110: isize;
    let mut _111: isize;
    let mut _112: isize;
    let mut _113: isize;
    let mut _114: isize;
    let mut _115: isize;
    let mut _116: isize;
    let mut _117: isize;
    let mut _118: isize;
    let mut _119: isize;
    let mut _120: isize;
    let mut _121: isize;
    let mut _122: isize;
    let mut _123: isize;
    let mut _124: isize;
    let mut _125: isize;
    let mut _126: isize;
    let mut _127: isize;
    let mut _128: isize;
    let mut _129: isize;
    let mut _130: isize;
    let mut _131: isize;
    let mut _132: isize;
    let mut _133: isize;
    let mut _134: isize;
    let mut _135: isize;
    let mut _136: isize;
    let mut _137: isize;
    let mut _138: isize;
    let mut _139: isize;
    let mut _140: isize;
    let mut _141: isize;
    let mut _142: isize;
    let mut _143: isize;
    let mut _144: isize;
    let mut _145: isize;
    let mut _146: isize;
    let mut _147: isize;
    let mut _148: isize;
    let mut _149: isize;
    let mut _150: isize;
    let mut _151: isize;
    let mut _152: isize;
    let mut _153: isize;
    let mut _154: isize;
    let mut _155: isize;
    let mut _156: isize;
    let mut _157: isize;
    scope 1 {
        debug account_info_iter => _4;
        let _7: &solana_program::account_info::AccountInfo<'_>;
        let _12: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _15: &solana_program::account_info::AccountInfo<'_>;
        scope 2 {
            debug source_liquidity_info => _7;
            let _16: &solana_program::account_info::AccountInfo<'_>;
            let _21: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _24: &solana_program::account_info::AccountInfo<'_>;
            scope 7 {
                debug destination_liquidity_info => _16;
                let _25: &solana_program::account_info::AccountInfo<'_>;
                let _30: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _33: &solana_program::account_info::AccountInfo<'_>;
                scope 12 {
                    debug reserve_info => _25;
                    let _34: &solana_program::account_info::AccountInfo<'_>;
                    let _39: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _42: &solana_program::account_info::AccountInfo<'_>;
                    scope 17 {
                        debug lending_market_info => _34;
                        let _43: &solana_program::account_info::AccountInfo<'_>;
                        let _48: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _51: &solana_program::account_info::AccountInfo<'_>;
                        scope 22 {
                            debug lending_market_authority_info => _43;
                            let _52: &solana_program::account_info::AccountInfo<'_>;
                            let _57: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                            let _60: &solana_program::account_info::AccountInfo<'_>;
                            scope 27 {
                                debug sysvar_info => _52;
                                let _61: &solana_program::account_info::AccountInfo<'_>;
                                let _66: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                let _69: &solana_program::account_info::AccountInfo<'_>;
                                scope 32 {
                                    debug token_program_id => _61;
                                    let _70: solana_program::clock::Clock;
                                    let _74: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                    let _77: solana_program::clock::Clock;
                                    scope 37 {
                                        debug clock => _70;
                                        let _86: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _89: ();
                                        let _103: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _106: ();
                                        scope 42 {
                                            debug residual => _86;
                                            scope 43 {
                                            }
                                        }
                                        scope 44 {
                                            debug val => _89;
                                            scope 45 {
                                            }
                                        }
                                        scope 46 {
                                            debug residual => _103;
                                            scope 47 {
                                            }
                                        }
                                        scope 48 {
                                            debug val => _106;
                                            scope 49 {
                                            }
                                        }
                                    }
                                    scope 38 {
                                        debug residual => _74;
                                        scope 39 {
                                        }
                                    }
                                    scope 40 {
                                        debug val => _77;
                                        scope 41 {
                                        }
                                    }
                                }
                                scope 33 {
                                    debug residual => _66;
                                    scope 34 {
                                    }
                                }
                                scope 35 {
                                    debug val => _69;
                                    scope 36 {
                                    }
                                }
                            }
                            scope 28 {
                                debug residual => _57;
                                scope 29 {
                                }
                            }
                            scope 30 {
                                debug val => _60;
                                scope 31 {
                                }
                            }
                        }
                        scope 23 {
                            debug residual => _48;
                            scope 24 {
                            }
                        }
                        scope 25 {
                            debug val => _51;
                            scope 26 {
                            }
                        }
                    }
                    scope 18 {
                        debug residual => _39;
                        scope 19 {
                        }
                    }
                    scope 20 {
                        debug val => _42;
                        scope 21 {
                        }
                    }
                }
                scope 13 {
                    debug residual => _30;
                    scope 14 {
                    }
                }
                scope 15 {
                    debug val => _33;
                    scope 16 {
                    }
                }
            }
            scope 8 {
                debug residual => _21;
                scope 9 {
                }
            }
            scope 10 {
                debug val => _24;
                scope 11 {
                }
            }
        }
        scope 3 {
            debug residual => _12;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _15;
            scope 6 {
            }
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &(*_3);
        _5 = bytemuck::core::slice::<impl [AccountInfo<'_>]>::iter(move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        _4 = &mut _5;
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &mut (*_4);
        _9 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _10) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_10);
        _8 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _9) -> [return: bb3, unwind: bb62];
    }

    bb3: {
        StorageDead(_9);
        _11 = discriminant(_8);
        switchInt(move _11) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_15);
        _15 = ((_8 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _7 = _15;
        StorageDead(_15);
        _108 = discriminant(_8);
        StorageDead(_8);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &mut (*_4);
        _18 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _19) -> [return: bb8, unwind continue];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_12);
        _12 = move ((_8 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_14);
        _14 = move _12;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _14) -> [return: bb7, unwind: bb72];
    }

    bb7: {
        StorageDead(_14);
        StorageDead(_12);
        _146 = discriminant(_8);
        StorageDead(_8);
        goto -> bb60;
    }

    bb8: {
        StorageDead(_19);
        _17 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _18) -> [return: bb9, unwind: bb62];
    }

    bb9: {
        StorageDead(_18);
        _20 = discriminant(_17);
        switchInt(move _20) -> [0: bb10, 1: bb11, otherwise: bb5];
    }

    bb10: {
        StorageLive(_24);
        _24 = ((_17 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _16 = _24;
        StorageDead(_24);
        _110 = discriminant(_17);
        StorageDead(_17);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &mut (*_4);
        _27 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _28) -> [return: bb13, unwind continue];
    }

    bb11: {
        StorageLive(_21);
        _21 = move ((_17 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_23);
        _23 = move _21;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _23) -> [return: bb12, unwind: bb71];
    }

    bb12: {
        StorageDead(_23);
        StorageDead(_21);
        _144 = discriminant(_17);
        StorageDead(_17);
        goto -> bb59;
    }

    bb13: {
        StorageDead(_28);
        _26 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _27) -> [return: bb14, unwind: bb62];
    }

    bb14: {
        StorageDead(_27);
        _29 = discriminant(_26);
        switchInt(move _29) -> [0: bb15, 1: bb16, otherwise: bb5];
    }

    bb15: {
        StorageLive(_33);
        _33 = ((_26 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _25 = _33;
        StorageDead(_33);
        _112 = discriminant(_26);
        StorageDead(_26);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut (*_4);
        _36 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _37) -> [return: bb18, unwind continue];
    }

    bb16: {
        StorageLive(_30);
        _30 = move ((_26 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_32);
        _32 = move _30;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _32) -> [return: bb17, unwind: bb70];
    }

    bb17: {
        StorageDead(_32);
        StorageDead(_30);
        _142 = discriminant(_26);
        StorageDead(_26);
        goto -> bb58;
    }

    bb18: {
        StorageDead(_37);
        _35 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _36) -> [return: bb19, unwind: bb62];
    }

    bb19: {
        StorageDead(_36);
        _38 = discriminant(_35);
        switchInt(move _38) -> [0: bb20, 1: bb21, otherwise: bb5];
    }

    bb20: {
        StorageLive(_42);
        _42 = ((_35 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _34 = _42;
        StorageDead(_42);
        _114 = discriminant(_35);
        StorageDead(_35);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &mut (*_4);
        _45 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _46) -> [return: bb23, unwind continue];
    }

    bb21: {
        StorageLive(_39);
        _39 = move ((_35 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_41);
        _41 = move _39;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _41) -> [return: bb22, unwind: bb69];
    }

    bb22: {
        StorageDead(_41);
        StorageDead(_39);
        _140 = discriminant(_35);
        StorageDead(_35);
        goto -> bb57;
    }

    bb23: {
        StorageDead(_46);
        _44 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _45) -> [return: bb24, unwind: bb62];
    }

    bb24: {
        StorageDead(_45);
        _47 = discriminant(_44);
        switchInt(move _47) -> [0: bb25, 1: bb26, otherwise: bb5];
    }

    bb25: {
        StorageLive(_51);
        _51 = ((_44 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _43 = _51;
        StorageDead(_51);
        _116 = discriminant(_44);
        StorageDead(_44);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &mut (*_4);
        _54 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _55) -> [return: bb28, unwind continue];
    }

    bb26: {
        StorageLive(_48);
        _48 = move ((_44 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_50);
        _50 = move _48;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _50) -> [return: bb27, unwind: bb68];
    }

    bb27: {
        StorageDead(_50);
        StorageDead(_48);
        _138 = discriminant(_44);
        StorageDead(_44);
        goto -> bb56;
    }

    bb28: {
        StorageDead(_55);
        _53 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _54) -> [return: bb29, unwind: bb62];
    }

    bb29: {
        StorageDead(_54);
        _56 = discriminant(_53);
        switchInt(move _56) -> [0: bb30, 1: bb31, otherwise: bb5];
    }

    bb30: {
        StorageLive(_60);
        _60 = ((_53 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _52 = _60;
        StorageDead(_60);
        _118 = discriminant(_53);
        StorageDead(_53);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &mut (*_4);
        _63 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _64) -> [return: bb33, unwind continue];
    }

    bb31: {
        StorageLive(_57);
        _57 = move ((_53 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_59);
        _59 = move _57;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _59) -> [return: bb32, unwind: bb67];
    }

    bb32: {
        StorageDead(_59);
        StorageDead(_57);
        _136 = discriminant(_53);
        StorageDead(_53);
        goto -> bb55;
    }

    bb33: {
        StorageDead(_64);
        _62 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _63) -> [return: bb34, unwind: bb62];
    }

    bb34: {
        StorageDead(_63);
        _65 = discriminant(_62);
        switchInt(move _65) -> [0: bb35, 1: bb36, otherwise: bb5];
    }

    bb35: {
        StorageLive(_69);
        _69 = ((_62 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _61 = _69;
        StorageDead(_69);
        _120 = discriminant(_62);
        StorageDead(_62);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        _72 = <Clock as Sysvar>::get() -> [return: bb38, unwind continue];
    }

    bb36: {
        StorageLive(_66);
        _66 = move ((_62 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_68);
        _68 = move _66;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _68) -> [return: bb37, unwind: bb66];
    }

    bb37: {
        StorageDead(_68);
        StorageDead(_66);
        _134 = discriminant(_62);
        StorageDead(_62);
        goto -> bb54;
    }

    bb38: {
        _71 = <Result<Clock, ProgramError> as Try>::branch(move _72) -> [return: bb39, unwind: bb62];
    }

    bb39: {
        StorageDead(_72);
        _73 = discriminant(_71);
        switchInt(move _73) -> [0: bb40, 1: bb41, otherwise: bb5];
    }

    bb40: {
        StorageLive(_77);
        _77 = move ((_71 as Continue).0: solana_program::clock::Clock);
        _70 = move _77;
        StorageDead(_77);
        _122 = discriminant(_71);
        StorageDead(_71);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        _81 = &(*_1);
        StorageLive(_82);
        _82 = &(*_25);
        StorageLive(_83);
        StorageLive(_84);
        _84 = &_70;
        _83 = &(*_84);
        _80 = _refresh_reserve_interest(move _81, move _82, move _83) -> [return: bb43, unwind continue];
    }

    bb41: {
        StorageLive(_74);
        _74 = move ((_71 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_76);
        _76 = move _74;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _76) -> [return: bb42, unwind: bb65];
    }

    bb42: {
        StorageDead(_76);
        StorageDead(_74);
        _132 = discriminant(_71);
        StorageDead(_71);
        goto -> bb53;
    }

    bb43: {
        StorageDead(_83);
        StorageDead(_82);
        StorageDead(_81);
        _79 = <Result<(), ProgramError> as Try>::branch(move _80) -> [return: bb44, unwind: bb62];
    }

    bb44: {
        StorageDead(_80);
        _85 = discriminant(_79);
        switchInt(move _85) -> [0: bb45, 1: bb46, otherwise: bb5];
    }

    bb45: {
        StorageLive(_89);
        _89 = ((_79 as Continue).0: ());
        _78 = _89;
        StorageDead(_89);
        _124 = discriminant(_79);
        StorageDead(_84);
        StorageDead(_79);
        StorageDead(_78);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        _93 = &(*_1);
        StorageLive(_94);
        _94 = _2;
        StorageLive(_95);
        _95 = &(*_7);
        StorageLive(_96);
        _96 = &(*_16);
        StorageLive(_97);
        _97 = &(*_25);
        StorageLive(_98);
        _98 = &(*_34);
        StorageLive(_99);
        _99 = &(*_43);
        StorageLive(_100);
        _100 = &(*_52);
        StorageLive(_101);
        _101 = &(*_61);
        _92 = _flash_borrow_reserve_liquidity(move _93, move _94, move _95, move _96, move _97, move _98, move _99, move _100, move _101) -> [return: bb48, unwind continue];
    }

    bb46: {
        StorageLive(_86);
        _86 = move ((_79 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_88);
        _88 = move _86;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _88) -> [return: bb47, unwind: bb64];
    }

    bb47: {
        StorageDead(_88);
        StorageDead(_86);
        _130 = discriminant(_79);
        StorageDead(_84);
        StorageDead(_79);
        StorageDead(_78);
        goto -> bb53;
    }

    bb48: {
        StorageDead(_101);
        StorageDead(_100);
        StorageDead(_99);
        StorageDead(_98);
        StorageDead(_97);
        StorageDead(_96);
        StorageDead(_95);
        StorageDead(_94);
        StorageDead(_93);
        _91 = <Result<(), ProgramError> as Try>::branch(move _92) -> [return: bb49, unwind: bb62];
    }

    bb49: {
        StorageDead(_92);
        _102 = discriminant(_91);
        switchInt(move _102) -> [0: bb50, 1: bb51, otherwise: bb5];
    }

    bb50: {
        StorageLive(_106);
        _106 = ((_91 as Continue).0: ());
        _90 = _106;
        StorageDead(_106);
        _126 = discriminant(_91);
        StorageDead(_91);
        StorageDead(_90);
        StorageLive(_107);
        _107 = ();
        _0 = Result::<(), ProgramError>::Ok(move _107);
        StorageDead(_107);
        StorageDead(_70);
        StorageDead(_61);
        StorageDead(_52);
        StorageDead(_43);
        StorageDead(_34);
        StorageDead(_25);
        StorageDead(_16);
        StorageDead(_7);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb61;
    }

    bb51: {
        StorageLive(_103);
        _103 = move ((_91 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_105);
        _105 = move _103;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _105) -> [return: bb52, unwind: bb63];
    }

    bb52: {
        StorageDead(_105);
        StorageDead(_103);
        _128 = discriminant(_91);
        StorageDead(_91);
        StorageDead(_90);
        goto -> bb53;
    }

    bb53: {
        StorageDead(_70);
        goto -> bb54;
    }

    bb54: {
        StorageDead(_61);
        goto -> bb55;
    }

    bb55: {
        StorageDead(_52);
        goto -> bb56;
    }

    bb56: {
        StorageDead(_43);
        goto -> bb57;
    }

    bb57: {
        StorageDead(_34);
        goto -> bb58;
    }

    bb58: {
        StorageDead(_25);
        goto -> bb59;
    }

    bb59: {
        StorageDead(_16);
        goto -> bb60;
    }

    bb60: {
        StorageDead(_7);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb61;
    }

    bb61: {
        return;
    }

    bb62 (cleanup): {
        resume;
    }

    bb63 (cleanup): {
        _148 = discriminant(_91);
        goto -> bb62;
    }

    bb64 (cleanup): {
        _149 = discriminant(_79);
        goto -> bb62;
    }

    bb65 (cleanup): {
        _150 = discriminant(_71);
        goto -> bb62;
    }

    bb66 (cleanup): {
        _151 = discriminant(_62);
        goto -> bb62;
    }

    bb67 (cleanup): {
        _152 = discriminant(_53);
        goto -> bb62;
    }

    bb68 (cleanup): {
        _153 = discriminant(_44);
        goto -> bb62;
    }

    bb69 (cleanup): {
        _154 = discriminant(_35);
        goto -> bb62;
    }

    bb70 (cleanup): {
        _155 = discriminant(_26);
        goto -> bb62;
    }

    bb71 (cleanup): {
        _156 = discriminant(_17);
        goto -> bb62;
    }

    bb72 (cleanup): {
        _157 = discriminant(_8);
        goto -> bb62;
    }
}
