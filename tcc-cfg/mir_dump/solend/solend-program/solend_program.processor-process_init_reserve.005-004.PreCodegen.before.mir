// MIR for `process_init_reserve` before PreCodegen

fn process_init_reserve(_1: &Pubkey, _2: u64, _3: ReserveConfig, _4: &[AccountInfo<'_>]) -> Result<(), ProgramError> {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug config => _3;
    debug accounts => _4;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _5: ();
    let mut _6: bool;
    let mut _7: u64;
    let mut _8: !;
    let _9: ();
    let mut _10: &str;
    let _11: &str;
    let mut _12: solana_program::program_error::ProgramError;
    let mut _13: solend_sdk::error::LendingError;
    let _14: ();
    let mut _15: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _16: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _17: solend_sdk::state::ReserveConfig;
    let mut _18: isize;
    let _19: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _20: !;
    let mut _21: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _22: ();
    let _23: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _24: std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _25: &[solana_program::account_info::AccountInfo<'_>];
    let mut _27: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _28: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _29: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _30: isize;
    let mut _32: !;
    let mut _33: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _36: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _37: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _38: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _39: isize;
    let mut _41: !;
    let mut _42: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _45: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _46: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _47: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _48: isize;
    let mut _50: !;
    let mut _51: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _54: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _55: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _56: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _57: isize;
    let mut _59: !;
    let mut _60: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _63: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _64: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _65: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _66: isize;
    let mut _68: !;
    let mut _69: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _72: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _73: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _74: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _75: isize;
    let mut _77: !;
    let mut _78: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _81: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _82: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _83: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _84: isize;
    let mut _86: !;
    let mut _87: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _90: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _91: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _92: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _93: isize;
    let mut _95: !;
    let mut _96: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _99: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _100: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _101: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _102: isize;
    let mut _104: !;
    let mut _105: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _108: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _109: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _110: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _111: isize;
    let mut _113: !;
    let mut _114: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _117: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _118: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _119: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _120: isize;
    let mut _122: !;
    let mut _123: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _126: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _127: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _128: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _129: isize;
    let mut _131: !;
    let mut _132: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _135: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _136: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _137: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _138: isize;
    let mut _140: !;
    let mut _141: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _144: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _145: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _146: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _147: isize;
    let mut _149: !;
    let mut _150: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _153: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _154: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _155: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _156: isize;
    let mut _158: !;
    let mut _159: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _162: solana_program::clock::Clock;
    let mut _163: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::clock::Clock>;
    let mut _164: std::result::Result<solana_program::clock::Clock, solana_program::program_error::ProgramError>;
    let mut _165: isize;
    let mut _167: !;
    let mut _168: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _171: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _172: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _173: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _174: isize;
    let mut _176: !;
    let mut _177: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _180: solana_program::rent::Rent;
    let mut _181: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::rent::Rent>;
    let mut _182: std::result::Result<solana_program::rent::Rent, solana_program::program_error::ProgramError>;
    let mut _183: &solana_program::account_info::AccountInfo<'_>;
    let mut _184: isize;
    let mut _186: !;
    let mut _187: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _190: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _191: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _192: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _193: isize;
    let mut _195: !;
    let mut _196: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _198: ();
    let mut _199: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _200: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _201: &solana_program::rent::Rent;
    let mut _202: &solana_program::account_info::AccountInfo<'_>;
    let mut _203: isize;
    let mut _205: !;
    let mut _206: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _209: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solend_sdk::state::Reserve>;
    let mut _210: std::result::Result<solend_sdk::state::Reserve, solana_program::program_error::ProgramError>;
    let mut _211: &solana_program::account_info::AccountInfo<'_>;
    let mut _212: isize;
    let mut _214: !;
    let mut _215: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _217: ();
    let mut _218: bool;
    let mut _219: &&solana_program::pubkey::Pubkey;
    let mut _220: &&solana_program::pubkey::Pubkey;
    let mut _221: !;
    let _222: ();
    let mut _223: &str;
    let _224: &str;
    let mut _225: &std::string::String;
    let _226: &std::string::String;
    let _227: std::string::String;
    let mut _229: std::fmt::Arguments<'_>;
    let mut _230: &[&str];
    let mut _231: &[&str; 2];
    let _232: &[&str; 2];
    let _233: [&str; 2];
    let mut _234: &[bytemuck::core::fmt::rt::Argument<'_>];
    let mut _235: &[bytemuck::core::fmt::rt::Argument<'_>; 2];
    let _236: &[bytemuck::core::fmt::rt::Argument<'_>; 2];
    let _237: [bytemuck::core::fmt::rt::Argument<'_>; 2];
    let mut _238: bytemuck::core::fmt::rt::Argument<'_>;
    let mut _239: &&std::string::String;
    let _240: &&std::string::String;
    let _241: &std::string::String;
    let _242: std::string::String;
    let mut _243: &solana_program::pubkey::Pubkey;
    let mut _244: bytemuck::core::fmt::rt::Argument<'_>;
    let mut _245: &&std::string::String;
    let _246: &&std::string::String;
    let _247: &std::string::String;
    let _248: std::string::String;
    let mut _249: &solana_program::pubkey::Pubkey;
    let mut _250: solana_program::program_error::ProgramError;
    let mut _251: solend_sdk::error::LendingError;
    let _252: ();
    let mut _253: bool;
    let mut _254: &&solana_program::pubkey::Pubkey;
    let mut _255: &&solana_program::pubkey::Pubkey;
    let mut _256: !;
    let _257: ();
    let mut _258: &str;
    let _259: &str;
    let mut _260: solana_program::program_error::ProgramError;
    let mut _261: solend_sdk::error::LendingError;
    let mut _263: solend_sdk::state::LendingMarket;
    let mut _264: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solend_sdk::state::LendingMarket>;
    let mut _265: std::result::Result<solend_sdk::state::LendingMarket, solana_program::program_error::ProgramError>;
    let mut _266: &[u8];
    let _267: &&mut [u8];
    let mut _268: &std::cell::Ref<'_, &mut [u8]>;
    let _269: &std::cell::Ref<'_, &mut [u8]>;
    let _270: std::cell::Ref<'_, &mut [u8]>;
    let mut _271: &std::cell::RefCell<&mut [u8]>;
    let _272: &std::cell::RefCell<&mut [u8]>;
    let mut _273: &std::rc::Rc<std::cell::RefCell<&mut [u8]>>;
    let mut _274: isize;
    let mut _276: !;
    let mut _277: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _279: ();
    let mut _280: bool;
    let mut _281: &&solana_program::pubkey::Pubkey;
    let mut _282: &&solana_program::pubkey::Pubkey;
    let mut _283: !;
    let _284: ();
    let mut _285: &str;
    let _286: &str;
    let mut _287: &std::string::String;
    let _288: &std::string::String;
    let _289: std::string::String;
    let mut _291: std::fmt::Arguments<'_>;
    let mut _292: &[&str];
    let mut _293: &[&str; 2];
    let _294: &[&str; 2];
    let _295: [&str; 2];
    let mut _296: &[bytemuck::core::fmt::rt::Argument<'_>];
    let mut _297: &[bytemuck::core::fmt::rt::Argument<'_>; 2];
    let _298: &[bytemuck::core::fmt::rt::Argument<'_>; 2];
    let _299: [bytemuck::core::fmt::rt::Argument<'_>; 2];
    let mut _300: bytemuck::core::fmt::rt::Argument<'_>;
    let mut _301: &&std::string::String;
    let _302: &&std::string::String;
    let _303: &std::string::String;
    let _304: std::string::String;
    let mut _305: &solana_program::pubkey::Pubkey;
    let mut _306: bytemuck::core::fmt::rt::Argument<'_>;
    let mut _307: &&std::string::String;
    let _308: &&std::string::String;
    let _309: &std::string::String;
    let _310: std::string::String;
    let mut _311: &solana_program::pubkey::Pubkey;
    let mut _312: solana_program::program_error::ProgramError;
    let mut _313: solend_sdk::error::LendingError;
    let _314: ();
    let mut _315: bool;
    let mut _316: &&solana_program::pubkey::Pubkey;
    let _317: &solana_program::pubkey::Pubkey;
    let mut _318: &&solana_program::pubkey::Pubkey;
    let mut _319: !;
    let _320: ();
    let mut _321: &str;
    let _322: &str;
    let mut _323: solana_program::program_error::ProgramError;
    let mut _324: solend_sdk::error::LendingError;
    let _325: ();
    let mut _326: bool;
    let mut _327: &&solana_program::pubkey::Pubkey;
    let _328: &solana_program::pubkey::Pubkey;
    let mut _329: &&solana_program::pubkey::Pubkey;
    let mut _330: !;
    let _331: ();
    let mut _332: &str;
    let _333: &str;
    let mut _334: solana_program::program_error::ProgramError;
    let mut _335: solend_sdk::error::LendingError;
    let _336: ();
    let mut _337: bool;
    let mut _338: !;
    let _339: ();
    let mut _340: &str;
    let _341: &str;
    let mut _342: solana_program::program_error::ProgramError;
    let mut _343: solend_sdk::error::LendingError;
    let _344: ();
    let mut _345: bool;
    let mut _346: &solana_program::pubkey::Pubkey;
    let mut _347: &solana_program::pubkey::Pubkey;
    let _348: solana_program::pubkey::Pubkey;
    let mut _349: bool;
    let mut _350: &solana_program::pubkey::Pubkey;
    let mut _351: &solana_program::pubkey::Pubkey;
    let _352: solana_program::pubkey::Pubkey;
    let mut _353: bool;
    let mut _354: &solana_program::pubkey::Pubkey;
    let mut _355: &solana_program::pubkey::Pubkey;
    let _356: solana_program::pubkey::Pubkey;
    let mut _357: !;
    let _358: ();
    let mut _359: &str;
    let _360: &str;
    let mut _361: solana_program::program_error::ProgramError;
    let mut _362: solend_sdk::error::LendingError;
    let _363: ();
    let mut _364: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _365: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _366: &solana_program::account_info::AccountInfo<'_>;
    let mut _367: isize;
    let mut _369: !;
    let mut _370: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _372: ();
    let mut _373: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _374: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _375: &solana_program::account_info::AccountInfo<'_>;
    let mut _376: isize;
    let mut _378: !;
    let mut _379: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _381: ();
    let mut _382: isize;
    let mut _385: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _386: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _387: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _388: isize;
    let mut _390: !;
    let mut _391: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _393: ();
    let mut _394: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _395: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _396: solana_program::pubkey::Pubkey;
    let mut _397: &solana_program::account_info::AccountInfo<'_>;
    let mut _398: isize;
    let mut _400: !;
    let mut _401: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _405: (solend_sdk::math::Decimal, std::option::Option<solend_sdk::math::Decimal>);
    let mut _406: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solend_sdk::math::Decimal, std::option::Option<solend_sdk::math::Decimal>)>;
    let mut _407: std::result::Result<(solend_sdk::math::Decimal, std::option::Option<solend_sdk::math::Decimal>), solana_program::program_error::ProgramError>;
    let mut _408: std::option::Option<&solana_program::account_info::AccountInfo<'_>>;
    let mut _409: &solana_program::account_info::AccountInfo<'_>;
    let mut _410: &solana_program::account_info::AccountInfo<'_>;
    let mut _411: &solana_program::clock::Clock;
    let mut _412: isize;
    let mut _414: !;
    let mut _415: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _418: [&[u8]; 2];
    let mut _419: &[u8];
    let mut _420: &solana_program::pubkey::Pubkey;
    let mut _421: &[u8];
    let mut _422: &[u8; 1];
    let _423: &[u8; 1];
    let _424: [u8; 1];
    let mut _425: u8;
    let mut _427: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::pubkey::PubkeyError>, solana_program::pubkey::Pubkey>;
    let mut _428: std::result::Result<solana_program::pubkey::Pubkey, solana_program::pubkey::PubkeyError>;
    let mut _429: &[&[u8]];
    let mut _430: &[&[u8]; 2];
    let mut _431: &solana_program::pubkey::Pubkey;
    let mut _432: isize;
    let mut _434: !;
    let mut _435: std::result::Result<std::convert::Infallible, solana_program::pubkey::PubkeyError>;
    let _437: ();
    let mut _438: bool;
    let mut _439: &&solana_program::pubkey::Pubkey;
    let _440: &solana_program::pubkey::Pubkey;
    let mut _441: &&solana_program::pubkey::Pubkey;
    let mut _442: !;
    let _443: ();
    let mut _444: &str;
    let _445: &str;
    let mut _446: solana_program::program_error::ProgramError;
    let mut _447: solend_sdk::error::LendingError;
    let mut _449: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solend_sdk::error::LendingError>, spl_token::state::Mint>;
    let mut _450: std::result::Result<spl_token::state::Mint, solend_sdk::error::LendingError>;
    let mut _451: &[u8];
    let _452: &&mut [u8];
    let mut _453: &std::cell::Ref<'_, &mut [u8]>;
    let _454: &std::cell::Ref<'_, &mut [u8]>;
    let _455: std::cell::Ref<'_, &mut [u8]>;
    let mut _456: &std::cell::RefCell<&mut [u8]>;
    let _457: &std::cell::RefCell<&mut [u8]>;
    let mut _458: &std::rc::Rc<std::cell::RefCell<&mut [u8]>>;
    let mut _459: isize;
    let mut _461: !;
    let mut _462: std::result::Result<std::convert::Infallible, solend_sdk::error::LendingError>;
    let _464: ();
    let mut _465: bool;
    let mut _466: &&solana_program::pubkey::Pubkey;
    let mut _467: &&solana_program::pubkey::Pubkey;
    let mut _468: !;
    let _469: ();
    let mut _470: &str;
    let _471: &str;
    let mut _472: solana_program::program_error::ProgramError;
    let mut _473: solend_sdk::error::LendingError;
    let _474: ();
    let mut _475: &mut solend_sdk::state::Reserve;
    let mut _476: solend_sdk::state::InitReserveParams;
    let mut _477: u64;
    let mut _478: solana_program::pubkey::Pubkey;
    let mut _479: solend_sdk::state::ReserveLiquidity;
    let mut _480: solend_sdk::state::NewReserveLiquidityParams;
    let mut _481: solana_program::pubkey::Pubkey;
    let mut _482: u8;
    let mut _483: solana_program::pubkey::Pubkey;
    let mut _484: solana_program::pubkey::Pubkey;
    let mut _485: solana_program::pubkey::Pubkey;
    let mut _486: solend_sdk::math::Decimal;
    let mut _487: solend_sdk::math::Decimal;
    let mut _488: std::option::Option<solend_sdk::math::Decimal>;
    let mut _489: solend_sdk::math::Decimal;
    let mut _490: solend_sdk::state::ReserveCollateral;
    let mut _491: solend_sdk::state::NewReserveCollateralParams;
    let mut _492: solana_program::pubkey::Pubkey;
    let mut _493: solana_program::pubkey::Pubkey;
    let mut _494: solend_sdk::state::ReserveConfig;
    let mut _495: solend_sdk::state::RateLimiterConfig;
    let mut _497: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, u64>;
    let mut _498: std::result::Result<u64, solana_program::program_error::ProgramError>;
    let mut _499: &mut solend_sdk::state::Reserve;
    let mut _500: u64;
    let mut _501: isize;
    let mut _503: !;
    let mut _504: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _506: ();
    let mut _507: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _508: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _509: solend_sdk::state::Reserve;
    let mut _510: &mut [u8];
    let mut _511: &mut &mut [u8];
    let mut _512: &mut std::cell::RefMut<'_, &mut [u8]>;
    let mut _513: &mut std::cell::RefMut<'_, &mut [u8]>;
    let mut _514: std::cell::RefMut<'_, &mut [u8]>;
    let mut _515: &std::cell::RefCell<&mut [u8]>;
    let _516: &std::cell::RefCell<&mut [u8]>;
    let mut _517: &std::rc::Rc<std::cell::RefCell<&mut [u8]>>;
    let mut _518: isize;
    let mut _520: !;
    let mut _521: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _523: ();
    let mut _524: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _525: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _526: processor::TokenInitializeAccountParams<'_>;
    let mut _527: solana_program::account_info::AccountInfo<'_>;
    let mut _528: &solana_program::account_info::AccountInfo<'_>;
    let mut _529: solana_program::account_info::AccountInfo<'_>;
    let mut _530: &solana_program::account_info::AccountInfo<'_>;
    let mut _531: solana_program::account_info::AccountInfo<'_>;
    let mut _532: &solana_program::account_info::AccountInfo<'_>;
    let mut _533: solana_program::account_info::AccountInfo<'_>;
    let mut _534: &solana_program::account_info::AccountInfo<'_>;
    let mut _535: solana_program::account_info::AccountInfo<'_>;
    let mut _536: &solana_program::account_info::AccountInfo<'_>;
    let mut _537: isize;
    let mut _539: !;
    let mut _540: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _542: ();
    let mut _543: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _544: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _545: processor::TokenInitializeAccountParams<'_>;
    let mut _546: solana_program::account_info::AccountInfo<'_>;
    let mut _547: &solana_program::account_info::AccountInfo<'_>;
    let mut _548: solana_program::account_info::AccountInfo<'_>;
    let mut _549: &solana_program::account_info::AccountInfo<'_>;
    let mut _550: solana_program::account_info::AccountInfo<'_>;
    let mut _551: &solana_program::account_info::AccountInfo<'_>;
    let mut _552: solana_program::account_info::AccountInfo<'_>;
    let mut _553: &solana_program::account_info::AccountInfo<'_>;
    let mut _554: solana_program::account_info::AccountInfo<'_>;
    let mut _555: &solana_program::account_info::AccountInfo<'_>;
    let mut _556: isize;
    let mut _558: !;
    let mut _559: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _561: ();
    let mut _562: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _563: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _564: processor::TokenInitializeMintParams<'_, '_>;
    let mut _565: solana_program::account_info::AccountInfo<'_>;
    let mut _566: &solana_program::account_info::AccountInfo<'_>;
    let mut _567: &solana_program::pubkey::Pubkey;
    let mut _568: solana_program::account_info::AccountInfo<'_>;
    let mut _569: &solana_program::account_info::AccountInfo<'_>;
    let mut _570: u8;
    let mut _571: solana_program::account_info::AccountInfo<'_>;
    let mut _572: &solana_program::account_info::AccountInfo<'_>;
    let mut _573: isize;
    let mut _575: !;
    let mut _576: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _578: ();
    let mut _579: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _580: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _581: processor::TokenInitializeAccountParams<'_>;
    let mut _582: solana_program::account_info::AccountInfo<'_>;
    let mut _583: &solana_program::account_info::AccountInfo<'_>;
    let mut _584: solana_program::account_info::AccountInfo<'_>;
    let mut _585: &solana_program::account_info::AccountInfo<'_>;
    let mut _586: solana_program::account_info::AccountInfo<'_>;
    let mut _587: &solana_program::account_info::AccountInfo<'_>;
    let mut _588: solana_program::account_info::AccountInfo<'_>;
    let mut _589: &solana_program::account_info::AccountInfo<'_>;
    let mut _590: solana_program::account_info::AccountInfo<'_>;
    let mut _591: &solana_program::account_info::AccountInfo<'_>;
    let mut _592: isize;
    let mut _594: !;
    let mut _595: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _597: ();
    let mut _598: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _599: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _600: processor::TokenInitializeAccountParams<'_>;
    let mut _601: solana_program::account_info::AccountInfo<'_>;
    let mut _602: &solana_program::account_info::AccountInfo<'_>;
    let mut _603: solana_program::account_info::AccountInfo<'_>;
    let mut _604: &solana_program::account_info::AccountInfo<'_>;
    let mut _605: solana_program::account_info::AccountInfo<'_>;
    let mut _606: &solana_program::account_info::AccountInfo<'_>;
    let mut _607: solana_program::account_info::AccountInfo<'_>;
    let mut _608: &solana_program::account_info::AccountInfo<'_>;
    let mut _609: solana_program::account_info::AccountInfo<'_>;
    let mut _610: &solana_program::account_info::AccountInfo<'_>;
    let mut _611: isize;
    let mut _613: !;
    let mut _614: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _616: ();
    let mut _617: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _618: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _619: processor::TokenTransferParams<'_, '_>;
    let mut _620: solana_program::account_info::AccountInfo<'_>;
    let mut _621: &solana_program::account_info::AccountInfo<'_>;
    let mut _622: solana_program::account_info::AccountInfo<'_>;
    let mut _623: &solana_program::account_info::AccountInfo<'_>;
    let mut _624: u64;
    let mut _625: solana_program::account_info::AccountInfo<'_>;
    let mut _626: &solana_program::account_info::AccountInfo<'_>;
    let mut _627: &[&[u8]];
    let mut _628: &[&[u8]; 0];
    let _629: &[&[u8]; 0];
    let _630: [&[u8]; 0];
    let mut _631: solana_program::account_info::AccountInfo<'_>;
    let mut _632: &solana_program::account_info::AccountInfo<'_>;
    let mut _633: isize;
    let mut _635: !;
    let mut _636: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _638: ();
    let mut _639: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _640: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _641: processor::TokenMintToParams<'_, '_>;
    let mut _642: solana_program::account_info::AccountInfo<'_>;
    let mut _643: &solana_program::account_info::AccountInfo<'_>;
    let mut _644: solana_program::account_info::AccountInfo<'_>;
    let mut _645: &solana_program::account_info::AccountInfo<'_>;
    let mut _646: u64;
    let mut _647: solana_program::account_info::AccountInfo<'_>;
    let mut _648: &solana_program::account_info::AccountInfo<'_>;
    let mut _649: &[&[u8]];
    let mut _650: &[&[u8]; 2];
    let mut _651: solana_program::account_info::AccountInfo<'_>;
    let mut _652: &solana_program::account_info::AccountInfo<'_>;
    let mut _653: isize;
    let mut _655: !;
    let mut _656: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _658: ();
    let mut _665: &solana_program::pubkey::Pubkey;
    let mut _666: &mut [u8];
    let mut _667: &solana_program::pubkey::Pubkey;
    let mut _668: &solana_program::pubkey::Pubkey;
    let mut _669: &solana_program::pubkey::Pubkey;
    let mut _670: &solana_program::pubkey::Pubkey;
    let mut _671: &solana_program::pubkey::Pubkey;
    let mut _672: &mut [u8];
    let mut _673: &solana_program::pubkey::Pubkey;
    let mut _674: &solana_program::pubkey::Pubkey;
    let mut _675: &solana_program::pubkey::Pubkey;
    let mut _676: &solana_program::pubkey::Pubkey;
    let mut _677: &solana_program::pubkey::Pubkey;
    let mut _678: &solana_program::pubkey::Pubkey;
    let mut _679: &solana_program::pubkey::Pubkey;
    let mut _680: &mut [u8];
    let mut _681: &solana_program::pubkey::Pubkey;
    let mut _682: bool;
    let mut _683: bool;
    let mut _684: isize;
    let mut _685: isize;
    let mut _686: isize;
    let mut _687: isize;
    let mut _688: isize;
    let mut _689: isize;
    let mut _690: isize;
    let mut _691: isize;
    let mut _692: isize;
    let mut _693: isize;
    let mut _694: isize;
    let mut _695: isize;
    let mut _696: isize;
    let mut _697: isize;
    let mut _698: isize;
    let mut _699: isize;
    let mut _700: isize;
    let mut _701: isize;
    let mut _702: isize;
    let mut _703: isize;
    let mut _704: isize;
    let mut _705: isize;
    let mut _706: isize;
    let mut _707: isize;
    let mut _708: isize;
    let mut _709: isize;
    let mut _710: isize;
    let mut _711: isize;
    let mut _712: isize;
    let mut _713: isize;
    let mut _714: isize;
    let mut _715: isize;
    let mut _716: isize;
    let mut _717: isize;
    let mut _718: isize;
    let mut _719: isize;
    let mut _720: isize;
    let mut _721: isize;
    let mut _722: isize;
    let mut _723: isize;
    let mut _724: isize;
    let mut _725: isize;
    let mut _726: isize;
    let mut _727: isize;
    let mut _728: isize;
    let mut _729: isize;
    let mut _730: isize;
    let mut _731: isize;
    let mut _732: isize;
    let mut _733: isize;
    let mut _734: isize;
    let mut _735: isize;
    let mut _736: isize;
    let mut _737: isize;
    let mut _738: isize;
    let mut _739: isize;
    let mut _740: isize;
    let mut _741: isize;
    let mut _742: isize;
    let mut _743: isize;
    let mut _744: isize;
    let mut _745: isize;
    let mut _746: isize;
    let mut _747: isize;
    let mut _748: isize;
    let mut _749: isize;
    let mut _750: isize;
    let mut _751: isize;
    let mut _752: isize;
    let mut _753: isize;
    let mut _754: isize;
    let mut _755: isize;
    let mut _756: isize;
    let mut _757: isize;
    let mut _758: isize;
    let mut _759: isize;
    let mut _760: isize;
    let mut _761: isize;
    let mut _762: isize;
    let mut _763: isize;
    let mut _764: isize;
    let mut _765: isize;
    let mut _766: isize;
    let mut _767: isize;
    let mut _768: isize;
    let mut _769: isize;
    let mut _770: isize;
    let mut _771: isize;
    let mut _772: isize;
    let mut _773: isize;
    let mut _774: isize;
    let mut _775: isize;
    let mut _776: isize;
    let mut _777: isize;
    let mut _778: isize;
    let mut _779: isize;
    let mut _780: isize;
    let mut _781: isize;
    let mut _782: isize;
    let mut _783: isize;
    let mut _784: isize;
    let mut _785: isize;
    let mut _786: isize;
    let mut _787: isize;
    let mut _788: isize;
    let mut _789: isize;
    let mut _790: isize;
    let mut _791: isize;
    let mut _792: isize;
    let mut _793: isize;
    let mut _794: isize;
    let mut _795: isize;
    let mut _796: isize;
    let mut _797: isize;
    let mut _798: isize;
    let mut _799: isize;
    let mut _800: isize;
    let mut _801: isize;
    let mut _802: isize;
    let mut _803: isize;
    let mut _804: isize;
    let mut _805: isize;
    let mut _806: isize;
    let mut _807: isize;
    let mut _808: isize;
    let mut _809: isize;
    let mut _810: isize;
    let mut _811: isize;
    let mut _812: isize;
    let mut _813: isize;
    let mut _814: isize;
    let mut _815: isize;
    let mut _816: isize;
    let mut _817: isize;
    let mut _818: isize;
    let mut _819: isize;
    let mut _820: isize;
    let mut _821: isize;
    let mut _822: isize;
    let mut _823: isize;
    let mut _824: isize;
    let mut _825: isize;
    let mut _826: isize;
    let mut _827: isize;
    let mut _828: isize;
    let mut _829: isize;
    let mut _830: isize;
    let mut _831: isize;
    let mut _832: isize;
    let mut _833: isize;
    let mut _834: isize;
    let mut _835: isize;
    let mut _836: isize;
    let mut _837: isize;
    let mut _838: isize;
    let mut _839: isize;
    let mut _840: isize;
    let mut _841: isize;
    let mut _842: isize;
    let mut _843: isize;
    let mut _844: isize;
    let mut _845: isize;
    let mut _846: isize;
    let mut _847: isize;
    let mut _848: isize;
    let mut _849: isize;
    let mut _850: isize;
    let mut _851: isize;
    let mut _852: isize;
    let mut _853: isize;
    let mut _854: isize;
    let mut _855: isize;
    let mut _856: isize;
    let mut _857: isize;
    let mut _858: isize;
    let mut _859: isize;
    let mut _860: isize;
    let mut _861: isize;
    let mut _862: isize;
    let mut _863: isize;
    let mut _864: isize;
    let mut _865: isize;
    let mut _866: isize;
    let mut _867: isize;
    let mut _868: isize;
    let mut _869: *const solend_sdk::state::LendingMarket;
    let mut _870: *const solend_sdk::state::LendingMarket;
    let mut _871: *const solend_sdk::state::LendingMarket;
    scope 1 {
        debug residual => _19;
        scope 2 {
        }
    }
    scope 3 {
        debug val => _22;
        scope 4 {
        }
    }
    scope 5 {
        debug account_info_iter => _23;
        let _26: &solana_program::account_info::AccountInfo<'_>;
        let _31: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _34: &solana_program::account_info::AccountInfo<'_>;
        scope 6 {
            debug source_liquidity_info => _26;
            let _35: &solana_program::account_info::AccountInfo<'_>;
            let _40: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _43: &solana_program::account_info::AccountInfo<'_>;
            scope 11 {
                debug destination_collateral_info => _35;
                let _44: &solana_program::account_info::AccountInfo<'_>;
                let _49: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _52: &solana_program::account_info::AccountInfo<'_>;
                scope 16 {
                    debug reserve_info => _44;
                    let _53: &solana_program::account_info::AccountInfo<'_>;
                    let _58: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _61: &solana_program::account_info::AccountInfo<'_>;
                    scope 21 {
                        debug reserve_liquidity_mint_info => _53;
                        let _62: &solana_program::account_info::AccountInfo<'_>;
                        let _67: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _70: &solana_program::account_info::AccountInfo<'_>;
                        scope 26 {
                            debug reserve_liquidity_supply_info => _62;
                            let _71: &solana_program::account_info::AccountInfo<'_>;
                            let _76: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                            let _79: &solana_program::account_info::AccountInfo<'_>;
                            scope 31 {
                                debug reserve_liquidity_fee_receiver_info => _71;
                                let _80: &solana_program::account_info::AccountInfo<'_>;
                                let _85: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                let _88: &solana_program::account_info::AccountInfo<'_>;
                                scope 36 {
                                    debug reserve_collateral_mint_info => _80;
                                    let _89: &solana_program::account_info::AccountInfo<'_>;
                                    let _94: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                    let _97: &solana_program::account_info::AccountInfo<'_>;
                                    scope 41 {
                                        debug reserve_collateral_supply_info => _89;
                                        let _98: &solana_program::account_info::AccountInfo<'_>;
                                        let _103: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _106: &solana_program::account_info::AccountInfo<'_>;
                                        scope 46 {
                                            debug pyth_product_info => _98;
                                            let _107: &solana_program::account_info::AccountInfo<'_>;
                                            let _112: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                            let _115: &solana_program::account_info::AccountInfo<'_>;
                                            scope 51 {
                                                debug pyth_price_info => _107;
                                                let _116: &solana_program::account_info::AccountInfo<'_>;
                                                let _121: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                let _124: &solana_program::account_info::AccountInfo<'_>;
                                                scope 56 {
                                                    debug switchboard_feed_info => _116;
                                                    let _125: &solana_program::account_info::AccountInfo<'_>;
                                                    let _130: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                    let _133: &solana_program::account_info::AccountInfo<'_>;
                                                    scope 61 {
                                                        debug lending_market_info => _125;
                                                        let _134: &solana_program::account_info::AccountInfo<'_>;
                                                        let _139: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                        let _142: &solana_program::account_info::AccountInfo<'_>;
                                                        scope 66 {
                                                            debug lending_market_authority_info => _134;
                                                            let _143: &solana_program::account_info::AccountInfo<'_>;
                                                            let _148: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                            let _151: &solana_program::account_info::AccountInfo<'_>;
                                                            scope 71 {
                                                                debug lending_market_owner_info => _143;
                                                                let _152: &solana_program::account_info::AccountInfo<'_>;
                                                                let _157: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                let _160: &solana_program::account_info::AccountInfo<'_>;
                                                                scope 76 {
                                                                    debug user_transfer_authority_info => _152;
                                                                    let _161: &solana_program::clock::Clock;
                                                                    let _166: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                    let _169: solana_program::clock::Clock;
                                                                    scope 81 {
                                                                        debug clock => _161;
                                                                        let _170: &solana_program::account_info::AccountInfo<'_>;
                                                                        let _175: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                        let _178: &solana_program::account_info::AccountInfo<'_>;
                                                                        scope 86 {
                                                                            debug rent_info => _170;
                                                                            let _179: &solana_program::rent::Rent;
                                                                            let _185: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                            let _188: solana_program::rent::Rent;
                                                                            scope 91 {
                                                                                debug rent => _179;
                                                                                let _189: &solana_program::account_info::AccountInfo<'_>;
                                                                                let _194: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                let _197: &solana_program::account_info::AccountInfo<'_>;
                                                                                scope 96 {
                                                                                    debug token_program_id => _189;
                                                                                    let _204: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                    let _207: ();
                                                                                    let mut _208: solend_sdk::state::Reserve;
                                                                                    let _213: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                    let _216: solend_sdk::state::Reserve;
                                                                                    scope 101 {
                                                                                        debug residual => _204;
                                                                                        scope 102 {
                                                                                        }
                                                                                    }
                                                                                    scope 103 {
                                                                                        debug val => _207;
                                                                                        scope 104 {
                                                                                        }
                                                                                    }
                                                                                    scope 105 {
                                                                                        debug reserve => _208;
                                                                                        let _228: std::string::String;
                                                                                        let _262: std::boxed::Box<solend_sdk::state::LendingMarket>;
                                                                                        let _275: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                        let _278: solend_sdk::state::LendingMarket;
                                                                                        let mut _659: &[&str; 2];
                                                                                        scope 110 {
                                                                                            debug res => _228;
                                                                                        }
                                                                                        scope 111 {
                                                                                            debug lending_market => _262;
                                                                                            let _290: std::string::String;
                                                                                            let _368: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                            let _371: ();
                                                                                            let _377: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                            let _380: ();
                                                                                            let _403: solend_sdk::math::Decimal;
                                                                                            let _404: std::option::Option<solend_sdk::math::Decimal>;
                                                                                            let _413: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                            let _416: (solend_sdk::math::Decimal, std::option::Option<solend_sdk::math::Decimal>);
                                                                                            let mut _660: &[&str; 2];
                                                                                            let mut _662: &solana_program::pubkey::Pubkey;
                                                                                            let mut _663: &solana_program::pubkey::Pubkey;
                                                                                            let mut _664: &solana_program::pubkey::Pubkey;
                                                                                            scope 116 {
                                                                                                debug res => _290;
                                                                                            }
                                                                                            scope 117 {
                                                                                                debug residual => _368;
                                                                                                scope 118 {
                                                                                                }
                                                                                            }
                                                                                            scope 119 {
                                                                                                debug val => _371;
                                                                                                scope 120 {
                                                                                                }
                                                                                            }
                                                                                            scope 121 {
                                                                                                debug residual => _377;
                                                                                                scope 122 {
                                                                                                }
                                                                                            }
                                                                                            scope 123 {
                                                                                                debug val => _380;
                                                                                                scope 124 {
                                                                                                }
                                                                                            }
                                                                                            scope 125 {
                                                                                                debug extra_oracle_pubkey => _383;
                                                                                                let _383: solana_program::pubkey::Pubkey;
                                                                                                let _384: &solana_program::account_info::AccountInfo<'_>;
                                                                                                let _389: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                let _392: &solana_program::account_info::AccountInfo<'_>;
                                                                                                scope 126 {
                                                                                                    debug extra_oracle_info => _384;
                                                                                                    let _399: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                    let _402: ();
                                                                                                    scope 131 {
                                                                                                        debug residual => _399;
                                                                                                        scope 132 {
                                                                                                        }
                                                                                                    }
                                                                                                    scope 133 {
                                                                                                        debug val => _402;
                                                                                                        scope 134 {
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                scope 127 {
                                                                                                    debug residual => _389;
                                                                                                    scope 128 {
                                                                                                    }
                                                                                                }
                                                                                                scope 129 {
                                                                                                    debug val => _392;
                                                                                                    scope 130 {
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            scope 135 {
                                                                                                debug market_price => _403;
                                                                                                debug smoothed_market_price => _404;
                                                                                                let _417: &[&[u8]; 2];
                                                                                                let mut _872: *const ();
                                                                                                let mut _873: usize;
                                                                                                let mut _874: usize;
                                                                                                let mut _875: usize;
                                                                                                let mut _876: usize;
                                                                                                let mut _877: bool;
                                                                                                scope 140 {
                                                                                                    debug authority_signer_seeds => _417;
                                                                                                    let _426: solana_program::pubkey::Pubkey;
                                                                                                    let _433: std::result::Result<std::convert::Infallible, solana_program::pubkey::PubkeyError>;
                                                                                                    let _436: solana_program::pubkey::Pubkey;
                                                                                                    scope 141 {
                                                                                                        debug lending_market_authority_pubkey => _426;
                                                                                                        let _448: spl_token::state::Mint;
                                                                                                        let _460: std::result::Result<std::convert::Infallible, solend_sdk::error::LendingError>;
                                                                                                        let _463: spl_token::state::Mint;
                                                                                                        scope 146 {
                                                                                                            debug reserve_liquidity_mint => _448;
                                                                                                            let _496: u64;
                                                                                                            let _502: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                            let _505: u64;
                                                                                                            scope 151 {
                                                                                                                debug collateral_amount => _496;
                                                                                                                let _519: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _522: ();
                                                                                                                let _538: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _541: ();
                                                                                                                let _557: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _560: ();
                                                                                                                let _574: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _577: ();
                                                                                                                let _593: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _596: ();
                                                                                                                let _612: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _615: ();
                                                                                                                let _634: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _637: ();
                                                                                                                let _654: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _657: ();
                                                                                                                let mut _661: &[&[u8]; 0];
                                                                                                                scope 156 {
                                                                                                                    debug residual => _519;
                                                                                                                    scope 157 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 158 {
                                                                                                                    debug val => _522;
                                                                                                                    scope 159 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 160 {
                                                                                                                    debug residual => _538;
                                                                                                                    scope 161 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 162 {
                                                                                                                    debug val => _541;
                                                                                                                    scope 163 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 164 {
                                                                                                                    debug residual => _557;
                                                                                                                    scope 165 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 166 {
                                                                                                                    debug val => _560;
                                                                                                                    scope 167 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 168 {
                                                                                                                    debug residual => _574;
                                                                                                                    scope 169 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 170 {
                                                                                                                    debug val => _577;
                                                                                                                    scope 171 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 172 {
                                                                                                                    debug residual => _593;
                                                                                                                    scope 173 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 174 {
                                                                                                                    debug val => _596;
                                                                                                                    scope 175 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 176 {
                                                                                                                    debug residual => _612;
                                                                                                                    scope 177 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 178 {
                                                                                                                    debug val => _615;
                                                                                                                    scope 179 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 180 {
                                                                                                                    debug residual => _634;
                                                                                                                    scope 181 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 182 {
                                                                                                                    debug val => _637;
                                                                                                                    scope 183 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 184 {
                                                                                                                    debug residual => _654;
                                                                                                                    scope 185 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 186 {
                                                                                                                    debug val => _657;
                                                                                                                    scope 187 {
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                            scope 152 {
                                                                                                                debug residual => _502;
                                                                                                                scope 153 {
                                                                                                                }
                                                                                                            }
                                                                                                            scope 154 {
                                                                                                                debug val => _505;
                                                                                                                scope 155 {
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        scope 147 {
                                                                                                            debug residual => _460;
                                                                                                            scope 148 {
                                                                                                            }
                                                                                                        }
                                                                                                        scope 149 {
                                                                                                            debug val => _463;
                                                                                                            scope 150 {
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    scope 142 {
                                                                                                        debug residual => _433;
                                                                                                        scope 143 {
                                                                                                        }
                                                                                                    }
                                                                                                    scope 144 {
                                                                                                        debug val => _436;
                                                                                                        scope 145 {
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            scope 136 {
                                                                                                debug residual => _413;
                                                                                                scope 137 {
                                                                                                }
                                                                                            }
                                                                                            scope 138 {
                                                                                                debug val => _416;
                                                                                                scope 139 {
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        scope 112 {
                                                                                            debug residual => _275;
                                                                                            scope 113 {
                                                                                            }
                                                                                        }
                                                                                        scope 114 {
                                                                                            debug val => _278;
                                                                                            scope 115 {
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    scope 106 {
                                                                                        debug residual => _213;
                                                                                        scope 107 {
                                                                                        }
                                                                                    }
                                                                                    scope 108 {
                                                                                        debug val => _216;
                                                                                        scope 109 {
                                                                                        }
                                                                                    }
                                                                                }
                                                                                scope 97 {
                                                                                    debug residual => _194;
                                                                                    scope 98 {
                                                                                    }
                                                                                }
                                                                                scope 99 {
                                                                                    debug val => _197;
                                                                                    scope 100 {
                                                                                    }
                                                                                }
                                                                            }
                                                                            scope 92 {
                                                                                debug residual => _185;
                                                                                scope 93 {
                                                                                }
                                                                            }
                                                                            scope 94 {
                                                                                debug val => _188;
                                                                                scope 95 {
                                                                                }
                                                                            }
                                                                        }
                                                                        scope 87 {
                                                                            debug residual => _175;
                                                                            scope 88 {
                                                                            }
                                                                        }
                                                                        scope 89 {
                                                                            debug val => _178;
                                                                            scope 90 {
                                                                            }
                                                                        }
                                                                    }
                                                                    scope 82 {
                                                                        debug residual => _166;
                                                                        scope 83 {
                                                                        }
                                                                    }
                                                                    scope 84 {
                                                                        debug val => _169;
                                                                        scope 85 {
                                                                        }
                                                                    }
                                                                }
                                                                scope 77 {
                                                                    debug residual => _157;
                                                                    scope 78 {
                                                                    }
                                                                }
                                                                scope 79 {
                                                                    debug val => _160;
                                                                    scope 80 {
                                                                    }
                                                                }
                                                            }
                                                            scope 72 {
                                                                debug residual => _148;
                                                                scope 73 {
                                                                }
                                                            }
                                                            scope 74 {
                                                                debug val => _151;
                                                                scope 75 {
                                                                }
                                                            }
                                                        }
                                                        scope 67 {
                                                            debug residual => _139;
                                                            scope 68 {
                                                            }
                                                        }
                                                        scope 69 {
                                                            debug val => _142;
                                                            scope 70 {
                                                            }
                                                        }
                                                    }
                                                    scope 62 {
                                                        debug residual => _130;
                                                        scope 63 {
                                                        }
                                                    }
                                                    scope 64 {
                                                        debug val => _133;
                                                        scope 65 {
                                                        }
                                                    }
                                                }
                                                scope 57 {
                                                    debug residual => _121;
                                                    scope 58 {
                                                    }
                                                }
                                                scope 59 {
                                                    debug val => _124;
                                                    scope 60 {
                                                    }
                                                }
                                            }
                                            scope 52 {
                                                debug residual => _112;
                                                scope 53 {
                                                }
                                            }
                                            scope 54 {
                                                debug val => _115;
                                                scope 55 {
                                                }
                                            }
                                        }
                                        scope 47 {
                                            debug residual => _103;
                                            scope 48 {
                                            }
                                        }
                                        scope 49 {
                                            debug val => _106;
                                            scope 50 {
                                            }
                                        }
                                    }
                                    scope 42 {
                                        debug residual => _94;
                                        scope 43 {
                                        }
                                    }
                                    scope 44 {
                                        debug val => _97;
                                        scope 45 {
                                        }
                                    }
                                }
                                scope 37 {
                                    debug residual => _85;
                                    scope 38 {
                                    }
                                }
                                scope 39 {
                                    debug val => _88;
                                    scope 40 {
                                    }
                                }
                            }
                            scope 32 {
                                debug residual => _76;
                                scope 33 {
                                }
                            }
                            scope 34 {
                                debug val => _79;
                                scope 35 {
                                }
                            }
                        }
                        scope 27 {
                            debug residual => _67;
                            scope 28 {
                            }
                        }
                        scope 29 {
                            debug val => _70;
                            scope 30 {
                            }
                        }
                    }
                    scope 22 {
                        debug residual => _58;
                        scope 23 {
                        }
                    }
                    scope 24 {
                        debug val => _61;
                        scope 25 {
                        }
                    }
                }
                scope 17 {
                    debug residual => _49;
                    scope 18 {
                    }
                }
                scope 19 {
                    debug val => _52;
                    scope 20 {
                    }
                }
            }
            scope 12 {
                debug residual => _40;
                scope 13 {
                }
            }
            scope 14 {
                debug val => _43;
                scope 15 {
                }
            }
        }
        scope 7 {
            debug residual => _31;
            scope 8 {
            }
        }
        scope 9 {
            debug val => _34;
            scope 10 {
            }
        }
    }

    bb0: {
        _683 = const false;
        _682 = const false;
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = _2;
        _6 = Eq(move _7, const 0_u64);
        switchInt(move _6) -> [0: bb4, otherwise: bb1];
    }

    bb1: {
        StorageDead(_7);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = const "Reserve must be initialized with liquidity";
        _10 = &(*_11);
        _9 = solana_program::log::sol_log(move _10) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_10);
        StorageDead(_11);
        StorageDead(_9);
        StorageLive(_12);
        StorageLive(_13);
        _13 = InvalidAmount;
        _12 = <LendingError as Into<ProgramError>>::into(move _13) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_13);
        _0 = Result::<(), ProgramError>::Err(move _12);
        StorageDead(_12);
        StorageDead(_6);
        StorageDead(_5);
        goto -> bb356;
    }

    bb4: {
        StorageDead(_7);
        _5 = const ();
        StorageDead(_6);
        StorageDead(_5);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        _17 = _3;
        _16 = validate_reserve_config(move _17) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_17);
        _15 = <Result<(), ProgramError> as Try>::branch(move _16) -> [return: bb6, unwind: bb395];
    }

    bb6: {
        StorageDead(_16);
        _18 = discriminant(_15);
        switchInt(move _18) -> [0: bb7, 1: bb9, otherwise: bb8];
    }

    bb7: {
        StorageLive(_22);
        _22 = ((_15 as Continue).0: ());
        _14 = _22;
        StorageDead(_22);
        _684 = discriminant(_15);
        StorageDead(_15);
        StorageDead(_14);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &(*_4);
        _24 = bytemuck::core::slice::<impl [AccountInfo<'_>]>::iter(move _25) -> [return: bb11, unwind continue];
    }

    bb8: {
        unreachable;
    }

    bb9: {
        StorageLive(_19);
        _19 = move ((_15 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_21);
        _21 = move _19;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _21) -> [return: bb10, unwind: bb432];
    }

    bb10: {
        StorageDead(_21);
        StorageDead(_19);
        _830 = discriminant(_15);
        StorageDead(_15);
        StorageDead(_14);
        goto -> bb356;
    }

    bb11: {
        StorageDead(_25);
        _23 = &mut _24;
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &mut (*_23);
        _28 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _29) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_29);
        _27 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _28) -> [return: bb13, unwind: bb395];
    }

    bb13: {
        StorageDead(_28);
        _30 = discriminant(_27);
        switchInt(move _30) -> [0: bb14, 1: bb15, otherwise: bb8];
    }

    bb14: {
        StorageLive(_34);
        _34 = ((_27 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _26 = _34;
        StorageDead(_34);
        _686 = discriminant(_27);
        StorageDead(_27);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = &mut (*_23);
        _37 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _38) -> [return: bb17, unwind continue];
    }

    bb15: {
        StorageLive(_31);
        _31 = move ((_27 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_33);
        _33 = move _31;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _33) -> [return: bb16, unwind: bb431];
    }

    bb16: {
        StorageDead(_33);
        StorageDead(_31);
        _828 = discriminant(_27);
        StorageDead(_27);
        goto -> bb355;
    }

    bb17: {
        StorageDead(_38);
        _36 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _37) -> [return: bb18, unwind: bb395];
    }

    bb18: {
        StorageDead(_37);
        _39 = discriminant(_36);
        switchInt(move _39) -> [0: bb19, 1: bb20, otherwise: bb8];
    }

    bb19: {
        StorageLive(_43);
        _43 = ((_36 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _35 = _43;
        StorageDead(_43);
        _688 = discriminant(_36);
        StorageDead(_36);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = &mut (*_23);
        _46 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _47) -> [return: bb22, unwind continue];
    }

    bb20: {
        StorageLive(_40);
        _40 = move ((_36 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_42);
        _42 = move _40;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _42) -> [return: bb21, unwind: bb430];
    }

    bb21: {
        StorageDead(_42);
        StorageDead(_40);
        _826 = discriminant(_36);
        StorageDead(_36);
        goto -> bb354;
    }

    bb22: {
        StorageDead(_47);
        _45 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _46) -> [return: bb23, unwind: bb395];
    }

    bb23: {
        StorageDead(_46);
        _48 = discriminant(_45);
        switchInt(move _48) -> [0: bb24, 1: bb25, otherwise: bb8];
    }

    bb24: {
        StorageLive(_52);
        _52 = ((_45 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _44 = _52;
        StorageDead(_52);
        _690 = discriminant(_45);
        StorageDead(_45);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        _56 = &mut (*_23);
        _55 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _56) -> [return: bb27, unwind continue];
    }

    bb25: {
        StorageLive(_49);
        _49 = move ((_45 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_51);
        _51 = move _49;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _51) -> [return: bb26, unwind: bb429];
    }

    bb26: {
        StorageDead(_51);
        StorageDead(_49);
        _824 = discriminant(_45);
        StorageDead(_45);
        goto -> bb353;
    }

    bb27: {
        StorageDead(_56);
        _54 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _55) -> [return: bb28, unwind: bb395];
    }

    bb28: {
        StorageDead(_55);
        _57 = discriminant(_54);
        switchInt(move _57) -> [0: bb29, 1: bb30, otherwise: bb8];
    }

    bb29: {
        StorageLive(_61);
        _61 = ((_54 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _53 = _61;
        StorageDead(_61);
        _692 = discriminant(_54);
        StorageDead(_54);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        _65 = &mut (*_23);
        _64 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _65) -> [return: bb32, unwind continue];
    }

    bb30: {
        StorageLive(_58);
        _58 = move ((_54 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_60);
        _60 = move _58;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _60) -> [return: bb31, unwind: bb428];
    }

    bb31: {
        StorageDead(_60);
        StorageDead(_58);
        _822 = discriminant(_54);
        StorageDead(_54);
        goto -> bb352;
    }

    bb32: {
        StorageDead(_65);
        _63 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _64) -> [return: bb33, unwind: bb395];
    }

    bb33: {
        StorageDead(_64);
        _66 = discriminant(_63);
        switchInt(move _66) -> [0: bb34, 1: bb35, otherwise: bb8];
    }

    bb34: {
        StorageLive(_70);
        _70 = ((_63 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _62 = _70;
        StorageDead(_70);
        _694 = discriminant(_63);
        StorageDead(_63);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        _74 = &mut (*_23);
        _73 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _74) -> [return: bb37, unwind continue];
    }

    bb35: {
        StorageLive(_67);
        _67 = move ((_63 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_69);
        _69 = move _67;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _69) -> [return: bb36, unwind: bb427];
    }

    bb36: {
        StorageDead(_69);
        StorageDead(_67);
        _820 = discriminant(_63);
        StorageDead(_63);
        goto -> bb351;
    }

    bb37: {
        StorageDead(_74);
        _72 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _73) -> [return: bb38, unwind: bb395];
    }

    bb38: {
        StorageDead(_73);
        _75 = discriminant(_72);
        switchInt(move _75) -> [0: bb39, 1: bb40, otherwise: bb8];
    }

    bb39: {
        StorageLive(_79);
        _79 = ((_72 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _71 = _79;
        StorageDead(_79);
        _696 = discriminant(_72);
        StorageDead(_72);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        _83 = &mut (*_23);
        _82 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _83) -> [return: bb42, unwind continue];
    }

    bb40: {
        StorageLive(_76);
        _76 = move ((_72 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_78);
        _78 = move _76;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _78) -> [return: bb41, unwind: bb426];
    }

    bb41: {
        StorageDead(_78);
        StorageDead(_76);
        _818 = discriminant(_72);
        StorageDead(_72);
        goto -> bb350;
    }

    bb42: {
        StorageDead(_83);
        _81 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _82) -> [return: bb43, unwind: bb395];
    }

    bb43: {
        StorageDead(_82);
        _84 = discriminant(_81);
        switchInt(move _84) -> [0: bb44, 1: bb45, otherwise: bb8];
    }

    bb44: {
        StorageLive(_88);
        _88 = ((_81 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _80 = _88;
        StorageDead(_88);
        _698 = discriminant(_81);
        StorageDead(_81);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        _92 = &mut (*_23);
        _91 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _92) -> [return: bb47, unwind continue];
    }

    bb45: {
        StorageLive(_85);
        _85 = move ((_81 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_87);
        _87 = move _85;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _87) -> [return: bb46, unwind: bb425];
    }

    bb46: {
        StorageDead(_87);
        StorageDead(_85);
        _816 = discriminant(_81);
        StorageDead(_81);
        goto -> bb349;
    }

    bb47: {
        StorageDead(_92);
        _90 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _91) -> [return: bb48, unwind: bb395];
    }

    bb48: {
        StorageDead(_91);
        _93 = discriminant(_90);
        switchInt(move _93) -> [0: bb49, 1: bb50, otherwise: bb8];
    }

    bb49: {
        StorageLive(_97);
        _97 = ((_90 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _89 = _97;
        StorageDead(_97);
        _700 = discriminant(_90);
        StorageDead(_90);
        StorageLive(_98);
        StorageLive(_99);
        StorageLive(_100);
        StorageLive(_101);
        _101 = &mut (*_23);
        _100 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _101) -> [return: bb52, unwind continue];
    }

    bb50: {
        StorageLive(_94);
        _94 = move ((_90 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_96);
        _96 = move _94;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _96) -> [return: bb51, unwind: bb424];
    }

    bb51: {
        StorageDead(_96);
        StorageDead(_94);
        _814 = discriminant(_90);
        StorageDead(_90);
        goto -> bb348;
    }

    bb52: {
        StorageDead(_101);
        _99 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _100) -> [return: bb53, unwind: bb395];
    }

    bb53: {
        StorageDead(_100);
        _102 = discriminant(_99);
        switchInt(move _102) -> [0: bb54, 1: bb55, otherwise: bb8];
    }

    bb54: {
        StorageLive(_106);
        _106 = ((_99 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _98 = _106;
        StorageDead(_106);
        _702 = discriminant(_99);
        StorageDead(_99);
        StorageLive(_107);
        StorageLive(_108);
        StorageLive(_109);
        StorageLive(_110);
        _110 = &mut (*_23);
        _109 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _110) -> [return: bb57, unwind continue];
    }

    bb55: {
        StorageLive(_103);
        _103 = move ((_99 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_105);
        _105 = move _103;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _105) -> [return: bb56, unwind: bb423];
    }

    bb56: {
        StorageDead(_105);
        StorageDead(_103);
        _812 = discriminant(_99);
        StorageDead(_99);
        goto -> bb347;
    }

    bb57: {
        StorageDead(_110);
        _108 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _109) -> [return: bb58, unwind: bb395];
    }

    bb58: {
        StorageDead(_109);
        _111 = discriminant(_108);
        switchInt(move _111) -> [0: bb59, 1: bb60, otherwise: bb8];
    }

    bb59: {
        StorageLive(_115);
        _115 = ((_108 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _107 = _115;
        StorageDead(_115);
        _704 = discriminant(_108);
        StorageDead(_108);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        StorageLive(_119);
        _119 = &mut (*_23);
        _118 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _119) -> [return: bb62, unwind continue];
    }

    bb60: {
        StorageLive(_112);
        _112 = move ((_108 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_114);
        _114 = move _112;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _114) -> [return: bb61, unwind: bb422];
    }

    bb61: {
        StorageDead(_114);
        StorageDead(_112);
        _810 = discriminant(_108);
        StorageDead(_108);
        goto -> bb346;
    }

    bb62: {
        StorageDead(_119);
        _117 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _118) -> [return: bb63, unwind: bb395];
    }

    bb63: {
        StorageDead(_118);
        _120 = discriminant(_117);
        switchInt(move _120) -> [0: bb64, 1: bb65, otherwise: bb8];
    }

    bb64: {
        StorageLive(_124);
        _124 = ((_117 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _116 = _124;
        StorageDead(_124);
        _706 = discriminant(_117);
        StorageDead(_117);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        StorageLive(_128);
        _128 = &mut (*_23);
        _127 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _128) -> [return: bb67, unwind continue];
    }

    bb65: {
        StorageLive(_121);
        _121 = move ((_117 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_123);
        _123 = move _121;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _123) -> [return: bb66, unwind: bb421];
    }

    bb66: {
        StorageDead(_123);
        StorageDead(_121);
        _808 = discriminant(_117);
        StorageDead(_117);
        goto -> bb345;
    }

    bb67: {
        StorageDead(_128);
        _126 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _127) -> [return: bb68, unwind: bb395];
    }

    bb68: {
        StorageDead(_127);
        _129 = discriminant(_126);
        switchInt(move _129) -> [0: bb69, 1: bb70, otherwise: bb8];
    }

    bb69: {
        StorageLive(_133);
        _133 = ((_126 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _125 = _133;
        StorageDead(_133);
        _708 = discriminant(_126);
        StorageDead(_126);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        StorageLive(_137);
        _137 = &mut (*_23);
        _136 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _137) -> [return: bb72, unwind continue];
    }

    bb70: {
        StorageLive(_130);
        _130 = move ((_126 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_132);
        _132 = move _130;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _132) -> [return: bb71, unwind: bb420];
    }

    bb71: {
        StorageDead(_132);
        StorageDead(_130);
        _806 = discriminant(_126);
        StorageDead(_126);
        goto -> bb344;
    }

    bb72: {
        StorageDead(_137);
        _135 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _136) -> [return: bb73, unwind: bb395];
    }

    bb73: {
        StorageDead(_136);
        _138 = discriminant(_135);
        switchInt(move _138) -> [0: bb74, 1: bb75, otherwise: bb8];
    }

    bb74: {
        StorageLive(_142);
        _142 = ((_135 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _134 = _142;
        StorageDead(_142);
        _710 = discriminant(_135);
        StorageDead(_135);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        StorageLive(_146);
        _146 = &mut (*_23);
        _145 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _146) -> [return: bb77, unwind continue];
    }

    bb75: {
        StorageLive(_139);
        _139 = move ((_135 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_141);
        _141 = move _139;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _141) -> [return: bb76, unwind: bb419];
    }

    bb76: {
        StorageDead(_141);
        StorageDead(_139);
        _804 = discriminant(_135);
        StorageDead(_135);
        goto -> bb343;
    }

    bb77: {
        StorageDead(_146);
        _144 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _145) -> [return: bb78, unwind: bb395];
    }

    bb78: {
        StorageDead(_145);
        _147 = discriminant(_144);
        switchInt(move _147) -> [0: bb79, 1: bb80, otherwise: bb8];
    }

    bb79: {
        StorageLive(_151);
        _151 = ((_144 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _143 = _151;
        StorageDead(_151);
        _712 = discriminant(_144);
        StorageDead(_144);
        StorageLive(_152);
        StorageLive(_153);
        StorageLive(_154);
        StorageLive(_155);
        _155 = &mut (*_23);
        _154 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _155) -> [return: bb82, unwind continue];
    }

    bb80: {
        StorageLive(_148);
        _148 = move ((_144 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_150);
        _150 = move _148;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _150) -> [return: bb81, unwind: bb418];
    }

    bb81: {
        StorageDead(_150);
        StorageDead(_148);
        _802 = discriminant(_144);
        StorageDead(_144);
        goto -> bb342;
    }

    bb82: {
        StorageDead(_155);
        _153 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _154) -> [return: bb83, unwind: bb395];
    }

    bb83: {
        StorageDead(_154);
        _156 = discriminant(_153);
        switchInt(move _156) -> [0: bb84, 1: bb85, otherwise: bb8];
    }

    bb84: {
        StorageLive(_160);
        _160 = ((_153 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _152 = _160;
        StorageDead(_160);
        _714 = discriminant(_153);
        StorageDead(_153);
        StorageLive(_161);
        StorageLive(_162);
        StorageLive(_163);
        StorageLive(_164);
        _164 = <Clock as Sysvar>::get() -> [return: bb87, unwind continue];
    }

    bb85: {
        StorageLive(_157);
        _157 = move ((_153 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_159);
        _159 = move _157;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _159) -> [return: bb86, unwind: bb417];
    }

    bb86: {
        StorageDead(_159);
        StorageDead(_157);
        _800 = discriminant(_153);
        StorageDead(_153);
        goto -> bb341;
    }

    bb87: {
        _163 = <Result<Clock, ProgramError> as Try>::branch(move _164) -> [return: bb88, unwind: bb395];
    }

    bb88: {
        StorageDead(_164);
        _165 = discriminant(_163);
        switchInt(move _165) -> [0: bb89, 1: bb90, otherwise: bb8];
    }

    bb89: {
        StorageLive(_169);
        _169 = move ((_163 as Continue).0: solana_program::clock::Clock);
        _162 = move _169;
        StorageDead(_169);
        _161 = &_162;
        _716 = discriminant(_163);
        StorageDead(_163);
        StorageLive(_170);
        StorageLive(_171);
        StorageLive(_172);
        StorageLive(_173);
        _173 = &mut (*_23);
        _172 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _173) -> [return: bb92, unwind continue];
    }

    bb90: {
        StorageLive(_166);
        _166 = move ((_163 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_168);
        _168 = move _166;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _168) -> [return: bb91, unwind: bb416];
    }

    bb91: {
        StorageDead(_168);
        StorageDead(_166);
        _798 = discriminant(_163);
        StorageDead(_163);
        goto -> bb340;
    }

    bb92: {
        StorageDead(_173);
        _171 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _172) -> [return: bb93, unwind: bb395];
    }

    bb93: {
        StorageDead(_172);
        _174 = discriminant(_171);
        switchInt(move _174) -> [0: bb94, 1: bb95, otherwise: bb8];
    }

    bb94: {
        StorageLive(_178);
        _178 = ((_171 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _170 = _178;
        StorageDead(_178);
        _718 = discriminant(_171);
        StorageDead(_171);
        StorageLive(_179);
        StorageLive(_180);
        StorageLive(_181);
        StorageLive(_182);
        StorageLive(_183);
        _183 = &(*_170);
        _182 = <Rent as Sysvar>::from_account_info(move _183) -> [return: bb97, unwind continue];
    }

    bb95: {
        StorageLive(_175);
        _175 = move ((_171 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_177);
        _177 = move _175;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _177) -> [return: bb96, unwind: bb415];
    }

    bb96: {
        StorageDead(_177);
        StorageDead(_175);
        _796 = discriminant(_171);
        StorageDead(_171);
        goto -> bb339;
    }

    bb97: {
        StorageDead(_183);
        _181 = <Result<Rent, ProgramError> as Try>::branch(move _182) -> [return: bb98, unwind: bb395];
    }

    bb98: {
        StorageDead(_182);
        _184 = discriminant(_181);
        switchInt(move _184) -> [0: bb99, 1: bb100, otherwise: bb8];
    }

    bb99: {
        StorageLive(_188);
        _188 = ((_181 as Continue).0: solana_program::rent::Rent);
        _180 = _188;
        StorageDead(_188);
        _179 = &_180;
        _720 = discriminant(_181);
        StorageDead(_181);
        StorageLive(_189);
        StorageLive(_190);
        StorageLive(_191);
        StorageLive(_192);
        _192 = &mut (*_23);
        _191 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _192) -> [return: bb102, unwind continue];
    }

    bb100: {
        StorageLive(_185);
        _185 = move ((_181 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_187);
        _187 = move _185;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _187) -> [return: bb101, unwind: bb414];
    }

    bb101: {
        StorageDead(_187);
        StorageDead(_185);
        _794 = discriminant(_181);
        StorageDead(_181);
        goto -> bb338;
    }

    bb102: {
        StorageDead(_192);
        _190 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _191) -> [return: bb103, unwind: bb395];
    }

    bb103: {
        StorageDead(_191);
        _193 = discriminant(_190);
        switchInt(move _193) -> [0: bb104, 1: bb105, otherwise: bb8];
    }

    bb104: {
        StorageLive(_197);
        _197 = ((_190 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _189 = _197;
        StorageDead(_197);
        _722 = discriminant(_190);
        StorageDead(_190);
        StorageLive(_198);
        StorageLive(_199);
        StorageLive(_200);
        StorageLive(_201);
        _201 = &(*_179);
        StorageLive(_202);
        _202 = &(*_44);
        _200 = assert_rent_exempt(move _201, move _202) -> [return: bb107, unwind continue];
    }

    bb105: {
        StorageLive(_194);
        _194 = move ((_190 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_196);
        _196 = move _194;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _196) -> [return: bb106, unwind: bb413];
    }

    bb106: {
        StorageDead(_196);
        StorageDead(_194);
        _792 = discriminant(_190);
        StorageDead(_190);
        goto -> bb337;
    }

    bb107: {
        StorageDead(_202);
        StorageDead(_201);
        _199 = <Result<(), ProgramError> as Try>::branch(move _200) -> [return: bb108, unwind: bb395];
    }

    bb108: {
        StorageDead(_200);
        _203 = discriminant(_199);
        switchInt(move _203) -> [0: bb109, 1: bb110, otherwise: bb8];
    }

    bb109: {
        StorageLive(_207);
        _207 = ((_199 as Continue).0: ());
        _198 = _207;
        StorageDead(_207);
        _724 = discriminant(_199);
        StorageDead(_199);
        StorageDead(_198);
        StorageLive(_208);
        StorageLive(_209);
        StorageLive(_210);
        StorageLive(_211);
        _211 = &(*_44);
        _210 = assert_uninitialized::<Reserve>(move _211) -> [return: bb112, unwind continue];
    }

    bb110: {
        StorageLive(_204);
        _204 = move ((_199 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_206);
        _206 = move _204;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _206) -> [return: bb111, unwind: bb412];
    }

    bb111: {
        StorageDead(_206);
        StorageDead(_204);
        _790 = discriminant(_199);
        StorageDead(_199);
        StorageDead(_198);
        goto -> bb337;
    }

    bb112: {
        StorageDead(_211);
        _209 = <Result<Reserve, ProgramError> as Try>::branch(move _210) -> [return: bb113, unwind: bb395];
    }

    bb113: {
        StorageDead(_210);
        _212 = discriminant(_209);
        switchInt(move _212) -> [0: bb114, 1: bb115, otherwise: bb8];
    }

    bb114: {
        StorageLive(_216);
        _216 = move ((_209 as Continue).0: solend_sdk::state::Reserve);
        _208 = move _216;
        StorageDead(_216);
        _726 = discriminant(_209);
        StorageDead(_209);
        StorageLive(_217);
        StorageLive(_218);
        StorageLive(_219);
        _219 = &((*_44).3: &solana_program::pubkey::Pubkey);
        StorageLive(_220);
        _220 = &_1;
        _218 = <&Pubkey as PartialEq>::ne(move _219, move _220) -> [return: bb117, unwind continue];
    }

    bb115: {
        StorageLive(_213);
        _213 = move ((_209 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_215);
        _215 = move _213;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _215) -> [return: bb116, unwind: bb411];
    }

    bb116: {
        StorageDead(_215);
        StorageDead(_213);
        _788 = discriminant(_209);
        StorageDead(_209);
        goto -> bb336;
    }

    bb117: {
        switchInt(move _218) -> [0: bb131, otherwise: bb118];
    }

    bb118: {
        StorageDead(_220);
        StorageDead(_219);
        StorageLive(_222);
        StorageLive(_223);
        StorageLive(_224);
        StorageLive(_225);
        StorageLive(_226);
        StorageLive(_227);
        StorageLive(_228);
        StorageLive(_229);
        StorageLive(_230);
        StorageLive(_231);
        StorageLive(_232);
        _659 = const _;
        _232 = &(*_659);
        _231 = &(*_232);
        _230 = move _231 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_231);
        StorageLive(_234);
        StorageLive(_235);
        StorageLive(_236);
        StorageLive(_237);
        StorageLive(_238);
        StorageLive(_239);
        StorageLive(_240);
        StorageLive(_241);
        StorageLive(_242);
        StorageLive(_243);
        _665 = deref_copy ((*_44).3: &solana_program::pubkey::Pubkey);
        _243 = &(*_665);
        _242 = <Pubkey as ToString>::to_string(move _243) -> [return: bb119, unwind continue];
    }

    bb119: {
        StorageDead(_243);
        _241 = &_242;
        _240 = &_241;
        _239 = &(*_240);
        _238 = bytemuck::core::fmt::rt::Argument::<'_>::new_display::<&String>(move _239) -> [return: bb120, unwind: bb394];
    }

    bb120: {
        StorageDead(_239);
        StorageLive(_244);
        StorageLive(_245);
        StorageLive(_246);
        StorageLive(_247);
        StorageLive(_248);
        StorageLive(_249);
        _249 = &(*_1);
        _248 = <Pubkey as ToString>::to_string(move _249) -> [return: bb121, unwind: bb394];
    }

    bb121: {
        StorageDead(_249);
        _247 = &_248;
        _246 = &_247;
        _245 = &(*_246);
        _244 = bytemuck::core::fmt::rt::Argument::<'_>::new_display::<&String>(move _245) -> [return: bb122, unwind: bb393];
    }

    bb122: {
        StorageDead(_245);
        _237 = [move _238, move _244];
        StorageDead(_244);
        StorageDead(_238);
        _236 = &_237;
        _235 = &(*_236);
        _234 = move _235 as &[bytemuck::core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_235);
        _229 = Arguments::<'_>::new_v1(move _230, move _234) -> [return: bb123, unwind: bb393];
    }

    bb123: {
        StorageDead(_234);
        StorageDead(_230);
        _228 = format(move _229) -> [return: bb124, unwind: bb393];
    }

    bb124: {
        StorageDead(_229);
        drop(_248) -> [return: bb125, unwind: bb391];
    }

    bb125: {
        StorageDead(_248);
        StorageDead(_247);
        StorageDead(_246);
        drop(_242) -> [return: bb126, unwind: bb392];
    }

    bb126: {
        StorageDead(_242);
        StorageDead(_241);
        StorageDead(_240);
        StorageDead(_237);
        StorageDead(_236);
        StorageDead(_232);
        _227 = move _228;
        StorageDead(_228);
        _226 = &_227;
        _225 = &(*_226);
        _224 = <String as Deref>::deref(move _225) -> [return: bb127, unwind: bb390];
    }

    bb127: {
        _223 = &(*_224);
        StorageDead(_225);
        _222 = solana_program::log::sol_log(move _223) -> [return: bb128, unwind: bb390];
    }

    bb128: {
        StorageDead(_223);
        drop(_227) -> [return: bb129, unwind: bb395];
    }

    bb129: {
        StorageDead(_227);
        StorageDead(_226);
        StorageDead(_224);
        StorageDead(_222);
        StorageLive(_250);
        StorageLive(_251);
        _251 = solend_sdk::error::LendingError::InvalidAccountOwner;
        _250 = <LendingError as Into<ProgramError>>::into(move _251) -> [return: bb130, unwind continue];
    }

    bb130: {
        StorageDead(_251);
        _0 = Result::<(), ProgramError>::Err(move _250);
        StorageDead(_250);
        StorageDead(_218);
        StorageDead(_217);
        goto -> bb336;
    }

    bb131: {
        StorageDead(_220);
        StorageDead(_219);
        _217 = const ();
        StorageDead(_218);
        StorageDead(_217);
        StorageLive(_252);
        StorageLive(_253);
        StorageLive(_254);
        _254 = &((*_62).0: &solana_program::pubkey::Pubkey);
        StorageLive(_255);
        _255 = &((*_26).0: &solana_program::pubkey::Pubkey);
        _253 = <&Pubkey as PartialEq>::eq(move _254, move _255) -> [return: bb132, unwind continue];
    }

    bb132: {
        switchInt(move _253) -> [0: bb136, otherwise: bb133];
    }

    bb133: {
        StorageDead(_255);
        StorageDead(_254);
        StorageLive(_257);
        StorageLive(_258);
        StorageLive(_259);
        _259 = const "Reserve liquidity supply cannot be used as the source liquidity provided";
        _258 = &(*_259);
        _257 = solana_program::log::sol_log(move _258) -> [return: bb134, unwind continue];
    }

    bb134: {
        StorageDead(_258);
        StorageDead(_259);
        StorageDead(_257);
        StorageLive(_260);
        StorageLive(_261);
        _261 = InvalidAccountInput;
        _260 = <LendingError as Into<ProgramError>>::into(move _261) -> [return: bb135, unwind continue];
    }

    bb135: {
        StorageDead(_261);
        _0 = Result::<(), ProgramError>::Err(move _260);
        StorageDead(_260);
        StorageDead(_253);
        StorageDead(_252);
        goto -> bb336;
    }

    bb136: {
        StorageDead(_255);
        StorageDead(_254);
        _252 = const ();
        StorageDead(_253);
        StorageDead(_252);
        StorageLive(_262);
        StorageLive(_263);
        StorageLive(_264);
        StorageLive(_265);
        StorageLive(_266);
        StorageLive(_267);
        StorageLive(_268);
        StorageLive(_269);
        StorageLive(_270);
        StorageLive(_271);
        StorageLive(_272);
        StorageLive(_273);
        _273 = &((*_125).2: std::rc::Rc<std::cell::RefCell<&mut [u8]>>);
        _272 = <Rc<RefCell<&mut [u8]>> as Deref>::deref(move _273) -> [return: bb137, unwind continue];
    }

    bb137: {
        _271 = &(*_272);
        StorageDead(_273);
        _270 = RefCell::<&mut [u8]>::borrow(move _271) -> [return: bb138, unwind continue];
    }

    bb138: {
        StorageDead(_271);
        _269 = &_270;
        _268 = &(*_269);
        _267 = <Ref<'_, &mut [u8]> as Deref>::deref(move _268) -> [return: bb139, unwind: bb389];
    }

    bb139: {
        _666 = deref_copy (*_267);
        _266 = &(*_666);
        StorageDead(_268);
        _265 = <LendingMarket as Pack>::unpack(move _266) -> [return: bb140, unwind: bb389];
    }

    bb140: {
        StorageDead(_266);
        _264 = <Result<LendingMarket, ProgramError> as Try>::branch(move _265) -> [return: bb141, unwind: bb389];
    }

    bb141: {
        _682 = const true;
        _683 = const true;
        StorageDead(_265);
        _274 = discriminant(_264);
        switchInt(move _274) -> [0: bb142, 1: bb143, otherwise: bb8];
    }

    bb142: {
        StorageLive(_278);
        _278 = move ((_264 as Continue).0: solend_sdk::state::LendingMarket);
        _263 = move _278;
        StorageDead(_278);
        _262 = Box::<LendingMarket>::new(move _263) -> [return: bb145, unwind: bb410];
    }

    bb143: {
        StorageLive(_275);
        _275 = move ((_264 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_277);
        _277 = move _275;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _277) -> [return: bb144, unwind: bb410];
    }

    bb144: {
        StorageDead(_277);
        StorageDead(_275);
        StorageDead(_263);
        _786 = discriminant(_264);
        drop(_270) -> [return: bb334, unwind: bb395];
    }

    bb145: {
        StorageDead(_263);
        _728 = discriminant(_264);
        drop(_270) -> [return: bb146, unwind: bb388];
    }

    bb146: {
        StorageDead(_272);
        StorageDead(_270);
        StorageDead(_269);
        StorageDead(_267);
        _682 = const false;
        _683 = const false;
        StorageDead(_264);
        StorageLive(_279);
        StorageLive(_280);
        StorageLive(_281);
        _281 = &((*_125).3: &solana_program::pubkey::Pubkey);
        StorageLive(_282);
        _282 = &_1;
        _280 = <&Pubkey as PartialEq>::ne(move _281, move _282) -> [return: bb147, unwind: bb388];
    }

    bb147: {
        switchInt(move _280) -> [0: bb161, otherwise: bb148];
    }

    bb148: {
        StorageDead(_282);
        StorageDead(_281);
        StorageLive(_284);
        StorageLive(_285);
        StorageLive(_286);
        StorageLive(_287);
        StorageLive(_288);
        StorageLive(_289);
        StorageLive(_290);
        StorageLive(_291);
        StorageLive(_292);
        StorageLive(_293);
        StorageLive(_294);
        _660 = const _;
        _294 = &(*_660);
        _293 = &(*_294);
        _292 = move _293 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_293);
        StorageLive(_296);
        StorageLive(_297);
        StorageLive(_298);
        StorageLive(_299);
        StorageLive(_300);
        StorageLive(_301);
        StorageLive(_302);
        StorageLive(_303);
        StorageLive(_304);
        StorageLive(_305);
        _667 = deref_copy ((*_125).3: &solana_program::pubkey::Pubkey);
        _305 = &(*_667);
        _304 = <Pubkey as ToString>::to_string(move _305) -> [return: bb149, unwind: bb388];
    }

    bb149: {
        StorageDead(_305);
        _303 = &_304;
        _302 = &_303;
        _301 = &(*_302);
        _300 = bytemuck::core::fmt::rt::Argument::<'_>::new_display::<&String>(move _301) -> [return: bb150, unwind: bb387];
    }

    bb150: {
        StorageDead(_301);
        StorageLive(_306);
        StorageLive(_307);
        StorageLive(_308);
        StorageLive(_309);
        StorageLive(_310);
        StorageLive(_311);
        _311 = &(*_1);
        _310 = <Pubkey as ToString>::to_string(move _311) -> [return: bb151, unwind: bb387];
    }

    bb151: {
        StorageDead(_311);
        _309 = &_310;
        _308 = &_309;
        _307 = &(*_308);
        _306 = bytemuck::core::fmt::rt::Argument::<'_>::new_display::<&String>(move _307) -> [return: bb152, unwind: bb386];
    }

    bb152: {
        StorageDead(_307);
        _299 = [move _300, move _306];
        StorageDead(_306);
        StorageDead(_300);
        _298 = &_299;
        _297 = &(*_298);
        _296 = move _297 as &[bytemuck::core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_297);
        _291 = Arguments::<'_>::new_v1(move _292, move _296) -> [return: bb153, unwind: bb386];
    }

    bb153: {
        StorageDead(_296);
        StorageDead(_292);
        _290 = format(move _291) -> [return: bb154, unwind: bb386];
    }

    bb154: {
        StorageDead(_291);
        drop(_310) -> [return: bb155, unwind: bb384];
    }

    bb155: {
        StorageDead(_310);
        StorageDead(_309);
        StorageDead(_308);
        drop(_304) -> [return: bb156, unwind: bb385];
    }

    bb156: {
        StorageDead(_304);
        StorageDead(_303);
        StorageDead(_302);
        StorageDead(_299);
        StorageDead(_298);
        StorageDead(_294);
        _289 = move _290;
        StorageDead(_290);
        _288 = &_289;
        _287 = &(*_288);
        _286 = <String as Deref>::deref(move _287) -> [return: bb157, unwind: bb383];
    }

    bb157: {
        _285 = &(*_286);
        StorageDead(_287);
        _284 = solana_program::log::sol_log(move _285) -> [return: bb158, unwind: bb383];
    }

    bb158: {
        StorageDead(_285);
        drop(_289) -> [return: bb159, unwind: bb388];
    }

    bb159: {
        StorageDead(_289);
        StorageDead(_288);
        StorageDead(_286);
        StorageDead(_284);
        StorageLive(_312);
        StorageLive(_313);
        _313 = solend_sdk::error::LendingError::InvalidAccountOwner;
        _312 = <LendingError as Into<ProgramError>>::into(move _313) -> [return: bb160, unwind: bb388];
    }

    bb160: {
        StorageDead(_313);
        _0 = Result::<(), ProgramError>::Err(move _312);
        StorageDead(_312);
        StorageDead(_280);
        StorageDead(_279);
        goto -> bb333;
    }

    bb161: {
        StorageDead(_282);
        StorageDead(_281);
        _279 = const ();
        StorageDead(_280);
        StorageDead(_279);
        StorageLive(_314);
        StorageLive(_315);
        StorageLive(_316);
        StorageLive(_317);
        _869 = (((_262.0: std::ptr::Unique<solend_sdk::state::LendingMarket>).0: std::ptr::NonNull<solend_sdk::state::LendingMarket>).0: *const solend_sdk::state::LendingMarket);
        _317 = &((*_869).4: solana_program::pubkey::Pubkey);
        _316 = &_317;
        StorageLive(_318);
        _318 = &((*_189).0: &solana_program::pubkey::Pubkey);
        _315 = <&Pubkey as PartialEq>::ne(move _316, move _318) -> [return: bb162, unwind: bb388];
    }

    bb162: {
        switchInt(move _315) -> [0: bb166, otherwise: bb163];
    }

    bb163: {
        StorageDead(_318);
        StorageDead(_317);
        StorageDead(_316);
        StorageLive(_320);
        StorageLive(_321);
        StorageLive(_322);
        _322 = const "Lending market token program does not match the token program provided";
        _321 = &(*_322);
        _320 = solana_program::log::sol_log(move _321) -> [return: bb164, unwind: bb388];
    }

    bb164: {
        StorageDead(_321);
        StorageDead(_322);
        StorageDead(_320);
        StorageLive(_323);
        StorageLive(_324);
        _324 = InvalidTokenProgram;
        _323 = <LendingError as Into<ProgramError>>::into(move _324) -> [return: bb165, unwind: bb388];
    }

    bb165: {
        StorageDead(_324);
        _0 = Result::<(), ProgramError>::Err(move _323);
        StorageDead(_323);
        StorageDead(_315);
        StorageDead(_314);
        goto -> bb333;
    }

    bb166: {
        StorageDead(_318);
        StorageDead(_317);
        StorageDead(_316);
        _314 = const ();
        StorageDead(_315);
        StorageDead(_314);
        StorageLive(_325);
        StorageLive(_326);
        StorageLive(_327);
        StorageLive(_328);
        _870 = (((_262.0: std::ptr::Unique<solend_sdk::state::LendingMarket>).0: std::ptr::NonNull<solend_sdk::state::LendingMarket>).0: *const solend_sdk::state::LendingMarket);
        _328 = &((*_870).2: solana_program::pubkey::Pubkey);
        _327 = &_328;
        StorageLive(_329);
        _329 = &((*_143).0: &solana_program::pubkey::Pubkey);
        _326 = <&Pubkey as PartialEq>::ne(move _327, move _329) -> [return: bb167, unwind: bb388];
    }

    bb167: {
        switchInt(move _326) -> [0: bb171, otherwise: bb168];
    }

    bb168: {
        StorageDead(_329);
        StorageDead(_328);
        StorageDead(_327);
        StorageLive(_331);
        StorageLive(_332);
        StorageLive(_333);
        _333 = const "Lending market owner does not match the lending market owner provided";
        _332 = &(*_333);
        _331 = solana_program::log::sol_log(move _332) -> [return: bb169, unwind: bb388];
    }

    bb169: {
        StorageDead(_332);
        StorageDead(_333);
        StorageDead(_331);
        StorageLive(_334);
        StorageLive(_335);
        _335 = InvalidMarketOwner;
        _334 = <LendingError as Into<ProgramError>>::into(move _335) -> [return: bb170, unwind: bb388];
    }

    bb170: {
        StorageDead(_335);
        _0 = Result::<(), ProgramError>::Err(move _334);
        StorageDead(_334);
        StorageDead(_326);
        StorageDead(_325);
        goto -> bb333;
    }

    bb171: {
        StorageDead(_329);
        StorageDead(_328);
        StorageDead(_327);
        _325 = const ();
        StorageDead(_326);
        StorageDead(_325);
        StorageLive(_336);
        StorageLive(_337);
        _337 = ((*_143).5: bool);
        switchInt(move _337) -> [0: bb173, otherwise: bb172];
    }

    bb172: {
        _336 = const ();
        StorageDead(_337);
        StorageDead(_336);
        StorageLive(_344);
        StorageLive(_345);
        StorageLive(_346);
        _668 = deref_copy ((*_116).0: &solana_program::pubkey::Pubkey);
        _346 = &(*_668);
        StorageLive(_347);
        _664 = const _;
        _347 = &(*_664);
        _345 = <Pubkey as PartialEq>::eq(move _346, move _347) -> [return: bb176, unwind: bb388];
    }

    bb173: {
        StorageLive(_339);
        StorageLive(_340);
        StorageLive(_341);
        _341 = const "Lending market owner provided must be a signer";
        _340 = &(*_341);
        _339 = solana_program::log::sol_log(move _340) -> [return: bb174, unwind: bb388];
    }

    bb174: {
        StorageDead(_340);
        StorageDead(_341);
        StorageDead(_339);
        StorageLive(_342);
        StorageLive(_343);
        _343 = InvalidSigner;
        _342 = <LendingError as Into<ProgramError>>::into(move _343) -> [return: bb175, unwind: bb388];
    }

    bb175: {
        StorageDead(_343);
        _0 = Result::<(), ProgramError>::Err(move _342);
        StorageDead(_342);
        StorageDead(_337);
        StorageDead(_336);
        goto -> bb333;
    }

    bb176: {
        switchInt(move _345) -> [0: bb186, otherwise: bb177];
    }

    bb177: {
        StorageDead(_347);
        StorageDead(_346);
        StorageLive(_349);
        StorageLive(_350);
        _669 = deref_copy ((*_107).0: &solana_program::pubkey::Pubkey);
        _350 = &(*_669);
        StorageLive(_351);
        _663 = const _;
        _351 = &(*_663);
        _349 = <Pubkey as PartialEq>::eq(move _350, move _351) -> [return: bb178, unwind: bb388];
    }

    bb178: {
        switchInt(move _349) -> [0: bb180, otherwise: bb179];
    }

    bb179: {
        StorageDead(_351);
        StorageDead(_350);
        goto -> bb182;
    }

    bb180: {
        StorageDead(_351);
        StorageDead(_350);
        StorageLive(_353);
        StorageLive(_354);
        _670 = deref_copy ((*_98).0: &solana_program::pubkey::Pubkey);
        _354 = &(*_670);
        StorageLive(_355);
        _662 = const _;
        _355 = &(*_662);
        _353 = <Pubkey as PartialEq>::eq(move _354, move _355) -> [return: bb181, unwind: bb388];
    }

    bb181: {
        switchInt(move _353) -> [0: bb185, otherwise: bb182];
    }

    bb182: {
        StorageDead(_355);
        StorageDead(_354);
        StorageLive(_358);
        StorageLive(_359);
        StorageLive(_360);
        _360 = const "Both price oracles are null. At least one must be non-null";
        _359 = &(*_360);
        _358 = solana_program::log::sol_log(move _359) -> [return: bb183, unwind: bb388];
    }

    bb183: {
        StorageDead(_359);
        StorageDead(_360);
        StorageDead(_358);
        StorageLive(_361);
        StorageLive(_362);
        _362 = InvalidOracleConfig;
        _361 = <LendingError as Into<ProgramError>>::into(move _362) -> [return: bb184, unwind: bb388];
    }

    bb184: {
        StorageDead(_362);
        _0 = Result::<(), ProgramError>::Err(move _361);
        StorageDead(_361);
        StorageDead(_353);
        StorageDead(_349);
        StorageDead(_345);
        StorageDead(_344);
        goto -> bb333;
    }

    bb185: {
        StorageDead(_355);
        StorageDead(_354);
        goto -> bb187;
    }

    bb186: {
        StorageDead(_347);
        StorageDead(_346);
        goto -> bb187;
    }

    bb187: {
        _344 = const ();
        StorageDead(_353);
        StorageDead(_349);
        StorageDead(_345);
        StorageDead(_344);
        StorageLive(_363);
        StorageLive(_364);
        StorageLive(_365);
        StorageLive(_366);
        _366 = &(*_107);
        _365 = validate_pyth_keys(move _366) -> [return: bb188, unwind: bb388];
    }

    bb188: {
        StorageDead(_366);
        _364 = <Result<(), ProgramError> as Try>::branch(move _365) -> [return: bb189, unwind: bb388];
    }

    bb189: {
        StorageDead(_365);
        _367 = discriminant(_364);
        switchInt(move _367) -> [0: bb190, 1: bb191, otherwise: bb8];
    }

    bb190: {
        StorageLive(_371);
        _371 = ((_364 as Continue).0: ());
        _363 = _371;
        StorageDead(_371);
        _730 = discriminant(_364);
        StorageDead(_364);
        StorageDead(_363);
        StorageLive(_372);
        StorageLive(_373);
        StorageLive(_374);
        StorageLive(_375);
        _375 = &(*_116);
        _374 = validate_switchboard_keys(move _375) -> [return: bb193, unwind: bb388];
    }

    bb191: {
        StorageLive(_368);
        _368 = move ((_364 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_370);
        _370 = move _368;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _370) -> [return: bb192, unwind: bb409];
    }

    bb192: {
        StorageDead(_370);
        StorageDead(_368);
        _784 = discriminant(_364);
        StorageDead(_364);
        StorageDead(_363);
        goto -> bb333;
    }

    bb193: {
        StorageDead(_375);
        _373 = <Result<(), ProgramError> as Try>::branch(move _374) -> [return: bb194, unwind: bb388];
    }

    bb194: {
        StorageDead(_374);
        _376 = discriminant(_373);
        switchInt(move _376) -> [0: bb195, 1: bb196, otherwise: bb8];
    }

    bb195: {
        StorageLive(_380);
        _380 = ((_373 as Continue).0: ());
        _372 = _380;
        StorageDead(_380);
        _732 = discriminant(_373);
        StorageDead(_373);
        StorageDead(_372);
        StorageLive(_381);
        _382 = discriminant((_3.20: std::option::Option<solana_program::pubkey::Pubkey>));
        switchInt(move _382) -> [1: bb198, otherwise: bb209];
    }

    bb196: {
        StorageLive(_377);
        _377 = move ((_373 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_379);
        _379 = move _377;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _379) -> [return: bb197, unwind: bb408];
    }

    bb197: {
        StorageDead(_379);
        StorageDead(_377);
        _782 = discriminant(_373);
        StorageDead(_373);
        StorageDead(_372);
        goto -> bb333;
    }

    bb198: {
        StorageLive(_383);
        _383 = (((_3.20: std::option::Option<solana_program::pubkey::Pubkey>) as Some).0: solana_program::pubkey::Pubkey);
        StorageLive(_384);
        StorageLive(_385);
        StorageLive(_386);
        StorageLive(_387);
        _387 = &mut (*_23);
        _386 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _387) -> [return: bb199, unwind: bb388];
    }

    bb199: {
        StorageDead(_387);
        _385 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _386) -> [return: bb200, unwind: bb388];
    }

    bb200: {
        StorageDead(_386);
        _388 = discriminant(_385);
        switchInt(move _388) -> [0: bb201, 1: bb202, otherwise: bb8];
    }

    bb201: {
        StorageLive(_392);
        _392 = ((_385 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _384 = _392;
        StorageDead(_392);
        _734 = discriminant(_385);
        StorageDead(_385);
        StorageLive(_393);
        StorageLive(_394);
        StorageLive(_395);
        StorageLive(_396);
        _396 = _383;
        StorageLive(_397);
        _397 = &(*_384);
        _395 = validate_extra_oracle(move _396, move _397) -> [return: bb204, unwind: bb388];
    }

    bb202: {
        StorageLive(_389);
        _389 = move ((_385 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_391);
        _391 = move _389;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _391) -> [return: bb203, unwind: bb407];
    }

    bb203: {
        StorageDead(_391);
        StorageDead(_389);
        _780 = discriminant(_385);
        StorageDead(_385);
        goto -> bb332;
    }

    bb204: {
        StorageDead(_397);
        StorageDead(_396);
        _394 = <Result<(), ProgramError> as Try>::branch(move _395) -> [return: bb205, unwind: bb388];
    }

    bb205: {
        StorageDead(_395);
        _398 = discriminant(_394);
        switchInt(move _398) -> [0: bb206, 1: bb207, otherwise: bb8];
    }

    bb206: {
        StorageLive(_402);
        _402 = ((_394 as Continue).0: ());
        _393 = _402;
        StorageDead(_402);
        _736 = discriminant(_394);
        StorageDead(_394);
        StorageDead(_393);
        _381 = const ();
        StorageDead(_384);
        StorageDead(_383);
        goto -> bb210;
    }

    bb207: {
        StorageLive(_399);
        _399 = move ((_394 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_401);
        _401 = move _399;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _401) -> [return: bb208, unwind: bb406];
    }

    bb208: {
        StorageDead(_401);
        StorageDead(_399);
        _778 = discriminant(_394);
        StorageDead(_394);
        StorageDead(_393);
        goto -> bb332;
    }

    bb209: {
        _381 = const ();
        goto -> bb210;
    }

    bb210: {
        StorageDead(_381);
        StorageLive(_405);
        StorageLive(_406);
        StorageLive(_407);
        StorageLive(_408);
        StorageLive(_409);
        _409 = &(*_116);
        _408 = Option::<&AccountInfo<'_>>::Some(move _409);
        StorageDead(_409);
        StorageLive(_410);
        _410 = &(*_107);
        StorageLive(_411);
        _411 = &(*_161);
        _407 = get_price(move _408, move _410, move _411) -> [return: bb211, unwind: bb388];
    }

    bb211: {
        StorageDead(_411);
        StorageDead(_410);
        StorageDead(_408);
        _406 = <Result<(Decimal, Option<Decimal>), ProgramError> as Try>::branch(move _407) -> [return: bb212, unwind: bb388];
    }

    bb212: {
        StorageDead(_407);
        _412 = discriminant(_406);
        switchInt(move _412) -> [0: bb213, 1: bb214, otherwise: bb8];
    }

    bb213: {
        StorageLive(_416);
        _416 = ((_406 as Continue).0: (solend_sdk::math::Decimal, std::option::Option<solend_sdk::math::Decimal>));
        _405 = _416;
        StorageDead(_416);
        StorageLive(_403);
        _403 = (_405.0: solend_sdk::math::Decimal);
        StorageLive(_404);
        _404 = (_405.1: std::option::Option<solend_sdk::math::Decimal>);
        _738 = discriminant(_406);
        StorageDead(_406);
        StorageDead(_405);
        StorageLive(_417);
        StorageLive(_418);
        StorageLive(_419);
        StorageLive(_420);
        _671 = deref_copy ((*_125).0: &solana_program::pubkey::Pubkey);
        _420 = &(*_671);
        _419 = <Pubkey as AsRef<[u8]>>::as_ref(move _420) -> [return: bb216, unwind: bb388];
    }

    bb214: {
        StorageLive(_413);
        _413 = move ((_406 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_415);
        _415 = move _413;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _415) -> [return: bb215, unwind: bb405];
    }

    bb215: {
        StorageDead(_415);
        StorageDead(_413);
        _776 = discriminant(_406);
        StorageDead(_406);
        StorageDead(_405);
        goto -> bb333;
    }

    bb216: {
        StorageDead(_420);
        StorageLive(_421);
        StorageLive(_422);
        StorageLive(_423);
        StorageLive(_424);
        StorageLive(_425);
        _871 = (((_262.0: std::ptr::Unique<solend_sdk::state::LendingMarket>).0: std::ptr::NonNull<solend_sdk::state::LendingMarket>).0: *const solend_sdk::state::LendingMarket);
        _872 = _871 as *const () (PtrToPtr);
        _873 = _872 as usize (Transmute);
        _874 = AlignOf(solend_sdk::state::LendingMarket);
        _875 = Sub(_874, const 1_usize);
        _876 = BitAnd(_873, _875);
        _877 = Eq(_876, const 0_usize);
        assert(_877, "misaligned pointer dereference: address must be a multiple of {} but is {}", _874, _873) -> [success: bb433, unwind unreachable];
    }

    bb217: {
        StorageDead(_431);
        StorageDead(_429);
        _427 = <Result<Pubkey, PubkeyError> as Try>::branch(move _428) -> [return: bb218, unwind: bb388];
    }

    bb218: {
        StorageDead(_428);
        _432 = discriminant(_427);
        switchInt(move _432) -> [0: bb219, 1: bb220, otherwise: bb8];
    }

    bb219: {
        StorageLive(_436);
        _436 = ((_427 as Continue).0: solana_program::pubkey::Pubkey);
        _426 = _436;
        StorageDead(_436);
        StorageDead(_427);
        StorageLive(_437);
        StorageLive(_438);
        StorageLive(_439);
        StorageLive(_440);
        _440 = &_426;
        _439 = &_440;
        StorageLive(_441);
        _441 = &((*_134).0: &solana_program::pubkey::Pubkey);
        _438 = <&Pubkey as PartialEq>::ne(move _439, move _441) -> [return: bb222, unwind: bb388];
    }

    bb220: {
        StorageLive(_433);
        _433 = move ((_427 as Break).0: std::result::Result<std::convert::Infallible, solana_program::pubkey::PubkeyError>);
        StorageLive(_435);
        _435 = move _433;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, PubkeyError>>>::from_residual(move _435) -> [return: bb221, unwind: bb388];
    }

    bb221: {
        StorageDead(_435);
        StorageDead(_433);
        StorageDead(_427);
        goto -> bb331;
    }

    bb222: {
        switchInt(move _438) -> [0: bb226, otherwise: bb223];
    }

    bb223: {
        StorageDead(_441);
        StorageDead(_440);
        StorageDead(_439);
        StorageLive(_443);
        StorageLive(_444);
        StorageLive(_445);
        _445 = const "Derived lending market authority does not match the lending market authority provided";
        _444 = &(*_445);
        _443 = solana_program::log::sol_log(move _444) -> [return: bb224, unwind: bb388];
    }

    bb224: {
        StorageDead(_444);
        StorageDead(_445);
        StorageDead(_443);
        StorageLive(_446);
        StorageLive(_447);
        _447 = InvalidMarketAuthority;
        _446 = <LendingError as Into<ProgramError>>::into(move _447) -> [return: bb225, unwind: bb388];
    }

    bb225: {
        StorageDead(_447);
        _0 = Result::<(), ProgramError>::Err(move _446);
        StorageDead(_446);
        StorageDead(_438);
        StorageDead(_437);
        goto -> bb331;
    }

    bb226: {
        StorageDead(_441);
        StorageDead(_440);
        StorageDead(_439);
        _437 = const ();
        StorageDead(_438);
        StorageDead(_437);
        StorageLive(_448);
        StorageLive(_449);
        StorageLive(_450);
        StorageLive(_451);
        StorageLive(_452);
        StorageLive(_453);
        StorageLive(_454);
        StorageLive(_455);
        StorageLive(_456);
        StorageLive(_457);
        StorageLive(_458);
        _458 = &((*_53).2: std::rc::Rc<std::cell::RefCell<&mut [u8]>>);
        _457 = <Rc<RefCell<&mut [u8]>> as Deref>::deref(move _458) -> [return: bb227, unwind: bb388];
    }

    bb227: {
        _456 = &(*_457);
        StorageDead(_458);
        _455 = RefCell::<&mut [u8]>::borrow(move _456) -> [return: bb228, unwind: bb388];
    }

    bb228: {
        StorageDead(_456);
        _454 = &_455;
        _453 = &(*_454);
        _452 = <Ref<'_, &mut [u8]> as Deref>::deref(move _453) -> [return: bb229, unwind: bb382];
    }

    bb229: {
        _672 = deref_copy (*_452);
        _451 = &(*_672);
        StorageDead(_453);
        _450 = unpack_mint(move _451) -> [return: bb230, unwind: bb382];
    }

    bb230: {
        StorageDead(_451);
        _449 = <Result<Mint, LendingError> as Try>::branch(move _450) -> [return: bb231, unwind: bb382];
    }

    bb231: {
        StorageDead(_450);
        _459 = discriminant(_449);
        switchInt(move _459) -> [0: bb232, 1: bb233, otherwise: bb8];
    }

    bb232: {
        StorageLive(_463);
        _463 = ((_449 as Continue).0: spl_token::state::Mint);
        _448 = _463;
        StorageDead(_463);
        drop(_455) -> [return: bb235, unwind: bb388];
    }

    bb233: {
        StorageLive(_460);
        _460 = move ((_449 as Break).0: std::result::Result<std::convert::Infallible, solend_sdk::error::LendingError>);
        StorageLive(_462);
        _462 = move _460;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, LendingError>>>::from_residual(move _462) -> [return: bb234, unwind: bb382];
    }

    bb234: {
        StorageDead(_462);
        StorageDead(_460);
        drop(_455) -> [return: bb329, unwind: bb388];
    }

    bb235: {
        StorageDead(_457);
        StorageDead(_455);
        StorageDead(_454);
        StorageDead(_452);
        StorageDead(_449);
        StorageLive(_464);
        StorageLive(_465);
        StorageLive(_466);
        _466 = &((*_53).3: &solana_program::pubkey::Pubkey);
        StorageLive(_467);
        _467 = &((*_189).0: &solana_program::pubkey::Pubkey);
        _465 = <&Pubkey as PartialEq>::ne(move _466, move _467) -> [return: bb236, unwind: bb388];
    }

    bb236: {
        switchInt(move _465) -> [0: bb240, otherwise: bb237];
    }

    bb237: {
        StorageDead(_467);
        StorageDead(_466);
        StorageLive(_469);
        StorageLive(_470);
        StorageLive(_471);
        _471 = const "Reserve liquidity mint is not owned by the token program provided";
        _470 = &(*_471);
        _469 = solana_program::log::sol_log(move _470) -> [return: bb238, unwind: bb388];
    }

    bb238: {
        StorageDead(_470);
        StorageDead(_471);
        StorageDead(_469);
        StorageLive(_472);
        StorageLive(_473);
        _473 = InvalidTokenOwner;
        _472 = <LendingError as Into<ProgramError>>::into(move _473) -> [return: bb239, unwind: bb388];
    }

    bb239: {
        StorageDead(_473);
        _0 = Result::<(), ProgramError>::Err(move _472);
        StorageDead(_472);
        StorageDead(_465);
        StorageDead(_464);
        goto -> bb330;
    }

    bb240: {
        StorageDead(_467);
        StorageDead(_466);
        _464 = const ();
        StorageDead(_465);
        StorageDead(_464);
        StorageLive(_474);
        StorageLive(_475);
        _475 = &mut _208;
        StorageLive(_476);
        StorageLive(_477);
        _477 = ((*_161).0: u64);
        StorageLive(_478);
        _673 = deref_copy ((*_125).0: &solana_program::pubkey::Pubkey);
        _478 = (*_673);
        StorageLive(_479);
        StorageLive(_480);
        StorageLive(_481);
        _674 = deref_copy ((*_53).0: &solana_program::pubkey::Pubkey);
        _481 = (*_674);
        StorageLive(_482);
        _482 = (_448.2: u8);
        StorageLive(_483);
        _675 = deref_copy ((*_62).0: &solana_program::pubkey::Pubkey);
        _483 = (*_675);
        StorageLive(_484);
        _676 = deref_copy ((*_107).0: &solana_program::pubkey::Pubkey);
        _484 = (*_676);
        StorageLive(_485);
        _677 = deref_copy ((*_116).0: &solana_program::pubkey::Pubkey);
        _485 = (*_677);
        StorageLive(_486);
        _486 = _403;
        StorageLive(_487);
        StorageLive(_488);
        _488 = _404;
        StorageLive(_489);
        _489 = _403;
        _487 = Option::<Decimal>::unwrap_or(move _488, move _489) -> [return: bb241, unwind: bb388];
    }

    bb241: {
        StorageDead(_489);
        StorageDead(_488);
        _480 = NewReserveLiquidityParams { mint_pubkey: move _481, mint_decimals: move _482, supply_pubkey: move _483, pyth_oracle_pubkey: move _484, switchboard_oracle_pubkey: move _485, market_price: move _486, smoothed_market_price: move _487 };
        StorageDead(_487);
        StorageDead(_486);
        StorageDead(_485);
        StorageDead(_484);
        StorageDead(_483);
        StorageDead(_482);
        StorageDead(_481);
        _479 = ReserveLiquidity::new(move _480) -> [return: bb242, unwind: bb388];
    }

    bb242: {
        StorageDead(_480);
        StorageLive(_490);
        StorageLive(_491);
        StorageLive(_492);
        _678 = deref_copy ((*_80).0: &solana_program::pubkey::Pubkey);
        _492 = (*_678);
        StorageLive(_493);
        _679 = deref_copy ((*_89).0: &solana_program::pubkey::Pubkey);
        _493 = (*_679);
        _491 = NewReserveCollateralParams { mint_pubkey: move _492, supply_pubkey: move _493 };
        StorageDead(_493);
        StorageDead(_492);
        _490 = ReserveCollateral::new(move _491) -> [return: bb243, unwind: bb388];
    }

    bb243: {
        StorageDead(_491);
        StorageLive(_494);
        _494 = _3;
        StorageLive(_495);
        _495 = <RateLimiterConfig as Default>::default() -> [return: bb244, unwind: bb388];
    }

    bb244: {
        _476 = InitReserveParams { current_slot: move _477, lending_market: move _478, liquidity: move _479, collateral: move _490, config: move _494, rate_limiter_config: move _495 };
        StorageDead(_495);
        StorageDead(_494);
        StorageDead(_490);
        StorageDead(_479);
        StorageDead(_478);
        StorageDead(_477);
        _474 = Reserve::init(move _475, move _476) -> [return: bb245, unwind: bb388];
    }

    bb245: {
        StorageDead(_476);
        StorageDead(_475);
        StorageDead(_474);
        StorageLive(_496);
        StorageLive(_497);
        StorageLive(_498);
        StorageLive(_499);
        _499 = &mut _208;
        StorageLive(_500);
        _500 = _2;
        _498 = Reserve::deposit_liquidity(move _499, move _500) -> [return: bb246, unwind: bb388];
    }

    bb246: {
        StorageDead(_500);
        StorageDead(_499);
        _497 = <Result<u64, ProgramError> as Try>::branch(move _498) -> [return: bb247, unwind: bb388];
    }

    bb247: {
        StorageDead(_498);
        _501 = discriminant(_497);
        switchInt(move _501) -> [0: bb248, 1: bb249, otherwise: bb8];
    }

    bb248: {
        StorageLive(_505);
        _505 = ((_497 as Continue).0: u64);
        _496 = _505;
        StorageDead(_505);
        _740 = discriminant(_497);
        StorageDead(_497);
        StorageLive(_506);
        StorageLive(_507);
        StorageLive(_508);
        StorageLive(_509);
        _509 = move _208;
        StorageLive(_510);
        StorageLive(_511);
        StorageLive(_512);
        StorageLive(_513);
        StorageLive(_514);
        StorageLive(_515);
        StorageLive(_516);
        StorageLive(_517);
        _517 = &((*_44).2: std::rc::Rc<std::cell::RefCell<&mut [u8]>>);
        _516 = <Rc<RefCell<&mut [u8]>> as Deref>::deref(move _517) -> [return: bb251, unwind: bb388];
    }

    bb249: {
        StorageLive(_502);
        _502 = move ((_497 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_504);
        _504 = move _502;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _504) -> [return: bb250, unwind: bb404];
    }

    bb250: {
        StorageDead(_504);
        StorageDead(_502);
        _774 = discriminant(_497);
        StorageDead(_497);
        goto -> bb328;
    }

    bb251: {
        _515 = &(*_516);
        StorageDead(_517);
        _514 = RefCell::<&mut [u8]>::borrow_mut(move _515) -> [return: bb252, unwind: bb388];
    }

    bb252: {
        StorageDead(_515);
        _513 = &mut _514;
        _512 = &mut (*_513);
        _511 = <RefMut<'_, &mut [u8]> as DerefMut>::deref_mut(move _512) -> [return: bb253, unwind: bb381];
    }

    bb253: {
        _680 = deref_copy (*_511);
        _510 = &mut (*_680);
        StorageDead(_512);
        _508 = <Reserve as Pack>::pack(move _509, move _510) -> [return: bb254, unwind: bb381];
    }

    bb254: {
        StorageDead(_510);
        StorageDead(_509);
        _507 = <Result<(), ProgramError> as Try>::branch(move _508) -> [return: bb255, unwind: bb381];
    }

    bb255: {
        StorageDead(_508);
        _518 = discriminant(_507);
        switchInt(move _518) -> [0: bb256, 1: bb257, otherwise: bb8];
    }

    bb256: {
        StorageLive(_522);
        _522 = ((_507 as Continue).0: ());
        _506 = _522;
        StorageDead(_522);
        _742 = discriminant(_507);
        drop(_514) -> [return: bb259, unwind: bb388];
    }

    bb257: {
        StorageLive(_519);
        _519 = move ((_507 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_521);
        _521 = move _519;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _521) -> [return: bb258, unwind: bb403];
    }

    bb258: {
        StorageDead(_521);
        StorageDead(_519);
        _772 = discriminant(_507);
        drop(_514) -> [return: bb327, unwind: bb388];
    }

    bb259: {
        StorageDead(_516);
        StorageDead(_514);
        StorageDead(_513);
        StorageDead(_511);
        StorageDead(_507);
        StorageDead(_506);
        StorageLive(_523);
        StorageLive(_524);
        StorageLive(_525);
        StorageLive(_526);
        StorageLive(_527);
        StorageLive(_528);
        _528 = &(*_62);
        _527 = <AccountInfo<'_> as Clone>::clone(move _528) -> [return: bb260, unwind: bb388];
    }

    bb260: {
        StorageDead(_528);
        StorageLive(_529);
        StorageLive(_530);
        _530 = &(*_53);
        _529 = <AccountInfo<'_> as Clone>::clone(move _530) -> [return: bb261, unwind: bb380];
    }

    bb261: {
        StorageDead(_530);
        StorageLive(_531);
        StorageLive(_532);
        _532 = &(*_134);
        _531 = <AccountInfo<'_> as Clone>::clone(move _532) -> [return: bb262, unwind: bb379];
    }

    bb262: {
        StorageDead(_532);
        StorageLive(_533);
        StorageLive(_534);
        _534 = &(*_170);
        _533 = <AccountInfo<'_> as Clone>::clone(move _534) -> [return: bb263, unwind: bb378];
    }

    bb263: {
        StorageDead(_534);
        StorageLive(_535);
        StorageLive(_536);
        _536 = &(*_189);
        _535 = <AccountInfo<'_> as Clone>::clone(move _536) -> [return: bb264, unwind: bb377];
    }

    bb264: {
        StorageDead(_536);
        _526 = TokenInitializeAccountParams::<'_> { account: move _527, mint: move _529, owner: move _531, rent: move _533, token_program: move _535 };
        StorageDead(_535);
        StorageDead(_533);
        StorageDead(_531);
        StorageDead(_529);
        StorageDead(_527);
        _525 = spl_token_init_account(move _526) -> [return: bb265, unwind: bb388];
    }

    bb265: {
        StorageDead(_526);
        _524 = <Result<(), ProgramError> as Try>::branch(move _525) -> [return: bb266, unwind: bb388];
    }

    bb266: {
        StorageDead(_525);
        _537 = discriminant(_524);
        switchInt(move _537) -> [0: bb267, 1: bb268, otherwise: bb8];
    }

    bb267: {
        StorageLive(_541);
        _541 = ((_524 as Continue).0: ());
        _523 = _541;
        StorageDead(_541);
        _744 = discriminant(_524);
        StorageDead(_524);
        StorageDead(_523);
        StorageLive(_542);
        StorageLive(_543);
        StorageLive(_544);
        StorageLive(_545);
        StorageLive(_546);
        StorageLive(_547);
        _547 = &(*_71);
        _546 = <AccountInfo<'_> as Clone>::clone(move _547) -> [return: bb270, unwind: bb388];
    }

    bb268: {
        StorageLive(_538);
        _538 = move ((_524 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_540);
        _540 = move _538;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _540) -> [return: bb269, unwind: bb402];
    }

    bb269: {
        StorageDead(_540);
        StorageDead(_538);
        _770 = discriminant(_524);
        StorageDead(_524);
        StorageDead(_523);
        goto -> bb328;
    }

    bb270: {
        StorageDead(_547);
        StorageLive(_548);
        StorageLive(_549);
        _549 = &(*_53);
        _548 = <AccountInfo<'_> as Clone>::clone(move _549) -> [return: bb271, unwind: bb376];
    }

    bb271: {
        StorageDead(_549);
        StorageLive(_550);
        StorageLive(_551);
        _551 = &(*_134);
        _550 = <AccountInfo<'_> as Clone>::clone(move _551) -> [return: bb272, unwind: bb375];
    }

    bb272: {
        StorageDead(_551);
        StorageLive(_552);
        StorageLive(_553);
        _553 = &(*_170);
        _552 = <AccountInfo<'_> as Clone>::clone(move _553) -> [return: bb273, unwind: bb374];
    }

    bb273: {
        StorageDead(_553);
        StorageLive(_554);
        StorageLive(_555);
        _555 = &(*_189);
        _554 = <AccountInfo<'_> as Clone>::clone(move _555) -> [return: bb274, unwind: bb373];
    }

    bb274: {
        StorageDead(_555);
        _545 = TokenInitializeAccountParams::<'_> { account: move _546, mint: move _548, owner: move _550, rent: move _552, token_program: move _554 };
        StorageDead(_554);
        StorageDead(_552);
        StorageDead(_550);
        StorageDead(_548);
        StorageDead(_546);
        _544 = spl_token_init_account(move _545) -> [return: bb275, unwind: bb388];
    }

    bb275: {
        StorageDead(_545);
        _543 = <Result<(), ProgramError> as Try>::branch(move _544) -> [return: bb276, unwind: bb388];
    }

    bb276: {
        StorageDead(_544);
        _556 = discriminant(_543);
        switchInt(move _556) -> [0: bb277, 1: bb278, otherwise: bb8];
    }

    bb277: {
        StorageLive(_560);
        _560 = ((_543 as Continue).0: ());
        _542 = _560;
        StorageDead(_560);
        _746 = discriminant(_543);
        StorageDead(_543);
        StorageDead(_542);
        StorageLive(_561);
        StorageLive(_562);
        StorageLive(_563);
        StorageLive(_564);
        StorageLive(_565);
        StorageLive(_566);
        _566 = &(*_80);
        _565 = <AccountInfo<'_> as Clone>::clone(move _566) -> [return: bb280, unwind: bb388];
    }

    bb278: {
        StorageLive(_557);
        _557 = move ((_543 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_559);
        _559 = move _557;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _559) -> [return: bb279, unwind: bb401];
    }

    bb279: {
        StorageDead(_559);
        StorageDead(_557);
        _768 = discriminant(_543);
        StorageDead(_543);
        StorageDead(_542);
        goto -> bb328;
    }

    bb280: {
        StorageDead(_566);
        StorageLive(_567);
        _681 = deref_copy ((*_134).0: &solana_program::pubkey::Pubkey);
        _567 = &(*_681);
        StorageLive(_568);
        StorageLive(_569);
        _569 = &(*_170);
        _568 = <AccountInfo<'_> as Clone>::clone(move _569) -> [return: bb281, unwind: bb372];
    }

    bb281: {
        StorageDead(_569);
        StorageLive(_570);
        _570 = (_448.2: u8);
        StorageLive(_571);
        StorageLive(_572);
        _572 = &(*_189);
        _571 = <AccountInfo<'_> as Clone>::clone(move _572) -> [return: bb282, unwind: bb371];
    }

    bb282: {
        StorageDead(_572);
        _564 = TokenInitializeMintParams::<'_, '_> { mint: move _565, rent: move _568, authority: move _567, decimals: move _570, token_program: move _571 };
        StorageDead(_571);
        StorageDead(_570);
        StorageDead(_568);
        StorageDead(_567);
        StorageDead(_565);
        _563 = spl_token_init_mint(move _564) -> [return: bb283, unwind: bb388];
    }

    bb283: {
        StorageDead(_564);
        _562 = <Result<(), ProgramError> as Try>::branch(move _563) -> [return: bb284, unwind: bb388];
    }

    bb284: {
        StorageDead(_563);
        _573 = discriminant(_562);
        switchInt(move _573) -> [0: bb285, 1: bb286, otherwise: bb8];
    }

    bb285: {
        StorageLive(_577);
        _577 = ((_562 as Continue).0: ());
        _561 = _577;
        StorageDead(_577);
        _748 = discriminant(_562);
        StorageDead(_562);
        StorageDead(_561);
        StorageLive(_578);
        StorageLive(_579);
        StorageLive(_580);
        StorageLive(_581);
        StorageLive(_582);
        StorageLive(_583);
        _583 = &(*_89);
        _582 = <AccountInfo<'_> as Clone>::clone(move _583) -> [return: bb288, unwind: bb388];
    }

    bb286: {
        StorageLive(_574);
        _574 = move ((_562 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_576);
        _576 = move _574;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _576) -> [return: bb287, unwind: bb400];
    }

    bb287: {
        StorageDead(_576);
        StorageDead(_574);
        _766 = discriminant(_562);
        StorageDead(_562);
        StorageDead(_561);
        goto -> bb328;
    }

    bb288: {
        StorageDead(_583);
        StorageLive(_584);
        StorageLive(_585);
        _585 = &(*_80);
        _584 = <AccountInfo<'_> as Clone>::clone(move _585) -> [return: bb289, unwind: bb370];
    }

    bb289: {
        StorageDead(_585);
        StorageLive(_586);
        StorageLive(_587);
        _587 = &(*_134);
        _586 = <AccountInfo<'_> as Clone>::clone(move _587) -> [return: bb290, unwind: bb369];
    }

    bb290: {
        StorageDead(_587);
        StorageLive(_588);
        StorageLive(_589);
        _589 = &(*_170);
        _588 = <AccountInfo<'_> as Clone>::clone(move _589) -> [return: bb291, unwind: bb368];
    }

    bb291: {
        StorageDead(_589);
        StorageLive(_590);
        StorageLive(_591);
        _591 = &(*_189);
        _590 = <AccountInfo<'_> as Clone>::clone(move _591) -> [return: bb292, unwind: bb367];
    }

    bb292: {
        StorageDead(_591);
        _581 = TokenInitializeAccountParams::<'_> { account: move _582, mint: move _584, owner: move _586, rent: move _588, token_program: move _590 };
        StorageDead(_590);
        StorageDead(_588);
        StorageDead(_586);
        StorageDead(_584);
        StorageDead(_582);
        _580 = spl_token_init_account(move _581) -> [return: bb293, unwind: bb388];
    }

    bb293: {
        StorageDead(_581);
        _579 = <Result<(), ProgramError> as Try>::branch(move _580) -> [return: bb294, unwind: bb388];
    }

    bb294: {
        StorageDead(_580);
        _592 = discriminant(_579);
        switchInt(move _592) -> [0: bb295, 1: bb296, otherwise: bb8];
    }

    bb295: {
        StorageLive(_596);
        _596 = ((_579 as Continue).0: ());
        _578 = _596;
        StorageDead(_596);
        _750 = discriminant(_579);
        StorageDead(_579);
        StorageDead(_578);
        StorageLive(_597);
        StorageLive(_598);
        StorageLive(_599);
        StorageLive(_600);
        StorageLive(_601);
        StorageLive(_602);
        _602 = &(*_35);
        _601 = <AccountInfo<'_> as Clone>::clone(move _602) -> [return: bb298, unwind: bb388];
    }

    bb296: {
        StorageLive(_593);
        _593 = move ((_579 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_595);
        _595 = move _593;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _595) -> [return: bb297, unwind: bb399];
    }

    bb297: {
        StorageDead(_595);
        StorageDead(_593);
        _764 = discriminant(_579);
        StorageDead(_579);
        StorageDead(_578);
        goto -> bb328;
    }

    bb298: {
        StorageDead(_602);
        StorageLive(_603);
        StorageLive(_604);
        _604 = &(*_80);
        _603 = <AccountInfo<'_> as Clone>::clone(move _604) -> [return: bb299, unwind: bb366];
    }

    bb299: {
        StorageDead(_604);
        StorageLive(_605);
        StorageLive(_606);
        _606 = &(*_152);
        _605 = <AccountInfo<'_> as Clone>::clone(move _606) -> [return: bb300, unwind: bb365];
    }

    bb300: {
        StorageDead(_606);
        StorageLive(_607);
        StorageLive(_608);
        _608 = &(*_170);
        _607 = <AccountInfo<'_> as Clone>::clone(move _608) -> [return: bb301, unwind: bb364];
    }

    bb301: {
        StorageDead(_608);
        StorageLive(_609);
        StorageLive(_610);
        _610 = &(*_189);
        _609 = <AccountInfo<'_> as Clone>::clone(move _610) -> [return: bb302, unwind: bb363];
    }

    bb302: {
        StorageDead(_610);
        _600 = TokenInitializeAccountParams::<'_> { account: move _601, mint: move _603, owner: move _605, rent: move _607, token_program: move _609 };
        StorageDead(_609);
        StorageDead(_607);
        StorageDead(_605);
        StorageDead(_603);
        StorageDead(_601);
        _599 = spl_token_init_account(move _600) -> [return: bb303, unwind: bb388];
    }

    bb303: {
        StorageDead(_600);
        _598 = <Result<(), ProgramError> as Try>::branch(move _599) -> [return: bb304, unwind: bb388];
    }

    bb304: {
        StorageDead(_599);
        _611 = discriminant(_598);
        switchInt(move _611) -> [0: bb305, 1: bb306, otherwise: bb8];
    }

    bb305: {
        StorageLive(_615);
        _615 = ((_598 as Continue).0: ());
        _597 = _615;
        StorageDead(_615);
        _752 = discriminant(_598);
        StorageDead(_598);
        StorageDead(_597);
        StorageLive(_616);
        StorageLive(_617);
        StorageLive(_618);
        StorageLive(_619);
        StorageLive(_620);
        StorageLive(_621);
        _621 = &(*_26);
        _620 = <AccountInfo<'_> as Clone>::clone(move _621) -> [return: bb308, unwind: bb388];
    }

    bb306: {
        StorageLive(_612);
        _612 = move ((_598 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_614);
        _614 = move _612;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _614) -> [return: bb307, unwind: bb398];
    }

    bb307: {
        StorageDead(_614);
        StorageDead(_612);
        _762 = discriminant(_598);
        StorageDead(_598);
        StorageDead(_597);
        goto -> bb328;
    }

    bb308: {
        StorageDead(_621);
        StorageLive(_622);
        StorageLive(_623);
        _623 = &(*_62);
        _622 = <AccountInfo<'_> as Clone>::clone(move _623) -> [return: bb309, unwind: bb362];
    }

    bb309: {
        StorageDead(_623);
        StorageLive(_624);
        _624 = _2;
        StorageLive(_625);
        StorageLive(_626);
        _626 = &(*_152);
        _625 = <AccountInfo<'_> as Clone>::clone(move _626) -> [return: bb310, unwind: bb361];
    }

    bb310: {
        StorageDead(_626);
        StorageLive(_627);
        StorageLive(_628);
        StorageLive(_629);
        _661 = const _;
        _629 = &(*_661);
        _628 = &(*_629);
        _627 = move _628 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_628);
        StorageLive(_631);
        StorageLive(_632);
        _632 = &(*_189);
        _631 = <AccountInfo<'_> as Clone>::clone(move _632) -> [return: bb311, unwind: bb360];
    }

    bb311: {
        StorageDead(_632);
        _619 = TokenTransferParams::<'_, '_> { source: move _620, destination: move _622, amount: move _624, authority: move _625, authority_signer_seeds: move _627, token_program: move _631 };
        StorageDead(_631);
        StorageDead(_627);
        StorageDead(_625);
        StorageDead(_624);
        StorageDead(_622);
        StorageDead(_620);
        _618 = spl_token_transfer(move _619) -> [return: bb312, unwind: bb388];
    }

    bb312: {
        StorageDead(_619);
        _617 = <Result<(), ProgramError> as Try>::branch(move _618) -> [return: bb313, unwind: bb388];
    }

    bb313: {
        StorageDead(_618);
        _633 = discriminant(_617);
        switchInt(move _633) -> [0: bb314, 1: bb315, otherwise: bb8];
    }

    bb314: {
        StorageLive(_637);
        _637 = ((_617 as Continue).0: ());
        _616 = _637;
        StorageDead(_637);
        _754 = discriminant(_617);
        StorageDead(_629);
        StorageDead(_617);
        StorageDead(_616);
        StorageLive(_638);
        StorageLive(_639);
        StorageLive(_640);
        StorageLive(_641);
        StorageLive(_642);
        StorageLive(_643);
        _643 = &(*_80);
        _642 = <AccountInfo<'_> as Clone>::clone(move _643) -> [return: bb317, unwind: bb388];
    }

    bb315: {
        StorageLive(_634);
        _634 = move ((_617 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_636);
        _636 = move _634;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _636) -> [return: bb316, unwind: bb397];
    }

    bb316: {
        StorageDead(_636);
        StorageDead(_634);
        _760 = discriminant(_617);
        StorageDead(_629);
        StorageDead(_617);
        StorageDead(_616);
        goto -> bb328;
    }

    bb317: {
        StorageDead(_643);
        StorageLive(_644);
        StorageLive(_645);
        _645 = &(*_35);
        _644 = <AccountInfo<'_> as Clone>::clone(move _645) -> [return: bb318, unwind: bb359];
    }

    bb318: {
        StorageDead(_645);
        StorageLive(_646);
        _646 = _496;
        StorageLive(_647);
        StorageLive(_648);
        _648 = &(*_134);
        _647 = <AccountInfo<'_> as Clone>::clone(move _648) -> [return: bb319, unwind: bb358];
    }

    bb319: {
        StorageDead(_648);
        StorageLive(_649);
        StorageLive(_650);
        _650 = &(*_417);
        _649 = move _650 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_650);
        StorageLive(_651);
        StorageLive(_652);
        _652 = &(*_189);
        _651 = <AccountInfo<'_> as Clone>::clone(move _652) -> [return: bb320, unwind: bb357];
    }

    bb320: {
        StorageDead(_652);
        _641 = TokenMintToParams::<'_, '_> { mint: move _642, destination: move _644, amount: move _646, authority: move _647, authority_signer_seeds: move _649, token_program: move _651 };
        StorageDead(_651);
        StorageDead(_649);
        StorageDead(_647);
        StorageDead(_646);
        StorageDead(_644);
        StorageDead(_642);
        _640 = spl_token_mint_to(move _641) -> [return: bb321, unwind: bb388];
    }

    bb321: {
        StorageDead(_641);
        _639 = <Result<(), ProgramError> as Try>::branch(move _640) -> [return: bb322, unwind: bb388];
    }

    bb322: {
        StorageDead(_640);
        _653 = discriminant(_639);
        switchInt(move _653) -> [0: bb323, 1: bb324, otherwise: bb8];
    }

    bb323: {
        StorageLive(_657);
        _657 = ((_639 as Continue).0: ());
        _638 = _657;
        StorageDead(_657);
        _756 = discriminant(_639);
        StorageDead(_639);
        StorageDead(_638);
        StorageLive(_658);
        _658 = ();
        _0 = Result::<(), ProgramError>::Ok(move _658);
        StorageDead(_658);
        StorageDead(_496);
        StorageDead(_448);
        StorageDead(_426);
        StorageDead(_424);
        StorageDead(_418);
        StorageDead(_417);
        StorageDead(_404);
        StorageDead(_403);
        drop(_262) -> [return: bb326, unwind: bb395];
    }

    bb324: {
        StorageLive(_654);
        _654 = move ((_639 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_656);
        _656 = move _654;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _656) -> [return: bb325, unwind: bb396];
    }

    bb325: {
        StorageDead(_656);
        StorageDead(_654);
        _758 = discriminant(_639);
        StorageDead(_639);
        StorageDead(_638);
        goto -> bb328;
    }

    bb326: {
        StorageDead(_262);
        StorageDead(_208);
        StorageDead(_189);
        StorageDead(_180);
        StorageDead(_179);
        StorageDead(_170);
        StorageDead(_162);
        StorageDead(_161);
        StorageDead(_152);
        StorageDead(_143);
        StorageDead(_134);
        StorageDead(_125);
        StorageDead(_116);
        StorageDead(_107);
        StorageDead(_98);
        StorageDead(_89);
        StorageDead(_80);
        StorageDead(_71);
        StorageDead(_62);
        StorageDead(_53);
        StorageDead(_44);
        StorageDead(_35);
        StorageDead(_26);
        StorageDead(_24);
        StorageDead(_23);
        goto -> bb356;
    }

    bb327: {
        StorageDead(_516);
        StorageDead(_514);
        StorageDead(_513);
        StorageDead(_511);
        StorageDead(_507);
        StorageDead(_506);
        goto -> bb328;
    }

    bb328: {
        StorageDead(_496);
        goto -> bb330;
    }

    bb329: {
        StorageDead(_457);
        StorageDead(_455);
        StorageDead(_454);
        StorageDead(_452);
        StorageDead(_449);
        goto -> bb330;
    }

    bb330: {
        StorageDead(_448);
        goto -> bb331;
    }

    bb331: {
        StorageDead(_426);
        StorageDead(_424);
        StorageDead(_418);
        StorageDead(_417);
        StorageDead(_404);
        StorageDead(_403);
        goto -> bb333;
    }

    bb332: {
        StorageDead(_384);
        StorageDead(_383);
        StorageDead(_381);
        goto -> bb333;
    }

    bb333: {
        drop(_262) -> [return: bb335, unwind: bb395];
    }

    bb334: {
        StorageDead(_272);
        StorageDead(_270);
        StorageDead(_269);
        StorageDead(_267);
        _682 = const false;
        _683 = const false;
        StorageDead(_264);
        goto -> bb335;
    }

    bb335: {
        StorageDead(_262);
        goto -> bb336;
    }

    bb336: {
        StorageDead(_208);
        goto -> bb337;
    }

    bb337: {
        StorageDead(_189);
        goto -> bb338;
    }

    bb338: {
        StorageDead(_180);
        StorageDead(_179);
        goto -> bb339;
    }

    bb339: {
        StorageDead(_170);
        goto -> bb340;
    }

    bb340: {
        StorageDead(_162);
        StorageDead(_161);
        goto -> bb341;
    }

    bb341: {
        StorageDead(_152);
        goto -> bb342;
    }

    bb342: {
        StorageDead(_143);
        goto -> bb343;
    }

    bb343: {
        StorageDead(_134);
        goto -> bb344;
    }

    bb344: {
        StorageDead(_125);
        goto -> bb345;
    }

    bb345: {
        StorageDead(_116);
        goto -> bb346;
    }

    bb346: {
        StorageDead(_107);
        goto -> bb347;
    }

    bb347: {
        StorageDead(_98);
        goto -> bb348;
    }

    bb348: {
        StorageDead(_89);
        goto -> bb349;
    }

    bb349: {
        StorageDead(_80);
        goto -> bb350;
    }

    bb350: {
        StorageDead(_71);
        goto -> bb351;
    }

    bb351: {
        StorageDead(_62);
        goto -> bb352;
    }

    bb352: {
        StorageDead(_53);
        goto -> bb353;
    }

    bb353: {
        StorageDead(_44);
        goto -> bb354;
    }

    bb354: {
        StorageDead(_35);
        goto -> bb355;
    }

    bb355: {
        StorageDead(_26);
        StorageDead(_24);
        StorageDead(_23);
        goto -> bb356;
    }

    bb356: {
        return;
    }

    bb357 (cleanup): {
        drop(_647) -> [return: bb358, unwind terminate(cleanup)];
    }

    bb358 (cleanup): {
        drop(_644) -> [return: bb359, unwind terminate(cleanup)];
    }

    bb359 (cleanup): {
        drop(_642) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb360 (cleanup): {
        drop(_625) -> [return: bb361, unwind terminate(cleanup)];
    }

    bb361 (cleanup): {
        drop(_622) -> [return: bb362, unwind terminate(cleanup)];
    }

    bb362 (cleanup): {
        drop(_620) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb363 (cleanup): {
        drop(_607) -> [return: bb364, unwind terminate(cleanup)];
    }

    bb364 (cleanup): {
        drop(_605) -> [return: bb365, unwind terminate(cleanup)];
    }

    bb365 (cleanup): {
        drop(_603) -> [return: bb366, unwind terminate(cleanup)];
    }

    bb366 (cleanup): {
        drop(_601) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb367 (cleanup): {
        drop(_588) -> [return: bb368, unwind terminate(cleanup)];
    }

    bb368 (cleanup): {
        drop(_586) -> [return: bb369, unwind terminate(cleanup)];
    }

    bb369 (cleanup): {
        drop(_584) -> [return: bb370, unwind terminate(cleanup)];
    }

    bb370 (cleanup): {
        drop(_582) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb371 (cleanup): {
        drop(_568) -> [return: bb372, unwind terminate(cleanup)];
    }

    bb372 (cleanup): {
        drop(_565) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb373 (cleanup): {
        drop(_552) -> [return: bb374, unwind terminate(cleanup)];
    }

    bb374 (cleanup): {
        drop(_550) -> [return: bb375, unwind terminate(cleanup)];
    }

    bb375 (cleanup): {
        drop(_548) -> [return: bb376, unwind terminate(cleanup)];
    }

    bb376 (cleanup): {
        drop(_546) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb377 (cleanup): {
        drop(_533) -> [return: bb378, unwind terminate(cleanup)];
    }

    bb378 (cleanup): {
        drop(_531) -> [return: bb379, unwind terminate(cleanup)];
    }

    bb379 (cleanup): {
        drop(_529) -> [return: bb380, unwind terminate(cleanup)];
    }

    bb380 (cleanup): {
        drop(_527) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb381 (cleanup): {
        drop(_514) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb382 (cleanup): {
        drop(_455) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb383 (cleanup): {
        drop(_289) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb384 (cleanup): {
        drop(_304) -> [return: bb385, unwind terminate(cleanup)];
    }

    bb385 (cleanup): {
        drop(_290) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb386 (cleanup): {
        drop(_310) -> [return: bb387, unwind terminate(cleanup)];
    }

    bb387 (cleanup): {
        drop(_304) -> [return: bb388, unwind terminate(cleanup)];
    }

    bb388 (cleanup): {
        drop(_262) -> [return: bb395, unwind terminate(cleanup)];
    }

    bb389 (cleanup): {
        drop(_270) -> [return: bb395, unwind terminate(cleanup)];
    }

    bb390 (cleanup): {
        drop(_227) -> [return: bb395, unwind terminate(cleanup)];
    }

    bb391 (cleanup): {
        drop(_242) -> [return: bb392, unwind terminate(cleanup)];
    }

    bb392 (cleanup): {
        drop(_228) -> [return: bb395, unwind terminate(cleanup)];
    }

    bb393 (cleanup): {
        drop(_248) -> [return: bb394, unwind terminate(cleanup)];
    }

    bb394 (cleanup): {
        drop(_242) -> [return: bb395, unwind terminate(cleanup)];
    }

    bb395 (cleanup): {
        resume;
    }

    bb396 (cleanup): {
        _832 = discriminant(_639);
        goto -> bb388;
    }

    bb397 (cleanup): {
        _833 = discriminant(_617);
        goto -> bb388;
    }

    bb398 (cleanup): {
        _834 = discriminant(_598);
        goto -> bb388;
    }

    bb399 (cleanup): {
        _835 = discriminant(_579);
        goto -> bb388;
    }

    bb400 (cleanup): {
        _836 = discriminant(_562);
        goto -> bb388;
    }

    bb401 (cleanup): {
        _837 = discriminant(_543);
        goto -> bb388;
    }

    bb402 (cleanup): {
        _838 = discriminant(_524);
        goto -> bb388;
    }

    bb403 (cleanup): {
        _839 = discriminant(_507);
        goto -> bb381;
    }

    bb404 (cleanup): {
        _840 = discriminant(_497);
        goto -> bb388;
    }

    bb405 (cleanup): {
        _841 = discriminant(_406);
        goto -> bb388;
    }

    bb406 (cleanup): {
        _842 = discriminant(_394);
        goto -> bb388;
    }

    bb407 (cleanup): {
        _843 = discriminant(_385);
        goto -> bb388;
    }

    bb408 (cleanup): {
        _844 = discriminant(_373);
        goto -> bb388;
    }

    bb409 (cleanup): {
        _845 = discriminant(_364);
        goto -> bb388;
    }

    bb410 (cleanup): {
        _846 = discriminant(_264);
        goto -> bb389;
    }

    bb411 (cleanup): {
        _847 = discriminant(_209);
        goto -> bb395;
    }

    bb412 (cleanup): {
        _848 = discriminant(_199);
        goto -> bb395;
    }

    bb413 (cleanup): {
        _849 = discriminant(_190);
        goto -> bb395;
    }

    bb414 (cleanup): {
        _850 = discriminant(_181);
        goto -> bb395;
    }

    bb415 (cleanup): {
        _851 = discriminant(_171);
        goto -> bb395;
    }

    bb416 (cleanup): {
        _852 = discriminant(_163);
        goto -> bb395;
    }

    bb417 (cleanup): {
        _853 = discriminant(_153);
        goto -> bb395;
    }

    bb418 (cleanup): {
        _854 = discriminant(_144);
        goto -> bb395;
    }

    bb419 (cleanup): {
        _855 = discriminant(_135);
        goto -> bb395;
    }

    bb420 (cleanup): {
        _856 = discriminant(_126);
        goto -> bb395;
    }

    bb421 (cleanup): {
        _857 = discriminant(_117);
        goto -> bb395;
    }

    bb422 (cleanup): {
        _858 = discriminant(_108);
        goto -> bb395;
    }

    bb423 (cleanup): {
        _859 = discriminant(_99);
        goto -> bb395;
    }

    bb424 (cleanup): {
        _860 = discriminant(_90);
        goto -> bb395;
    }

    bb425 (cleanup): {
        _861 = discriminant(_81);
        goto -> bb395;
    }

    bb426 (cleanup): {
        _862 = discriminant(_72);
        goto -> bb395;
    }

    bb427 (cleanup): {
        _863 = discriminant(_63);
        goto -> bb395;
    }

    bb428 (cleanup): {
        _864 = discriminant(_54);
        goto -> bb395;
    }

    bb429 (cleanup): {
        _865 = discriminant(_45);
        goto -> bb395;
    }

    bb430 (cleanup): {
        _866 = discriminant(_36);
        goto -> bb395;
    }

    bb431 (cleanup): {
        _867 = discriminant(_27);
        goto -> bb395;
    }

    bb432 (cleanup): {
        _868 = discriminant(_15);
        goto -> bb395;
    }

    bb433: {
        _425 = ((*_871).1: u8);
        _424 = [move _425];
        StorageDead(_425);
        _423 = &_424;
        _422 = &(*_423);
        _421 = move _422 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_422);
        _418 = [move _419, move _421];
        StorageDead(_421);
        StorageDead(_419);
        _417 = &_418;
        StorageDead(_423);
        StorageLive(_426);
        StorageLive(_427);
        StorageLive(_428);
        StorageLive(_429);
        StorageLive(_430);
        _430 = &(*_417);
        _429 = move _430 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_430);
        StorageLive(_431);
        _431 = &(*_1);
        _428 = Pubkey::create_program_address(move _429, move _431) -> [return: bb217, unwind: bb388];
    }
}
