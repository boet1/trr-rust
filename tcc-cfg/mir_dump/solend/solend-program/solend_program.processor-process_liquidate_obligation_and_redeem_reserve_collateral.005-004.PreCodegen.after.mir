// MIR for `process_liquidate_obligation_and_redeem_reserve_collateral` after PreCodegen

fn process_liquidate_obligation_and_redeem_reserve_collateral(_1: &Pubkey, _2: u64, _3: &[AccountInfo<'_>]) -> Result<(), ProgramError> {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug accounts => _3;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _4: ();
    let mut _5: bool;
    let mut _6: u64;
    let mut _7: !;
    let _8: ();
    let mut _9: &str;
    let _10: &str;
    let mut _11: solana_program::program_error::ProgramError;
    let mut _12: solend_sdk::error::LendingError;
    let _13: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _14: std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _15: &[solana_program::account_info::AccountInfo<'_>];
    let mut _17: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _18: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _19: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _20: isize;
    let mut _22: !;
    let mut _23: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _26: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _27: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _28: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _29: isize;
    let mut _31: !;
    let mut _32: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _35: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _36: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _37: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _38: isize;
    let mut _40: !;
    let mut _41: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _44: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _45: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _46: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _47: isize;
    let mut _49: !;
    let mut _50: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _53: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _54: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _55: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _56: isize;
    let mut _58: !;
    let mut _59: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _62: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _63: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _64: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _65: isize;
    let mut _67: !;
    let mut _68: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _71: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _72: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _73: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _74: isize;
    let mut _76: !;
    let mut _77: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _80: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _81: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _82: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _83: isize;
    let mut _85: !;
    let mut _86: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _89: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _90: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _91: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _92: isize;
    let mut _94: !;
    let mut _95: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _98: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _99: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _100: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _101: isize;
    let mut _103: !;
    let mut _104: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _107: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _108: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _109: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _110: isize;
    let mut _112: !;
    let mut _113: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _116: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _117: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _118: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _119: isize;
    let mut _121: !;
    let mut _122: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _125: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _126: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _127: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _128: isize;
    let mut _130: !;
    let mut _131: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _134: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _135: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _136: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _137: isize;
    let mut _139: !;
    let mut _140: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _143: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _144: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _145: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _146: isize;
    let mut _148: !;
    let mut _149: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _152: solana_program::clock::Clock;
    let mut _153: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::clock::Clock>;
    let mut _154: std::result::Result<solana_program::clock::Clock, solana_program::program_error::ProgramError>;
    let mut _155: isize;
    let mut _157: !;
    let mut _158: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _162: (u64, solend_sdk::state::Bonus);
    let mut _163: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, solend_sdk::state::Bonus)>;
    let mut _164: std::result::Result<(u64, solend_sdk::state::Bonus), solana_program::program_error::ProgramError>;
    let mut _165: &solana_program::pubkey::Pubkey;
    let mut _166: u64;
    let mut _167: &solana_program::account_info::AccountInfo<'_>;
    let mut _168: &solana_program::account_info::AccountInfo<'_>;
    let mut _169: &solana_program::account_info::AccountInfo<'_>;
    let mut _170: &solana_program::account_info::AccountInfo<'_>;
    let mut _171: &solana_program::account_info::AccountInfo<'_>;
    let mut _172: &solana_program::account_info::AccountInfo<'_>;
    let mut _173: &solana_program::account_info::AccountInfo<'_>;
    let mut _174: &solana_program::account_info::AccountInfo<'_>;
    let mut _175: &solana_program::account_info::AccountInfo<'_>;
    let mut _176: &solana_program::account_info::AccountInfo<'_>;
    let mut _177: &solana_program::clock::Clock;
    let mut _178: &solana_program::account_info::AccountInfo<'_>;
    let mut _179: isize;
    let mut _181: !;
    let mut _182: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _184: ();
    let mut _185: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _186: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _187: &solana_program::pubkey::Pubkey;
    let mut _188: &solana_program::account_info::AccountInfo<'_>;
    let mut _189: &solana_program::clock::Clock;
    let mut _190: isize;
    let mut _192: !;
    let mut _193: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _196: solend_sdk::state::Reserve;
    let mut _197: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solend_sdk::state::Reserve>;
    let mut _198: std::result::Result<solend_sdk::state::Reserve, solana_program::program_error::ProgramError>;
    let mut _199: &[u8];
    let _200: &&mut [u8];
    let mut _201: &std::cell::Ref<'_, &mut [u8]>;
    let _202: &std::cell::Ref<'_, &mut [u8]>;
    let _203: std::cell::Ref<'_, &mut [u8]>;
    let mut _204: &std::cell::RefCell<&mut [u8]>;
    let _205: &std::cell::RefCell<&mut [u8]>;
    let mut _206: &std::rc::Rc<std::cell::RefCell<&mut [u8]>>;
    let mut _207: isize;
    let mut _209: !;
    let mut _210: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _213: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solend_sdk::state::CollateralExchangeRate>;
    let mut _214: std::result::Result<solend_sdk::state::CollateralExchangeRate, solana_program::program_error::ProgramError>;
    let mut _215: &solend_sdk::state::Reserve;
    let mut _216: isize;
    let mut _218: !;
    let mut _219: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _222: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, u64>;
    let mut _223: std::result::Result<u64, solana_program::program_error::ProgramError>;
    let mut _224: &solend_sdk::state::CollateralExchangeRate;
    let mut _225: u64;
    let mut _226: isize;
    let mut _228: !;
    let mut _229: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _232: u64;
    let mut _233: u64;
    let _234: ();
    let mut _235: bool;
    let mut _236: u64;
    let mut _238: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, u64>;
    let mut _239: std::result::Result<u64, solana_program::program_error::ProgramError>;
    let mut _240: &solana_program::pubkey::Pubkey;
    let mut _241: u64;
    let mut _242: &solana_program::account_info::AccountInfo<'_>;
    let mut _243: &solana_program::account_info::AccountInfo<'_>;
    let mut _244: &solana_program::account_info::AccountInfo<'_>;
    let mut _245: &solana_program::account_info::AccountInfo<'_>;
    let mut _246: &solana_program::account_info::AccountInfo<'_>;
    let mut _247: &solana_program::account_info::AccountInfo<'_>;
    let mut _248: &solana_program::account_info::AccountInfo<'_>;
    let mut _249: &solana_program::account_info::AccountInfo<'_>;
    let mut _250: &solana_program::clock::Clock;
    let mut _251: &solana_program::account_info::AccountInfo<'_>;
    let mut _252: isize;
    let mut _254: !;
    let mut _255: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _258: solend_sdk::state::Reserve;
    let mut _259: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solend_sdk::state::Reserve>;
    let mut _260: std::result::Result<solend_sdk::state::Reserve, solana_program::program_error::ProgramError>;
    let mut _261: &[u8];
    let _262: &&mut [u8];
    let mut _263: &std::cell::Ref<'_, &mut [u8]>;
    let _264: &std::cell::Ref<'_, &mut [u8]>;
    let _265: std::cell::Ref<'_, &mut [u8]>;
    let mut _266: &std::cell::RefCell<&mut [u8]>;
    let _267: &std::cell::RefCell<&mut [u8]>;
    let mut _268: &std::rc::Rc<std::cell::RefCell<&mut [u8]>>;
    let mut _269: isize;
    let mut _271: !;
    let mut _272: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _274: ();
    let mut _275: bool;
    let mut _276: &&solana_program::pubkey::Pubkey;
    let _277: &solana_program::pubkey::Pubkey;
    let mut _278: &&solana_program::pubkey::Pubkey;
    let mut _279: !;
    let _280: ();
    let mut _281: &str;
    let _282: &str;
    let mut _283: solana_program::program_error::ProgramError;
    let mut _284: solend_sdk::error::LendingError;
    let mut _286: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, u64>;
    let mut _287: std::result::Result<u64, solana_program::program_error::ProgramError>;
    let mut _288: &solend_sdk::state::Reserve;
    let mut _289: u64;
    let mut _290: &solend_sdk::state::Bonus;
    let _291: &solend_sdk::state::Bonus;
    let mut _292: isize;
    let mut _294: !;
    let mut _295: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _297: ();
    let mut _298: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _299: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _300: processor::TokenTransferParams<'_, '_>;
    let mut _301: solana_program::account_info::AccountInfo<'_>;
    let mut _302: &solana_program::account_info::AccountInfo<'_>;
    let mut _303: solana_program::account_info::AccountInfo<'_>;
    let mut _304: &solana_program::account_info::AccountInfo<'_>;
    let mut _305: u64;
    let mut _306: solana_program::account_info::AccountInfo<'_>;
    let mut _307: &solana_program::account_info::AccountInfo<'_>;
    let mut _308: &[&[u8]];
    let mut _309: &[&[u8]; 0];
    let _310: &[&[u8]; 0];
    let _311: [&[u8]; 0];
    let mut _312: solana_program::account_info::AccountInfo<'_>;
    let mut _313: &solana_program::account_info::AccountInfo<'_>;
    let mut _314: isize;
    let mut _316: !;
    let mut _317: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _319: ();
    let mut _321: &mut [u8];
    let mut _322: &mut [u8];
    let mut _323: bool;
    let mut _324: bool;
    let mut _325: bool;
    let mut _326: bool;
    let mut _327: isize;
    let mut _328: isize;
    let mut _329: isize;
    let mut _330: isize;
    let mut _331: isize;
    let mut _332: isize;
    let mut _333: isize;
    let mut _334: isize;
    let mut _335: isize;
    let mut _336: isize;
    let mut _337: isize;
    let mut _338: isize;
    let mut _339: isize;
    let mut _340: isize;
    let mut _341: isize;
    let mut _342: isize;
    let mut _343: isize;
    let mut _344: isize;
    let mut _345: isize;
    let mut _346: isize;
    let mut _347: isize;
    let mut _348: isize;
    let mut _349: isize;
    let mut _350: isize;
    let mut _351: isize;
    let mut _352: isize;
    let mut _353: isize;
    let mut _354: isize;
    let mut _355: isize;
    let mut _356: isize;
    let mut _357: isize;
    let mut _358: isize;
    let mut _359: isize;
    let mut _360: isize;
    let mut _361: isize;
    let mut _362: isize;
    let mut _363: isize;
    let mut _364: isize;
    let mut _365: isize;
    let mut _366: isize;
    let mut _367: isize;
    let mut _368: isize;
    let mut _369: isize;
    let mut _370: isize;
    let mut _371: isize;
    let mut _372: isize;
    let mut _373: isize;
    let mut _374: isize;
    let mut _375: isize;
    let mut _376: isize;
    let mut _377: isize;
    let mut _378: isize;
    let mut _379: isize;
    let mut _380: isize;
    let mut _381: isize;
    let mut _382: isize;
    let mut _383: isize;
    let mut _384: isize;
    let mut _385: isize;
    let mut _386: isize;
    let mut _387: isize;
    let mut _388: isize;
    let mut _389: isize;
    let mut _390: isize;
    let mut _391: isize;
    let mut _392: isize;
    let mut _393: isize;
    let mut _394: isize;
    let mut _395: isize;
    let mut _396: isize;
    let mut _397: isize;
    let mut _398: isize;
    let mut _399: isize;
    let mut _400: isize;
    let mut _401: isize;
    let mut _402: isize;
    let mut _403: isize;
    let mut _404: isize;
    let mut _405: isize;
    let mut _406: isize;
    let mut _407: isize;
    let mut _408: isize;
    let mut _409: isize;
    let mut _410: isize;
    let mut _411: isize;
    let mut _412: isize;
    let mut _413: isize;
    let mut _414: isize;
    let mut _415: isize;
    let mut _416: isize;
    let mut _417: isize;
    let mut _418: isize;
    let mut _419: isize;
    let mut _420: isize;
    let mut _421: isize;
    let mut _422: isize;
    let mut _423: isize;
    let mut _424: isize;
    let mut _425: isize;
    let mut _426: isize;
    let mut _427: isize;
    let mut _428: isize;
    let mut _429: isize;
    let mut _430: isize;
    let mut _431: isize;
    let mut _432: isize;
    let mut _433: isize;
    let mut _434: isize;
    let mut _435: isize;
    let mut _436: isize;
    let mut _437: isize;
    let mut _438: isize;
    let mut _439: isize;
    let mut _440: isize;
    let mut _441: isize;
    let mut _442: isize;
    let mut _443: isize;
    let mut _444: isize;
    let mut _445: isize;
    let mut _446: isize;
    let mut _447: isize;
    let mut _448: isize;
    let mut _449: isize;
    let mut _450: isize;
    let mut _451: isize;
    let mut _452: *const solend_sdk::state::Reserve;
    let mut _453: *const solend_sdk::state::Reserve;
    let mut _454: *const solend_sdk::state::Reserve;
    let mut _455: *const solend_sdk::state::Reserve;
    scope 1 {
        debug account_info_iter => _13;
        let _16: &solana_program::account_info::AccountInfo<'_>;
        let _21: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _24: &solana_program::account_info::AccountInfo<'_>;
        scope 2 {
            debug source_liquidity_info => _16;
            let _25: &solana_program::account_info::AccountInfo<'_>;
            let _30: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _33: &solana_program::account_info::AccountInfo<'_>;
            scope 7 {
                debug destination_collateral_info => _25;
                let _34: &solana_program::account_info::AccountInfo<'_>;
                let _39: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _42: &solana_program::account_info::AccountInfo<'_>;
                scope 12 {
                    debug destination_liquidity_info => _34;
                    let _43: &solana_program::account_info::AccountInfo<'_>;
                    let _48: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _51: &solana_program::account_info::AccountInfo<'_>;
                    scope 17 {
                        debug repay_reserve_info => _43;
                        let _52: &solana_program::account_info::AccountInfo<'_>;
                        let _57: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _60: &solana_program::account_info::AccountInfo<'_>;
                        scope 22 {
                            debug repay_reserve_liquidity_supply_info => _52;
                            let _61: &solana_program::account_info::AccountInfo<'_>;
                            let _66: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                            let _69: &solana_program::account_info::AccountInfo<'_>;
                            scope 27 {
                                debug withdraw_reserve_info => _61;
                                let _70: &solana_program::account_info::AccountInfo<'_>;
                                let _75: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                let _78: &solana_program::account_info::AccountInfo<'_>;
                                scope 32 {
                                    debug withdraw_reserve_collateral_mint_info => _70;
                                    let _79: &solana_program::account_info::AccountInfo<'_>;
                                    let _84: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                    let _87: &solana_program::account_info::AccountInfo<'_>;
                                    scope 37 {
                                        debug withdraw_reserve_collateral_supply_info => _79;
                                        let _88: &solana_program::account_info::AccountInfo<'_>;
                                        let _93: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _96: &solana_program::account_info::AccountInfo<'_>;
                                        scope 42 {
                                            debug withdraw_reserve_liquidity_supply_info => _88;
                                            let _97: &solana_program::account_info::AccountInfo<'_>;
                                            let _102: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                            let _105: &solana_program::account_info::AccountInfo<'_>;
                                            scope 47 {
                                                debug withdraw_reserve_liquidity_fee_receiver_info => _97;
                                                let _106: &solana_program::account_info::AccountInfo<'_>;
                                                let _111: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                let _114: &solana_program::account_info::AccountInfo<'_>;
                                                scope 52 {
                                                    debug obligation_info => _106;
                                                    let _115: &solana_program::account_info::AccountInfo<'_>;
                                                    let _120: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                    let _123: &solana_program::account_info::AccountInfo<'_>;
                                                    scope 57 {
                                                        debug lending_market_info => _115;
                                                        let _124: &solana_program::account_info::AccountInfo<'_>;
                                                        let _129: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                        let _132: &solana_program::account_info::AccountInfo<'_>;
                                                        scope 62 {
                                                            debug lending_market_authority_info => _124;
                                                            let _133: &solana_program::account_info::AccountInfo<'_>;
                                                            let _138: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                            let _141: &solana_program::account_info::AccountInfo<'_>;
                                                            scope 67 {
                                                                debug user_transfer_authority_info => _133;
                                                                let _142: &solana_program::account_info::AccountInfo<'_>;
                                                                let _147: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                let _150: &solana_program::account_info::AccountInfo<'_>;
                                                                scope 72 {
                                                                    debug token_program_id => _142;
                                                                    let _151: &solana_program::clock::Clock;
                                                                    let _156: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                    let _159: solana_program::clock::Clock;
                                                                    scope 77 {
                                                                        debug clock => _151;
                                                                        let _160: u64;
                                                                        let _161: solend_sdk::state::Bonus;
                                                                        let _180: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                        let _183: (u64, solend_sdk::state::Bonus);
                                                                        scope 82 {
                                                                            debug withdrawn_collateral_amount => _160;
                                                                            debug bonus => _161;
                                                                            let _191: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                            let _194: ();
                                                                            let _195: std::boxed::Box<solend_sdk::state::Reserve>;
                                                                            let _208: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                            let _211: solend_sdk::state::Reserve;
                                                                            scope 87 {
                                                                                debug residual => _191;
                                                                                scope 88 {
                                                                                }
                                                                            }
                                                                            scope 89 {
                                                                                debug val => _194;
                                                                                scope 90 {
                                                                                }
                                                                            }
                                                                            scope 91 {
                                                                                debug withdraw_reserve => _195;
                                                                                let _212: solend_sdk::state::CollateralExchangeRate;
                                                                                let _217: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                let _220: solend_sdk::state::CollateralExchangeRate;
                                                                                scope 96 {
                                                                                    debug collateral_exchange_rate => _212;
                                                                                    let _221: u64;
                                                                                    let _227: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                    let _230: u64;
                                                                                    let mut _456: *const ();
                                                                                    let mut _457: usize;
                                                                                    let mut _458: usize;
                                                                                    let mut _459: usize;
                                                                                    let mut _460: usize;
                                                                                    let mut _461: bool;
                                                                                    scope 101 {
                                                                                        debug max_redeemable_collateral => _221;
                                                                                        let _231: u64;
                                                                                        scope 106 {
                                                                                            debug withdraw_collateral_amount => _231;
                                                                                            let _237: u64;
                                                                                            let _253: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                            let _256: u64;
                                                                                            scope 107 {
                                                                                                debug withdraw_liquidity_amount => _237;
                                                                                                let _257: std::boxed::Box<solend_sdk::state::Reserve>;
                                                                                                let _270: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                let _273: solend_sdk::state::Reserve;
                                                                                                scope 112 {
                                                                                                    debug withdraw_reserve => _257;
                                                                                                    let _285: u64;
                                                                                                    let _293: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                    let _296: u64;
                                                                                                    scope 117 {
                                                                                                        debug protocol_fee => _285;
                                                                                                        let _315: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                        let _318: ();
                                                                                                        let mut _320: &[&[u8]; 0];
                                                                                                        scope 122 {
                                                                                                            debug residual => _315;
                                                                                                            scope 123 {
                                                                                                            }
                                                                                                        }
                                                                                                        scope 124 {
                                                                                                            debug val => _318;
                                                                                                            scope 125 {
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    scope 118 {
                                                                                                        debug residual => _293;
                                                                                                        scope 119 {
                                                                                                        }
                                                                                                    }
                                                                                                    scope 120 {
                                                                                                        debug val => _296;
                                                                                                        scope 121 {
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                scope 113 {
                                                                                                    debug residual => _270;
                                                                                                    scope 114 {
                                                                                                    }
                                                                                                }
                                                                                                scope 115 {
                                                                                                    debug val => _273;
                                                                                                    scope 116 {
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            scope 108 {
                                                                                                debug residual => _253;
                                                                                                scope 109 {
                                                                                                }
                                                                                            }
                                                                                            scope 110 {
                                                                                                debug val => _256;
                                                                                                scope 111 {
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    scope 102 {
                                                                                        debug residual => _227;
                                                                                        scope 103 {
                                                                                        }
                                                                                    }
                                                                                    scope 104 {
                                                                                        debug val => _230;
                                                                                        scope 105 {
                                                                                        }
                                                                                    }
                                                                                }
                                                                                scope 97 {
                                                                                    debug residual => _217;
                                                                                    scope 98 {
                                                                                    }
                                                                                }
                                                                                scope 99 {
                                                                                    debug val => _220;
                                                                                    scope 100 {
                                                                                    }
                                                                                }
                                                                            }
                                                                            scope 92 {
                                                                                debug residual => _208;
                                                                                scope 93 {
                                                                                }
                                                                            }
                                                                            scope 94 {
                                                                                debug val => _211;
                                                                                scope 95 {
                                                                                }
                                                                            }
                                                                        }
                                                                        scope 83 {
                                                                            debug residual => _180;
                                                                            scope 84 {
                                                                            }
                                                                        }
                                                                        scope 85 {
                                                                            debug val => _183;
                                                                            scope 86 {
                                                                            }
                                                                        }
                                                                    }
                                                                    scope 78 {
                                                                        debug residual => _156;
                                                                        scope 79 {
                                                                        }
                                                                    }
                                                                    scope 80 {
                                                                        debug val => _159;
                                                                        scope 81 {
                                                                        }
                                                                    }
                                                                }
                                                                scope 73 {
                                                                    debug residual => _147;
                                                                    scope 74 {
                                                                    }
                                                                }
                                                                scope 75 {
                                                                    debug val => _150;
                                                                    scope 76 {
                                                                    }
                                                                }
                                                            }
                                                            scope 68 {
                                                                debug residual => _138;
                                                                scope 69 {
                                                                }
                                                            }
                                                            scope 70 {
                                                                debug val => _141;
                                                                scope 71 {
                                                                }
                                                            }
                                                        }
                                                        scope 63 {
                                                            debug residual => _129;
                                                            scope 64 {
                                                            }
                                                        }
                                                        scope 65 {
                                                            debug val => _132;
                                                            scope 66 {
                                                            }
                                                        }
                                                    }
                                                    scope 58 {
                                                        debug residual => _120;
                                                        scope 59 {
                                                        }
                                                    }
                                                    scope 60 {
                                                        debug val => _123;
                                                        scope 61 {
                                                        }
                                                    }
                                                }
                                                scope 53 {
                                                    debug residual => _111;
                                                    scope 54 {
                                                    }
                                                }
                                                scope 55 {
                                                    debug val => _114;
                                                    scope 56 {
                                                    }
                                                }
                                            }
                                            scope 48 {
                                                debug residual => _102;
                                                scope 49 {
                                                }
                                            }
                                            scope 50 {
                                                debug val => _105;
                                                scope 51 {
                                                }
                                            }
                                        }
                                        scope 43 {
                                            debug residual => _93;
                                            scope 44 {
                                            }
                                        }
                                        scope 45 {
                                            debug val => _96;
                                            scope 46 {
                                            }
                                        }
                                    }
                                    scope 38 {
                                        debug residual => _84;
                                        scope 39 {
                                        }
                                    }
                                    scope 40 {
                                        debug val => _87;
                                        scope 41 {
                                        }
                                    }
                                }
                                scope 33 {
                                    debug residual => _75;
                                    scope 34 {
                                    }
                                }
                                scope 35 {
                                    debug val => _78;
                                    scope 36 {
                                    }
                                }
                            }
                            scope 28 {
                                debug residual => _66;
                                scope 29 {
                                }
                            }
                            scope 30 {
                                debug val => _69;
                                scope 31 {
                                }
                            }
                        }
                        scope 23 {
                            debug residual => _57;
                            scope 24 {
                            }
                        }
                        scope 25 {
                            debug val => _60;
                            scope 26 {
                            }
                        }
                    }
                    scope 18 {
                        debug residual => _48;
                        scope 19 {
                        }
                    }
                    scope 20 {
                        debug val => _51;
                        scope 21 {
                        }
                    }
                }
                scope 13 {
                    debug residual => _39;
                    scope 14 {
                    }
                }
                scope 15 {
                    debug val => _42;
                    scope 16 {
                    }
                }
            }
            scope 8 {
                debug residual => _30;
                scope 9 {
                }
            }
            scope 10 {
                debug val => _33;
                scope 11 {
                }
            }
        }
        scope 3 {
            debug residual => _21;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _24;
            scope 6 {
            }
        }
    }

    bb0: {
        _326 = const false;
        _325 = const false;
        _324 = const false;
        _323 = const false;
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _2;
        _5 = Eq(move _6, const 0_u64);
        switchInt(move _5) -> [0: bb4, otherwise: bb1];
    }

    bb1: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = const "Liquidity amount provided cannot be zero";
        _9 = &(*_10);
        _8 = solana_program::log::sol_log(move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_10);
        StorageDead(_8);
        StorageLive(_11);
        StorageLive(_12);
        _12 = InvalidAmount;
        _11 = <LendingError as Into<ProgramError>>::into(move _12) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_12);
        _0 = Result::<(), ProgramError>::Err(move _11);
        StorageDead(_11);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb183;
    }

    bb4: {
        StorageDead(_6);
        _4 = const ();
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &(*_3);
        _14 = bytemuck::core::slice::<impl [AccountInfo<'_>]>::iter(move _15) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_15);
        _13 = &mut _14;
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &mut (*_13);
        _18 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _19) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_19);
        _17 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _18) -> [return: bb7, unwind: bb191];
    }

    bb7: {
        StorageDead(_18);
        _20 = discriminant(_17);
        switchInt(move _20) -> [0: bb8, 1: bb10, otherwise: bb9];
    }

    bb8: {
        StorageLive(_24);
        _24 = ((_17 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _16 = _24;
        StorageDead(_24);
        _327 = discriminant(_17);
        StorageDead(_17);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &mut (*_13);
        _27 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _28) -> [return: bb12, unwind continue];
    }

    bb9: {
        unreachable;
    }

    bb10: {
        StorageLive(_21);
        _21 = move ((_17 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_23);
        _23 = move _21;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _23) -> [return: bb11, unwind: bb216];
    }

    bb11: {
        StorageDead(_23);
        StorageDead(_21);
        _425 = discriminant(_17);
        StorageDead(_17);
        goto -> bb182;
    }

    bb12: {
        StorageDead(_28);
        _26 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _27) -> [return: bb13, unwind: bb191];
    }

    bb13: {
        StorageDead(_27);
        _29 = discriminant(_26);
        switchInt(move _29) -> [0: bb14, 1: bb15, otherwise: bb9];
    }

    bb14: {
        StorageLive(_33);
        _33 = ((_26 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _25 = _33;
        StorageDead(_33);
        _329 = discriminant(_26);
        StorageDead(_26);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut (*_13);
        _36 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _37) -> [return: bb17, unwind continue];
    }

    bb15: {
        StorageLive(_30);
        _30 = move ((_26 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_32);
        _32 = move _30;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _32) -> [return: bb16, unwind: bb215];
    }

    bb16: {
        StorageDead(_32);
        StorageDead(_30);
        _423 = discriminant(_26);
        StorageDead(_26);
        goto -> bb181;
    }

    bb17: {
        StorageDead(_37);
        _35 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _36) -> [return: bb18, unwind: bb191];
    }

    bb18: {
        StorageDead(_36);
        _38 = discriminant(_35);
        switchInt(move _38) -> [0: bb19, 1: bb20, otherwise: bb9];
    }

    bb19: {
        StorageLive(_42);
        _42 = ((_35 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _34 = _42;
        StorageDead(_42);
        _331 = discriminant(_35);
        StorageDead(_35);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &mut (*_13);
        _45 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _46) -> [return: bb22, unwind continue];
    }

    bb20: {
        StorageLive(_39);
        _39 = move ((_35 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_41);
        _41 = move _39;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _41) -> [return: bb21, unwind: bb214];
    }

    bb21: {
        StorageDead(_41);
        StorageDead(_39);
        _421 = discriminant(_35);
        StorageDead(_35);
        goto -> bb180;
    }

    bb22: {
        StorageDead(_46);
        _44 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _45) -> [return: bb23, unwind: bb191];
    }

    bb23: {
        StorageDead(_45);
        _47 = discriminant(_44);
        switchInt(move _47) -> [0: bb24, 1: bb25, otherwise: bb9];
    }

    bb24: {
        StorageLive(_51);
        _51 = ((_44 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _43 = _51;
        StorageDead(_51);
        _333 = discriminant(_44);
        StorageDead(_44);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &mut (*_13);
        _54 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _55) -> [return: bb27, unwind continue];
    }

    bb25: {
        StorageLive(_48);
        _48 = move ((_44 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_50);
        _50 = move _48;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _50) -> [return: bb26, unwind: bb213];
    }

    bb26: {
        StorageDead(_50);
        StorageDead(_48);
        _419 = discriminant(_44);
        StorageDead(_44);
        goto -> bb179;
    }

    bb27: {
        StorageDead(_55);
        _53 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _54) -> [return: bb28, unwind: bb191];
    }

    bb28: {
        StorageDead(_54);
        _56 = discriminant(_53);
        switchInt(move _56) -> [0: bb29, 1: bb30, otherwise: bb9];
    }

    bb29: {
        StorageLive(_60);
        _60 = ((_53 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _52 = _60;
        StorageDead(_60);
        _335 = discriminant(_53);
        StorageDead(_53);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &mut (*_13);
        _63 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _64) -> [return: bb32, unwind continue];
    }

    bb30: {
        StorageLive(_57);
        _57 = move ((_53 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_59);
        _59 = move _57;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _59) -> [return: bb31, unwind: bb212];
    }

    bb31: {
        StorageDead(_59);
        StorageDead(_57);
        _417 = discriminant(_53);
        StorageDead(_53);
        goto -> bb178;
    }

    bb32: {
        StorageDead(_64);
        _62 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _63) -> [return: bb33, unwind: bb191];
    }

    bb33: {
        StorageDead(_63);
        _65 = discriminant(_62);
        switchInt(move _65) -> [0: bb34, 1: bb35, otherwise: bb9];
    }

    bb34: {
        StorageLive(_69);
        _69 = ((_62 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _61 = _69;
        StorageDead(_69);
        _337 = discriminant(_62);
        StorageDead(_62);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &mut (*_13);
        _72 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _73) -> [return: bb37, unwind continue];
    }

    bb35: {
        StorageLive(_66);
        _66 = move ((_62 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_68);
        _68 = move _66;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _68) -> [return: bb36, unwind: bb211];
    }

    bb36: {
        StorageDead(_68);
        StorageDead(_66);
        _415 = discriminant(_62);
        StorageDead(_62);
        goto -> bb177;
    }

    bb37: {
        StorageDead(_73);
        _71 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _72) -> [return: bb38, unwind: bb191];
    }

    bb38: {
        StorageDead(_72);
        _74 = discriminant(_71);
        switchInt(move _74) -> [0: bb39, 1: bb40, otherwise: bb9];
    }

    bb39: {
        StorageLive(_78);
        _78 = ((_71 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _70 = _78;
        StorageDead(_78);
        _339 = discriminant(_71);
        StorageDead(_71);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        _82 = &mut (*_13);
        _81 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _82) -> [return: bb42, unwind continue];
    }

    bb40: {
        StorageLive(_75);
        _75 = move ((_71 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_77);
        _77 = move _75;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _77) -> [return: bb41, unwind: bb210];
    }

    bb41: {
        StorageDead(_77);
        StorageDead(_75);
        _413 = discriminant(_71);
        StorageDead(_71);
        goto -> bb176;
    }

    bb42: {
        StorageDead(_82);
        _80 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _81) -> [return: bb43, unwind: bb191];
    }

    bb43: {
        StorageDead(_81);
        _83 = discriminant(_80);
        switchInt(move _83) -> [0: bb44, 1: bb45, otherwise: bb9];
    }

    bb44: {
        StorageLive(_87);
        _87 = ((_80 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _79 = _87;
        StorageDead(_87);
        _341 = discriminant(_80);
        StorageDead(_80);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        _91 = &mut (*_13);
        _90 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _91) -> [return: bb47, unwind continue];
    }

    bb45: {
        StorageLive(_84);
        _84 = move ((_80 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_86);
        _86 = move _84;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _86) -> [return: bb46, unwind: bb209];
    }

    bb46: {
        StorageDead(_86);
        StorageDead(_84);
        _411 = discriminant(_80);
        StorageDead(_80);
        goto -> bb175;
    }

    bb47: {
        StorageDead(_91);
        _89 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _90) -> [return: bb48, unwind: bb191];
    }

    bb48: {
        StorageDead(_90);
        _92 = discriminant(_89);
        switchInt(move _92) -> [0: bb49, 1: bb50, otherwise: bb9];
    }

    bb49: {
        StorageLive(_96);
        _96 = ((_89 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _88 = _96;
        StorageDead(_96);
        _343 = discriminant(_89);
        StorageDead(_89);
        StorageLive(_97);
        StorageLive(_98);
        StorageLive(_99);
        StorageLive(_100);
        _100 = &mut (*_13);
        _99 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _100) -> [return: bb52, unwind continue];
    }

    bb50: {
        StorageLive(_93);
        _93 = move ((_89 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_95);
        _95 = move _93;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _95) -> [return: bb51, unwind: bb208];
    }

    bb51: {
        StorageDead(_95);
        StorageDead(_93);
        _409 = discriminant(_89);
        StorageDead(_89);
        goto -> bb174;
    }

    bb52: {
        StorageDead(_100);
        _98 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _99) -> [return: bb53, unwind: bb191];
    }

    bb53: {
        StorageDead(_99);
        _101 = discriminant(_98);
        switchInt(move _101) -> [0: bb54, 1: bb55, otherwise: bb9];
    }

    bb54: {
        StorageLive(_105);
        _105 = ((_98 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _97 = _105;
        StorageDead(_105);
        _345 = discriminant(_98);
        StorageDead(_98);
        StorageLive(_106);
        StorageLive(_107);
        StorageLive(_108);
        StorageLive(_109);
        _109 = &mut (*_13);
        _108 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _109) -> [return: bb57, unwind continue];
    }

    bb55: {
        StorageLive(_102);
        _102 = move ((_98 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_104);
        _104 = move _102;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _104) -> [return: bb56, unwind: bb207];
    }

    bb56: {
        StorageDead(_104);
        StorageDead(_102);
        _407 = discriminant(_98);
        StorageDead(_98);
        goto -> bb173;
    }

    bb57: {
        StorageDead(_109);
        _107 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _108) -> [return: bb58, unwind: bb191];
    }

    bb58: {
        StorageDead(_108);
        _110 = discriminant(_107);
        switchInt(move _110) -> [0: bb59, 1: bb60, otherwise: bb9];
    }

    bb59: {
        StorageLive(_114);
        _114 = ((_107 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _106 = _114;
        StorageDead(_114);
        _347 = discriminant(_107);
        StorageDead(_107);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        _118 = &mut (*_13);
        _117 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _118) -> [return: bb62, unwind continue];
    }

    bb60: {
        StorageLive(_111);
        _111 = move ((_107 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_113);
        _113 = move _111;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _113) -> [return: bb61, unwind: bb206];
    }

    bb61: {
        StorageDead(_113);
        StorageDead(_111);
        _405 = discriminant(_107);
        StorageDead(_107);
        goto -> bb172;
    }

    bb62: {
        StorageDead(_118);
        _116 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _117) -> [return: bb63, unwind: bb191];
    }

    bb63: {
        StorageDead(_117);
        _119 = discriminant(_116);
        switchInt(move _119) -> [0: bb64, 1: bb65, otherwise: bb9];
    }

    bb64: {
        StorageLive(_123);
        _123 = ((_116 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _115 = _123;
        StorageDead(_123);
        _349 = discriminant(_116);
        StorageDead(_116);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        _127 = &mut (*_13);
        _126 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _127) -> [return: bb67, unwind continue];
    }

    bb65: {
        StorageLive(_120);
        _120 = move ((_116 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_122);
        _122 = move _120;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _122) -> [return: bb66, unwind: bb205];
    }

    bb66: {
        StorageDead(_122);
        StorageDead(_120);
        _403 = discriminant(_116);
        StorageDead(_116);
        goto -> bb171;
    }

    bb67: {
        StorageDead(_127);
        _125 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _126) -> [return: bb68, unwind: bb191];
    }

    bb68: {
        StorageDead(_126);
        _128 = discriminant(_125);
        switchInt(move _128) -> [0: bb69, 1: bb70, otherwise: bb9];
    }

    bb69: {
        StorageLive(_132);
        _132 = ((_125 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _124 = _132;
        StorageDead(_132);
        _351 = discriminant(_125);
        StorageDead(_125);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        _136 = &mut (*_13);
        _135 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _136) -> [return: bb72, unwind continue];
    }

    bb70: {
        StorageLive(_129);
        _129 = move ((_125 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_131);
        _131 = move _129;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _131) -> [return: bb71, unwind: bb204];
    }

    bb71: {
        StorageDead(_131);
        StorageDead(_129);
        _401 = discriminant(_125);
        StorageDead(_125);
        goto -> bb170;
    }

    bb72: {
        StorageDead(_136);
        _134 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _135) -> [return: bb73, unwind: bb191];
    }

    bb73: {
        StorageDead(_135);
        _137 = discriminant(_134);
        switchInt(move _137) -> [0: bb74, 1: bb75, otherwise: bb9];
    }

    bb74: {
        StorageLive(_141);
        _141 = ((_134 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _133 = _141;
        StorageDead(_141);
        _353 = discriminant(_134);
        StorageDead(_134);
        StorageLive(_142);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        _145 = &mut (*_13);
        _144 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _145) -> [return: bb77, unwind continue];
    }

    bb75: {
        StorageLive(_138);
        _138 = move ((_134 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_140);
        _140 = move _138;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _140) -> [return: bb76, unwind: bb203];
    }

    bb76: {
        StorageDead(_140);
        StorageDead(_138);
        _399 = discriminant(_134);
        StorageDead(_134);
        goto -> bb169;
    }

    bb77: {
        StorageDead(_145);
        _143 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _144) -> [return: bb78, unwind: bb191];
    }

    bb78: {
        StorageDead(_144);
        _146 = discriminant(_143);
        switchInt(move _146) -> [0: bb79, 1: bb80, otherwise: bb9];
    }

    bb79: {
        StorageLive(_150);
        _150 = ((_143 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _142 = _150;
        StorageDead(_150);
        _355 = discriminant(_143);
        StorageDead(_143);
        StorageLive(_151);
        StorageLive(_152);
        StorageLive(_153);
        StorageLive(_154);
        _154 = <Clock as Sysvar>::get() -> [return: bb82, unwind continue];
    }

    bb80: {
        StorageLive(_147);
        _147 = move ((_143 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_149);
        _149 = move _147;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _149) -> [return: bb81, unwind: bb202];
    }

    bb81: {
        StorageDead(_149);
        StorageDead(_147);
        _397 = discriminant(_143);
        StorageDead(_143);
        goto -> bb168;
    }

    bb82: {
        _153 = <Result<Clock, ProgramError> as Try>::branch(move _154) -> [return: bb83, unwind: bb191];
    }

    bb83: {
        StorageDead(_154);
        _155 = discriminant(_153);
        switchInt(move _155) -> [0: bb84, 1: bb85, otherwise: bb9];
    }

    bb84: {
        StorageLive(_159);
        _159 = move ((_153 as Continue).0: solana_program::clock::Clock);
        _152 = move _159;
        StorageDead(_159);
        _151 = &_152;
        _357 = discriminant(_153);
        StorageDead(_153);
        StorageLive(_162);
        StorageLive(_163);
        StorageLive(_164);
        StorageLive(_165);
        _165 = &(*_1);
        StorageLive(_166);
        _166 = _2;
        StorageLive(_167);
        _167 = &(*_16);
        StorageLive(_168);
        _168 = &(*_25);
        StorageLive(_169);
        _169 = &(*_43);
        StorageLive(_170);
        _170 = &(*_52);
        StorageLive(_171);
        _171 = &(*_61);
        StorageLive(_172);
        _172 = &(*_79);
        StorageLive(_173);
        _173 = &(*_106);
        StorageLive(_174);
        _174 = &(*_115);
        StorageLive(_175);
        _175 = &(*_124);
        StorageLive(_176);
        _176 = &(*_133);
        StorageLive(_177);
        _177 = &(*_151);
        StorageLive(_178);
        _178 = &(*_142);
        _164 = _liquidate_obligation(move _165, move _166, move _167, move _168, move _169, move _170, move _171, move _172, move _173, move _174, move _175, move _176, move _177, move _178) -> [return: bb87, unwind continue];
    }

    bb85: {
        StorageLive(_156);
        _156 = move ((_153 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_158);
        _158 = move _156;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _158) -> [return: bb86, unwind: bb201];
    }

    bb86: {
        StorageDead(_158);
        StorageDead(_156);
        _395 = discriminant(_153);
        StorageDead(_153);
        goto -> bb167;
    }

    bb87: {
        StorageDead(_178);
        StorageDead(_177);
        StorageDead(_176);
        StorageDead(_175);
        StorageDead(_174);
        StorageDead(_173);
        StorageDead(_172);
        StorageDead(_171);
        StorageDead(_170);
        StorageDead(_169);
        StorageDead(_168);
        StorageDead(_167);
        StorageDead(_166);
        StorageDead(_165);
        _163 = <Result<(u64, Bonus), ProgramError> as Try>::branch(move _164) -> [return: bb88, unwind: bb191];
    }

    bb88: {
        StorageDead(_164);
        _179 = discriminant(_163);
        switchInt(move _179) -> [0: bb89, 1: bb90, otherwise: bb9];
    }

    bb89: {
        StorageLive(_183);
        _183 = move ((_163 as Continue).0: (u64, solend_sdk::state::Bonus));
        _162 = move _183;
        StorageDead(_183);
        StorageLive(_160);
        _160 = (_162.0: u64);
        StorageLive(_161);
        _161 = move (_162.1: solend_sdk::state::Bonus);
        _359 = discriminant(_163);
        StorageDead(_163);
        StorageDead(_162);
        StorageLive(_184);
        StorageLive(_185);
        StorageLive(_186);
        StorageLive(_187);
        _187 = &(*_1);
        StorageLive(_188);
        _188 = &(*_61);
        StorageLive(_189);
        _189 = &(*_151);
        _186 = _refresh_reserve_interest(move _187, move _188, move _189) -> [return: bb92, unwind continue];
    }

    bb90: {
        StorageLive(_180);
        _180 = move ((_163 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_182);
        _182 = move _180;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _182) -> [return: bb91, unwind: bb200];
    }

    bb91: {
        StorageDead(_182);
        StorageDead(_180);
        _393 = discriminant(_163);
        StorageDead(_163);
        StorageDead(_162);
        goto -> bb167;
    }

    bb92: {
        StorageDead(_189);
        StorageDead(_188);
        StorageDead(_187);
        _185 = <Result<(), ProgramError> as Try>::branch(move _186) -> [return: bb93, unwind: bb191];
    }

    bb93: {
        StorageDead(_186);
        _190 = discriminant(_185);
        switchInt(move _190) -> [0: bb94, 1: bb95, otherwise: bb9];
    }

    bb94: {
        StorageLive(_194);
        _194 = ((_185 as Continue).0: ());
        _184 = _194;
        StorageDead(_194);
        _361 = discriminant(_185);
        StorageDead(_185);
        StorageDead(_184);
        StorageLive(_195);
        StorageLive(_196);
        StorageLive(_197);
        StorageLive(_198);
        StorageLive(_199);
        StorageLive(_200);
        StorageLive(_201);
        StorageLive(_202);
        StorageLive(_203);
        StorageLive(_204);
        StorageLive(_205);
        StorageLive(_206);
        _206 = &((*_61).2: std::rc::Rc<std::cell::RefCell<&mut [u8]>>);
        _205 = <Rc<RefCell<&mut [u8]>> as Deref>::deref(move _206) -> [return: bb97, unwind continue];
    }

    bb95: {
        StorageLive(_191);
        _191 = move ((_185 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_193);
        _193 = move _191;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _193) -> [return: bb96, unwind: bb199];
    }

    bb96: {
        StorageDead(_193);
        StorageDead(_191);
        _391 = discriminant(_185);
        StorageDead(_185);
        StorageDead(_184);
        goto -> bb166;
    }

    bb97: {
        _204 = &(*_205);
        StorageDead(_206);
        _203 = RefCell::<&mut [u8]>::borrow(move _204) -> [return: bb98, unwind continue];
    }

    bb98: {
        StorageDead(_204);
        _202 = &_203;
        _201 = &(*_202);
        _200 = <Ref<'_, &mut [u8]> as Deref>::deref(move _201) -> [return: bb99, unwind: bb190];
    }

    bb99: {
        _321 = deref_copy (*_200);
        _199 = &(*_321);
        StorageDead(_201);
        _198 = <Reserve as Pack>::unpack(move _199) -> [return: bb100, unwind: bb190];
    }

    bb100: {
        StorageDead(_199);
        _197 = <Result<Reserve, ProgramError> as Try>::branch(move _198) -> [return: bb101, unwind: bb190];
    }

    bb101: {
        _325 = const true;
        _326 = const true;
        StorageDead(_198);
        _207 = discriminant(_197);
        switchInt(move _207) -> [0: bb102, 1: bb103, otherwise: bb9];
    }

    bb102: {
        StorageLive(_211);
        _211 = move ((_197 as Continue).0: solend_sdk::state::Reserve);
        _196 = move _211;
        StorageDead(_211);
        _195 = Box::<Reserve>::new(move _196) -> [return: bb105, unwind: bb198];
    }

    bb103: {
        StorageLive(_208);
        _208 = move ((_197 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_210);
        _210 = move _208;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _210) -> [return: bb104, unwind: bb198];
    }

    bb104: {
        StorageDead(_210);
        StorageDead(_208);
        StorageDead(_196);
        _389 = discriminant(_197);
        drop(_203) -> [return: bb164, unwind: bb191];
    }

    bb105: {
        StorageDead(_196);
        _363 = discriminant(_197);
        drop(_203) -> [return: bb106, unwind: bb189];
    }

    bb106: {
        StorageDead(_205);
        StorageDead(_203);
        StorageDead(_202);
        StorageDead(_200);
        _325 = const false;
        _326 = const false;
        StorageDead(_197);
        StorageLive(_212);
        StorageLive(_213);
        StorageLive(_214);
        StorageLive(_215);
        _452 = (((_195.0: std::ptr::Unique<solend_sdk::state::Reserve>).0: std::ptr::NonNull<solend_sdk::state::Reserve>).0: *const solend_sdk::state::Reserve);
        _215 = &(*_452);
        _214 = Reserve::collateral_exchange_rate(move _215) -> [return: bb107, unwind: bb189];
    }

    bb107: {
        StorageDead(_215);
        _213 = <Result<CollateralExchangeRate, ProgramError> as Try>::branch(move _214) -> [return: bb108, unwind: bb189];
    }

    bb108: {
        StorageDead(_214);
        _216 = discriminant(_213);
        switchInt(move _216) -> [0: bb109, 1: bb110, otherwise: bb9];
    }

    bb109: {
        StorageLive(_220);
        _220 = ((_213 as Continue).0: solend_sdk::state::CollateralExchangeRate);
        _212 = _220;
        StorageDead(_220);
        _365 = discriminant(_213);
        StorageDead(_213);
        StorageLive(_221);
        StorageLive(_222);
        StorageLive(_223);
        StorageLive(_224);
        _224 = &_212;
        StorageLive(_225);
        _453 = (((_195.0: std::ptr::Unique<solend_sdk::state::Reserve>).0: std::ptr::NonNull<solend_sdk::state::Reserve>).0: *const solend_sdk::state::Reserve);
        _456 = _453 as *const () (PtrToPtr);
        _457 = _456 as usize (Transmute);
        _458 = AlignOf(solend_sdk::state::Reserve);
        _459 = Sub(_458, const 1_usize);
        _460 = BitAnd(_457, _459);
        _461 = Eq(_460, const 0_usize);
        assert(_461, "misaligned pointer dereference: address must be a multiple of {} but is {}", _458, _457) -> [success: bb217, unwind unreachable];
    }

    bb110: {
        StorageLive(_217);
        _217 = move ((_213 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_219);
        _219 = move _217;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _219) -> [return: bb111, unwind: bb197];
    }

    bb111: {
        StorageDead(_219);
        StorageDead(_217);
        _387 = discriminant(_213);
        StorageDead(_213);
        goto -> bb163;
    }

    bb112: {
        StorageDead(_225);
        StorageDead(_224);
        _222 = <Result<u64, ProgramError> as Try>::branch(move _223) -> [return: bb113, unwind: bb189];
    }

    bb113: {
        StorageDead(_223);
        _226 = discriminant(_222);
        switchInt(move _226) -> [0: bb114, 1: bb115, otherwise: bb9];
    }

    bb114: {
        StorageLive(_230);
        _230 = ((_222 as Continue).0: u64);
        _221 = _230;
        StorageDead(_230);
        _367 = discriminant(_222);
        StorageDead(_222);
        StorageLive(_231);
        StorageLive(_232);
        _232 = _160;
        StorageLive(_233);
        _233 = _221;
        _231 = std::cmp::min::<u64>(move _232, move _233) -> [return: bb117, unwind: bb189];
    }

    bb115: {
        StorageLive(_227);
        _227 = move ((_222 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_229);
        _229 = move _227;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _229) -> [return: bb116, unwind: bb196];
    }

    bb116: {
        StorageDead(_229);
        StorageDead(_227);
        _385 = discriminant(_222);
        StorageDead(_222);
        goto -> bb162;
    }

    bb117: {
        StorageDead(_233);
        StorageDead(_232);
        StorageLive(_234);
        StorageLive(_235);
        StorageLive(_236);
        _236 = _231;
        _235 = Ne(move _236, const 0_u64);
        switchInt(move _235) -> [0: bb154, otherwise: bb118];
    }

    bb118: {
        StorageDead(_236);
        StorageLive(_237);
        StorageLive(_238);
        StorageLive(_239);
        StorageLive(_240);
        _240 = &(*_1);
        StorageLive(_241);
        _241 = _231;
        StorageLive(_242);
        _242 = &(*_25);
        StorageLive(_243);
        _243 = &(*_34);
        StorageLive(_244);
        _244 = &(*_61);
        StorageLive(_245);
        _245 = &(*_70);
        StorageLive(_246);
        _246 = &(*_88);
        StorageLive(_247);
        _247 = &(*_115);
        StorageLive(_248);
        _248 = &(*_124);
        StorageLive(_249);
        _249 = &(*_133);
        StorageLive(_250);
        _250 = &(*_151);
        StorageLive(_251);
        _251 = &(*_142);
        _239 = _redeem_reserve_collateral(move _240, move _241, move _242, move _243, move _244, move _245, move _246, move _247, move _248, move _249, move _250, move _251, const false) -> [return: bb119, unwind: bb189];
    }

    bb119: {
        StorageDead(_251);
        StorageDead(_250);
        StorageDead(_249);
        StorageDead(_248);
        StorageDead(_247);
        StorageDead(_246);
        StorageDead(_245);
        StorageDead(_244);
        StorageDead(_243);
        StorageDead(_242);
        StorageDead(_241);
        StorageDead(_240);
        _238 = <Result<u64, ProgramError> as Try>::branch(move _239) -> [return: bb120, unwind: bb189];
    }

    bb120: {
        StorageDead(_239);
        _252 = discriminant(_238);
        switchInt(move _252) -> [0: bb121, 1: bb122, otherwise: bb9];
    }

    bb121: {
        StorageLive(_256);
        _256 = ((_238 as Continue).0: u64);
        _237 = _256;
        StorageDead(_256);
        _369 = discriminant(_238);
        StorageDead(_238);
        StorageLive(_257);
        StorageLive(_258);
        StorageLive(_259);
        StorageLive(_260);
        StorageLive(_261);
        StorageLive(_262);
        StorageLive(_263);
        StorageLive(_264);
        StorageLive(_265);
        StorageLive(_266);
        StorageLive(_267);
        StorageLive(_268);
        _268 = &((*_61).2: std::rc::Rc<std::cell::RefCell<&mut [u8]>>);
        _267 = <Rc<RefCell<&mut [u8]>> as Deref>::deref(move _268) -> [return: bb124, unwind: bb189];
    }

    bb122: {
        StorageLive(_253);
        _253 = move ((_238 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_255);
        _255 = move _253;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _255) -> [return: bb123, unwind: bb195];
    }

    bb123: {
        StorageDead(_255);
        StorageDead(_253);
        _383 = discriminant(_238);
        StorageDead(_238);
        goto -> bb161;
    }

    bb124: {
        _266 = &(*_267);
        StorageDead(_268);
        _265 = RefCell::<&mut [u8]>::borrow(move _266) -> [return: bb125, unwind: bb189];
    }

    bb125: {
        StorageDead(_266);
        _264 = &_265;
        _263 = &(*_264);
        _262 = <Ref<'_, &mut [u8]> as Deref>::deref(move _263) -> [return: bb126, unwind: bb188];
    }

    bb126: {
        _322 = deref_copy (*_262);
        _261 = &(*_322);
        StorageDead(_263);
        _260 = <Reserve as Pack>::unpack(move _261) -> [return: bb127, unwind: bb188];
    }

    bb127: {
        StorageDead(_261);
        _259 = <Result<Reserve, ProgramError> as Try>::branch(move _260) -> [return: bb128, unwind: bb188];
    }

    bb128: {
        _323 = const true;
        _324 = const true;
        StorageDead(_260);
        _269 = discriminant(_259);
        switchInt(move _269) -> [0: bb129, 1: bb130, otherwise: bb9];
    }

    bb129: {
        StorageLive(_273);
        _273 = move ((_259 as Continue).0: solend_sdk::state::Reserve);
        _258 = move _273;
        StorageDead(_273);
        _257 = Box::<Reserve>::new(move _258) -> [return: bb132, unwind: bb194];
    }

    bb130: {
        StorageLive(_270);
        _270 = move ((_259 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_272);
        _272 = move _270;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _272) -> [return: bb131, unwind: bb194];
    }

    bb131: {
        StorageDead(_272);
        StorageDead(_270);
        StorageDead(_258);
        _381 = discriminant(_259);
        drop(_265) -> [return: bb159, unwind: bb189];
    }

    bb132: {
        StorageDead(_258);
        _371 = discriminant(_259);
        drop(_265) -> [return: bb133, unwind: bb187];
    }

    bb133: {
        StorageDead(_267);
        StorageDead(_265);
        StorageDead(_264);
        StorageDead(_262);
        _323 = const false;
        _324 = const false;
        StorageDead(_259);
        StorageLive(_274);
        StorageLive(_275);
        StorageLive(_276);
        StorageLive(_277);
        _454 = (((_257.0: std::ptr::Unique<solend_sdk::state::Reserve>).0: std::ptr::NonNull<solend_sdk::state::Reserve>).0: *const solend_sdk::state::Reserve);
        _277 = &(((*_454).5: solend_sdk::state::ReserveConfig).14: solana_program::pubkey::Pubkey);
        _276 = &_277;
        StorageLive(_278);
        _278 = &((*_97).0: &solana_program::pubkey::Pubkey);
        _275 = <&Pubkey as PartialEq>::ne(move _276, move _278) -> [return: bb134, unwind: bb187];
    }

    bb134: {
        switchInt(move _275) -> [0: bb138, otherwise: bb135];
    }

    bb135: {
        StorageDead(_278);
        StorageDead(_277);
        StorageDead(_276);
        StorageLive(_280);
        StorageLive(_281);
        StorageLive(_282);
        _282 = const "Withdraw reserve liquidity fee receiver does not match the reserve liquidity fee receiver provided";
        _281 = &(*_282);
        _280 = solana_program::log::sol_log(move _281) -> [return: bb136, unwind: bb187];
    }

    bb136: {
        StorageDead(_281);
        StorageDead(_282);
        StorageDead(_280);
        StorageLive(_283);
        StorageLive(_284);
        _284 = InvalidAccountInput;
        _283 = <LendingError as Into<ProgramError>>::into(move _284) -> [return: bb137, unwind: bb187];
    }

    bb137: {
        StorageDead(_284);
        _0 = Result::<(), ProgramError>::Err(move _283);
        StorageDead(_283);
        StorageDead(_275);
        StorageDead(_274);
        goto -> bb158;
    }

    bb138: {
        StorageDead(_278);
        StorageDead(_277);
        StorageDead(_276);
        _274 = const ();
        StorageDead(_275);
        StorageDead(_274);
        StorageLive(_285);
        StorageLive(_286);
        StorageLive(_287);
        StorageLive(_288);
        _455 = (((_257.0: std::ptr::Unique<solend_sdk::state::Reserve>).0: std::ptr::NonNull<solend_sdk::state::Reserve>).0: *const solend_sdk::state::Reserve);
        _288 = &(*_455);
        StorageLive(_289);
        _289 = _237;
        StorageLive(_290);
        StorageLive(_291);
        _291 = &_161;
        _290 = &(*_291);
        _287 = Reserve::calculate_protocol_liquidation_fee(move _288, move _289, move _290) -> [return: bb139, unwind: bb187];
    }

    bb139: {
        StorageDead(_290);
        StorageDead(_289);
        StorageDead(_288);
        _286 = <Result<u64, ProgramError> as Try>::branch(move _287) -> [return: bb140, unwind: bb187];
    }

    bb140: {
        StorageDead(_287);
        _292 = discriminant(_286);
        switchInt(move _292) -> [0: bb141, 1: bb142, otherwise: bb9];
    }

    bb141: {
        StorageLive(_296);
        _296 = ((_286 as Continue).0: u64);
        _285 = _296;
        StorageDead(_296);
        _373 = discriminant(_286);
        StorageDead(_291);
        StorageDead(_286);
        StorageLive(_297);
        StorageLive(_298);
        StorageLive(_299);
        StorageLive(_300);
        StorageLive(_301);
        StorageLive(_302);
        _302 = &(*_34);
        _301 = <AccountInfo<'_> as Clone>::clone(move _302) -> [return: bb144, unwind: bb187];
    }

    bb142: {
        StorageLive(_293);
        _293 = move ((_286 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_295);
        _295 = move _293;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _295) -> [return: bb143, unwind: bb193];
    }

    bb143: {
        StorageDead(_295);
        StorageDead(_293);
        _379 = discriminant(_286);
        StorageDead(_291);
        StorageDead(_286);
        goto -> bb157;
    }

    bb144: {
        StorageDead(_302);
        StorageLive(_303);
        StorageLive(_304);
        _304 = &(*_97);
        _303 = <AccountInfo<'_> as Clone>::clone(move _304) -> [return: bb145, unwind: bb186];
    }

    bb145: {
        StorageDead(_304);
        StorageLive(_305);
        _305 = _285;
        StorageLive(_306);
        StorageLive(_307);
        _307 = &(*_133);
        _306 = <AccountInfo<'_> as Clone>::clone(move _307) -> [return: bb146, unwind: bb185];
    }

    bb146: {
        StorageDead(_307);
        StorageLive(_308);
        StorageLive(_309);
        StorageLive(_310);
        _320 = const _;
        _310 = &(*_320);
        _309 = &(*_310);
        _308 = move _309 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_309);
        StorageLive(_312);
        StorageLive(_313);
        _313 = &(*_142);
        _312 = <AccountInfo<'_> as Clone>::clone(move _313) -> [return: bb147, unwind: bb184];
    }

    bb147: {
        StorageDead(_313);
        _300 = TokenTransferParams::<'_, '_> { source: move _301, destination: move _303, amount: move _305, authority: move _306, authority_signer_seeds: move _308, token_program: move _312 };
        StorageDead(_312);
        StorageDead(_308);
        StorageDead(_306);
        StorageDead(_305);
        StorageDead(_303);
        StorageDead(_301);
        _299 = spl_token_transfer(move _300) -> [return: bb148, unwind: bb187];
    }

    bb148: {
        StorageDead(_300);
        _298 = <Result<(), ProgramError> as Try>::branch(move _299) -> [return: bb149, unwind: bb187];
    }

    bb149: {
        StorageDead(_299);
        _314 = discriminant(_298);
        switchInt(move _314) -> [0: bb150, 1: bb151, otherwise: bb9];
    }

    bb150: {
        StorageLive(_318);
        _318 = ((_298 as Continue).0: ());
        _297 = _318;
        StorageDead(_318);
        _375 = discriminant(_298);
        StorageDead(_310);
        StorageDead(_298);
        StorageDead(_297);
        _234 = const ();
        StorageDead(_285);
        drop(_257) -> [return: bb153, unwind: bb189];
    }

    bb151: {
        StorageLive(_315);
        _315 = move ((_298 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_317);
        _317 = move _315;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _317) -> [return: bb152, unwind: bb192];
    }

    bb152: {
        StorageDead(_317);
        StorageDead(_315);
        _377 = discriminant(_298);
        StorageDead(_310);
        StorageDead(_298);
        StorageDead(_297);
        goto -> bb157;
    }

    bb153: {
        StorageDead(_257);
        StorageDead(_237);
        goto -> bb155;
    }

    bb154: {
        StorageDead(_236);
        _234 = const ();
        goto -> bb155;
    }

    bb155: {
        StorageDead(_235);
        StorageDead(_234);
        StorageLive(_319);
        _319 = ();
        _0 = Result::<(), ProgramError>::Ok(move _319);
        StorageDead(_319);
        StorageDead(_231);
        StorageDead(_221);
        StorageDead(_212);
        drop(_195) -> [return: bb156, unwind: bb191];
    }

    bb156: {
        StorageDead(_195);
        StorageDead(_161);
        StorageDead(_160);
        StorageDead(_152);
        StorageDead(_151);
        StorageDead(_142);
        StorageDead(_133);
        StorageDead(_124);
        StorageDead(_115);
        StorageDead(_106);
        StorageDead(_97);
        StorageDead(_88);
        StorageDead(_79);
        StorageDead(_70);
        StorageDead(_61);
        StorageDead(_52);
        StorageDead(_43);
        StorageDead(_34);
        StorageDead(_25);
        StorageDead(_16);
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb183;
    }

    bb157: {
        StorageDead(_285);
        goto -> bb158;
    }

    bb158: {
        drop(_257) -> [return: bb160, unwind: bb189];
    }

    bb159: {
        StorageDead(_267);
        StorageDead(_265);
        StorageDead(_264);
        StorageDead(_262);
        _323 = const false;
        _324 = const false;
        StorageDead(_259);
        goto -> bb160;
    }

    bb160: {
        StorageDead(_257);
        goto -> bb161;
    }

    bb161: {
        StorageDead(_237);
        StorageDead(_235);
        StorageDead(_234);
        StorageDead(_231);
        goto -> bb162;
    }

    bb162: {
        StorageDead(_221);
        goto -> bb163;
    }

    bb163: {
        StorageDead(_212);
        drop(_195) -> [return: bb165, unwind: bb191];
    }

    bb164: {
        StorageDead(_205);
        StorageDead(_203);
        StorageDead(_202);
        StorageDead(_200);
        _325 = const false;
        _326 = const false;
        StorageDead(_197);
        goto -> bb165;
    }

    bb165: {
        StorageDead(_195);
        goto -> bb166;
    }

    bb166: {
        StorageDead(_161);
        StorageDead(_160);
        goto -> bb167;
    }

    bb167: {
        StorageDead(_152);
        StorageDead(_151);
        goto -> bb168;
    }

    bb168: {
        StorageDead(_142);
        goto -> bb169;
    }

    bb169: {
        StorageDead(_133);
        goto -> bb170;
    }

    bb170: {
        StorageDead(_124);
        goto -> bb171;
    }

    bb171: {
        StorageDead(_115);
        goto -> bb172;
    }

    bb172: {
        StorageDead(_106);
        goto -> bb173;
    }

    bb173: {
        StorageDead(_97);
        goto -> bb174;
    }

    bb174: {
        StorageDead(_88);
        goto -> bb175;
    }

    bb175: {
        StorageDead(_79);
        goto -> bb176;
    }

    bb176: {
        StorageDead(_70);
        goto -> bb177;
    }

    bb177: {
        StorageDead(_61);
        goto -> bb178;
    }

    bb178: {
        StorageDead(_52);
        goto -> bb179;
    }

    bb179: {
        StorageDead(_43);
        goto -> bb180;
    }

    bb180: {
        StorageDead(_34);
        goto -> bb181;
    }

    bb181: {
        StorageDead(_25);
        goto -> bb182;
    }

    bb182: {
        StorageDead(_16);
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb183;
    }

    bb183: {
        return;
    }

    bb184 (cleanup): {
        drop(_306) -> [return: bb185, unwind terminate(cleanup)];
    }

    bb185 (cleanup): {
        drop(_303) -> [return: bb186, unwind terminate(cleanup)];
    }

    bb186 (cleanup): {
        drop(_301) -> [return: bb187, unwind terminate(cleanup)];
    }

    bb187 (cleanup): {
        drop(_257) -> [return: bb189, unwind terminate(cleanup)];
    }

    bb188 (cleanup): {
        drop(_265) -> [return: bb189, unwind terminate(cleanup)];
    }

    bb189 (cleanup): {
        drop(_195) -> [return: bb191, unwind terminate(cleanup)];
    }

    bb190 (cleanup): {
        drop(_203) -> [return: bb191, unwind terminate(cleanup)];
    }

    bb191 (cleanup): {
        resume;
    }

    bb192 (cleanup): {
        _427 = discriminant(_298);
        goto -> bb187;
    }

    bb193 (cleanup): {
        _428 = discriminant(_286);
        goto -> bb187;
    }

    bb194 (cleanup): {
        _429 = discriminant(_259);
        goto -> bb188;
    }

    bb195 (cleanup): {
        _430 = discriminant(_238);
        goto -> bb189;
    }

    bb196 (cleanup): {
        _431 = discriminant(_222);
        goto -> bb189;
    }

    bb197 (cleanup): {
        _432 = discriminant(_213);
        goto -> bb189;
    }

    bb198 (cleanup): {
        _433 = discriminant(_197);
        goto -> bb190;
    }

    bb199 (cleanup): {
        _434 = discriminant(_185);
        goto -> bb191;
    }

    bb200 (cleanup): {
        _435 = discriminant(_163);
        goto -> bb191;
    }

    bb201 (cleanup): {
        _436 = discriminant(_153);
        goto -> bb191;
    }

    bb202 (cleanup): {
        _437 = discriminant(_143);
        goto -> bb191;
    }

    bb203 (cleanup): {
        _438 = discriminant(_134);
        goto -> bb191;
    }

    bb204 (cleanup): {
        _439 = discriminant(_125);
        goto -> bb191;
    }

    bb205 (cleanup): {
        _440 = discriminant(_116);
        goto -> bb191;
    }

    bb206 (cleanup): {
        _441 = discriminant(_107);
        goto -> bb191;
    }

    bb207 (cleanup): {
        _442 = discriminant(_98);
        goto -> bb191;
    }

    bb208 (cleanup): {
        _443 = discriminant(_89);
        goto -> bb191;
    }

    bb209 (cleanup): {
        _444 = discriminant(_80);
        goto -> bb191;
    }

    bb210 (cleanup): {
        _445 = discriminant(_71);
        goto -> bb191;
    }

    bb211 (cleanup): {
        _446 = discriminant(_62);
        goto -> bb191;
    }

    bb212 (cleanup): {
        _447 = discriminant(_53);
        goto -> bb191;
    }

    bb213 (cleanup): {
        _448 = discriminant(_44);
        goto -> bb191;
    }

    bb214 (cleanup): {
        _449 = discriminant(_35);
        goto -> bb191;
    }

    bb215 (cleanup): {
        _450 = discriminant(_26);
        goto -> bb191;
    }

    bb216 (cleanup): {
        _451 = discriminant(_17);
        goto -> bb191;
    }

    bb217: {
        _225 = (((*_453).3: solend_sdk::state::ReserveLiquidity).5: u64);
        _223 = CollateralExchangeRate::liquidity_to_collateral(move _224, move _225) -> [return: bb112, unwind: bb189];
    }
}
