// MIR for `spl_token_init_account` after PreCodegen

fn spl_token_init_account(_1: TokenInitializeAccountParams<'_>) -> Result<(), ProgramError> {
    debug params => _1;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _2: solana_program::account_info::AccountInfo<'_>;
    let _3: solana_program::account_info::AccountInfo<'_>;
    let _4: solana_program::account_info::AccountInfo<'_>;
    let _5: solana_program::account_info::AccountInfo<'_>;
    let _6: solana_program::account_info::AccountInfo<'_>;
    let mut _8: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, solana_program::instruction::Instruction>;
    let mut _9: std::result::Result<solana_program::instruction::Instruction, solana_program::program_error::ProgramError>;
    let mut _10: &solana_program::pubkey::Pubkey;
    let mut _11: &solana_program::pubkey::Pubkey;
    let mut _12: &solana_program::pubkey::Pubkey;
    let mut _13: &solana_program::pubkey::Pubkey;
    let mut _14: isize;
    let mut _16: !;
    let mut _17: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _20: &solana_program::instruction::Instruction;
    let _21: &solana_program::instruction::Instruction;
    let mut _22: &[solana_program::account_info::AccountInfo<'_>];
    let mut _23: &[solana_program::account_info::AccountInfo<'_>; 5];
    let _24: &[solana_program::account_info::AccountInfo<'_>; 5];
    let _25: [solana_program::account_info::AccountInfo<'_>; 5];
    let mut _26: solana_program::account_info::AccountInfo<'_>;
    let mut _27: solana_program::account_info::AccountInfo<'_>;
    let mut _28: solana_program::account_info::AccountInfo<'_>;
    let mut _29: solana_program::account_info::AccountInfo<'_>;
    let mut _30: solana_program::account_info::AccountInfo<'_>;
    let mut _31: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _32: {closure@token-lending\program\src\processor.rs:3331:20: 3331:23};
    let mut _33: &solana_program::pubkey::Pubkey;
    let mut _34: &solana_program::pubkey::Pubkey;
    let mut _35: &solana_program::pubkey::Pubkey;
    let mut _36: &solana_program::pubkey::Pubkey;
    let mut _37: bool;
    let mut _38: bool;
    let mut _39: bool;
    let mut _40: bool;
    let mut _41: bool;
    let mut _42: bool;
    let mut _43: isize;
    let mut _44: isize;
    let mut _45: isize;
    let mut _46: isize;
    let mut _47: isize;
    scope 1 {
        debug account => _2;
        debug mint => _3;
        debug owner => _4;
        debug rent => _5;
        debug token_program => _6;
        let _7: solana_program::instruction::Instruction;
        let _15: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _18: solana_program::instruction::Instruction;
        scope 2 {
            debug ix => _7;
            let _19: std::result::Result<(), solana_program::program_error::ProgramError>;
            scope 7 {
                debug result => _19;
            }
        }
        scope 3 {
            debug residual => _15;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _18;
            scope 6 {
            }
        }
    }

    bb0: {
        _42 = const false;
        _41 = const false;
        _40 = const false;
        _39 = const false;
        _38 = const false;
        _37 = const false;
        StorageLive(_2);
        _42 = const true;
        _2 = move (_1.0: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_3);
        _41 = const true;
        _3 = move (_1.1: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_4);
        _40 = const true;
        _4 = move (_1.2: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_5);
        _39 = const true;
        _5 = move (_1.3: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_6);
        _38 = const true;
        _6 = move (_1.4: solana_program::account_info::AccountInfo<'_>);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _33 = deref_copy (_6.0: &solana_program::pubkey::Pubkey);
        _10 = &(*_33);
        StorageLive(_11);
        _34 = deref_copy (_2.0: &solana_program::pubkey::Pubkey);
        _11 = &(*_34);
        StorageLive(_12);
        _35 = deref_copy (_3.0: &solana_program::pubkey::Pubkey);
        _12 = &(*_35);
        StorageLive(_13);
        _36 = deref_copy (_4.0: &solana_program::pubkey::Pubkey);
        _13 = &(*_36);
        _9 = initialize_account(move _10, move _11, move _12, move _13) -> [return: bb1, unwind: bb24];
    }

    bb1: {
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        _8 = <Result<Instruction, ProgramError> as Try>::branch(move _9) -> [return: bb2, unwind: bb24];
    }

    bb2: {
        StorageDead(_9);
        _14 = discriminant(_8);
        switchInt(move _14) -> [0: bb3, 1: bb5, otherwise: bb4];
    }

    bb3: {
        StorageLive(_18);
        _18 = move ((_8 as Continue).0: solana_program::instruction::Instruction);
        _7 = move _18;
        StorageDead(_18);
        _43 = discriminant(_8);
        StorageDead(_8);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        _21 = &_7;
        _20 = &(*_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _42 = const false;
        _26 = move _2;
        StorageLive(_27);
        _41 = const false;
        _27 = move _3;
        StorageLive(_28);
        _40 = const false;
        _28 = move _4;
        StorageLive(_29);
        _39 = const false;
        _29 = move _5;
        StorageLive(_30);
        _38 = const false;
        _30 = move _6;
        _25 = [move _26, move _27, move _28, move _29, move _30];
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        _24 = &_25;
        _23 = &(*_24);
        _22 = move _23 as &[solana_program::account_info::AccountInfo<'_>] (PointerCoercion(Unsize));
        StorageDead(_23);
        _19 = invoke(move _20, move _22) -> [return: bb7, unwind: bb17];
    }

    bb4: {
        unreachable;
    }

    bb5: {
        StorageLive(_15);
        _15 = move ((_8 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_17);
        _17 = move _15;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _17) -> [return: bb6, unwind: bb22];
    }

    bb6: {
        StorageDead(_17);
        StorageDead(_15);
        _45 = discriminant(_8);
        StorageDead(_8);
        StorageDead(_7);
        drop(_6) -> [return: bb11, unwind: bb26];
    }

    bb7: {
        _37 = const true;
        StorageDead(_22);
        StorageDead(_20);
        drop(_25) -> [return: bb8, unwind: bb21];
    }

    bb8: {
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_21);
        StorageLive(_31);
        _37 = const false;
        _31 = move _19;
        StorageLive(_32);
        _32 = {closure@token-lending\program\src\processor.rs:3331:20: 3331:23};
        _0 = Result::<(), ProgramError>::map_err::<ProgramError, {closure@token-lending\program\src\processor.rs:3331:20: 3331:23}>(move _31, move _32) -> [return: bb9, unwind: bb21];
    }

    bb9: {
        StorageDead(_32);
        StorageDead(_31);
        _37 = const false;
        StorageDead(_19);
        drop(_7) -> [return: bb10, unwind: bb24];
    }

    bb10: {
        StorageDead(_7);
        _38 = const false;
        StorageDead(_6);
        _39 = const false;
        StorageDead(_5);
        _40 = const false;
        StorageDead(_4);
        _41 = const false;
        StorageDead(_3);
        _42 = const false;
        StorageDead(_2);
        goto -> bb16;
    }

    bb11: {
        _38 = const false;
        StorageDead(_6);
        drop(_5) -> [return: bb12, unwind: bb28];
    }

    bb12: {
        _39 = const false;
        StorageDead(_5);
        drop(_4) -> [return: bb13, unwind: bb30];
    }

    bb13: {
        _40 = const false;
        StorageDead(_4);
        drop(_3) -> [return: bb14, unwind: bb32];
    }

    bb14: {
        _41 = const false;
        StorageDead(_3);
        drop(_2) -> [return: bb15, unwind: bb19];
    }

    bb15: {
        _42 = const false;
        StorageDead(_2);
        goto -> bb16;
    }

    bb16: {
        return;
    }

    bb17 (cleanup): {
        drop(_25) -> [return: bb18, unwind terminate(cleanup)];
    }

    bb18 (cleanup): {
        drop(_7) -> [return: bb24, unwind terminate(cleanup)];
    }

    bb19 (cleanup): {
        resume;
    }

    bb20 (cleanup): {
        drop(_19) -> [return: bb18, unwind terminate(cleanup)];
    }

    bb21 (cleanup): {
        switchInt(_37) -> [0: bb18, otherwise: bb20];
    }

    bb22 (cleanup): {
        _47 = discriminant(_8);
        goto -> bb24;
    }

    bb23 (cleanup): {
        drop(_6) -> [return: bb26, unwind terminate(cleanup)];
    }

    bb24 (cleanup): {
        switchInt(_38) -> [0: bb26, otherwise: bb23];
    }

    bb25 (cleanup): {
        drop(_5) -> [return: bb28, unwind terminate(cleanup)];
    }

    bb26 (cleanup): {
        switchInt(_39) -> [0: bb28, otherwise: bb25];
    }

    bb27 (cleanup): {
        drop(_4) -> [return: bb30, unwind terminate(cleanup)];
    }

    bb28 (cleanup): {
        switchInt(_40) -> [0: bb30, otherwise: bb27];
    }

    bb29 (cleanup): {
        drop(_3) -> [return: bb32, unwind terminate(cleanup)];
    }

    bb30 (cleanup): {
        switchInt(_41) -> [0: bb32, otherwise: bb29];
    }

    bb31 (cleanup): {
        drop(_2) -> [return: bb19, unwind terminate(cleanup)];
    }

    bb32 (cleanup): {
        switchInt(_42) -> [0: bb19, otherwise: bb31];
    }
}
