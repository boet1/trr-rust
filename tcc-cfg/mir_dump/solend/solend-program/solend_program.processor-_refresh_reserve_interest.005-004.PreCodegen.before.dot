digraph Mir_0_90 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn _refresh_reserve_interest(_1: &amp;ReErased solana_program::pubkey::Pubkey, _2: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;, _3: &amp;ReErased solana_program::clock::Clock) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let mut _4: std::boxed::Box&lt;solend_sdk::state::Reserve, std::alloc::Global&gt;;<br align="left"/>let mut _5: solend_sdk::state::Reserve;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, solend_sdk::state::Reserve&gt;;<br align="left"/>let mut _7: std::result::Result&lt;solend_sdk::state::Reserve, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _8: &amp;ReErased [u8];<br align="left"/>let _9: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _10: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _11: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _12: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _13: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _14: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _15: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _20: solend_sdk::state::Reserve;<br align="left"/>let _21: ();<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _24: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _25: !;<br align="left"/>let _26: ();<br align="left"/>let mut _27: &amp;ReErased str;<br align="left"/>let _28: &amp;ReErased str;<br align="left"/>let mut _29: solana_program::program_error::ProgramError;<br align="left"/>let mut _30: solend_sdk::error::LendingError;<br align="left"/>let _31: ();<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _33: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _34: &amp;ReErased mut solend_sdk::state::Reserve;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _40: ();<br align="left"/>let _41: ();<br align="left"/>let mut _42: &amp;ReErased mut solend_sdk::state::LastUpdate;<br align="left"/>let mut _43: u64;<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _46: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _47: solend_sdk::state::Reserve;<br align="left"/>let mut _48: &amp;ReErased mut [u8];<br align="left"/>let mut _49: &amp;ReErased mut &amp;ReErased mut [u8];<br align="left"/>let mut _50: &amp;ReErased mut std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _51: &amp;ReErased mut std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _52: std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _53: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _54: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _55: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _60: ();<br align="left"/>let mut _61: ();<br align="left"/>let mut _62: &amp;ReErased mut [u8];<br align="left"/>let mut _63: &amp;ReErased mut [u8];<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: bool;<br align="left"/>let mut _66: isize;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: *const solend_sdk::state::Reserve;<br align="left"/>let mut _82: *const solend_sdk::state::Reserve;<br align="left"/>let mut _83: *const solend_sdk::state::Reserve;<br align="left"/>let mut _84: *const ();<br align="left"/>let mut _85: usize;<br align="left"/>let mut _86: usize;<br align="left"/>let mut _87: usize;<br align="left"/>let mut _88: usize;<br align="left"/>let mut _89: bool;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug reserve_info =&gt; _2;<br align="left"/>debug clock =&gt; _3;<br align="left"/>debug reserve =&gt; _4;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>>;
    bb0__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_65 = const false<br/>_64 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;((*_2).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_14 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _15)</td></tr></table>>];
    bb1__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_13 = &amp;(*_14)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_12 = RefCell::&lt;&amp;mut [u8]&gt;::borrow(move _13)</td></tr></table>>];
    bb2__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_11 = &amp;_12<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_9 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _10)</td></tr></table>>];
    bb3__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_62 = deref_copy (*_9)<br/>_8 = &amp;(*_62)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_7 = &lt;Reserve as Pack&gt;::unpack(move _8)</td></tr></table>>];
    bb4__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;Result&lt;Reserve, ProgramError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb5__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_64 = const true<br/>_65 = const true<br/>StorageDead(_7)<br/>_16 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb6__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_6 as Continue).0: solend_sdk::state::Reserve)<br/>_5 = move _20<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_4 = Box::&lt;Reserve&gt;::new(move _5)</td></tr></table>>];
    bb7__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb9__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/>_76 = discriminant(_6)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb10__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_66 = discriminant(_6)<br/></td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb11__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>_64 = const false<br/>_65 = const false<br/>StorageDead(_6)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;((*_2).3: &amp;solana_program::pubkey::Pubkey)<br/>StorageLive(_24)<br/>_24 = &amp;_1<br/></td></tr><tr><td align="left">_22 = &lt;&amp;Pubkey as PartialEq&gt;::ne(move _23, move _24)</td></tr></table>>];
    bb12__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb13__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = const &quot;Reserve provided is not owned by the lending program&quot;<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = solana_program::log::sol_log(move _27)</td></tr></table>>];
    bb14__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = solend_sdk::error::LendingError::InvalidAccountOwner<br/></td></tr><tr><td align="left">_29 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _30)</td></tr></table>>];
    bb15__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _29)<br/>StorageDead(_29)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>_21 = const ()<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_81 = (((_4.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_34 = &amp;mut (*_81)<br/>StorageLive(_35)<br/>_35 = ((*_3).0: u64)<br/></td></tr><tr><td align="left">_33 = Reserve::accrue_interest(move _34, move _35)</td></tr></table>>];
    bb17__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb18__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_36 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb19__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_32 as Continue).0: ())<br/>_31 = _40<br/>StorageDead(_40)<br/>_68 = discriminant(_32)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_82 = (((_4.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_42 = &amp;mut ((*_82).1: solend_sdk::state::LastUpdate)<br/>StorageLive(_43)<br/>_43 = ((*_3).0: u64)<br/></td></tr><tr><td align="left">_41 = LastUpdate::update_slot(move _42, move _43)</td></tr></table>>];
    bb20__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = move ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_39)<br/>_39 = move _37<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb21__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>_74 = discriminant(_32)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_83 = (((_4.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_84 = _83 as *const () (PtrToPtr)<br/>_85 = _84 as usize (Transmute)<br/>_86 = AlignOf(solend_sdk::state::Reserve)<br/>_87 = Sub(_86, const 1_usize)<br/>_88 = BitAnd(_85, _87)<br/>_89 = Eq(_88, const 0_usize)<br/></td></tr><tr><td align="left">assert(_89, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _86, _85)</td></tr></table>>];
    bb23__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_53 = &amp;(*_54)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_52 = RefCell::&lt;&amp;mut [u8]&gt;::borrow_mut(move _53)</td></tr></table>>];
    bb24__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = &amp;mut _52<br/>_50 = &amp;mut (*_51)<br/></td></tr><tr><td align="left">_49 = &lt;RefMut&lt;'_, &amp;mut [u8]&gt; as DerefMut&gt;::deref_mut(move _50)</td></tr></table>>];
    bb25__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_63 = deref_copy (*_49)<br/>_48 = &amp;mut (*_63)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_46 = &lt;Reserve as Pack&gt;::pack(move _47, move _48)</td></tr></table>>];
    bb26__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb27__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_56 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb28__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_45 as Continue).0: ())<br/>_44 = _60<br/>StorageDead(_60)<br/>_70 = discriminant(_45)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb29__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = move ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_59)<br/>_59 = move _57<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb30__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>_72 = discriminant(_45)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb31__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_61)<br/>_61 = ()<br/>_0 = Result::&lt;(), ProgramError&gt;::Ok(move _61)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb32__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb35__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>_64 = const false<br/>_65 = const false<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">return</td></tr></table>>];
    bb38__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb39__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb40__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left">drop(_12)</td></tr></table>>];
    bb41__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb42__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left" balign="left">_78 = discriminant(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left" balign="left">_79 = discriminant(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left" balign="left">_80 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_90 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_47 = move (*_83)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;((*_2).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_54 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb0__0_90 -> bb1__0_90 [label="return"];
    bb1__0_90 -> bb2__0_90 [label="return"];
    bb2__0_90 -> bb3__0_90 [label="return"];
    bb2__0_90 -> bb40__0_90 [label="unwind"];
    bb3__0_90 -> bb4__0_90 [label="return"];
    bb3__0_90 -> bb40__0_90 [label="unwind"];
    bb4__0_90 -> bb5__0_90 [label="return"];
    bb4__0_90 -> bb40__0_90 [label="unwind"];
    bb5__0_90 -> bb6__0_90 [label="0"];
    bb5__0_90 -> bb8__0_90 [label="1"];
    bb5__0_90 -> bb7__0_90 [label="otherwise"];
    bb6__0_90 -> bb10__0_90 [label="return"];
    bb6__0_90 -> bb44__0_90 [label="unwind"];
    bb8__0_90 -> bb9__0_90 [label="return"];
    bb8__0_90 -> bb44__0_90 [label="unwind"];
    bb9__0_90 -> bb35__0_90 [label="return"];
    bb9__0_90 -> bb41__0_90 [label="unwind"];
    bb10__0_90 -> bb11__0_90 [label="return"];
    bb10__0_90 -> bb39__0_90 [label="unwind"];
    bb11__0_90 -> bb12__0_90 [label="return"];
    bb11__0_90 -> bb39__0_90 [label="unwind"];
    bb12__0_90 -> bb16__0_90 [label="0"];
    bb12__0_90 -> bb13__0_90 [label="otherwise"];
    bb13__0_90 -> bb14__0_90 [label="return"];
    bb13__0_90 -> bb39__0_90 [label="unwind"];
    bb14__0_90 -> bb15__0_90 [label="return"];
    bb14__0_90 -> bb39__0_90 [label="unwind"];
    bb15__0_90 -> bb34__0_90 [label=""];
    bb16__0_90 -> bb17__0_90 [label="return"];
    bb16__0_90 -> bb39__0_90 [label="unwind"];
    bb17__0_90 -> bb18__0_90 [label="return"];
    bb17__0_90 -> bb39__0_90 [label="unwind"];
    bb18__0_90 -> bb19__0_90 [label="0"];
    bb18__0_90 -> bb20__0_90 [label="1"];
    bb18__0_90 -> bb7__0_90 [label="otherwise"];
    bb19__0_90 -> bb22__0_90 [label="return"];
    bb19__0_90 -> bb39__0_90 [label="unwind"];
    bb20__0_90 -> bb21__0_90 [label="return"];
    bb20__0_90 -> bb43__0_90 [label="unwind"];
    bb21__0_90 -> bb34__0_90 [label=""];
    bb22__0_90 -> bb45__0_90 [label="success"];
    bb23__0_90 -> bb24__0_90 [label="return"];
    bb23__0_90 -> bb39__0_90 [label="unwind"];
    bb24__0_90 -> bb25__0_90 [label="return"];
    bb24__0_90 -> bb38__0_90 [label="unwind"];
    bb25__0_90 -> bb26__0_90 [label="return"];
    bb25__0_90 -> bb38__0_90 [label="unwind"];
    bb26__0_90 -> bb27__0_90 [label="return"];
    bb26__0_90 -> bb38__0_90 [label="unwind"];
    bb27__0_90 -> bb28__0_90 [label="0"];
    bb27__0_90 -> bb29__0_90 [label="1"];
    bb27__0_90 -> bb7__0_90 [label="otherwise"];
    bb28__0_90 -> bb31__0_90 [label="return"];
    bb28__0_90 -> bb39__0_90 [label="unwind"];
    bb29__0_90 -> bb30__0_90 [label="return"];
    bb29__0_90 -> bb42__0_90 [label="unwind"];
    bb30__0_90 -> bb33__0_90 [label="return"];
    bb30__0_90 -> bb39__0_90 [label="unwind"];
    bb31__0_90 -> bb32__0_90 [label="return"];
    bb31__0_90 -> bb41__0_90 [label="unwind"];
    bb32__0_90 -> bb37__0_90 [label=""];
    bb33__0_90 -> bb34__0_90 [label=""];
    bb34__0_90 -> bb36__0_90 [label="return"];
    bb34__0_90 -> bb41__0_90 [label="unwind"];
    bb35__0_90 -> bb36__0_90 [label=""];
    bb36__0_90 -> bb37__0_90 [label=""];
    bb38__0_90 -> bb39__0_90 [label="return"];
    bb39__0_90 -> bb41__0_90 [label="return"];
    bb40__0_90 -> bb41__0_90 [label="return"];
    bb42__0_90 -> bb38__0_90 [label=""];
    bb43__0_90 -> bb39__0_90 [label=""];
    bb44__0_90 -> bb40__0_90 [label=""];
    bb45__0_90 -> bb23__0_90 [label="return"];
    bb45__0_90 -> bb39__0_90 [label="unwind"];
}
