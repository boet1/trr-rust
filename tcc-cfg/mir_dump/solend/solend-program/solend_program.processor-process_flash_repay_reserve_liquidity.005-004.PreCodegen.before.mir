// MIR for `process_flash_repay_reserve_liquidity` before PreCodegen

fn process_flash_repay_reserve_liquidity(_1: &Pubkey, _2: u64, _3: u8, _4: &[AccountInfo<'_>]) -> Result<(), ProgramError> {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug borrow_instruction_index => _3;
    debug accounts => _4;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _5: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _6: std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _7: &[solana_program::account_info::AccountInfo<'_>];
    let mut _9: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _10: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _11: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _12: isize;
    let mut _14: !;
    let mut _15: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _18: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _19: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _20: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _21: isize;
    let mut _23: !;
    let mut _24: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _27: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _28: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _29: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _30: isize;
    let mut _32: !;
    let mut _33: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _36: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _37: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _38: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _39: isize;
    let mut _41: !;
    let mut _42: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _45: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _46: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _47: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _48: isize;
    let mut _50: !;
    let mut _51: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _54: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _55: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _56: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _57: isize;
    let mut _59: !;
    let mut _60: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _63: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _64: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _65: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _66: isize;
    let mut _68: !;
    let mut _69: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _72: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _73: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _74: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _75: isize;
    let mut _77: !;
    let mut _78: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _81: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, &solana_program::account_info::AccountInfo<'_>>;
    let mut _82: std::result::Result<&solana_program::account_info::AccountInfo<'_>, solana_program::program_error::ProgramError>;
    let mut _83: &mut std::slice::Iter<'_, solana_program::account_info::AccountInfo<'_>>;
    let mut _84: isize;
    let mut _86: !;
    let mut _87: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let _89: ();
    let mut _90: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>>;
    let mut _91: std::result::Result<(), solana_program::program_error::ProgramError>;
    let mut _92: &solana_program::pubkey::Pubkey;
    let mut _93: u64;
    let mut _94: u8;
    let mut _95: &solana_program::account_info::AccountInfo<'_>;
    let mut _96: &solana_program::account_info::AccountInfo<'_>;
    let mut _97: &solana_program::account_info::AccountInfo<'_>;
    let mut _98: &solana_program::account_info::AccountInfo<'_>;
    let mut _99: &solana_program::account_info::AccountInfo<'_>;
    let mut _100: &solana_program::account_info::AccountInfo<'_>;
    let mut _101: &solana_program::account_info::AccountInfo<'_>;
    let mut _102: &solana_program::account_info::AccountInfo<'_>;
    let mut _103: &solana_program::account_info::AccountInfo<'_>;
    let mut _104: isize;
    let mut _106: !;
    let mut _107: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _109: ();
    let mut _110: isize;
    let mut _111: isize;
    let mut _112: isize;
    let mut _113: isize;
    let mut _114: isize;
    let mut _115: isize;
    let mut _116: isize;
    let mut _117: isize;
    let mut _118: isize;
    let mut _119: isize;
    let mut _120: isize;
    let mut _121: isize;
    let mut _122: isize;
    let mut _123: isize;
    let mut _124: isize;
    let mut _125: isize;
    let mut _126: isize;
    let mut _127: isize;
    let mut _128: isize;
    let mut _129: isize;
    let mut _130: isize;
    let mut _131: isize;
    let mut _132: isize;
    let mut _133: isize;
    let mut _134: isize;
    let mut _135: isize;
    let mut _136: isize;
    let mut _137: isize;
    let mut _138: isize;
    let mut _139: isize;
    let mut _140: isize;
    let mut _141: isize;
    let mut _142: isize;
    let mut _143: isize;
    let mut _144: isize;
    let mut _145: isize;
    let mut _146: isize;
    let mut _147: isize;
    let mut _148: isize;
    let mut _149: isize;
    let mut _150: isize;
    let mut _151: isize;
    let mut _152: isize;
    let mut _153: isize;
    let mut _154: isize;
    let mut _155: isize;
    let mut _156: isize;
    let mut _157: isize;
    let mut _158: isize;
    let mut _159: isize;
    scope 1 {
        debug account_info_iter => _5;
        let _8: &solana_program::account_info::AccountInfo<'_>;
        let _13: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _16: &solana_program::account_info::AccountInfo<'_>;
        scope 2 {
            debug source_liquidity_info => _8;
            let _17: &solana_program::account_info::AccountInfo<'_>;
            let _22: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _25: &solana_program::account_info::AccountInfo<'_>;
            scope 7 {
                debug destination_liquidity_info => _17;
                let _26: &solana_program::account_info::AccountInfo<'_>;
                let _31: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _34: &solana_program::account_info::AccountInfo<'_>;
                scope 12 {
                    debug reserve_liquidity_fee_receiver_info => _26;
                    let _35: &solana_program::account_info::AccountInfo<'_>;
                    let _40: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _43: &solana_program::account_info::AccountInfo<'_>;
                    scope 17 {
                        debug host_fee_receiver_info => _35;
                        let _44: &solana_program::account_info::AccountInfo<'_>;
                        let _49: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _52: &solana_program::account_info::AccountInfo<'_>;
                        scope 22 {
                            debug reserve_info => _44;
                            let _53: &solana_program::account_info::AccountInfo<'_>;
                            let _58: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                            let _61: &solana_program::account_info::AccountInfo<'_>;
                            scope 27 {
                                debug lending_market_info => _53;
                                let _62: &solana_program::account_info::AccountInfo<'_>;
                                let _67: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                let _70: &solana_program::account_info::AccountInfo<'_>;
                                scope 32 {
                                    debug user_transfer_authority_info => _62;
                                    let _71: &solana_program::account_info::AccountInfo<'_>;
                                    let _76: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                    let _79: &solana_program::account_info::AccountInfo<'_>;
                                    scope 37 {
                                        debug sysvar_info => _71;
                                        let _80: &solana_program::account_info::AccountInfo<'_>;
                                        let _85: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _88: &solana_program::account_info::AccountInfo<'_>;
                                        scope 42 {
                                            debug token_program_id => _80;
                                            let _105: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                            let _108: ();
                                            scope 47 {
                                                debug residual => _105;
                                                scope 48 {
                                                }
                                            }
                                            scope 49 {
                                                debug val => _108;
                                                scope 50 {
                                                }
                                            }
                                        }
                                        scope 43 {
                                            debug residual => _85;
                                            scope 44 {
                                            }
                                        }
                                        scope 45 {
                                            debug val => _88;
                                            scope 46 {
                                            }
                                        }
                                    }
                                    scope 38 {
                                        debug residual => _76;
                                        scope 39 {
                                        }
                                    }
                                    scope 40 {
                                        debug val => _79;
                                        scope 41 {
                                        }
                                    }
                                }
                                scope 33 {
                                    debug residual => _67;
                                    scope 34 {
                                    }
                                }
                                scope 35 {
                                    debug val => _70;
                                    scope 36 {
                                    }
                                }
                            }
                            scope 28 {
                                debug residual => _58;
                                scope 29 {
                                }
                            }
                            scope 30 {
                                debug val => _61;
                                scope 31 {
                                }
                            }
                        }
                        scope 23 {
                            debug residual => _49;
                            scope 24 {
                            }
                        }
                        scope 25 {
                            debug val => _52;
                            scope 26 {
                            }
                        }
                    }
                    scope 18 {
                        debug residual => _40;
                        scope 19 {
                        }
                    }
                    scope 20 {
                        debug val => _43;
                        scope 21 {
                        }
                    }
                }
                scope 13 {
                    debug residual => _31;
                    scope 14 {
                    }
                }
                scope 15 {
                    debug val => _34;
                    scope 16 {
                    }
                }
            }
            scope 8 {
                debug residual => _22;
                scope 9 {
                }
            }
            scope 10 {
                debug val => _25;
                scope 11 {
                }
            }
        }
        scope 3 {
            debug residual => _13;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _16;
            scope 6 {
            }
        }
    }

    bb0: {
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &(*_4);
        _6 = bytemuck::core::slice::<impl [AccountInfo<'_>]>::iter(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        _5 = &mut _6;
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &mut (*_5);
        _10 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _11) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_11);
        _9 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _10) -> [return: bb3, unwind: bb63];
    }

    bb3: {
        StorageDead(_10);
        _12 = discriminant(_9);
        switchInt(move _12) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_16);
        _16 = ((_9 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _8 = _16;
        StorageDead(_16);
        _110 = discriminant(_9);
        StorageDead(_9);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &mut (*_5);
        _19 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _20) -> [return: bb8, unwind continue];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_13);
        _13 = move ((_9 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_15);
        _15 = move _13;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _15) -> [return: bb7, unwind: bb73];
    }

    bb7: {
        StorageDead(_15);
        StorageDead(_13);
        _148 = discriminant(_9);
        StorageDead(_9);
        goto -> bb61;
    }

    bb8: {
        StorageDead(_20);
        _18 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _19) -> [return: bb9, unwind: bb63];
    }

    bb9: {
        StorageDead(_19);
        _21 = discriminant(_18);
        switchInt(move _21) -> [0: bb10, 1: bb11, otherwise: bb5];
    }

    bb10: {
        StorageLive(_25);
        _25 = ((_18 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _17 = _25;
        StorageDead(_25);
        _112 = discriminant(_18);
        StorageDead(_18);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &mut (*_5);
        _28 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _29) -> [return: bb13, unwind continue];
    }

    bb11: {
        StorageLive(_22);
        _22 = move ((_18 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_24);
        _24 = move _22;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _24) -> [return: bb12, unwind: bb72];
    }

    bb12: {
        StorageDead(_24);
        StorageDead(_22);
        _146 = discriminant(_18);
        StorageDead(_18);
        goto -> bb60;
    }

    bb13: {
        StorageDead(_29);
        _27 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _28) -> [return: bb14, unwind: bb63];
    }

    bb14: {
        StorageDead(_28);
        _30 = discriminant(_27);
        switchInt(move _30) -> [0: bb15, 1: bb16, otherwise: bb5];
    }

    bb15: {
        StorageLive(_34);
        _34 = ((_27 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _26 = _34;
        StorageDead(_34);
        _114 = discriminant(_27);
        StorageDead(_27);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = &mut (*_5);
        _37 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _38) -> [return: bb18, unwind continue];
    }

    bb16: {
        StorageLive(_31);
        _31 = move ((_27 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_33);
        _33 = move _31;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _33) -> [return: bb17, unwind: bb71];
    }

    bb17: {
        StorageDead(_33);
        StorageDead(_31);
        _144 = discriminant(_27);
        StorageDead(_27);
        goto -> bb59;
    }

    bb18: {
        StorageDead(_38);
        _36 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _37) -> [return: bb19, unwind: bb63];
    }

    bb19: {
        StorageDead(_37);
        _39 = discriminant(_36);
        switchInt(move _39) -> [0: bb20, 1: bb21, otherwise: bb5];
    }

    bb20: {
        StorageLive(_43);
        _43 = ((_36 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _35 = _43;
        StorageDead(_43);
        _116 = discriminant(_36);
        StorageDead(_36);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = &mut (*_5);
        _46 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _47) -> [return: bb23, unwind continue];
    }

    bb21: {
        StorageLive(_40);
        _40 = move ((_36 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_42);
        _42 = move _40;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _42) -> [return: bb22, unwind: bb70];
    }

    bb22: {
        StorageDead(_42);
        StorageDead(_40);
        _142 = discriminant(_36);
        StorageDead(_36);
        goto -> bb58;
    }

    bb23: {
        StorageDead(_47);
        _45 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _46) -> [return: bb24, unwind: bb63];
    }

    bb24: {
        StorageDead(_46);
        _48 = discriminant(_45);
        switchInt(move _48) -> [0: bb25, 1: bb26, otherwise: bb5];
    }

    bb25: {
        StorageLive(_52);
        _52 = ((_45 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _44 = _52;
        StorageDead(_52);
        _118 = discriminant(_45);
        StorageDead(_45);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        _56 = &mut (*_5);
        _55 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _56) -> [return: bb28, unwind continue];
    }

    bb26: {
        StorageLive(_49);
        _49 = move ((_45 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_51);
        _51 = move _49;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _51) -> [return: bb27, unwind: bb69];
    }

    bb27: {
        StorageDead(_51);
        StorageDead(_49);
        _140 = discriminant(_45);
        StorageDead(_45);
        goto -> bb57;
    }

    bb28: {
        StorageDead(_56);
        _54 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _55) -> [return: bb29, unwind: bb63];
    }

    bb29: {
        StorageDead(_55);
        _57 = discriminant(_54);
        switchInt(move _57) -> [0: bb30, 1: bb31, otherwise: bb5];
    }

    bb30: {
        StorageLive(_61);
        _61 = ((_54 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _53 = _61;
        StorageDead(_61);
        _120 = discriminant(_54);
        StorageDead(_54);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        _65 = &mut (*_5);
        _64 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _65) -> [return: bb33, unwind continue];
    }

    bb31: {
        StorageLive(_58);
        _58 = move ((_54 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_60);
        _60 = move _58;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _60) -> [return: bb32, unwind: bb68];
    }

    bb32: {
        StorageDead(_60);
        StorageDead(_58);
        _138 = discriminant(_54);
        StorageDead(_54);
        goto -> bb56;
    }

    bb33: {
        StorageDead(_65);
        _63 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _64) -> [return: bb34, unwind: bb63];
    }

    bb34: {
        StorageDead(_64);
        _66 = discriminant(_63);
        switchInt(move _66) -> [0: bb35, 1: bb36, otherwise: bb5];
    }

    bb35: {
        StorageLive(_70);
        _70 = ((_63 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _62 = _70;
        StorageDead(_70);
        _122 = discriminant(_63);
        StorageDead(_63);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        _74 = &mut (*_5);
        _73 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _74) -> [return: bb38, unwind continue];
    }

    bb36: {
        StorageLive(_67);
        _67 = move ((_63 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_69);
        _69 = move _67;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _69) -> [return: bb37, unwind: bb67];
    }

    bb37: {
        StorageDead(_69);
        StorageDead(_67);
        _136 = discriminant(_63);
        StorageDead(_63);
        goto -> bb55;
    }

    bb38: {
        StorageDead(_74);
        _72 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _73) -> [return: bb39, unwind: bb63];
    }

    bb39: {
        StorageDead(_73);
        _75 = discriminant(_72);
        switchInt(move _75) -> [0: bb40, 1: bb41, otherwise: bb5];
    }

    bb40: {
        StorageLive(_79);
        _79 = ((_72 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _71 = _79;
        StorageDead(_79);
        _124 = discriminant(_72);
        StorageDead(_72);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        _83 = &mut (*_5);
        _82 = next_account_info::<'_, '_, std::slice::Iter<'_, AccountInfo<'_>>>(move _83) -> [return: bb43, unwind continue];
    }

    bb41: {
        StorageLive(_76);
        _76 = move ((_72 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_78);
        _78 = move _76;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _78) -> [return: bb42, unwind: bb66];
    }

    bb42: {
        StorageDead(_78);
        StorageDead(_76);
        _134 = discriminant(_72);
        StorageDead(_72);
        goto -> bb54;
    }

    bb43: {
        StorageDead(_83);
        _81 = <Result<&AccountInfo<'_>, ProgramError> as Try>::branch(move _82) -> [return: bb44, unwind: bb63];
    }

    bb44: {
        StorageDead(_82);
        _84 = discriminant(_81);
        switchInt(move _84) -> [0: bb45, 1: bb46, otherwise: bb5];
    }

    bb45: {
        StorageLive(_88);
        _88 = ((_81 as Continue).0: &solana_program::account_info::AccountInfo<'_>);
        _80 = _88;
        StorageDead(_88);
        _126 = discriminant(_81);
        StorageDead(_81);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        _92 = &(*_1);
        StorageLive(_93);
        _93 = _2;
        StorageLive(_94);
        _94 = _3;
        StorageLive(_95);
        _95 = &(*_8);
        StorageLive(_96);
        _96 = &(*_17);
        StorageLive(_97);
        _97 = &(*_26);
        StorageLive(_98);
        _98 = &(*_35);
        StorageLive(_99);
        _99 = &(*_44);
        StorageLive(_100);
        _100 = &(*_53);
        StorageLive(_101);
        _101 = &(*_62);
        StorageLive(_102);
        _102 = &(*_71);
        StorageLive(_103);
        _103 = &(*_80);
        _91 = _flash_repay_reserve_liquidity(move _92, move _93, move _94, move _95, move _96, move _97, move _98, move _99, move _100, move _101, move _102, move _103) -> [return: bb48, unwind continue];
    }

    bb46: {
        StorageLive(_85);
        _85 = move ((_81 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_87);
        _87 = move _85;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _87) -> [return: bb47, unwind: bb65];
    }

    bb47: {
        StorageDead(_87);
        StorageDead(_85);
        _132 = discriminant(_81);
        StorageDead(_81);
        goto -> bb53;
    }

    bb48: {
        StorageDead(_103);
        StorageDead(_102);
        StorageDead(_101);
        StorageDead(_100);
        StorageDead(_99);
        StorageDead(_98);
        StorageDead(_97);
        StorageDead(_96);
        StorageDead(_95);
        StorageDead(_94);
        StorageDead(_93);
        StorageDead(_92);
        _90 = <Result<(), ProgramError> as Try>::branch(move _91) -> [return: bb49, unwind: bb63];
    }

    bb49: {
        StorageDead(_91);
        _104 = discriminant(_90);
        switchInt(move _104) -> [0: bb50, 1: bb51, otherwise: bb5];
    }

    bb50: {
        StorageLive(_108);
        _108 = ((_90 as Continue).0: ());
        _89 = _108;
        StorageDead(_108);
        _128 = discriminant(_90);
        StorageDead(_90);
        StorageDead(_89);
        StorageLive(_109);
        _109 = ();
        _0 = Result::<(), ProgramError>::Ok(move _109);
        StorageDead(_109);
        StorageDead(_80);
        StorageDead(_71);
        StorageDead(_62);
        StorageDead(_53);
        StorageDead(_44);
        StorageDead(_35);
        StorageDead(_26);
        StorageDead(_17);
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_5);
        goto -> bb62;
    }

    bb51: {
        StorageLive(_105);
        _105 = move ((_90 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_107);
        _107 = move _105;
        _0 = <Result<(), ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _107) -> [return: bb52, unwind: bb64];
    }

    bb52: {
        StorageDead(_107);
        StorageDead(_105);
        _130 = discriminant(_90);
        StorageDead(_90);
        StorageDead(_89);
        goto -> bb53;
    }

    bb53: {
        StorageDead(_80);
        goto -> bb54;
    }

    bb54: {
        StorageDead(_71);
        goto -> bb55;
    }

    bb55: {
        StorageDead(_62);
        goto -> bb56;
    }

    bb56: {
        StorageDead(_53);
        goto -> bb57;
    }

    bb57: {
        StorageDead(_44);
        goto -> bb58;
    }

    bb58: {
        StorageDead(_35);
        goto -> bb59;
    }

    bb59: {
        StorageDead(_26);
        goto -> bb60;
    }

    bb60: {
        StorageDead(_17);
        goto -> bb61;
    }

    bb61: {
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_5);
        goto -> bb62;
    }

    bb62: {
        return;
    }

    bb63 (cleanup): {
        resume;
    }

    bb64 (cleanup): {
        _150 = discriminant(_90);
        goto -> bb63;
    }

    bb65 (cleanup): {
        _151 = discriminant(_81);
        goto -> bb63;
    }

    bb66 (cleanup): {
        _152 = discriminant(_72);
        goto -> bb63;
    }

    bb67 (cleanup): {
        _153 = discriminant(_63);
        goto -> bb63;
    }

    bb68 (cleanup): {
        _154 = discriminant(_54);
        goto -> bb63;
    }

    bb69 (cleanup): {
        _155 = discriminant(_45);
        goto -> bb63;
    }

    bb70 (cleanup): {
        _156 = discriminant(_36);
        goto -> bb63;
    }

    bb71 (cleanup): {
        _157 = discriminant(_27);
        goto -> bb63;
    }

    bb72 (cleanup): {
        _158 = discriminant(_18);
        goto -> bb63;
    }

    bb73 (cleanup): {
        _159 = discriminant(_9);
        goto -> bb63;
    }
}
