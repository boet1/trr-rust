digraph Mir_0_88 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn _refresh_reserve(_1: &amp;ReErased solana_program::pubkey::Pubkey, _2: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;, _3: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;, _4: std::option::Option&lt;&amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;&gt;, _5: &amp;ReErased solana_program::clock::Clock, _6: std::option::Option&lt;&amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let mut _7: std::boxed::Box&lt;solend_sdk::state::Reserve, std::alloc::Global&gt;;<br align="left"/>let mut _8: solend_sdk::state::Reserve;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, solend_sdk::state::Reserve&gt;;<br align="left"/>let mut _10: std::result::Result&lt;solend_sdk::state::Reserve, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _11: &amp;ReErased [u8];<br align="left"/>let _12: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _13: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _14: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _15: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _16: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _17: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _18: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _23: solend_sdk::state::Reserve;<br align="left"/>let _24: ();<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _27: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _28: !;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: solana_program::program_error::ProgramError;<br align="left"/>let mut _33: solend_sdk::error::LendingError;<br align="left"/>let _34: ();<br align="left"/>let mut _35: bool;<br align="left"/>let mut _36: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _37: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _38: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _39: !;<br align="left"/>let _40: ();<br align="left"/>let mut _41: &amp;ReErased str;<br align="left"/>let _42: &amp;ReErased str;<br align="left"/>let mut _43: solana_program::program_error::ProgramError;<br align="left"/>let mut _44: solend_sdk::error::LendingError;<br align="left"/>let _45: ();<br align="left"/>let mut _46: bool;<br align="left"/>let mut _47: &amp;ReErased std::option::Option&lt;&amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _48: bool;<br align="left"/>let mut _49: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _50: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _51: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _52: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _53: std::option::Option&lt;&amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let _55: ();<br align="left"/>let mut _56: &amp;ReErased str;<br align="left"/>let _57: &amp;ReErased str;<br align="left"/>let mut _58: solana_program::program_error::ProgramError;<br align="left"/>let mut _59: solend_sdk::error::LendingError;<br align="left"/>let _60: solend_sdk::math::Decimal;<br align="left"/>let _61: std::option::Option&lt;solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _62: (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;);<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;)&gt;;<br align="left"/>let mut _64: std::result::Result&lt;(solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _65: std::option::Option&lt;&amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _66: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased solana_program::clock::Clock;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _72: (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;);<br align="left"/>let mut _73: solend_sdk::math::Decimal;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _75: std::result::Result&lt;solend_sdk::math::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _76: solend_sdk::math::Decimal;<br align="left"/>let mut _77: solend_sdk::math::Decimal;<br align="left"/>let mut _78: &amp;ReErased solend_sdk::state::Reserve;<br align="left"/>let mut _79: isize;<br align="left"/>let _80: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _81: !;<br align="left"/>let mut _82: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _83: solend_sdk::math::Decimal;<br align="left"/>let _84: ();<br align="left"/>let mut _85: isize;<br align="left"/>let _86: solend_sdk::math::Decimal;<br align="left"/>let mut _87: solend_sdk::math::Decimal;<br align="left"/>let mut _88: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _89: std::result::Result&lt;solend_sdk::math::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _90: solend_sdk::math::Decimal;<br align="left"/>let mut _91: solend_sdk::math::Decimal;<br align="left"/>let mut _92: &amp;ReErased solend_sdk::state::Reserve;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _97: solend_sdk::math::Decimal;<br align="left"/>let mut _98: std::option::Option&lt;solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: solana_program::pubkey::Pubkey;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _103: ();<br align="left"/>let mut _104: bool;<br align="left"/>let mut _105: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _106: &amp;ReErased &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _107: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _108: !;<br align="left"/>let _109: ();<br align="left"/>let mut _110: &amp;ReErased str;<br align="left"/>let _111: &amp;ReErased str;<br align="left"/>let mut _112: solana_program::program_error::ProgramError;<br align="left"/>let mut _113: solend_sdk::error::LendingError;<br align="left"/>let mut _114: solend_sdk::math::Decimal;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _116: std::result::Result&lt;solend_sdk::math::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _117: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased solana_program::clock::Clock;<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _123: solend_sdk::math::Decimal;<br align="left"/>let mut _124: !;<br align="left"/>let _125: ();<br align="left"/>let mut _126: &amp;ReErased str;<br align="left"/>let _127: &amp;ReErased str;<br align="left"/>let mut _128: solana_program::program_error::ProgramError;<br align="left"/>let mut _129: solend_sdk::error::LendingError;<br align="left"/>let _130: ();<br align="left"/>let mut _131: bool;<br align="left"/>let mut _132: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _133: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _134: solana_program::pubkey::Pubkey;<br align="left"/>let mut _135: solend_sdk::math::Decimal;<br align="left"/>let _136: ();<br align="left"/>let mut _137: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _138: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _139: solend_sdk::state::Reserve;<br align="left"/>let mut _140: &amp;ReErased mut [u8];<br align="left"/>let mut _141: &amp;ReErased mut &amp;ReErased mut [u8];<br align="left"/>let mut _142: &amp;ReErased mut std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _143: &amp;ReErased mut std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _144: std::cell::RefMut&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _145: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _146: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _147: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _152: ();<br align="left"/>let mut _153: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _154: &amp;ReErased solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _155: &amp;ReErased solana_program::clock::Clock;<br align="left"/>let mut _156: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _157: &amp;ReErased mut [u8];<br align="left"/>let mut _158: &amp;ReErased mut [u8];<br align="left"/>let mut _159: bool;<br align="left"/>let mut _160: bool;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: *const solend_sdk::state::Reserve;<br align="left"/>let mut _192: *const solend_sdk::state::Reserve;<br align="left"/>let mut _193: *const solend_sdk::state::Reserve;<br align="left"/>let mut _194: *const solend_sdk::state::Reserve;<br align="left"/>let mut _195: *const solend_sdk::state::Reserve;<br align="left"/>let mut _196: *const solend_sdk::state::Reserve;<br align="left"/>let mut _197: *const solend_sdk::state::Reserve;<br align="left"/>let mut _198: *const solend_sdk::state::Reserve;<br align="left"/>let mut _199: *const solend_sdk::state::Reserve;<br align="left"/>let mut _200: *const solend_sdk::state::Reserve;<br align="left"/>let mut _201: *const solend_sdk::state::Reserve;<br align="left"/>let mut _202: *const solend_sdk::state::Reserve;<br align="left"/>let mut _203: *const solend_sdk::state::Reserve;<br align="left"/>let mut _204: *const solend_sdk::state::Reserve;<br align="left"/>let mut _205: *const ();<br align="left"/>let mut _206: usize;<br align="left"/>let mut _207: usize;<br align="left"/>let mut _208: usize;<br align="left"/>let mut _209: usize;<br align="left"/>let mut _210: bool;<br align="left"/>let mut _211: *const ();<br align="left"/>let mut _212: usize;<br align="left"/>let mut _213: usize;<br align="left"/>let mut _214: usize;<br align="left"/>let mut _215: usize;<br align="left"/>let mut _216: bool;<br align="left"/>let mut _217: *const ();<br align="left"/>let mut _218: usize;<br align="left"/>let mut _219: usize;<br align="left"/>let mut _220: usize;<br align="left"/>let mut _221: usize;<br align="left"/>let mut _222: bool;<br align="left"/>let mut _223: *const ();<br align="left"/>let mut _224: usize;<br align="left"/>let mut _225: usize;<br align="left"/>let mut _226: usize;<br align="left"/>let mut _227: usize;<br align="left"/>let mut _228: bool;<br align="left"/>let mut _229: *const ();<br align="left"/>let mut _230: usize;<br align="left"/>let mut _231: usize;<br align="left"/>let mut _232: usize;<br align="left"/>let mut _233: usize;<br align="left"/>let mut _234: bool;<br align="left"/>let mut _235: *const ();<br align="left"/>let mut _236: usize;<br align="left"/>let mut _237: usize;<br align="left"/>let mut _238: usize;<br align="left"/>let mut _239: usize;<br align="left"/>let mut _240: bool;<br align="left"/>let mut _241: *const ();<br align="left"/>let mut _242: usize;<br align="left"/>let mut _243: usize;<br align="left"/>let mut _244: usize;<br align="left"/>let mut _245: usize;<br align="left"/>let mut _246: bool;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug reserve_info =&gt; _2;<br align="left"/>debug pyth_price_info =&gt; _3;<br align="left"/>debug switchboard_feed_info =&gt; _4;<br align="left"/>debug clock =&gt; _5;<br align="left"/>debug extra_oracle_account_info =&gt; _6;<br align="left"/>debug reserve =&gt; _7;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug market_price =&gt; _60;<br align="left"/>debug smoothed_market_price =&gt; _61;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug residual =&gt; _80;<br align="left"/>debug val =&gt; _83;<br align="left"/>debug smoothed_market_price =&gt; _86;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug extra_oracle_pubkey =&gt; _100;<br align="left"/>debug extra_oracle_account_info =&gt; _102;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>>;
    bb0__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_160 = const false<br/>_159 = const false<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;((*_2).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_17 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _18)</td></tr></table>>];
    bb1__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_16 = &amp;(*_17)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_15 = RefCell::&lt;&amp;mut [u8]&gt;::borrow(move _16)</td></tr></table>>];
    bb2__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _13)</td></tr></table>>];
    bb3__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_157 = deref_copy (*_12)<br/>_11 = &amp;(*_157)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_10 = &lt;Reserve as Pack&gt;::unpack(move _11)</td></tr></table>>];
    bb4__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;Result&lt;Reserve, ProgramError&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb5__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_159 = const true<br/>_160 = const true<br/>StorageDead(_10)<br/>_19 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb6__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_9 as Continue).0: solend_sdk::state::Reserve)<br/>_8 = move _23<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_7 = Box::&lt;Reserve&gt;::new(move _8)</td></tr></table>>];
    bb7__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb9__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_8)<br/>_183 = discriminant(_9)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb10__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_161 = discriminant(_9)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb11__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>_159 = const false<br/>_160 = const false<br/>StorageDead(_9)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;((*_2).3: &amp;solana_program::pubkey::Pubkey)<br/>StorageLive(_27)<br/>_27 = &amp;_1<br/></td></tr><tr><td align="left">_25 = &lt;&amp;Pubkey as PartialEq&gt;::ne(move _26, move _27)</td></tr></table>>];
    bb12__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb13__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = const &quot;Reserve provided is not owned by the lending program&quot;<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb14__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = solend_sdk::error::LendingError::InvalidAccountOwner<br/></td></tr><tr><td align="left">_32 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _33)</td></tr></table>>];
    bb15__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _32)<br/>StorageDead(_32)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>_24 = const ()<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_191 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_37 = &amp;(((*_191).3: solend_sdk::state::ReserveLiquidity).3: solana_program::pubkey::Pubkey)<br/>_36 = &amp;_37<br/>StorageLive(_38)<br/>_38 = &amp;((*_3).0: &amp;solana_program::pubkey::Pubkey)<br/></td></tr><tr><td align="left">_35 = &lt;&amp;Pubkey as PartialEq&gt;::ne(move _36, move _38)</td></tr></table>>];
    bb17__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb18__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = const &quot;Reserve liquidity pyth oracle does not match the reserve liquidity pyth oracle provided&quot;<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = solana_program::log::sol_log(move _41)</td></tr></table>>];
    bb19__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = InvalidAccountInput<br/></td></tr><tr><td align="left">_43 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _44)</td></tr></table>>];
    bb20__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _43)<br/>StorageDead(_43)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>_34 = const ()<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_4<br/></td></tr><tr><td align="left">_46 = Option::&lt;&amp;AccountInfo&lt;'_&gt;&gt;::is_some(move _47)</td></tr></table>>];
    bb22__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb23__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_192 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_50 = &amp;(((*_192).3: solend_sdk::state::ReserveLiquidity).4: solana_program::pubkey::Pubkey)<br/>_49 = &amp;_50<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _4<br/></td></tr><tr><td align="left">_52 = Option::&lt;&amp;AccountInfo&lt;'_&gt;&gt;::unwrap(move _53)</td></tr></table>>];
    bb24__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = &amp;((*_52).0: &amp;solana_program::pubkey::Pubkey)<br/></td></tr><tr><td align="left">_48 = &lt;&amp;Pubkey as PartialEq&gt;::ne(move _49, move _51)</td></tr></table>>];
    bb25__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb26__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = const &quot;Reserve liquidity switchboard oracle does not match the reserve liquidity switchboard oracle provided&quot;<br/>_56 = &amp;(*_57)<br/></td></tr><tr><td align="left">_55 = solana_program::log::sol_log(move _56)</td></tr></table>>];
    bb27__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = InvalidOracleConfig<br/></td></tr><tr><td align="left">_58 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _59)</td></tr></table>>];
    bb28__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _58)<br/>StorageDead(_58)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_45 = const ()<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _4<br/>StorageLive(_66)<br/>_66 = &amp;(*_3)<br/>StorageLive(_67)<br/>_67 = &amp;(*_5)<br/></td></tr><tr><td align="left">_64 = get_price(move _65, move _66, move _67)</td></tr></table>>];
    bb32__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;Result&lt;(Decimal, Option&lt;Decimal&gt;), ProgramError&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb33__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_68 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb34__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_63 as Continue).0: (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;))<br/>_62 = _72<br/>StorageDead(_72)<br/>StorageLive(_60)<br/>_60 = (_62.0: solend_sdk::math::Decimal)<br/>StorageLive(_61)<br/>_61 = (_62.1: std::option::Option&lt;solend_sdk::math::Decimal&gt;)<br/>_163 = discriminant(_63)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = _60<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_193 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_78 = &amp;(*_193)<br/></td></tr><tr><td align="left">_77 = Reserve::price_scale(move _78)</td></tr></table>>];
    bb35__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = move ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_71)<br/>_71 = move _69<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb36__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>_181 = discriminant(_63)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">_75 = &lt;Decimal as TryMul&lt;Decimal&gt;&gt;::try_mul(move _76, move _77)</td></tr></table>>];
    bb38__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;Result&lt;Decimal, ProgramError&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb39__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_79 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _79)</td></tr></table>>];
    bb40__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_74 as Continue).0: solend_sdk::math::Decimal)<br/>_73 = _83<br/>StorageDead(_83)<br/>_194 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_241 = _194 as *const () (PtrToPtr)<br/>_242 = _241 as usize (Transmute)<br/>_243 = AlignOf(solend_sdk::state::Reserve)<br/>_244 = Sub(_243, const 1_usize)<br/>_245 = BitAnd(_242, _244)<br/>_246 = Eq(_245, const 0_usize)<br/></td></tr><tr><td align="left">assert(_246, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _243, _242)</td></tr></table>>];
    bb41__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_82)<br/>_82 = move _80<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _82)</td></tr></table>>];
    bb42__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_73)<br/>_179 = discriminant(_74)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_61 as Some).0: solend_sdk::math::Decimal)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = _86<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_195 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_92 = &amp;(*_195)<br/></td></tr><tr><td align="left">_91 = Reserve::price_scale(move _92)</td></tr></table>>];
    bb44__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_89 = &lt;Decimal as TryMul&lt;Decimal&gt;&gt;::try_mul(move _90, move _91)</td></tr></table>>];
    bb45__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = &lt;Result&lt;Decimal, ProgramError&gt; as Try&gt;::branch(move _89)</td></tr></table>>];
    bb46__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_93 = discriminant(_88)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb47__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_88 as Continue).0: solend_sdk::math::Decimal)<br/>_87 = _97<br/>StorageDead(_97)<br/>_196 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_235 = _196 as *const () (PtrToPtr)<br/>_236 = _235 as usize (Transmute)<br/>_237 = AlignOf(solend_sdk::state::Reserve)<br/>_238 = Sub(_237, const 1_usize)<br/>_239 = BitAnd(_236, _238)<br/>_240 = Eq(_239, const 0_usize)<br/></td></tr><tr><td align="left">assert(_240, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _237, _236)</td></tr></table>>];
    bb48__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = move ((_88 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_96)<br/>_96 = move _94<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb49__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_87)<br/>_177 = discriminant(_88)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_84 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageLive(_98)<br/>_197 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_198 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_99 = discriminant((((*_198).5: solend_sdk::state::ReserveConfig).20: std::option::Option&lt;solana_program::pubkey::Pubkey&gt;))<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb52__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_199 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_229 = _199 as *const () (PtrToPtr)<br/>_230 = _229 as usize (Transmute)<br/>_231 = AlignOf(solend_sdk::state::Reserve)<br/>_232 = Sub(_231, const 1_usize)<br/>_233 = BitAnd(_230, _232)<br/>_234 = Eq(_233, const 0_usize)<br/></td></tr><tr><td align="left">assert(_234, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _231, _230)</td></tr></table>>];
    bb53__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_98 = Option::&lt;Decimal&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = const &quot;Reserve extra oracle account info missing&quot;<br/>_126 = &amp;(*_127)<br/></td></tr><tr><td align="left">_125 = solana_program::log::sol_log(move _126)</td></tr></table>>];
    bb55__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_6 as Some).0: &amp;solana_program::account_info::AccountInfo&lt;'_&gt;)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;((*_102).0: &amp;solana_program::pubkey::Pubkey)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_100<br/>_106 = &amp;_107<br/></td></tr><tr><td align="left">_104 = &lt;&amp;Pubkey as PartialEq&gt;::ne(move _105, move _106)</td></tr></table>>];
    bb56__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb57__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = const &quot;Reserve extra oracle does not match the reserve extra oracle provided&quot;<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = solana_program::log::sol_log(move _110)</td></tr></table>>];
    bb58__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = InvalidAccountInput<br/></td></tr><tr><td align="left">_112 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _113)</td></tr></table>>];
    bb59__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _112)<br/>StorageDead(_112)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>_103 = const ()<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;(*_102)<br/>StorageLive(_118)<br/>_118 = &amp;(*_5)<br/></td></tr><tr><td align="left">_116 = get_single_price_unchecked(move _117, move _118)</td></tr></table>>];
    bb61__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;Result&lt;Decimal, ProgramError&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb62__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_119 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb63__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_115 as Continue).0: solend_sdk::math::Decimal)<br/>_114 = _123<br/>StorageDead(_123)<br/>_98 = Option::&lt;Decimal&gt;::Some(move _114)<br/>StorageDead(_114)<br/>_169 = discriminant(_115)<br/>StorageDead(_115)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = move ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_122)<br/>_122 = move _120<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb65__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_114)<br/>_175 = discriminant(_115)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = InvalidAccountInput<br/></td></tr><tr><td align="left">_128 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _129)</td></tr></table>>];
    bb67__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _128)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_200 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_223 = _200 as *const () (PtrToPtr)<br/>_224 = _223 as usize (Transmute)<br/>_225 = AlignOf(solend_sdk::state::Reserve)<br/>_226 = Sub(_225, const 1_usize)<br/>_227 = BitAnd(_224, _226)<br/>_228 = Eq(_227, const 0_usize)<br/></td></tr><tr><td align="left">assert(_228, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _225, _224)</td></tr></table>>];
    bb69__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb70__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_135)<br/>_202 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_217 = _202 as *const () (PtrToPtr)<br/>_218 = _217 as usize (Transmute)<br/>_219 = AlignOf(solend_sdk::state::Reserve)<br/>_220 = Sub(_219, const 1_usize)<br/>_221 = BitAnd(_218, _220)<br/>_222 = Eq(_221, const 0_usize)<br/></td></tr><tr><td align="left">assert(_222, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _219, _218)</td></tr></table>>];
    bb71__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>_130 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_204 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_205 = _204 as *const () (PtrToPtr)<br/>_206 = _205 as usize (Transmute)<br/>_207 = AlignOf(solend_sdk::state::Reserve)<br/>_208 = Sub(_207, const 1_usize)<br/>_209 = BitAnd(_206, _208)<br/>_210 = Eq(_209, const 0_usize)<br/></td></tr><tr><td align="left">assert(_210, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _207, _206)</td></tr></table>>];
    bb73__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_145 = &amp;(*_146)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_144 = RefCell::&lt;&amp;mut [u8]&gt;::borrow_mut(move _145)</td></tr></table>>];
    bb74__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_143 = &amp;mut _144<br/>_142 = &amp;mut (*_143)<br/></td></tr><tr><td align="left">_141 = &lt;RefMut&lt;'_, &amp;mut [u8]&gt; as DerefMut&gt;::deref_mut(move _142)</td></tr></table>>];
    bb75__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_158 = deref_copy (*_141)<br/>_140 = &amp;mut (*_158)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_138 = &lt;Reserve as Pack&gt;::pack(move _139, move _140)</td></tr></table>>];
    bb76__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _138)</td></tr></table>>];
    bb77__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_148 = discriminant(_137)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb78__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_137 as Continue).0: ())<br/>_136 = _152<br/>StorageDead(_152)<br/>_171 = discriminant(_137)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb79__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = move ((_137 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_151)<br/>_151 = move _149<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb80__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>_173 = discriminant(_137)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb81__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageLive(_153)<br/>_153 = &amp;(*_1)<br/>StorageLive(_154)<br/>_154 = &amp;(*_2)<br/>StorageLive(_155)<br/>_155 = &amp;(*_5)<br/></td></tr><tr><td align="left">_0 = _refresh_reserve_interest(move _153, move _154, move _155)</td></tr></table>>];
    bb82__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb83__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb89__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>_159 = const false<br/>_160 = const false<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left">return</td></tr></table>>];
    bb92__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb93__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb94__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb95__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb96__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left" balign="left">_185 = discriminant(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left" balign="left">_186 = discriminant(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left" balign="left">_187 = discriminant(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left" balign="left">_188 = discriminant(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left" balign="left">_189 = discriminant(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left" balign="left">_190 = discriminant(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_139 = move (*_204)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;((*_2).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_146 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _147)</td></tr></table>>];
    bb103__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">(((*_203).3: solend_sdk::state::ReserveLiquidity).10: solend_sdk::math::Decimal) = move _135<br/>StorageDead(_135)<br/>_130 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_135 = (((*_202).3: solend_sdk::state::ReserveLiquidity).9: solend_sdk::math::Decimal)<br/>_203 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_211 = _203 as *const () (PtrToPtr)<br/>_212 = _211 as usize (Transmute)<br/>_213 = AlignOf(solend_sdk::state::Reserve)<br/>_214 = Sub(_213, const 1_usize)<br/>_215 = BitAnd(_212, _214)<br/>_216 = Eq(_215, const 0_usize)<br/></td></tr><tr><td align="left">assert(_216, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _213, _212)</td></tr></table>>];
    bb105__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">(((*_200).3: solend_sdk::state::ReserveLiquidity).11: std::option::Option&lt;solend_sdk::math::Decimal&gt;) = move _98<br/>StorageDead(_98)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_201 = (((_7.0: std::ptr::Unique&lt;solend_sdk::state::Reserve&gt;).0: std::ptr::NonNull&lt;solend_sdk::state::Reserve&gt;).0: *const solend_sdk::state::Reserve)<br/>_132 = &amp;(((*_201).3: solend_sdk::state::ReserveLiquidity).3: solana_program::pubkey::Pubkey)<br/>StorageLive(_133)<br/>_156 = const _<br/>_133 = &amp;(*_156)<br/></td></tr><tr><td align="left">_131 = &lt;Pubkey as PartialEq&gt;::eq(move _132, move _133)</td></tr></table>>];
    bb106__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_100 = (((((*_199).5: solend_sdk::state::ReserveConfig).20: std::option::Option&lt;solana_program::pubkey::Pubkey&gt;) as Some).0: solana_program::pubkey::Pubkey)<br/>_101 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb107__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">(((*_196).3: solend_sdk::state::ReserveLiquidity).10: solend_sdk::math::Decimal) = move _87<br/>StorageDead(_87)<br/>_167 = discriminant(_88)<br/>StorageDead(_88)<br/>_84 = const ()<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">(((*_194).3: solend_sdk::state::ReserveLiquidity).9: solend_sdk::math::Decimal) = move _73<br/>StorageDead(_73)<br/>_165 = discriminant(_74)<br/>StorageDead(_74)<br/>StorageLive(_84)<br/>_85 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb0__0_88 -> bb1__0_88 [label="return"];
    bb1__0_88 -> bb2__0_88 [label="return"];
    bb2__0_88 -> bb3__0_88 [label="return"];
    bb2__0_88 -> bb94__0_88 [label="unwind"];
    bb3__0_88 -> bb4__0_88 [label="return"];
    bb3__0_88 -> bb94__0_88 [label="unwind"];
    bb4__0_88 -> bb5__0_88 [label="return"];
    bb4__0_88 -> bb94__0_88 [label="unwind"];
    bb5__0_88 -> bb6__0_88 [label="0"];
    bb5__0_88 -> bb8__0_88 [label="1"];
    bb5__0_88 -> bb7__0_88 [label="otherwise"];
    bb6__0_88 -> bb10__0_88 [label="return"];
    bb6__0_88 -> bb101__0_88 [label="unwind"];
    bb8__0_88 -> bb9__0_88 [label="return"];
    bb8__0_88 -> bb101__0_88 [label="unwind"];
    bb9__0_88 -> bb89__0_88 [label="return"];
    bb9__0_88 -> bb95__0_88 [label="unwind"];
    bb10__0_88 -> bb11__0_88 [label="return"];
    bb10__0_88 -> bb93__0_88 [label="unwind"];
    bb11__0_88 -> bb12__0_88 [label="return"];
    bb11__0_88 -> bb93__0_88 [label="unwind"];
    bb12__0_88 -> bb16__0_88 [label="0"];
    bb12__0_88 -> bb13__0_88 [label="otherwise"];
    bb13__0_88 -> bb14__0_88 [label="return"];
    bb13__0_88 -> bb93__0_88 [label="unwind"];
    bb14__0_88 -> bb15__0_88 [label="return"];
    bb14__0_88 -> bb93__0_88 [label="unwind"];
    bb15__0_88 -> bb88__0_88 [label=""];
    bb16__0_88 -> bb17__0_88 [label="return"];
    bb16__0_88 -> bb93__0_88 [label="unwind"];
    bb17__0_88 -> bb21__0_88 [label="0"];
    bb17__0_88 -> bb18__0_88 [label="otherwise"];
    bb18__0_88 -> bb19__0_88 [label="return"];
    bb18__0_88 -> bb93__0_88 [label="unwind"];
    bb19__0_88 -> bb20__0_88 [label="return"];
    bb19__0_88 -> bb93__0_88 [label="unwind"];
    bb20__0_88 -> bb88__0_88 [label=""];
    bb21__0_88 -> bb22__0_88 [label="return"];
    bb21__0_88 -> bb93__0_88 [label="unwind"];
    bb22__0_88 -> bb30__0_88 [label="0"];
    bb22__0_88 -> bb23__0_88 [label="otherwise"];
    bb23__0_88 -> bb24__0_88 [label="return"];
    bb23__0_88 -> bb93__0_88 [label="unwind"];
    bb24__0_88 -> bb25__0_88 [label="return"];
    bb24__0_88 -> bb93__0_88 [label="unwind"];
    bb25__0_88 -> bb29__0_88 [label="0"];
    bb25__0_88 -> bb26__0_88 [label="otherwise"];
    bb26__0_88 -> bb27__0_88 [label="return"];
    bb26__0_88 -> bb93__0_88 [label="unwind"];
    bb27__0_88 -> bb28__0_88 [label="return"];
    bb27__0_88 -> bb93__0_88 [label="unwind"];
    bb28__0_88 -> bb88__0_88 [label=""];
    bb29__0_88 -> bb31__0_88 [label=""];
    bb30__0_88 -> bb31__0_88 [label=""];
    bb31__0_88 -> bb32__0_88 [label="return"];
    bb31__0_88 -> bb93__0_88 [label="unwind"];
    bb32__0_88 -> bb33__0_88 [label="return"];
    bb32__0_88 -> bb93__0_88 [label="unwind"];
    bb33__0_88 -> bb34__0_88 [label="0"];
    bb33__0_88 -> bb35__0_88 [label="1"];
    bb33__0_88 -> bb7__0_88 [label="otherwise"];
    bb34__0_88 -> bb37__0_88 [label="return"];
    bb34__0_88 -> bb93__0_88 [label="unwind"];
    bb35__0_88 -> bb36__0_88 [label="return"];
    bb35__0_88 -> bb100__0_88 [label="unwind"];
    bb36__0_88 -> bb88__0_88 [label=""];
    bb37__0_88 -> bb38__0_88 [label="return"];
    bb37__0_88 -> bb93__0_88 [label="unwind"];
    bb38__0_88 -> bb39__0_88 [label="return"];
    bb38__0_88 -> bb93__0_88 [label="unwind"];
    bb39__0_88 -> bb40__0_88 [label="0"];
    bb39__0_88 -> bb41__0_88 [label="1"];
    bb39__0_88 -> bb7__0_88 [label="otherwise"];
    bb40__0_88 -> bb108__0_88 [label="success"];
    bb41__0_88 -> bb42__0_88 [label="return"];
    bb41__0_88 -> bb99__0_88 [label="unwind"];
    bb42__0_88 -> bb87__0_88 [label=""];
    bb43__0_88 -> bb44__0_88 [label="return"];
    bb43__0_88 -> bb93__0_88 [label="unwind"];
    bb44__0_88 -> bb45__0_88 [label="return"];
    bb44__0_88 -> bb93__0_88 [label="unwind"];
    bb45__0_88 -> bb46__0_88 [label="return"];
    bb45__0_88 -> bb93__0_88 [label="unwind"];
    bb46__0_88 -> bb47__0_88 [label="0"];
    bb46__0_88 -> bb48__0_88 [label="1"];
    bb46__0_88 -> bb7__0_88 [label="otherwise"];
    bb47__0_88 -> bb107__0_88 [label="success"];
    bb48__0_88 -> bb49__0_88 [label="return"];
    bb48__0_88 -> bb98__0_88 [label="unwind"];
    bb49__0_88 -> bb87__0_88 [label=""];
    bb50__0_88 -> bb51__0_88 [label=""];
    bb51__0_88 -> bb53__0_88 [label="0"];
    bb51__0_88 -> bb52__0_88 [label="1"];
    bb51__0_88 -> bb7__0_88 [label="otherwise"];
    bb52__0_88 -> bb106__0_88 [label="success"];
    bb53__0_88 -> bb68__0_88 [label=""];
    bb54__0_88 -> bb66__0_88 [label="return"];
    bb54__0_88 -> bb93__0_88 [label="unwind"];
    bb55__0_88 -> bb56__0_88 [label="return"];
    bb55__0_88 -> bb93__0_88 [label="unwind"];
    bb56__0_88 -> bb60__0_88 [label="0"];
    bb56__0_88 -> bb57__0_88 [label="otherwise"];
    bb57__0_88 -> bb58__0_88 [label="return"];
    bb57__0_88 -> bb93__0_88 [label="unwind"];
    bb58__0_88 -> bb59__0_88 [label="return"];
    bb58__0_88 -> bb93__0_88 [label="unwind"];
    bb59__0_88 -> bb85__0_88 [label=""];
    bb60__0_88 -> bb61__0_88 [label="return"];
    bb60__0_88 -> bb93__0_88 [label="unwind"];
    bb61__0_88 -> bb62__0_88 [label="return"];
    bb61__0_88 -> bb93__0_88 [label="unwind"];
    bb62__0_88 -> bb63__0_88 [label="0"];
    bb62__0_88 -> bb64__0_88 [label="1"];
    bb62__0_88 -> bb7__0_88 [label="otherwise"];
    bb63__0_88 -> bb68__0_88 [label=""];
    bb64__0_88 -> bb65__0_88 [label="return"];
    bb64__0_88 -> bb97__0_88 [label="unwind"];
    bb65__0_88 -> bb85__0_88 [label=""];
    bb66__0_88 -> bb67__0_88 [label="return"];
    bb66__0_88 -> bb93__0_88 [label="unwind"];
    bb67__0_88 -> bb86__0_88 [label=""];
    bb68__0_88 -> bb105__0_88 [label="success"];
    bb69__0_88 -> bb71__0_88 [label="0"];
    bb69__0_88 -> bb70__0_88 [label="otherwise"];
    bb70__0_88 -> bb104__0_88 [label="success"];
    bb71__0_88 -> bb72__0_88 [label=""];
    bb72__0_88 -> bb102__0_88 [label="success"];
    bb73__0_88 -> bb74__0_88 [label="return"];
    bb73__0_88 -> bb93__0_88 [label="unwind"];
    bb74__0_88 -> bb75__0_88 [label="return"];
    bb74__0_88 -> bb92__0_88 [label="unwind"];
    bb75__0_88 -> bb76__0_88 [label="return"];
    bb75__0_88 -> bb92__0_88 [label="unwind"];
    bb76__0_88 -> bb77__0_88 [label="return"];
    bb76__0_88 -> bb92__0_88 [label="unwind"];
    bb77__0_88 -> bb78__0_88 [label="0"];
    bb77__0_88 -> bb79__0_88 [label="1"];
    bb77__0_88 -> bb7__0_88 [label="otherwise"];
    bb78__0_88 -> bb81__0_88 [label="return"];
    bb78__0_88 -> bb93__0_88 [label="unwind"];
    bb79__0_88 -> bb80__0_88 [label="return"];
    bb79__0_88 -> bb96__0_88 [label="unwind"];
    bb80__0_88 -> bb84__0_88 [label="return"];
    bb80__0_88 -> bb93__0_88 [label="unwind"];
    bb81__0_88 -> bb82__0_88 [label="return"];
    bb81__0_88 -> bb93__0_88 [label="unwind"];
    bb82__0_88 -> bb83__0_88 [label="return"];
    bb82__0_88 -> bb95__0_88 [label="unwind"];
    bb83__0_88 -> bb91__0_88 [label=""];
    bb84__0_88 -> bb87__0_88 [label=""];
    bb85__0_88 -> bb86__0_88 [label=""];
    bb86__0_88 -> bb87__0_88 [label=""];
    bb87__0_88 -> bb88__0_88 [label=""];
    bb88__0_88 -> bb90__0_88 [label="return"];
    bb88__0_88 -> bb95__0_88 [label="unwind"];
    bb89__0_88 -> bb90__0_88 [label=""];
    bb90__0_88 -> bb91__0_88 [label=""];
    bb92__0_88 -> bb93__0_88 [label="return"];
    bb93__0_88 -> bb95__0_88 [label="return"];
    bb94__0_88 -> bb95__0_88 [label="return"];
    bb96__0_88 -> bb92__0_88 [label=""];
    bb97__0_88 -> bb93__0_88 [label=""];
    bb98__0_88 -> bb93__0_88 [label=""];
    bb99__0_88 -> bb93__0_88 [label=""];
    bb100__0_88 -> bb93__0_88 [label=""];
    bb101__0_88 -> bb94__0_88 [label=""];
    bb102__0_88 -> bb73__0_88 [label="return"];
    bb102__0_88 -> bb93__0_88 [label="unwind"];
    bb103__0_88 -> bb72__0_88 [label=""];
    bb104__0_88 -> bb103__0_88 [label="success"];
    bb105__0_88 -> bb69__0_88 [label="return"];
    bb105__0_88 -> bb93__0_88 [label="unwind"];
    bb106__0_88 -> bb54__0_88 [label="0"];
    bb106__0_88 -> bb55__0_88 [label="1"];
    bb106__0_88 -> bb7__0_88 [label="otherwise"];
    bb107__0_88 -> bb51__0_88 [label=""];
    bb108__0_88 -> bb43__0_88 [label="1"];
    bb108__0_88 -> bb50__0_88 [label="otherwise"];
}
