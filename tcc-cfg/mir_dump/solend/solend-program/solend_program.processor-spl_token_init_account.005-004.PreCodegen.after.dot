digraph Mir_0_141 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn spl_token_init_account(_1: processor::TokenInitializeAccountParams&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let _2: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _3: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _4: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _5: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _6: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _7: solana_program::instruction::Instruction;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, solana_program::instruction::Instruction&gt;;<br align="left"/>let mut _9: std::result::Result&lt;solana_program::instruction::Instruction, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _10: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _11: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _12: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _13: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _18: solana_program::instruction::Instruction;<br align="left"/>let _19: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _20: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let _21: &amp;ReErased solana_program::instruction::Instruction;<br align="left"/>let mut _22: &amp;ReErased [solana_program::account_info::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased [solana_program::account_info::AccountInfo&lt;ReErased&gt;; 5_usize];<br align="left"/>let _24: &amp;ReErased [solana_program::account_info::AccountInfo&lt;ReErased&gt;; 5_usize];<br align="left"/>let _25: [solana_program::account_info::AccountInfo&lt;ReErased&gt;; 5_usize];<br align="left"/>let mut _26: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _27: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _28: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _29: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _30: solana_program::account_info::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _31: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _32: Closure(DefId(0:142 ~ solend_program[040b]::processor::spl_token_init_account::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((solana_program::program_error::ProgramError,)) -&gt; solana_program::program_error::ProgramError, []), ()]);<br align="left"/>let mut _33: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _34: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _35: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _36: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: bool;<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: bool;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>debug params =&gt; _1;<br align="left"/>debug account =&gt; _2;<br align="left"/>debug mint =&gt; _3;<br align="left"/>debug owner =&gt; _4;<br align="left"/>debug rent =&gt; _5;<br align="left"/>debug token_program =&gt; _6;<br align="left"/>debug ix =&gt; _7;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>debug result =&gt; _19;<br align="left"/>>;
    bb0__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_42 = const false<br/>_41 = const false<br/>_40 = const false<br/>_39 = const false<br/>_38 = const false<br/>_37 = const false<br/>StorageLive(_2)<br/>_42 = const true<br/>_2 = move (_1.0: solana_program::account_info::AccountInfo&lt;'_&gt;)<br/>StorageLive(_3)<br/>_41 = const true<br/>_3 = move (_1.1: solana_program::account_info::AccountInfo&lt;'_&gt;)<br/>StorageLive(_4)<br/>_40 = const true<br/>_4 = move (_1.2: solana_program::account_info::AccountInfo&lt;'_&gt;)<br/>StorageLive(_5)<br/>_39 = const true<br/>_5 = move (_1.3: solana_program::account_info::AccountInfo&lt;'_&gt;)<br/>StorageLive(_6)<br/>_38 = const true<br/>_6 = move (_1.4: solana_program::account_info::AccountInfo&lt;'_&gt;)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_33 = deref_copy (_6.0: &amp;solana_program::pubkey::Pubkey)<br/>_10 = &amp;(*_33)<br/>StorageLive(_11)<br/>_34 = deref_copy (_2.0: &amp;solana_program::pubkey::Pubkey)<br/>_11 = &amp;(*_34)<br/>StorageLive(_12)<br/>_35 = deref_copy (_3.0: &amp;solana_program::pubkey::Pubkey)<br/>_12 = &amp;(*_35)<br/>StorageLive(_13)<br/>_36 = deref_copy (_4.0: &amp;solana_program::pubkey::Pubkey)<br/>_13 = &amp;(*_36)<br/></td></tr><tr><td align="left">_9 = initialize_account(move _10, move _11, move _12, move _13)</td></tr></table>>];
    bb1__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;Result&lt;Instruction, ProgramError&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_14 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb3__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_8 as Continue).0: solana_program::instruction::Instruction)<br/>_7 = move _18<br/>StorageDead(_18)<br/>_43 = discriminant(_8)<br/>StorageDead(_8)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;_7<br/>_20 = &amp;(*_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_42 = const false<br/>_26 = move _2<br/>StorageLive(_27)<br/>_41 = const false<br/>_27 = move _3<br/>StorageLive(_28)<br/>_40 = const false<br/>_28 = move _4<br/>StorageLive(_29)<br/>_39 = const false<br/>_29 = move _5<br/>StorageLive(_30)<br/>_38 = const false<br/>_30 = move _6<br/>_25 = [move _26, move _27, move _28, move _29, move _30]<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[solana_program::account_info::AccountInfo&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_19 = invoke(move _20, move _22)</td></tr></table>>];
    bb4__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_17)<br/>_17 = move _15<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb6__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>_45 = discriminant(_8)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb7__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_37 = const true<br/>StorageDead(_22)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb8__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageLive(_31)<br/>_37 = const false<br/>_31 = move _19<br/>StorageLive(_32)<br/>_32 = {closure@token-lending\program\src\processor.rs:3331:20: 3331:23}<br/></td></tr><tr><td align="left">_0 = Result::&lt;(), ProgramError&gt;::map_err::&lt;ProgramError, {closure@token-lending\program\src\processor.rs:3331:20: 3331:23}&gt;(move _31, move _32)</td></tr></table>>];
    bb9__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>_37 = const false<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb10__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_38 = const false<br/>StorageDead(_6)<br/>_39 = const false<br/>StorageDead(_5)<br/>_40 = const false<br/>StorageDead(_4)<br/>_41 = const false<br/>StorageDead(_3)<br/>_42 = const false<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_38 = const false<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb12__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_39 = const false<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb13__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_40 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb14__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_41 = const false<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb15__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_42 = const false<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">return</td></tr></table>>];
    bb17__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb18__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb19__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb20__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb21__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">switchInt(_37)</td></tr></table>>];
    bb22__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left" balign="left">_47 = discriminant(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb24__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">switchInt(_38)</td></tr></table>>];
    bb25__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb26__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">switchInt(_39)</td></tr></table>>];
    bb27__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb28__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">switchInt(_40)</td></tr></table>>];
    bb29__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb30__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">switchInt(_41)</td></tr></table>>];
    bb31__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb32__0_141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">switchInt(_42)</td></tr></table>>];
    bb0__0_141 -> bb1__0_141 [label="return"];
    bb0__0_141 -> bb24__0_141 [label="unwind"];
    bb1__0_141 -> bb2__0_141 [label="return"];
    bb1__0_141 -> bb24__0_141 [label="unwind"];
    bb2__0_141 -> bb3__0_141 [label="0"];
    bb2__0_141 -> bb5__0_141 [label="1"];
    bb2__0_141 -> bb4__0_141 [label="otherwise"];
    bb3__0_141 -> bb7__0_141 [label="return"];
    bb3__0_141 -> bb17__0_141 [label="unwind"];
    bb5__0_141 -> bb6__0_141 [label="return"];
    bb5__0_141 -> bb22__0_141 [label="unwind"];
    bb6__0_141 -> bb11__0_141 [label="return"];
    bb6__0_141 -> bb26__0_141 [label="unwind"];
    bb7__0_141 -> bb8__0_141 [label="return"];
    bb7__0_141 -> bb21__0_141 [label="unwind"];
    bb8__0_141 -> bb9__0_141 [label="return"];
    bb8__0_141 -> bb21__0_141 [label="unwind"];
    bb9__0_141 -> bb10__0_141 [label="return"];
    bb9__0_141 -> bb24__0_141 [label="unwind"];
    bb10__0_141 -> bb16__0_141 [label=""];
    bb11__0_141 -> bb12__0_141 [label="return"];
    bb11__0_141 -> bb28__0_141 [label="unwind"];
    bb12__0_141 -> bb13__0_141 [label="return"];
    bb12__0_141 -> bb30__0_141 [label="unwind"];
    bb13__0_141 -> bb14__0_141 [label="return"];
    bb13__0_141 -> bb32__0_141 [label="unwind"];
    bb14__0_141 -> bb15__0_141 [label="return"];
    bb14__0_141 -> bb19__0_141 [label="unwind"];
    bb15__0_141 -> bb16__0_141 [label=""];
    bb17__0_141 -> bb18__0_141 [label="return"];
    bb18__0_141 -> bb24__0_141 [label="return"];
    bb20__0_141 -> bb18__0_141 [label="return"];
    bb21__0_141 -> bb18__0_141 [label="0"];
    bb21__0_141 -> bb20__0_141 [label="otherwise"];
    bb22__0_141 -> bb24__0_141 [label=""];
    bb23__0_141 -> bb26__0_141 [label="return"];
    bb24__0_141 -> bb26__0_141 [label="0"];
    bb24__0_141 -> bb23__0_141 [label="otherwise"];
    bb25__0_141 -> bb28__0_141 [label="return"];
    bb26__0_141 -> bb28__0_141 [label="0"];
    bb26__0_141 -> bb25__0_141 [label="otherwise"];
    bb27__0_141 -> bb30__0_141 [label="return"];
    bb28__0_141 -> bb30__0_141 [label="0"];
    bb28__0_141 -> bb27__0_141 [label="otherwise"];
    bb29__0_141 -> bb32__0_141 [label="return"];
    bb30__0_141 -> bb32__0_141 [label="0"];
    bb30__0_141 -> bb29__0_141 [label="otherwise"];
    bb31__0_141 -> bb19__0_141 [label="return"];
    bb32__0_141 -> bb19__0_141 [label="0"];
    bb32__0_141 -> bb31__0_141 [label="otherwise"];
}
