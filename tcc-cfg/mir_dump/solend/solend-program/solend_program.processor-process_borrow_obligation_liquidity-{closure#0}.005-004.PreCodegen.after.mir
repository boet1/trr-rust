// MIR for `process_borrow_obligation_liquidity::{closure#0}` after PreCodegen

fn process_borrow_obligation_liquidity::{closure#0}(_1: {closure@token-lending\program\src\processor.rs:1766:25: 1766:28}, _2: ProgramError) -> Decimal {
    let mut _0: solend_sdk::math::Decimal;

    bb0: {
        _0 = Decimal::zero() -> [return: bb1, unwind: bb3];
    }

    bb1: {
        drop(_2) -> [return: bb2, unwind: bb4];
    }

    bb2: {
        return;
    }

    bb3 (cleanup): {
        drop(_2) -> [return: bb4, unwind terminate(cleanup)];
    }

    bb4 (cleanup): {
        resume;
    }
}
