// MIR for `lending_market_metadata::<impl at token-lending\sdk\src\state\lending_market_metadata.rs:40:1: 40:27>::new_from_bytes` after PreCodegen

fn lending_market_metadata::<impl at token-lending\sdk\src\state\lending_market_metadata.rs:40:1: 40:27>::new_from_bytes(_1: &[u8]) -> Result<&lending_market_metadata::LendingMarketMetadata, ProgramError> {
    debug data => _1;
    let mut _0: std::result::Result<&state::lending_market_metadata::LendingMarketMetadata, solana_program::program_error::ProgramError>;
    let mut _2: std::result::Result<&state::lending_market_metadata::LendingMarketMetadata, bytemuck::checked::CheckedCastError>;
    let mut _3: &[u8];
    let _4: &[u8];
    let _5: &[u8];
    let mut _6: &[u8];
    let mut _7: std::ops::RangeFrom<usize>;
    let mut _8: {closure@token-lending\sdk\src\state\lending_market_metadata.rs:43:69: 43:72};

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &(*_1);
        StorageLive(_7);
        _7 = RangeFrom::<usize> { start: const 1_usize };
        _5 = <[u8] as Index<RangeFrom<usize>>>::index(move _6, move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        _4 = &(*_5);
        _3 = &(*_4);
        _2 = bytemuck::checked::try_from_bytes::<lending_market_metadata::LendingMarketMetadata>(move _3) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_3);
        StorageLive(_8);
        _8 = {closure@token-lending\sdk\src\state\lending_market_metadata.rs:43:69: 43:72};
        _0 = Result::<&lending_market_metadata::LendingMarketMetadata, CheckedCastError>::map_err::<ProgramError, {closure@token-lending\sdk\src\state\lending_market_metadata.rs:43:69: 43:72}>(move _2, move _8) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_8);
        StorageDead(_2);
        StorageDead(_5);
        StorageDead(_4);
        return;
    }
}
