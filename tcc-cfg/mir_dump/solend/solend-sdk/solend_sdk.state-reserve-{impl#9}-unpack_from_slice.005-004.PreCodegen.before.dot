digraph Mir_0_538 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;reserve::Reserve as Pack&gt;::unpack_from_slice(_1: &amp;ReErased [u8]) -&gt; std::result::Result&lt;state::reserve::Reserve, solana_program::program_error::ProgramError&gt;<br align="left"/>let _2: &amp;ReErased [u8; 619_usize];<br align="left"/>let _3: usize;<br align="left"/>let _4: &amp;ReErased [u8];<br align="left"/>let _5: &amp;ReErased [u8];<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let mut _7: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _8: usize;<br align="left"/>let mut _9: usize;<br align="left"/>let mut _10: usize;<br align="left"/>let mut _11: (usize, bool);<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let _13: &amp;ReErased [u8; 1_usize];<br align="left"/>let _14: &amp;ReErased [u8; 8_usize];<br align="left"/>let _15: &amp;ReErased [u8; 1_usize];<br align="left"/>let _16: &amp;ReErased [u8; 32_usize];<br align="left"/>let _17: &amp;ReErased [u8; 32_usize];<br align="left"/>let _18: &amp;ReErased [u8; 1_usize];<br align="left"/>let _19: &amp;ReErased [u8; 32_usize];<br align="left"/>let _20: &amp;ReErased [u8; 32_usize];<br align="left"/>let _21: &amp;ReErased [u8; 32_usize];<br align="left"/>let _22: &amp;ReErased [u8; 8_usize];<br align="left"/>let _23: &amp;ReErased [u8; 16_usize];<br align="left"/>let _24: &amp;ReErased [u8; 16_usize];<br align="left"/>let _25: &amp;ReErased [u8; 16_usize];<br align="left"/>let _26: &amp;ReErased [u8; 32_usize];<br align="left"/>let _27: &amp;ReErased [u8; 8_usize];<br align="left"/>let _28: &amp;ReErased [u8; 32_usize];<br align="left"/>let _29: &amp;ReErased [u8; 1_usize];<br align="left"/>let _30: &amp;ReErased [u8; 1_usize];<br align="left"/>let _31: &amp;ReErased [u8; 1_usize];<br align="left"/>let _32: &amp;ReErased [u8; 1_usize];<br align="left"/>let _33: &amp;ReErased [u8; 1_usize];<br align="left"/>let _34: &amp;ReErased [u8; 1_usize];<br align="left"/>let _35: &amp;ReErased [u8; 1_usize];<br align="left"/>let _36: &amp;ReErased [u8; 8_usize];<br align="left"/>let _37: &amp;ReErased [u8; 8_usize];<br align="left"/>let _38: &amp;ReErased [u8; 1_usize];<br align="left"/>let _39: &amp;ReErased [u8; 8_usize];<br align="left"/>let _40: &amp;ReErased [u8; 8_usize];<br align="left"/>let _41: &amp;ReErased [u8; 32_usize];<br align="left"/>let _42: &amp;ReErased [u8; 1_usize];<br align="left"/>let _43: &amp;ReErased [u8; 1_usize];<br align="left"/>let _44: &amp;ReErased [u8; 16_usize];<br align="left"/>let _45: &amp;ReErased [u8; 56_usize];<br align="left"/>let _46: &amp;ReErased [u8; 8_usize];<br align="left"/>let _47: &amp;ReErased [u8; 16_usize];<br align="left"/>let _48: &amp;ReErased [u8; 1_usize];<br align="left"/>let _49: &amp;ReErased [u8; 1_usize];<br align="left"/>let _50: &amp;ReErased [u8; 8_usize];<br align="left"/>let _51: &amp;ReErased [u8; 1_usize];<br align="left"/>let _52: &amp;ReErased [u8; 1_usize];<br align="left"/>let _53: &amp;ReErased [u8; 8_usize];<br align="left"/>let _54: &amp;ReErased [u8; 32_usize];<br align="left"/>let _55: &amp;ReErased [u8; 1_usize];<br align="left"/>let _56: &amp;ReErased [u8; 16_usize];<br align="left"/>let _57: &amp;ReErased [u8; 16_usize];<br align="left"/>let _58: &amp;ReErased [u8; 8_usize];<br align="left"/>let _59: &amp;ReErased [u8; 8_usize];<br align="left"/>let _60: &amp;ReErased [u8; 49_usize];<br align="left"/>let mut _61: (&amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 16_usize], &amp;ReErased [u8; 16_usize], &amp;ReErased [u8; 16_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 16_usize], &amp;ReErased [u8; 56_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 16_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 32_usize], &amp;ReErased [u8; 1_usize], &amp;ReErased [u8; 16_usize], &amp;ReErased [u8; 16_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 8_usize], &amp;ReErased [u8; 49_usize]);<br align="left"/>let _62: &amp;ReErased [u8; 619_usize];<br align="left"/>let mut _63: &amp;ReErased [u8; 619_usize];<br align="left"/>let _64: u8;<br align="left"/>let mut _65: [u8; 1_usize];<br align="left"/>let _66: ();<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: u8;<br align="left"/>let mut _69: !;<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased str;<br align="left"/>let _72: &amp;ReErased str;<br align="left"/>let mut _73: solana_program::program_error::ProgramError;<br align="left"/>let _74: u8;<br align="left"/>let mut _75: [u8; 1_usize];<br align="left"/>let _76: u8;<br align="left"/>let mut _77: [u8; 1_usize];<br align="left"/>let _78: u8;<br align="left"/>let mut _79: [u8; 1_usize];<br align="left"/>let _80: u8;<br align="left"/>let mut _81: u8;<br align="left"/>let mut _82: u8;<br align="left"/>let mut _83: [u8; 1_usize];<br align="left"/>let _84: u8;<br align="left"/>let mut _85: [u8; 1_usize];<br align="left"/>let _86: u8;<br align="left"/>let mut _87: u8;<br align="left"/>let mut _88: u8;<br align="left"/>let mut _89: [u8; 1_usize];<br align="left"/>let mut _90: state::reserve::Reserve;<br align="left"/>let mut _91: u8;<br align="left"/>let mut _92: state::last_update::LastUpdate;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: [u8; 8_usize];<br align="left"/>let mut _95: bool;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, bool&gt;;<br align="left"/>let mut _97: std::result::Result&lt;bool, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _98: &amp;ReErased [u8; 1_usize];<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _103: bool;<br align="left"/>let mut _104: solana_program::pubkey::Pubkey;<br align="left"/>let mut _105: [u8; 32_usize];<br align="left"/>let mut _106: state::reserve::ReserveLiquidity;<br align="left"/>let mut _107: solana_program::pubkey::Pubkey;<br align="left"/>let mut _108: [u8; 32_usize];<br align="left"/>let mut _109: u8;<br align="left"/>let mut _110: [u8; 1_usize];<br align="left"/>let mut _111: solana_program::pubkey::Pubkey;<br align="left"/>let mut _112: [u8; 32_usize];<br align="left"/>let mut _113: solana_program::pubkey::Pubkey;<br align="left"/>let mut _114: [u8; 32_usize];<br align="left"/>let mut _115: solana_program::pubkey::Pubkey;<br align="left"/>let mut _116: [u8; 32_usize];<br align="left"/>let mut _117: u64;<br align="left"/>let mut _118: [u8; 8_usize];<br align="left"/>let mut _119: math::decimal::Decimal;<br align="left"/>let mut _120: &amp;ReErased [u8; 16_usize];<br align="left"/>let mut _121: math::decimal::Decimal;<br align="left"/>let mut _122: &amp;ReErased [u8; 16_usize];<br align="left"/>let mut _123: math::decimal::Decimal;<br align="left"/>let mut _124: &amp;ReErased [u8; 16_usize];<br align="left"/>let mut _125: math::decimal::Decimal;<br align="left"/>let mut _126: &amp;ReErased [u8; 16_usize];<br align="left"/>let mut _127: math::decimal::Decimal;<br align="left"/>let mut _128: &amp;ReErased [u8; 16_usize];<br align="left"/>let mut _129: std::option::Option&lt;math::decimal::Decimal&gt;;<br align="left"/>let _130: usize;<br align="left"/>let mut _131: usize;<br align="left"/>let mut _132: bool;<br align="left"/>let mut _133: math::decimal::Decimal;<br align="left"/>let mut _134: &amp;ReErased [u8; 16_usize];<br align="left"/>let mut _135: !;<br align="left"/>let _136: ();<br align="left"/>let mut _137: &amp;ReErased str;<br align="left"/>let _138: &amp;ReErased str;<br align="left"/>let mut _139: solana_program::program_error::ProgramError;<br align="left"/>let mut _140: state::reserve::ReserveCollateral;<br align="left"/>let mut _141: solana_program::pubkey::Pubkey;<br align="left"/>let mut _142: [u8; 32_usize];<br align="left"/>let mut _143: u64;<br align="left"/>let mut _144: [u8; 8_usize];<br align="left"/>let mut _145: solana_program::pubkey::Pubkey;<br align="left"/>let mut _146: [u8; 32_usize];<br align="left"/>let mut _147: state::reserve::ReserveConfig;<br align="left"/>let mut _148: u8;<br align="left"/>let mut _149: u8;<br align="left"/>let mut _150: u8;<br align="left"/>let mut _151: u8;<br align="left"/>let mut _152: [u8; 1_usize];<br align="left"/>let mut _153: u8;<br align="left"/>let mut _154: [u8; 1_usize];<br align="left"/>let mut _155: u8;<br align="left"/>let mut _156: u8;<br align="left"/>let mut _157: u8;<br align="left"/>let mut _158: u8;<br align="left"/>let mut _159: u8;<br align="left"/>let mut _160: [u8; 1_usize];<br align="left"/>let mut _161: u8;<br align="left"/>let mut _162: [u8; 1_usize];<br align="left"/>let mut _163: u8;<br align="left"/>let mut _164: u64;<br align="left"/>let mut _165: u64;<br align="left"/>let mut _166: u8;<br align="left"/>let mut _167: u64;<br align="left"/>let mut _168: [u8; 8_usize];<br align="left"/>let mut _169: state::reserve::ReserveFees;<br align="left"/>let mut _170: u64;<br align="left"/>let mut _171: [u8; 8_usize];<br align="left"/>let mut _172: u64;<br align="left"/>let mut _173: [u8; 8_usize];<br align="left"/>let mut _174: u8;<br align="left"/>let mut _175: [u8; 1_usize];<br align="left"/>let mut _176: u64;<br align="left"/>let mut _177: [u8; 8_usize];<br align="left"/>let mut _178: u64;<br align="left"/>let mut _179: [u8; 8_usize];<br align="left"/>let mut _180: solana_program::pubkey::Pubkey;<br align="left"/>let mut _181: [u8; 32_usize];<br align="left"/>let mut _182: u8;<br align="left"/>let mut _183: u8;<br align="left"/>let mut _184: [u8; 1_usize];<br align="left"/>let mut _185: u8;<br align="left"/>let mut _186: [u8; 1_usize];<br align="left"/>let mut _187: u64;<br align="left"/>let mut _188: [u8; 8_usize];<br align="left"/>let mut _189: state::reserve::ReserveType;<br align="left"/>let mut _190: std::option::Option&lt;state::reserve::ReserveType&gt;;<br align="left"/>let mut _191: u8;<br align="left"/>let _192: usize;<br align="left"/>let mut _193: usize;<br align="left"/>let mut _194: bool;<br align="left"/>let mut _195: i64;<br align="left"/>let mut _196: [u8; 8_usize];<br align="left"/>let mut _197: std::option::Option&lt;solana_program::pubkey::Pubkey&gt;;<br align="left"/>let mut _198: bool;<br align="left"/>let mut _199: &amp;ReErased &amp;ReErased [u8; 32_usize];<br align="left"/>let mut _200: &amp;ReErased &amp;ReErased [u8; 32_usize];<br align="left"/>let _201: &amp;ReErased [u8; 32_usize];<br align="left"/>let _202: [u8; 32_usize];<br align="left"/>let mut _203: solana_program::pubkey::Pubkey;<br align="left"/>let mut _204: [u8; 32_usize];<br align="left"/>let mut _205: u64;<br align="left"/>let _206: u64;<br align="left"/>let mut _207: [u8; 8_usize];<br align="left"/>let mut _208: bool;<br align="left"/>let mut _209: u64;<br align="left"/>let mut _210: u64;<br align="left"/>let _211: u64;<br align="left"/>let mut _212: [u8; 8_usize];<br align="left"/>let mut _213: bool;<br align="left"/>let mut _214: u64;<br align="left"/>let mut _215: state::rate_limiter::RateLimiter;<br align="left"/>let mut _216: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, state::rate_limiter::RateLimiter&gt;;<br align="left"/>let mut _217: std::result::Result&lt;state::rate_limiter::RateLimiter, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _218: &amp;ReErased [u8];<br align="left"/>let mut _219: &amp;ReErased [u8; 56_usize];<br align="left"/>let mut _220: isize;<br align="left"/>let _221: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _222: !;<br align="left"/>let mut _223: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _224: state::rate_limiter::RateLimiter;<br align="left"/>let mut _225: math::decimal::Decimal;<br align="left"/>let mut _226: &amp;ReErased [u8; 16_usize];<br align="left"/>let mut _227: &amp;ReErased &amp;ReErased [u8; 32_usize];<br align="left"/>let mut _228: bool;<br align="left"/>let mut _229: bool;<br align="left"/>let mut _230: isize;<br align="left"/>let mut _231: isize;<br align="left"/>let mut _232: isize;<br align="left"/>let mut _233: isize;<br align="left"/>let mut _234: isize;<br align="left"/>let mut _235: isize;<br align="left"/>let mut _236: isize;<br align="left"/>let mut _237: isize;<br align="left"/>let mut _238: isize;<br align="left"/>let mut _239: isize;<br align="left"/>debug input =&gt; _1;<br align="left"/>debug input =&gt; _2;<br align="left"/>debug offset =&gt; _3;<br align="left"/>debug slice =&gt; _4;<br align="left"/>debug version =&gt; _13;<br align="left"/>debug last_update_slot =&gt; _14;<br align="left"/>debug last_update_stale =&gt; _15;<br align="left"/>debug lending_market =&gt; _16;<br align="left"/>debug liquidity_mint_pubkey =&gt; _17;<br align="left"/>debug liquidity_mint_decimals =&gt; _18;<br align="left"/>debug liquidity_supply_pubkey =&gt; _19;<br align="left"/>debug liquidity_pyth_oracle_pubkey =&gt; _20;<br align="left"/>debug liquidity_switchboard_oracle_pubkey =&gt; _21;<br align="left"/>debug liquidity_available_amount =&gt; _22;<br align="left"/>debug liquidity_borrowed_amount_wads =&gt; _23;<br align="left"/>debug liquidity_cumulative_borrow_rate_wads =&gt; _24;<br align="left"/>debug liquidity_market_price =&gt; _25;<br align="left"/>debug collateral_mint_pubkey =&gt; _26;<br align="left"/>debug collateral_mint_total_supply =&gt; _27;<br align="left"/>debug collateral_supply_pubkey =&gt; _28;<br align="left"/>debug config_optimal_utilization_rate =&gt; _29;<br align="left"/>debug config_loan_to_value_ratio =&gt; _30;<br align="left"/>debug config_liquidation_bonus =&gt; _31;<br align="left"/>debug config_liquidation_threshold =&gt; _32;<br align="left"/>debug config_min_borrow_rate =&gt; _33;<br align="left"/>debug config_optimal_borrow_rate =&gt; _34;<br align="left"/>debug config_max_borrow_rate =&gt; _35;<br align="left"/>debug config_fees_borrow_fee_wad =&gt; _36;<br align="left"/>debug config_fees_flash_loan_fee_wad =&gt; _37;<br align="left"/>debug config_fees_host_fee_percentage =&gt; _38;<br align="left"/>debug config_deposit_limit =&gt; _39;<br align="left"/>debug config_borrow_limit =&gt; _40;<br align="left"/>debug config_fee_receiver =&gt; _41;<br align="left"/>debug config_protocol_liquidation_fee =&gt; _42;<br align="left"/>debug config_protocol_take_rate =&gt; _43;<br align="left"/>debug liquidity_accumulated_protocol_fees_wads =&gt; _44;<br align="left"/>debug rate_limiter =&gt; _45;<br align="left"/>debug config_added_borrow_weight_bps =&gt; _46;<br align="left"/>debug liquidity_smoothed_market_price =&gt; _47;<br align="left"/>debug config_asset_type =&gt; _48;<br align="left"/>debug config_max_utilization_rate =&gt; _49;<br align="left"/>debug config_super_max_borrow_rate =&gt; _50;<br align="left"/>debug config_max_liquidation_bonus =&gt; _51;<br align="left"/>debug config_max_liquidation_threshold =&gt; _52;<br align="left"/>debug config_scaled_price_offset_bps =&gt; _53;<br align="left"/>debug config_extra_oracle_pubkey =&gt; _54;<br align="left"/>debug liquidity_extra_market_price_flag =&gt; _55;<br align="left"/>debug liquidity_extra_market_price =&gt; _56;<br align="left"/>debug attributed_borrow_value =&gt; _57;<br align="left"/>debug config_attributed_borrow_limit_open =&gt; _58;<br align="left"/>debug config_attributed_borrow_limit_close =&gt; _59;<br align="left"/>debug _padding =&gt; _60;<br align="left"/>debug input =&gt; _62;<br align="left"/>debug version =&gt; _64;<br align="left"/>debug optimal_utilization_rate =&gt; _74;<br align="left"/>debug max_borrow_rate =&gt; _76;<br align="left"/>debug liquidation_bonus =&gt; _78;<br align="left"/>debug max_liquidation_bonus =&gt; _80;<br align="left"/>debug liquidation_threshold =&gt; _84;<br align="left"/>debug max_liquidation_threshold =&gt; _86;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug value =&gt; _206;<br align="left"/>debug value =&gt; _211;<br align="left"/>debug residual =&gt; _221;<br align="left"/>debug val =&gt; _224;<br align="left"/>>;
    bb0__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_228 = const false<br/>_229 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = const 0_usize<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _3<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _3<br/>_11 = CheckedAdd(_10, const _)<br/></td></tr><tr><td align="left">assert(!move (_11.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _10, const _)</td></tr></table>>];
    bb1__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_9 = move (_11.0: usize)<br/>StorageDead(_10)<br/>_7 = std::ops::Range::&lt;usize&gt; { start: move _8, end: move _9 }<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_5 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _6, move _7)</td></tr></table>>];
    bb2__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>_4 = &amp;(*_5)<br/>StorageLive(_12)<br/>_12 = &amp;(*_4)<br/></td></tr><tr><td align="left">_2 = &lt;reserve::Reserve as Pack&gt;::unpack_from_slice::as_array::&lt;u8&gt;(move _12)</td></tr></table>>];
    bb3__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _2<br/>StorageLive(_63)<br/>_63 = &amp;(*_62)<br/></td></tr><tr><td align="left">_61 = &lt;reserve::Reserve as Pack&gt;::unpack_from_slice::as_arrays::&lt;u8&gt;(move _63)</td></tr></table>>];
    bb4__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_13)<br/>_13 = (_61.0: &amp;[u8; 1])<br/>StorageLive(_14)<br/>_14 = (_61.1: &amp;[u8; 8])<br/>StorageLive(_15)<br/>_15 = (_61.2: &amp;[u8; 1])<br/>StorageLive(_16)<br/>_16 = (_61.3: &amp;[u8; 32])<br/>StorageLive(_17)<br/>_17 = (_61.4: &amp;[u8; 32])<br/>StorageLive(_18)<br/>_18 = (_61.5: &amp;[u8; 1])<br/>StorageLive(_19)<br/>_19 = (_61.6: &amp;[u8; 32])<br/>StorageLive(_20)<br/>_20 = (_61.7: &amp;[u8; 32])<br/>StorageLive(_21)<br/>_21 = (_61.8: &amp;[u8; 32])<br/>StorageLive(_22)<br/>_22 = (_61.9: &amp;[u8; 8])<br/>StorageLive(_23)<br/>_23 = (_61.10: &amp;[u8; 16])<br/>StorageLive(_24)<br/>_24 = (_61.11: &amp;[u8; 16])<br/>StorageLive(_25)<br/>_25 = (_61.12: &amp;[u8; 16])<br/>StorageLive(_26)<br/>_26 = (_61.13: &amp;[u8; 32])<br/>StorageLive(_27)<br/>_27 = (_61.14: &amp;[u8; 8])<br/>StorageLive(_28)<br/>_28 = (_61.15: &amp;[u8; 32])<br/>StorageLive(_29)<br/>_29 = (_61.16: &amp;[u8; 1])<br/>StorageLive(_30)<br/>_30 = (_61.17: &amp;[u8; 1])<br/>StorageLive(_31)<br/>_31 = (_61.18: &amp;[u8; 1])<br/>StorageLive(_32)<br/>_32 = (_61.19: &amp;[u8; 1])<br/>StorageLive(_33)<br/>_33 = (_61.20: &amp;[u8; 1])<br/>StorageLive(_34)<br/>_34 = (_61.21: &amp;[u8; 1])<br/>StorageLive(_35)<br/>_35 = (_61.22: &amp;[u8; 1])<br/>StorageLive(_36)<br/>_36 = (_61.23: &amp;[u8; 8])<br/>StorageLive(_37)<br/>_37 = (_61.24: &amp;[u8; 8])<br/>StorageLive(_38)<br/>_38 = (_61.25: &amp;[u8; 1])<br/>StorageLive(_39)<br/>_39 = (_61.26: &amp;[u8; 8])<br/>StorageLive(_40)<br/>_40 = (_61.27: &amp;[u8; 8])<br/>StorageLive(_41)<br/>_41 = (_61.28: &amp;[u8; 32])<br/>StorageLive(_42)<br/>_42 = (_61.29: &amp;[u8; 1])<br/>StorageLive(_43)<br/>_43 = (_61.30: &amp;[u8; 1])<br/>StorageLive(_44)<br/>_44 = (_61.31: &amp;[u8; 16])<br/>StorageLive(_45)<br/>_45 = (_61.32: &amp;[u8; 56])<br/>StorageLive(_46)<br/>_46 = (_61.33: &amp;[u8; 8])<br/>StorageLive(_47)<br/>_47 = (_61.34: &amp;[u8; 16])<br/>StorageLive(_48)<br/>_48 = (_61.35: &amp;[u8; 1])<br/>StorageLive(_49)<br/>_49 = (_61.36: &amp;[u8; 1])<br/>StorageLive(_50)<br/>_50 = (_61.37: &amp;[u8; 8])<br/>StorageLive(_51)<br/>_51 = (_61.38: &amp;[u8; 1])<br/>StorageLive(_52)<br/>_52 = (_61.39: &amp;[u8; 1])<br/>StorageLive(_53)<br/>_53 = (_61.40: &amp;[u8; 8])<br/>StorageLive(_54)<br/>_54 = (_61.41: &amp;[u8; 32])<br/>StorageLive(_55)<br/>_55 = (_61.42: &amp;[u8; 1])<br/>StorageLive(_56)<br/>_56 = (_61.43: &amp;[u8; 16])<br/>StorageLive(_57)<br/>_57 = (_61.44: &amp;[u8; 16])<br/>StorageLive(_58)<br/>_58 = (_61.45: &amp;[u8; 8])<br/>StorageLive(_59)<br/>_59 = (_61.46: &amp;[u8; 8])<br/>StorageLive(_60)<br/>_60 = (_61.47: &amp;[u8; 49])<br/>StorageDead(_61)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = (*_13)<br/></td></tr><tr><td align="left">_64 = core::num::&lt;impl u8&gt;::from_le_bytes(move _65)</td></tr></table>>];
    bb5__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _64<br/>_67 = Gt(move _68, const _)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb6__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = const &quot;Reserve version does not match lending program version&quot;<br/>_71 = &amp;(*_72)<br/></td></tr><tr><td align="left">_70 = solana_program::log::sol_log(move _71)</td></tr></table>>];
    bb7__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageLive(_73)<br/>_73 = solana_program::program_error::ProgramError::InvalidAccountData<br/>_0 = Result::&lt;reserve::Reserve, ProgramError&gt;::Err(move _73)<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_66 = const ()<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = (*_29)<br/></td></tr><tr><td align="left">_74 = core::num::&lt;impl u8&gt;::from_le_bytes(move _75)</td></tr></table>>];
    bb9__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = (*_35)<br/></td></tr><tr><td align="left">_76 = core::num::&lt;impl u8&gt;::from_le_bytes(move _77)</td></tr></table>>];
    bb10__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = (*_31)<br/></td></tr><tr><td align="left">_78 = core::num::&lt;impl u8&gt;::from_le_bytes(move _79)</td></tr></table>>];
    bb11__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _78<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = (*_51)<br/></td></tr><tr><td align="left">_82 = core::num::&lt;impl u8&gt;::from_le_bytes(move _83)</td></tr></table>>];
    bb12__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">_80 = std::cmp::max::&lt;u8&gt;(move _81, move _82)</td></tr></table>>];
    bb13__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = (*_32)<br/></td></tr><tr><td align="left">_84 = core::num::&lt;impl u8&gt;::from_le_bytes(move _85)</td></tr></table>>];
    bb14__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _84<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = (*_52)<br/></td></tr><tr><td align="left">_88 = core::num::&lt;impl u8&gt;::from_le_bytes(move _89)</td></tr></table>>];
    bb15__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_86 = std::cmp::max::&lt;u8&gt;(move _87, move _88)</td></tr></table>>];
    bb16__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _64<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = (*_14)<br/></td></tr><tr><td align="left">_93 = core::num::&lt;impl u64&gt;::from_le_bytes(move _94)</td></tr></table>>];
    bb17__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;(*_15)<br/></td></tr><tr><td align="left">_97 = state::unpack_bool(move _98)</td></tr></table>>];
    bb18__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;Result&lt;bool, ProgramError&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb19__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_228 = const true<br/>StorageDead(_97)<br/>_99 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb20__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_96 as Continue).0: bool)<br/>_95 = _103<br/>StorageDead(_103)<br/>_92 = last_update::LastUpdate { slot: move _93, stale: move _95 }<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = (*_16)<br/></td></tr><tr><td align="left">_104 = Pubkey::new_from_array(move _105)</td></tr></table>>];
    bb21__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb22__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = move ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_102)<br/>_102 = move _100<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;reserve::Reserve, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb23__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = (*_17)<br/></td></tr><tr><td align="left">_107 = Pubkey::new_from_array(move _108)</td></tr></table>>];
    bb25__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = (*_18)<br/></td></tr><tr><td align="left">_109 = core::num::&lt;impl u8&gt;::from_le_bytes(move _110)</td></tr></table>>];
    bb26__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = (*_19)<br/></td></tr><tr><td align="left">_111 = Pubkey::new_from_array(move _112)</td></tr></table>>];
    bb27__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = (*_20)<br/></td></tr><tr><td align="left">_113 = Pubkey::new_from_array(move _114)</td></tr></table>>];
    bb28__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = (*_21)<br/></td></tr><tr><td align="left">_115 = Pubkey::new_from_array(move _116)</td></tr></table>>];
    bb29__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = (*_22)<br/></td></tr><tr><td align="left">_117 = core::num::&lt;impl u64&gt;::from_le_bytes(move _118)</td></tr></table>>];
    bb30__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;(*_23)<br/></td></tr><tr><td align="left">_119 = state::unpack_decimal(move _120)</td></tr></table>>];
    bb31__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;(*_24)<br/></td></tr><tr><td align="left">_121 = state::unpack_decimal(move _122)</td></tr></table>>];
    bb32__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;(*_44)<br/></td></tr><tr><td align="left">_123 = state::unpack_decimal(move _124)</td></tr></table>>];
    bb33__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = &amp;(*_25)<br/></td></tr><tr><td align="left">_125 = state::unpack_decimal(move _126)</td></tr></table>>];
    bb34__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;(*_47)<br/></td></tr><tr><td align="left">_127 = state::unpack_decimal(move _128)</td></tr></table>>];
    bb35__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = const 0_usize<br/>_131 = Len((*_55))<br/>_132 = Lt(_130, _131)<br/></td></tr><tr><td align="left">assert(move _132, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _131, _130)</td></tr></table>>];
    bb36__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">switchInt((*_55)[_130])</td></tr></table>>];
    bb37__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = const &quot;Invalid extra market price flag&quot;<br/>_137 = &amp;(*_138)<br/></td></tr><tr><td align="left">_136 = solana_program::log::sol_log(move _137)</td></tr></table>>];
    bb38__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_129 = Option::&lt;decimal::Decimal&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;(*_56)<br/></td></tr><tr><td align="left">_133 = state::unpack_decimal(move _134)</td></tr></table>>];
    bb40__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_129 = Option::&lt;decimal::Decimal&gt;::Some(move _133)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageLive(_139)<br/>_139 = solana_program::program_error::ProgramError::InvalidAccountData<br/>_0 = Result::&lt;reserve::Reserve, ProgramError&gt;::Err(move _139)<br/>StorageDead(_139)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_106 = ReserveLiquidity { mint_pubkey: move _107, mint_decimals: move _109, supply_pubkey: move _111, pyth_oracle_pubkey: move _113, switchboard_oracle_pubkey: move _115, available_amount: move _117, borrowed_amount_wads: move _119, cumulative_borrow_rate_wads: move _121, accumulated_protocol_fees_wads: move _123, market_price: move _125, smoothed_market_price: move _127, extra_market_price: move _129 }<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = (*_26)<br/></td></tr><tr><td align="left">_141 = Pubkey::new_from_array(move _142)</td></tr></table>>];
    bb43__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = (*_27)<br/></td></tr><tr><td align="left">_143 = core::num::&lt;impl u64&gt;::from_le_bytes(move _144)</td></tr></table>>];
    bb44__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = (*_28)<br/></td></tr><tr><td align="left">_145 = Pubkey::new_from_array(move _146)</td></tr></table>>];
    bb45__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_140 = ReserveCollateral { mint_pubkey: move _141, mint_total_supply: move _143, supply_pubkey: move _145 }<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = _74<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = _74<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = (*_49)<br/></td></tr><tr><td align="left">_151 = core::num::&lt;impl u8&gt;::from_le_bytes(move _152)</td></tr></table>>];
    bb46__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">_149 = std::cmp::max::&lt;u8&gt;(move _150, move _151)</td></tr></table>>];
    bb47__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_150)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = (*_30)<br/></td></tr><tr><td align="left">_153 = core::num::&lt;impl u8&gt;::from_le_bytes(move _154)</td></tr></table>>];
    bb48__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageLive(_155)<br/>_155 = _78<br/>StorageLive(_156)<br/>_156 = _80<br/>StorageLive(_157)<br/>_157 = _84<br/>StorageLive(_158)<br/>_158 = _86<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = (*_33)<br/></td></tr><tr><td align="left">_159 = core::num::&lt;impl u8&gt;::from_le_bytes(move _160)</td></tr></table>>];
    bb49__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = (*_34)<br/></td></tr><tr><td align="left">_161 = core::num::&lt;impl u8&gt;::from_le_bytes(move _162)</td></tr></table>>];
    bb50__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageLive(_163)<br/>_163 = _76<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = _76<br/>_165 = move _166 as u64 (IntToInt)<br/>StorageDead(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = (*_50)<br/></td></tr><tr><td align="left">_167 = core::num::&lt;impl u64&gt;::from_le_bytes(move _168)</td></tr></table>>];
    bb51__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/></td></tr><tr><td align="left">_164 = std::cmp::max::&lt;u64&gt;(move _165, move _167)</td></tr></table>>];
    bb52__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_165)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = (*_36)<br/></td></tr><tr><td align="left">_170 = core::num::&lt;impl u64&gt;::from_le_bytes(move _171)</td></tr></table>>];
    bb53__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = (*_37)<br/></td></tr><tr><td align="left">_172 = core::num::&lt;impl u64&gt;::from_le_bytes(move _173)</td></tr></table>>];
    bb54__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = (*_38)<br/></td></tr><tr><td align="left">_174 = core::num::&lt;impl u8&gt;::from_le_bytes(move _175)</td></tr></table>>];
    bb55__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_169 = reserve::ReserveFees { borrow_fee_wad: move _170, flash_loan_fee_wad: move _172, host_fee_percentage: move _174 }<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = (*_39)<br/></td></tr><tr><td align="left">_176 = core::num::&lt;impl u64&gt;::from_le_bytes(move _177)</td></tr></table>>];
    bb56__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = (*_40)<br/></td></tr><tr><td align="left">_178 = core::num::&lt;impl u64&gt;::from_le_bytes(move _179)</td></tr></table>>];
    bb57__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = (*_41)<br/></td></tr><tr><td align="left">_180 = Pubkey::new_from_array(move _181)</td></tr></table>>];
    bb58__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_184 = (*_42)<br/></td></tr><tr><td align="left">_183 = core::num::&lt;impl u8&gt;::from_le_bytes(move _184)</td></tr></table>>];
    bb59__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/></td></tr><tr><td align="left">_182 = std::cmp::min::&lt;u8&gt;(move _183, const _)</td></tr></table>>];
    bb60__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = (*_43)<br/></td></tr><tr><td align="left">_185 = core::num::&lt;impl u8&gt;::from_le_bytes(move _186)</td></tr></table>>];
    bb61__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = (*_46)<br/></td></tr><tr><td align="left">_187 = core::num::&lt;impl u64&gt;::from_le_bytes(move _188)</td></tr></table>>];
    bb62__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = const 0_usize<br/>_193 = Len((*_48))<br/>_194 = Lt(_192, _193)<br/></td></tr><tr><td align="left">assert(move _194, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _193, _192)</td></tr></table>>];
    bb63__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_191 = (*_48)[_192]<br/></td></tr><tr><td align="left">_190 = &lt;reserve::ReserveType as FromPrimitive&gt;::from_u8(move _191)</td></tr></table>>];
    bb64__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/></td></tr><tr><td align="left">_189 = Option::&lt;reserve::ReserveType&gt;::unwrap(move _190)</td></tr></table>>];
    bb65__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = (*_53)<br/></td></tr><tr><td align="left">_195 = core::num::&lt;impl i64&gt;::from_le_bytes(move _196)</td></tr></table>>];
    bb66__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;_54<br/>StorageLive(_200)<br/>_227 = const _<br/>_200 = &amp;(*_227)<br/></td></tr><tr><td align="left">_198 = &lt;&amp;[u8; 32] as PartialEq&gt;::eq(move _199, move _200)</td></tr></table>>];
    bb67__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left">switchInt(move _198)</td></tr></table>>];
    bb68__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_199)<br/>_197 = Option::&lt;Pubkey&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_199)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = (*_54)<br/></td></tr><tr><td align="left">_203 = Pubkey::new_from_array(move _204)</td></tr></table>>];
    bb70__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_197 = Option::&lt;Pubkey&gt;::Some(move _203)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = (*_58)<br/></td></tr><tr><td align="left">_206 = core::num::&lt;impl u64&gt;::from_le_bytes(move _207)</td></tr></table>>];
    bb72__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = _206<br/>_208 = Eq(move _209, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb73__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>_205 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>_205 = _206<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_206)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = (*_59)<br/></td></tr><tr><td align="left">_211 = core::num::&lt;impl u64&gt;::from_le_bytes(move _212)</td></tr></table>>];
    bb76__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = _211<br/>_213 = Eq(move _214, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb77__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_210 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_210 = _211<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/>_147 = reserve::ReserveConfig { optimal_utilization_rate: move _148, max_utilization_rate: move _149, loan_to_value_ratio: move _153, liquidation_bonus: move _155, max_liquidation_bonus: move _156, liquidation_threshold: move _157, max_liquidation_threshold: move _158, min_borrow_rate: move _159, optimal_borrow_rate: move _161, max_borrow_rate: move _163, super_max_borrow_rate: move _164, fees: move _169, deposit_limit: move _176, borrow_limit: move _178, fee_receiver: move _180, protocol_liquidation_fee: move _182, protocol_take_rate: move _185, added_borrow_weight_bps: move _187, reserve_type: move _189, scaled_price_offset_bps: move _195, extra_oracle_pubkey: move _197, attributed_borrow_limit_open: move _205, attributed_borrow_limit_close: move _210 }<br/>StorageDead(_210)<br/>StorageDead(_205)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_169)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = &amp;(*_45)<br/>_218 = move _219 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = &lt;rate_limiter::RateLimiter as Pack&gt;::unpack_from_slice(move _218)</td></tr></table>>];
    bb80__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/></td></tr><tr><td align="left">_216 = &lt;Result&lt;rate_limiter::RateLimiter, ProgramError&gt; as Try&gt;::branch(move _217)</td></tr></table>>];
    bb81__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_229 = const true<br/>StorageDead(_217)<br/>_220 = discriminant(_216)<br/></td></tr><tr><td align="left">switchInt(move _220)</td></tr></table>>];
    bb82__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_224)<br/>_224 = ((_216 as Continue).0: state::rate_limiter::RateLimiter)<br/>_215 = _224<br/>StorageDead(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;(*_57)<br/></td></tr><tr><td align="left">_225 = state::unpack_decimal(move _226)</td></tr></table>>];
    bb83__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = move ((_216 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_223)<br/>_223 = move _221<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;reserve::Reserve, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _223)</td></tr></table>>];
    bb84__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_221)<br/>StorageDead(_215)<br/>StorageDead(_147)<br/>StorageDead(_140)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_2)<br/>_234 = discriminant(_216)<br/>_229 = const false<br/>StorageDead(_216)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>_90 = reserve::Reserve { version: move _91, last_update: move _92, lending_market: move _104, liquidity: move _106, collateral: move _140, config: move _147, rate_limiter: move _215, attributed_borrow_value: move _225 }<br/>StorageDead(_225)<br/>StorageDead(_215)<br/>StorageDead(_147)<br/>StorageDead(_140)<br/>StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>_0 = Result::&lt;reserve::Reserve, ProgramError&gt;::Ok(move _90)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_2)<br/>_230 = discriminant(_216)<br/>_229 = const false<br/>StorageDead(_216)<br/>StorageDead(_192)<br/>StorageDead(_130)<br/>_232 = discriminant(_96)<br/>_228 = const false<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left">return</td></tr></table>>];
    bb88__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb89__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_236 = discriminant(_96)<br/>_228 = const false<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left" balign="left">_238 = discriminant(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left" balign="left">_239 = discriminant(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_538 -> bb1__0_538 [label="success"];
    bb1__0_538 -> bb2__0_538 [label="return"];
    bb2__0_538 -> bb3__0_538 [label="return"];
    bb3__0_538 -> bb4__0_538 [label="return"];
    bb4__0_538 -> bb5__0_538 [label="return"];
    bb5__0_538 -> bb8__0_538 [label="0"];
    bb5__0_538 -> bb6__0_538 [label="otherwise"];
    bb6__0_538 -> bb7__0_538 [label="return"];
    bb7__0_538 -> bb87__0_538 [label=""];
    bb8__0_538 -> bb9__0_538 [label="return"];
    bb9__0_538 -> bb10__0_538 [label="return"];
    bb10__0_538 -> bb11__0_538 [label="return"];
    bb11__0_538 -> bb12__0_538 [label="return"];
    bb12__0_538 -> bb13__0_538 [label="return"];
    bb13__0_538 -> bb14__0_538 [label="return"];
    bb14__0_538 -> bb15__0_538 [label="return"];
    bb15__0_538 -> bb16__0_538 [label="return"];
    bb16__0_538 -> bb17__0_538 [label="return"];
    bb17__0_538 -> bb18__0_538 [label="return"];
    bb18__0_538 -> bb19__0_538 [label="return"];
    bb18__0_538 -> bb88__0_538 [label="unwind"];
    bb19__0_538 -> bb20__0_538 [label="0"];
    bb19__0_538 -> bb22__0_538 [label="1"];
    bb19__0_538 -> bb21__0_538 [label="otherwise"];
    bb20__0_538 -> bb24__0_538 [label="return"];
    bb20__0_538 -> bb91__0_538 [label="unwind"];
    bb22__0_538 -> bb23__0_538 [label="return"];
    bb22__0_538 -> bb91__0_538 [label="unwind"];
    bb23__0_538 -> bb89__0_538 [label=""];
    bb24__0_538 -> bb25__0_538 [label="return"];
    bb24__0_538 -> bb91__0_538 [label="unwind"];
    bb25__0_538 -> bb26__0_538 [label="return"];
    bb25__0_538 -> bb91__0_538 [label="unwind"];
    bb26__0_538 -> bb27__0_538 [label="return"];
    bb26__0_538 -> bb91__0_538 [label="unwind"];
    bb27__0_538 -> bb28__0_538 [label="return"];
    bb27__0_538 -> bb91__0_538 [label="unwind"];
    bb28__0_538 -> bb29__0_538 [label="return"];
    bb28__0_538 -> bb91__0_538 [label="unwind"];
    bb29__0_538 -> bb30__0_538 [label="return"];
    bb29__0_538 -> bb91__0_538 [label="unwind"];
    bb30__0_538 -> bb31__0_538 [label="return"];
    bb30__0_538 -> bb91__0_538 [label="unwind"];
    bb31__0_538 -> bb32__0_538 [label="return"];
    bb31__0_538 -> bb91__0_538 [label="unwind"];
    bb32__0_538 -> bb33__0_538 [label="return"];
    bb32__0_538 -> bb91__0_538 [label="unwind"];
    bb33__0_538 -> bb34__0_538 [label="return"];
    bb33__0_538 -> bb91__0_538 [label="unwind"];
    bb34__0_538 -> bb35__0_538 [label="return"];
    bb34__0_538 -> bb91__0_538 [label="unwind"];
    bb35__0_538 -> bb36__0_538 [label="success"];
    bb35__0_538 -> bb91__0_538 [label="unwind"];
    bb36__0_538 -> bb38__0_538 [label="0"];
    bb36__0_538 -> bb39__0_538 [label="1"];
    bb36__0_538 -> bb37__0_538 [label="otherwise"];
    bb37__0_538 -> bb41__0_538 [label="return"];
    bb37__0_538 -> bb91__0_538 [label="unwind"];
    bb38__0_538 -> bb42__0_538 [label=""];
    bb39__0_538 -> bb40__0_538 [label="return"];
    bb39__0_538 -> bb91__0_538 [label="unwind"];
    bb40__0_538 -> bb42__0_538 [label=""];
    bb41__0_538 -> bb86__0_538 [label=""];
    bb42__0_538 -> bb43__0_538 [label="return"];
    bb42__0_538 -> bb91__0_538 [label="unwind"];
    bb43__0_538 -> bb44__0_538 [label="return"];
    bb43__0_538 -> bb91__0_538 [label="unwind"];
    bb44__0_538 -> bb45__0_538 [label="return"];
    bb44__0_538 -> bb91__0_538 [label="unwind"];
    bb45__0_538 -> bb46__0_538 [label="return"];
    bb45__0_538 -> bb91__0_538 [label="unwind"];
    bb46__0_538 -> bb47__0_538 [label="return"];
    bb46__0_538 -> bb91__0_538 [label="unwind"];
    bb47__0_538 -> bb48__0_538 [label="return"];
    bb47__0_538 -> bb91__0_538 [label="unwind"];
    bb48__0_538 -> bb49__0_538 [label="return"];
    bb48__0_538 -> bb91__0_538 [label="unwind"];
    bb49__0_538 -> bb50__0_538 [label="return"];
    bb49__0_538 -> bb91__0_538 [label="unwind"];
    bb50__0_538 -> bb51__0_538 [label="return"];
    bb50__0_538 -> bb91__0_538 [label="unwind"];
    bb51__0_538 -> bb52__0_538 [label="return"];
    bb51__0_538 -> bb91__0_538 [label="unwind"];
    bb52__0_538 -> bb53__0_538 [label="return"];
    bb52__0_538 -> bb91__0_538 [label="unwind"];
    bb53__0_538 -> bb54__0_538 [label="return"];
    bb53__0_538 -> bb91__0_538 [label="unwind"];
    bb54__0_538 -> bb55__0_538 [label="return"];
    bb54__0_538 -> bb91__0_538 [label="unwind"];
    bb55__0_538 -> bb56__0_538 [label="return"];
    bb55__0_538 -> bb91__0_538 [label="unwind"];
    bb56__0_538 -> bb57__0_538 [label="return"];
    bb56__0_538 -> bb91__0_538 [label="unwind"];
    bb57__0_538 -> bb58__0_538 [label="return"];
    bb57__0_538 -> bb91__0_538 [label="unwind"];
    bb58__0_538 -> bb59__0_538 [label="return"];
    bb58__0_538 -> bb91__0_538 [label="unwind"];
    bb59__0_538 -> bb60__0_538 [label="return"];
    bb59__0_538 -> bb91__0_538 [label="unwind"];
    bb60__0_538 -> bb61__0_538 [label="return"];
    bb60__0_538 -> bb91__0_538 [label="unwind"];
    bb61__0_538 -> bb62__0_538 [label="return"];
    bb61__0_538 -> bb91__0_538 [label="unwind"];
    bb62__0_538 -> bb63__0_538 [label="success"];
    bb62__0_538 -> bb91__0_538 [label="unwind"];
    bb63__0_538 -> bb64__0_538 [label="return"];
    bb63__0_538 -> bb91__0_538 [label="unwind"];
    bb64__0_538 -> bb65__0_538 [label="return"];
    bb64__0_538 -> bb91__0_538 [label="unwind"];
    bb65__0_538 -> bb66__0_538 [label="return"];
    bb65__0_538 -> bb91__0_538 [label="unwind"];
    bb66__0_538 -> bb67__0_538 [label="return"];
    bb66__0_538 -> bb91__0_538 [label="unwind"];
    bb67__0_538 -> bb69__0_538 [label="0"];
    bb67__0_538 -> bb68__0_538 [label="otherwise"];
    bb68__0_538 -> bb71__0_538 [label=""];
    bb69__0_538 -> bb70__0_538 [label="return"];
    bb69__0_538 -> bb91__0_538 [label="unwind"];
    bb70__0_538 -> bb71__0_538 [label=""];
    bb71__0_538 -> bb72__0_538 [label="return"];
    bb71__0_538 -> bb91__0_538 [label="unwind"];
    bb72__0_538 -> bb74__0_538 [label="0"];
    bb72__0_538 -> bb73__0_538 [label="otherwise"];
    bb73__0_538 -> bb75__0_538 [label=""];
    bb74__0_538 -> bb75__0_538 [label=""];
    bb75__0_538 -> bb76__0_538 [label="return"];
    bb75__0_538 -> bb91__0_538 [label="unwind"];
    bb76__0_538 -> bb78__0_538 [label="0"];
    bb76__0_538 -> bb77__0_538 [label="otherwise"];
    bb77__0_538 -> bb79__0_538 [label=""];
    bb78__0_538 -> bb79__0_538 [label=""];
    bb79__0_538 -> bb80__0_538 [label="return"];
    bb79__0_538 -> bb91__0_538 [label="unwind"];
    bb80__0_538 -> bb81__0_538 [label="return"];
    bb80__0_538 -> bb91__0_538 [label="unwind"];
    bb81__0_538 -> bb82__0_538 [label="0"];
    bb81__0_538 -> bb83__0_538 [label="1"];
    bb81__0_538 -> bb21__0_538 [label="otherwise"];
    bb82__0_538 -> bb85__0_538 [label="return"];
    bb82__0_538 -> bb90__0_538 [label="unwind"];
    bb83__0_538 -> bb84__0_538 [label="return"];
    bb83__0_538 -> bb90__0_538 [label="unwind"];
    bb84__0_538 -> bb86__0_538 [label=""];
    bb85__0_538 -> bb87__0_538 [label=""];
    bb86__0_538 -> bb89__0_538 [label=""];
    bb89__0_538 -> bb87__0_538 [label=""];
    bb90__0_538 -> bb91__0_538 [label=""];
    bb91__0_538 -> bb88__0_538 [label=""];
}
