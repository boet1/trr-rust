digraph Mir_0_51 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn LendingInstruction::unpack_u64::{closure#0}(_1: Closure(DefId(0:51 ~ solend_sdk[296d]::instruction::{impl#0}::unpack_u64::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased [u8],)) -&gt; std::option::Option&lt;[u8; 8_usize]&gt;, []), ()]), _2: &amp;ReErased [u8]) -&gt; std::option::Option&lt;[u8; 8_usize]&gt;<br align="left"/>let mut _3: std::result::Result&lt;[u8; 8_usize], std::array::TryFromSliceError&gt;;<br align="left"/>let mut _4: &amp;ReErased [u8];<br align="left"/>debug slice =&gt; _2;<br align="left"/>>;
    bb0__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;(*_2)<br/></td></tr><tr><td align="left">_3 = &lt;&amp;[u8] as TryInto&lt;[u8; 8]&gt;&gt;::try_into(move _4)</td></tr></table>>];
    bb1__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">_0 = Result::&lt;[u8; 8], TryFromSliceError&gt;::ok(move _3)</td></tr></table>>];
    bb2__0_51 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_51 -> bb1__0_51 [label="return"];
    bb1__0_51 -> bb2__0_51 [label="return"];
}
