// MIR for `decimal::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:587:3: 587:13>::checked_neg` after PreCodegen

fn decimal::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:587:3: 587:13>::checked_neg(_1: U192) -> Option<U192> {
    debug self => _1;
    let mut _0: std::option::Option<math::decimal::U192>;
    let mut _2: (math::decimal::U192, bool);
    let mut _3: math::decimal::U192;
    let _4: math::decimal::U192;
    let mut _5: math::decimal::U192;
    scope 1 {
        debug zero => _4;
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = _1;
        _2 = U192::overflowing_neg(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        switchInt((_2.1: bool)) -> [0: bb2, otherwise: bb3];
    }

    bb2: {
        StorageLive(_4);
        _4 = (_2.0: math::decimal::U192);
        StorageLive(_5);
        _5 = _4;
        _0 = Option::<U192>::Some(move _5);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb4;
    }

    bb3: {
        _0 = Option::<U192>::None;
        goto -> bb4;
    }

    bb4: {
        StorageDead(_2);
        return;
    }
}
