digraph Mir_0_1108 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;U192 as Mul&lt;&amp;'a U192&gt;&gt;::mul(_1: math::decimal::U192, _2: &amp;ReErased math::decimal::U192) -&gt; math::decimal::U192<br align="left"/>let _3: math::decimal::U192;<br align="left"/>let mut _4: math::decimal::U192;<br align="left"/>let _5: math::decimal::U192;<br align="left"/>let _6: bool;<br align="left"/>let mut _7: (math::decimal::U192, bool);<br align="left"/>let mut _8: math::decimal::U192;<br align="left"/>let mut _9: math::decimal::U192;<br align="left"/>let _10: ();<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: !;<br align="left"/>let _13: !;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug other =&gt; _2;<br align="left"/>debug bignum =&gt; _3;<br align="left"/>debug result =&gt; _5;<br align="left"/>debug overflow =&gt; _6;<br align="left"/>>;
    bb0__0_1108 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = (*_2)<br/></td></tr><tr><td align="left">_3 = &lt;U192 as Into&lt;U192&gt;&gt;::into(move _4)</td></tr></table>>];
    bb1__0_1108 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _1<br/>StorageLive(_9)<br/>_9 = _3<br/></td></tr><tr><td align="left">_7 = U192::overflowing_mul(move _8, move _9)</td></tr></table>>];
    bb2__0_1108 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_5)<br/>_5 = (_7.0: math::decimal::U192)<br/>StorageLive(_6)<br/>_6 = (_7.1: bool)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _6<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_1108 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/></td></tr><tr><td align="left">_13 = begin_panic::&lt;&amp;str&gt;(const &quot;arithmetic operation overflow&quot;)</td></tr></table>>];
    bb4__0_1108 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_10 = const ()<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>_0 = _5<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1108 -> bb1__0_1108 [label="return"];
    bb1__0_1108 -> bb2__0_1108 [label="return"];
    bb2__0_1108 -> bb4__0_1108 [label="0"];
    bb2__0_1108 -> bb3__0_1108 [label="otherwise"];
}
