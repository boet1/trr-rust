digraph Mir_0_62 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn init_lending_market(_1: solana_program::pubkey::Pubkey, _2: solana_program::pubkey::Pubkey, _3: [u8; 32_usize], _4: solana_program::pubkey::Pubkey, _5: solana_program::pubkey::Pubkey, _6: solana_program::pubkey::Pubkey) -&gt; solana_program::instruction::Instruction<br align="left"/>let mut _7: solana_program::pubkey::Pubkey;<br align="left"/>let mut _8: std::vec::Vec&lt;solana_program::instruction::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _9: std::boxed::Box&lt;[solana_program::instruction::AccountMeta], std::alloc::Global&gt;;<br align="left"/>let mut _10: std::boxed::Box&lt;[solana_program::instruction::AccountMeta; 5_usize], std::alloc::Global&gt;;<br align="left"/>let mut _11: usize;<br align="left"/>let mut _12: usize;<br align="left"/>let mut _13: *mut u8;<br align="left"/>let mut _14: std::boxed::Box&lt;[solana_program::instruction::AccountMeta; 5_usize], std::alloc::Global&gt;;<br align="left"/>let mut _15: solana_program::instruction::AccountMeta;<br align="left"/>let mut _16: solana_program::pubkey::Pubkey;<br align="left"/>let mut _17: solana_program::instruction::AccountMeta;<br align="left"/>let mut _18: solana_program::pubkey::Pubkey;<br align="left"/>let mut _19: solana_program::instruction::AccountMeta;<br align="left"/>let mut _20: solana_program::pubkey::Pubkey;<br align="left"/>let mut _21: solana_program::instruction::AccountMeta;<br align="left"/>let mut _22: solana_program::pubkey::Pubkey;<br align="left"/>let mut _23: solana_program::instruction::AccountMeta;<br align="left"/>let mut _24: solana_program::pubkey::Pubkey;<br align="left"/>let mut _25: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _26: &amp;ReErased instruction::LendingInstruction;<br align="left"/>let _27: instruction::LendingInstruction;<br align="left"/>let mut _28: solana_program::pubkey::Pubkey;<br align="left"/>let mut _29: [u8; 32_usize];<br align="left"/>let mut _30: *const [solana_program::instruction::AccountMeta; 5_usize];<br align="left"/>let mut _31: *const ();<br align="left"/>let mut _32: usize;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: usize;<br align="left"/>let mut _35: usize;<br align="left"/>let mut _36: bool;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug owner =&gt; _2;<br align="left"/>debug quote_currency =&gt; _3;<br align="left"/>debug lending_market_pubkey =&gt; _4;<br align="left"/>debug oracle_program_id =&gt; _5;<br align="left"/>debug switchboard_oracle_program_id =&gt; _6;<br align="left"/>>;
    bb0__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = _1<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_11 = SizeOf([solana_program::instruction::AccountMeta; 5])<br/>_12 = AlignOf([solana_program::instruction::AccountMeta; 5])<br/></td></tr><tr><td align="left">_13 = alloc::alloc::exchange_malloc(move _11, move _12)</td></tr></table>>];
    bb1__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ShallowInitBox(move _13, [solana_program::instruction::AccountMeta; 5])<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _4<br/></td></tr><tr><td align="left">_15 = AccountMeta::new(move _16, const false)</td></tr></table>>];
    bb2__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/></td></tr><tr><td align="left">_18 = solana_program::sysvar::rent::id()</td></tr></table>>];
    bb3__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">_17 = AccountMeta::new_readonly(move _18, const false)</td></tr></table>>];
    bb4__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/></td></tr><tr><td align="left">_20 = spl_token::id()</td></tr></table>>];
    bb5__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">_19 = AccountMeta::new_readonly(move _20, const false)</td></tr></table>>];
    bb6__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _5<br/></td></tr><tr><td align="left">_21 = AccountMeta::new_readonly(move _22, const false)</td></tr></table>>];
    bb7__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _6<br/></td></tr><tr><td align="left">_23 = AccountMeta::new_readonly(move _24, const false)</td></tr></table>>];
    bb8__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_30 = (((_14.0: std::ptr::Unique&lt;[solana_program::instruction::AccountMeta; 5]&gt;).0: std::ptr::NonNull&lt;[solana_program::instruction::AccountMeta; 5]&gt;).0: *const [solana_program::instruction::AccountMeta; 5])<br/>_31 = _30 as *const () (PtrToPtr)<br/>_32 = _31 as usize (Transmute)<br/>_33 = AlignOf([solana_program::instruction::AccountMeta; 5])<br/>_34 = Sub(_33, const 1_usize)<br/>_35 = BitAnd(_32, _34)<br/>_36 = Eq(_35, const 0_usize)<br/></td></tr><tr><td align="left">assert(_36, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _33, _32)</td></tr></table>>];
    bb9__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _2<br/>StorageLive(_29)<br/>_29 = _3<br/>_27 = LendingInstruction::InitLendingMarket { owner: move _28, quote_currency: move _29 }<br/>_26 = &amp;_27<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = LendingInstruction::pack(move _26)</td></tr></table>>];
    bb10__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_0 = Instruction { program_id: move _7, accounts: move _8, data: move _25 }<br/>StorageDead(_25)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb11__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb12__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb13__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb14__0_62 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">(*_30) = [move _15, move _17, move _19, move _21, move _23]<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>_10 = move _14<br/>_9 = move _10 as std::boxed::Box&lt;[solana_program::instruction::AccountMeta]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = std::slice::&lt;impl [AccountMeta]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _9)</td></tr></table>>];
    bb0__0_62 -> bb1__0_62 [label="return"];
    bb1__0_62 -> bb2__0_62 [label="return"];
    bb1__0_62 -> bb12__0_62 [label="unwind"];
    bb2__0_62 -> bb3__0_62 [label="return"];
    bb2__0_62 -> bb12__0_62 [label="unwind"];
    bb3__0_62 -> bb4__0_62 [label="return"];
    bb3__0_62 -> bb12__0_62 [label="unwind"];
    bb4__0_62 -> bb5__0_62 [label="return"];
    bb4__0_62 -> bb12__0_62 [label="unwind"];
    bb5__0_62 -> bb6__0_62 [label="return"];
    bb5__0_62 -> bb12__0_62 [label="unwind"];
    bb6__0_62 -> bb7__0_62 [label="return"];
    bb6__0_62 -> bb12__0_62 [label="unwind"];
    bb7__0_62 -> bb8__0_62 [label="return"];
    bb7__0_62 -> bb12__0_62 [label="unwind"];
    bb8__0_62 -> bb14__0_62 [label="success"];
    bb9__0_62 -> bb10__0_62 [label="return"];
    bb9__0_62 -> bb11__0_62 [label="unwind"];
    bb11__0_62 -> bb13__0_62 [label="return"];
    bb12__0_62 -> bb13__0_62 [label="return"];
    bb14__0_62 -> bb9__0_62 [label="return"];
    bb14__0_62 -> bb13__0_62 [label="unwind"];
}
