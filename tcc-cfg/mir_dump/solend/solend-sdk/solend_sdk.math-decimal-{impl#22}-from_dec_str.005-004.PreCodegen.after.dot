digraph Mir_0_801 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U192::from_dec_str(_1: &amp;ReErased str) -&gt; std::result::Result&lt;math::decimal::U192, uint::FromDecStrErr&gt;<br align="left"/>let mut _2: math::decimal::U192;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::iter::Map&lt;std::str::Bytes&lt;ReErased&gt;, Closure(DefId(0:802 ~ solend_sdk[296d]::math::decimal::{impl#22}::from_dec_str::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u8,)) -&gt; u8, []), ()])&gt;;<br align="left"/>let mut _5: std::iter::Map&lt;std::str::Bytes&lt;ReErased&gt;, Closure(DefId(0:802 ~ solend_sdk[296d]::math::decimal::{impl#22}::from_dec_str::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u8,)) -&gt; u8, []), ()])&gt;;<br align="left"/>let mut _6: std::str::Bytes&lt;ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased str;<br align="left"/>let mut _8: Closure(DefId(0:802 ~ solend_sdk[296d]::math::decimal::{impl#22}::from_dec_str::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u8,)) -&gt; u8, []), ()]);<br align="left"/>let mut _9: std::iter::Map&lt;std::str::Bytes&lt;ReErased&gt;, Closure(DefId(0:802 ~ solend_sdk[296d]::math::decimal::{impl#22}::from_dec_str::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u8,)) -&gt; u8, []), ()])&gt;;<br align="left"/>let mut _10: ();<br align="left"/>let _11: ();<br align="left"/>let mut _12: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _13: &amp;ReErased mut std::iter::Map&lt;std::str::Bytes&lt;ReErased&gt;, Closure(DefId(0:802 ~ solend_sdk[296d]::math::decimal::{impl#22}::from_dec_str::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u8,)) -&gt; u8, []), ()])&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::iter::Map&lt;std::str::Bytes&lt;ReErased&gt;, Closure(DefId(0:802 ~ solend_sdk[296d]::math::decimal::{impl#22}::from_dec_str::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u8,)) -&gt; u8, []), ()])&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let mut _16: !;<br align="left"/>let _17: u8;<br align="left"/>let _18: ();<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: u8;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: uint::FromDecStrErr;<br align="left"/>let _23: math::decimal::U192;<br align="left"/>let _24: u64;<br align="left"/>let mut _25: (math::decimal::U192, u64);<br align="left"/>let mut _26: math::decimal::U192;<br align="left"/>let _27: ();<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: uint::FromDecStrErr;<br align="left"/>let _32: math::decimal::U192;<br align="left"/>let _33: bool;<br align="left"/>let mut _34: (math::decimal::U192, bool);<br align="left"/>let mut _35: math::decimal::U192;<br align="left"/>let mut _36: math::decimal::U192;<br align="left"/>let mut _37: u8;<br align="left"/>let _38: ();<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: uint::FromDecStrErr;<br align="left"/>let mut _42: math::decimal::U192;<br align="left"/>let mut _43: math::decimal::U192;<br align="left"/>debug value =&gt; _1;<br align="left"/>debug res =&gt; _2;<br align="left"/>debug iter =&gt; _9;<br align="left"/>debug b =&gt; _17;<br align="left"/>debug r =&gt; _23;<br align="left"/>debug overflow =&gt; _24;<br align="left"/>debug r =&gt; _32;<br align="left"/>debug overflow =&gt; _33;<br align="left"/>>;
    bb0__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/></td></tr><tr><td align="left">_2 = &lt;U192 as Default&gt;::default()</td></tr></table>>];
    bb1__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = core::str::&lt;impl str&gt;::bytes(move _7)</td></tr></table>>];
    bb2__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = {closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:607:32: 607:35}<br/></td></tr><tr><td align="left">_5 = &lt;std::str::Bytes&lt;'_&gt; as Iterator&gt;::map::&lt;u8, {closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:607:32: 607:35}&gt;(move _6, move _8)</td></tr></table>>];
    bb3__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Map&lt;std::str::Bytes&lt;'_&gt;, {closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:607:32: 607:35}&gt; as IntoIterator&gt;::into_iter(move _5)</td></tr></table>>];
    bb4__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_9)<br/>_9 = move _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut _9<br/>_13 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_12 = &lt;Map&lt;std::str::Bytes&lt;'_&gt;, {closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:607:32: 607:35}&gt; as Iterator&gt;::next(move _13)</td></tr></table>>];
    bb6__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_15 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb7__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_12 as Some).0: u8)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _17<br/>_19 = Gt(move _20, const 9_u8)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb8__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_3 = const ()<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_43)<br/>_43 = _2<br/>_0 = Result::&lt;U192, FromDecStrErr&gt;::Ok(move _43)<br/>StorageDead(_43)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = uint::FromDecStrErr::InvalidCharacter<br/>_0 = Result::&lt;U192, FromDecStrErr&gt;::Err(move _22)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_18 = const ()<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _2<br/></td></tr><tr><td align="left">_25 = U192::overflowing_mul_u64(move _26, const 10_u64)</td></tr></table>>];
    bb12__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_23)<br/>_23 = (_25.0: math::decimal::U192)<br/>StorageLive(_24)<br/>_24 = (_25.1: u64)<br/>StorageDead(_25)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _24<br/>_28 = Gt(move _29, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb13__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = uint::FromDecStrErr::InvalidLength<br/>_0 = Result::&lt;U192, FromDecStrErr&gt;::Err(move _31)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_27 = const ()<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _23<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _17<br/></td></tr><tr><td align="left">_36 = &lt;u8 as Into&lt;U192&gt;&gt;::into(move _37)</td></tr></table>>];
    bb15__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_34 = U192::overflowing_add(move _35, move _36)</td></tr></table>>];
    bb16__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_32)<br/>_32 = (_34.0: math::decimal::U192)<br/>StorageLive(_33)<br/>_33 = (_34.1: bool)<br/>StorageDead(_34)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _33<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb17__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = uint::FromDecStrErr::InvalidLength<br/>_0 = Result::&lt;U192, FromDecStrErr&gt;::Err(move _41)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_38 = const ()<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_42)<br/>_42 = _32<br/>_2 = move _42<br/>StorageDead(_42)<br/>_11 = const ()<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>_10 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_801 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_801 -> bb1__0_801 [label="return"];
    bb1__0_801 -> bb2__0_801 [label="return"];
    bb2__0_801 -> bb3__0_801 [label="return"];
    bb3__0_801 -> bb4__0_801 [label="return"];
    bb4__0_801 -> bb5__0_801 [label=""];
    bb5__0_801 -> bb6__0_801 [label="return"];
    bb6__0_801 -> bb9__0_801 [label="0"];
    bb6__0_801 -> bb7__0_801 [label="1"];
    bb6__0_801 -> bb8__0_801 [label="otherwise"];
    bb7__0_801 -> bb11__0_801 [label="0"];
    bb7__0_801 -> bb10__0_801 [label="otherwise"];
    bb9__0_801 -> bb21__0_801 [label=""];
    bb10__0_801 -> bb20__0_801 [label=""];
    bb11__0_801 -> bb12__0_801 [label="return"];
    bb12__0_801 -> bb14__0_801 [label="0"];
    bb12__0_801 -> bb13__0_801 [label="otherwise"];
    bb13__0_801 -> bb19__0_801 [label=""];
    bb14__0_801 -> bb15__0_801 [label="return"];
    bb15__0_801 -> bb16__0_801 [label="return"];
    bb16__0_801 -> bb18__0_801 [label="0"];
    bb16__0_801 -> bb17__0_801 [label="otherwise"];
    bb17__0_801 -> bb19__0_801 [label=""];
    bb18__0_801 -> bb5__0_801 [label=""];
    bb19__0_801 -> bb20__0_801 [label=""];
    bb20__0_801 -> bb21__0_801 [label=""];
}
