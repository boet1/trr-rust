// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:630:17: 630:22>::clone` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:630:17: 630:22>::clone(_1: &Bonus) -> Bonus {
    debug self => _1;
    let mut _0: state::reserve::Bonus;
    let mut _2: math::decimal::Decimal;
    let mut _3: &math::decimal::Decimal;
    let _4: &math::decimal::Decimal;
    let mut _5: math::decimal::Decimal;
    let mut _6: &math::decimal::Decimal;
    let _7: &math::decimal::Decimal;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: math::decimal::Decimal);
        _3 = &(*_4);
        _2 = <decimal::Decimal as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: math::decimal::Decimal);
        _6 = &(*_7);
        _5 = <decimal::Decimal as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        _0 = Bonus { total_bonus: move _2, protocol_liquidation_fee: move _5 };
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
