digraph Mir_0_505 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveCollateral::burn(_1: &amp;ReErased mut state::reserve::ReserveCollateral, _2: u64) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let mut _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _6: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: error::LendingError;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _14: u64;<br align="left"/>let mut _15: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug collateral_amount =&gt; _2;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>>;
    bb0__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).1: u64)<br/>StorageLive(_8)<br/>_8 = _2<br/></td></tr><tr><td align="left">_6 = core::num::&lt;impl u64&gt;::checked_sub(move _7, move _8)</td></tr></table>>];
    bb1__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_5 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _6, move _9)</td></tr></table>>];
    bb2__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_10 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb4__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_4 as Continue).0: u64)<br/>_3 = _14<br/>StorageDead(_14)<br/>((*_1).1: u64) = move _3<br/>StorageDead(_3)<br/>StorageDead(_4)<br/>StorageLive(_15)<br/>_15 = ()<br/>_0 = Result::&lt;(), ProgramError&gt;::Ok(move _15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb7__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_3)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_505 -> bb1__0_505 [label="return"];
    bb1__0_505 -> bb2__0_505 [label="return"];
    bb2__0_505 -> bb3__0_505 [label="return"];
    bb3__0_505 -> bb4__0_505 [label="0"];
    bb3__0_505 -> bb6__0_505 [label="1"];
    bb3__0_505 -> bb5__0_505 [label="otherwise"];
    bb4__0_505 -> bb8__0_505 [label=""];
    bb6__0_505 -> bb7__0_505 [label="return"];
    bb7__0_505 -> bb8__0_505 [label=""];
}
