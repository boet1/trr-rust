// MIR for `rate_limiter::<impl at token-lending\sdk\src\state\rate_limiter.rs:166:1: 166:26>::pack_into_slice::as_arrays` before PreCodegen

fn rate_limiter::<impl at token-lending\sdk\src\state\rate_limiter.rs:166:1: 166:26>::pack_into_slice::as_arrays(_1: &mut [T; 56]) -> (&mut [T; 8], &mut [T; 8], &mut [T; 16], &mut [T; 8], &mut [T; 16]) {
    debug a => _1;
    let mut _0: (&mut [T; 8], &mut [T; 8], &mut [T; 16], &mut [T; 8], &mut [T; 16]);
    let mut _2: *mut T;
    let mut _3: &mut [T];
    let mut _4: &mut [T; 56];
    let mut _5: &mut [T; 8];
    let mut _6: &mut [T; 8];
    let mut _8: *mut [T; 8];
    let mut _9: *mut T;
    let mut _10: *mut T;
    let mut _11: *mut T;
    let mut _12: &mut [T; 8];
    let mut _13: &mut [T; 8];
    let mut _15: *mut [T; 8];
    let mut _16: *mut T;
    let mut _17: *mut T;
    let mut _18: *mut T;
    let mut _19: &mut [T; 16];
    let mut _20: &mut [T; 16];
    let mut _22: *mut [T; 16];
    let mut _23: *mut T;
    let mut _24: *mut T;
    let mut _25: *mut T;
    let mut _26: &mut [T; 8];
    let mut _27: &mut [T; 8];
    let mut _29: *mut [T; 8];
    let mut _30: *mut T;
    let mut _31: *mut T;
    let mut _32: *mut T;
    let mut _33: &mut [T; 16];
    let mut _34: &mut [T; 16];
    let mut _36: *mut [T; 16];
    let mut _37: *mut T;
    let mut _38: *mut T;
    let mut _39: *mut T;
    scope 1 {
        debug p => _2;
        let _7: &mut [T; 8];
        let _14: &mut [T; 8];
        let _21: &mut [T; 16];
        let _28: &mut [T; 8];
        let _35: &mut [T; 16];
        scope 2 {
            debug aref => _7;
        }
        scope 3 {
            debug aref => _14;
        }
        scope 4 {
            debug aref => _21;
        }
        scope 5 {
            debug aref => _28;
        }
        scope 6 {
            debug aref => _35;
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &mut (*_1);
        _3 = move _4 as &mut [T] (PointerCoercion(Unsize));
        StorageDead(_4);
        _2 = core::slice::<impl [T]>::as_mut_ptr(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = _2;
        _8 = move _9 as *mut [T; 8] (PtrToPtr);
        StorageDead(_9);
        _7 = &mut (*_8);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _2;
        _10 = std::ptr::mut_ptr::<impl *mut T>::add(move _11, const 8_usize) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_11);
        _2 = move _10;
        StorageDead(_10);
        _6 = &mut (*_7);
        StorageDead(_8);
        StorageDead(_7);
        _5 = &mut (*_6);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = _2;
        _15 = move _16 as *mut [T; 8] (PtrToPtr);
        StorageDead(_16);
        _14 = &mut (*_15);
        StorageLive(_17);
        StorageLive(_18);
        _18 = _2;
        _17 = std::ptr::mut_ptr::<impl *mut T>::add(move _18, const 8_usize) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_18);
        _2 = move _17;
        StorageDead(_17);
        _13 = &mut (*_14);
        StorageDead(_15);
        StorageDead(_14);
        _12 = &mut (*_13);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        _23 = _2;
        _22 = move _23 as *mut [T; 16] (PtrToPtr);
        StorageDead(_23);
        _21 = &mut (*_22);
        StorageLive(_24);
        StorageLive(_25);
        _25 = _2;
        _24 = std::ptr::mut_ptr::<impl *mut T>::add(move _25, const 16_usize) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_25);
        _2 = move _24;
        StorageDead(_24);
        _20 = &mut (*_21);
        StorageDead(_22);
        StorageDead(_21);
        _19 = &mut (*_20);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = _2;
        _29 = move _30 as *mut [T; 8] (PtrToPtr);
        StorageDead(_30);
        _28 = &mut (*_29);
        StorageLive(_31);
        StorageLive(_32);
        _32 = _2;
        _31 = std::ptr::mut_ptr::<impl *mut T>::add(move _32, const 8_usize) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_32);
        _2 = move _31;
        StorageDead(_31);
        _27 = &mut (*_28);
        StorageDead(_29);
        StorageDead(_28);
        _26 = &mut (*_27);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = _2;
        _36 = move _37 as *mut [T; 16] (PtrToPtr);
        StorageDead(_37);
        _35 = &mut (*_36);
        StorageLive(_38);
        StorageLive(_39);
        _39 = _2;
        _38 = std::ptr::mut_ptr::<impl *mut T>::add(move _39, const 16_usize) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_39);
        _2 = move _38;
        StorageDead(_38);
        _34 = &mut (*_35);
        StorageDead(_36);
        StorageDead(_35);
        _33 = &mut (*_34);
        _0 = (move _5, move _12, move _19, move _26, move _33);
        StorageDead(_33);
        StorageDead(_26);
        StorageDead(_19);
        StorageDead(_12);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_34);
        StorageDead(_27);
        StorageDead(_20);
        StorageDead(_13);
        StorageDead(_6);
        return;
    }
}
