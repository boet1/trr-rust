digraph Mir_0_188 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;rate::Rate as std::fmt::Display&gt;::fmt(_1: &amp;ReErased math::rate::Rate, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: std::string::String;<br align="left"/>let mut _4: &amp;ReErased math::rate::U128;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: usize;<br align="left"/>let mut _8: &amp;ReErased std::string::String;<br align="left"/>let _9: ();<br align="left"/>let mut _10: &amp;ReErased mut std::string::String;<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: &amp;ReErased std::string::String;<br align="left"/>let _14: &amp;ReErased std::string::String;<br align="left"/>let _15: std::string::String;<br align="left"/>let mut _16: &amp;ReErased [&amp;ReErased str];<br align="left"/>let _17: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _18: &amp;ReErased std::vec::Vec&lt;&amp;ReErased str, std::alloc::Global&gt;;<br align="left"/>let _19: std::vec::Vec&lt;&amp;ReErased str, std::alloc::Global&gt;;<br align="left"/>let mut _20: usize;<br align="left"/>let mut _21: usize;<br align="left"/>let mut _22: &amp;ReErased std::string::String;<br align="left"/>let mut _23: (usize, bool);<br align="left"/>let mut _24: &amp;ReErased str;<br align="left"/>let _25: &amp;ReErased str;<br align="left"/>let _26: ();<br align="left"/>let mut _27: &amp;ReErased mut std::string::String;<br align="left"/>let mut _28: &amp;ReErased str;<br align="left"/>let _29: &amp;ReErased str;<br align="left"/>let _30: ();<br align="left"/>let mut _31: &amp;ReErased mut std::string::String;<br align="left"/>let mut _32: usize;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: &amp;ReErased std::string::String;<br align="left"/>let mut _35: (usize, bool);<br align="left"/>let mut _36: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased str;<br align="left"/>let _38: &amp;ReErased str;<br align="left"/>let mut _39: &amp;ReErased std::string::String;<br align="left"/>let _40: &amp;ReErased std::string::String;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug scaled_val =&gt; _3;<br align="left"/>>;
    bb0__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;((*_1).0: math::rate::U128)<br/></td></tr><tr><td align="left">_3 = &lt;U128 as ToString&gt;::to_string(move _4)</td></tr></table>>];
    bb1__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;_3<br/></td></tr><tr><td align="left">_7 = String::len(move _8)</td></tr></table>>];
    bb2__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_6 = Le(move _7, const _)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;mut _3<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;_3<br/></td></tr><tr><td align="left">_21 = String::len(move _22)</td></tr></table>>];
    bb4__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_23 = CheckedSub(const _, _21)<br/></td></tr><tr><td align="left">assert(!move (_23.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const _, move _21)</td></tr></table>>];
    bb5__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_20 = move (_23.0: usize)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = from_elem::&lt;&amp;str&gt;(const &quot;0&quot;, move _20)</td></tr></table>>];
    bb6__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_18 = &amp;_19<br/></td></tr><tr><td align="left">_17 = &lt;Vec&lt;&amp;str&gt; as Deref&gt;::deref(move _18)</td></tr></table>>];
    bb7__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_16 = &amp;(*_17)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = const &quot;&quot;<br/>_24 = &amp;(*_25)<br/></td></tr><tr><td align="left">_15 = std::slice::&lt;impl [&amp;str]&gt;::join::&lt;&amp;str&gt;(move _16, move _24)</td></tr></table>>];
    bb8__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = &lt;String as Deref&gt;::deref(move _13)</td></tr></table>>];
    bb9__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_11 = &amp;(*_12)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_9 = String::insert_str(move _10, const 0_usize, move _11)</td></tr></table>>];
    bb10__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb11__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb12__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;mut _3<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = const &quot;0.&quot;<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_26 = String::insert_str(move _27, const 0_usize, move _28)</td></tr></table>>];
    bb13__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;mut _3<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;_3<br/></td></tr><tr><td align="left">_33 = String::len(move _34)</td></tr></table>>];
    bb15__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_35 = CheckedSub(_33, const _)<br/></td></tr><tr><td align="left">assert(!move (_35.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _33, const _)</td></tr></table>>];
    bb16__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_32 = move (_35.0: usize)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_30 = String::insert(move _31, move _32, const '.')</td></tr></table>>];
    bb17__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>_5 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_36)<br/>_36 = &amp;mut (*_2)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;_3<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = &lt;String as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb19__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_37 = &amp;(*_38)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::write_str(move _36, move _37)</td></tr></table>>];
    bb20__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb21__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb22__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb23__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb24__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb25__0_188 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_188 -> bb1__0_188 [label="return"];
    bb1__0_188 -> bb2__0_188 [label="return"];
    bb1__0_188 -> bb24__0_188 [label="unwind"];
    bb2__0_188 -> bb14__0_188 [label="0"];
    bb2__0_188 -> bb3__0_188 [label="otherwise"];
    bb3__0_188 -> bb4__0_188 [label="return"];
    bb3__0_188 -> bb24__0_188 [label="unwind"];
    bb4__0_188 -> bb5__0_188 [label="success"];
    bb4__0_188 -> bb24__0_188 [label="unwind"];
    bb5__0_188 -> bb6__0_188 [label="return"];
    bb5__0_188 -> bb24__0_188 [label="unwind"];
    bb6__0_188 -> bb7__0_188 [label="return"];
    bb6__0_188 -> bb23__0_188 [label="unwind"];
    bb7__0_188 -> bb8__0_188 [label="return"];
    bb7__0_188 -> bb23__0_188 [label="unwind"];
    bb8__0_188 -> bb9__0_188 [label="return"];
    bb8__0_188 -> bb22__0_188 [label="unwind"];
    bb9__0_188 -> bb10__0_188 [label="return"];
    bb9__0_188 -> bb22__0_188 [label="unwind"];
    bb10__0_188 -> bb11__0_188 [label="return"];
    bb10__0_188 -> bb23__0_188 [label="unwind"];
    bb11__0_188 -> bb12__0_188 [label="return"];
    bb11__0_188 -> bb24__0_188 [label="unwind"];
    bb12__0_188 -> bb13__0_188 [label="return"];
    bb12__0_188 -> bb24__0_188 [label="unwind"];
    bb13__0_188 -> bb18__0_188 [label=""];
    bb14__0_188 -> bb15__0_188 [label="return"];
    bb14__0_188 -> bb24__0_188 [label="unwind"];
    bb15__0_188 -> bb16__0_188 [label="success"];
    bb15__0_188 -> bb24__0_188 [label="unwind"];
    bb16__0_188 -> bb17__0_188 [label="return"];
    bb16__0_188 -> bb24__0_188 [label="unwind"];
    bb17__0_188 -> bb18__0_188 [label=""];
    bb18__0_188 -> bb19__0_188 [label="return"];
    bb18__0_188 -> bb24__0_188 [label="unwind"];
    bb19__0_188 -> bb20__0_188 [label="return"];
    bb19__0_188 -> bb24__0_188 [label="unwind"];
    bb20__0_188 -> bb21__0_188 [label="return"];
    bb20__0_188 -> bb25__0_188 [label="unwind"];
    bb22__0_188 -> bb23__0_188 [label="return"];
    bb23__0_188 -> bb24__0_188 [label="return"];
    bb24__0_188 -> bb25__0_188 [label="return"];
}
