digraph Mir_0_337 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::_find_liquidity_index_in_borrows(_1: &amp;ReErased state::obligation::Obligation, _2: solana_program::pubkey::Pubkey) -&gt; std::option::Option&lt;usize&gt;<br align="left"/>let mut _3: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _4: std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _5: &amp;ReErased [state::obligation::ObligationLiquidity];<br align="left"/>let _6: &amp;ReErased [state::obligation::ObligationLiquidity];<br align="left"/>let mut _7: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationLiquidity, std::alloc::Global&gt;;<br align="left"/>let mut _8: Closure(DefId(0:338 ~ solend_sdk[296d]::state::obligation::{impl#0}::_find_liquidity_index_in_borrows::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::obligation::ObligationLiquidity,)) -&gt; bool, []), (&amp;ReErased solana_program::pubkey::Pubkey,)]);<br align="left"/>let mut _9: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug borrow_reserve =&gt; _2;<br align="left"/>>;
    bb0__0_337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).5: std::vec::Vec&lt;state::obligation::ObligationLiquidity&gt;)<br/></td></tr><tr><td align="left">_6 = &lt;Vec&lt;obligation::ObligationLiquidity&gt; as Deref&gt;::deref(move _7)</td></tr></table>>];
    bb1__0_337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_5 = &amp;(*_6)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_4 = core::slice::&lt;impl [obligation::ObligationLiquidity]&gt;::iter(move _5)</td></tr></table>>];
    bb2__0_337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_3 = &amp;mut _4<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;_2<br/>_8 = {closure@token-lending\sdk\src\state\obligation.rs:287:23: 287:34} { borrow_reserve: move _9 }<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_0 = &lt;std::slice::Iter&lt;'_, obligation::ObligationLiquidity&gt; as Iterator&gt;::position::&lt;{closure@token-lending\sdk\src\state\obligation.rs:287:23: 287:34}&gt;(move _3, move _8)</td></tr></table>>];
    bb3__0_337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_3)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_337 -> bb1__0_337 [label="return"];
    bb1__0_337 -> bb2__0_337 [label="return"];
    bb2__0_337 -> bb3__0_337 [label="return"];
}
