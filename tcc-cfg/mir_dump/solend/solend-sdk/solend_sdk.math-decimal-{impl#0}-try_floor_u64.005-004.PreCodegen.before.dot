digraph Mir_0_137 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn decimal::Decimal::try_floor_u64(_1: &amp;ReErased math::decimal::Decimal) -&gt; std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;<br align="left"/>let _2: math::decimal::U192;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, math::decimal::U192&gt;;<br align="left"/>let mut _4: std::result::Result&lt;math::decimal::U192, error::LendingError&gt;;<br align="left"/>let mut _5: std::option::Option&lt;math::decimal::U192&gt;;<br align="left"/>let mut _6: math::decimal::U192;<br align="left"/>let mut _7: math::decimal::U192;<br align="left"/>let mut _8: error::LendingError;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _13: math::decimal::U192;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _16: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _17: std::result::Result&lt;u64, &amp;ReErased str&gt;;<br align="left"/>let mut _18: math::decimal::U192;<br align="left"/>let mut _19: Closure(DefId(0:138 ~ solend_sdk[296d]::math::decimal::{impl#0}::try_floor_u64::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased str,)) -&gt; error::LendingError, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _24: u64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug ceil_val =&gt; _2;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>>;
    bb0__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).0: math::decimal::U192)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = decimal::Decimal::wad()</td></tr></table>>];
    bb1__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_5 = U192::checked_div(move _6, move _7)</td></tr></table>>];
    bb2__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_4 = Option::&lt;U192&gt;::ok_or::&lt;LendingError&gt;(move _5, move _8)</td></tr></table>>];
    bb3__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;Result&lt;U192, LendingError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb4__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_9 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb5__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_3 as Continue).0: math::decimal::U192)<br/>_2 = _13<br/>StorageDead(_13)<br/>StorageDead(_3)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/></td></tr><tr><td align="left">_17 = &lt;u64 as TryFrom&lt;U192&gt;&gt;::try_from(move _18)</td></tr></table>>];
    bb6__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb8__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@token-lending\sdk\src\math\decimal.rs:107:44: 107:47}<br/></td></tr><tr><td align="left">_16 = Result::&lt;u64, &amp;str&gt;::map_err::&lt;LendingError, {closure@token-lending\sdk\src\math\decimal.rs:107:44: 107:47}&gt;(move _17, move _19)</td></tr></table>>];
    bb10__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb11__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb12__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_15 as Continue).0: u64)<br/>_14 = _24<br/>StorageDead(_24)<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(move _14)<br/>StorageDead(_14)<br/>StorageDead(_2)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb14__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_14)<br/>StorageDead(_2)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_137 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_137 -> bb1__0_137 [label="return"];
    bb1__0_137 -> bb2__0_137 [label="return"];
    bb2__0_137 -> bb3__0_137 [label="return"];
    bb3__0_137 -> bb4__0_137 [label="return"];
    bb4__0_137 -> bb5__0_137 [label="0"];
    bb4__0_137 -> bb7__0_137 [label="1"];
    bb4__0_137 -> bb6__0_137 [label="otherwise"];
    bb5__0_137 -> bb9__0_137 [label="return"];
    bb7__0_137 -> bb8__0_137 [label="return"];
    bb8__0_137 -> bb15__0_137 [label=""];
    bb9__0_137 -> bb10__0_137 [label="return"];
    bb10__0_137 -> bb11__0_137 [label="return"];
    bb11__0_137 -> bb12__0_137 [label="0"];
    bb11__0_137 -> bb13__0_137 [label="1"];
    bb11__0_137 -> bb6__0_137 [label="otherwise"];
    bb12__0_137 -> bb15__0_137 [label=""];
    bb13__0_137 -> bb14__0_137 [label="return"];
    bb14__0_137 -> bb15__0_137 [label=""];
}
