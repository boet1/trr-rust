digraph Mir_0_331 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::find_or_add_collateral_to_deposits(_1: &amp;ReErased mut state::obligation::Obligation, _2: solana_program::pubkey::Pubkey) -&gt; std::result::Result&lt;&amp;ReErased mut state::obligation::ObligationCollateral, solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _5: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _6: solana_program::pubkey::Pubkey;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: usize;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _11: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _12: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _13: &amp;ReErased mut std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _14: usize;<br align="left"/>let _15: ();<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: usize;<br align="left"/>let mut _18: usize;<br align="left"/>let mut _19: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _20: usize;<br align="left"/>let mut _21: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationLiquidity, std::alloc::Global&gt;;<br align="left"/>let mut _22: (usize, bool);<br align="left"/>let mut _23: !;<br align="left"/>let _24: ();<br align="left"/>let mut _25: &amp;ReErased str;<br align="left"/>let _26: &amp;ReErased str;<br align="left"/>let mut _27: &amp;ReErased std::string::String;<br align="left"/>let _28: &amp;ReErased std::string::String;<br align="left"/>let _29: std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let mut _31: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased usize;<br align="left"/>let _42: &amp;ReErased usize;<br align="left"/>let _43: usize;<br align="left"/>let mut _44: solana_program::program_error::ProgramError;<br align="left"/>let mut _45: error::LendingError;<br align="left"/>let _46: state::obligation::ObligationCollateral;<br align="left"/>let mut _47: solana_program::pubkey::Pubkey;<br align="left"/>let _48: ();<br align="left"/>let mut _49: &amp;ReErased mut std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _50: state::obligation::ObligationCollateral;<br align="left"/>let mut _51: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _52: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _53: std::option::Option&lt;&amp;ReErased mut state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _54: &amp;ReErased mut [state::obligation::ObligationCollateral];<br align="left"/>let mut _55: &amp;ReErased mut [state::obligation::ObligationCollateral];<br align="left"/>let mut _56: &amp;ReErased mut std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _57: &amp;ReErased usize;<br align="left"/>let mut _58: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug deposit_reserve =&gt; _2;<br align="left"/>debug collateral_index =&gt; _8;<br align="left"/>debug res =&gt; _30;<br align="left"/>debug collateral =&gt; _46;<br align="left"/>>;
    bb0__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/>StorageLive(_6)<br/>_6 = _2<br/></td></tr><tr><td align="left">_4 = obligation::Obligation::_find_collateral_index_in_deposits(move _5, move _6)</td></tr></table>>];
    bb1__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb2__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_4 as Some).0: usize)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut ((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/>StorageLive(_14)<br/>_14 = _8<br/></td></tr><tr><td align="left">_12 = &lt;Vec&lt;obligation::ObligationCollateral&gt; as IndexMut&lt;usize&gt;&gt;::index_mut(move _13, move _14)</td></tr></table>>];
    bb3__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>_11 = &amp;mut (*_12)<br/>_10 = &amp;mut (*_11)<br/>_0 = Result::&lt;&amp;mut obligation::ObligationCollateral, ProgramError&gt;::Ok(move _10)<br/>StorageDead(_10)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/></td></tr><tr><td align="left">_18 = Vec::&lt;obligation::ObligationCollateral&gt;::len(move _19)</td></tr></table>>];
    bb5__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).5: std::vec::Vec&lt;state::obligation::ObligationLiquidity&gt;)<br/></td></tr><tr><td align="left">_20 = Vec::&lt;obligation::ObligationLiquidity&gt;::len(move _21)</td></tr></table>>];
    bb6__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_22 = CheckedAdd(_18, _20)<br/></td></tr><tr><td align="left">assert(!move (_22.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _18, move _20)</td></tr></table>>];
    bb7__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_17 = move (_22.0: usize)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>_16 = Ge(move _17, const _)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb8__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_58 = const _<br/>_34 = &amp;(*_58)<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_57 = const _<br/>_42 = &amp;(*_57)<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;usize&gt;(move _41)</td></tr></table>>];
    bb9__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = [move _40]<br/>StorageDead(_40)<br/>_38 = &amp;_39<br/>_37 = &amp;(*_38)<br/>_36 = move _37 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_31 = Arguments::&lt;'_&gt;::new_v1(move _32, move _36)</td></tr></table>>];
    bb10__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = format(move _31)</td></tr></table>>];
    bb11__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_34)<br/>_29 = move _30<br/>StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = &lt;String as Deref&gt;::deref(move _27)</td></tr></table>>];
    bb12__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_25 = &amp;(*_26)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = solana_program::log::sol_log(move _25)</td></tr></table>>];
    bb13__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb14__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = LendingError::ObligationReserveLimit<br/></td></tr><tr><td align="left">_44 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _45)</td></tr></table>>];
    bb15__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_0 = Result::&lt;&amp;mut obligation::ObligationCollateral, ProgramError&gt;::Err(move _44)<br/>StorageDead(_44)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_15 = const ()<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _2<br/></td></tr><tr><td align="left">_46 = obligation::ObligationCollateral::new(move _47)</td></tr></table>>];
    bb17__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;mut ((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/>StorageLive(_50)<br/>_50 = move _46<br/></td></tr><tr><td align="left">_48 = Vec::&lt;obligation::ObligationCollateral&gt;::push(move _49, move _50)</td></tr></table>>];
    bb18__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;mut ((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/></td></tr><tr><td align="left">_55 = &lt;Vec&lt;obligation::ObligationCollateral&gt; as DerefMut&gt;::deref_mut(move _56)</td></tr></table>>];
    bb19__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_54 = &amp;mut (*_55)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_53 = core::slice::&lt;impl [obligation::ObligationCollateral]&gt;::last_mut(move _54)</td></tr></table>>];
    bb20__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = Option::&lt;&amp;mut obligation::ObligationCollateral&gt;::unwrap(move _53)</td></tr></table>>];
    bb21__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_51 = &amp;mut (*_52)<br/>StorageDead(_53)<br/>_0 = Result::&lt;&amp;mut obligation::ObligationCollateral, ProgramError&gt;::Ok(move _51)<br/>StorageDead(_51)<br/>StorageDead(_46)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb23__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb24__0_331 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_331 -> bb1__0_331 [label="return"];
    bb1__0_331 -> bb2__0_331 [label="1"];
    bb1__0_331 -> bb4__0_331 [label="otherwise"];
    bb2__0_331 -> bb3__0_331 [label="return"];
    bb3__0_331 -> bb22__0_331 [label=""];
    bb4__0_331 -> bb5__0_331 [label="return"];
    bb5__0_331 -> bb6__0_331 [label="return"];
    bb6__0_331 -> bb7__0_331 [label="success"];
    bb7__0_331 -> bb16__0_331 [label="0"];
    bb7__0_331 -> bb8__0_331 [label="otherwise"];
    bb8__0_331 -> bb9__0_331 [label="return"];
    bb9__0_331 -> bb10__0_331 [label="return"];
    bb10__0_331 -> bb11__0_331 [label="return"];
    bb11__0_331 -> bb12__0_331 [label="return"];
    bb11__0_331 -> bb23__0_331 [label="unwind"];
    bb12__0_331 -> bb13__0_331 [label="return"];
    bb12__0_331 -> bb23__0_331 [label="unwind"];
    bb13__0_331 -> bb14__0_331 [label="return"];
    bb13__0_331 -> bb24__0_331 [label="unwind"];
    bb14__0_331 -> bb15__0_331 [label="return"];
    bb15__0_331 -> bb22__0_331 [label=""];
    bb16__0_331 -> bb17__0_331 [label="return"];
    bb17__0_331 -> bb18__0_331 [label="return"];
    bb18__0_331 -> bb19__0_331 [label="return"];
    bb19__0_331 -> bb20__0_331 [label="return"];
    bb20__0_331 -> bb21__0_331 [label="return"];
    bb21__0_331 -> bb22__0_331 [label=""];
    bb23__0_331 -> bb24__0_331 [label="return"];
}
