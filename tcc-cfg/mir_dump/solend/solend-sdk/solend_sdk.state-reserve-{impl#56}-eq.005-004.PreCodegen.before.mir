// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:939:39: 939:48>::eq` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:939:39: 939:48>::eq(_1: &reserve::ReserveConfig, _2: &reserve::ReserveConfig) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: u8;
    let mut _5: u8;
    let mut _6: bool;
    let mut _7: u8;
    let mut _8: u8;
    let mut _9: bool;
    let mut _10: u8;
    let mut _11: u8;
    let mut _12: bool;
    let mut _13: u8;
    let mut _14: u8;
    let mut _15: bool;
    let mut _16: u8;
    let mut _17: u8;
    let mut _18: bool;
    let mut _19: u8;
    let mut _20: u8;
    let mut _21: bool;
    let mut _22: u8;
    let mut _23: u8;
    let mut _24: bool;
    let mut _25: u8;
    let mut _26: u8;
    let mut _27: bool;
    let mut _28: u8;
    let mut _29: u8;
    let mut _30: bool;
    let mut _31: u8;
    let mut _32: u8;
    let mut _33: bool;
    let mut _34: u64;
    let mut _35: u64;
    let mut _36: bool;
    let mut _37: &state::reserve::ReserveFees;
    let mut _38: &state::reserve::ReserveFees;
    let mut _39: bool;
    let mut _40: u64;
    let mut _41: u64;
    let mut _42: bool;
    let mut _43: u64;
    let mut _44: u64;
    let mut _45: bool;
    let mut _46: &solana_program::pubkey::Pubkey;
    let mut _47: &solana_program::pubkey::Pubkey;
    let mut _48: bool;
    let mut _49: u8;
    let mut _50: u8;
    let mut _51: bool;
    let mut _52: u8;
    let mut _53: u8;
    let mut _54: bool;
    let mut _55: u64;
    let mut _56: u64;
    let mut _57: bool;
    let mut _58: &state::reserve::ReserveType;
    let mut _59: &state::reserve::ReserveType;
    let mut _60: bool;
    let mut _61: i64;
    let mut _62: i64;
    let mut _63: bool;
    let mut _64: &std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _65: &std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _66: bool;
    let mut _67: u64;
    let mut _68: u64;
    let mut _69: u64;
    let mut _70: u64;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_1).0: u8);
        StorageLive(_5);
        _5 = ((*_2).0: u8);
        _3 = Eq(move _4, move _5);
        switchInt(move _3) -> [0: bb48, otherwise: bb1];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        _7 = ((*_1).1: u8);
        StorageLive(_8);
        _8 = ((*_2).1: u8);
        _6 = Eq(move _7, move _8);
        switchInt(move _6) -> [0: bb47, otherwise: bb2];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = ((*_1).2: u8);
        StorageLive(_11);
        _11 = ((*_2).2: u8);
        _9 = Eq(move _10, move _11);
        switchInt(move _9) -> [0: bb46, otherwise: bb3];
    }

    bb3: {
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_12);
        StorageLive(_13);
        _13 = ((*_1).3: u8);
        StorageLive(_14);
        _14 = ((*_2).3: u8);
        _12 = Eq(move _13, move _14);
        switchInt(move _12) -> [0: bb45, otherwise: bb4];
    }

    bb4: {
        StorageDead(_14);
        StorageDead(_13);
        StorageLive(_15);
        StorageLive(_16);
        _16 = ((*_1).4: u8);
        StorageLive(_17);
        _17 = ((*_2).4: u8);
        _15 = Eq(move _16, move _17);
        switchInt(move _15) -> [0: bb44, otherwise: bb5];
    }

    bb5: {
        StorageDead(_17);
        StorageDead(_16);
        StorageLive(_18);
        StorageLive(_19);
        _19 = ((*_1).5: u8);
        StorageLive(_20);
        _20 = ((*_2).5: u8);
        _18 = Eq(move _19, move _20);
        switchInt(move _18) -> [0: bb43, otherwise: bb6];
    }

    bb6: {
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_21);
        StorageLive(_22);
        _22 = ((*_1).6: u8);
        StorageLive(_23);
        _23 = ((*_2).6: u8);
        _21 = Eq(move _22, move _23);
        switchInt(move _21) -> [0: bb42, otherwise: bb7];
    }

    bb7: {
        StorageDead(_23);
        StorageDead(_22);
        StorageLive(_24);
        StorageLive(_25);
        _25 = ((*_1).7: u8);
        StorageLive(_26);
        _26 = ((*_2).7: u8);
        _24 = Eq(move _25, move _26);
        switchInt(move _24) -> [0: bb41, otherwise: bb8];
    }

    bb8: {
        StorageDead(_26);
        StorageDead(_25);
        StorageLive(_27);
        StorageLive(_28);
        _28 = ((*_1).8: u8);
        StorageLive(_29);
        _29 = ((*_2).8: u8);
        _27 = Eq(move _28, move _29);
        switchInt(move _27) -> [0: bb40, otherwise: bb9];
    }

    bb9: {
        StorageDead(_29);
        StorageDead(_28);
        StorageLive(_30);
        StorageLive(_31);
        _31 = ((*_1).9: u8);
        StorageLive(_32);
        _32 = ((*_2).9: u8);
        _30 = Eq(move _31, move _32);
        switchInt(move _30) -> [0: bb39, otherwise: bb10];
    }

    bb10: {
        StorageDead(_32);
        StorageDead(_31);
        StorageLive(_33);
        StorageLive(_34);
        _34 = ((*_1).10: u64);
        StorageLive(_35);
        _35 = ((*_2).10: u64);
        _33 = Eq(move _34, move _35);
        switchInt(move _33) -> [0: bb38, otherwise: bb11];
    }

    bb11: {
        StorageDead(_35);
        StorageDead(_34);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &((*_1).11: state::reserve::ReserveFees);
        StorageLive(_38);
        _38 = &((*_2).11: state::reserve::ReserveFees);
        _36 = <reserve::ReserveFees as PartialEq>::eq(move _37, move _38) -> [return: bb12, unwind continue];
    }

    bb12: {
        switchInt(move _36) -> [0: bb37, otherwise: bb13];
    }

    bb13: {
        StorageDead(_38);
        StorageDead(_37);
        StorageLive(_39);
        StorageLive(_40);
        _40 = ((*_1).12: u64);
        StorageLive(_41);
        _41 = ((*_2).12: u64);
        _39 = Eq(move _40, move _41);
        switchInt(move _39) -> [0: bb36, otherwise: bb14];
    }

    bb14: {
        StorageDead(_41);
        StorageDead(_40);
        StorageLive(_42);
        StorageLive(_43);
        _43 = ((*_1).13: u64);
        StorageLive(_44);
        _44 = ((*_2).13: u64);
        _42 = Eq(move _43, move _44);
        switchInt(move _42) -> [0: bb35, otherwise: bb15];
    }

    bb15: {
        StorageDead(_44);
        StorageDead(_43);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &((*_1).14: solana_program::pubkey::Pubkey);
        StorageLive(_47);
        _47 = &((*_2).14: solana_program::pubkey::Pubkey);
        _45 = <Pubkey as PartialEq>::eq(move _46, move _47) -> [return: bb16, unwind continue];
    }

    bb16: {
        switchInt(move _45) -> [0: bb34, otherwise: bb17];
    }

    bb17: {
        StorageDead(_47);
        StorageDead(_46);
        StorageLive(_48);
        StorageLive(_49);
        _49 = ((*_1).15: u8);
        StorageLive(_50);
        _50 = ((*_2).15: u8);
        _48 = Eq(move _49, move _50);
        switchInt(move _48) -> [0: bb33, otherwise: bb18];
    }

    bb18: {
        StorageDead(_50);
        StorageDead(_49);
        StorageLive(_51);
        StorageLive(_52);
        _52 = ((*_1).16: u8);
        StorageLive(_53);
        _53 = ((*_2).16: u8);
        _51 = Eq(move _52, move _53);
        switchInt(move _51) -> [0: bb32, otherwise: bb19];
    }

    bb19: {
        StorageDead(_53);
        StorageDead(_52);
        StorageLive(_54);
        StorageLive(_55);
        _55 = ((*_1).17: u64);
        StorageLive(_56);
        _56 = ((*_2).17: u64);
        _54 = Eq(move _55, move _56);
        switchInt(move _54) -> [0: bb31, otherwise: bb20];
    }

    bb20: {
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_57);
        StorageLive(_58);
        _58 = &((*_1).18: state::reserve::ReserveType);
        StorageLive(_59);
        _59 = &((*_2).18: state::reserve::ReserveType);
        _57 = <reserve::ReserveType as PartialEq>::eq(move _58, move _59) -> [return: bb21, unwind continue];
    }

    bb21: {
        switchInt(move _57) -> [0: bb30, otherwise: bb22];
    }

    bb22: {
        StorageDead(_59);
        StorageDead(_58);
        StorageLive(_60);
        StorageLive(_61);
        _61 = ((*_1).19: i64);
        StorageLive(_62);
        _62 = ((*_2).19: i64);
        _60 = Eq(move _61, move _62);
        switchInt(move _60) -> [0: bb29, otherwise: bb23];
    }

    bb23: {
        StorageDead(_62);
        StorageDead(_61);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &((*_1).20: std::option::Option<solana_program::pubkey::Pubkey>);
        StorageLive(_65);
        _65 = &((*_2).20: std::option::Option<solana_program::pubkey::Pubkey>);
        _63 = <Option<Pubkey> as PartialEq>::eq(move _64, move _65) -> [return: bb24, unwind continue];
    }

    bb24: {
        switchInt(move _63) -> [0: bb28, otherwise: bb25];
    }

    bb25: {
        StorageDead(_65);
        StorageDead(_64);
        StorageLive(_66);
        StorageLive(_67);
        _67 = ((*_1).21: u64);
        StorageLive(_68);
        _68 = ((*_2).21: u64);
        _66 = Eq(move _67, move _68);
        switchInt(move _66) -> [0: bb27, otherwise: bb26];
    }

    bb26: {
        StorageDead(_68);
        StorageDead(_67);
        StorageLive(_69);
        _69 = ((*_1).22: u64);
        StorageLive(_70);
        _70 = ((*_2).22: u64);
        _0 = Eq(move _69, move _70);
        StorageDead(_70);
        StorageDead(_69);
        goto -> bb50;
    }

    bb27: {
        StorageDead(_68);
        StorageDead(_67);
        goto -> bb49;
    }

    bb28: {
        StorageDead(_65);
        StorageDead(_64);
        goto -> bb49;
    }

    bb29: {
        StorageDead(_62);
        StorageDead(_61);
        goto -> bb49;
    }

    bb30: {
        StorageDead(_59);
        StorageDead(_58);
        goto -> bb49;
    }

    bb31: {
        StorageDead(_56);
        StorageDead(_55);
        goto -> bb49;
    }

    bb32: {
        StorageDead(_53);
        StorageDead(_52);
        goto -> bb49;
    }

    bb33: {
        StorageDead(_50);
        StorageDead(_49);
        goto -> bb49;
    }

    bb34: {
        StorageDead(_47);
        StorageDead(_46);
        goto -> bb49;
    }

    bb35: {
        StorageDead(_44);
        StorageDead(_43);
        goto -> bb49;
    }

    bb36: {
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb49;
    }

    bb37: {
        StorageDead(_38);
        StorageDead(_37);
        goto -> bb49;
    }

    bb38: {
        StorageDead(_35);
        StorageDead(_34);
        goto -> bb49;
    }

    bb39: {
        StorageDead(_32);
        StorageDead(_31);
        goto -> bb49;
    }

    bb40: {
        StorageDead(_29);
        StorageDead(_28);
        goto -> bb49;
    }

    bb41: {
        StorageDead(_26);
        StorageDead(_25);
        goto -> bb49;
    }

    bb42: {
        StorageDead(_23);
        StorageDead(_22);
        goto -> bb49;
    }

    bb43: {
        StorageDead(_20);
        StorageDead(_19);
        goto -> bb49;
    }

    bb44: {
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb49;
    }

    bb45: {
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb49;
    }

    bb46: {
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb49;
    }

    bb47: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb49;
    }

    bb48: {
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb49;
    }

    bb49: {
        _0 = const false;
        goto -> bb50;
    }

    bb50: {
        StorageDead(_66);
        StorageDead(_63);
        StorageDead(_60);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_51);
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_24);
        StorageDead(_21);
        StorageDead(_18);
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_9);
        StorageDead(_6);
        StorageDead(_3);
        return;
    }
}
