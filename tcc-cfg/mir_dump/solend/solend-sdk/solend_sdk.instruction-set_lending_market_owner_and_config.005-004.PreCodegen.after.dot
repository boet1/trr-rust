digraph Mir_0_64 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn set_lending_market_owner_and_config(_1: solana_program::pubkey::Pubkey, _2: solana_program::pubkey::Pubkey, _3: solana_program::pubkey::Pubkey, _4: solana_program::pubkey::Pubkey, _5: state::rate_limiter::RateLimiterConfig, _6: std::option::Option&lt;solana_program::pubkey::Pubkey&gt;, _7: solana_program::pubkey::Pubkey) -&gt; solana_program::instruction::Instruction<br align="left"/>let mut _8: solana_program::pubkey::Pubkey;<br align="left"/>let mut _9: std::vec::Vec&lt;solana_program::instruction::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _10: std::boxed::Box&lt;[solana_program::instruction::AccountMeta], std::alloc::Global&gt;;<br align="left"/>let mut _11: std::boxed::Box&lt;[solana_program::instruction::AccountMeta; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _12: usize;<br align="left"/>let mut _13: usize;<br align="left"/>let mut _14: *mut u8;<br align="left"/>let mut _15: std::boxed::Box&lt;[solana_program::instruction::AccountMeta; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _16: solana_program::instruction::AccountMeta;<br align="left"/>let mut _17: solana_program::pubkey::Pubkey;<br align="left"/>let mut _18: solana_program::instruction::AccountMeta;<br align="left"/>let mut _19: solana_program::pubkey::Pubkey;<br align="left"/>let mut _20: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _21: &amp;ReErased instruction::LendingInstruction;<br align="left"/>let _22: instruction::LendingInstruction;<br align="left"/>let mut _23: solana_program::pubkey::Pubkey;<br align="left"/>let mut _24: state::rate_limiter::RateLimiterConfig;<br align="left"/>let mut _25: std::option::Option&lt;solana_program::pubkey::Pubkey&gt;;<br align="left"/>let mut _26: solana_program::pubkey::Pubkey;<br align="left"/>let mut _27: *const [solana_program::instruction::AccountMeta; 2_usize];<br align="left"/>let mut _28: *const ();<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: usize;<br align="left"/>let mut _31: usize;<br align="left"/>let mut _32: usize;<br align="left"/>let mut _33: bool;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug lending_market_pubkey =&gt; _2;<br align="left"/>debug lending_market_owner =&gt; _3;<br align="left"/>debug new_owner =&gt; _4;<br align="left"/>debug rate_limiter_config =&gt; _5;<br align="left"/>debug whitelisted_liquidator =&gt; _6;<br align="left"/>debug risk_authority =&gt; _7;<br align="left"/>>;
    bb0__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = _1<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_12 = SizeOf([solana_program::instruction::AccountMeta; 2])<br/>_13 = AlignOf([solana_program::instruction::AccountMeta; 2])<br/></td></tr><tr><td align="left">_14 = alloc::alloc::exchange_malloc(move _12, move _13)</td></tr></table>>];
    bb1__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ShallowInitBox(move _14, [solana_program::instruction::AccountMeta; 2])<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _2<br/></td></tr><tr><td align="left">_16 = AccountMeta::new(move _17, const false)</td></tr></table>>];
    bb2__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _3<br/></td></tr><tr><td align="left">_18 = AccountMeta::new_readonly(move _19, const true)</td></tr></table>>];
    bb3__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_27 = (((_15.0: std::ptr::Unique&lt;[solana_program::instruction::AccountMeta; 2]&gt;).0: std::ptr::NonNull&lt;[solana_program::instruction::AccountMeta; 2]&gt;).0: *const [solana_program::instruction::AccountMeta; 2])<br/>_28 = _27 as *const () (PtrToPtr)<br/>_29 = _28 as usize (Transmute)<br/>_30 = AlignOf([solana_program::instruction::AccountMeta; 2])<br/>_31 = Sub(_30, const 1_usize)<br/>_32 = BitAnd(_29, _31)<br/>_33 = Eq(_32, const 0_usize)<br/></td></tr><tr><td align="left">assert(_33, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _30, _29)</td></tr></table>>];
    bb4__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _4<br/>StorageLive(_24)<br/>_24 = _5<br/>StorageLive(_25)<br/>_25 = _6<br/>StorageLive(_26)<br/>_26 = _7<br/>_22 = LendingInstruction::SetLendingMarketOwnerAndConfig { new_owner: move _23, rate_limiter_config: move _24, whitelisted_liquidator: move _25, risk_authority: move _26 }<br/>_21 = &amp;_22<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_20 = LendingInstruction::pack(move _21)</td></tr></table>>];
    bb5__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_0 = Instruction { program_id: move _8, accounts: move _9, data: move _20 }<br/>StorageDead(_20)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb6__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">6 (cleanup)</td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb7__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">7 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb8__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">8 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb9__0_64 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">(*_27) = [move _16, move _18]<br/>StorageDead(_18)<br/>StorageDead(_16)<br/>_11 = move _15<br/>_10 = move _11 as std::boxed::Box&lt;[solana_program::instruction::AccountMeta]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_15)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = std::slice::&lt;impl [AccountMeta]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _10)</td></tr></table>>];
    bb0__0_64 -> bb1__0_64 [label="return"];
    bb1__0_64 -> bb2__0_64 [label="return"];
    bb1__0_64 -> bb7__0_64 [label="unwind"];
    bb2__0_64 -> bb3__0_64 [label="return"];
    bb2__0_64 -> bb7__0_64 [label="unwind"];
    bb3__0_64 -> bb9__0_64 [label="success"];
    bb4__0_64 -> bb5__0_64 [label="return"];
    bb4__0_64 -> bb6__0_64 [label="unwind"];
    bb6__0_64 -> bb8__0_64 [label="return"];
    bb7__0_64 -> bb8__0_64 [label="return"];
    bb9__0_64 -> bb4__0_64 [label="return"];
    bb9__0_64 -> bb8__0_64 [label="unwind"];
}
