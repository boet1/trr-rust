digraph Mir_0_326 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::withdraw(_1: &amp;ReErased mut state::obligation::Obligation, _2: u64, _3: usize) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let _4: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _5: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _6: &amp;ReErased mut std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _7: usize;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: u64;<br align="left"/>let _12: state::obligation::ObligationCollateral;<br align="left"/>let mut _13: &amp;ReErased mut std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _14: usize;<br align="left"/>let _15: ();<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _17: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _18: &amp;ReErased mut state::obligation::ObligationCollateral;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _24: ();<br align="left"/>let mut _25: ();<br align="left"/>let mut _26: isize;<br align="left"/>let mut _27: isize;<br align="left"/>let mut _28: isize;<br align="left"/>let mut _29: isize;<br align="left"/>let mut _30: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug withdraw_amount =&gt; _2;<br align="left"/>debug collateral_index =&gt; _3;<br align="left"/>debug collateral =&gt; _4;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>>;
    bb0__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;mut ((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/>StorageLive(_7)<br/>_7 = _3<br/></td></tr><tr><td align="left">_5 = &lt;Vec&lt;obligation::ObligationCollateral&gt; as IndexMut&lt;usize&gt;&gt;::index_mut(move _6, move _7)</td></tr></table>>];
    bb1__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>_4 = &amp;mut (*_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _2<br/>StorageLive(_11)<br/>_11 = ((*_4).1: u64)<br/>_9 = Eq(move _10, move _11)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb2__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut ((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/>StorageLive(_14)<br/>_14 = _3<br/></td></tr><tr><td align="left">_12 = Vec::&lt;obligation::ObligationCollateral&gt;::remove(move _13, move _14)</td></tr></table>>];
    bb3__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>_8 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;mut (*_4)<br/>StorageLive(_19)<br/>_19 = _2<br/></td></tr><tr><td align="left">_17 = obligation::ObligationCollateral::withdraw(move _18, move _19)</td></tr></table>>];
    bb5__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb6__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_20 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb7__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_16 as Continue).0: ())<br/>_15 = _24<br/>StorageDead(_24)<br/>_26 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>_8 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb10__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_28 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_25)<br/>_25 = ()<br/>_0 = Result::&lt;(), ProgramError&gt;::Ok(move _25)<br/>StorageDead(_25)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">return</td></tr></table>>];
    bb13__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb14__0_326 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left" balign="left">_30 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_326 -> bb1__0_326 [label="return"];
    bb1__0_326 -> bb4__0_326 [label="0"];
    bb1__0_326 -> bb2__0_326 [label="otherwise"];
    bb2__0_326 -> bb3__0_326 [label="return"];
    bb3__0_326 -> bb11__0_326 [label=""];
    bb4__0_326 -> bb5__0_326 [label="return"];
    bb5__0_326 -> bb6__0_326 [label="return"];
    bb5__0_326 -> bb13__0_326 [label="unwind"];
    bb6__0_326 -> bb7__0_326 [label="0"];
    bb6__0_326 -> bb9__0_326 [label="1"];
    bb6__0_326 -> bb8__0_326 [label="otherwise"];
    bb7__0_326 -> bb11__0_326 [label=""];
    bb9__0_326 -> bb10__0_326 [label="return"];
    bb9__0_326 -> bb14__0_326 [label="unwind"];
    bb10__0_326 -> bb12__0_326 [label=""];
    bb11__0_326 -> bb12__0_326 [label=""];
    bb14__0_326 -> bb13__0_326 [label=""];
}
