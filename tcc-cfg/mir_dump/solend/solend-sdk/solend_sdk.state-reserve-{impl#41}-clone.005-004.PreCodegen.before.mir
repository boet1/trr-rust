// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:836:10: 836:15>::clone` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:836:10: 836:15>::clone(_1: &ReserveCollateral) -> ReserveCollateral {
    debug self => _1;
    let mut _0: state::reserve::ReserveCollateral;
    let mut _2: solana_program::pubkey::Pubkey;
    let mut _3: &solana_program::pubkey::Pubkey;
    let _4: &solana_program::pubkey::Pubkey;
    let mut _5: u64;
    let mut _6: &u64;
    let _7: &u64;
    let mut _8: solana_program::pubkey::Pubkey;
    let mut _9: &solana_program::pubkey::Pubkey;
    let _10: &solana_program::pubkey::Pubkey;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: solana_program::pubkey::Pubkey);
        _3 = &(*_4);
        _2 = <Pubkey as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: u64);
        _6 = &(*_7);
        _5 = <u64 as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: solana_program::pubkey::Pubkey);
        _9 = &(*_10);
        _8 = <Pubkey as Clone>::clone(move _9) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_9);
        _0 = ReserveCollateral { mint_pubkey: move _2, mint_total_supply: move _5, supply_pubkey: move _8 };
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
