// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:641:10: 641:15>::clone` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:641:10: 641:15>::clone(_1: &ReserveLiquidity) -> ReserveLiquidity {
    debug self => _1;
    let mut _0: state::reserve::ReserveLiquidity;
    let mut _2: solana_program::pubkey::Pubkey;
    let mut _3: &solana_program::pubkey::Pubkey;
    let _4: &solana_program::pubkey::Pubkey;
    let mut _5: u8;
    let mut _6: &u8;
    let _7: &u8;
    let mut _8: solana_program::pubkey::Pubkey;
    let mut _9: &solana_program::pubkey::Pubkey;
    let _10: &solana_program::pubkey::Pubkey;
    let mut _11: solana_program::pubkey::Pubkey;
    let mut _12: &solana_program::pubkey::Pubkey;
    let _13: &solana_program::pubkey::Pubkey;
    let mut _14: solana_program::pubkey::Pubkey;
    let mut _15: &solana_program::pubkey::Pubkey;
    let _16: &solana_program::pubkey::Pubkey;
    let mut _17: u64;
    let mut _18: &u64;
    let _19: &u64;
    let mut _20: math::decimal::Decimal;
    let mut _21: &math::decimal::Decimal;
    let _22: &math::decimal::Decimal;
    let mut _23: math::decimal::Decimal;
    let mut _24: &math::decimal::Decimal;
    let _25: &math::decimal::Decimal;
    let mut _26: math::decimal::Decimal;
    let mut _27: &math::decimal::Decimal;
    let _28: &math::decimal::Decimal;
    let mut _29: math::decimal::Decimal;
    let mut _30: &math::decimal::Decimal;
    let _31: &math::decimal::Decimal;
    let mut _32: math::decimal::Decimal;
    let mut _33: &math::decimal::Decimal;
    let _34: &math::decimal::Decimal;
    let mut _35: std::option::Option<math::decimal::Decimal>;
    let mut _36: &std::option::Option<math::decimal::Decimal>;
    let _37: &std::option::Option<math::decimal::Decimal>;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: solana_program::pubkey::Pubkey);
        _3 = &(*_4);
        _2 = <Pubkey as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: u8);
        _6 = &(*_7);
        _5 = <u8 as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: solana_program::pubkey::Pubkey);
        _9 = &(*_10);
        _8 = <Pubkey as Clone>::clone(move _9) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_9);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: solana_program::pubkey::Pubkey);
        _12 = &(*_13);
        _11 = <Pubkey as Clone>::clone(move _12) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_12);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).4: solana_program::pubkey::Pubkey);
        _15 = &(*_16);
        _14 = <Pubkey as Clone>::clone(move _15) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_15);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &((*_1).5: u64);
        _18 = &(*_19);
        _17 = <u64 as Clone>::clone(move _18) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_18);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).6: math::decimal::Decimal);
        _21 = &(*_22);
        _20 = <decimal::Decimal as Clone>::clone(move _21) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_21);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &((*_1).7: math::decimal::Decimal);
        _24 = &(*_25);
        _23 = <decimal::Decimal as Clone>::clone(move _24) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_24);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &((*_1).8: math::decimal::Decimal);
        _27 = &(*_28);
        _26 = <decimal::Decimal as Clone>::clone(move _27) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_27);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &((*_1).9: math::decimal::Decimal);
        _30 = &(*_31);
        _29 = <decimal::Decimal as Clone>::clone(move _30) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_30);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &((*_1).10: math::decimal::Decimal);
        _33 = &(*_34);
        _32 = <decimal::Decimal as Clone>::clone(move _33) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_33);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &((*_1).11: std::option::Option<math::decimal::Decimal>);
        _36 = &(*_37);
        _35 = <Option<decimal::Decimal> as Clone>::clone(move _36) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_36);
        _0 = ReserveLiquidity { mint_pubkey: move _2, mint_decimals: move _5, supply_pubkey: move _8, pyth_oracle_pubkey: move _11, switchboard_oracle_pubkey: move _14, available_amount: move _17, borrowed_amount_wads: move _20, cumulative_borrow_rate_wads: move _23, accumulated_protocol_fees_wads: move _26, market_price: move _29, smoothed_market_price: move _32, extra_market_price: move _35 };
        StorageDead(_35);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_20);
        StorageDead(_17);
        StorageDead(_14);
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_31);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_19);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
