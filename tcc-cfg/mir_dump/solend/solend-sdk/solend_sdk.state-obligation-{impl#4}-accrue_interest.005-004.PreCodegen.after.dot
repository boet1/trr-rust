digraph Mir_0_356 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::ObligationLiquidity::accrue_interest(_1: &amp;ReErased mut state::obligation::ObligationLiquidity, _2: math::decimal::Decimal) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::cmp::Ordering;<br align="left"/>let mut _5: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _6: &amp;ReErased math::decimal::Decimal;<br align="left"/>let _7: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _8: i8;<br align="left"/>let mut _9: !;<br align="left"/>let _10: ();<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: solana_program::program_error::ProgramError;<br align="left"/>let mut _14: error::LendingError;<br align="left"/>let _15: math::rate::Rate;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::rate::Rate&gt;;<br align="left"/>let mut _17: std::result::Result&lt;math::rate::Rate, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _18: math::decimal::Decimal;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _20: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _21: math::decimal::Decimal;<br align="left"/>let mut _22: math::decimal::Decimal;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _27: math::decimal::Decimal;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _32: math::rate::Rate;<br align="left"/>let mut _33: math::decimal::Decimal;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _35: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _36: math::decimal::Decimal;<br align="left"/>let mut _37: math::rate::Rate;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _42: math::decimal::Decimal;<br align="left"/>let mut _43: math::decimal::Decimal;<br align="left"/>let mut _44: ();<br align="left"/>let mut _45: bool;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug cumulative_borrow_rate_wads =&gt; _2;<br align="left"/>debug compounded_interest_rate =&gt; _15;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>>;
    bb0__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_45 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;_2<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;((*_1).1: math::decimal::Decimal)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_4 = &lt;decimal::Decimal as Ord&gt;::cmp(move _5, move _6)</td></tr></table>>];
    bb1__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb2__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _2<br/>StorageLive(_22)<br/>_22 = ((*_1).1: math::decimal::Decimal)<br/></td></tr><tr><td align="left">_20 = &lt;decimal::Decimal as common::TryDiv&lt;decimal::Decimal&gt;&gt;::try_div(move _21, move _22)</td></tr></table>>];
    bb3__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = const &quot;Interest rate cannot be negative&quot;<br/>_11 = &amp;(*_12)<br/></td></tr><tr><td align="left">_10 = solana_program::log::sol_log(move _11)</td></tr></table>>];
    bb5__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = LendingError::NegativeInterestRate<br/></td></tr><tr><td align="left">_13 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _14)</td></tr></table>>];
    bb6__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_3 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb9__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_45 = const true<br/>StorageDead(_20)<br/>_23 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb10__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_19 as Continue).0: math::decimal::Decimal)<br/>_18 = _27<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_17 = &lt;decimal::Decimal as TryInto&lt;rate::Rate&gt;&gt;::try_into(move _18)</td></tr></table>>];
    bb11__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_26)<br/>_26 = move _24<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb12__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;Result&lt;rate::Rate, ProgramError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb14__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_28 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb15__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_16 as Continue).0: math::rate::Rate)<br/>_15 = _32<br/>StorageDead(_32)<br/>_46 = discriminant(_16)<br/>_48 = discriminant(_19)<br/>_45 = const false<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = ((*_1).2: math::decimal::Decimal)<br/>StorageLive(_37)<br/>_37 = _15<br/></td></tr><tr><td align="left">_35 = &lt;decimal::Decimal as common::TryMul&lt;rate::Rate&gt;&gt;::try_mul(move _36, move _37)</td></tr></table>>];
    bb16__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_31)<br/>_31 = move _29<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb17__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>_54 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb19__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_38 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb20__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_34 as Continue).0: math::decimal::Decimal)<br/>_33 = _42<br/>StorageDead(_42)<br/>((*_1).2: math::decimal::Decimal) = move _33<br/>StorageDead(_33)<br/>_50 = discriminant(_34)<br/>StorageDead(_34)<br/>StorageLive(_43)<br/>_43 = _2<br/>((*_1).1: math::decimal::Decimal) = move _43<br/>StorageDead(_43)<br/>_3 = const ()<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = move ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_41)<br/>_41 = move _39<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb22__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_33)<br/>_52 = discriminant(_34)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_44)<br/>_44 = ()<br/>_0 = Result::&lt;(), ProgramError&gt;::Ok(move _44)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_56 = discriminant(_19)<br/>_45 = const false<br/>StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">return</td></tr></table>>];
    bb28__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb29__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left" balign="left">_58 = discriminant(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left" balign="left">_59 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_356 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left" balign="left">_60 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_356 -> bb1__0_356 [label="return"];
    bb1__0_356 -> bb4__0_356 [label="255"];
    bb1__0_356 -> bb7__0_356 [label="0"];
    bb1__0_356 -> bb2__0_356 [label="1"];
    bb1__0_356 -> bb3__0_356 [label="otherwise"];
    bb2__0_356 -> bb8__0_356 [label="return"];
    bb4__0_356 -> bb5__0_356 [label="return"];
    bb5__0_356 -> bb6__0_356 [label="return"];
    bb6__0_356 -> bb26__0_356 [label=""];
    bb7__0_356 -> bb23__0_356 [label=""];
    bb8__0_356 -> bb9__0_356 [label="return"];
    bb8__0_356 -> bb28__0_356 [label="unwind"];
    bb9__0_356 -> bb10__0_356 [label="0"];
    bb9__0_356 -> bb11__0_356 [label="1"];
    bb9__0_356 -> bb3__0_356 [label="otherwise"];
    bb10__0_356 -> bb13__0_356 [label="return"];
    bb10__0_356 -> bb31__0_356 [label="unwind"];
    bb11__0_356 -> bb12__0_356 [label="return"];
    bb11__0_356 -> bb31__0_356 [label="unwind"];
    bb12__0_356 -> bb24__0_356 [label=""];
    bb13__0_356 -> bb14__0_356 [label="return"];
    bb13__0_356 -> bb31__0_356 [label="unwind"];
    bb14__0_356 -> bb15__0_356 [label="0"];
    bb14__0_356 -> bb16__0_356 [label="1"];
    bb14__0_356 -> bb3__0_356 [label="otherwise"];
    bb15__0_356 -> bb18__0_356 [label="return"];
    bb16__0_356 -> bb17__0_356 [label="return"];
    bb16__0_356 -> bb30__0_356 [label="unwind"];
    bb17__0_356 -> bb24__0_356 [label=""];
    bb18__0_356 -> bb19__0_356 [label="return"];
    bb18__0_356 -> bb28__0_356 [label="unwind"];
    bb19__0_356 -> bb20__0_356 [label="0"];
    bb19__0_356 -> bb21__0_356 [label="1"];
    bb19__0_356 -> bb3__0_356 [label="otherwise"];
    bb20__0_356 -> bb23__0_356 [label=""];
    bb21__0_356 -> bb22__0_356 [label="return"];
    bb21__0_356 -> bb29__0_356 [label="unwind"];
    bb22__0_356 -> bb25__0_356 [label=""];
    bb23__0_356 -> bb27__0_356 [label=""];
    bb24__0_356 -> bb25__0_356 [label=""];
    bb25__0_356 -> bb26__0_356 [label=""];
    bb26__0_356 -> bb27__0_356 [label=""];
    bb29__0_356 -> bb28__0_356 [label=""];
    bb30__0_356 -> bb31__0_356 [label=""];
    bb31__0_356 -> bb28__0_356 [label=""];
}
