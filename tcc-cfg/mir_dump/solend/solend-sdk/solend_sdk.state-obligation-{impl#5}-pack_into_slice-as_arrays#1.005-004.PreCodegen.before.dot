digraph Mir_0_2077 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;obligation::Obligation as Pack&gt;::pack_into_slice::as_arrays(_1: &amp;ReErased mut [T/#0; 88_usize]) -&gt; (&amp;ReErased mut [T/#0; 32_usize], &amp;ReErased mut [T/#0; 8_usize], &amp;ReErased mut [T/#0; 16_usize], &amp;ReErased mut [T/#0; 16_usize], &amp;ReErased mut [T/#0; 16_usize])<br align="left"/>let mut _2: *mut T/#0;<br align="left"/>let mut _3: &amp;ReErased mut [T/#0];<br align="left"/>let mut _4: &amp;ReErased mut [T/#0; 88_usize];<br align="left"/>let mut _5: &amp;ReErased mut [T/#0; 32_usize];<br align="left"/>let mut _6: &amp;ReErased mut [T/#0; 32_usize];<br align="left"/>let _7: &amp;ReErased mut [T/#0; 32_usize];<br align="left"/>let mut _8: *mut [T/#0; 32_usize];<br align="left"/>let mut _9: *mut T/#0;<br align="left"/>let mut _10: *mut T/#0;<br align="left"/>let mut _11: *mut T/#0;<br align="left"/>let mut _12: &amp;ReErased mut [T/#0; 8_usize];<br align="left"/>let mut _13: &amp;ReErased mut [T/#0; 8_usize];<br align="left"/>let _14: &amp;ReErased mut [T/#0; 8_usize];<br align="left"/>let mut _15: *mut [T/#0; 8_usize];<br align="left"/>let mut _16: *mut T/#0;<br align="left"/>let mut _17: *mut T/#0;<br align="left"/>let mut _18: *mut T/#0;<br align="left"/>let mut _19: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let mut _20: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let _21: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let mut _22: *mut [T/#0; 16_usize];<br align="left"/>let mut _23: *mut T/#0;<br align="left"/>let mut _24: *mut T/#0;<br align="left"/>let mut _25: *mut T/#0;<br align="left"/>let mut _26: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let mut _27: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let _28: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let mut _29: *mut [T/#0; 16_usize];<br align="left"/>let mut _30: *mut T/#0;<br align="left"/>let mut _31: *mut T/#0;<br align="left"/>let mut _32: *mut T/#0;<br align="left"/>let mut _33: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let mut _34: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let _35: &amp;ReErased mut [T/#0; 16_usize];<br align="left"/>let mut _36: *mut [T/#0; 16_usize];<br align="left"/>let mut _37: *mut T/#0;<br align="left"/>let mut _38: *mut T/#0;<br align="left"/>let mut _39: *mut T/#0;<br align="left"/>debug a =&gt; _1;<br align="left"/>debug p =&gt; _2;<br align="left"/>debug aref =&gt; _7;<br align="left"/>debug aref =&gt; _14;<br align="left"/>debug aref =&gt; _21;<br align="left"/>debug aref =&gt; _28;<br align="left"/>debug aref =&gt; _35;<br align="left"/>>;
    bb0__0_2077 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;mut (*_1)<br/>_3 = move _4 as &amp;mut [T] (PointerCoercion(Unsize))<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">_2 = core::slice::&lt;impl [T]&gt;::as_mut_ptr(move _3)</td></tr></table>>];
    bb1__0_2077 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _2<br/>_8 = move _9 as *mut [T; 32] (PtrToPtr)<br/>StorageDead(_9)<br/>_7 = &amp;mut (*_8)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _2<br/></td></tr><tr><td align="left">_10 = std::ptr::mut_ptr::&lt;impl *mut T&gt;::add(move _11, const _)</td></tr></table>>];
    bb2__0_2077 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_2 = move _10<br/>StorageDead(_10)<br/>_6 = &amp;mut (*_7)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>_5 = &amp;mut (*_6)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _2<br/>_15 = move _16 as *mut [T; 8] (PtrToPtr)<br/>StorageDead(_16)<br/>_14 = &amp;mut (*_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/></td></tr><tr><td align="left">_17 = std::ptr::mut_ptr::&lt;impl *mut T&gt;::add(move _18, const 8_usize)</td></tr></table>>];
    bb3__0_2077 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_2 = move _17<br/>StorageDead(_17)<br/>_13 = &amp;mut (*_14)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>_12 = &amp;mut (*_13)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _2<br/>_22 = move _23 as *mut [T; 16] (PtrToPtr)<br/>StorageDead(_23)<br/>_21 = &amp;mut (*_22)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = _2<br/></td></tr><tr><td align="left">_24 = std::ptr::mut_ptr::&lt;impl *mut T&gt;::add(move _25, const 16_usize)</td></tr></table>>];
    bb4__0_2077 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_2 = move _24<br/>StorageDead(_24)<br/>_20 = &amp;mut (*_21)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>_19 = &amp;mut (*_20)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _2<br/>_29 = move _30 as *mut [T; 16] (PtrToPtr)<br/>StorageDead(_30)<br/>_28 = &amp;mut (*_29)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _2<br/></td></tr><tr><td align="left">_31 = std::ptr::mut_ptr::&lt;impl *mut T&gt;::add(move _32, const 16_usize)</td></tr></table>>];
    bb5__0_2077 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_2 = move _31<br/>StorageDead(_31)<br/>_27 = &amp;mut (*_28)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>_26 = &amp;mut (*_27)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _2<br/>_36 = move _37 as *mut [T; 16] (PtrToPtr)<br/>StorageDead(_37)<br/>_35 = &amp;mut (*_36)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _2<br/></td></tr><tr><td align="left">_38 = std::ptr::mut_ptr::&lt;impl *mut T&gt;::add(move _39, const 16_usize)</td></tr></table>>];
    bb6__0_2077 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_2 = move _38<br/>StorageDead(_38)<br/>_34 = &amp;mut (*_35)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>_33 = &amp;mut (*_34)<br/>_0 = (move _5, move _12, move _19, move _26, move _33)<br/>StorageDead(_33)<br/>StorageDead(_26)<br/>StorageDead(_19)<br/>StorageDead(_12)<br/>StorageDead(_5)<br/>StorageDead(_2)<br/>StorageDead(_34)<br/>StorageDead(_27)<br/>StorageDead(_20)<br/>StorageDead(_13)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2077 -> bb1__0_2077 [label="return"];
    bb1__0_2077 -> bb2__0_2077 [label="return"];
    bb2__0_2077 -> bb3__0_2077 [label="return"];
    bb3__0_2077 -> bb4__0_2077 [label="return"];
    bb4__0_2077 -> bb5__0_2077 [label="return"];
    bb5__0_2077 -> bb6__0_2077 [label="return"];
}
