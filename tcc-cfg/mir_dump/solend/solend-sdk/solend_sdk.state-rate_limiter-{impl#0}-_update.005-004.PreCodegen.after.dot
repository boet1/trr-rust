digraph Mir_0_391 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn rate_limiter::RateLimiter::_update(_1: &amp;ReErased mut state::rate_limiter::RateLimiter, _2: u64) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: !;<br align="left"/>let _8: ();<br align="left"/>let mut _9: &amp;ReErased str;<br align="left"/>let _10: &amp;ReErased str;<br align="left"/>let mut _11: solana_program::program_error::ProgramError;<br align="left"/>let mut _12: error::LendingError;<br align="left"/>let _13: u64;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: (u64, bool);<br align="left"/>let _20: ();<br align="left"/>let mut _21: std::cmp::Ordering;<br align="left"/>let mut _22: &amp;ReErased u64;<br align="left"/>let mut _23: &amp;ReErased u64;<br align="left"/>let _24: &amp;ReErased u64;<br align="left"/>let _25: u64;<br align="left"/>let mut _26: u64;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: (u64, bool);<br align="left"/>let mut _29: i8;<br align="left"/>let mut _30: math::decimal::Decimal;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: math::decimal::Decimal;<br align="left"/>let mut _33: math::decimal::Decimal;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: math::decimal::Decimal;<br align="left"/>let mut _36: ();<br align="left"/>debug self =&gt; _1;<br align="left"/>debug cur_slot =&gt; _2;<br align="left"/>debug cur_slot_start =&gt; _13;<br align="left"/>>;
    bb0__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _2<br/>StorageLive(_6)<br/>_6 = ((*_1).2: u64)<br/>_4 = Lt(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = const &quot;Current slot is less than window start, which is impossible&quot;<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_8 = solana_program::log::sol_log(move _9)</td></tr></table>>];
    bb2__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = LendingError::InvalidAccountInput<br/></td></tr><tr><td align="left">_11 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _12)</td></tr></table>>];
    bb3__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _11)<br/>StorageDead(_11)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _2<br/>StorageLive(_16)<br/>_16 = (((*_1).0: state::rate_limiter::RateLimiterConfig).0: u64)<br/>_17 = Eq(_16, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _17, &quot;attempt to divide `{}` by zero&quot;, _15)</td></tr></table>>];
    bb5__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_14 = Div(move _15, move _16)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_18)<br/>_18 = (((*_1).0: state::rate_limiter::RateLimiterConfig).0: u64)<br/>_19 = CheckedMul(_14, _18)<br/></td></tr><tr><td align="left">assert(!move (_19.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _14, move _18)</td></tr></table>>];
    bb6__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_13 = move (_19.0: u64)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;_13<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = ((*_1).2: u64)<br/>StorageLive(_27)<br/>_27 = (((*_1).0: state::rate_limiter::RateLimiterConfig).0: u64)<br/>_28 = CheckedAdd(_26, _27)<br/></td></tr><tr><td align="left">assert(!move (_28.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _26, move _27)</td></tr></table>>];
    bb7__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_25 = move (_28.0: u64)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/></td></tr><tr><td align="left">_21 = &lt;u64 as Ord&gt;::cmp(move _22, move _23)</td></tr></table>>];
    bb8__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>_29 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb9__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/></td></tr><tr><td align="left">_33 = decimal::Decimal::zero()</td></tr></table>>];
    bb10__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb11__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_20 = ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((*_1).3: math::decimal::Decimal)<br/>((*_1).1: math::decimal::Decimal) = move _30<br/>StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = _13<br/>((*_1).2: u64) = move _31<br/>StorageDead(_31)<br/>StorageLive(_32)<br/></td></tr><tr><td align="left">_32 = decimal::Decimal::zero()</td></tr></table>>];
    bb13__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">((*_1).3: math::decimal::Decimal) = move _32<br/>StorageDead(_32)<br/>_20 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">((*_1).1: math::decimal::Decimal) = move _33<br/>StorageDead(_33)<br/>StorageLive(_34)<br/>_34 = _13<br/>((*_1).2: u64) = move _34<br/>StorageDead(_34)<br/>StorageLive(_35)<br/></td></tr><tr><td align="left">_35 = decimal::Decimal::zero()</td></tr></table>>];
    bb15__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">((*_1).3: math::decimal::Decimal) = move _35<br/>StorageDead(_35)<br/>_20 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_36)<br/>_36 = ()<br/>_0 = Result::&lt;(), ProgramError&gt;::Ok(move _36)<br/>StorageDead(_36)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_391 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_391 -> bb4__0_391 [label="0"];
    bb0__0_391 -> bb1__0_391 [label="otherwise"];
    bb1__0_391 -> bb2__0_391 [label="return"];
    bb2__0_391 -> bb3__0_391 [label="return"];
    bb3__0_391 -> bb17__0_391 [label=""];
    bb4__0_391 -> bb5__0_391 [label="success"];
    bb5__0_391 -> bb6__0_391 [label="success"];
    bb6__0_391 -> bb7__0_391 [label="success"];
    bb7__0_391 -> bb8__0_391 [label="return"];
    bb8__0_391 -> bb11__0_391 [label="255"];
    bb8__0_391 -> bb12__0_391 [label="0"];
    bb8__0_391 -> bb9__0_391 [label="1"];
    bb8__0_391 -> bb10__0_391 [label="otherwise"];
    bb9__0_391 -> bb14__0_391 [label="return"];
    bb11__0_391 -> bb16__0_391 [label=""];
    bb12__0_391 -> bb13__0_391 [label="return"];
    bb13__0_391 -> bb16__0_391 [label=""];
    bb14__0_391 -> bb15__0_391 [label="return"];
    bb15__0_391 -> bb16__0_391 [label=""];
    bb16__0_391 -> bb17__0_391 [label=""];
}
