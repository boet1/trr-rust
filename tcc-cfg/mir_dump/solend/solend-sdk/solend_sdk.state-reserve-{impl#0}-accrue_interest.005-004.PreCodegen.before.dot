digraph Mir_0_467 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::accrue_interest(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _6: &amp;ReErased state::last_update::LastUpdate;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _12: u64;<br align="left"/>let _13: ();<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: u64;<br align="left"/>let _16: math::rate::Rate;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::rate::Rate&gt;;<br align="left"/>let mut _18: std::result::Result&lt;math::rate::Rate, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _19: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _24: math::rate::Rate;<br align="left"/>let _25: math::rate::Rate;<br align="left"/>let mut _26: u8;<br align="left"/>let _27: ();<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _29: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _30: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _31: math::rate::Rate;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: math::rate::Rate;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _38: ();<br align="left"/>let mut _39: ();<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug current_slot =&gt; _2;<br align="left"/>debug slots_elapsed =&gt; _3;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug current_borrow_rate =&gt; _16;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug take_rate =&gt; _25;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>>;
    bb0__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;((*_1).1: state::last_update::LastUpdate)<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_5 = last_update::LastUpdate::slots_elapsed(move _6, move _7)</td></tr></table>>];
    bb1__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Result&lt;u64, ProgramError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: u64)<br/>_3 = _12<br/>StorageDead(_12)<br/>_40 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _3<br/>_14 = Gt(move _15, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb4__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_50 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_1)<br/></td></tr><tr><td align="left">_18 = reserve::Reserve::current_borrow_rate(move _19)</td></tr></table>>];
    bb8__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;Result&lt;rate::Rate, ProgramError&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb9__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_20 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_17 as Continue).0: math::rate::Rate)<br/>_16 = _24<br/>StorageDead(_24)<br/>_42 = discriminant(_17)<br/>StorageDead(_17)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = (((*_1).5: state::reserve::ReserveConfig).16: u8)<br/></td></tr><tr><td align="left">_25 = rate::Rate::from_percent(move _26)</td></tr></table>>];
    bb11__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_48 = discriminant(_17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;mut ((*_1).3: state::reserve::ReserveLiquidity)<br/>StorageLive(_31)<br/>_31 = _16<br/>StorageLive(_32)<br/>_32 = _3<br/>StorageLive(_33)<br/>_33 = _25<br/></td></tr><tr><td align="left">_29 = ReserveLiquidity::compound_interest(move _30, move _31, move _32, move _33)</td></tr></table>>];
    bb14__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb15__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_34 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb16__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_28 as Continue).0: ())<br/>_27 = _38<br/>StorageDead(_38)<br/>_44 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>_13 = const ()<br/>StorageDead(_25)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_37)<br/>_37 = move _35<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb18__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>_46 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_39)<br/>_39 = ()<br/>_0 = Result::&lt;(), ProgramError&gt;::Ok(move _39)<br/>StorageDead(_39)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb24__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb25__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left" balign="left">_52 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_53 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_467 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_54 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_467 -> bb1__0_467 [label="return"];
    bb1__0_467 -> bb2__0_467 [label="return"];
    bb1__0_467 -> bb24__0_467 [label="unwind"];
    bb2__0_467 -> bb3__0_467 [label="0"];
    bb2__0_467 -> bb5__0_467 [label="1"];
    bb2__0_467 -> bb4__0_467 [label="otherwise"];
    bb3__0_467 -> bb19__0_467 [label="0"];
    bb3__0_467 -> bb7__0_467 [label="otherwise"];
    bb5__0_467 -> bb6__0_467 [label="return"];
    bb5__0_467 -> bb27__0_467 [label="unwind"];
    bb6__0_467 -> bb22__0_467 [label=""];
    bb7__0_467 -> bb8__0_467 [label="return"];
    bb8__0_467 -> bb9__0_467 [label="return"];
    bb8__0_467 -> bb24__0_467 [label="unwind"];
    bb9__0_467 -> bb10__0_467 [label="0"];
    bb9__0_467 -> bb11__0_467 [label="1"];
    bb9__0_467 -> bb4__0_467 [label="otherwise"];
    bb10__0_467 -> bb13__0_467 [label="return"];
    bb11__0_467 -> bb12__0_467 [label="return"];
    bb11__0_467 -> bb26__0_467 [label="unwind"];
    bb12__0_467 -> bb21__0_467 [label=""];
    bb13__0_467 -> bb14__0_467 [label="return"];
    bb14__0_467 -> bb15__0_467 [label="return"];
    bb14__0_467 -> bb24__0_467 [label="unwind"];
    bb15__0_467 -> bb16__0_467 [label="0"];
    bb15__0_467 -> bb17__0_467 [label="1"];
    bb15__0_467 -> bb4__0_467 [label="otherwise"];
    bb16__0_467 -> bb20__0_467 [label=""];
    bb17__0_467 -> bb18__0_467 [label="return"];
    bb17__0_467 -> bb25__0_467 [label="unwind"];
    bb18__0_467 -> bb21__0_467 [label=""];
    bb19__0_467 -> bb20__0_467 [label=""];
    bb20__0_467 -> bb23__0_467 [label=""];
    bb21__0_467 -> bb22__0_467 [label=""];
    bb22__0_467 -> bb23__0_467 [label=""];
    bb25__0_467 -> bb24__0_467 [label=""];
    bb26__0_467 -> bb24__0_467 [label=""];
    bb27__0_467 -> bb24__0_467 [label=""];
}
