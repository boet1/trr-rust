// MIR for `rate::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1633:3: 1633:41>::cmp` after PreCodegen

fn rate::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1633:3: 1633:41>::cmp(_1: &U128, _2: &U128) -> std::cmp::Ordering {
    debug self => _1;
    debug other => _2;
    let mut _0: std::cmp::Ordering;
    let mut _3: std::iter::Rev<std::slice::Iter<'_, u64>>;
    let mut _4: std::slice::Iter<'_, u64>;
    let mut _5: &[u64];
    let _6: &[u64];
    let mut _7: &math::rate::U128;
    let mut _8: std::iter::Rev<std::slice::Iter<'_, u64>>;
    let mut _9: std::slice::Iter<'_, u64>;
    let mut _10: &[u64];
    let _11: &[u64];
    let mut _12: &math::rate::U128;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &(*_1);
        _6 = <U128 as AsRef<[u64]>>::as_ref(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        _5 = &(*_6);
        StorageDead(_7);
        _4 = core::slice::<impl [u64]>::iter(move _5) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_5);
        _3 = <std::slice::Iter<'_, u64> as Iterator>::rev(move _4) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_4);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &(*_2);
        _11 = <U128 as AsRef<[u64]>>::as_ref(move _12) -> [return: bb4, unwind continue];
    }

    bb4: {
        _10 = &(*_11);
        StorageDead(_12);
        _9 = core::slice::<impl [u64]>::iter(move _10) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_10);
        _8 = <std::slice::Iter<'_, u64> as Iterator>::rev(move _9) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_9);
        _0 = <Rev<std::slice::Iter<'_, u64>> as Iterator>::cmp::<Rev<std::slice::Iter<'_, u64>>>(move _3, move _8) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_8);
        StorageDead(_3);
        StorageDead(_11);
        StorageDead(_6);
        return;
    }
}
