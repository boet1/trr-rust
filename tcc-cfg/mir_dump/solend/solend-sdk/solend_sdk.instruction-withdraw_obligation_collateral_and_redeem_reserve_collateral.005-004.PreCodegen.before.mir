// MIR for `withdraw_obligation_collateral_and_redeem_reserve_collateral` before PreCodegen

fn withdraw_obligation_collateral_and_redeem_reserve_collateral(_1: Pubkey, _2: u64, _3: Pubkey, _4: Pubkey, _5: Pubkey, _6: Pubkey, _7: Pubkey, _8: Pubkey, _9: Pubkey, _10: Pubkey, _11: Pubkey, _12: Pubkey, _13: Vec<Pubkey>) -> Instruction {
    debug program_id => _1;
    debug collateral_amount => _2;
    debug source_collateral_pubkey => _3;
    debug destination_collateral_pubkey => _4;
    debug withdraw_reserve_pubkey => _5;
    debug obligation_pubkey => _6;
    debug lending_market_pubkey => _7;
    debug destination_liquidity_pubkey => _8;
    debug reserve_collateral_mint_pubkey => _9;
    debug reserve_liquidity_supply_pubkey => _10;
    debug obligation_owner_pubkey => _11;
    debug user_transfer_authority_pubkey => _12;
    debug collateral_reserves => _13;
    let mut _0: solana_program::instruction::Instruction;
    let _14: solana_program::pubkey::Pubkey;
    let _15: u8;
    let mut _16: (solana_program::pubkey::Pubkey, u8);
    let mut _17: &[&[u8]];
    let mut _18: &[&[u8]; 1];
    let _19: &[&[u8]; 1];
    let _20: [&[u8]; 1];
    let mut _21: &[u8];
    let _22: &[u8];
    let _23: &[u8];
    let mut _24: &[u8; 32];
    let _25: [u8; 32];
    let mut _26: solana_program::pubkey::Pubkey;
    let mut _27: std::ops::RangeTo<usize>;
    let mut _28: &solana_program::pubkey::Pubkey;
    let _29: &solana_program::pubkey::Pubkey;
    let mut _31: std::boxed::Box<[solana_program::instruction::AccountMeta]>;
    let mut _32: std::boxed::Box<[solana_program::instruction::AccountMeta; 12]>;
    let mut _33: usize;
    let mut _34: usize;
    let mut _35: *mut u8;
    let mut _36: std::boxed::Box<[solana_program::instruction::AccountMeta; 12]>;
    let mut _37: solana_program::instruction::AccountMeta;
    let mut _38: solana_program::pubkey::Pubkey;
    let mut _39: solana_program::instruction::AccountMeta;
    let mut _40: solana_program::pubkey::Pubkey;
    let mut _41: solana_program::instruction::AccountMeta;
    let mut _42: solana_program::pubkey::Pubkey;
    let mut _43: solana_program::instruction::AccountMeta;
    let mut _44: solana_program::pubkey::Pubkey;
    let mut _45: solana_program::instruction::AccountMeta;
    let mut _46: solana_program::pubkey::Pubkey;
    let mut _47: solana_program::instruction::AccountMeta;
    let mut _48: solana_program::pubkey::Pubkey;
    let mut _49: solana_program::instruction::AccountMeta;
    let mut _50: solana_program::pubkey::Pubkey;
    let mut _51: solana_program::instruction::AccountMeta;
    let mut _52: solana_program::pubkey::Pubkey;
    let mut _53: solana_program::instruction::AccountMeta;
    let mut _54: solana_program::pubkey::Pubkey;
    let mut _55: solana_program::instruction::AccountMeta;
    let mut _56: solana_program::pubkey::Pubkey;
    let mut _57: solana_program::instruction::AccountMeta;
    let mut _58: solana_program::pubkey::Pubkey;
    let mut _59: solana_program::instruction::AccountMeta;
    let mut _60: solana_program::pubkey::Pubkey;
    let _61: ();
    let mut _62: &mut std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _63: std::iter::Map<std::vec::IntoIter<solana_program::pubkey::Pubkey>, {closure@token-lending\sdk\src\instruction.rs:1454:18: 1454:26}>;
    let mut _64: std::vec::IntoIter<solana_program::pubkey::Pubkey>;
    let mut _65: std::vec::Vec<solana_program::pubkey::Pubkey>;
    let mut _66: {closure@token-lending\sdk\src\instruction.rs:1454:18: 1454:26};
    let mut _67: solana_program::pubkey::Pubkey;
    let mut _68: std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _69: std::vec::Vec<u8>;
    let mut _70: &instruction::LendingInstruction;
    let _71: instruction::LendingInstruction;
    let mut _72: u64;
    let mut _73: bool;
    let mut _74: bool;
    let mut _75: *const [solana_program::instruction::AccountMeta; 12];
    scope 1 {
        debug lending_market_authority_pubkey => _14;
        debug _bump_seed => _15;
        let mut _30: std::vec::Vec<solana_program::instruction::AccountMeta>;
        let mut _76: *const ();
        let mut _77: usize;
        let mut _78: usize;
        let mut _79: usize;
        let mut _80: usize;
        let mut _81: bool;
        scope 2 {
            debug accounts => _30;
        }
        scope 3 {
        }
    }

    bb0: {
        _74 = const false;
        _73 = const false;
        _74 = const true;
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = _7;
        _25 = Pubkey::to_bytes(move _26) -> [return: bb1, unwind: bb29];
    }

    bb1: {
        _24 = &_25;
        StorageDead(_26);
        StorageLive(_27);
        _27 = RangeTo::<usize> { end: const _ };
        _23 = <[u8; 32] as Index<RangeTo<usize>>>::index(move _24, move _27) -> [return: bb2, unwind: bb29];
    }

    bb2: {
        StorageDead(_27);
        StorageDead(_24);
        _22 = &(*_23);
        _21 = &(*_22);
        _20 = [move _21];
        StorageDead(_21);
        _19 = &_20;
        _18 = &(*_19);
        _17 = move _18 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_18);
        StorageLive(_28);
        StorageLive(_29);
        _29 = &_1;
        _28 = &(*_29);
        _16 = Pubkey::find_program_address(move _17, move _28) -> [return: bb3, unwind: bb29];
    }

    bb3: {
        StorageDead(_28);
        StorageDead(_17);
        StorageLive(_14);
        _14 = (_16.0: solana_program::pubkey::Pubkey);
        StorageLive(_15);
        _15 = (_16.1: u8);
        StorageDead(_29);
        StorageDead(_25);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_16);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        _33 = SizeOf([solana_program::instruction::AccountMeta; 12]);
        _34 = AlignOf([solana_program::instruction::AccountMeta; 12]);
        _35 = alloc::alloc::exchange_malloc(move _33, move _34) -> [return: bb4, unwind: bb29];
    }

    bb4: {
        StorageLive(_36);
        _36 = ShallowInitBox(move _35, [solana_program::instruction::AccountMeta; 12]);
        StorageLive(_37);
        StorageLive(_38);
        _38 = _3;
        _37 = AccountMeta::new(move _38, const false) -> [return: bb5, unwind: bb24];
    }

    bb5: {
        StorageDead(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = _4;
        _39 = AccountMeta::new(move _40, const false) -> [return: bb6, unwind: bb24];
    }

    bb6: {
        StorageDead(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = _5;
        _41 = AccountMeta::new(move _42, const false) -> [return: bb7, unwind: bb24];
    }

    bb7: {
        StorageDead(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = _6;
        _43 = AccountMeta::new(move _44, const false) -> [return: bb8, unwind: bb24];
    }

    bb8: {
        StorageDead(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = _7;
        _45 = AccountMeta::new(move _46, const false) -> [return: bb9, unwind: bb24];
    }

    bb9: {
        StorageDead(_46);
        StorageLive(_47);
        StorageLive(_48);
        _48 = _14;
        _47 = AccountMeta::new_readonly(move _48, const false) -> [return: bb10, unwind: bb24];
    }

    bb10: {
        StorageDead(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = _8;
        _49 = AccountMeta::new(move _50, const false) -> [return: bb11, unwind: bb24];
    }

    bb11: {
        StorageDead(_50);
        StorageLive(_51);
        StorageLive(_52);
        _52 = _9;
        _51 = AccountMeta::new(move _52, const false) -> [return: bb12, unwind: bb24];
    }

    bb12: {
        StorageDead(_52);
        StorageLive(_53);
        StorageLive(_54);
        _54 = _10;
        _53 = AccountMeta::new(move _54, const false) -> [return: bb13, unwind: bb24];
    }

    bb13: {
        StorageDead(_54);
        StorageLive(_55);
        StorageLive(_56);
        _56 = _11;
        _55 = AccountMeta::new_readonly(move _56, const true) -> [return: bb14, unwind: bb24];
    }

    bb14: {
        StorageDead(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = _12;
        _57 = AccountMeta::new_readonly(move _58, const true) -> [return: bb15, unwind: bb24];
    }

    bb15: {
        StorageDead(_58);
        StorageLive(_59);
        StorageLive(_60);
        _60 = spl_token::id() -> [return: bb16, unwind: bb24];
    }

    bb16: {
        _59 = AccountMeta::new_readonly(move _60, const false) -> [return: bb17, unwind: bb24];
    }

    bb17: {
        StorageDead(_60);
        _75 = (((_36.0: std::ptr::Unique<[solana_program::instruction::AccountMeta; 12]>).0: std::ptr::NonNull<[solana_program::instruction::AccountMeta; 12]>).0: *const [solana_program::instruction::AccountMeta; 12]);
        _76 = _75 as *const () (PtrToPtr);
        _77 = _76 as usize (Transmute);
        _78 = AlignOf([solana_program::instruction::AccountMeta; 12]);
        _79 = Sub(_78, const 1_usize);
        _80 = BitAnd(_77, _79);
        _81 = Eq(_80, const 0_usize);
        assert(_81, "misaligned pointer dereference: address must be a multiple of {} but is {}", _78, _77) -> [success: bb30, unwind unreachable];
    }

    bb18: {
        _73 = const true;
        StorageDead(_31);
        StorageLive(_61);
        StorageLive(_62);
        _62 = &mut _30;
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        _74 = const false;
        _65 = move _13;
        _64 = <Vec<Pubkey> as IntoIterator>::into_iter(move _65) -> [return: bb19, unwind: bb27];
    }

    bb19: {
        StorageDead(_65);
        StorageLive(_66);
        _66 = {closure@token-lending\sdk\src\instruction.rs:1454:18: 1454:26};
        _63 = <std::vec::IntoIter<Pubkey> as Iterator>::map::<AccountMeta, {closure@token-lending\sdk\src\instruction.rs:1454:18: 1454:26}>(move _64, move _66) -> [return: bb20, unwind: bb27];
    }

    bb20: {
        StorageDead(_66);
        StorageDead(_64);
        _61 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Map<std::vec::IntoIter<Pubkey>, {closure@token-lending\sdk\src\instruction.rs:1454:18: 1454:26}>>(move _62, move _63) -> [return: bb21, unwind: bb27];
    }

    bb21: {
        StorageDead(_63);
        StorageDead(_62);
        StorageDead(_61);
        StorageLive(_67);
        _67 = _1;
        StorageLive(_68);
        _73 = const false;
        _68 = move _30;
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        _72 = _2;
        _71 = LendingInstruction::WithdrawObligationCollateralAndRedeemReserveCollateral { collateral_amount: move _72 };
        _70 = &_71;
        StorageDead(_72);
        _69 = LendingInstruction::pack(move _70) -> [return: bb22, unwind: bb23];
    }

    bb22: {
        StorageDead(_70);
        _0 = Instruction { program_id: move _67, accounts: move _68, data: move _69 };
        StorageDead(_69);
        StorageDead(_68);
        StorageDead(_67);
        _73 = const false;
        StorageDead(_30);
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_71);
        return;
    }

    bb23 (cleanup): {
        drop(_68) -> [return: bb27, unwind terminate(cleanup)];
    }

    bb24 (cleanup): {
        drop(_36) -> [return: bb29, unwind terminate(cleanup)];
    }

    bb25 (cleanup): {
        resume;
    }

    bb26 (cleanup): {
        drop(_30) -> [return: bb29, unwind terminate(cleanup)];
    }

    bb27 (cleanup): {
        switchInt(_73) -> [0: bb29, otherwise: bb26];
    }

    bb28 (cleanup): {
        drop(_13) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb29 (cleanup): {
        switchInt(_74) -> [0: bb25, otherwise: bb28];
    }

    bb30: {
        (*_75) = [move _37, move _39, move _41, move _43, move _45, move _47, move _49, move _51, move _53, move _55, move _57, move _59];
        StorageDead(_59);
        StorageDead(_57);
        StorageDead(_55);
        StorageDead(_53);
        StorageDead(_51);
        StorageDead(_49);
        StorageDead(_47);
        StorageDead(_45);
        StorageDead(_43);
        StorageDead(_41);
        StorageDead(_39);
        StorageDead(_37);
        _32 = move _36;
        _31 = move _32 as std::boxed::Box<[solana_program::instruction::AccountMeta]> (PointerCoercion(Unsize));
        StorageDead(_36);
        StorageDead(_32);
        _30 = std::slice::<impl [AccountMeta]>::into_vec::<std::alloc::Global>(move _31) -> [return: bb18, unwind: bb29];
    }
}
