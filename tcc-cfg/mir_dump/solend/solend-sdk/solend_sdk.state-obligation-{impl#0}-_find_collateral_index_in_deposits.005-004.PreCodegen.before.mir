// MIR for `obligation::<impl at token-lending\sdk\src\state\obligation.rs:68:1: 68:16>::_find_collateral_index_in_deposits` before PreCodegen

fn obligation::<impl at token-lending\sdk\src\state\obligation.rs:68:1: 68:16>::_find_collateral_index_in_deposits(_1: &obligation::Obligation, _2: Pubkey) -> Option<usize> {
    debug self => _1;
    debug deposit_reserve => _2;
    let mut _0: std::option::Option<usize>;
    let mut _3: &mut std::slice::Iter<'_, state::obligation::ObligationCollateral>;
    let mut _4: std::slice::Iter<'_, state::obligation::ObligationCollateral>;
    let mut _5: &[state::obligation::ObligationCollateral];
    let _6: &[state::obligation::ObligationCollateral];
    let mut _7: &std::vec::Vec<state::obligation::ObligationCollateral>;
    let mut _8: {closure@token-lending\sdk\src\state\obligation.rs:230:23: 230:35};
    let mut _9: &solana_program::pubkey::Pubkey;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).4: std::vec::Vec<state::obligation::ObligationCollateral>);
        _6 = <Vec<obligation::ObligationCollateral> as Deref>::deref(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        _5 = &(*_6);
        StorageDead(_7);
        _4 = core::slice::<impl [obligation::ObligationCollateral]>::iter(move _5) -> [return: bb2, unwind continue];
    }

    bb2: {
        _3 = &mut _4;
        StorageDead(_5);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &_2;
        _8 = {closure@token-lending\sdk\src\state\obligation.rs:230:23: 230:35} { deposit_reserve: move _9 };
        StorageDead(_9);
        _0 = <std::slice::Iter<'_, obligation::ObligationCollateral> as Iterator>::position::<{closure@token-lending\sdk\src\state\obligation.rs:230:23: 230:35}>(move _3, move _8) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_8);
        StorageDead(_3);
        StorageDead(_6);
        StorageDead(_4);
        return;
    }
}
