digraph Mir_0_56 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn LendingInstruction::unpack_bytes32(_1: &amp;ReErased [u8]) -&gt; std::result::Result&lt;(&amp;ReErased [u8; 32_usize], &amp;ReErased [u8]), solana_program::program_error::ProgramError&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: usize;<br align="left"/>let mut _5: &amp;ReErased [u8];<br align="left"/>let mut _6: !;<br align="left"/>let _7: ();<br align="left"/>let mut _8: &amp;ReErased str;<br align="left"/>let _9: &amp;ReErased str;<br align="left"/>let mut _10: solana_program::program_error::ProgramError;<br align="left"/>let mut _11: error::LendingError;<br align="left"/>let _12: &amp;ReErased [u8];<br align="left"/>let _13: &amp;ReErased [u8];<br align="left"/>let mut _14: (&amp;ReErased [u8], &amp;ReErased [u8]);<br align="left"/>let mut _15: &amp;ReErased [u8];<br align="left"/>let mut _16: (&amp;ReErased [u8; 32_usize], &amp;ReErased [u8]);<br align="left"/>let mut _17: &amp;ReErased [u8; 32_usize];<br align="left"/>let _18: &amp;ReErased [u8; 32_usize];<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, &amp;ReErased [u8; 32_usize]&gt;;<br align="left"/>let mut _20: std::result::Result&lt;&amp;ReErased [u8; 32_usize], error::LendingError&gt;;<br align="left"/>let mut _21: std::result::Result&lt;&amp;ReErased [u8; 32_usize], std::array::TryFromSliceError&gt;;<br align="left"/>let mut _22: &amp;ReErased [u8];<br align="left"/>let mut _23: Closure(DefId(0:58 ~ solend_sdk[296d]::instruction::{impl#0}::unpack_bytes32::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::array::TryFromSliceError,)) -&gt; error::LendingError, []), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _28: &amp;ReErased [u8; 32_usize];<br align="left"/>let mut _29: &amp;ReErased [u8];<br align="left"/>debug input =&gt; _1;<br align="left"/>debug bytes =&gt; _12;<br align="left"/>debug rest =&gt; _13;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = core::slice::&lt;impl [u8]&gt;::len(move _5)</td></tr></table>>];
    bb1__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = Lt(move _4, const 32_usize)<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb2__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = const &quot;32 bytes cannot be unpacked&quot;<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_7 = solana_program::log::sol_log(move _8)</td></tr></table>>];
    bb3__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = LendingError::InstructionUnpackError<br/></td></tr><tr><td align="left">_10 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _11)</td></tr></table>>];
    bb4__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_0 = Result::&lt;(&amp;[u8; 32], &amp;[u8]), ProgramError&gt;::Err(move _10)<br/>StorageDead(_10)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_2 = const ()<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_1)<br/></td></tr><tr><td align="left">_14 = core::slice::&lt;impl [u8]&gt;::split_at(move _15, const 32_usize)</td></tr></table>>];
    bb6__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_12)<br/>_12 = (_14.0: &amp;[u8])<br/>StorageLive(_13)<br/>_13 = (_14.1: &amp;[u8])<br/>StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_12)<br/></td></tr><tr><td align="left">_21 = &lt;&amp;[u8] as TryInto&lt;&amp;[u8; 32]&gt;&gt;::try_into(move _22)</td></tr></table>>];
    bb7__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = {closure@token-lending\sdk\src\instruction.rs:847:26: 847:29}<br/></td></tr><tr><td align="left">_20 = Result::&lt;&amp;[u8; 32], TryFromSliceError&gt;::map_err::&lt;LendingError, {closure@token-lending\sdk\src\instruction.rs:847:26: 847:29}&gt;(move _21, move _23)</td></tr></table>>];
    bb8__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;Result&lt;&amp;[u8; 32], LendingError&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb9__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_24 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb10__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_19 as Continue).0: &amp;[u8; 32])<br/>_18 = _28<br/>StorageDead(_28)<br/>_17 = &amp;(*_18)<br/>StorageLive(_29)<br/>_29 = &amp;(*_13)<br/>_16 = (move _17, move _29)<br/>StorageDead(_29)<br/>StorageDead(_17)<br/>_0 = Result::&lt;(&amp;[u8; 32], &amp;[u8]), ProgramError&gt;::Ok(move _16)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(&amp;[u8; 32], &amp;[u8]), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_56 -> bb1__0_56 [label="return"];
    bb1__0_56 -> bb5__0_56 [label="0"];
    bb1__0_56 -> bb2__0_56 [label="otherwise"];
    bb2__0_56 -> bb3__0_56 [label="return"];
    bb3__0_56 -> bb4__0_56 [label="return"];
    bb4__0_56 -> bb14__0_56 [label=""];
    bb5__0_56 -> bb6__0_56 [label="return"];
    bb6__0_56 -> bb7__0_56 [label="return"];
    bb7__0_56 -> bb8__0_56 [label="return"];
    bb8__0_56 -> bb9__0_56 [label="return"];
    bb9__0_56 -> bb10__0_56 [label="0"];
    bb9__0_56 -> bb12__0_56 [label="1"];
    bb9__0_56 -> bb11__0_56 [label="otherwise"];
    bb10__0_56 -> bb14__0_56 [label=""];
    bb12__0_56 -> bb13__0_56 [label="return"];
    bb13__0_56 -> bb14__0_56 [label=""];
}
