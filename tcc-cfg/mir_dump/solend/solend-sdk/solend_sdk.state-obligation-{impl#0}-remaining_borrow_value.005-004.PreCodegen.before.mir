// MIR for `obligation::<impl at token-lending\sdk\src\state\obligation.rs:68:1: 68:16>::remaining_borrow_value` before PreCodegen

fn obligation::<impl at token-lending\sdk\src\state\obligation.rs:68:1: 68:16>::remaining_borrow_value(_1: &obligation::Obligation) -> Result<decimal::Decimal, ProgramError> {
    debug self => _1;
    let mut _0: std::result::Result<math::decimal::Decimal, solana_program::program_error::ProgramError>;
    let mut _2: math::decimal::Decimal;
    let mut _3: math::decimal::Decimal;

    bb0: {
        StorageLive(_2);
        _2 = ((*_1).10: math::decimal::Decimal);
        StorageLive(_3);
        _3 = ((*_1).9: math::decimal::Decimal);
        _0 = <decimal::Decimal as common::TrySub>::try_sub(move _2, move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}
