// MIR for `decimal::<impl at token-lending\sdk\src\math\decimal.rs:29:43: 29:53>::partial_cmp` before PreCodegen

fn decimal::<impl at token-lending\sdk\src\math\decimal.rs:29:43: 29:53>::partial_cmp(_1: &decimal::Decimal, _2: &decimal::Decimal) -> Option<std::cmp::Ordering> {
    debug self => _1;
    debug other => _2;
    let mut _0: std::option::Option<std::cmp::Ordering>;
    let mut _3: &math::decimal::U192;
    let _4: &math::decimal::U192;
    let mut _5: &math::decimal::U192;
    let _6: &math::decimal::U192;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: math::decimal::U192);
        _3 = &(*_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &((*_2).0: math::decimal::U192);
        _5 = &(*_6);
        _0 = <U192 as PartialOrd>::partial_cmp(move _3, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_3);
        StorageDead(_6);
        StorageDead(_4);
        return;
    }
}
