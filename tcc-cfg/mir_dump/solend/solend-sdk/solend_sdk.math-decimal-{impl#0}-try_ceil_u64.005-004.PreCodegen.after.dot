digraph Mir_0_135 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn decimal::Decimal::try_ceil_u64(_1: &amp;ReErased math::decimal::Decimal) -&gt; std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;<br align="left"/>let _2: math::decimal::U192;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, math::decimal::U192&gt;;<br align="left"/>let mut _4: std::result::Result&lt;math::decimal::U192, error::LendingError&gt;;<br align="left"/>let mut _5: std::option::Option&lt;math::decimal::U192&gt;;<br align="left"/>let mut _6: math::decimal::U192;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, math::decimal::U192&gt;;<br align="left"/>let mut _8: std::result::Result&lt;math::decimal::U192, error::LendingError&gt;;<br align="left"/>let mut _9: std::option::Option&lt;math::decimal::U192&gt;;<br align="left"/>let mut _10: math::decimal::U192;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, math::decimal::U192&gt;;<br align="left"/>let mut _12: std::result::Result&lt;math::decimal::U192, error::LendingError&gt;;<br align="left"/>let mut _13: std::option::Option&lt;math::decimal::U192&gt;;<br align="left"/>let mut _14: math::decimal::U192;<br align="left"/>let mut _15: math::decimal::U192;<br align="left"/>let mut _16: error::LendingError;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _21: math::decimal::U192;<br align="left"/>let mut _22: math::decimal::U192;<br align="left"/>let mut _23: error::LendingError;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _28: math::decimal::U192;<br align="left"/>let mut _29: math::decimal::U192;<br align="left"/>let mut _30: error::LendingError;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _35: math::decimal::U192;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _38: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _39: std::result::Result&lt;u64, &amp;ReErased str&gt;;<br align="left"/>let mut _40: math::decimal::U192;<br align="left"/>let mut _41: Closure(DefId(0:136 ~ solend_sdk[296d]::math::decimal::{impl#0}::try_ceil_u64::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased str,)) -&gt; error::LendingError, []), ()]);<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _46: u64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug ceil_val =&gt; _2;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>>;
    bb0__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">_14 = decimal::Decimal::wad()</td></tr></table>>];
    bb1__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/></td></tr><tr><td align="left">_15 = &lt;U192 as From&lt;u64&gt;&gt;::from(const 1_u64)</td></tr></table>>];
    bb2__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">_13 = U192::checked_sub(move _14, move _15)</td></tr></table>>];
    bb3__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_16)<br/>_16 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_12 = Option::&lt;U192&gt;::ok_or::&lt;LendingError&gt;(move _13, move _16)</td></tr></table>>];
    bb4__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;Result&lt;U192, LendingError&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb5__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_17 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb6__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_11 as Continue).0: math::decimal::U192)<br/>_10 = _21<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = ((*_1).0: math::decimal::U192)<br/></td></tr><tr><td align="left">_9 = U192::checked_add(move _10, move _22)</td></tr></table>>];
    bb7__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb9__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_10)<br/>StorageLive(_23)<br/>_23 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_8 = Option::&lt;U192&gt;::ok_or::&lt;LendingError&gt;(move _9, move _23)</td></tr></table>>];
    bb11__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;Result&lt;U192, LendingError&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb12__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_24 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb13__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_7 as Continue).0: math::decimal::U192)<br/>_6 = _28<br/>StorageDead(_28)<br/>StorageLive(_29)<br/></td></tr><tr><td align="left">_29 = decimal::Decimal::wad()</td></tr></table>>];
    bb14__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb15__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">_5 = U192::checked_div(move _6, move _29)</td></tr></table>>];
    bb17__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_6)<br/>StorageLive(_30)<br/>_30 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_4 = Option::&lt;U192&gt;::ok_or::&lt;LendingError&gt;(move _5, move _30)</td></tr></table>>];
    bb18__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;Result&lt;U192, LendingError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb19__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_31 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb20__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_3 as Continue).0: math::decimal::U192)<br/>_2 = _35<br/>StorageDead(_35)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _2<br/></td></tr><tr><td align="left">_39 = &lt;u64 as TryFrom&lt;U192&gt;&gt;::try_from(move _40)</td></tr></table>>];
    bb21__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb22__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = {closure@token-lending\sdk\src\math\decimal.rs:98:44: 98:47}<br/></td></tr><tr><td align="left">_38 = Result::&lt;u64, &amp;str&gt;::map_err::&lt;LendingError, {closure@token-lending\sdk\src\math\decimal.rs:98:44: 98:47}&gt;(move _39, move _41)</td></tr></table>>];
    bb24__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb25__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb26__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_37 as Continue).0: u64)<br/>_36 = _46<br/>StorageDead(_46)<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(move _36)<br/>StorageDead(_36)<br/>StorageDead(_2)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_45)<br/>_45 = move _43<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb28__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_36)<br/>StorageDead(_2)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_135 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_135 -> bb1__0_135 [label="return"];
    bb1__0_135 -> bb2__0_135 [label="return"];
    bb2__0_135 -> bb3__0_135 [label="return"];
    bb3__0_135 -> bb4__0_135 [label="return"];
    bb4__0_135 -> bb5__0_135 [label="return"];
    bb5__0_135 -> bb6__0_135 [label="0"];
    bb5__0_135 -> bb8__0_135 [label="1"];
    bb5__0_135 -> bb7__0_135 [label="otherwise"];
    bb6__0_135 -> bb10__0_135 [label="return"];
    bb8__0_135 -> bb9__0_135 [label="return"];
    bb9__0_135 -> bb29__0_135 [label=""];
    bb10__0_135 -> bb11__0_135 [label="return"];
    bb11__0_135 -> bb12__0_135 [label="return"];
    bb12__0_135 -> bb13__0_135 [label="0"];
    bb12__0_135 -> bb14__0_135 [label="1"];
    bb12__0_135 -> bb7__0_135 [label="otherwise"];
    bb13__0_135 -> bb16__0_135 [label="return"];
    bb14__0_135 -> bb15__0_135 [label="return"];
    bb15__0_135 -> bb29__0_135 [label=""];
    bb16__0_135 -> bb17__0_135 [label="return"];
    bb17__0_135 -> bb18__0_135 [label="return"];
    bb18__0_135 -> bb19__0_135 [label="return"];
    bb19__0_135 -> bb20__0_135 [label="0"];
    bb19__0_135 -> bb21__0_135 [label="1"];
    bb19__0_135 -> bb7__0_135 [label="otherwise"];
    bb20__0_135 -> bb23__0_135 [label="return"];
    bb21__0_135 -> bb22__0_135 [label="return"];
    bb22__0_135 -> bb30__0_135 [label=""];
    bb23__0_135 -> bb24__0_135 [label="return"];
    bb24__0_135 -> bb25__0_135 [label="return"];
    bb25__0_135 -> bb26__0_135 [label="0"];
    bb25__0_135 -> bb27__0_135 [label="1"];
    bb25__0_135 -> bb7__0_135 [label="otherwise"];
    bb26__0_135 -> bb31__0_135 [label=""];
    bb27__0_135 -> bb28__0_135 [label="return"];
    bb28__0_135 -> bb31__0_135 [label=""];
    bb29__0_135 -> bb30__0_135 [label=""];
    bb30__0_135 -> bb31__0_135 [label=""];
}
