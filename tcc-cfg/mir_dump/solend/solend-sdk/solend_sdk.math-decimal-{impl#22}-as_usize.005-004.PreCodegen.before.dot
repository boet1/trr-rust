digraph Mir_0_807 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U192::as_usize(_1: &amp;ReErased math::decimal::U192) -&gt; usize<br align="left"/>let _2: &amp;ReErased [u64; 3_usize];<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased math::decimal::U192;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: u64;<br align="left"/>let _8: usize;<br align="left"/>let mut _9: usize;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: usize;<br align="left"/>let mut _13: !;<br align="left"/>let _14: !;<br align="left"/>let mut _15: u64;<br align="left"/>let _16: usize;<br align="left"/>let mut _17: usize;<br align="left"/>let mut _18: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug arr =&gt; _2;<br align="left"/>>;
    bb0__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = &amp;((*_1).0: [u64; 3])<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = U192::fits_word(move _5)</td></tr></table>>];
    bb1__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = const 0_usize<br/>_9 = Len((*_2))<br/>_10 = Lt(_8, _9)<br/></td></tr><tr><td align="left">assert(move _10, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _9, _8)</td></tr></table>>];
    bb3__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_7 = (*_2)[_8]<br/>StorageLive(_11)<br/>StorageLive(_12)<br/></td></tr><tr><td align="left">_12 = core::num::&lt;impl usize&gt;::max_value()</td></tr></table>>];
    bb5__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_11 = move _12 as u64 (IntToInt)<br/>StorageDead(_12)<br/>_6 = Gt(move _7, move _11)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb6__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">_14 = begin_panic::&lt;&amp;str&gt;(const &quot;Integer overflow when casting to usize&quot;)</td></tr></table>>];
    bb7__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>_3 = const ()<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = const 0_usize<br/>_17 = Len((*_2))<br/>_18 = Lt(_16, _17)<br/></td></tr><tr><td align="left">assert(move _18, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _17, _16)</td></tr></table>>];
    bb8__0_807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_15 = (*_2)[_16]<br/>_0 = move _15 as usize (IntToInt)<br/>StorageDead(_15)<br/>StorageDead(_2)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_807 -> bb1__0_807 [label="return"];
    bb1__0_807 -> bb3__0_807 [label="0"];
    bb1__0_807 -> bb2__0_807 [label="otherwise"];
    bb2__0_807 -> bb4__0_807 [label="success"];
    bb3__0_807 -> bb6__0_807 [label=""];
    bb4__0_807 -> bb5__0_807 [label="return"];
    bb5__0_807 -> bb7__0_807 [label="0"];
    bb5__0_807 -> bb6__0_807 [label="otherwise"];
    bb7__0_807 -> bb8__0_807 [label="success"];
}
