// MIR for `lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:11:10: 11:15>::clone` before PreCodegen

fn lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:11:10: 11:15>::clone(_1: &LendingMarket) -> LendingMarket {
    debug self => _1;
    let mut _0: state::lending_market::LendingMarket;
    let mut _2: u8;
    let mut _3: &u8;
    let _4: &u8;
    let mut _5: u8;
    let mut _6: &u8;
    let _7: &u8;
    let mut _8: solana_program::pubkey::Pubkey;
    let mut _9: &solana_program::pubkey::Pubkey;
    let _10: &solana_program::pubkey::Pubkey;
    let mut _11: [u8; 32];
    let mut _12: &[u8; 32];
    let _13: &[u8; 32];
    let mut _14: solana_program::pubkey::Pubkey;
    let mut _15: &solana_program::pubkey::Pubkey;
    let _16: &solana_program::pubkey::Pubkey;
    let mut _17: solana_program::pubkey::Pubkey;
    let mut _18: &solana_program::pubkey::Pubkey;
    let _19: &solana_program::pubkey::Pubkey;
    let mut _20: solana_program::pubkey::Pubkey;
    let mut _21: &solana_program::pubkey::Pubkey;
    let _22: &solana_program::pubkey::Pubkey;
    let mut _23: state::rate_limiter::RateLimiter;
    let mut _24: &state::rate_limiter::RateLimiter;
    let _25: &state::rate_limiter::RateLimiter;
    let mut _26: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _27: &std::option::Option<solana_program::pubkey::Pubkey>;
    let _28: &std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _29: solana_program::pubkey::Pubkey;
    let mut _30: &solana_program::pubkey::Pubkey;
    let _31: &solana_program::pubkey::Pubkey;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: u8);
        _3 = &(*_4);
        _2 = <u8 as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: u8);
        _6 = &(*_7);
        _5 = <u8 as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: solana_program::pubkey::Pubkey);
        _9 = &(*_10);
        _8 = <Pubkey as Clone>::clone(move _9) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_9);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: [u8; 32]);
        _12 = &(*_13);
        _11 = <[u8; 32] as Clone>::clone(move _12) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_12);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).4: solana_program::pubkey::Pubkey);
        _15 = &(*_16);
        _14 = <Pubkey as Clone>::clone(move _15) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_15);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &((*_1).5: solana_program::pubkey::Pubkey);
        _18 = &(*_19);
        _17 = <Pubkey as Clone>::clone(move _18) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_18);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).6: solana_program::pubkey::Pubkey);
        _21 = &(*_22);
        _20 = <Pubkey as Clone>::clone(move _21) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_21);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &((*_1).7: state::rate_limiter::RateLimiter);
        _24 = &(*_25);
        _23 = <rate_limiter::RateLimiter as Clone>::clone(move _24) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_24);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &((*_1).8: std::option::Option<solana_program::pubkey::Pubkey>);
        _27 = &(*_28);
        _26 = <Option<Pubkey> as Clone>::clone(move _27) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_27);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &((*_1).9: solana_program::pubkey::Pubkey);
        _30 = &(*_31);
        _29 = <Pubkey as Clone>::clone(move _30) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_30);
        _0 = LendingMarket { version: move _2, bump_seed: move _5, owner: move _8, quote_currency: move _11, token_program_id: move _14, oracle_program_id: move _17, switchboard_oracle_program_id: move _20, rate_limiter: move _23, whitelisted_liquidator: move _26, risk_authority: move _29 };
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_20);
        StorageDead(_17);
        StorageDead(_14);
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_31);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_19);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
