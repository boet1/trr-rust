digraph Mir_0_523 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::ReserveFees::calculate_flash_loan_fees(_1: &amp;ReErased state::reserve::ReserveFees, _2: math::decimal::Decimal) -&gt; std::result::Result&lt;(u64, u64), solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: u64;<br align="left"/>let _4: u64;<br align="left"/>let mut _5: (u64, u64);<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, (u64, u64)&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(u64, u64), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _8: &amp;ReErased state::reserve::ReserveFees;<br align="left"/>let mut _9: math::decimal::Decimal;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: state::reserve::FeeCalculation;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _16: (u64, u64);<br align="left"/>let _17: u64;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _20: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: error::LendingError;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _28: u64;<br align="left"/>let mut _29: (u64, u64);<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: isize;<br align="left"/>let mut _33: isize;<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: isize;<br align="left"/>let mut _36: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug flash_loan_amount =&gt; _2;<br align="left"/>debug total_fees =&gt; _3;<br align="left"/>debug host_fee =&gt; _4;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug origination_fee =&gt; _17;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_1)<br/>StorageLive(_9)<br/>_9 = _2<br/>StorageLive(_10)<br/>_10 = ((*_1).1: u64)<br/>StorageLive(_11)<br/>_11 = FeeCalculation::Exclusive<br/></td></tr><tr><td align="left">_7 = reserve::ReserveFees::calculate_fees(move _8, move _9, move _10, move _11)</td></tr></table>>];
    bb1__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;Result&lt;(u64, u64), ProgramError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_12 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_6 as Continue).0: (u64, u64))<br/>_5 = _16<br/>StorageDead(_16)<br/>StorageLive(_3)<br/>_3 = (_5.0: u64)<br/>StorageLive(_4)<br/>_4 = (_5.1: u64)<br/>_32 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _3<br/>StorageLive(_22)<br/>_22 = _4<br/></td></tr><tr><td align="left">_20 = core::num::&lt;impl u64&gt;::checked_sub(move _21, move _22)</td></tr></table>>];
    bb4__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_15)<br/>_15 = move _13<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>_34 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_23)<br/>_23 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_19 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _20, move _23)</td></tr></table>>];
    bb8__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb9__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_24 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb10__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_18 as Continue).0: u64)<br/>_17 = _28<br/>StorageDead(_28)<br/>StorageDead(_18)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _17<br/>StorageLive(_31)<br/>_31 = _4<br/>_29 = (move _30, move _31)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>_0 = Result::&lt;(u64, u64), ProgramError&gt;::Ok(move _29)<br/>StorageDead(_29)<br/>StorageDead(_17)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb12__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">return</td></tr></table>>];
    bb14__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb15__0_523 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left" balign="left">_36 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_523 -> bb1__0_523 [label="return"];
    bb1__0_523 -> bb2__0_523 [label="return"];
    bb1__0_523 -> bb14__0_523 [label="unwind"];
    bb2__0_523 -> bb3__0_523 [label="0"];
    bb2__0_523 -> bb5__0_523 [label="1"];
    bb2__0_523 -> bb4__0_523 [label="otherwise"];
    bb3__0_523 -> bb7__0_523 [label="return"];
    bb5__0_523 -> bb6__0_523 [label="return"];
    bb5__0_523 -> bb15__0_523 [label="unwind"];
    bb6__0_523 -> bb13__0_523 [label=""];
    bb7__0_523 -> bb8__0_523 [label="return"];
    bb8__0_523 -> bb9__0_523 [label="return"];
    bb9__0_523 -> bb10__0_523 [label="0"];
    bb9__0_523 -> bb11__0_523 [label="1"];
    bb9__0_523 -> bb4__0_523 [label="otherwise"];
    bb10__0_523 -> bb13__0_523 [label=""];
    bb11__0_523 -> bb12__0_523 [label="return"];
    bb12__0_523 -> bb13__0_523 [label=""];
    bb15__0_523 -> bb14__0_523 [label=""];
}
