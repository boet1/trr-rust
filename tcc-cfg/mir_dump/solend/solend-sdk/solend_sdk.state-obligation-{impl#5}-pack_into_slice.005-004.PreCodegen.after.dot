digraph Mir_0_362 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;obligation::Obligation as Pack&gt;::pack_into_slice(_1: &amp;ReErased state::obligation::Obligation, _2: &amp;ReErased mut [u8]) -&gt; ()<br align="left"/>let _3: &amp;ReErased mut [u8; 1300_usize];<br align="left"/>let mut _4: &amp;ReErased mut [u8; 1300_usize];<br align="left"/>let mut _5: &amp;ReErased mut [u8; 1300_usize];<br align="left"/>let _6: usize;<br align="left"/>let _7: &amp;ReErased mut [u8];<br align="left"/>let mut _8: &amp;ReErased mut [u8];<br align="left"/>let mut _9: &amp;ReErased mut [u8];<br align="left"/>let mut _10: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _11: usize;<br align="left"/>let mut _12: usize;<br align="left"/>let mut _13: usize;<br align="left"/>let mut _14: (usize, bool);<br align="left"/>let mut _15: &amp;ReErased mut [u8; 1300_usize];<br align="left"/>let mut _16: &amp;ReErased mut [u8];<br align="left"/>let _17: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _18: &amp;ReErased mut [u8; 8_usize];<br align="left"/>let _19: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _20: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let _21: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let _22: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _23: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _24: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _25: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _26: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _27: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _28: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _29: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _30: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _31: &amp;ReErased mut [u8; 14_usize];<br align="left"/>let _32: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _33: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _34: &amp;ReErased mut [u8; 1096_usize];<br align="left"/>let mut _35: (&amp;ReErased mut [u8; 1_usize], &amp;ReErased mut [u8; 8_usize], &amp;ReErased mut [u8; 1_usize], &amp;ReErased mut [u8; 32_usize], &amp;ReErased mut [u8; 32_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 1_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 1_usize], &amp;ReErased mut [u8; 14_usize], &amp;ReErased mut [u8; 1_usize], &amp;ReErased mut [u8; 1_usize], &amp;ReErased mut [u8; 1096_usize]);<br align="left"/>let _36: &amp;ReErased mut [u8; 1300_usize];<br align="left"/>let mut _37: &amp;ReErased mut [u8; 1300_usize];<br align="left"/>let mut _38: [u8; 1_usize];<br align="left"/>let mut _39: u8;<br align="left"/>let mut _40: [u8; 8_usize];<br align="left"/>let mut _41: u64;<br align="left"/>let _42: ();<br align="left"/>let mut _43: bool;<br align="left"/>let mut _44: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _45: ();<br align="left"/>let mut _46: &amp;ReErased mut [u8];<br align="left"/>let mut _47: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let mut _48: &amp;ReErased [u8];<br align="left"/>let _49: &amp;ReErased [u8];<br align="left"/>let mut _50: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _51: ();<br align="left"/>let mut _52: &amp;ReErased mut [u8];<br align="left"/>let mut _53: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let mut _54: &amp;ReErased [u8];<br align="left"/>let _55: &amp;ReErased [u8];<br align="left"/>let mut _56: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _57: ();<br align="left"/>let mut _58: math::decimal::Decimal;<br align="left"/>let mut _59: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _60: ();<br align="left"/>let mut _61: math::decimal::Decimal;<br align="left"/>let mut _62: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _63: ();<br align="left"/>let mut _64: math::decimal::Decimal;<br align="left"/>let mut _65: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _66: ();<br align="left"/>let mut _67: math::decimal::Decimal;<br align="left"/>let mut _68: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _69: ();<br align="left"/>let mut _70: math::decimal::Decimal;<br align="left"/>let mut _71: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _72: ();<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let _75: ();<br align="left"/>let mut _76: math::decimal::Decimal;<br align="left"/>let mut _77: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _78: ();<br align="left"/>let mut _79: math::decimal::Decimal;<br align="left"/>let mut _80: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _81: ();<br align="left"/>let mut _82: bool;<br align="left"/>let mut _83: &amp;ReErased mut [u8; 1_usize];<br align="left"/>let mut _84: [u8; 1_usize];<br align="left"/>let mut _85: u8;<br align="left"/>let mut _86: std::result::Result&lt;u8, std::num::TryFromIntError&gt;;<br align="left"/>let mut _87: usize;<br align="left"/>let mut _88: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _89: [u8; 1_usize];<br align="left"/>let mut _90: u8;<br align="left"/>let mut _91: std::result::Result&lt;u8, std::num::TryFromIntError&gt;;<br align="left"/>let mut _92: usize;<br align="left"/>let mut _93: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationLiquidity, std::alloc::Global&gt;;<br align="left"/>let mut _94: usize;<br align="left"/>let _95: ();<br align="left"/>let mut _96: std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _97: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _98: std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _99: ();<br align="left"/>let _100: ();<br align="left"/>let mut _101: std::option::Option&lt;&amp;ReErased state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _102: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _103: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::obligation::ObligationCollateral&gt;;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: !;<br align="left"/>let _106: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let _107: &amp;ReErased mut [u8; 88_usize];<br align="left"/>let mut _108: &amp;ReErased mut [u8; 88_usize];<br align="left"/>let mut _109: &amp;ReErased mut [u8; 88_usize];<br align="left"/>let _110: usize;<br align="left"/>let _111: &amp;ReErased mut [u8];<br align="left"/>let mut _112: &amp;ReErased mut [u8];<br align="left"/>let mut _113: &amp;ReErased mut [u8; 1096_usize];<br align="left"/>let mut _114: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _115: usize;<br align="left"/>let mut _116: usize;<br align="left"/>let mut _117: usize;<br align="left"/>let mut _118: (usize, bool);<br align="left"/>let mut _119: &amp;ReErased mut [u8; 88_usize];<br align="left"/>let mut _120: &amp;ReErased mut [u8];<br align="left"/>let _121: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let _122: &amp;ReErased mut [u8; 8_usize];<br align="left"/>let _123: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _124: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _125: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let mut _126: (&amp;ReErased mut [u8; 32_usize], &amp;ReErased mut [u8; 8_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize]);<br align="left"/>let _127: &amp;ReErased mut [u8; 88_usize];<br align="left"/>let mut _128: &amp;ReErased mut [u8; 88_usize];<br align="left"/>let _129: ();<br align="left"/>let mut _130: &amp;ReErased mut [u8];<br align="left"/>let mut _131: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let mut _132: &amp;ReErased [u8];<br align="left"/>let _133: &amp;ReErased [u8];<br align="left"/>let mut _134: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let mut _135: [u8; 8_usize];<br align="left"/>let mut _136: u64;<br align="left"/>let _137: ();<br align="left"/>let mut _138: math::decimal::Decimal;<br align="left"/>let mut _139: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _140: ();<br align="left"/>let mut _141: math::decimal::Decimal;<br align="left"/>let mut _142: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let mut _143: (usize, bool);<br align="left"/>let mut _144: std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _145: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationLiquidity, std::alloc::Global&gt;;<br align="left"/>let mut _146: std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let _147: ();<br align="left"/>let mut _148: std::option::Option&lt;&amp;ReErased state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _149: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _150: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::obligation::ObligationLiquidity&gt;;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: !;<br align="left"/>let _153: &amp;ReErased state::obligation::ObligationLiquidity;<br align="left"/>let _154: &amp;ReErased mut [u8; 112_usize];<br align="left"/>let mut _155: &amp;ReErased mut [u8; 112_usize];<br align="left"/>let mut _156: &amp;ReErased mut [u8; 112_usize];<br align="left"/>let _157: usize;<br align="left"/>let _158: &amp;ReErased mut [u8];<br align="left"/>let mut _159: &amp;ReErased mut [u8];<br align="left"/>let mut _160: &amp;ReErased mut [u8; 1096_usize];<br align="left"/>let mut _161: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _162: usize;<br align="left"/>let mut _163: usize;<br align="left"/>let mut _164: usize;<br align="left"/>let mut _165: (usize, bool);<br align="left"/>let mut _166: &amp;ReErased mut [u8; 112_usize];<br align="left"/>let mut _167: &amp;ReErased mut [u8];<br align="left"/>let _168: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let _169: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _170: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _171: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _172: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let mut _173: (&amp;ReErased mut [u8; 32_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 16_usize], &amp;ReErased mut [u8; 32_usize]);<br align="left"/>let _174: &amp;ReErased mut [u8; 112_usize];<br align="left"/>let mut _175: &amp;ReErased mut [u8; 112_usize];<br align="left"/>let _176: ();<br align="left"/>let mut _177: &amp;ReErased mut [u8];<br align="left"/>let mut _178: &amp;ReErased mut [u8; 32_usize];<br align="left"/>let mut _179: &amp;ReErased [u8];<br align="left"/>let _180: &amp;ReErased [u8];<br align="left"/>let mut _181: &amp;ReErased solana_program::pubkey::Pubkey;<br align="left"/>let _182: ();<br align="left"/>let mut _183: math::decimal::Decimal;<br align="left"/>let mut _184: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _185: ();<br align="left"/>let mut _186: math::decimal::Decimal;<br align="left"/>let mut _187: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let _188: ();<br align="left"/>let mut _189: math::decimal::Decimal;<br align="left"/>let mut _190: &amp;ReErased mut [u8; 16_usize];<br align="left"/>let mut _191: (usize, bool);<br align="left"/>debug self =&gt; _1;<br align="left"/>debug dst =&gt; _2;<br align="left"/>debug output =&gt; _3;<br align="left"/>debug offset =&gt; _6;<br align="left"/>debug slice =&gt; _7;<br align="left"/>debug version =&gt; _17;<br align="left"/>debug last_update_slot =&gt; _18;<br align="left"/>debug last_update_stale =&gt; _19;<br align="left"/>debug lending_market =&gt; _20;<br align="left"/>debug owner =&gt; _21;<br align="left"/>debug deposited_value =&gt; _22;<br align="left"/>debug borrowed_value =&gt; _23;<br align="left"/>debug allowed_borrow_value =&gt; _24;<br align="left"/>debug unhealthy_borrow_value =&gt; _25;<br align="left"/>debug borrowed_value_upper_bound =&gt; _26;<br align="left"/>debug borrowing_isolated_asset =&gt; _27;<br align="left"/>debug super_unhealthy_borrow_value =&gt; _28;<br align="left"/>debug unweighted_borrowed_value =&gt; _29;<br align="left"/>debug closeable =&gt; _30;<br align="left"/>debug _padding =&gt; _31;<br align="left"/>debug deposits_len =&gt; _32;<br align="left"/>debug borrows_len =&gt; _33;<br align="left"/>debug data_flat =&gt; _34;<br align="left"/>debug input =&gt; _36;<br align="left"/>debug offset =&gt; _94;<br align="left"/>debug iter =&gt; _98;<br align="left"/>debug collateral =&gt; _106;<br align="left"/>debug deposits_flat =&gt; _107;<br align="left"/>debug offset =&gt; _110;<br align="left"/>debug slice =&gt; _111;<br align="left"/>debug deposit_reserve =&gt; _121;<br align="left"/>debug deposited_amount =&gt; _122;<br align="left"/>debug market_value =&gt; _123;<br align="left"/>debug attributed_borrow_value =&gt; _124;<br align="left"/>debug _padding_deposit =&gt; _125;<br align="left"/>debug input =&gt; _127;<br align="left"/>debug iter =&gt; _146;<br align="left"/>debug liquidity =&gt; _153;<br align="left"/>debug borrows_flat =&gt; _154;<br align="left"/>debug offset =&gt; _157;<br align="left"/>debug slice =&gt; _158;<br align="left"/>debug borrow_reserve =&gt; _168;<br align="left"/>debug cumulative_borrow_rate_wads =&gt; _169;<br align="left"/>debug borrowed_amount_wads =&gt; _170;<br align="left"/>debug market_value =&gt; _171;<br align="left"/>debug _padding_borrow =&gt; _172;<br align="left"/>debug input =&gt; _174;<br align="left"/>>;
    bb0__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = const 0_usize<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut (*_2)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _6<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _6<br/>_14 = CheckedAdd(_13, const _)<br/></td></tr><tr><td align="left">assert(!move (_14.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _13, const _)</td></tr></table>>];
    bb1__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_12 = move (_14.0: usize)<br/>StorageDead(_13)<br/>_10 = std::ops::Range::&lt;usize&gt; { start: move _11, end: move _12 }<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_8 = &lt;[u8] as IndexMut&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index_mut(move _9, move _10)</td></tr></table>>];
    bb2__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>_7 = &amp;mut (*_8)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;mut (*_7)<br/></td></tr><tr><td align="left">_15 = &lt;obligation::Obligation as Pack&gt;::pack_into_slice::as_array::&lt;u8&gt;(move _16)</td></tr></table>>];
    bb3__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_5 = &amp;mut (*_15)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>_4 = &amp;mut (*_5)<br/>_3 = &amp;mut (*_4)<br/>StorageDead(_15)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = move _3<br/>StorageLive(_37)<br/>_37 = &amp;mut (*_36)<br/></td></tr><tr><td align="left">_35 = &lt;obligation::Obligation as Pack&gt;::pack_into_slice::as_arrays::&lt;u8&gt;(move _37)</td></tr></table>>];
    bb4__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_17)<br/>_17 = move (_35.0: &amp;mut [u8; 1])<br/>StorageLive(_18)<br/>_18 = move (_35.1: &amp;mut [u8; 8])<br/>StorageLive(_19)<br/>_19 = move (_35.2: &amp;mut [u8; 1])<br/>StorageLive(_20)<br/>_20 = move (_35.3: &amp;mut [u8; 32])<br/>StorageLive(_21)<br/>_21 = move (_35.4: &amp;mut [u8; 32])<br/>StorageLive(_22)<br/>_22 = move (_35.5: &amp;mut [u8; 16])<br/>StorageLive(_23)<br/>_23 = move (_35.6: &amp;mut [u8; 16])<br/>StorageLive(_24)<br/>_24 = move (_35.7: &amp;mut [u8; 16])<br/>StorageLive(_25)<br/>_25 = move (_35.8: &amp;mut [u8; 16])<br/>StorageLive(_26)<br/>_26 = move (_35.9: &amp;mut [u8; 16])<br/>StorageLive(_27)<br/>_27 = move (_35.10: &amp;mut [u8; 1])<br/>StorageLive(_28)<br/>_28 = move (_35.11: &amp;mut [u8; 16])<br/>StorageLive(_29)<br/>_29 = move (_35.12: &amp;mut [u8; 16])<br/>StorageLive(_30)<br/>_30 = move (_35.13: &amp;mut [u8; 1])<br/>StorageLive(_31)<br/>_31 = move (_35.14: &amp;mut [u8; 14])<br/>StorageLive(_32)<br/>_32 = move (_35.15: &amp;mut [u8; 1])<br/>StorageLive(_33)<br/>_33 = move (_35.16: &amp;mut [u8; 1])<br/>StorageLive(_34)<br/>_34 = move (_35.17: &amp;mut [u8; 1096])<br/>StorageDead(_35)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = ((*_1).0: u8)<br/></td></tr><tr><td align="left">_38 = core::num::&lt;impl u8&gt;::to_le_bytes(move _39)</td></tr></table>>];
    bb5__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>(*_17) = move _38<br/>StorageDead(_38)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = (((*_1).1: state::last_update::LastUpdate).0: u64)<br/></td></tr><tr><td align="left">_40 = core::num::&lt;impl u64&gt;::to_le_bytes(move _41)</td></tr></table>>];
    bb6__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>(*_18) = move _40<br/>StorageDead(_40)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = (((*_1).1: state::last_update::LastUpdate).1: bool)<br/>StorageLive(_44)<br/>_44 = &amp;mut (*_19)<br/></td></tr><tr><td align="left">_42 = state::pack_bool(move _43, move _44)</td></tr></table>>];
    bb7__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;mut (*_20)<br/>_46 = move _47 as &amp;mut [u8] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;((*_1).2: solana_program::pubkey::Pubkey)<br/></td></tr><tr><td align="left">_49 = &lt;Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _50)</td></tr></table>>];
    bb8__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_48 = &amp;(*_49)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_45 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _46, move _48)</td></tr></table>>];
    bb9__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;mut (*_21)<br/>_52 = move _53 as &amp;mut [u8] (PointerCoercion(Unsize))<br/>StorageDead(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;((*_1).3: solana_program::pubkey::Pubkey)<br/></td></tr><tr><td align="left">_55 = &lt;Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _56)</td></tr></table>>];
    bb10__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_54 = &amp;(*_55)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_51 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _52, move _54)</td></tr></table>>];
    bb11__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = ((*_1).6: math::decimal::Decimal)<br/>StorageLive(_59)<br/>_59 = &amp;mut (*_22)<br/></td></tr><tr><td align="left">_57 = state::pack_decimal(move _58, move _59)</td></tr></table>>];
    bb12__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = ((*_1).7: math::decimal::Decimal)<br/>StorageLive(_62)<br/>_62 = &amp;mut (*_23)<br/></td></tr><tr><td align="left">_60 = state::pack_decimal(move _61, move _62)</td></tr></table>>];
    bb13__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = ((*_1).9: math::decimal::Decimal)<br/>StorageLive(_65)<br/>_65 = &amp;mut (*_26)<br/></td></tr><tr><td align="left">_63 = state::pack_decimal(move _64, move _65)</td></tr></table>>];
    bb14__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = ((*_1).10: math::decimal::Decimal)<br/>StorageLive(_68)<br/>_68 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_66 = state::pack_decimal(move _67, move _68)</td></tr></table>>];
    bb15__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = ((*_1).11: math::decimal::Decimal)<br/>StorageLive(_71)<br/>_71 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_69 = state::pack_decimal(move _70, move _71)</td></tr></table>>];
    bb16__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = ((*_1).13: bool)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_27)<br/></td></tr><tr><td align="left">_72 = state::pack_bool(move _73, move _74)</td></tr></table>>];
    bb17__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = ((*_1).12: math::decimal::Decimal)<br/>StorageLive(_77)<br/>_77 = &amp;mut (*_28)<br/></td></tr><tr><td align="left">_75 = state::pack_decimal(move _76, move _77)</td></tr></table>>];
    bb18__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = ((*_1).8: math::decimal::Decimal)<br/>StorageLive(_80)<br/>_80 = &amp;mut (*_29)<br/></td></tr><tr><td align="left">_78 = state::pack_decimal(move _79, move _80)</td></tr></table>>];
    bb19__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = ((*_1).14: bool)<br/>StorageLive(_83)<br/>_83 = &amp;mut (*_30)<br/></td></tr><tr><td align="left">_81 = state::pack_bool(move _82, move _83)</td></tr></table>>];
    bb20__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/></td></tr><tr><td align="left">_87 = Vec::&lt;obligation::ObligationCollateral&gt;::len(move _88)</td></tr></table>>];
    bb21__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;u8 as TryFrom&lt;usize&gt;&gt;::try_from(move _87)</td></tr></table>>];
    bb22__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = Result::&lt;u8, TryFromIntError&gt;::unwrap(move _86)</td></tr></table>>];
    bb23__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = core::num::&lt;impl u8&gt;::to_le_bytes(move _85)</td></tr></table>>];
    bb24__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>(*_32) = move _84<br/>StorageDead(_84)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;((*_1).5: std::vec::Vec&lt;state::obligation::ObligationLiquidity&gt;)<br/></td></tr><tr><td align="left">_92 = Vec::&lt;obligation::ObligationLiquidity&gt;::len(move _93)</td></tr></table>>];
    bb25__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;u8 as TryFrom&lt;usize&gt;&gt;::try_from(move _92)</td></tr></table>>];
    bb26__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = Result::&lt;u8, TryFromIntError&gt;::unwrap(move _91)</td></tr></table>>];
    bb27__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = core::num::&lt;impl u8&gt;::to_le_bytes(move _90)</td></tr></table>>];
    bb28__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>(*_33) = move _89<br/>StorageDead(_89)<br/>StorageLive(_94)<br/>_94 = const 0_usize<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/></td></tr><tr><td align="left">_96 = &lt;&amp;Vec&lt;obligation::ObligationCollateral&gt; as IntoIterator&gt;::into_iter(move _97)</td></tr></table>>];
    bb29__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageLive(_98)<br/>_98 = move _96<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;mut _98<br/>_102 = &amp;mut (*_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::slice::Iter&lt;'_, obligation::ObligationCollateral&gt; as Iterator&gt;::next(move _102)</td></tr></table>>];
    bb31__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_104 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb32__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_101 as Some).0: &amp;state::obligation::ObligationCollateral)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = _94<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;mut (*_34)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = _110<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = _110<br/>_118 = CheckedAdd(_117, const _)<br/></td></tr><tr><td align="left">assert(!move (_118.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _117, const _)</td></tr></table>>];
    bb33__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb34__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_95 = const ()<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;((*_1).5: std::vec::Vec&lt;state::obligation::ObligationLiquidity&gt;)<br/></td></tr><tr><td align="left">_144 = &lt;&amp;Vec&lt;obligation::ObligationLiquidity&gt; as IntoIterator&gt;::into_iter(move _145)</td></tr></table>>];
    bb35__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_116 = move (_118.0: usize)<br/>StorageDead(_117)<br/>_114 = std::ops::Range::&lt;usize&gt; { start: move _115, end: move _116 }<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_112 = &lt;[u8; 1096] as IndexMut&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index_mut(move _113, move _114)</td></tr></table>>];
    bb36__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>_111 = &amp;mut (*_112)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;mut (*_111)<br/></td></tr><tr><td align="left">_119 = &lt;obligation::Obligation as Pack&gt;::pack_into_slice::as_array::&lt;u8&gt;(move _120)</td></tr></table>>];
    bb37__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_109 = &amp;mut (*_119)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>_108 = &amp;mut (*_109)<br/>_107 = &amp;mut (*_108)<br/>StorageDead(_119)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = move _107<br/>StorageLive(_128)<br/>_128 = &amp;mut (*_127)<br/></td></tr><tr><td align="left">_126 = &lt;obligation::Obligation as Pack&gt;::pack_into_slice::as_arrays::&lt;u8&gt;(move _128)</td></tr></table>>];
    bb38__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_121)<br/>_121 = move (_126.0: &amp;mut [u8; 32])<br/>StorageLive(_122)<br/>_122 = move (_126.1: &amp;mut [u8; 8])<br/>StorageLive(_123)<br/>_123 = move (_126.2: &amp;mut [u8; 16])<br/>StorageLive(_124)<br/>_124 = move (_126.3: &amp;mut [u8; 16])<br/>StorageLive(_125)<br/>_125 = move (_126.4: &amp;mut [u8; 16])<br/>StorageDead(_126)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;mut (*_121)<br/>_130 = move _131 as &amp;mut [u8] (PointerCoercion(Unsize))<br/>StorageDead(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;((*_106).0: solana_program::pubkey::Pubkey)<br/></td></tr><tr><td align="left">_133 = &lt;Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _134)</td></tr></table>>];
    bb39__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_132 = &amp;(*_133)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_129 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _130, move _132)</td></tr></table>>];
    bb40__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_133)<br/>StorageDead(_129)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = ((*_106).1: u64)<br/></td></tr><tr><td align="left">_135 = core::num::&lt;impl u64&gt;::to_le_bytes(move _136)</td></tr></table>>];
    bb41__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>(*_122) = move _135<br/>StorageDead(_135)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = ((*_106).2: math::decimal::Decimal)<br/>StorageLive(_139)<br/>_139 = &amp;mut (*_123)<br/></td></tr><tr><td align="left">_137 = state::pack_decimal(move _138, move _139)</td></tr></table>>];
    bb42__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = ((*_106).3: math::decimal::Decimal)<br/>StorageLive(_142)<br/>_142 = &amp;mut (*_124)<br/></td></tr><tr><td align="left">_140 = state::pack_decimal(move _141, move _142)</td></tr></table>>];
    bb43__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>_143 = CheckedAdd(_94, const _)<br/></td></tr><tr><td align="left">assert(!move (_143.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _94, const _)</td></tr></table>>];
    bb44__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_94 = move (_143.0: usize)<br/>_100 = const ()<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>_99 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageLive(_146)<br/>_146 = move _144<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;mut _146<br/>_149 = &amp;mut (*_150)<br/></td></tr><tr><td align="left">_148 = &lt;std::slice::Iter&lt;'_, obligation::ObligationLiquidity&gt; as Iterator&gt;::next(move _149)</td></tr></table>>];
    bb47__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>_151 = discriminant(_148)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb48__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_148 as Some).0: &amp;state::obligation::ObligationLiquidity)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = _94<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;mut (*_34)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = _157<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = _157<br/>_165 = CheckedAdd(_164, const _)<br/></td></tr><tr><td align="left">assert(!move (_165.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _164, const _)</td></tr></table>>];
    bb49__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_0 = const ()<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_94)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb50__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_163 = move (_165.0: usize)<br/>StorageDead(_164)<br/>_161 = std::ops::Range::&lt;usize&gt; { start: move _162, end: move _163 }<br/>StorageDead(_163)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_159 = &lt;[u8; 1096] as IndexMut&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index_mut(move _160, move _161)</td></tr></table>>];
    bb51__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>_158 = &amp;mut (*_159)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = &amp;mut (*_158)<br/></td></tr><tr><td align="left">_166 = &lt;obligation::Obligation as Pack&gt;::pack_into_slice::as_array::&lt;u8&gt;(move _167)</td></tr></table>>];
    bb52__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_156 = &amp;mut (*_166)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>_155 = &amp;mut (*_156)<br/>_154 = &amp;mut (*_155)<br/>StorageDead(_166)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = move _154<br/>StorageLive(_175)<br/>_175 = &amp;mut (*_174)<br/></td></tr><tr><td align="left">_173 = &lt;obligation::Obligation as Pack&gt;::pack_into_slice::as_arrays::&lt;u8&gt;(move _175)</td></tr></table>>];
    bb53__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_174)<br/>StorageLive(_168)<br/>_168 = move (_173.0: &amp;mut [u8; 32])<br/>StorageLive(_169)<br/>_169 = move (_173.1: &amp;mut [u8; 16])<br/>StorageLive(_170)<br/>_170 = move (_173.2: &amp;mut [u8; 16])<br/>StorageLive(_171)<br/>_171 = move (_173.3: &amp;mut [u8; 16])<br/>StorageLive(_172)<br/>_172 = move (_173.4: &amp;mut [u8; 32])<br/>StorageDead(_173)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;mut (*_168)<br/>_177 = move _178 as &amp;mut [u8] (PointerCoercion(Unsize))<br/>StorageDead(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;((*_153).0: solana_program::pubkey::Pubkey)<br/></td></tr><tr><td align="left">_180 = &lt;Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _181)</td></tr></table>>];
    bb54__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_179 = &amp;(*_180)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_176 = core::slice::&lt;impl [u8]&gt;::copy_from_slice(move _177, move _179)</td></tr></table>>];
    bb55__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_177)<br/>StorageDead(_180)<br/>StorageDead(_176)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = ((*_153).1: math::decimal::Decimal)<br/>StorageLive(_184)<br/>_184 = &amp;mut (*_169)<br/></td></tr><tr><td align="left">_182 = state::pack_decimal(move _183, move _184)</td></tr></table>>];
    bb56__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = ((*_153).2: math::decimal::Decimal)<br/>StorageLive(_187)<br/>_187 = &amp;mut (*_170)<br/></td></tr><tr><td align="left">_185 = state::pack_decimal(move _186, move _187)</td></tr></table>>];
    bb57__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = ((*_153).3: math::decimal::Decimal)<br/>StorageLive(_190)<br/>_190 = &amp;mut (*_171)<br/></td></tr><tr><td align="left">_188 = state::pack_decimal(move _189, move _190)</td></tr></table>>];
    bb58__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>_191 = CheckedAdd(_94, const _)<br/></td></tr><tr><td align="left">assert(!move (_191.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _94, const _)</td></tr></table>>];
    bb59__0_362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_94 = move (_191.0: usize)<br/>_147 = const ()<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>_99 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_362 -> bb1__0_362 [label="success"];
    bb1__0_362 -> bb2__0_362 [label="return"];
    bb2__0_362 -> bb3__0_362 [label="return"];
    bb3__0_362 -> bb4__0_362 [label="return"];
    bb4__0_362 -> bb5__0_362 [label="return"];
    bb5__0_362 -> bb6__0_362 [label="return"];
    bb6__0_362 -> bb7__0_362 [label="return"];
    bb7__0_362 -> bb8__0_362 [label="return"];
    bb8__0_362 -> bb9__0_362 [label="return"];
    bb9__0_362 -> bb10__0_362 [label="return"];
    bb10__0_362 -> bb11__0_362 [label="return"];
    bb11__0_362 -> bb12__0_362 [label="return"];
    bb12__0_362 -> bb13__0_362 [label="return"];
    bb13__0_362 -> bb14__0_362 [label="return"];
    bb14__0_362 -> bb15__0_362 [label="return"];
    bb15__0_362 -> bb16__0_362 [label="return"];
    bb16__0_362 -> bb17__0_362 [label="return"];
    bb17__0_362 -> bb18__0_362 [label="return"];
    bb18__0_362 -> bb19__0_362 [label="return"];
    bb19__0_362 -> bb20__0_362 [label="return"];
    bb20__0_362 -> bb21__0_362 [label="return"];
    bb21__0_362 -> bb22__0_362 [label="return"];
    bb22__0_362 -> bb23__0_362 [label="return"];
    bb23__0_362 -> bb24__0_362 [label="return"];
    bb24__0_362 -> bb25__0_362 [label="return"];
    bb25__0_362 -> bb26__0_362 [label="return"];
    bb26__0_362 -> bb27__0_362 [label="return"];
    bb27__0_362 -> bb28__0_362 [label="return"];
    bb28__0_362 -> bb29__0_362 [label="return"];
    bb29__0_362 -> bb30__0_362 [label=""];
    bb30__0_362 -> bb31__0_362 [label="return"];
    bb31__0_362 -> bb34__0_362 [label="0"];
    bb31__0_362 -> bb32__0_362 [label="1"];
    bb31__0_362 -> bb33__0_362 [label="otherwise"];
    bb32__0_362 -> bb35__0_362 [label="success"];
    bb34__0_362 -> bb45__0_362 [label="return"];
    bb35__0_362 -> bb36__0_362 [label="return"];
    bb36__0_362 -> bb37__0_362 [label="return"];
    bb37__0_362 -> bb38__0_362 [label="return"];
    bb38__0_362 -> bb39__0_362 [label="return"];
    bb39__0_362 -> bb40__0_362 [label="return"];
    bb40__0_362 -> bb41__0_362 [label="return"];
    bb41__0_362 -> bb42__0_362 [label="return"];
    bb42__0_362 -> bb43__0_362 [label="return"];
    bb43__0_362 -> bb44__0_362 [label="success"];
    bb44__0_362 -> bb30__0_362 [label=""];
    bb45__0_362 -> bb46__0_362 [label=""];
    bb46__0_362 -> bb47__0_362 [label="return"];
    bb47__0_362 -> bb49__0_362 [label="0"];
    bb47__0_362 -> bb48__0_362 [label="1"];
    bb47__0_362 -> bb33__0_362 [label="otherwise"];
    bb48__0_362 -> bb50__0_362 [label="success"];
    bb50__0_362 -> bb51__0_362 [label="return"];
    bb51__0_362 -> bb52__0_362 [label="return"];
    bb52__0_362 -> bb53__0_362 [label="return"];
    bb53__0_362 -> bb54__0_362 [label="return"];
    bb54__0_362 -> bb55__0_362 [label="return"];
    bb55__0_362 -> bb56__0_362 [label="return"];
    bb56__0_362 -> bb57__0_362 [label="return"];
    bb57__0_362 -> bb58__0_362 [label="return"];
    bb58__0_362 -> bb59__0_362 [label="success"];
    bb59__0_362 -> bb46__0_362 [label=""];
}
