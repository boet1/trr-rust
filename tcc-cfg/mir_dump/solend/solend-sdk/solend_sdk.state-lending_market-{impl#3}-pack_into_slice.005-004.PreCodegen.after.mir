// MIR for `lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:84:1: 84:28>::pack_into_slice` after PreCodegen

fn lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:84:1: 84:28>::pack_into_slice(_1: &LendingMarket, _2: &mut [u8]) -> () {
    debug self => _1;
    debug output => _2;
    let mut _0: ();
    let _3: &mut [u8; 290];
    let mut _4: &mut [u8; 290];
    let mut _5: &mut [u8; 290];
    let _6: usize;
    let mut _8: &mut [u8];
    let mut _9: &mut [u8];
    let mut _10: std::ops::Range<usize>;
    let mut _11: usize;
    let mut _12: usize;
    let mut _13: usize;
    let mut _14: (usize, bool);
    let mut _15: &mut [u8; 290];
    let mut _16: &mut [u8];
    let mut _28: (&mut [u8; 1], &mut [u8; 1], &mut [u8; 32], &mut [u8; 32], &mut [u8; 32], &mut [u8; 32], &mut [u8; 32], &mut [u8; 56], &mut [u8; 32], &mut [u8; 32], &mut [u8; 8]);
    let mut _30: &mut [u8; 290];
    let mut _31: [u8; 1];
    let mut _32: u8;
    let mut _33: [u8; 1];
    let mut _34: u8;
    let _35: ();
    let mut _36: &mut [u8];
    let mut _37: &mut [u8; 32];
    let mut _38: &[u8];
    let _39: &[u8];
    let mut _40: &solana_program::pubkey::Pubkey;
    let _41: ();
    let mut _42: &mut [u8];
    let mut _43: &mut [u8; 32];
    let mut _44: &[u8];
    let _45: &[u8];
    let mut _46: &[u8; 32];
    let _47: ();
    let mut _48: &mut [u8];
    let mut _49: &mut [u8; 32];
    let mut _50: &[u8];
    let _51: &[u8];
    let mut _52: &solana_program::pubkey::Pubkey;
    let _53: ();
    let mut _54: &mut [u8];
    let mut _55: &mut [u8; 32];
    let mut _56: &[u8];
    let _57: &[u8];
    let mut _58: &solana_program::pubkey::Pubkey;
    let _59: ();
    let mut _60: &mut [u8];
    let mut _61: &mut [u8; 32];
    let mut _62: &[u8];
    let _63: &[u8];
    let mut _64: &solana_program::pubkey::Pubkey;
    let _65: ();
    let mut _66: &state::rate_limiter::RateLimiter;
    let mut _67: &mut [u8];
    let mut _68: &mut [u8; 56];
    let _69: ();
    let mut _70: isize;
    let _72: ();
    let mut _73: &mut [u8];
    let mut _74: &mut [u8; 32];
    let mut _75: &[u8];
    let _76: &[u8];
    let mut _77: &solana_program::pubkey::Pubkey;
    let _78: ();
    let mut _79: &mut [u8];
    let mut _80: &mut [u8; 32];
    let mut _81: &[u8];
    let mut _82: &[u8; 32];
    let _83: &[u8; 32];
    let _84: [u8; 32];
    let _85: ();
    let mut _86: &mut [u8];
    let mut _87: &mut [u8; 32];
    let mut _88: &[u8];
    let _89: &[u8];
    let mut _90: &solana_program::pubkey::Pubkey;
    scope 1 {
        debug output => _3;
        scope 6 {
            debug version => _17;
            debug bump_seed => _18;
            debug owner => _19;
            debug quote_currency => _20;
            debug token_program_id => _21;
            debug oracle_program_id => _22;
            debug switchboard_oracle_program_id => _23;
            debug rate_limiter => _24;
            debug whitelisted_liquidator => _25;
            debug risk_authority => _26;
            debug _padding => _27;
            let _71: solana_program::pubkey::Pubkey;
            let mut _91: &[u8; 32];
            scope 11 {
                debug pubkey => _71;
            }
        }
        scope 7 {
            let _17: &mut [u8; 1];
            let _18: &mut [u8; 1];
            let _19: &mut [u8; 32];
            let _20: &mut [u8; 32];
            let _21: &mut [u8; 32];
            let _22: &mut [u8; 32];
            let _23: &mut [u8; 32];
            let _24: &mut [u8; 56];
            let _25: &mut [u8; 32];
            let _26: &mut [u8; 32];
            let _27: &mut [u8; 8];
            let _29: &mut [u8; 290];
            scope 8 {
                debug input => _29;
                scope 9 {
                    scope 10 {
                    }
                }
            }
        }
    }
    scope 2 {
        debug offset => _6;
        let _7: &mut [u8];
        scope 3 {
            debug slice => _7;
            scope 4 {
                scope 5 {
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = const 0_usize;
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut (*_2);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _6;
        StorageLive(_12);
        StorageLive(_13);
        _13 = _6;
        _14 = CheckedAdd(_13, const _);
        assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", move _13, const _) -> [success: bb1, unwind continue];
    }

    bb1: {
        _12 = move (_14.0: usize);
        StorageDead(_13);
        _10 = std::ops::Range::<usize> { start: move _11, end: move _12 };
        StorageDead(_12);
        StorageDead(_11);
        _8 = <[u8] as IndexMut<std::ops::Range<usize>>>::index_mut(move _9, move _10) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_10);
        StorageDead(_9);
        _7 = &mut (*_8);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &mut (*_7);
        _15 = <LendingMarket as Pack>::pack_into_slice::as_array::<u8>(move _16) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_16);
        _5 = &mut (*_15);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        _4 = &mut (*_5);
        _3 = &mut (*_4);
        StorageDead(_15);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_28);
        StorageLive(_29);
        _29 = move _3;
        StorageLive(_30);
        _30 = &mut (*_29);
        _28 = <LendingMarket as Pack>::pack_into_slice::as_arrays::<u8>(move _30) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_30);
        StorageDead(_29);
        StorageLive(_17);
        _17 = move (_28.0: &mut [u8; 1]);
        StorageLive(_18);
        _18 = move (_28.1: &mut [u8; 1]);
        StorageLive(_19);
        _19 = move (_28.2: &mut [u8; 32]);
        StorageLive(_20);
        _20 = move (_28.3: &mut [u8; 32]);
        StorageLive(_21);
        _21 = move (_28.4: &mut [u8; 32]);
        StorageLive(_22);
        _22 = move (_28.5: &mut [u8; 32]);
        StorageLive(_23);
        _23 = move (_28.6: &mut [u8; 32]);
        StorageLive(_24);
        _24 = move (_28.7: &mut [u8; 56]);
        StorageLive(_25);
        _25 = move (_28.8: &mut [u8; 32]);
        StorageLive(_26);
        _26 = move (_28.9: &mut [u8; 32]);
        StorageLive(_27);
        _27 = move (_28.10: &mut [u8; 8]);
        StorageDead(_28);
        StorageLive(_31);
        StorageLive(_32);
        _32 = ((*_1).0: u8);
        _31 = core::num::<impl u8>::to_le_bytes(move _32) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_32);
        (*_17) = move _31;
        StorageDead(_31);
        StorageLive(_33);
        StorageLive(_34);
        _34 = ((*_1).1: u8);
        _33 = core::num::<impl u8>::to_le_bytes(move _34) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_34);
        (*_18) = move _33;
        StorageDead(_33);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut (*_19);
        _36 = move _37 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_37);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = &((*_1).2: solana_program::pubkey::Pubkey);
        _39 = <Pubkey as AsRef<[u8]>>::as_ref(move _40) -> [return: bb7, unwind continue];
    }

    bb7: {
        _38 = &(*_39);
        StorageDead(_40);
        _35 = core::slice::<impl [u8]>::copy_from_slice(move _36, move _38) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_38);
        StorageDead(_36);
        StorageDead(_39);
        StorageDead(_35);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &mut (*_20);
        _42 = move _43 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &((*_1).3: [u8; 32]);
        _45 = <[u8; 32] as AsRef<[u8]>>::as_ref(move _46) -> [return: bb9, unwind continue];
    }

    bb9: {
        _44 = &(*_45);
        StorageDead(_46);
        _41 = core::slice::<impl [u8]>::copy_from_slice(move _42, move _44) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_44);
        StorageDead(_42);
        StorageDead(_45);
        StorageDead(_41);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = &mut (*_21);
        _48 = move _49 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_49);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        _52 = &((*_1).4: solana_program::pubkey::Pubkey);
        _51 = <Pubkey as AsRef<[u8]>>::as_ref(move _52) -> [return: bb11, unwind continue];
    }

    bb11: {
        _50 = &(*_51);
        StorageDead(_52);
        _47 = core::slice::<impl [u8]>::copy_from_slice(move _48, move _50) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_50);
        StorageDead(_48);
        StorageDead(_51);
        StorageDead(_47);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &mut (*_22);
        _54 = move _55 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = &((*_1).5: solana_program::pubkey::Pubkey);
        _57 = <Pubkey as AsRef<[u8]>>::as_ref(move _58) -> [return: bb13, unwind continue];
    }

    bb13: {
        _56 = &(*_57);
        StorageDead(_58);
        _53 = core::slice::<impl [u8]>::copy_from_slice(move _54, move _56) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_56);
        StorageDead(_54);
        StorageDead(_57);
        StorageDead(_53);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        _61 = &mut (*_23);
        _60 = move _61 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = &((*_1).6: solana_program::pubkey::Pubkey);
        _63 = <Pubkey as AsRef<[u8]>>::as_ref(move _64) -> [return: bb15, unwind continue];
    }

    bb15: {
        _62 = &(*_63);
        StorageDead(_64);
        _59 = core::slice::<impl [u8]>::copy_from_slice(move _60, move _62) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_62);
        StorageDead(_60);
        StorageDead(_63);
        StorageDead(_59);
        StorageLive(_65);
        StorageLive(_66);
        _66 = &((*_1).7: state::rate_limiter::RateLimiter);
        StorageLive(_67);
        StorageLive(_68);
        _68 = &mut (*_24);
        _67 = move _68 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_68);
        _65 = <rate_limiter::RateLimiter as Pack>::pack_into_slice(move _66, move _67) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_67);
        StorageDead(_66);
        StorageDead(_65);
        StorageLive(_69);
        _70 = discriminant(((*_1).8: std::option::Option<solana_program::pubkey::Pubkey>));
        switchInt(move _70) -> [0: bb18, 1: bb20, otherwise: bb19];
    }

    bb18: {
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &mut (*_25);
        _79 = move _80 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        _91 = const _;
        _83 = &(*_91);
        _82 = &(*_83);
        _81 = move _82 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_82);
        _78 = core::slice::<impl [u8]>::copy_from_slice(move _79, move _81) -> [return: bb23, unwind continue];
    }

    bb19: {
        unreachable;
    }

    bb20: {
        StorageLive(_71);
        _71 = ((((*_1).8: std::option::Option<solana_program::pubkey::Pubkey>) as Some).0: solana_program::pubkey::Pubkey);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        _74 = &mut (*_25);
        _73 = move _74 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _77 = &_71;
        _76 = <Pubkey as AsRef<[u8]>>::as_ref(move _77) -> [return: bb21, unwind continue];
    }

    bb21: {
        _75 = &(*_76);
        StorageDead(_77);
        _72 = core::slice::<impl [u8]>::copy_from_slice(move _73, move _75) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_75);
        StorageDead(_73);
        StorageDead(_76);
        StorageDead(_72);
        _69 = const ();
        StorageDead(_71);
        goto -> bb24;
    }

    bb23: {
        StorageDead(_81);
        StorageDead(_79);
        StorageDead(_83);
        StorageDead(_78);
        _69 = const ();
        goto -> bb24;
    }

    bb24: {
        StorageDead(_69);
        StorageLive(_85);
        StorageLive(_86);
        StorageLive(_87);
        _87 = &mut (*_26);
        _86 = move _87 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_87);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        _90 = &((*_1).9: solana_program::pubkey::Pubkey);
        _89 = <Pubkey as AsRef<[u8]>>::as_ref(move _90) -> [return: bb25, unwind continue];
    }

    bb25: {
        _88 = &(*_89);
        StorageDead(_90);
        _85 = core::slice::<impl [u8]>::copy_from_slice(move _86, move _88) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_88);
        StorageDead(_86);
        StorageDead(_89);
        StorageDead(_85);
        _0 = const ();
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_3);
        return;
    }
}
