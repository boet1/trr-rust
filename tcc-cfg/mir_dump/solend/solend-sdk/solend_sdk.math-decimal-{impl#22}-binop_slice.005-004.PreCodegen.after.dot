digraph Mir_0_866 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U192::binop_slice(_1: &amp;ReErased mut [u64], _2: &amp;ReErased [u64], _3: impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0) -&gt; bool<br align="left"/>let mut _4: bool;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, u64&gt;, std::slice::Iter&lt;ReErased, u64&gt;&gt;;<br align="left"/>let mut _7: std::slice::IterMut&lt;ReErased, u64&gt;;<br align="left"/>let mut _8: &amp;ReErased mut [u64];<br align="left"/>let mut _9: std::slice::Iter&lt;ReErased, u64&gt;;<br align="left"/>let mut _10: &amp;ReErased [u64];<br align="left"/>let mut _11: Closure(DefId(0:867 ~ solend_sdk[296d]::math::decimal::{impl#22}::binop_slice::{closure#0}), [impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0, i16, Binder(extern &quot;RustCall&quot; fn(((&amp;ReErased mut u64, &amp;ReErased u64),)), []), (&amp;ReErased mut bool, &amp;ReErased impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0)]);<br align="left"/>let mut _12: &amp;ReErased mut bool;<br align="left"/>let mut _13: &amp;ReErased impl Fn(u64, u64) -&gt; (u64, bool) + Copy/#0;<br align="left"/>debug a =&gt; _1;<br align="left"/>debug b =&gt; _2;<br align="left"/>debug binop =&gt; _3;<br align="left"/>debug c =&gt; _4;<br align="left"/>>;
    bb0__0_866 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_7 = core::slice::&lt;impl [u64]&gt;::iter_mut(move _8)</td></tr></table>>];
    bb1__0_866 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_2)<br/></td></tr><tr><td align="left">_9 = core::slice::&lt;impl [u64]&gt;::iter(move _10)</td></tr></table>>];
    bb2__0_866 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_6 = &lt;std::slice::IterMut&lt;'_, u64&gt; as Iterator&gt;::zip::&lt;std::slice::Iter&lt;'_, u64&gt;&gt;(move _7, move _9)</td></tr></table>>];
    bb3__0_866 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;mut _4<br/>StorageLive(_13)<br/>_13 = &amp;_3<br/>_11 = {closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1233:41: 1233:49} { c: move _12, binop: move _13 }<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_5 = &lt;Zip&lt;std::slice::IterMut&lt;'_, u64&gt;, std::slice::Iter&lt;'_, u64&gt;&gt; as Iterator&gt;::for_each::&lt;{closure@C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1233:41: 1233:49}&gt;(move _6, move _11)</td></tr></table>>];
    bb4__0_866 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_0 = _4<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_866 -> bb1__0_866 [label="return"];
    bb1__0_866 -> bb2__0_866 [label="return"];
    bb2__0_866 -> bb3__0_866 [label="return"];
    bb3__0_866 -> bb4__0_866 [label="return"];
}
