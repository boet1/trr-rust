digraph Mir_0_393 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn rate_limiter::RateLimiter::remaining_outflow(_1: &amp;ReErased mut state::rate_limiter::RateLimiter, _2: u64) -&gt; std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: !;<br align="left"/>let mut _7: math::decimal::Decimal;<br align="left"/>let _8: ();<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _10: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _11: &amp;ReErased mut state::rate_limiter::RateLimiter;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _17: ();<br align="left"/>let _18: math::decimal::Decimal;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _20: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _21: &amp;ReErased state::rate_limiter::RateLimiter;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _27: math::decimal::Decimal;<br align="left"/>let _28: ();<br align="left"/>let mut _29: bool;<br align="left"/>let mut _30: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _31: &amp;ReErased math::decimal::Decimal;<br align="left"/>let _32: math::decimal::Decimal;<br align="left"/>let mut _33: u64;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: math::decimal::Decimal;<br align="left"/>let _36: math::decimal::Decimal;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _38: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _39: math::decimal::Decimal;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: math::decimal::Decimal;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _46: math::decimal::Decimal;<br align="left"/>let mut _47: math::decimal::Decimal;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: isize;<br align="left"/>let mut _62: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug cur_slot =&gt; _2;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug cur_outflow =&gt; _18;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug diff =&gt; _36;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>>;
    bb0__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = (((*_1).0: state::rate_limiter::RateLimiterConfig).0: u64)<br/>_4 = Eq(move _5, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = &lt;decimal::Decimal as From&lt;u64&gt;&gt;::from(const _)</td></tr></table>>];
    bb2__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_0 = Result::&lt;decimal::Decimal, ProgramError&gt;::Ok(move _7)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_1)<br/>StorageLive(_12)<br/>_12 = _2<br/></td></tr><tr><td align="left">_10 = rate_limiter::RateLimiter::_update(move _11, move _12)</td></tr></table>>];
    bb4__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb5__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_13 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb6__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_9 as Continue).0: ())<br/>_8 = _17<br/>StorageDead(_17)<br/>_48 = discriminant(_9)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_1)<br/>StorageLive(_22)<br/>_22 = _2<br/></td></tr><tr><td align="left">_20 = rate_limiter::RateLimiter::current_outflow(move _21, move _22)</td></tr></table>>];
    bb7__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_16)<br/>_16 = move _14<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb9__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>_58 = discriminant(_9)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb11__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_23 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb12__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_19 as Continue).0: math::decimal::Decimal)<br/>_18 = _27<br/>StorageDead(_27)<br/>_50 = discriminant(_19)<br/>StorageDead(_19)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_18<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = (((*_1).0: state::rate_limiter::RateLimiterConfig).1: u64)<br/></td></tr><tr><td align="left">_32 = &lt;decimal::Decimal as From&lt;u64&gt;&gt;::from(move _33)</td></tr></table>>];
    bb13__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_26)<br/>_26 = move _24<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb14__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>_56 = discriminant(_19)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_31 = &amp;_32<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_29 = &lt;decimal::Decimal as PartialOrd&gt;::gt(move _30, move _31)</td></tr></table>>];
    bb16__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb17__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_35)<br/></td></tr><tr><td align="left">_35 = decimal::Decimal::zero()</td></tr></table>>];
    bb18__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_0 = Result::&lt;decimal::Decimal, ProgramError&gt;::Ok(move _35)<br/>StorageDead(_35)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>_28 = const ()<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = (((*_1).0: state::rate_limiter::RateLimiterConfig).1: u64)<br/></td></tr><tr><td align="left">_39 = &lt;decimal::Decimal as From&lt;u64&gt;&gt;::from(move _40)</td></tr></table>>];
    bb20__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>_41 = _18<br/></td></tr><tr><td align="left">_38 = &lt;decimal::Decimal as common::TrySub&gt;::try_sub(move _39, move _41)</td></tr></table>>];
    bb21__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb22__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb23__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_37 as Continue).0: math::decimal::Decimal)<br/>_36 = _46<br/>StorageDead(_46)<br/>_52 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_47)<br/>_47 = _36<br/>_0 = Result::&lt;decimal::Decimal, ProgramError&gt;::Ok(move _47)<br/>StorageDead(_47)<br/>StorageDead(_36)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_45)<br/>_45 = move _43<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb25__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_54 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">return</td></tr></table>>];
    bb28__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb29__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left" balign="left">_60 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left" balign="left">_61 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_393 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left" balign="left">_62 = discriminant(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_393 -> bb3__0_393 [label="0"];
    bb0__0_393 -> bb1__0_393 [label="otherwise"];
    bb1__0_393 -> bb2__0_393 [label="return"];
    bb2__0_393 -> bb27__0_393 [label=""];
    bb3__0_393 -> bb4__0_393 [label="return"];
    bb4__0_393 -> bb5__0_393 [label="return"];
    bb4__0_393 -> bb28__0_393 [label="unwind"];
    bb5__0_393 -> bb6__0_393 [label="0"];
    bb5__0_393 -> bb8__0_393 [label="1"];
    bb5__0_393 -> bb7__0_393 [label="otherwise"];
    bb6__0_393 -> bb10__0_393 [label="return"];
    bb8__0_393 -> bb9__0_393 [label="return"];
    bb8__0_393 -> bb31__0_393 [label="unwind"];
    bb9__0_393 -> bb27__0_393 [label=""];
    bb10__0_393 -> bb11__0_393 [label="return"];
    bb10__0_393 -> bb28__0_393 [label="unwind"];
    bb11__0_393 -> bb12__0_393 [label="0"];
    bb11__0_393 -> bb13__0_393 [label="1"];
    bb11__0_393 -> bb7__0_393 [label="otherwise"];
    bb12__0_393 -> bb15__0_393 [label="return"];
    bb13__0_393 -> bb14__0_393 [label="return"];
    bb13__0_393 -> bb30__0_393 [label="unwind"];
    bb14__0_393 -> bb26__0_393 [label=""];
    bb15__0_393 -> bb16__0_393 [label="return"];
    bb16__0_393 -> bb19__0_393 [label="0"];
    bb16__0_393 -> bb17__0_393 [label="otherwise"];
    bb17__0_393 -> bb18__0_393 [label="return"];
    bb18__0_393 -> bb26__0_393 [label=""];
    bb19__0_393 -> bb20__0_393 [label="return"];
    bb20__0_393 -> bb21__0_393 [label="return"];
    bb21__0_393 -> bb22__0_393 [label="return"];
    bb21__0_393 -> bb28__0_393 [label="unwind"];
    bb22__0_393 -> bb23__0_393 [label="0"];
    bb22__0_393 -> bb24__0_393 [label="1"];
    bb22__0_393 -> bb7__0_393 [label="otherwise"];
    bb23__0_393 -> bb27__0_393 [label=""];
    bb24__0_393 -> bb25__0_393 [label="return"];
    bb24__0_393 -> bb29__0_393 [label="unwind"];
    bb25__0_393 -> bb26__0_393 [label=""];
    bb26__0_393 -> bb27__0_393 [label=""];
    bb29__0_393 -> bb28__0_393 [label=""];
    bb30__0_393 -> bb28__0_393 [label=""];
    bb31__0_393 -> bb28__0_393 [label=""];
}
