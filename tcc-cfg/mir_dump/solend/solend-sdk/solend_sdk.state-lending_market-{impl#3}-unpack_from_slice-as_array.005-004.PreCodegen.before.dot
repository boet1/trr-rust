digraph Mir_0_1903 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;LendingMarket as Pack&gt;::unpack_from_slice::as_array(_1: &amp;ReErased [T/#0]) -&gt; &amp;ReErased [T/#0; 290_usize]<br align="left"/>let _2: &amp;ReErased [T/#0; 290_usize];<br align="left"/>let _3: *const [T/#0; 290_usize];<br align="left"/>let mut _4: *const T/#0;<br align="left"/>let mut _5: &amp;ReErased [T/#0];<br align="left"/>debug slice =&gt; _1;<br align="left"/>>;
    bb0__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/></td></tr><tr><td align="left">_4 = core::slice::&lt;impl [T]&gt;::as_ptr(move _5)</td></tr></table>>];
    bb1__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = move _4 as *const [T; 290] (PtrToPtr)<br/>StorageDead(_4)<br/>_2 = &amp;(*_3)<br/>_0 = &amp;(*_2)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1903 -> bb1__0_1903 [label="return"];
}
