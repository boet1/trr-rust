// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:669:1: 669:22>::new` after PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:669:1: 669:22>::new(_1: NewReserveLiquidityParams) -> ReserveLiquidity {
    debug params => _1;
    let mut _0: state::reserve::ReserveLiquidity;
    let mut _2: solana_program::pubkey::Pubkey;
    let mut _3: u8;
    let mut _4: solana_program::pubkey::Pubkey;
    let mut _5: solana_program::pubkey::Pubkey;
    let mut _6: solana_program::pubkey::Pubkey;
    let mut _7: math::decimal::Decimal;
    let mut _8: math::decimal::Decimal;
    let mut _9: math::decimal::Decimal;
    let mut _10: math::decimal::Decimal;
    let mut _11: math::decimal::Decimal;
    let mut _12: std::option::Option<math::decimal::Decimal>;

    bb0: {
        StorageLive(_2);
        _2 = (_1.0: solana_program::pubkey::Pubkey);
        StorageLive(_3);
        _3 = (_1.1: u8);
        StorageLive(_4);
        _4 = (_1.2: solana_program::pubkey::Pubkey);
        StorageLive(_5);
        _5 = (_1.3: solana_program::pubkey::Pubkey);
        StorageLive(_6);
        _6 = (_1.4: solana_program::pubkey::Pubkey);
        StorageLive(_7);
        _7 = decimal::Decimal::zero() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_8);
        _8 = decimal::Decimal::one() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_9);
        _9 = decimal::Decimal::zero() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_10);
        _10 = (_1.5: math::decimal::Decimal);
        StorageLive(_11);
        _11 = (_1.6: math::decimal::Decimal);
        StorageLive(_12);
        _12 = Option::<decimal::Decimal>::None;
        _0 = ReserveLiquidity { mint_pubkey: move _2, mint_decimals: move _3, supply_pubkey: move _4, pyth_oracle_pubkey: move _5, switchboard_oracle_pubkey: move _6, available_amount: const 0_u64, borrowed_amount_wads: move _7, cumulative_borrow_rate_wads: move _8, accumulated_protocol_fees_wads: move _9, market_price: move _10, smoothed_market_price: move _11, extra_market_price: move _12 };
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}
