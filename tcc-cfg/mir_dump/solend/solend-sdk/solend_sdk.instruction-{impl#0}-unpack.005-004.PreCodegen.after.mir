// MIR for `instruction::<impl at token-lending\sdk\src\instruction.rs:533:1: 533:24>::unpack` after PreCodegen

fn instruction::<impl at token-lending\sdk\src\instruction.rs:533:1: 533:24>::unpack(_1: &[u8]) -> Result<LendingInstruction, ProgramError> {
    debug input => _1;
    let mut _0: std::result::Result<instruction::LendingInstruction, solana_program::program_error::ProgramError>;
    let _2: u8;
    let _3: &[u8];
    let mut _4: (&u8, &[u8]);
    let mut _5: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::LendingError>, (&u8, &[u8])>;
    let mut _6: std::result::Result<(&u8, &[u8]), error::LendingError>;
    let mut _7: std::option::Option<(&u8, &[u8])>;
    let mut _8: &[u8];
    let mut _9: error::LendingError;
    let mut _10: isize;
    let _11: std::result::Result<std::convert::Infallible, error::LendingError>;
    let mut _12: !;
    let mut _13: std::result::Result<std::convert::Infallible, error::LendingError>;
    let _14: (&u8, &[u8]);
    let mut _15: instruction::LendingInstruction;
    let mut _18: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _19: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _20: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _21: &[u8];
    let mut _22: isize;
    let mut _24: !;
    let mut _25: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _29: (&[u8; 32], &[u8]);
    let mut _30: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (&[u8; 32], &[u8])>;
    let mut _31: std::result::Result<(&[u8; 32], &[u8]), solana_program::program_error::ProgramError>;
    let mut _32: &[u8];
    let mut _33: isize;
    let mut _35: !;
    let mut _36: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _38: solana_program::pubkey::Pubkey;
    let mut _39: [u8; 32];
    let mut _42: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _43: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _44: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _45: &[u8];
    let mut _46: isize;
    let mut _48: !;
    let mut _49: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _53: (u64, &[u8]);
    let mut _54: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _55: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _56: &[u8];
    let mut _57: isize;
    let mut _59: !;
    let mut _60: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _64: (u64, &[u8]);
    let mut _65: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _66: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _67: &[u8];
    let mut _68: isize;
    let mut _70: !;
    let mut _71: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _75: (std::option::Option<solana_program::pubkey::Pubkey>, &[u8]);
    let mut _76: (u8, &[u8]);
    let mut _77: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _78: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _79: &[u8];
    let mut _80: isize;
    let mut _82: !;
    let mut _83: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _86: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _87: &[u8];
    let mut _91: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _92: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _93: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _94: &[u8];
    let mut _95: isize;
    let mut _97: !;
    let mut _98: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _100: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _101: solana_program::pubkey::Pubkey;
    let mut _102: &[u8];
    let mut _103: !;
    let mut _104: solana_program::program_error::ProgramError;
    let mut _105: error::LendingError;
    let mut _108: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _109: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _110: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _111: &[u8];
    let mut _112: isize;
    let mut _114: !;
    let mut _115: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _117: solana_program::pubkey::Pubkey;
    let mut _118: state::rate_limiter::RateLimiterConfig;
    let mut _119: u64;
    let mut _120: u64;
    let mut _121: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _122: solana_program::pubkey::Pubkey;
    let mut _125: (u64, &[u8]);
    let mut _126: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _127: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _128: &[u8];
    let mut _129: isize;
    let mut _131: !;
    let mut _132: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _136: (u8, &[u8]);
    let mut _137: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _138: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _139: &[u8];
    let mut _140: isize;
    let mut _142: !;
    let mut _143: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _147: (u8, &[u8]);
    let mut _148: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _149: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _150: &[u8];
    let mut _151: isize;
    let mut _153: !;
    let mut _154: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _158: (u8, &[u8]);
    let mut _159: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _160: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _161: &[u8];
    let mut _162: isize;
    let mut _164: !;
    let mut _165: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _169: (u8, &[u8]);
    let mut _170: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _171: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _172: &[u8];
    let mut _173: isize;
    let mut _175: !;
    let mut _176: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _180: (u8, &[u8]);
    let mut _181: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _182: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _183: &[u8];
    let mut _184: isize;
    let mut _186: !;
    let mut _187: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _191: (u8, &[u8]);
    let mut _192: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _193: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _194: &[u8];
    let mut _195: isize;
    let mut _197: !;
    let mut _198: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _202: (u8, &[u8]);
    let mut _203: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _204: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _205: &[u8];
    let mut _206: isize;
    let mut _208: !;
    let mut _209: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _213: (u8, &[u8]);
    let mut _214: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _215: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _216: &[u8];
    let mut _217: isize;
    let mut _219: !;
    let mut _220: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _224: (u64, &[u8]);
    let mut _225: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _226: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _227: &[u8];
    let mut _228: isize;
    let mut _230: !;
    let mut _231: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _235: (u64, &[u8]);
    let mut _236: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _237: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _238: &[u8];
    let mut _239: isize;
    let mut _241: !;
    let mut _242: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _246: (u64, &[u8]);
    let mut _247: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _248: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _249: &[u8];
    let mut _250: isize;
    let mut _252: !;
    let mut _253: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _257: (u8, &[u8]);
    let mut _258: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _259: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _260: &[u8];
    let mut _261: isize;
    let mut _263: !;
    let mut _264: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _268: (u64, &[u8]);
    let mut _269: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _270: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _271: &[u8];
    let mut _272: isize;
    let mut _274: !;
    let mut _275: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _279: (u64, &[u8]);
    let mut _280: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _281: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _282: &[u8];
    let mut _283: isize;
    let mut _285: !;
    let mut _286: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _290: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _291: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _292: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _293: &[u8];
    let mut _294: isize;
    let mut _296: !;
    let mut _297: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _301: (u8, &[u8]);
    let mut _302: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _303: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _304: &[u8];
    let mut _305: isize;
    let mut _307: !;
    let mut _308: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _312: (u8, &[u8]);
    let mut _313: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _314: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _315: &[u8];
    let mut _316: isize;
    let mut _318: !;
    let mut _319: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _323: (u64, &[u8]);
    let mut _324: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _325: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _326: &[u8];
    let mut _327: isize;
    let mut _329: !;
    let mut _330: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _334: (u8, &[u8]);
    let mut _335: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _336: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _337: &[u8];
    let mut _338: isize;
    let mut _340: !;
    let mut _341: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _345: (u8, &[u8]);
    let mut _346: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _347: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _348: &[u8];
    let mut _349: isize;
    let mut _351: !;
    let mut _352: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _356: (u8, &[u8]);
    let mut _357: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _358: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _359: &[u8];
    let mut _360: isize;
    let mut _362: !;
    let mut _363: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _367: (i64, &[u8]);
    let mut _368: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (i64, &[u8])>;
    let mut _369: std::result::Result<(i64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _370: &[u8];
    let mut _371: isize;
    let mut _373: !;
    let mut _374: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _378: (std::option::Option<solana_program::pubkey::Pubkey>, &[u8]);
    let mut _379: (u8, &[u8]);
    let mut _380: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _381: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _382: &[u8];
    let mut _383: isize;
    let mut _385: !;
    let mut _386: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _389: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _390: &[u8];
    let mut _394: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _395: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _396: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _397: &[u8];
    let mut _398: isize;
    let mut _400: !;
    let mut _401: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _403: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _404: solana_program::pubkey::Pubkey;
    let mut _405: &[u8];
    let mut _406: !;
    let mut _407: solana_program::program_error::ProgramError;
    let mut _408: error::LendingError;
    let mut _411: (u64, &[u8]);
    let mut _412: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _413: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _414: &[u8];
    let mut _415: isize;
    let mut _417: !;
    let mut _418: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _422: (u64, &[u8]);
    let mut _423: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _424: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _425: &[u8];
    let mut _426: isize;
    let mut _428: !;
    let mut _429: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _431: u64;
    let mut _432: state::reserve::ReserveConfig;
    let mut _433: u8;
    let mut _434: u8;
    let mut _435: u8;
    let mut _436: u8;
    let mut _437: u8;
    let mut _438: u8;
    let mut _439: u8;
    let mut _440: u8;
    let mut _441: u8;
    let mut _442: u8;
    let mut _443: u64;
    let mut _444: state::reserve::ReserveFees;
    let mut _445: u64;
    let mut _446: u64;
    let mut _447: u8;
    let mut _448: u64;
    let mut _449: u64;
    let mut _450: solana_program::pubkey::Pubkey;
    let mut _451: u8;
    let mut _452: u8;
    let mut _453: u64;
    let mut _454: state::reserve::ReserveType;
    let mut _455: std::option::Option<state::reserve::ReserveType>;
    let mut _456: u8;
    let mut _457: i64;
    let mut _458: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _459: u64;
    let mut _460: u64;
    let mut _463: (u64, &[u8]);
    let mut _464: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _465: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _466: &[u8];
    let mut _467: isize;
    let mut _469: !;
    let mut _470: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _472: u64;
    let mut _475: (u64, &[u8]);
    let mut _476: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _477: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _478: &[u8];
    let mut _479: isize;
    let mut _481: !;
    let mut _482: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _484: u64;
    let mut _487: (u64, &[u8]);
    let mut _488: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _489: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _490: &[u8];
    let mut _491: isize;
    let mut _493: !;
    let mut _494: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _496: u64;
    let mut _499: (u64, &[u8]);
    let mut _500: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _501: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _502: &[u8];
    let mut _503: isize;
    let mut _505: !;
    let mut _506: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _508: u64;
    let mut _511: (u64, &[u8]);
    let mut _512: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _513: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _514: &[u8];
    let mut _515: isize;
    let mut _517: !;
    let mut _518: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _520: u64;
    let mut _523: (u64, &[u8]);
    let mut _524: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _525: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _526: &[u8];
    let mut _527: isize;
    let mut _529: !;
    let mut _530: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _532: u64;
    let mut _535: (u64, &[u8]);
    let mut _536: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _537: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _538: &[u8];
    let mut _539: isize;
    let mut _541: !;
    let mut _542: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _544: u64;
    let mut _547: (u64, &[u8]);
    let mut _548: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _549: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _550: &[u8];
    let mut _551: isize;
    let mut _553: !;
    let mut _554: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _556: u64;
    let mut _559: (u64, &[u8]);
    let mut _560: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _561: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _562: &[u8];
    let mut _563: isize;
    let mut _565: !;
    let mut _566: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _568: u64;
    let mut _571: (u64, &[u8]);
    let mut _572: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _573: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _574: &[u8];
    let mut _575: isize;
    let mut _577: !;
    let mut _578: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _580: u64;
    let mut _583: (u8, &[u8]);
    let mut _584: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _585: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _586: &[u8];
    let mut _587: isize;
    let mut _589: !;
    let mut _590: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _594: (u8, &[u8]);
    let mut _595: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _596: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _597: &[u8];
    let mut _598: isize;
    let mut _600: !;
    let mut _601: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _605: (u8, &[u8]);
    let mut _606: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _607: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _608: &[u8];
    let mut _609: isize;
    let mut _611: !;
    let mut _612: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _616: (u8, &[u8]);
    let mut _617: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _618: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _619: &[u8];
    let mut _620: isize;
    let mut _622: !;
    let mut _623: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _627: (u8, &[u8]);
    let mut _628: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _629: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _630: &[u8];
    let mut _631: isize;
    let mut _633: !;
    let mut _634: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _638: (u8, &[u8]);
    let mut _639: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _640: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _641: &[u8];
    let mut _642: isize;
    let mut _644: !;
    let mut _645: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _649: (u8, &[u8]);
    let mut _650: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _651: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _652: &[u8];
    let mut _653: isize;
    let mut _655: !;
    let mut _656: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _660: (u8, &[u8]);
    let mut _661: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _662: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _663: &[u8];
    let mut _664: isize;
    let mut _666: !;
    let mut _667: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _671: (u64, &[u8]);
    let mut _672: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _673: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _674: &[u8];
    let mut _675: isize;
    let mut _677: !;
    let mut _678: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _682: (u64, &[u8]);
    let mut _683: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _684: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _685: &[u8];
    let mut _686: isize;
    let mut _688: !;
    let mut _689: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _693: (u64, &[u8]);
    let mut _694: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _695: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _696: &[u8];
    let mut _697: isize;
    let mut _699: !;
    let mut _700: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _704: (u8, &[u8]);
    let mut _705: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _706: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _707: &[u8];
    let mut _708: isize;
    let mut _710: !;
    let mut _711: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _715: (u64, &[u8]);
    let mut _716: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _717: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _718: &[u8];
    let mut _719: isize;
    let mut _721: !;
    let mut _722: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _726: (u64, &[u8]);
    let mut _727: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _728: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _729: &[u8];
    let mut _730: isize;
    let mut _732: !;
    let mut _733: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _737: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _738: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _739: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _740: &[u8];
    let mut _741: isize;
    let mut _743: !;
    let mut _744: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _748: (u8, &[u8]);
    let mut _749: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _750: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _751: &[u8];
    let mut _752: isize;
    let mut _754: !;
    let mut _755: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _759: (u8, &[u8]);
    let mut _760: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _761: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _762: &[u8];
    let mut _763: isize;
    let mut _765: !;
    let mut _766: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _770: (u64, &[u8]);
    let mut _771: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _772: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _773: &[u8];
    let mut _774: isize;
    let mut _776: !;
    let mut _777: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _781: (u8, &[u8]);
    let mut _782: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _783: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _784: &[u8];
    let mut _785: isize;
    let mut _787: !;
    let mut _788: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _792: (u8, &[u8]);
    let mut _793: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _794: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _795: &[u8];
    let mut _796: isize;
    let mut _798: !;
    let mut _799: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _803: (u8, &[u8]);
    let mut _804: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _805: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _806: &[u8];
    let mut _807: isize;
    let mut _809: !;
    let mut _810: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _814: (i64, &[u8]);
    let mut _815: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (i64, &[u8])>;
    let mut _816: std::result::Result<(i64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _817: &[u8];
    let mut _818: isize;
    let mut _820: !;
    let mut _821: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _825: (std::option::Option<solana_program::pubkey::Pubkey>, &[u8]);
    let mut _826: (u8, &[u8]);
    let mut _827: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _828: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _829: &[u8];
    let mut _830: isize;
    let mut _832: !;
    let mut _833: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _836: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _837: &[u8];
    let mut _841: (solana_program::pubkey::Pubkey, &[u8]);
    let mut _842: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (solana_program::pubkey::Pubkey, &[u8])>;
    let mut _843: std::result::Result<(solana_program::pubkey::Pubkey, &[u8]), solana_program::program_error::ProgramError>;
    let mut _844: &[u8];
    let mut _845: isize;
    let mut _847: !;
    let mut _848: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _850: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _851: solana_program::pubkey::Pubkey;
    let mut _852: &[u8];
    let mut _853: !;
    let mut _854: solana_program::program_error::ProgramError;
    let mut _855: error::LendingError;
    let mut _858: (u64, &[u8]);
    let mut _859: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _860: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _861: &[u8];
    let mut _862: isize;
    let mut _864: !;
    let mut _865: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _869: (u64, &[u8]);
    let mut _870: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _871: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _872: &[u8];
    let mut _873: isize;
    let mut _875: !;
    let mut _876: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _880: (u64, &[u8]);
    let mut _881: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _882: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _883: &[u8];
    let mut _884: isize;
    let mut _886: !;
    let mut _887: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _891: (u64, &[u8]);
    let mut _892: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _893: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _894: &[u8];
    let mut _895: isize;
    let mut _897: !;
    let mut _898: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _900: state::reserve::ReserveConfig;
    let mut _901: u8;
    let mut _902: u8;
    let mut _903: u8;
    let mut _904: u8;
    let mut _905: u8;
    let mut _906: u8;
    let mut _907: u8;
    let mut _908: u8;
    let mut _909: u8;
    let mut _910: u8;
    let mut _911: u64;
    let mut _912: state::reserve::ReserveFees;
    let mut _913: u64;
    let mut _914: u64;
    let mut _915: u8;
    let mut _916: u64;
    let mut _917: u64;
    let mut _918: solana_program::pubkey::Pubkey;
    let mut _919: u8;
    let mut _920: u8;
    let mut _921: u64;
    let mut _922: state::reserve::ReserveType;
    let mut _923: std::option::Option<state::reserve::ReserveType>;
    let mut _924: u8;
    let mut _925: i64;
    let mut _926: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _927: u64;
    let mut _928: u64;
    let mut _929: state::rate_limiter::RateLimiterConfig;
    let mut _930: u64;
    let mut _931: u64;
    let mut _934: (u64, &[u8]);
    let mut _935: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _936: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _937: &[u8];
    let mut _938: isize;
    let mut _940: !;
    let mut _941: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _943: u64;
    let mut _946: (u64, &[u8]);
    let mut _947: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _948: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _949: &[u8];
    let mut _950: isize;
    let mut _952: !;
    let mut _953: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _955: u64;
    let mut _958: (u64, &[u8]);
    let mut _959: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _960: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _961: &[u8];
    let mut _962: isize;
    let mut _964: !;
    let mut _965: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _969: (u8, &[u8]);
    let mut _970: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _971: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _972: &[u8];
    let mut _973: isize;
    let mut _975: !;
    let mut _976: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _978: u64;
    let mut _979: u8;
    let mut _982: (u64, &[u8]);
    let mut _983: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _984: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _985: &[u8];
    let mut _986: isize;
    let mut _988: !;
    let mut _989: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _991: u64;
    let mut _994: (bool, &[u8]);
    let mut _995: (u8, &[u8]);
    let mut _996: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u8, &[u8])>;
    let mut _997: std::result::Result<(u8, &[u8]), solana_program::program_error::ProgramError>;
    let mut _998: &[u8];
    let mut _999: isize;
    let mut _1001: !;
    let mut _1002: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _1005: &[u8];
    let mut _1007: &[u8];
    let mut _1008: !;
    let mut _1009: solana_program::program_error::ProgramError;
    let mut _1010: error::LendingError;
    let mut _1011: bool;
    let mut _1014: (u64, &[u8]);
    let mut _1015: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>, (u64, &[u8])>;
    let mut _1016: std::result::Result<(u64, &[u8]), solana_program::program_error::ProgramError>;
    let mut _1017: &[u8];
    let mut _1018: isize;
    let mut _1020: !;
    let mut _1021: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
    let mut _1023: u64;
    let mut _1024: !;
    let _1025: ();
    let mut _1026: &str;
    let _1027: &str;
    let mut _1028: solana_program::program_error::ProgramError;
    let mut _1029: error::LendingError;
    let mut _1030: &u8;
    let mut _1031: bool;
    let mut _1032: bool;
    let mut _1033: bool;
    let mut _1034: bool;
    let mut _1035: isize;
    let mut _1036: isize;
    let mut _1037: isize;
    let mut _1038: isize;
    let mut _1039: isize;
    let mut _1040: isize;
    let mut _1041: isize;
    let mut _1042: isize;
    let mut _1043: isize;
    let mut _1044: isize;
    let mut _1045: isize;
    let mut _1046: isize;
    let mut _1047: isize;
    let mut _1048: isize;
    let mut _1049: isize;
    let mut _1050: isize;
    let mut _1051: isize;
    let mut _1052: isize;
    let mut _1053: isize;
    let mut _1054: isize;
    let mut _1055: isize;
    let mut _1056: isize;
    let mut _1057: isize;
    let mut _1058: isize;
    let mut _1059: isize;
    let mut _1060: isize;
    let mut _1061: isize;
    let mut _1062: isize;
    let mut _1063: isize;
    let mut _1064: isize;
    let mut _1065: isize;
    let mut _1066: isize;
    let mut _1067: isize;
    let mut _1068: isize;
    let mut _1069: isize;
    let mut _1070: isize;
    let mut _1071: isize;
    let mut _1072: isize;
    let mut _1073: isize;
    let mut _1074: isize;
    let mut _1075: isize;
    let mut _1076: isize;
    let mut _1077: isize;
    let mut _1078: isize;
    let mut _1079: isize;
    let mut _1080: isize;
    let mut _1081: isize;
    let mut _1082: isize;
    let mut _1083: isize;
    let mut _1084: isize;
    let mut _1085: isize;
    let mut _1086: isize;
    let mut _1087: isize;
    let mut _1088: isize;
    let mut _1089: isize;
    let mut _1090: isize;
    let mut _1091: isize;
    let mut _1092: isize;
    let mut _1093: isize;
    let mut _1094: isize;
    let mut _1095: isize;
    let mut _1096: isize;
    let mut _1097: isize;
    let mut _1098: isize;
    let mut _1099: isize;
    let mut _1100: isize;
    let mut _1101: isize;
    let mut _1102: isize;
    let mut _1103: isize;
    let mut _1104: isize;
    let mut _1105: isize;
    let mut _1106: isize;
    let mut _1107: isize;
    let mut _1108: isize;
    let mut _1109: isize;
    let mut _1110: isize;
    let mut _1111: isize;
    let mut _1112: isize;
    let mut _1113: isize;
    let mut _1114: isize;
    let mut _1115: isize;
    let mut _1116: isize;
    let mut _1117: isize;
    let mut _1118: isize;
    let mut _1119: isize;
    let mut _1120: isize;
    let mut _1121: isize;
    let mut _1122: isize;
    let mut _1123: isize;
    let mut _1124: isize;
    let mut _1125: isize;
    let mut _1126: isize;
    let mut _1127: isize;
    let mut _1128: isize;
    let mut _1129: isize;
    let mut _1130: isize;
    let mut _1131: isize;
    let mut _1132: isize;
    let mut _1133: isize;
    let mut _1134: isize;
    let mut _1135: isize;
    let mut _1136: isize;
    let mut _1137: isize;
    let mut _1138: isize;
    let mut _1139: isize;
    let mut _1140: isize;
    let mut _1141: isize;
    let mut _1142: isize;
    let mut _1143: isize;
    let mut _1144: isize;
    let mut _1145: isize;
    let mut _1146: isize;
    let mut _1147: isize;
    let mut _1148: isize;
    let mut _1149: isize;
    let mut _1150: isize;
    let mut _1151: isize;
    let mut _1152: isize;
    let mut _1153: isize;
    let mut _1154: isize;
    let mut _1155: isize;
    let mut _1156: isize;
    let mut _1157: isize;
    let mut _1158: isize;
    let mut _1159: isize;
    let mut _1160: isize;
    let mut _1161: isize;
    let mut _1162: isize;
    let mut _1163: isize;
    let mut _1164: isize;
    let mut _1165: isize;
    let mut _1166: isize;
    let mut _1167: isize;
    let mut _1168: isize;
    let mut _1169: isize;
    let mut _1170: isize;
    let mut _1171: isize;
    let mut _1172: isize;
    let mut _1173: isize;
    let mut _1174: isize;
    let mut _1175: isize;
    let mut _1176: isize;
    let mut _1177: isize;
    let mut _1178: isize;
    let mut _1179: isize;
    let mut _1180: isize;
    let mut _1181: isize;
    let mut _1182: isize;
    let mut _1183: isize;
    let mut _1184: isize;
    let mut _1185: isize;
    let mut _1186: isize;
    let mut _1187: isize;
    let mut _1188: isize;
    let mut _1189: isize;
    let mut _1190: isize;
    let mut _1191: isize;
    let mut _1192: isize;
    let mut _1193: isize;
    let mut _1194: isize;
    let mut _1195: isize;
    let mut _1196: isize;
    let mut _1197: isize;
    let mut _1198: isize;
    let mut _1199: isize;
    let mut _1200: isize;
    let mut _1201: isize;
    let mut _1202: isize;
    let mut _1203: isize;
    let mut _1204: isize;
    let mut _1205: isize;
    let mut _1206: isize;
    let mut _1207: isize;
    let mut _1208: isize;
    let mut _1209: isize;
    let mut _1210: isize;
    let mut _1211: isize;
    let mut _1212: isize;
    let mut _1213: isize;
    let mut _1214: isize;
    let mut _1215: isize;
    let mut _1216: isize;
    let mut _1217: isize;
    let mut _1218: isize;
    let mut _1219: isize;
    let mut _1220: isize;
    let mut _1221: isize;
    let mut _1222: isize;
    let mut _1223: isize;
    let mut _1224: isize;
    let mut _1225: isize;
    let mut _1226: isize;
    let mut _1227: isize;
    let mut _1228: isize;
    let mut _1229: isize;
    let mut _1230: isize;
    let mut _1231: isize;
    let mut _1232: isize;
    let mut _1233: isize;
    let mut _1234: isize;
    let mut _1235: isize;
    let mut _1236: isize;
    let mut _1237: isize;
    let mut _1238: isize;
    let mut _1239: isize;
    let mut _1240: isize;
    let mut _1241: isize;
    let mut _1242: isize;
    let mut _1243: isize;
    let mut _1244: isize;
    let mut _1245: isize;
    let mut _1246: isize;
    let mut _1247: isize;
    let mut _1248: isize;
    let mut _1249: isize;
    let mut _1250: isize;
    let mut _1251: isize;
    let mut _1252: isize;
    let mut _1253: isize;
    let mut _1254: isize;
    let mut _1255: isize;
    let mut _1256: isize;
    let mut _1257: isize;
    let mut _1258: isize;
    let mut _1259: isize;
    let mut _1260: isize;
    let mut _1261: isize;
    let mut _1262: isize;
    let mut _1263: isize;
    let mut _1264: isize;
    let mut _1265: isize;
    let mut _1266: isize;
    let mut _1267: isize;
    let mut _1268: isize;
    let mut _1269: isize;
    let mut _1270: isize;
    let mut _1271: isize;
    let mut _1272: isize;
    let mut _1273: isize;
    let mut _1274: isize;
    let mut _1275: isize;
    let mut _1276: isize;
    let mut _1277: isize;
    let mut _1278: isize;
    let mut _1279: isize;
    let mut _1280: isize;
    let mut _1281: isize;
    let mut _1282: isize;
    let mut _1283: isize;
    let mut _1284: isize;
    let mut _1285: isize;
    let mut _1286: isize;
    let mut _1287: isize;
    let mut _1288: isize;
    let mut _1289: isize;
    let mut _1290: isize;
    let mut _1291: isize;
    let mut _1292: isize;
    let mut _1293: isize;
    let mut _1294: isize;
    let mut _1295: isize;
    let mut _1296: isize;
    let mut _1297: isize;
    let mut _1298: isize;
    let mut _1299: isize;
    let mut _1300: isize;
    let mut _1301: isize;
    let mut _1302: isize;
    let mut _1303: isize;
    let mut _1304: isize;
    let mut _1305: isize;
    let mut _1306: isize;
    let mut _1307: isize;
    let mut _1308: isize;
    let mut _1309: isize;
    let mut _1310: isize;
    let mut _1311: isize;
    let mut _1312: isize;
    let mut _1313: isize;
    let mut _1314: isize;
    let mut _1315: isize;
    let mut _1316: isize;
    let mut _1317: isize;
    let mut _1318: isize;
    let mut _1319: isize;
    let mut _1320: isize;
    let mut _1321: isize;
    let mut _1322: isize;
    let mut _1323: isize;
    let mut _1324: isize;
    let mut _1325: isize;
    let mut _1326: isize;
    let mut _1327: isize;
    let mut _1328: isize;
    let mut _1329: isize;
    let mut _1330: isize;
    let mut _1331: isize;
    let mut _1332: isize;
    let mut _1333: isize;
    let mut _1334: isize;
    let mut _1335: isize;
    let mut _1336: isize;
    let mut _1337: isize;
    let mut _1338: isize;
    let mut _1339: isize;
    let mut _1340: isize;
    let mut _1341: isize;
    let mut _1342: isize;
    let mut _1343: isize;
    let mut _1344: isize;
    let mut _1345: isize;
    let mut _1346: isize;
    let mut _1347: isize;
    let mut _1348: isize;
    let mut _1349: isize;
    let mut _1350: isize;
    let mut _1351: isize;
    let mut _1352: isize;
    let mut _1353: isize;
    let mut _1354: isize;
    let mut _1355: isize;
    let mut _1356: isize;
    let mut _1357: isize;
    let mut _1358: isize;
    let mut _1359: isize;
    let mut _1360: isize;
    let mut _1361: isize;
    let mut _1362: isize;
    let mut _1363: isize;
    let mut _1364: isize;
    let mut _1365: isize;
    let mut _1366: isize;
    let mut _1367: isize;
    let mut _1368: isize;
    let mut _1369: isize;
    let mut _1370: isize;
    let mut _1371: isize;
    let mut _1372: isize;
    let mut _1373: isize;
    let mut _1374: isize;
    let mut _1375: isize;
    let mut _1376: isize;
    let mut _1377: isize;
    let mut _1378: isize;
    let mut _1379: isize;
    let mut _1380: isize;
    let mut _1381: isize;
    let mut _1382: isize;
    let mut _1383: isize;
    let mut _1384: isize;
    let mut _1385: isize;
    let mut _1386: isize;
    let mut _1387: isize;
    let mut _1388: isize;
    let mut _1389: isize;
    let mut _1390: isize;
    let mut _1391: isize;
    let mut _1392: isize;
    let mut _1393: isize;
    let mut _1394: isize;
    let mut _1395: isize;
    let mut _1396: isize;
    let mut _1397: isize;
    let mut _1398: isize;
    let mut _1399: isize;
    let mut _1400: isize;
    let mut _1401: isize;
    let mut _1402: isize;
    let mut _1403: isize;
    let mut _1404: isize;
    let mut _1405: isize;
    let mut _1406: isize;
    let mut _1407: isize;
    let mut _1408: isize;
    let mut _1409: isize;
    let mut _1410: isize;
    let mut _1411: isize;
    let mut _1412: isize;
    let mut _1413: isize;
    let mut _1414: isize;
    let mut _1415: isize;
    let mut _1416: isize;
    let mut _1417: isize;
    let mut _1418: isize;
    let mut _1419: isize;
    let mut _1420: isize;
    let mut _1421: isize;
    let mut _1422: isize;
    let mut _1423: isize;
    let mut _1424: isize;
    let mut _1425: isize;
    let mut _1426: isize;
    let mut _1427: isize;
    let mut _1428: isize;
    let mut _1429: isize;
    let mut _1430: isize;
    let mut _1431: isize;
    let mut _1432: isize;
    let mut _1433: isize;
    let mut _1434: isize;
    scope 1 {
        debug tag => _2;
        debug rest => _3;
        let _16: solana_program::pubkey::Pubkey;
        let _17: &[u8];
        let _23: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _26: (solana_program::pubkey::Pubkey, &[u8]);
        let _40: solana_program::pubkey::Pubkey;
        let _41: &[u8];
        let _47: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _50: (solana_program::pubkey::Pubkey, &[u8]);
        let _123: u64;
        let _124: &[u8];
        let _130: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _133: (u64, &[u8]);
        let _461: u64;
        let _462: &[u8];
        let _468: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _471: (u64, &[u8]);
        let _473: u64;
        let _474: &[u8];
        let _480: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _483: (u64, &[u8]);
        let _485: u64;
        let _486: &[u8];
        let _492: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _495: (u64, &[u8]);
        let _497: u64;
        let _498: &[u8];
        let _504: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _507: (u64, &[u8]);
        let _509: u64;
        let _510: &[u8];
        let _516: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _519: (u64, &[u8]);
        let _521: u64;
        let _522: &[u8];
        let _528: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _531: (u64, &[u8]);
        let _533: u64;
        let _534: &[u8];
        let _540: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _543: (u64, &[u8]);
        let _545: u64;
        let _546: &[u8];
        let _552: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _555: (u64, &[u8]);
        let _557: u64;
        let _558: &[u8];
        let _564: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _567: (u64, &[u8]);
        let _569: u64;
        let _570: &[u8];
        let _576: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _579: (u64, &[u8]);
        let _581: u8;
        let _582: &[u8];
        let _588: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _591: (u8, &[u8]);
        let _932: u64;
        let _933: &[u8];
        let _939: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _942: (u64, &[u8]);
        let _944: u64;
        let _945: &[u8];
        let _951: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _954: (u64, &[u8]);
        let _956: u64;
        let _957: &[u8];
        let _963: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _966: (u64, &[u8]);
        let _980: u64;
        let _981: &[u8];
        let _987: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _990: (u64, &[u8]);
        let _992: bool;
        let _993: &[u8];
        let _1000: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _1003: (u8, &[u8]);
        let _1004: &[u8];
        let _1006: &[u8];
        let _1012: u64;
        let _1013: &[u8];
        let _1019: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
        let _1022: (u64, &[u8]);
        scope 6 {
            debug owner => _16;
            debug rest => _17;
            let _27: &[u8; 32];
            let _28: &[u8];
            let _34: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _37: (&[u8; 32], &[u8]);
            scope 11 {
                debug quote_currency => _27;
                debug _rest => _28;
            }
            scope 12 {
                debug residual => _34;
                scope 13 {
                }
            }
            scope 14 {
                debug val => _37;
                scope 15 {
                }
            }
        }
        scope 7 {
            debug residual => _23;
            scope 8 {
            }
        }
        scope 9 {
            debug val => _26;
            scope 10 {
            }
        }
        scope 16 {
            debug new_owner => _40;
            debug rest => _41;
            let _51: u64;
            let _52: &[u8];
            let _58: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _61: (u64, &[u8]);
            scope 21 {
                debug window_duration => _51;
                debug rest => _52;
                let _62: u64;
                let _63: &[u8];
                let _69: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _72: (u64, &[u8]);
                scope 26 {
                    debug max_outflow => _62;
                    debug rest => _63;
                    let _73: std::option::Option<solana_program::pubkey::Pubkey>;
                    let _74: &[u8];
                    let _81: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _84: (u8, &[u8]);
                    let _85: &[u8];
                    let _88: &[u8];
                    scope 31 {
                        debug whitelisted_liquidator => _73;
                        debug rest => _74;
                        let _106: solana_program::pubkey::Pubkey;
                        let _107: &[u8];
                        let _113: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _116: (solana_program::pubkey::Pubkey, &[u8]);
                        scope 43 {
                            debug risk_authority => _106;
                            debug _rest => _107;
                        }
                        scope 44 {
                            debug residual => _113;
                            scope 45 {
                            }
                        }
                        scope 46 {
                            debug val => _116;
                            scope 47 {
                            }
                        }
                    }
                    scope 32 {
                        debug residual => _81;
                        scope 33 {
                        }
                    }
                    scope 34 {
                        debug val => _84;
                        scope 35 {
                        }
                    }
                    scope 36 {
                        debug rest => _85;
                    }
                    scope 37 {
                        debug rest => _88;
                        let _89: solana_program::pubkey::Pubkey;
                        let _90: &[u8];
                        let _96: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _99: (solana_program::pubkey::Pubkey, &[u8]);
                        scope 38 {
                            debug pubkey => _89;
                            debug rest => _90;
                        }
                        scope 39 {
                            debug residual => _96;
                            scope 40 {
                            }
                        }
                        scope 41 {
                            debug val => _99;
                            scope 42 {
                            }
                        }
                    }
                }
                scope 27 {
                    debug residual => _69;
                    scope 28 {
                    }
                }
                scope 29 {
                    debug val => _72;
                    scope 30 {
                    }
                }
            }
            scope 22 {
                debug residual => _58;
                scope 23 {
                }
            }
            scope 24 {
                debug val => _61;
                scope 25 {
                }
            }
        }
        scope 17 {
            debug residual => _47;
            scope 18 {
            }
        }
        scope 19 {
            debug val => _50;
            scope 20 {
            }
        }
        scope 48 {
            debug liquidity_amount => _123;
            debug rest => _124;
            let _134: u8;
            let _135: &[u8];
            let _141: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _144: (u8, &[u8]);
            scope 53 {
                debug optimal_utilization_rate => _134;
                debug rest => _135;
                let _145: u8;
                let _146: &[u8];
                let _152: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _155: (u8, &[u8]);
                scope 58 {
                    debug max_utilization_rate => _145;
                    debug rest => _146;
                    let _156: u8;
                    let _157: &[u8];
                    let _163: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _166: (u8, &[u8]);
                    scope 63 {
                        debug loan_to_value_ratio => _156;
                        debug rest => _157;
                        let _167: u8;
                        let _168: &[u8];
                        let _174: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _177: (u8, &[u8]);
                        scope 68 {
                            debug liquidation_bonus => _167;
                            debug rest => _168;
                            let _178: u8;
                            let _179: &[u8];
                            let _185: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                            let _188: (u8, &[u8]);
                            scope 73 {
                                debug liquidation_threshold => _178;
                                debug rest => _179;
                                let _189: u8;
                                let _190: &[u8];
                                let _196: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                let _199: (u8, &[u8]);
                                scope 78 {
                                    debug min_borrow_rate => _189;
                                    debug rest => _190;
                                    let _200: u8;
                                    let _201: &[u8];
                                    let _207: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                    let _210: (u8, &[u8]);
                                    scope 83 {
                                        debug optimal_borrow_rate => _200;
                                        debug rest => _201;
                                        let _211: u8;
                                        let _212: &[u8];
                                        let _218: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _221: (u8, &[u8]);
                                        scope 88 {
                                            debug max_borrow_rate => _211;
                                            debug rest => _212;
                                            let _222: u64;
                                            let _223: &[u8];
                                            let _229: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                            let _232: (u64, &[u8]);
                                            scope 93 {
                                                debug super_max_borrow_rate => _222;
                                                debug rest => _223;
                                                let _233: u64;
                                                let _234: &[u8];
                                                let _240: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                let _243: (u64, &[u8]);
                                                scope 98 {
                                                    debug borrow_fee_wad => _233;
                                                    debug rest => _234;
                                                    let _244: u64;
                                                    let _245: &[u8];
                                                    let _251: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                    let _254: (u64, &[u8]);
                                                    scope 103 {
                                                        debug flash_loan_fee_wad => _244;
                                                        debug rest => _245;
                                                        let _255: u8;
                                                        let _256: &[u8];
                                                        let _262: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                        let _265: (u8, &[u8]);
                                                        scope 108 {
                                                            debug host_fee_percentage => _255;
                                                            debug rest => _256;
                                                            let _266: u64;
                                                            let _267: &[u8];
                                                            let _273: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                            let _276: (u64, &[u8]);
                                                            scope 113 {
                                                                debug deposit_limit => _266;
                                                                debug rest => _267;
                                                                let _277: u64;
                                                                let _278: &[u8];
                                                                let _284: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                let _287: (u64, &[u8]);
                                                                scope 118 {
                                                                    debug borrow_limit => _277;
                                                                    debug rest => _278;
                                                                    let _288: solana_program::pubkey::Pubkey;
                                                                    let _289: &[u8];
                                                                    let _295: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                    let _298: (solana_program::pubkey::Pubkey, &[u8]);
                                                                    scope 123 {
                                                                        debug fee_receiver => _288;
                                                                        debug rest => _289;
                                                                        let _299: u8;
                                                                        let _300: &[u8];
                                                                        let _306: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                        let _309: (u8, &[u8]);
                                                                        scope 128 {
                                                                            debug protocol_liquidation_fee => _299;
                                                                            debug rest => _300;
                                                                            let _310: u8;
                                                                            let _311: &[u8];
                                                                            let _317: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                            let _320: (u8, &[u8]);
                                                                            scope 133 {
                                                                                debug protocol_take_rate => _310;
                                                                                debug rest => _311;
                                                                                let _321: u64;
                                                                                let _322: &[u8];
                                                                                let _328: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                let _331: (u64, &[u8]);
                                                                                scope 138 {
                                                                                    debug added_borrow_weight_bps => _321;
                                                                                    debug rest => _322;
                                                                                    let _332: u8;
                                                                                    let _333: &[u8];
                                                                                    let _339: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                    let _342: (u8, &[u8]);
                                                                                    scope 143 {
                                                                                        debug asset_type => _332;
                                                                                        debug rest => _333;
                                                                                        let _343: u8;
                                                                                        let _344: &[u8];
                                                                                        let _350: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                        let _353: (u8, &[u8]);
                                                                                        scope 148 {
                                                                                            debug max_liquidation_bonus => _343;
                                                                                            debug rest => _344;
                                                                                            let _354: u8;
                                                                                            let _355: &[u8];
                                                                                            let _361: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                            let _364: (u8, &[u8]);
                                                                                            scope 153 {
                                                                                                debug max_liquidation_threshold => _354;
                                                                                                debug rest => _355;
                                                                                                let _365: i64;
                                                                                                let _366: &[u8];
                                                                                                let _372: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                let _375: (i64, &[u8]);
                                                                                                scope 158 {
                                                                                                    debug scaled_price_offset_bps => _365;
                                                                                                    debug rest => _366;
                                                                                                    let _376: std::option::Option<solana_program::pubkey::Pubkey>;
                                                                                                    let _377: &[u8];
                                                                                                    let _384: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                    let _387: (u8, &[u8]);
                                                                                                    let _388: &[u8];
                                                                                                    let _391: &[u8];
                                                                                                    scope 163 {
                                                                                                        debug extra_oracle_pubkey => _376;
                                                                                                        debug rest => _377;
                                                                                                        let _409: u64;
                                                                                                        let _410: &[u8];
                                                                                                        let _416: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                        let _419: (u64, &[u8]);
                                                                                                        scope 175 {
                                                                                                            debug attributed_borrow_limit_open => _409;
                                                                                                            debug rest => _410;
                                                                                                            let _420: u64;
                                                                                                            let _421: &[u8];
                                                                                                            let _427: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                            let _430: (u64, &[u8]);
                                                                                                            scope 180 {
                                                                                                                debug attributed_borrow_limit_close => _420;
                                                                                                                debug _rest => _421;
                                                                                                            }
                                                                                                            scope 181 {
                                                                                                                debug residual => _427;
                                                                                                                scope 182 {
                                                                                                                }
                                                                                                            }
                                                                                                            scope 183 {
                                                                                                                debug val => _430;
                                                                                                                scope 184 {
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        scope 176 {
                                                                                                            debug residual => _416;
                                                                                                            scope 177 {
                                                                                                            }
                                                                                                        }
                                                                                                        scope 178 {
                                                                                                            debug val => _419;
                                                                                                            scope 179 {
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    scope 164 {
                                                                                                        debug residual => _384;
                                                                                                        scope 165 {
                                                                                                        }
                                                                                                    }
                                                                                                    scope 166 {
                                                                                                        debug val => _387;
                                                                                                        scope 167 {
                                                                                                        }
                                                                                                    }
                                                                                                    scope 168 {
                                                                                                        debug rest => _388;
                                                                                                    }
                                                                                                    scope 169 {
                                                                                                        debug rest => _391;
                                                                                                        let _392: solana_program::pubkey::Pubkey;
                                                                                                        let _393: &[u8];
                                                                                                        let _399: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                        let _402: (solana_program::pubkey::Pubkey, &[u8]);
                                                                                                        scope 170 {
                                                                                                            debug pubkey => _392;
                                                                                                            debug rest => _393;
                                                                                                        }
                                                                                                        scope 171 {
                                                                                                            debug residual => _399;
                                                                                                            scope 172 {
                                                                                                            }
                                                                                                        }
                                                                                                        scope 173 {
                                                                                                            debug val => _402;
                                                                                                            scope 174 {
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                scope 159 {
                                                                                                    debug residual => _372;
                                                                                                    scope 160 {
                                                                                                    }
                                                                                                }
                                                                                                scope 161 {
                                                                                                    debug val => _375;
                                                                                                    scope 162 {
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            scope 154 {
                                                                                                debug residual => _361;
                                                                                                scope 155 {
                                                                                                }
                                                                                            }
                                                                                            scope 156 {
                                                                                                debug val => _364;
                                                                                                scope 157 {
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        scope 149 {
                                                                                            debug residual => _350;
                                                                                            scope 150 {
                                                                                            }
                                                                                        }
                                                                                        scope 151 {
                                                                                            debug val => _353;
                                                                                            scope 152 {
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    scope 144 {
                                                                                        debug residual => _339;
                                                                                        scope 145 {
                                                                                        }
                                                                                    }
                                                                                    scope 146 {
                                                                                        debug val => _342;
                                                                                        scope 147 {
                                                                                        }
                                                                                    }
                                                                                }
                                                                                scope 139 {
                                                                                    debug residual => _328;
                                                                                    scope 140 {
                                                                                    }
                                                                                }
                                                                                scope 141 {
                                                                                    debug val => _331;
                                                                                    scope 142 {
                                                                                    }
                                                                                }
                                                                            }
                                                                            scope 134 {
                                                                                debug residual => _317;
                                                                                scope 135 {
                                                                                }
                                                                            }
                                                                            scope 136 {
                                                                                debug val => _320;
                                                                                scope 137 {
                                                                                }
                                                                            }
                                                                        }
                                                                        scope 129 {
                                                                            debug residual => _306;
                                                                            scope 130 {
                                                                            }
                                                                        }
                                                                        scope 131 {
                                                                            debug val => _309;
                                                                            scope 132 {
                                                                            }
                                                                        }
                                                                    }
                                                                    scope 124 {
                                                                        debug residual => _295;
                                                                        scope 125 {
                                                                        }
                                                                    }
                                                                    scope 126 {
                                                                        debug val => _298;
                                                                        scope 127 {
                                                                        }
                                                                    }
                                                                }
                                                                scope 119 {
                                                                    debug residual => _284;
                                                                    scope 120 {
                                                                    }
                                                                }
                                                                scope 121 {
                                                                    debug val => _287;
                                                                    scope 122 {
                                                                    }
                                                                }
                                                            }
                                                            scope 114 {
                                                                debug residual => _273;
                                                                scope 115 {
                                                                }
                                                            }
                                                            scope 116 {
                                                                debug val => _276;
                                                                scope 117 {
                                                                }
                                                            }
                                                        }
                                                        scope 109 {
                                                            debug residual => _262;
                                                            scope 110 {
                                                            }
                                                        }
                                                        scope 111 {
                                                            debug val => _265;
                                                            scope 112 {
                                                            }
                                                        }
                                                    }
                                                    scope 104 {
                                                        debug residual => _251;
                                                        scope 105 {
                                                        }
                                                    }
                                                    scope 106 {
                                                        debug val => _254;
                                                        scope 107 {
                                                        }
                                                    }
                                                }
                                                scope 99 {
                                                    debug residual => _240;
                                                    scope 100 {
                                                    }
                                                }
                                                scope 101 {
                                                    debug val => _243;
                                                    scope 102 {
                                                    }
                                                }
                                            }
                                            scope 94 {
                                                debug residual => _229;
                                                scope 95 {
                                                }
                                            }
                                            scope 96 {
                                                debug val => _232;
                                                scope 97 {
                                                }
                                            }
                                        }
                                        scope 89 {
                                            debug residual => _218;
                                            scope 90 {
                                            }
                                        }
                                        scope 91 {
                                            debug val => _221;
                                            scope 92 {
                                            }
                                        }
                                    }
                                    scope 84 {
                                        debug residual => _207;
                                        scope 85 {
                                        }
                                    }
                                    scope 86 {
                                        debug val => _210;
                                        scope 87 {
                                        }
                                    }
                                }
                                scope 79 {
                                    debug residual => _196;
                                    scope 80 {
                                    }
                                }
                                scope 81 {
                                    debug val => _199;
                                    scope 82 {
                                    }
                                }
                            }
                            scope 74 {
                                debug residual => _185;
                                scope 75 {
                                }
                            }
                            scope 76 {
                                debug val => _188;
                                scope 77 {
                                }
                            }
                        }
                        scope 69 {
                            debug residual => _174;
                            scope 70 {
                            }
                        }
                        scope 71 {
                            debug val => _177;
                            scope 72 {
                            }
                        }
                    }
                    scope 64 {
                        debug residual => _163;
                        scope 65 {
                        }
                    }
                    scope 66 {
                        debug val => _166;
                        scope 67 {
                        }
                    }
                }
                scope 59 {
                    debug residual => _152;
                    scope 60 {
                    }
                }
                scope 61 {
                    debug val => _155;
                    scope 62 {
                    }
                }
            }
            scope 54 {
                debug residual => _141;
                scope 55 {
                }
            }
            scope 56 {
                debug val => _144;
                scope 57 {
                }
            }
        }
        scope 49 {
            debug residual => _130;
            scope 50 {
            }
        }
        scope 51 {
            debug val => _133;
            scope 52 {
            }
        }
        scope 185 {
            debug liquidity_amount => _461;
            debug _rest => _462;
        }
        scope 186 {
            debug residual => _468;
            scope 187 {
            }
        }
        scope 188 {
            debug val => _471;
            scope 189 {
            }
        }
        scope 190 {
            debug collateral_amount => _473;
            debug _rest => _474;
        }
        scope 191 {
            debug residual => _480;
            scope 192 {
            }
        }
        scope 193 {
            debug val => _483;
            scope 194 {
            }
        }
        scope 195 {
            debug collateral_amount => _485;
            debug _rest => _486;
        }
        scope 196 {
            debug residual => _492;
            scope 197 {
            }
        }
        scope 198 {
            debug val => _495;
            scope 199 {
            }
        }
        scope 200 {
            debug collateral_amount => _497;
            debug _rest => _498;
        }
        scope 201 {
            debug residual => _504;
            scope 202 {
            }
        }
        scope 203 {
            debug val => _507;
            scope 204 {
            }
        }
        scope 205 {
            debug liquidity_amount => _509;
            debug _rest => _510;
        }
        scope 206 {
            debug residual => _516;
            scope 207 {
            }
        }
        scope 208 {
            debug val => _519;
            scope 209 {
            }
        }
        scope 210 {
            debug liquidity_amount => _521;
            debug _rest => _522;
        }
        scope 211 {
            debug residual => _528;
            scope 212 {
            }
        }
        scope 213 {
            debug val => _531;
            scope 214 {
            }
        }
        scope 215 {
            debug liquidity_amount => _533;
            debug _rest => _534;
        }
        scope 216 {
            debug residual => _540;
            scope 217 {
            }
        }
        scope 218 {
            debug val => _543;
            scope 219 {
            }
        }
        scope 220 {
            debug amount => _545;
            debug _rest => _546;
        }
        scope 221 {
            debug residual => _552;
            scope 222 {
            }
        }
        scope 223 {
            debug val => _555;
            scope 224 {
            }
        }
        scope 225 {
            debug liquidity_amount => _557;
            debug _rest => _558;
        }
        scope 226 {
            debug residual => _564;
            scope 227 {
            }
        }
        scope 228 {
            debug val => _567;
            scope 229 {
            }
        }
        scope 230 {
            debug collateral_amount => _569;
            debug _rest => _570;
        }
        scope 231 {
            debug residual => _576;
            scope 232 {
            }
        }
        scope 233 {
            debug val => _579;
            scope 234 {
            }
        }
        scope 235 {
            debug optimal_utilization_rate => _581;
            debug rest => _582;
            let _592: u8;
            let _593: &[u8];
            let _599: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _602: (u8, &[u8]);
            scope 240 {
                debug max_utilization_rate => _592;
                debug rest => _593;
                let _603: u8;
                let _604: &[u8];
                let _610: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                let _613: (u8, &[u8]);
                scope 245 {
                    debug loan_to_value_ratio => _603;
                    debug rest => _604;
                    let _614: u8;
                    let _615: &[u8];
                    let _621: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                    let _624: (u8, &[u8]);
                    scope 250 {
                        debug liquidation_bonus => _614;
                        debug rest => _615;
                        let _625: u8;
                        let _626: &[u8];
                        let _632: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                        let _635: (u8, &[u8]);
                        scope 255 {
                            debug liquidation_threshold => _625;
                            debug rest => _626;
                            let _636: u8;
                            let _637: &[u8];
                            let _643: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                            let _646: (u8, &[u8]);
                            scope 260 {
                                debug min_borrow_rate => _636;
                                debug rest => _637;
                                let _647: u8;
                                let _648: &[u8];
                                let _654: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                let _657: (u8, &[u8]);
                                scope 265 {
                                    debug optimal_borrow_rate => _647;
                                    debug rest => _648;
                                    let _658: u8;
                                    let _659: &[u8];
                                    let _665: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                    let _668: (u8, &[u8]);
                                    scope 270 {
                                        debug max_borrow_rate => _658;
                                        debug rest => _659;
                                        let _669: u64;
                                        let _670: &[u8];
                                        let _676: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                        let _679: (u64, &[u8]);
                                        scope 275 {
                                            debug super_max_borrow_rate => _669;
                                            debug rest => _670;
                                            let _680: u64;
                                            let _681: &[u8];
                                            let _687: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                            let _690: (u64, &[u8]);
                                            scope 280 {
                                                debug borrow_fee_wad => _680;
                                                debug rest => _681;
                                                let _691: u64;
                                                let _692: &[u8];
                                                let _698: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                let _701: (u64, &[u8]);
                                                scope 285 {
                                                    debug flash_loan_fee_wad => _691;
                                                    debug rest => _692;
                                                    let _702: u8;
                                                    let _703: &[u8];
                                                    let _709: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                    let _712: (u8, &[u8]);
                                                    scope 290 {
                                                        debug host_fee_percentage => _702;
                                                        debug rest => _703;
                                                        let _713: u64;
                                                        let _714: &[u8];
                                                        let _720: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                        let _723: (u64, &[u8]);
                                                        scope 295 {
                                                            debug deposit_limit => _713;
                                                            debug rest => _714;
                                                            let _724: u64;
                                                            let _725: &[u8];
                                                            let _731: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                            let _734: (u64, &[u8]);
                                                            scope 300 {
                                                                debug borrow_limit => _724;
                                                                debug rest => _725;
                                                                let _735: solana_program::pubkey::Pubkey;
                                                                let _736: &[u8];
                                                                let _742: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                let _745: (solana_program::pubkey::Pubkey, &[u8]);
                                                                scope 305 {
                                                                    debug fee_receiver => _735;
                                                                    debug rest => _736;
                                                                    let _746: u8;
                                                                    let _747: &[u8];
                                                                    let _753: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                    let _756: (u8, &[u8]);
                                                                    scope 310 {
                                                                        debug protocol_liquidation_fee => _746;
                                                                        debug rest => _747;
                                                                        let _757: u8;
                                                                        let _758: &[u8];
                                                                        let _764: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                        let _767: (u8, &[u8]);
                                                                        scope 315 {
                                                                            debug protocol_take_rate => _757;
                                                                            debug rest => _758;
                                                                            let _768: u64;
                                                                            let _769: &[u8];
                                                                            let _775: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                            let _778: (u64, &[u8]);
                                                                            scope 320 {
                                                                                debug added_borrow_weight_bps => _768;
                                                                                debug rest => _769;
                                                                                let _779: u8;
                                                                                let _780: &[u8];
                                                                                let _786: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                let _789: (u8, &[u8]);
                                                                                scope 325 {
                                                                                    debug asset_type => _779;
                                                                                    debug rest => _780;
                                                                                    let _790: u8;
                                                                                    let _791: &[u8];
                                                                                    let _797: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                    let _800: (u8, &[u8]);
                                                                                    scope 330 {
                                                                                        debug max_liquidation_bonus => _790;
                                                                                        debug rest => _791;
                                                                                        let _801: u8;
                                                                                        let _802: &[u8];
                                                                                        let _808: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                        let _811: (u8, &[u8]);
                                                                                        scope 335 {
                                                                                            debug max_liquidation_threshold => _801;
                                                                                            debug rest => _802;
                                                                                            let _812: i64;
                                                                                            let _813: &[u8];
                                                                                            let _819: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                            let _822: (i64, &[u8]);
                                                                                            scope 340 {
                                                                                                debug scaled_price_offset_bps => _812;
                                                                                                debug rest => _813;
                                                                                                let _823: std::option::Option<solana_program::pubkey::Pubkey>;
                                                                                                let _824: &[u8];
                                                                                                let _831: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                let _834: (u8, &[u8]);
                                                                                                let _835: &[u8];
                                                                                                let _838: &[u8];
                                                                                                scope 345 {
                                                                                                    debug extra_oracle_pubkey => _823;
                                                                                                    debug rest => _824;
                                                                                                    let _856: u64;
                                                                                                    let _857: &[u8];
                                                                                                    let _863: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                    let _866: (u64, &[u8]);
                                                                                                    scope 357 {
                                                                                                        debug attributed_borrow_limit_open => _856;
                                                                                                        debug rest => _857;
                                                                                                        let _867: u64;
                                                                                                        let _868: &[u8];
                                                                                                        let _874: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                        let _877: (u64, &[u8]);
                                                                                                        scope 362 {
                                                                                                            debug attributed_borrow_limit_close => _867;
                                                                                                            debug rest => _868;
                                                                                                            let _878: u64;
                                                                                                            let _879: &[u8];
                                                                                                            let _885: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                            let _888: (u64, &[u8]);
                                                                                                            scope 367 {
                                                                                                                debug window_duration => _878;
                                                                                                                debug rest => _879;
                                                                                                                let _889: u64;
                                                                                                                let _890: &[u8];
                                                                                                                let _896: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                                let _899: (u64, &[u8]);
                                                                                                                scope 372 {
                                                                                                                    debug max_outflow => _889;
                                                                                                                    debug _rest => _890;
                                                                                                                }
                                                                                                                scope 373 {
                                                                                                                    debug residual => _896;
                                                                                                                    scope 374 {
                                                                                                                    }
                                                                                                                }
                                                                                                                scope 375 {
                                                                                                                    debug val => _899;
                                                                                                                    scope 376 {
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                            scope 368 {
                                                                                                                debug residual => _885;
                                                                                                                scope 369 {
                                                                                                                }
                                                                                                            }
                                                                                                            scope 370 {
                                                                                                                debug val => _888;
                                                                                                                scope 371 {
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                        scope 363 {
                                                                                                            debug residual => _874;
                                                                                                            scope 364 {
                                                                                                            }
                                                                                                        }
                                                                                                        scope 365 {
                                                                                                            debug val => _877;
                                                                                                            scope 366 {
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    scope 358 {
                                                                                                        debug residual => _863;
                                                                                                        scope 359 {
                                                                                                        }
                                                                                                    }
                                                                                                    scope 360 {
                                                                                                        debug val => _866;
                                                                                                        scope 361 {
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                                scope 346 {
                                                                                                    debug residual => _831;
                                                                                                    scope 347 {
                                                                                                    }
                                                                                                }
                                                                                                scope 348 {
                                                                                                    debug val => _834;
                                                                                                    scope 349 {
                                                                                                    }
                                                                                                }
                                                                                                scope 350 {
                                                                                                    debug rest => _835;
                                                                                                }
                                                                                                scope 351 {
                                                                                                    debug rest => _838;
                                                                                                    let _839: solana_program::pubkey::Pubkey;
                                                                                                    let _840: &[u8];
                                                                                                    let _846: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
                                                                                                    let _849: (solana_program::pubkey::Pubkey, &[u8]);
                                                                                                    scope 352 {
                                                                                                        debug pubkey => _839;
                                                                                                        debug rest => _840;
                                                                                                    }
                                                                                                    scope 353 {
                                                                                                        debug residual => _846;
                                                                                                        scope 354 {
                                                                                                        }
                                                                                                    }
                                                                                                    scope 355 {
                                                                                                        debug val => _849;
                                                                                                        scope 356 {
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                            scope 341 {
                                                                                                debug residual => _819;
                                                                                                scope 342 {
                                                                                                }
                                                                                            }
                                                                                            scope 343 {
                                                                                                debug val => _822;
                                                                                                scope 344 {
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                        scope 336 {
                                                                                            debug residual => _808;
                                                                                            scope 337 {
                                                                                            }
                                                                                        }
                                                                                        scope 338 {
                                                                                            debug val => _811;
                                                                                            scope 339 {
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                    scope 331 {
                                                                                        debug residual => _797;
                                                                                        scope 332 {
                                                                                        }
                                                                                    }
                                                                                    scope 333 {
                                                                                        debug val => _800;
                                                                                        scope 334 {
                                                                                        }
                                                                                    }
                                                                                }
                                                                                scope 326 {
                                                                                    debug residual => _786;
                                                                                    scope 327 {
                                                                                    }
                                                                                }
                                                                                scope 328 {
                                                                                    debug val => _789;
                                                                                    scope 329 {
                                                                                    }
                                                                                }
                                                                            }
                                                                            scope 321 {
                                                                                debug residual => _775;
                                                                                scope 322 {
                                                                                }
                                                                            }
                                                                            scope 323 {
                                                                                debug val => _778;
                                                                                scope 324 {
                                                                                }
                                                                            }
                                                                        }
                                                                        scope 316 {
                                                                            debug residual => _764;
                                                                            scope 317 {
                                                                            }
                                                                        }
                                                                        scope 318 {
                                                                            debug val => _767;
                                                                            scope 319 {
                                                                            }
                                                                        }
                                                                    }
                                                                    scope 311 {
                                                                        debug residual => _753;
                                                                        scope 312 {
                                                                        }
                                                                    }
                                                                    scope 313 {
                                                                        debug val => _756;
                                                                        scope 314 {
                                                                        }
                                                                    }
                                                                }
                                                                scope 306 {
                                                                    debug residual => _742;
                                                                    scope 307 {
                                                                    }
                                                                }
                                                                scope 308 {
                                                                    debug val => _745;
                                                                    scope 309 {
                                                                    }
                                                                }
                                                            }
                                                            scope 301 {
                                                                debug residual => _731;
                                                                scope 302 {
                                                                }
                                                            }
                                                            scope 303 {
                                                                debug val => _734;
                                                                scope 304 {
                                                                }
                                                            }
                                                        }
                                                        scope 296 {
                                                            debug residual => _720;
                                                            scope 297 {
                                                            }
                                                        }
                                                        scope 298 {
                                                            debug val => _723;
                                                            scope 299 {
                                                            }
                                                        }
                                                    }
                                                    scope 291 {
                                                        debug residual => _709;
                                                        scope 292 {
                                                        }
                                                    }
                                                    scope 293 {
                                                        debug val => _712;
                                                        scope 294 {
                                                        }
                                                    }
                                                }
                                                scope 286 {
                                                    debug residual => _698;
                                                    scope 287 {
                                                    }
                                                }
                                                scope 288 {
                                                    debug val => _701;
                                                    scope 289 {
                                                    }
                                                }
                                            }
                                            scope 281 {
                                                debug residual => _687;
                                                scope 282 {
                                                }
                                            }
                                            scope 283 {
                                                debug val => _690;
                                                scope 284 {
                                                }
                                            }
                                        }
                                        scope 276 {
                                            debug residual => _676;
                                            scope 277 {
                                            }
                                        }
                                        scope 278 {
                                            debug val => _679;
                                            scope 279 {
                                            }
                                        }
                                    }
                                    scope 271 {
                                        debug residual => _665;
                                        scope 272 {
                                        }
                                    }
                                    scope 273 {
                                        debug val => _668;
                                        scope 274 {
                                        }
                                    }
                                }
                                scope 266 {
                                    debug residual => _654;
                                    scope 267 {
                                    }
                                }
                                scope 268 {
                                    debug val => _657;
                                    scope 269 {
                                    }
                                }
                            }
                            scope 261 {
                                debug residual => _643;
                                scope 262 {
                                }
                            }
                            scope 263 {
                                debug val => _646;
                                scope 264 {
                                }
                            }
                        }
                        scope 256 {
                            debug residual => _632;
                            scope 257 {
                            }
                        }
                        scope 258 {
                            debug val => _635;
                            scope 259 {
                            }
                        }
                    }
                    scope 251 {
                        debug residual => _621;
                        scope 252 {
                        }
                    }
                    scope 253 {
                        debug val => _624;
                        scope 254 {
                        }
                    }
                }
                scope 246 {
                    debug residual => _610;
                    scope 247 {
                    }
                }
                scope 248 {
                    debug val => _613;
                    scope 249 {
                    }
                }
            }
            scope 241 {
                debug residual => _599;
                scope 242 {
                }
            }
            scope 243 {
                debug val => _602;
                scope 244 {
                }
            }
        }
        scope 236 {
            debug residual => _588;
            scope 237 {
            }
        }
        scope 238 {
            debug val => _591;
            scope 239 {
            }
        }
        scope 377 {
            debug liquidity_amount => _932;
            debug _rest => _933;
        }
        scope 378 {
            debug residual => _939;
            scope 379 {
            }
        }
        scope 380 {
            debug val => _942;
            scope 381 {
            }
        }
        scope 382 {
            debug liquidity_amount => _944;
            debug _rest => _945;
        }
        scope 383 {
            debug residual => _951;
            scope 384 {
            }
        }
        scope 385 {
            debug val => _954;
            scope 386 {
            }
        }
        scope 387 {
            debug liquidity_amount => _956;
            debug rest => _957;
            let _967: u8;
            let _968: &[u8];
            let _974: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>;
            let _977: (u8, &[u8]);
            scope 392 {
                debug borrow_instruction_index => _967;
                debug _rest => _968;
            }
            scope 393 {
                debug residual => _974;
                scope 394 {
                }
            }
            scope 395 {
                debug val => _977;
                scope 396 {
                }
            }
        }
        scope 388 {
            debug residual => _963;
            scope 389 {
            }
        }
        scope 390 {
            debug val => _966;
            scope 391 {
            }
        }
        scope 397 {
            debug liquidity_amount => _980;
            debug _rest => _981;
        }
        scope 398 {
            debug residual => _987;
            scope 399 {
            }
        }
        scope 400 {
            debug val => _990;
            scope 401 {
            }
        }
        scope 402 {
            debug closeable => _992;
            debug _rest => _993;
        }
        scope 403 {
            debug residual => _1000;
            scope 404 {
            }
        }
        scope 405 {
            debug val => _1003;
            scope 406 {
            }
        }
        scope 407 {
            debug rest => _1004;
        }
        scope 408 {
            debug rest => _1006;
        }
        scope 409 {
            debug liquidity_amount => _1012;
            debug _rest => _1013;
        }
        scope 410 {
            debug residual => _1019;
            scope 411 {
            }
        }
        scope 412 {
            debug val => _1022;
            scope 413 {
            }
        }
    }
    scope 2 {
        debug residual => _11;
        scope 3 {
        }
    }
    scope 4 {
        debug val => _14;
        scope 5 {
        }
    }

    bb0: {
        _1034 = const false;
        _1033 = const false;
        _1032 = const false;
        _1031 = const false;
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &(*_1);
        _7 = core::slice::<impl [u8]>::split_first(move _8) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_8);
        StorageLive(_9);
        _9 = LendingError::InstructionUnpackError;
        _6 = Option::<(&u8, &[u8])>::ok_or::<LendingError>(move _7, move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_7);
        _5 = <Result<(&u8, &[u8]), LendingError> as Try>::branch(move _6) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_6);
        _10 = discriminant(_5);
        switchInt(move _10) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_14);
        _14 = ((_5 as Continue).0: (&u8, &[u8]));
        _4 = _14;
        StorageDead(_14);
        StorageLive(_2);
        _1030 = deref_copy (_4.0: &u8);
        _2 = (*_1030);
        StorageLive(_3);
        _3 = (_4.1: &[u8]);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_15);
        switchInt(_2) -> [0: bb9, 1: bb20, 2: bb56, 3: bb199, 4: bb200, 5: bb206, 6: bb212, 7: bb213, 8: bb214, 9: bb220, 10: bb226, 11: bb232, 12: bb238, 13: bb244, 14: bb250, 15: bb256, 16: bb262, 17: bb410, 18: bb416, 19: bb417, 20: bb423, 21: bb434, 22: bb440, 23: bb441, 24: bb452, otherwise: bb8];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_11);
        _11 = move ((_5 as Break).0: std::result::Result<std::convert::Infallible, error::LendingError>);
        StorageLive(_13);
        _13 = move _11;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, LendingError>>>::from_residual(move _13) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_13);
        StorageDead(_11);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb515;
    }

    bb8: {
        StorageLive(_1025);
        StorageLive(_1026);
        StorageLive(_1027);
        _1027 = const "Instruction cannot be unpacked";
        _1026 = &(*_1027);
        _1025 = solana_program::log::sol_log(move _1026) -> [return: bb458, unwind continue];
    }

    bb9: {
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        _21 = &(*_3);
        _20 = LendingInstruction::unpack_pubkey(move _21) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_21);
        _19 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _20) -> [return: bb11, unwind: bb516];
    }

    bb11: {
        StorageDead(_20);
        _22 = discriminant(_19);
        switchInt(move _22) -> [0: bb12, 1: bb13, otherwise: bb5];
    }

    bb12: {
        StorageLive(_26);
        _26 = ((_19 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _18 = _26;
        StorageDead(_26);
        StorageLive(_16);
        _16 = (_18.0: solana_program::pubkey::Pubkey);
        StorageLive(_17);
        _17 = (_18.1: &[u8]);
        _1035 = discriminant(_19);
        StorageDead(_19);
        StorageDead(_18);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        _32 = &(*_17);
        _31 = LendingInstruction::unpack_bytes32(move _32) -> [return: bb15, unwind continue];
    }

    bb13: {
        StorageLive(_23);
        _23 = move ((_19 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_25);
        _25 = move _23;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _25) -> [return: bb14, unwind: bb599];
    }

    bb14: {
        StorageDead(_25);
        StorageDead(_23);
        _1353 = discriminant(_19);
        StorageDead(_19);
        StorageDead(_18);
        goto -> bb514;
    }

    bb15: {
        StorageDead(_32);
        _30 = <Result<(&[u8; 32], &[u8]), ProgramError> as Try>::branch(move _31) -> [return: bb16, unwind: bb516];
    }

    bb16: {
        StorageDead(_31);
        _33 = discriminant(_30);
        switchInt(move _33) -> [0: bb17, 1: bb18, otherwise: bb5];
    }

    bb17: {
        StorageLive(_37);
        _37 = ((_30 as Continue).0: (&[u8; 32], &[u8]));
        _29 = _37;
        StorageDead(_37);
        StorageLive(_27);
        _27 = (_29.0: &[u8; 32]);
        StorageLive(_28);
        _28 = (_29.1: &[u8]);
        _1037 = discriminant(_30);
        StorageDead(_30);
        StorageDead(_29);
        StorageLive(_38);
        _38 = _16;
        StorageLive(_39);
        _39 = (*_27);
        _15 = LendingInstruction::InitLendingMarket { owner: move _38, quote_currency: move _39 };
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb460;
    }

    bb18: {
        StorageLive(_34);
        _34 = move ((_30 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_36);
        _36 = move _34;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _36) -> [return: bb19, unwind: bb598];
    }

    bb19: {
        StorageDead(_36);
        StorageDead(_34);
        _1351 = discriminant(_30);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb514;
    }

    bb20: {
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &(*_3);
        _44 = LendingInstruction::unpack_pubkey(move _45) -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageDead(_45);
        _43 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _44) -> [return: bb22, unwind: bb516];
    }

    bb22: {
        StorageDead(_44);
        _46 = discriminant(_43);
        switchInt(move _46) -> [0: bb23, 1: bb24, otherwise: bb5];
    }

    bb23: {
        StorageLive(_50);
        _50 = ((_43 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _42 = _50;
        StorageDead(_50);
        StorageLive(_40);
        _40 = (_42.0: solana_program::pubkey::Pubkey);
        StorageLive(_41);
        _41 = (_42.1: &[u8]);
        _1039 = discriminant(_43);
        StorageDead(_43);
        StorageDead(_42);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        _56 = &(*_41);
        _55 = LendingInstruction::unpack_u64(move _56) -> [return: bb26, unwind continue];
    }

    bb24: {
        StorageLive(_47);
        _47 = move ((_43 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_49);
        _49 = move _47;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _49) -> [return: bb25, unwind: bb597];
    }

    bb25: {
        StorageDead(_49);
        StorageDead(_47);
        _1349 = discriminant(_43);
        StorageDead(_43);
        StorageDead(_42);
        goto -> bb514;
    }

    bb26: {
        StorageDead(_56);
        _54 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _55) -> [return: bb27, unwind: bb516];
    }

    bb27: {
        StorageDead(_55);
        _57 = discriminant(_54);
        switchInt(move _57) -> [0: bb28, 1: bb29, otherwise: bb5];
    }

    bb28: {
        StorageLive(_61);
        _61 = ((_54 as Continue).0: (u64, &[u8]));
        _53 = _61;
        StorageDead(_61);
        StorageLive(_51);
        _51 = (_53.0: u64);
        StorageLive(_52);
        _52 = (_53.1: &[u8]);
        _1041 = discriminant(_54);
        StorageDead(_54);
        StorageDead(_53);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        _67 = &(*_52);
        _66 = LendingInstruction::unpack_u64(move _67) -> [return: bb31, unwind continue];
    }

    bb29: {
        StorageLive(_58);
        _58 = move ((_54 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_60);
        _60 = move _58;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _60) -> [return: bb30, unwind: bb596];
    }

    bb30: {
        StorageDead(_60);
        StorageDead(_58);
        _1347 = discriminant(_54);
        StorageDead(_54);
        StorageDead(_53);
        goto -> bb513;
    }

    bb31: {
        StorageDead(_67);
        _65 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _66) -> [return: bb32, unwind: bb516];
    }

    bb32: {
        StorageDead(_66);
        _68 = discriminant(_65);
        switchInt(move _68) -> [0: bb33, 1: bb34, otherwise: bb5];
    }

    bb33: {
        StorageLive(_72);
        _72 = ((_65 as Continue).0: (u64, &[u8]));
        _64 = _72;
        StorageDead(_72);
        StorageLive(_62);
        _62 = (_64.0: u64);
        StorageLive(_63);
        _63 = (_64.1: &[u8]);
        _1043 = discriminant(_65);
        StorageDead(_65);
        StorageDead(_64);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        _79 = &(*_63);
        _78 = LendingInstruction::unpack_u8(move _79) -> [return: bb36, unwind continue];
    }

    bb34: {
        StorageLive(_69);
        _69 = move ((_65 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_71);
        _71 = move _69;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _71) -> [return: bb35, unwind: bb595];
    }

    bb35: {
        StorageDead(_71);
        StorageDead(_69);
        _1345 = discriminant(_65);
        StorageDead(_65);
        StorageDead(_64);
        goto -> bb512;
    }

    bb36: {
        StorageDead(_79);
        _77 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _78) -> [return: bb37, unwind: bb516];
    }

    bb37: {
        _1034 = const true;
        StorageDead(_78);
        _80 = discriminant(_77);
        switchInt(move _80) -> [0: bb38, 1: bb39, otherwise: bb5];
    }

    bb38: {
        StorageLive(_84);
        _84 = ((_77 as Continue).0: (u8, &[u8]));
        _76 = _84;
        StorageDead(_84);
        switchInt((_76.0: u8)) -> [0: bb42, 1: bb43, otherwise: bb41];
    }

    bb39: {
        StorageLive(_81);
        _81 = move ((_77 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_83);
        _83 = move _81;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _83) -> [return: bb40, unwind: bb594];
    }

    bb40: {
        StorageDead(_83);
        StorageDead(_81);
        goto -> bb519;
    }

    bb41: {
        StorageLive(_104);
        StorageLive(_105);
        _105 = LendingError::InstructionUnpackError;
        _104 = <LendingError as Into<ProgramError>>::into(move _105) -> [return: bb49, unwind: bb594];
    }

    bb42: {
        StorageLive(_85);
        _85 = (_76.1: &[u8]);
        StorageLive(_86);
        _86 = Option::<Pubkey>::None;
        StorageLive(_87);
        _87 = _85;
        _75 = (move _86, move _87);
        StorageDead(_87);
        StorageDead(_86);
        StorageDead(_85);
        goto -> bb50;
    }

    bb43: {
        StorageLive(_88);
        _88 = (_76.1: &[u8]);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        _94 = &(*_88);
        _93 = LendingInstruction::unpack_pubkey(move _94) -> [return: bb44, unwind: bb594];
    }

    bb44: {
        StorageDead(_94);
        _92 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _93) -> [return: bb45, unwind: bb594];
    }

    bb45: {
        StorageDead(_93);
        _95 = discriminant(_92);
        switchInt(move _95) -> [0: bb46, 1: bb47, otherwise: bb5];
    }

    bb46: {
        StorageLive(_99);
        _99 = ((_92 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _91 = _99;
        StorageDead(_99);
        StorageLive(_89);
        _89 = (_91.0: solana_program::pubkey::Pubkey);
        StorageLive(_90);
        _90 = (_91.1: &[u8]);
        _1045 = discriminant(_92);
        StorageDead(_92);
        StorageDead(_91);
        StorageLive(_100);
        StorageLive(_101);
        _101 = _89;
        _100 = Option::<Pubkey>::Some(move _101);
        StorageDead(_101);
        StorageLive(_102);
        _102 = _90;
        _75 = (move _100, move _102);
        StorageDead(_102);
        StorageDead(_100);
        StorageDead(_90);
        StorageDead(_89);
        StorageDead(_88);
        goto -> bb50;
    }

    bb47: {
        StorageLive(_96);
        _96 = move ((_92 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_98);
        _98 = move _96;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _98) -> [return: bb48, unwind: bb593];
    }

    bb48: {
        StorageDead(_98);
        StorageDead(_96);
        _1341 = discriminant(_92);
        StorageDead(_92);
        StorageDead(_91);
        StorageDead(_88);
        goto -> bb519;
    }

    bb49: {
        StorageDead(_105);
        _0 = Result::<LendingInstruction, ProgramError>::Err(move _104);
        StorageDead(_104);
        goto -> bb519;
    }

    bb50: {
        StorageLive(_73);
        _73 = (_75.0: std::option::Option<solana_program::pubkey::Pubkey>);
        StorageLive(_74);
        _74 = (_75.1: &[u8]);
        _1047 = discriminant(_77);
        _1034 = const false;
        StorageDead(_77);
        StorageDead(_76);
        StorageDead(_75);
        StorageLive(_108);
        StorageLive(_109);
        StorageLive(_110);
        StorageLive(_111);
        _111 = &(*_74);
        _110 = LendingInstruction::unpack_pubkey(move _111) -> [return: bb51, unwind continue];
    }

    bb51: {
        StorageDead(_111);
        _109 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _110) -> [return: bb52, unwind: bb516];
    }

    bb52: {
        StorageDead(_110);
        _112 = discriminant(_109);
        switchInt(move _112) -> [0: bb53, 1: bb54, otherwise: bb5];
    }

    bb53: {
        StorageLive(_116);
        _116 = ((_109 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _108 = _116;
        StorageDead(_116);
        StorageLive(_106);
        _106 = (_108.0: solana_program::pubkey::Pubkey);
        StorageLive(_107);
        _107 = (_108.1: &[u8]);
        _1049 = discriminant(_109);
        StorageDead(_109);
        StorageDead(_108);
        StorageLive(_117);
        _117 = _40;
        StorageLive(_118);
        StorageLive(_119);
        _119 = _51;
        StorageLive(_120);
        _120 = _62;
        _118 = rate_limiter::RateLimiterConfig { window_duration: move _119, max_outflow: move _120 };
        StorageDead(_120);
        StorageDead(_119);
        StorageLive(_121);
        _121 = _73;
        StorageLive(_122);
        _122 = _106;
        _15 = LendingInstruction::SetLendingMarketOwnerAndConfig { new_owner: move _117, rate_limiter_config: move _118, whitelisted_liquidator: move _121, risk_authority: move _122 };
        StorageDead(_122);
        StorageDead(_121);
        StorageDead(_118);
        StorageDead(_117);
        StorageDead(_107);
        StorageDead(_106);
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_63);
        StorageDead(_62);
        StorageDead(_52);
        StorageDead(_51);
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb460;
    }

    bb54: {
        StorageLive(_113);
        _113 = move ((_109 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_115);
        _115 = move _113;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _115) -> [return: bb55, unwind: bb592];
    }

    bb55: {
        StorageDead(_115);
        StorageDead(_113);
        _1339 = discriminant(_109);
        StorageDead(_109);
        StorageDead(_108);
        StorageDead(_74);
        StorageDead(_73);
        goto -> bb511;
    }

    bb56: {
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        StorageLive(_128);
        _128 = &(*_3);
        _127 = LendingInstruction::unpack_u64(move _128) -> [return: bb57, unwind continue];
    }

    bb57: {
        StorageDead(_128);
        _126 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _127) -> [return: bb58, unwind: bb516];
    }

    bb58: {
        StorageDead(_127);
        _129 = discriminant(_126);
        switchInt(move _129) -> [0: bb59, 1: bb60, otherwise: bb5];
    }

    bb59: {
        StorageLive(_133);
        _133 = ((_126 as Continue).0: (u64, &[u8]));
        _125 = _133;
        StorageDead(_133);
        StorageLive(_123);
        _123 = (_125.0: u64);
        StorageLive(_124);
        _124 = (_125.1: &[u8]);
        _1051 = discriminant(_126);
        StorageDead(_126);
        StorageDead(_125);
        StorageLive(_136);
        StorageLive(_137);
        StorageLive(_138);
        StorageLive(_139);
        _139 = &(*_124);
        _138 = LendingInstruction::unpack_u8(move _139) -> [return: bb62, unwind continue];
    }

    bb60: {
        StorageLive(_130);
        _130 = move ((_126 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_132);
        _132 = move _130;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _132) -> [return: bb61, unwind: bb591];
    }

    bb61: {
        StorageDead(_132);
        StorageDead(_130);
        _1337 = discriminant(_126);
        StorageDead(_126);
        StorageDead(_125);
        goto -> bb514;
    }

    bb62: {
        StorageDead(_139);
        _137 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _138) -> [return: bb63, unwind: bb516];
    }

    bb63: {
        StorageDead(_138);
        _140 = discriminant(_137);
        switchInt(move _140) -> [0: bb64, 1: bb65, otherwise: bb5];
    }

    bb64: {
        StorageLive(_144);
        _144 = ((_137 as Continue).0: (u8, &[u8]));
        _136 = _144;
        StorageDead(_144);
        StorageLive(_134);
        _134 = (_136.0: u8);
        StorageLive(_135);
        _135 = (_136.1: &[u8]);
        _1053 = discriminant(_137);
        StorageDead(_137);
        StorageDead(_136);
        StorageLive(_147);
        StorageLive(_148);
        StorageLive(_149);
        StorageLive(_150);
        _150 = &(*_135);
        _149 = LendingInstruction::unpack_u8(move _150) -> [return: bb67, unwind continue];
    }

    bb65: {
        StorageLive(_141);
        _141 = move ((_137 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_143);
        _143 = move _141;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _143) -> [return: bb66, unwind: bb590];
    }

    bb66: {
        StorageDead(_143);
        StorageDead(_141);
        _1335 = discriminant(_137);
        StorageDead(_137);
        StorageDead(_136);
        goto -> bb510;
    }

    bb67: {
        StorageDead(_150);
        _148 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _149) -> [return: bb68, unwind: bb516];
    }

    bb68: {
        StorageDead(_149);
        _151 = discriminant(_148);
        switchInt(move _151) -> [0: bb69, 1: bb70, otherwise: bb5];
    }

    bb69: {
        StorageLive(_155);
        _155 = ((_148 as Continue).0: (u8, &[u8]));
        _147 = _155;
        StorageDead(_155);
        StorageLive(_145);
        _145 = (_147.0: u8);
        StorageLive(_146);
        _146 = (_147.1: &[u8]);
        _1055 = discriminant(_148);
        StorageDead(_148);
        StorageDead(_147);
        StorageLive(_158);
        StorageLive(_159);
        StorageLive(_160);
        StorageLive(_161);
        _161 = &(*_146);
        _160 = LendingInstruction::unpack_u8(move _161) -> [return: bb72, unwind continue];
    }

    bb70: {
        StorageLive(_152);
        _152 = move ((_148 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_154);
        _154 = move _152;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _154) -> [return: bb71, unwind: bb589];
    }

    bb71: {
        StorageDead(_154);
        StorageDead(_152);
        _1333 = discriminant(_148);
        StorageDead(_148);
        StorageDead(_147);
        goto -> bb509;
    }

    bb72: {
        StorageDead(_161);
        _159 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _160) -> [return: bb73, unwind: bb516];
    }

    bb73: {
        StorageDead(_160);
        _162 = discriminant(_159);
        switchInt(move _162) -> [0: bb74, 1: bb75, otherwise: bb5];
    }

    bb74: {
        StorageLive(_166);
        _166 = ((_159 as Continue).0: (u8, &[u8]));
        _158 = _166;
        StorageDead(_166);
        StorageLive(_156);
        _156 = (_158.0: u8);
        StorageLive(_157);
        _157 = (_158.1: &[u8]);
        _1057 = discriminant(_159);
        StorageDead(_159);
        StorageDead(_158);
        StorageLive(_169);
        StorageLive(_170);
        StorageLive(_171);
        StorageLive(_172);
        _172 = &(*_157);
        _171 = LendingInstruction::unpack_u8(move _172) -> [return: bb77, unwind continue];
    }

    bb75: {
        StorageLive(_163);
        _163 = move ((_159 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_165);
        _165 = move _163;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _165) -> [return: bb76, unwind: bb588];
    }

    bb76: {
        StorageDead(_165);
        StorageDead(_163);
        _1331 = discriminant(_159);
        StorageDead(_159);
        StorageDead(_158);
        goto -> bb508;
    }

    bb77: {
        StorageDead(_172);
        _170 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _171) -> [return: bb78, unwind: bb516];
    }

    bb78: {
        StorageDead(_171);
        _173 = discriminant(_170);
        switchInt(move _173) -> [0: bb79, 1: bb80, otherwise: bb5];
    }

    bb79: {
        StorageLive(_177);
        _177 = ((_170 as Continue).0: (u8, &[u8]));
        _169 = _177;
        StorageDead(_177);
        StorageLive(_167);
        _167 = (_169.0: u8);
        StorageLive(_168);
        _168 = (_169.1: &[u8]);
        _1059 = discriminant(_170);
        StorageDead(_170);
        StorageDead(_169);
        StorageLive(_180);
        StorageLive(_181);
        StorageLive(_182);
        StorageLive(_183);
        _183 = &(*_168);
        _182 = LendingInstruction::unpack_u8(move _183) -> [return: bb82, unwind continue];
    }

    bb80: {
        StorageLive(_174);
        _174 = move ((_170 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_176);
        _176 = move _174;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _176) -> [return: bb81, unwind: bb587];
    }

    bb81: {
        StorageDead(_176);
        StorageDead(_174);
        _1329 = discriminant(_170);
        StorageDead(_170);
        StorageDead(_169);
        goto -> bb507;
    }

    bb82: {
        StorageDead(_183);
        _181 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _182) -> [return: bb83, unwind: bb516];
    }

    bb83: {
        StorageDead(_182);
        _184 = discriminant(_181);
        switchInt(move _184) -> [0: bb84, 1: bb85, otherwise: bb5];
    }

    bb84: {
        StorageLive(_188);
        _188 = ((_181 as Continue).0: (u8, &[u8]));
        _180 = _188;
        StorageDead(_188);
        StorageLive(_178);
        _178 = (_180.0: u8);
        StorageLive(_179);
        _179 = (_180.1: &[u8]);
        _1061 = discriminant(_181);
        StorageDead(_181);
        StorageDead(_180);
        StorageLive(_191);
        StorageLive(_192);
        StorageLive(_193);
        StorageLive(_194);
        _194 = &(*_179);
        _193 = LendingInstruction::unpack_u8(move _194) -> [return: bb87, unwind continue];
    }

    bb85: {
        StorageLive(_185);
        _185 = move ((_181 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_187);
        _187 = move _185;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _187) -> [return: bb86, unwind: bb586];
    }

    bb86: {
        StorageDead(_187);
        StorageDead(_185);
        _1327 = discriminant(_181);
        StorageDead(_181);
        StorageDead(_180);
        goto -> bb506;
    }

    bb87: {
        StorageDead(_194);
        _192 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _193) -> [return: bb88, unwind: bb516];
    }

    bb88: {
        StorageDead(_193);
        _195 = discriminant(_192);
        switchInt(move _195) -> [0: bb89, 1: bb90, otherwise: bb5];
    }

    bb89: {
        StorageLive(_199);
        _199 = ((_192 as Continue).0: (u8, &[u8]));
        _191 = _199;
        StorageDead(_199);
        StorageLive(_189);
        _189 = (_191.0: u8);
        StorageLive(_190);
        _190 = (_191.1: &[u8]);
        _1063 = discriminant(_192);
        StorageDead(_192);
        StorageDead(_191);
        StorageLive(_202);
        StorageLive(_203);
        StorageLive(_204);
        StorageLive(_205);
        _205 = &(*_190);
        _204 = LendingInstruction::unpack_u8(move _205) -> [return: bb92, unwind continue];
    }

    bb90: {
        StorageLive(_196);
        _196 = move ((_192 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_198);
        _198 = move _196;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _198) -> [return: bb91, unwind: bb585];
    }

    bb91: {
        StorageDead(_198);
        StorageDead(_196);
        _1325 = discriminant(_192);
        StorageDead(_192);
        StorageDead(_191);
        goto -> bb505;
    }

    bb92: {
        StorageDead(_205);
        _203 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _204) -> [return: bb93, unwind: bb516];
    }

    bb93: {
        StorageDead(_204);
        _206 = discriminant(_203);
        switchInt(move _206) -> [0: bb94, 1: bb95, otherwise: bb5];
    }

    bb94: {
        StorageLive(_210);
        _210 = ((_203 as Continue).0: (u8, &[u8]));
        _202 = _210;
        StorageDead(_210);
        StorageLive(_200);
        _200 = (_202.0: u8);
        StorageLive(_201);
        _201 = (_202.1: &[u8]);
        _1065 = discriminant(_203);
        StorageDead(_203);
        StorageDead(_202);
        StorageLive(_213);
        StorageLive(_214);
        StorageLive(_215);
        StorageLive(_216);
        _216 = &(*_201);
        _215 = LendingInstruction::unpack_u8(move _216) -> [return: bb97, unwind continue];
    }

    bb95: {
        StorageLive(_207);
        _207 = move ((_203 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_209);
        _209 = move _207;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _209) -> [return: bb96, unwind: bb584];
    }

    bb96: {
        StorageDead(_209);
        StorageDead(_207);
        _1323 = discriminant(_203);
        StorageDead(_203);
        StorageDead(_202);
        goto -> bb504;
    }

    bb97: {
        StorageDead(_216);
        _214 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _215) -> [return: bb98, unwind: bb516];
    }

    bb98: {
        StorageDead(_215);
        _217 = discriminant(_214);
        switchInt(move _217) -> [0: bb99, 1: bb100, otherwise: bb5];
    }

    bb99: {
        StorageLive(_221);
        _221 = ((_214 as Continue).0: (u8, &[u8]));
        _213 = _221;
        StorageDead(_221);
        StorageLive(_211);
        _211 = (_213.0: u8);
        StorageLive(_212);
        _212 = (_213.1: &[u8]);
        _1067 = discriminant(_214);
        StorageDead(_214);
        StorageDead(_213);
        StorageLive(_224);
        StorageLive(_225);
        StorageLive(_226);
        StorageLive(_227);
        _227 = &(*_212);
        _226 = LendingInstruction::unpack_u64(move _227) -> [return: bb102, unwind continue];
    }

    bb100: {
        StorageLive(_218);
        _218 = move ((_214 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_220);
        _220 = move _218;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _220) -> [return: bb101, unwind: bb583];
    }

    bb101: {
        StorageDead(_220);
        StorageDead(_218);
        _1321 = discriminant(_214);
        StorageDead(_214);
        StorageDead(_213);
        goto -> bb503;
    }

    bb102: {
        StorageDead(_227);
        _225 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _226) -> [return: bb103, unwind: bb516];
    }

    bb103: {
        StorageDead(_226);
        _228 = discriminant(_225);
        switchInt(move _228) -> [0: bb104, 1: bb105, otherwise: bb5];
    }

    bb104: {
        StorageLive(_232);
        _232 = ((_225 as Continue).0: (u64, &[u8]));
        _224 = _232;
        StorageDead(_232);
        StorageLive(_222);
        _222 = (_224.0: u64);
        StorageLive(_223);
        _223 = (_224.1: &[u8]);
        _1069 = discriminant(_225);
        StorageDead(_225);
        StorageDead(_224);
        StorageLive(_235);
        StorageLive(_236);
        StorageLive(_237);
        StorageLive(_238);
        _238 = &(*_223);
        _237 = LendingInstruction::unpack_u64(move _238) -> [return: bb107, unwind continue];
    }

    bb105: {
        StorageLive(_229);
        _229 = move ((_225 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_231);
        _231 = move _229;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _231) -> [return: bb106, unwind: bb582];
    }

    bb106: {
        StorageDead(_231);
        StorageDead(_229);
        _1319 = discriminant(_225);
        StorageDead(_225);
        StorageDead(_224);
        goto -> bb502;
    }

    bb107: {
        StorageDead(_238);
        _236 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _237) -> [return: bb108, unwind: bb516];
    }

    bb108: {
        StorageDead(_237);
        _239 = discriminant(_236);
        switchInt(move _239) -> [0: bb109, 1: bb110, otherwise: bb5];
    }

    bb109: {
        StorageLive(_243);
        _243 = ((_236 as Continue).0: (u64, &[u8]));
        _235 = _243;
        StorageDead(_243);
        StorageLive(_233);
        _233 = (_235.0: u64);
        StorageLive(_234);
        _234 = (_235.1: &[u8]);
        _1071 = discriminant(_236);
        StorageDead(_236);
        StorageDead(_235);
        StorageLive(_246);
        StorageLive(_247);
        StorageLive(_248);
        StorageLive(_249);
        _249 = &(*_234);
        _248 = LendingInstruction::unpack_u64(move _249) -> [return: bb112, unwind continue];
    }

    bb110: {
        StorageLive(_240);
        _240 = move ((_236 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_242);
        _242 = move _240;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _242) -> [return: bb111, unwind: bb581];
    }

    bb111: {
        StorageDead(_242);
        StorageDead(_240);
        _1317 = discriminant(_236);
        StorageDead(_236);
        StorageDead(_235);
        goto -> bb501;
    }

    bb112: {
        StorageDead(_249);
        _247 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _248) -> [return: bb113, unwind: bb516];
    }

    bb113: {
        StorageDead(_248);
        _250 = discriminant(_247);
        switchInt(move _250) -> [0: bb114, 1: bb115, otherwise: bb5];
    }

    bb114: {
        StorageLive(_254);
        _254 = ((_247 as Continue).0: (u64, &[u8]));
        _246 = _254;
        StorageDead(_254);
        StorageLive(_244);
        _244 = (_246.0: u64);
        StorageLive(_245);
        _245 = (_246.1: &[u8]);
        _1073 = discriminant(_247);
        StorageDead(_247);
        StorageDead(_246);
        StorageLive(_257);
        StorageLive(_258);
        StorageLive(_259);
        StorageLive(_260);
        _260 = &(*_245);
        _259 = LendingInstruction::unpack_u8(move _260) -> [return: bb117, unwind continue];
    }

    bb115: {
        StorageLive(_251);
        _251 = move ((_247 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_253);
        _253 = move _251;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _253) -> [return: bb116, unwind: bb580];
    }

    bb116: {
        StorageDead(_253);
        StorageDead(_251);
        _1315 = discriminant(_247);
        StorageDead(_247);
        StorageDead(_246);
        goto -> bb500;
    }

    bb117: {
        StorageDead(_260);
        _258 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _259) -> [return: bb118, unwind: bb516];
    }

    bb118: {
        StorageDead(_259);
        _261 = discriminant(_258);
        switchInt(move _261) -> [0: bb119, 1: bb120, otherwise: bb5];
    }

    bb119: {
        StorageLive(_265);
        _265 = ((_258 as Continue).0: (u8, &[u8]));
        _257 = _265;
        StorageDead(_265);
        StorageLive(_255);
        _255 = (_257.0: u8);
        StorageLive(_256);
        _256 = (_257.1: &[u8]);
        _1075 = discriminant(_258);
        StorageDead(_258);
        StorageDead(_257);
        StorageLive(_268);
        StorageLive(_269);
        StorageLive(_270);
        StorageLive(_271);
        _271 = &(*_256);
        _270 = LendingInstruction::unpack_u64(move _271) -> [return: bb122, unwind continue];
    }

    bb120: {
        StorageLive(_262);
        _262 = move ((_258 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_264);
        _264 = move _262;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _264) -> [return: bb121, unwind: bb579];
    }

    bb121: {
        StorageDead(_264);
        StorageDead(_262);
        _1313 = discriminant(_258);
        StorageDead(_258);
        StorageDead(_257);
        goto -> bb499;
    }

    bb122: {
        StorageDead(_271);
        _269 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _270) -> [return: bb123, unwind: bb516];
    }

    bb123: {
        StorageDead(_270);
        _272 = discriminant(_269);
        switchInt(move _272) -> [0: bb124, 1: bb125, otherwise: bb5];
    }

    bb124: {
        StorageLive(_276);
        _276 = ((_269 as Continue).0: (u64, &[u8]));
        _268 = _276;
        StorageDead(_276);
        StorageLive(_266);
        _266 = (_268.0: u64);
        StorageLive(_267);
        _267 = (_268.1: &[u8]);
        _1077 = discriminant(_269);
        StorageDead(_269);
        StorageDead(_268);
        StorageLive(_279);
        StorageLive(_280);
        StorageLive(_281);
        StorageLive(_282);
        _282 = &(*_267);
        _281 = LendingInstruction::unpack_u64(move _282) -> [return: bb127, unwind continue];
    }

    bb125: {
        StorageLive(_273);
        _273 = move ((_269 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_275);
        _275 = move _273;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _275) -> [return: bb126, unwind: bb578];
    }

    bb126: {
        StorageDead(_275);
        StorageDead(_273);
        _1311 = discriminant(_269);
        StorageDead(_269);
        StorageDead(_268);
        goto -> bb498;
    }

    bb127: {
        StorageDead(_282);
        _280 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _281) -> [return: bb128, unwind: bb516];
    }

    bb128: {
        StorageDead(_281);
        _283 = discriminant(_280);
        switchInt(move _283) -> [0: bb129, 1: bb130, otherwise: bb5];
    }

    bb129: {
        StorageLive(_287);
        _287 = ((_280 as Continue).0: (u64, &[u8]));
        _279 = _287;
        StorageDead(_287);
        StorageLive(_277);
        _277 = (_279.0: u64);
        StorageLive(_278);
        _278 = (_279.1: &[u8]);
        _1079 = discriminant(_280);
        StorageDead(_280);
        StorageDead(_279);
        StorageLive(_290);
        StorageLive(_291);
        StorageLive(_292);
        StorageLive(_293);
        _293 = &(*_278);
        _292 = LendingInstruction::unpack_pubkey(move _293) -> [return: bb132, unwind continue];
    }

    bb130: {
        StorageLive(_284);
        _284 = move ((_280 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_286);
        _286 = move _284;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _286) -> [return: bb131, unwind: bb577];
    }

    bb131: {
        StorageDead(_286);
        StorageDead(_284);
        _1309 = discriminant(_280);
        StorageDead(_280);
        StorageDead(_279);
        goto -> bb497;
    }

    bb132: {
        StorageDead(_293);
        _291 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _292) -> [return: bb133, unwind: bb516];
    }

    bb133: {
        StorageDead(_292);
        _294 = discriminant(_291);
        switchInt(move _294) -> [0: bb134, 1: bb135, otherwise: bb5];
    }

    bb134: {
        StorageLive(_298);
        _298 = ((_291 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _290 = _298;
        StorageDead(_298);
        StorageLive(_288);
        _288 = (_290.0: solana_program::pubkey::Pubkey);
        StorageLive(_289);
        _289 = (_290.1: &[u8]);
        _1081 = discriminant(_291);
        StorageDead(_291);
        StorageDead(_290);
        StorageLive(_301);
        StorageLive(_302);
        StorageLive(_303);
        StorageLive(_304);
        _304 = &(*_289);
        _303 = LendingInstruction::unpack_u8(move _304) -> [return: bb137, unwind continue];
    }

    bb135: {
        StorageLive(_295);
        _295 = move ((_291 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_297);
        _297 = move _295;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _297) -> [return: bb136, unwind: bb576];
    }

    bb136: {
        StorageDead(_297);
        StorageDead(_295);
        _1307 = discriminant(_291);
        StorageDead(_291);
        StorageDead(_290);
        goto -> bb496;
    }

    bb137: {
        StorageDead(_304);
        _302 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _303) -> [return: bb138, unwind: bb516];
    }

    bb138: {
        StorageDead(_303);
        _305 = discriminant(_302);
        switchInt(move _305) -> [0: bb139, 1: bb140, otherwise: bb5];
    }

    bb139: {
        StorageLive(_309);
        _309 = ((_302 as Continue).0: (u8, &[u8]));
        _301 = _309;
        StorageDead(_309);
        StorageLive(_299);
        _299 = (_301.0: u8);
        StorageLive(_300);
        _300 = (_301.1: &[u8]);
        _1083 = discriminant(_302);
        StorageDead(_302);
        StorageDead(_301);
        StorageLive(_312);
        StorageLive(_313);
        StorageLive(_314);
        StorageLive(_315);
        _315 = &(*_300);
        _314 = LendingInstruction::unpack_u8(move _315) -> [return: bb142, unwind continue];
    }

    bb140: {
        StorageLive(_306);
        _306 = move ((_302 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_308);
        _308 = move _306;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _308) -> [return: bb141, unwind: bb575];
    }

    bb141: {
        StorageDead(_308);
        StorageDead(_306);
        _1305 = discriminant(_302);
        StorageDead(_302);
        StorageDead(_301);
        goto -> bb495;
    }

    bb142: {
        StorageDead(_315);
        _313 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _314) -> [return: bb143, unwind: bb516];
    }

    bb143: {
        StorageDead(_314);
        _316 = discriminant(_313);
        switchInt(move _316) -> [0: bb144, 1: bb145, otherwise: bb5];
    }

    bb144: {
        StorageLive(_320);
        _320 = ((_313 as Continue).0: (u8, &[u8]));
        _312 = _320;
        StorageDead(_320);
        StorageLive(_310);
        _310 = (_312.0: u8);
        StorageLive(_311);
        _311 = (_312.1: &[u8]);
        _1085 = discriminant(_313);
        StorageDead(_313);
        StorageDead(_312);
        StorageLive(_323);
        StorageLive(_324);
        StorageLive(_325);
        StorageLive(_326);
        _326 = &(*_311);
        _325 = LendingInstruction::unpack_u64(move _326) -> [return: bb147, unwind continue];
    }

    bb145: {
        StorageLive(_317);
        _317 = move ((_313 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_319);
        _319 = move _317;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _319) -> [return: bb146, unwind: bb574];
    }

    bb146: {
        StorageDead(_319);
        StorageDead(_317);
        _1303 = discriminant(_313);
        StorageDead(_313);
        StorageDead(_312);
        goto -> bb494;
    }

    bb147: {
        StorageDead(_326);
        _324 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _325) -> [return: bb148, unwind: bb516];
    }

    bb148: {
        StorageDead(_325);
        _327 = discriminant(_324);
        switchInt(move _327) -> [0: bb149, 1: bb150, otherwise: bb5];
    }

    bb149: {
        StorageLive(_331);
        _331 = ((_324 as Continue).0: (u64, &[u8]));
        _323 = _331;
        StorageDead(_331);
        StorageLive(_321);
        _321 = (_323.0: u64);
        StorageLive(_322);
        _322 = (_323.1: &[u8]);
        _1087 = discriminant(_324);
        StorageDead(_324);
        StorageDead(_323);
        StorageLive(_334);
        StorageLive(_335);
        StorageLive(_336);
        StorageLive(_337);
        _337 = &(*_322);
        _336 = LendingInstruction::unpack_u8(move _337) -> [return: bb152, unwind continue];
    }

    bb150: {
        StorageLive(_328);
        _328 = move ((_324 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_330);
        _330 = move _328;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _330) -> [return: bb151, unwind: bb573];
    }

    bb151: {
        StorageDead(_330);
        StorageDead(_328);
        _1301 = discriminant(_324);
        StorageDead(_324);
        StorageDead(_323);
        goto -> bb493;
    }

    bb152: {
        StorageDead(_337);
        _335 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _336) -> [return: bb153, unwind: bb516];
    }

    bb153: {
        StorageDead(_336);
        _338 = discriminant(_335);
        switchInt(move _338) -> [0: bb154, 1: bb155, otherwise: bb5];
    }

    bb154: {
        StorageLive(_342);
        _342 = ((_335 as Continue).0: (u8, &[u8]));
        _334 = _342;
        StorageDead(_342);
        StorageLive(_332);
        _332 = (_334.0: u8);
        StorageLive(_333);
        _333 = (_334.1: &[u8]);
        _1089 = discriminant(_335);
        StorageDead(_335);
        StorageDead(_334);
        StorageLive(_345);
        StorageLive(_346);
        StorageLive(_347);
        StorageLive(_348);
        _348 = &(*_333);
        _347 = LendingInstruction::unpack_u8(move _348) -> [return: bb157, unwind continue];
    }

    bb155: {
        StorageLive(_339);
        _339 = move ((_335 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_341);
        _341 = move _339;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _341) -> [return: bb156, unwind: bb572];
    }

    bb156: {
        StorageDead(_341);
        StorageDead(_339);
        _1299 = discriminant(_335);
        StorageDead(_335);
        StorageDead(_334);
        goto -> bb492;
    }

    bb157: {
        StorageDead(_348);
        _346 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _347) -> [return: bb158, unwind: bb516];
    }

    bb158: {
        StorageDead(_347);
        _349 = discriminant(_346);
        switchInt(move _349) -> [0: bb159, 1: bb160, otherwise: bb5];
    }

    bb159: {
        StorageLive(_353);
        _353 = ((_346 as Continue).0: (u8, &[u8]));
        _345 = _353;
        StorageDead(_353);
        StorageLive(_343);
        _343 = (_345.0: u8);
        StorageLive(_344);
        _344 = (_345.1: &[u8]);
        _1091 = discriminant(_346);
        StorageDead(_346);
        StorageDead(_345);
        StorageLive(_356);
        StorageLive(_357);
        StorageLive(_358);
        StorageLive(_359);
        _359 = &(*_344);
        _358 = LendingInstruction::unpack_u8(move _359) -> [return: bb162, unwind continue];
    }

    bb160: {
        StorageLive(_350);
        _350 = move ((_346 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_352);
        _352 = move _350;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _352) -> [return: bb161, unwind: bb571];
    }

    bb161: {
        StorageDead(_352);
        StorageDead(_350);
        _1297 = discriminant(_346);
        StorageDead(_346);
        StorageDead(_345);
        goto -> bb491;
    }

    bb162: {
        StorageDead(_359);
        _357 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _358) -> [return: bb163, unwind: bb516];
    }

    bb163: {
        StorageDead(_358);
        _360 = discriminant(_357);
        switchInt(move _360) -> [0: bb164, 1: bb165, otherwise: bb5];
    }

    bb164: {
        StorageLive(_364);
        _364 = ((_357 as Continue).0: (u8, &[u8]));
        _356 = _364;
        StorageDead(_364);
        StorageLive(_354);
        _354 = (_356.0: u8);
        StorageLive(_355);
        _355 = (_356.1: &[u8]);
        _1093 = discriminant(_357);
        StorageDead(_357);
        StorageDead(_356);
        StorageLive(_367);
        StorageLive(_368);
        StorageLive(_369);
        StorageLive(_370);
        _370 = &(*_355);
        _369 = LendingInstruction::unpack_i64(move _370) -> [return: bb167, unwind continue];
    }

    bb165: {
        StorageLive(_361);
        _361 = move ((_357 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_363);
        _363 = move _361;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _363) -> [return: bb166, unwind: bb570];
    }

    bb166: {
        StorageDead(_363);
        StorageDead(_361);
        _1295 = discriminant(_357);
        StorageDead(_357);
        StorageDead(_356);
        goto -> bb490;
    }

    bb167: {
        StorageDead(_370);
        _368 = <Result<(i64, &[u8]), ProgramError> as Try>::branch(move _369) -> [return: bb168, unwind: bb516];
    }

    bb168: {
        StorageDead(_369);
        _371 = discriminant(_368);
        switchInt(move _371) -> [0: bb169, 1: bb170, otherwise: bb5];
    }

    bb169: {
        StorageLive(_375);
        _375 = ((_368 as Continue).0: (i64, &[u8]));
        _367 = _375;
        StorageDead(_375);
        StorageLive(_365);
        _365 = (_367.0: i64);
        StorageLive(_366);
        _366 = (_367.1: &[u8]);
        _1095 = discriminant(_368);
        StorageDead(_368);
        StorageDead(_367);
        StorageLive(_378);
        StorageLive(_379);
        StorageLive(_380);
        StorageLive(_381);
        StorageLive(_382);
        _382 = &(*_366);
        _381 = LendingInstruction::unpack_u8(move _382) -> [return: bb172, unwind continue];
    }

    bb170: {
        StorageLive(_372);
        _372 = move ((_368 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_374);
        _374 = move _372;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _374) -> [return: bb171, unwind: bb569];
    }

    bb171: {
        StorageDead(_374);
        StorageDead(_372);
        _1293 = discriminant(_368);
        StorageDead(_368);
        StorageDead(_367);
        goto -> bb489;
    }

    bb172: {
        StorageDead(_382);
        _380 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _381) -> [return: bb173, unwind: bb516];
    }

    bb173: {
        _1033 = const true;
        StorageDead(_381);
        _383 = discriminant(_380);
        switchInt(move _383) -> [0: bb174, 1: bb175, otherwise: bb5];
    }

    bb174: {
        StorageLive(_387);
        _387 = ((_380 as Continue).0: (u8, &[u8]));
        _379 = _387;
        StorageDead(_387);
        switchInt((_379.0: u8)) -> [0: bb178, 1: bb179, otherwise: bb177];
    }

    bb175: {
        StorageLive(_384);
        _384 = move ((_380 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_386);
        _386 = move _384;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _386) -> [return: bb176, unwind: bb568];
    }

    bb176: {
        StorageDead(_386);
        StorageDead(_384);
        goto -> bb518;
    }

    bb177: {
        StorageLive(_407);
        StorageLive(_408);
        _408 = LendingError::InstructionUnpackError;
        _407 = <LendingError as Into<ProgramError>>::into(move _408) -> [return: bb185, unwind: bb568];
    }

    bb178: {
        StorageLive(_388);
        _388 = (_379.1: &[u8]);
        StorageLive(_389);
        _389 = Option::<Pubkey>::None;
        StorageLive(_390);
        _390 = _388;
        _378 = (move _389, move _390);
        StorageDead(_390);
        StorageDead(_389);
        StorageDead(_388);
        goto -> bb186;
    }

    bb179: {
        StorageLive(_391);
        _391 = (_379.1: &[u8]);
        StorageLive(_394);
        StorageLive(_395);
        StorageLive(_396);
        StorageLive(_397);
        _397 = &(*_391);
        _396 = LendingInstruction::unpack_pubkey(move _397) -> [return: bb180, unwind: bb568];
    }

    bb180: {
        StorageDead(_397);
        _395 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _396) -> [return: bb181, unwind: bb568];
    }

    bb181: {
        StorageDead(_396);
        _398 = discriminant(_395);
        switchInt(move _398) -> [0: bb182, 1: bb183, otherwise: bb5];
    }

    bb182: {
        StorageLive(_402);
        _402 = ((_395 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _394 = _402;
        StorageDead(_402);
        StorageLive(_392);
        _392 = (_394.0: solana_program::pubkey::Pubkey);
        StorageLive(_393);
        _393 = (_394.1: &[u8]);
        _1097 = discriminant(_395);
        StorageDead(_395);
        StorageDead(_394);
        StorageLive(_403);
        StorageLive(_404);
        _404 = _392;
        _403 = Option::<Pubkey>::Some(move _404);
        StorageDead(_404);
        StorageLive(_405);
        _405 = _393;
        _378 = (move _403, move _405);
        StorageDead(_405);
        StorageDead(_403);
        StorageDead(_393);
        StorageDead(_392);
        StorageDead(_391);
        goto -> bb186;
    }

    bb183: {
        StorageLive(_399);
        _399 = move ((_395 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_401);
        _401 = move _399;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _401) -> [return: bb184, unwind: bb567];
    }

    bb184: {
        StorageDead(_401);
        StorageDead(_399);
        _1289 = discriminant(_395);
        StorageDead(_395);
        StorageDead(_394);
        StorageDead(_391);
        goto -> bb518;
    }

    bb185: {
        StorageDead(_408);
        _0 = Result::<LendingInstruction, ProgramError>::Err(move _407);
        StorageDead(_407);
        goto -> bb518;
    }

    bb186: {
        StorageLive(_376);
        _376 = (_378.0: std::option::Option<solana_program::pubkey::Pubkey>);
        StorageLive(_377);
        _377 = (_378.1: &[u8]);
        _1099 = discriminant(_380);
        _1033 = const false;
        StorageDead(_380);
        StorageDead(_379);
        StorageDead(_378);
        StorageLive(_411);
        StorageLive(_412);
        StorageLive(_413);
        StorageLive(_414);
        _414 = &(*_377);
        _413 = LendingInstruction::unpack_u64(move _414) -> [return: bb187, unwind continue];
    }

    bb187: {
        StorageDead(_414);
        _412 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _413) -> [return: bb188, unwind: bb516];
    }

    bb188: {
        StorageDead(_413);
        _415 = discriminant(_412);
        switchInt(move _415) -> [0: bb189, 1: bb190, otherwise: bb5];
    }

    bb189: {
        StorageLive(_419);
        _419 = ((_412 as Continue).0: (u64, &[u8]));
        _411 = _419;
        StorageDead(_419);
        StorageLive(_409);
        _409 = (_411.0: u64);
        StorageLive(_410);
        _410 = (_411.1: &[u8]);
        _1101 = discriminant(_412);
        StorageDead(_412);
        StorageDead(_411);
        StorageLive(_422);
        StorageLive(_423);
        StorageLive(_424);
        StorageLive(_425);
        _425 = &(*_410);
        _424 = LendingInstruction::unpack_u64(move _425) -> [return: bb192, unwind continue];
    }

    bb190: {
        StorageLive(_416);
        _416 = move ((_412 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_418);
        _418 = move _416;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _418) -> [return: bb191, unwind: bb566];
    }

    bb191: {
        StorageDead(_418);
        StorageDead(_416);
        _1287 = discriminant(_412);
        StorageDead(_412);
        StorageDead(_411);
        goto -> bb487;
    }

    bb192: {
        StorageDead(_425);
        _423 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _424) -> [return: bb193, unwind: bb516];
    }

    bb193: {
        StorageDead(_424);
        _426 = discriminant(_423);
        switchInt(move _426) -> [0: bb194, 1: bb195, otherwise: bb5];
    }

    bb194: {
        StorageLive(_430);
        _430 = ((_423 as Continue).0: (u64, &[u8]));
        _422 = _430;
        StorageDead(_430);
        StorageLive(_420);
        _420 = (_422.0: u64);
        StorageLive(_421);
        _421 = (_422.1: &[u8]);
        _1103 = discriminant(_423);
        StorageDead(_423);
        StorageDead(_422);
        StorageLive(_431);
        _431 = _123;
        StorageLive(_432);
        StorageLive(_433);
        _433 = _134;
        StorageLive(_434);
        _434 = _145;
        StorageLive(_435);
        _435 = _156;
        StorageLive(_436);
        _436 = _167;
        StorageLive(_437);
        _437 = _343;
        StorageLive(_438);
        _438 = _178;
        StorageLive(_439);
        _439 = _354;
        StorageLive(_440);
        _440 = _189;
        StorageLive(_441);
        _441 = _200;
        StorageLive(_442);
        _442 = _211;
        StorageLive(_443);
        _443 = _222;
        StorageLive(_444);
        StorageLive(_445);
        _445 = _233;
        StorageLive(_446);
        _446 = _244;
        StorageLive(_447);
        _447 = _255;
        _444 = reserve::ReserveFees { borrow_fee_wad: move _445, flash_loan_fee_wad: move _446, host_fee_percentage: move _447 };
        StorageDead(_447);
        StorageDead(_446);
        StorageDead(_445);
        StorageLive(_448);
        _448 = _266;
        StorageLive(_449);
        _449 = _277;
        StorageLive(_450);
        _450 = _288;
        StorageLive(_451);
        _451 = _299;
        StorageLive(_452);
        _452 = _310;
        StorageLive(_453);
        _453 = _321;
        StorageLive(_454);
        StorageLive(_455);
        StorageLive(_456);
        _456 = _332;
        _455 = <reserve::ReserveType as FromPrimitive>::from_u8(move _456) -> [return: bb197, unwind continue];
    }

    bb195: {
        StorageLive(_427);
        _427 = move ((_423 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_429);
        _429 = move _427;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _429) -> [return: bb196, unwind: bb565];
    }

    bb196: {
        StorageDead(_429);
        StorageDead(_427);
        _1285 = discriminant(_423);
        StorageDead(_423);
        StorageDead(_422);
        StorageDead(_410);
        StorageDead(_409);
        goto -> bb487;
    }

    bb197: {
        StorageDead(_456);
        _454 = Option::<reserve::ReserveType>::unwrap(move _455) -> [return: bb198, unwind continue];
    }

    bb198: {
        StorageDead(_455);
        StorageLive(_457);
        _457 = _365;
        StorageLive(_458);
        _458 = _376;
        StorageLive(_459);
        _459 = _409;
        StorageLive(_460);
        _460 = _420;
        _432 = reserve::ReserveConfig { optimal_utilization_rate: move _433, max_utilization_rate: move _434, loan_to_value_ratio: move _435, liquidation_bonus: move _436, max_liquidation_bonus: move _437, liquidation_threshold: move _438, max_liquidation_threshold: move _439, min_borrow_rate: move _440, optimal_borrow_rate: move _441, max_borrow_rate: move _442, super_max_borrow_rate: move _443, fees: move _444, deposit_limit: move _448, borrow_limit: move _449, fee_receiver: move _450, protocol_liquidation_fee: move _451, protocol_take_rate: move _452, added_borrow_weight_bps: move _453, reserve_type: move _454, scaled_price_offset_bps: move _457, extra_oracle_pubkey: move _458, attributed_borrow_limit_open: move _459, attributed_borrow_limit_close: move _460 };
        StorageDead(_460);
        StorageDead(_459);
        StorageDead(_458);
        StorageDead(_457);
        StorageDead(_454);
        StorageDead(_453);
        StorageDead(_452);
        StorageDead(_451);
        StorageDead(_450);
        StorageDead(_449);
        StorageDead(_448);
        StorageDead(_444);
        StorageDead(_443);
        StorageDead(_442);
        StorageDead(_441);
        StorageDead(_440);
        StorageDead(_439);
        StorageDead(_438);
        StorageDead(_437);
        StorageDead(_436);
        StorageDead(_435);
        StorageDead(_434);
        StorageDead(_433);
        _15 = LendingInstruction::InitReserve { liquidity_amount: move _431, config: move _432 };
        StorageDead(_432);
        StorageDead(_431);
        StorageDead(_421);
        StorageDead(_420);
        StorageDead(_410);
        StorageDead(_409);
        StorageDead(_377);
        StorageDead(_376);
        StorageDead(_366);
        StorageDead(_365);
        StorageDead(_355);
        StorageDead(_354);
        StorageDead(_344);
        StorageDead(_343);
        StorageDead(_333);
        StorageDead(_332);
        StorageDead(_322);
        StorageDead(_321);
        StorageDead(_311);
        StorageDead(_310);
        StorageDead(_300);
        StorageDead(_299);
        StorageDead(_289);
        StorageDead(_288);
        StorageDead(_278);
        StorageDead(_277);
        StorageDead(_267);
        StorageDead(_266);
        StorageDead(_256);
        StorageDead(_255);
        StorageDead(_245);
        StorageDead(_244);
        StorageDead(_234);
        StorageDead(_233);
        StorageDead(_223);
        StorageDead(_222);
        StorageDead(_212);
        StorageDead(_211);
        StorageDead(_201);
        StorageDead(_200);
        StorageDead(_190);
        StorageDead(_189);
        StorageDead(_179);
        StorageDead(_178);
        StorageDead(_168);
        StorageDead(_167);
        StorageDead(_157);
        StorageDead(_156);
        StorageDead(_146);
        StorageDead(_145);
        StorageDead(_135);
        StorageDead(_134);
        StorageDead(_124);
        StorageDead(_123);
        goto -> bb460;
    }

    bb199: {
        _15 = LendingInstruction::RefreshReserve;
        goto -> bb460;
    }

    bb200: {
        StorageLive(_463);
        StorageLive(_464);
        StorageLive(_465);
        StorageLive(_466);
        _466 = &(*_3);
        _465 = LendingInstruction::unpack_u64(move _466) -> [return: bb201, unwind continue];
    }

    bb201: {
        StorageDead(_466);
        _464 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _465) -> [return: bb202, unwind: bb516];
    }

    bb202: {
        StorageDead(_465);
        _467 = discriminant(_464);
        switchInt(move _467) -> [0: bb203, 1: bb204, otherwise: bb5];
    }

    bb203: {
        StorageLive(_471);
        _471 = ((_464 as Continue).0: (u64, &[u8]));
        _463 = _471;
        StorageDead(_471);
        StorageLive(_461);
        _461 = (_463.0: u64);
        StorageLive(_462);
        _462 = (_463.1: &[u8]);
        _1105 = discriminant(_464);
        StorageDead(_464);
        StorageDead(_463);
        StorageLive(_472);
        _472 = _461;
        _15 = LendingInstruction::DepositReserveLiquidity { liquidity_amount: move _472 };
        StorageDead(_472);
        StorageDead(_462);
        StorageDead(_461);
        goto -> bb460;
    }

    bb204: {
        StorageLive(_468);
        _468 = move ((_464 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_470);
        _470 = move _468;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _470) -> [return: bb205, unwind: bb564];
    }

    bb205: {
        StorageDead(_470);
        StorageDead(_468);
        _1283 = discriminant(_464);
        StorageDead(_464);
        StorageDead(_463);
        goto -> bb514;
    }

    bb206: {
        StorageLive(_475);
        StorageLive(_476);
        StorageLive(_477);
        StorageLive(_478);
        _478 = &(*_3);
        _477 = LendingInstruction::unpack_u64(move _478) -> [return: bb207, unwind continue];
    }

    bb207: {
        StorageDead(_478);
        _476 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _477) -> [return: bb208, unwind: bb516];
    }

    bb208: {
        StorageDead(_477);
        _479 = discriminant(_476);
        switchInt(move _479) -> [0: bb209, 1: bb210, otherwise: bb5];
    }

    bb209: {
        StorageLive(_483);
        _483 = ((_476 as Continue).0: (u64, &[u8]));
        _475 = _483;
        StorageDead(_483);
        StorageLive(_473);
        _473 = (_475.0: u64);
        StorageLive(_474);
        _474 = (_475.1: &[u8]);
        _1107 = discriminant(_476);
        StorageDead(_476);
        StorageDead(_475);
        StorageLive(_484);
        _484 = _473;
        _15 = LendingInstruction::RedeemReserveCollateral { collateral_amount: move _484 };
        StorageDead(_484);
        StorageDead(_474);
        StorageDead(_473);
        goto -> bb460;
    }

    bb210: {
        StorageLive(_480);
        _480 = move ((_476 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_482);
        _482 = move _480;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _482) -> [return: bb211, unwind: bb563];
    }

    bb211: {
        StorageDead(_482);
        StorageDead(_480);
        _1281 = discriminant(_476);
        StorageDead(_476);
        StorageDead(_475);
        goto -> bb514;
    }

    bb212: {
        _15 = LendingInstruction::InitObligation;
        goto -> bb460;
    }

    bb213: {
        _15 = LendingInstruction::RefreshObligation;
        goto -> bb460;
    }

    bb214: {
        StorageLive(_487);
        StorageLive(_488);
        StorageLive(_489);
        StorageLive(_490);
        _490 = &(*_3);
        _489 = LendingInstruction::unpack_u64(move _490) -> [return: bb215, unwind continue];
    }

    bb215: {
        StorageDead(_490);
        _488 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _489) -> [return: bb216, unwind: bb516];
    }

    bb216: {
        StorageDead(_489);
        _491 = discriminant(_488);
        switchInt(move _491) -> [0: bb217, 1: bb218, otherwise: bb5];
    }

    bb217: {
        StorageLive(_495);
        _495 = ((_488 as Continue).0: (u64, &[u8]));
        _487 = _495;
        StorageDead(_495);
        StorageLive(_485);
        _485 = (_487.0: u64);
        StorageLive(_486);
        _486 = (_487.1: &[u8]);
        _1109 = discriminant(_488);
        StorageDead(_488);
        StorageDead(_487);
        StorageLive(_496);
        _496 = _485;
        _15 = LendingInstruction::DepositObligationCollateral { collateral_amount: move _496 };
        StorageDead(_496);
        StorageDead(_486);
        StorageDead(_485);
        goto -> bb460;
    }

    bb218: {
        StorageLive(_492);
        _492 = move ((_488 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_494);
        _494 = move _492;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _494) -> [return: bb219, unwind: bb562];
    }

    bb219: {
        StorageDead(_494);
        StorageDead(_492);
        _1279 = discriminant(_488);
        StorageDead(_488);
        StorageDead(_487);
        goto -> bb514;
    }

    bb220: {
        StorageLive(_499);
        StorageLive(_500);
        StorageLive(_501);
        StorageLive(_502);
        _502 = &(*_3);
        _501 = LendingInstruction::unpack_u64(move _502) -> [return: bb221, unwind continue];
    }

    bb221: {
        StorageDead(_502);
        _500 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _501) -> [return: bb222, unwind: bb516];
    }

    bb222: {
        StorageDead(_501);
        _503 = discriminant(_500);
        switchInt(move _503) -> [0: bb223, 1: bb224, otherwise: bb5];
    }

    bb223: {
        StorageLive(_507);
        _507 = ((_500 as Continue).0: (u64, &[u8]));
        _499 = _507;
        StorageDead(_507);
        StorageLive(_497);
        _497 = (_499.0: u64);
        StorageLive(_498);
        _498 = (_499.1: &[u8]);
        _1111 = discriminant(_500);
        StorageDead(_500);
        StorageDead(_499);
        StorageLive(_508);
        _508 = _497;
        _15 = LendingInstruction::WithdrawObligationCollateral { collateral_amount: move _508 };
        StorageDead(_508);
        StorageDead(_498);
        StorageDead(_497);
        goto -> bb460;
    }

    bb224: {
        StorageLive(_504);
        _504 = move ((_500 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_506);
        _506 = move _504;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _506) -> [return: bb225, unwind: bb561];
    }

    bb225: {
        StorageDead(_506);
        StorageDead(_504);
        _1277 = discriminant(_500);
        StorageDead(_500);
        StorageDead(_499);
        goto -> bb514;
    }

    bb226: {
        StorageLive(_511);
        StorageLive(_512);
        StorageLive(_513);
        StorageLive(_514);
        _514 = &(*_3);
        _513 = LendingInstruction::unpack_u64(move _514) -> [return: bb227, unwind continue];
    }

    bb227: {
        StorageDead(_514);
        _512 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _513) -> [return: bb228, unwind: bb516];
    }

    bb228: {
        StorageDead(_513);
        _515 = discriminant(_512);
        switchInt(move _515) -> [0: bb229, 1: bb230, otherwise: bb5];
    }

    bb229: {
        StorageLive(_519);
        _519 = ((_512 as Continue).0: (u64, &[u8]));
        _511 = _519;
        StorageDead(_519);
        StorageLive(_509);
        _509 = (_511.0: u64);
        StorageLive(_510);
        _510 = (_511.1: &[u8]);
        _1113 = discriminant(_512);
        StorageDead(_512);
        StorageDead(_511);
        StorageLive(_520);
        _520 = _509;
        _15 = LendingInstruction::BorrowObligationLiquidity { liquidity_amount: move _520 };
        StorageDead(_520);
        StorageDead(_510);
        StorageDead(_509);
        goto -> bb460;
    }

    bb230: {
        StorageLive(_516);
        _516 = move ((_512 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_518);
        _518 = move _516;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _518) -> [return: bb231, unwind: bb560];
    }

    bb231: {
        StorageDead(_518);
        StorageDead(_516);
        _1275 = discriminant(_512);
        StorageDead(_512);
        StorageDead(_511);
        goto -> bb514;
    }

    bb232: {
        StorageLive(_523);
        StorageLive(_524);
        StorageLive(_525);
        StorageLive(_526);
        _526 = &(*_3);
        _525 = LendingInstruction::unpack_u64(move _526) -> [return: bb233, unwind continue];
    }

    bb233: {
        StorageDead(_526);
        _524 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _525) -> [return: bb234, unwind: bb516];
    }

    bb234: {
        StorageDead(_525);
        _527 = discriminant(_524);
        switchInt(move _527) -> [0: bb235, 1: bb236, otherwise: bb5];
    }

    bb235: {
        StorageLive(_531);
        _531 = ((_524 as Continue).0: (u64, &[u8]));
        _523 = _531;
        StorageDead(_531);
        StorageLive(_521);
        _521 = (_523.0: u64);
        StorageLive(_522);
        _522 = (_523.1: &[u8]);
        _1115 = discriminant(_524);
        StorageDead(_524);
        StorageDead(_523);
        StorageLive(_532);
        _532 = _521;
        _15 = LendingInstruction::RepayObligationLiquidity { liquidity_amount: move _532 };
        StorageDead(_532);
        StorageDead(_522);
        StorageDead(_521);
        goto -> bb460;
    }

    bb236: {
        StorageLive(_528);
        _528 = move ((_524 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_530);
        _530 = move _528;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _530) -> [return: bb237, unwind: bb559];
    }

    bb237: {
        StorageDead(_530);
        StorageDead(_528);
        _1273 = discriminant(_524);
        StorageDead(_524);
        StorageDead(_523);
        goto -> bb514;
    }

    bb238: {
        StorageLive(_535);
        StorageLive(_536);
        StorageLive(_537);
        StorageLive(_538);
        _538 = &(*_3);
        _537 = LendingInstruction::unpack_u64(move _538) -> [return: bb239, unwind continue];
    }

    bb239: {
        StorageDead(_538);
        _536 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _537) -> [return: bb240, unwind: bb516];
    }

    bb240: {
        StorageDead(_537);
        _539 = discriminant(_536);
        switchInt(move _539) -> [0: bb241, 1: bb242, otherwise: bb5];
    }

    bb241: {
        StorageLive(_543);
        _543 = ((_536 as Continue).0: (u64, &[u8]));
        _535 = _543;
        StorageDead(_543);
        StorageLive(_533);
        _533 = (_535.0: u64);
        StorageLive(_534);
        _534 = (_535.1: &[u8]);
        _1117 = discriminant(_536);
        StorageDead(_536);
        StorageDead(_535);
        StorageLive(_544);
        _544 = _533;
        _15 = LendingInstruction::LiquidateObligation { liquidity_amount: move _544 };
        StorageDead(_544);
        StorageDead(_534);
        StorageDead(_533);
        goto -> bb460;
    }

    bb242: {
        StorageLive(_540);
        _540 = move ((_536 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_542);
        _542 = move _540;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _542) -> [return: bb243, unwind: bb558];
    }

    bb243: {
        StorageDead(_542);
        StorageDead(_540);
        _1271 = discriminant(_536);
        StorageDead(_536);
        StorageDead(_535);
        goto -> bb514;
    }

    bb244: {
        StorageLive(_547);
        StorageLive(_548);
        StorageLive(_549);
        StorageLive(_550);
        _550 = &(*_3);
        _549 = LendingInstruction::unpack_u64(move _550) -> [return: bb245, unwind continue];
    }

    bb245: {
        StorageDead(_550);
        _548 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _549) -> [return: bb246, unwind: bb516];
    }

    bb246: {
        StorageDead(_549);
        _551 = discriminant(_548);
        switchInt(move _551) -> [0: bb247, 1: bb248, otherwise: bb5];
    }

    bb247: {
        StorageLive(_555);
        _555 = ((_548 as Continue).0: (u64, &[u8]));
        _547 = _555;
        StorageDead(_555);
        StorageLive(_545);
        _545 = (_547.0: u64);
        StorageLive(_546);
        _546 = (_547.1: &[u8]);
        _1119 = discriminant(_548);
        StorageDead(_548);
        StorageDead(_547);
        StorageLive(_556);
        _556 = _545;
        _15 = LendingInstruction::FlashLoan { amount: move _556 };
        StorageDead(_556);
        StorageDead(_546);
        StorageDead(_545);
        goto -> bb460;
    }

    bb248: {
        StorageLive(_552);
        _552 = move ((_548 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_554);
        _554 = move _552;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _554) -> [return: bb249, unwind: bb557];
    }

    bb249: {
        StorageDead(_554);
        StorageDead(_552);
        _1269 = discriminant(_548);
        StorageDead(_548);
        StorageDead(_547);
        goto -> bb514;
    }

    bb250: {
        StorageLive(_559);
        StorageLive(_560);
        StorageLive(_561);
        StorageLive(_562);
        _562 = &(*_3);
        _561 = LendingInstruction::unpack_u64(move _562) -> [return: bb251, unwind continue];
    }

    bb251: {
        StorageDead(_562);
        _560 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _561) -> [return: bb252, unwind: bb516];
    }

    bb252: {
        StorageDead(_561);
        _563 = discriminant(_560);
        switchInt(move _563) -> [0: bb253, 1: bb254, otherwise: bb5];
    }

    bb253: {
        StorageLive(_567);
        _567 = ((_560 as Continue).0: (u64, &[u8]));
        _559 = _567;
        StorageDead(_567);
        StorageLive(_557);
        _557 = (_559.0: u64);
        StorageLive(_558);
        _558 = (_559.1: &[u8]);
        _1121 = discriminant(_560);
        StorageDead(_560);
        StorageDead(_559);
        StorageLive(_568);
        _568 = _557;
        _15 = LendingInstruction::DepositReserveLiquidityAndObligationCollateral { liquidity_amount: move _568 };
        StorageDead(_568);
        StorageDead(_558);
        StorageDead(_557);
        goto -> bb460;
    }

    bb254: {
        StorageLive(_564);
        _564 = move ((_560 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_566);
        _566 = move _564;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _566) -> [return: bb255, unwind: bb556];
    }

    bb255: {
        StorageDead(_566);
        StorageDead(_564);
        _1267 = discriminant(_560);
        StorageDead(_560);
        StorageDead(_559);
        goto -> bb514;
    }

    bb256: {
        StorageLive(_571);
        StorageLive(_572);
        StorageLive(_573);
        StorageLive(_574);
        _574 = &(*_3);
        _573 = LendingInstruction::unpack_u64(move _574) -> [return: bb257, unwind continue];
    }

    bb257: {
        StorageDead(_574);
        _572 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _573) -> [return: bb258, unwind: bb516];
    }

    bb258: {
        StorageDead(_573);
        _575 = discriminant(_572);
        switchInt(move _575) -> [0: bb259, 1: bb260, otherwise: bb5];
    }

    bb259: {
        StorageLive(_579);
        _579 = ((_572 as Continue).0: (u64, &[u8]));
        _571 = _579;
        StorageDead(_579);
        StorageLive(_569);
        _569 = (_571.0: u64);
        StorageLive(_570);
        _570 = (_571.1: &[u8]);
        _1123 = discriminant(_572);
        StorageDead(_572);
        StorageDead(_571);
        StorageLive(_580);
        _580 = _569;
        _15 = LendingInstruction::WithdrawObligationCollateralAndRedeemReserveCollateral { collateral_amount: move _580 };
        StorageDead(_580);
        StorageDead(_570);
        StorageDead(_569);
        goto -> bb460;
    }

    bb260: {
        StorageLive(_576);
        _576 = move ((_572 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_578);
        _578 = move _576;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _578) -> [return: bb261, unwind: bb555];
    }

    bb261: {
        StorageDead(_578);
        StorageDead(_576);
        _1265 = discriminant(_572);
        StorageDead(_572);
        StorageDead(_571);
        goto -> bb514;
    }

    bb262: {
        StorageLive(_583);
        StorageLive(_584);
        StorageLive(_585);
        StorageLive(_586);
        _586 = &(*_3);
        _585 = LendingInstruction::unpack_u8(move _586) -> [return: bb263, unwind continue];
    }

    bb263: {
        StorageDead(_586);
        _584 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _585) -> [return: bb264, unwind: bb516];
    }

    bb264: {
        StorageDead(_585);
        _587 = discriminant(_584);
        switchInt(move _587) -> [0: bb265, 1: bb266, otherwise: bb5];
    }

    bb265: {
        StorageLive(_591);
        _591 = ((_584 as Continue).0: (u8, &[u8]));
        _583 = _591;
        StorageDead(_591);
        StorageLive(_581);
        _581 = (_583.0: u8);
        StorageLive(_582);
        _582 = (_583.1: &[u8]);
        _1125 = discriminant(_584);
        StorageDead(_584);
        StorageDead(_583);
        StorageLive(_594);
        StorageLive(_595);
        StorageLive(_596);
        StorageLive(_597);
        _597 = &(*_582);
        _596 = LendingInstruction::unpack_u8(move _597) -> [return: bb268, unwind continue];
    }

    bb266: {
        StorageLive(_588);
        _588 = move ((_584 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_590);
        _590 = move _588;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _590) -> [return: bb267, unwind: bb554];
    }

    bb267: {
        StorageDead(_590);
        StorageDead(_588);
        _1263 = discriminant(_584);
        StorageDead(_584);
        StorageDead(_583);
        goto -> bb514;
    }

    bb268: {
        StorageDead(_597);
        _595 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _596) -> [return: bb269, unwind: bb516];
    }

    bb269: {
        StorageDead(_596);
        _598 = discriminant(_595);
        switchInt(move _598) -> [0: bb270, 1: bb271, otherwise: bb5];
    }

    bb270: {
        StorageLive(_602);
        _602 = ((_595 as Continue).0: (u8, &[u8]));
        _594 = _602;
        StorageDead(_602);
        StorageLive(_592);
        _592 = (_594.0: u8);
        StorageLive(_593);
        _593 = (_594.1: &[u8]);
        _1127 = discriminant(_595);
        StorageDead(_595);
        StorageDead(_594);
        StorageLive(_605);
        StorageLive(_606);
        StorageLive(_607);
        StorageLive(_608);
        _608 = &(*_593);
        _607 = LendingInstruction::unpack_u8(move _608) -> [return: bb273, unwind continue];
    }

    bb271: {
        StorageLive(_599);
        _599 = move ((_595 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_601);
        _601 = move _599;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _601) -> [return: bb272, unwind: bb553];
    }

    bb272: {
        StorageDead(_601);
        StorageDead(_599);
        _1261 = discriminant(_595);
        StorageDead(_595);
        StorageDead(_594);
        goto -> bb486;
    }

    bb273: {
        StorageDead(_608);
        _606 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _607) -> [return: bb274, unwind: bb516];
    }

    bb274: {
        StorageDead(_607);
        _609 = discriminant(_606);
        switchInt(move _609) -> [0: bb275, 1: bb276, otherwise: bb5];
    }

    bb275: {
        StorageLive(_613);
        _613 = ((_606 as Continue).0: (u8, &[u8]));
        _605 = _613;
        StorageDead(_613);
        StorageLive(_603);
        _603 = (_605.0: u8);
        StorageLive(_604);
        _604 = (_605.1: &[u8]);
        _1129 = discriminant(_606);
        StorageDead(_606);
        StorageDead(_605);
        StorageLive(_616);
        StorageLive(_617);
        StorageLive(_618);
        StorageLive(_619);
        _619 = &(*_604);
        _618 = LendingInstruction::unpack_u8(move _619) -> [return: bb278, unwind continue];
    }

    bb276: {
        StorageLive(_610);
        _610 = move ((_606 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_612);
        _612 = move _610;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _612) -> [return: bb277, unwind: bb552];
    }

    bb277: {
        StorageDead(_612);
        StorageDead(_610);
        _1259 = discriminant(_606);
        StorageDead(_606);
        StorageDead(_605);
        goto -> bb485;
    }

    bb278: {
        StorageDead(_619);
        _617 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _618) -> [return: bb279, unwind: bb516];
    }

    bb279: {
        StorageDead(_618);
        _620 = discriminant(_617);
        switchInt(move _620) -> [0: bb280, 1: bb281, otherwise: bb5];
    }

    bb280: {
        StorageLive(_624);
        _624 = ((_617 as Continue).0: (u8, &[u8]));
        _616 = _624;
        StorageDead(_624);
        StorageLive(_614);
        _614 = (_616.0: u8);
        StorageLive(_615);
        _615 = (_616.1: &[u8]);
        _1131 = discriminant(_617);
        StorageDead(_617);
        StorageDead(_616);
        StorageLive(_627);
        StorageLive(_628);
        StorageLive(_629);
        StorageLive(_630);
        _630 = &(*_615);
        _629 = LendingInstruction::unpack_u8(move _630) -> [return: bb283, unwind continue];
    }

    bb281: {
        StorageLive(_621);
        _621 = move ((_617 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_623);
        _623 = move _621;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _623) -> [return: bb282, unwind: bb551];
    }

    bb282: {
        StorageDead(_623);
        StorageDead(_621);
        _1257 = discriminant(_617);
        StorageDead(_617);
        StorageDead(_616);
        goto -> bb484;
    }

    bb283: {
        StorageDead(_630);
        _628 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _629) -> [return: bb284, unwind: bb516];
    }

    bb284: {
        StorageDead(_629);
        _631 = discriminant(_628);
        switchInt(move _631) -> [0: bb285, 1: bb286, otherwise: bb5];
    }

    bb285: {
        StorageLive(_635);
        _635 = ((_628 as Continue).0: (u8, &[u8]));
        _627 = _635;
        StorageDead(_635);
        StorageLive(_625);
        _625 = (_627.0: u8);
        StorageLive(_626);
        _626 = (_627.1: &[u8]);
        _1133 = discriminant(_628);
        StorageDead(_628);
        StorageDead(_627);
        StorageLive(_638);
        StorageLive(_639);
        StorageLive(_640);
        StorageLive(_641);
        _641 = &(*_626);
        _640 = LendingInstruction::unpack_u8(move _641) -> [return: bb288, unwind continue];
    }

    bb286: {
        StorageLive(_632);
        _632 = move ((_628 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_634);
        _634 = move _632;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _634) -> [return: bb287, unwind: bb550];
    }

    bb287: {
        StorageDead(_634);
        StorageDead(_632);
        _1255 = discriminant(_628);
        StorageDead(_628);
        StorageDead(_627);
        goto -> bb483;
    }

    bb288: {
        StorageDead(_641);
        _639 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _640) -> [return: bb289, unwind: bb516];
    }

    bb289: {
        StorageDead(_640);
        _642 = discriminant(_639);
        switchInt(move _642) -> [0: bb290, 1: bb291, otherwise: bb5];
    }

    bb290: {
        StorageLive(_646);
        _646 = ((_639 as Continue).0: (u8, &[u8]));
        _638 = _646;
        StorageDead(_646);
        StorageLive(_636);
        _636 = (_638.0: u8);
        StorageLive(_637);
        _637 = (_638.1: &[u8]);
        _1135 = discriminant(_639);
        StorageDead(_639);
        StorageDead(_638);
        StorageLive(_649);
        StorageLive(_650);
        StorageLive(_651);
        StorageLive(_652);
        _652 = &(*_637);
        _651 = LendingInstruction::unpack_u8(move _652) -> [return: bb293, unwind continue];
    }

    bb291: {
        StorageLive(_643);
        _643 = move ((_639 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_645);
        _645 = move _643;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _645) -> [return: bb292, unwind: bb549];
    }

    bb292: {
        StorageDead(_645);
        StorageDead(_643);
        _1253 = discriminant(_639);
        StorageDead(_639);
        StorageDead(_638);
        goto -> bb482;
    }

    bb293: {
        StorageDead(_652);
        _650 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _651) -> [return: bb294, unwind: bb516];
    }

    bb294: {
        StorageDead(_651);
        _653 = discriminant(_650);
        switchInt(move _653) -> [0: bb295, 1: bb296, otherwise: bb5];
    }

    bb295: {
        StorageLive(_657);
        _657 = ((_650 as Continue).0: (u8, &[u8]));
        _649 = _657;
        StorageDead(_657);
        StorageLive(_647);
        _647 = (_649.0: u8);
        StorageLive(_648);
        _648 = (_649.1: &[u8]);
        _1137 = discriminant(_650);
        StorageDead(_650);
        StorageDead(_649);
        StorageLive(_660);
        StorageLive(_661);
        StorageLive(_662);
        StorageLive(_663);
        _663 = &(*_648);
        _662 = LendingInstruction::unpack_u8(move _663) -> [return: bb298, unwind continue];
    }

    bb296: {
        StorageLive(_654);
        _654 = move ((_650 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_656);
        _656 = move _654;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _656) -> [return: bb297, unwind: bb548];
    }

    bb297: {
        StorageDead(_656);
        StorageDead(_654);
        _1251 = discriminant(_650);
        StorageDead(_650);
        StorageDead(_649);
        goto -> bb481;
    }

    bb298: {
        StorageDead(_663);
        _661 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _662) -> [return: bb299, unwind: bb516];
    }

    bb299: {
        StorageDead(_662);
        _664 = discriminant(_661);
        switchInt(move _664) -> [0: bb300, 1: bb301, otherwise: bb5];
    }

    bb300: {
        StorageLive(_668);
        _668 = ((_661 as Continue).0: (u8, &[u8]));
        _660 = _668;
        StorageDead(_668);
        StorageLive(_658);
        _658 = (_660.0: u8);
        StorageLive(_659);
        _659 = (_660.1: &[u8]);
        _1139 = discriminant(_661);
        StorageDead(_661);
        StorageDead(_660);
        StorageLive(_671);
        StorageLive(_672);
        StorageLive(_673);
        StorageLive(_674);
        _674 = &(*_659);
        _673 = LendingInstruction::unpack_u64(move _674) -> [return: bb303, unwind continue];
    }

    bb301: {
        StorageLive(_665);
        _665 = move ((_661 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_667);
        _667 = move _665;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _667) -> [return: bb302, unwind: bb547];
    }

    bb302: {
        StorageDead(_667);
        StorageDead(_665);
        _1249 = discriminant(_661);
        StorageDead(_661);
        StorageDead(_660);
        goto -> bb480;
    }

    bb303: {
        StorageDead(_674);
        _672 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _673) -> [return: bb304, unwind: bb516];
    }

    bb304: {
        StorageDead(_673);
        _675 = discriminant(_672);
        switchInt(move _675) -> [0: bb305, 1: bb306, otherwise: bb5];
    }

    bb305: {
        StorageLive(_679);
        _679 = ((_672 as Continue).0: (u64, &[u8]));
        _671 = _679;
        StorageDead(_679);
        StorageLive(_669);
        _669 = (_671.0: u64);
        StorageLive(_670);
        _670 = (_671.1: &[u8]);
        _1141 = discriminant(_672);
        StorageDead(_672);
        StorageDead(_671);
        StorageLive(_682);
        StorageLive(_683);
        StorageLive(_684);
        StorageLive(_685);
        _685 = &(*_670);
        _684 = LendingInstruction::unpack_u64(move _685) -> [return: bb308, unwind continue];
    }

    bb306: {
        StorageLive(_676);
        _676 = move ((_672 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_678);
        _678 = move _676;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _678) -> [return: bb307, unwind: bb546];
    }

    bb307: {
        StorageDead(_678);
        StorageDead(_676);
        _1247 = discriminant(_672);
        StorageDead(_672);
        StorageDead(_671);
        goto -> bb479;
    }

    bb308: {
        StorageDead(_685);
        _683 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _684) -> [return: bb309, unwind: bb516];
    }

    bb309: {
        StorageDead(_684);
        _686 = discriminant(_683);
        switchInt(move _686) -> [0: bb310, 1: bb311, otherwise: bb5];
    }

    bb310: {
        StorageLive(_690);
        _690 = ((_683 as Continue).0: (u64, &[u8]));
        _682 = _690;
        StorageDead(_690);
        StorageLive(_680);
        _680 = (_682.0: u64);
        StorageLive(_681);
        _681 = (_682.1: &[u8]);
        _1143 = discriminant(_683);
        StorageDead(_683);
        StorageDead(_682);
        StorageLive(_693);
        StorageLive(_694);
        StorageLive(_695);
        StorageLive(_696);
        _696 = &(*_681);
        _695 = LendingInstruction::unpack_u64(move _696) -> [return: bb313, unwind continue];
    }

    bb311: {
        StorageLive(_687);
        _687 = move ((_683 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_689);
        _689 = move _687;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _689) -> [return: bb312, unwind: bb545];
    }

    bb312: {
        StorageDead(_689);
        StorageDead(_687);
        _1245 = discriminant(_683);
        StorageDead(_683);
        StorageDead(_682);
        goto -> bb478;
    }

    bb313: {
        StorageDead(_696);
        _694 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _695) -> [return: bb314, unwind: bb516];
    }

    bb314: {
        StorageDead(_695);
        _697 = discriminant(_694);
        switchInt(move _697) -> [0: bb315, 1: bb316, otherwise: bb5];
    }

    bb315: {
        StorageLive(_701);
        _701 = ((_694 as Continue).0: (u64, &[u8]));
        _693 = _701;
        StorageDead(_701);
        StorageLive(_691);
        _691 = (_693.0: u64);
        StorageLive(_692);
        _692 = (_693.1: &[u8]);
        _1145 = discriminant(_694);
        StorageDead(_694);
        StorageDead(_693);
        StorageLive(_704);
        StorageLive(_705);
        StorageLive(_706);
        StorageLive(_707);
        _707 = &(*_692);
        _706 = LendingInstruction::unpack_u8(move _707) -> [return: bb318, unwind continue];
    }

    bb316: {
        StorageLive(_698);
        _698 = move ((_694 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_700);
        _700 = move _698;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _700) -> [return: bb317, unwind: bb544];
    }

    bb317: {
        StorageDead(_700);
        StorageDead(_698);
        _1243 = discriminant(_694);
        StorageDead(_694);
        StorageDead(_693);
        goto -> bb477;
    }

    bb318: {
        StorageDead(_707);
        _705 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _706) -> [return: bb319, unwind: bb516];
    }

    bb319: {
        StorageDead(_706);
        _708 = discriminant(_705);
        switchInt(move _708) -> [0: bb320, 1: bb321, otherwise: bb5];
    }

    bb320: {
        StorageLive(_712);
        _712 = ((_705 as Continue).0: (u8, &[u8]));
        _704 = _712;
        StorageDead(_712);
        StorageLive(_702);
        _702 = (_704.0: u8);
        StorageLive(_703);
        _703 = (_704.1: &[u8]);
        _1147 = discriminant(_705);
        StorageDead(_705);
        StorageDead(_704);
        StorageLive(_715);
        StorageLive(_716);
        StorageLive(_717);
        StorageLive(_718);
        _718 = &(*_703);
        _717 = LendingInstruction::unpack_u64(move _718) -> [return: bb323, unwind continue];
    }

    bb321: {
        StorageLive(_709);
        _709 = move ((_705 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_711);
        _711 = move _709;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _711) -> [return: bb322, unwind: bb543];
    }

    bb322: {
        StorageDead(_711);
        StorageDead(_709);
        _1241 = discriminant(_705);
        StorageDead(_705);
        StorageDead(_704);
        goto -> bb476;
    }

    bb323: {
        StorageDead(_718);
        _716 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _717) -> [return: bb324, unwind: bb516];
    }

    bb324: {
        StorageDead(_717);
        _719 = discriminant(_716);
        switchInt(move _719) -> [0: bb325, 1: bb326, otherwise: bb5];
    }

    bb325: {
        StorageLive(_723);
        _723 = ((_716 as Continue).0: (u64, &[u8]));
        _715 = _723;
        StorageDead(_723);
        StorageLive(_713);
        _713 = (_715.0: u64);
        StorageLive(_714);
        _714 = (_715.1: &[u8]);
        _1149 = discriminant(_716);
        StorageDead(_716);
        StorageDead(_715);
        StorageLive(_726);
        StorageLive(_727);
        StorageLive(_728);
        StorageLive(_729);
        _729 = &(*_714);
        _728 = LendingInstruction::unpack_u64(move _729) -> [return: bb328, unwind continue];
    }

    bb326: {
        StorageLive(_720);
        _720 = move ((_716 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_722);
        _722 = move _720;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _722) -> [return: bb327, unwind: bb542];
    }

    bb327: {
        StorageDead(_722);
        StorageDead(_720);
        _1239 = discriminant(_716);
        StorageDead(_716);
        StorageDead(_715);
        goto -> bb475;
    }

    bb328: {
        StorageDead(_729);
        _727 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _728) -> [return: bb329, unwind: bb516];
    }

    bb329: {
        StorageDead(_728);
        _730 = discriminant(_727);
        switchInt(move _730) -> [0: bb330, 1: bb331, otherwise: bb5];
    }

    bb330: {
        StorageLive(_734);
        _734 = ((_727 as Continue).0: (u64, &[u8]));
        _726 = _734;
        StorageDead(_734);
        StorageLive(_724);
        _724 = (_726.0: u64);
        StorageLive(_725);
        _725 = (_726.1: &[u8]);
        _1151 = discriminant(_727);
        StorageDead(_727);
        StorageDead(_726);
        StorageLive(_737);
        StorageLive(_738);
        StorageLive(_739);
        StorageLive(_740);
        _740 = &(*_725);
        _739 = LendingInstruction::unpack_pubkey(move _740) -> [return: bb333, unwind continue];
    }

    bb331: {
        StorageLive(_731);
        _731 = move ((_727 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_733);
        _733 = move _731;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _733) -> [return: bb332, unwind: bb541];
    }

    bb332: {
        StorageDead(_733);
        StorageDead(_731);
        _1237 = discriminant(_727);
        StorageDead(_727);
        StorageDead(_726);
        goto -> bb474;
    }

    bb333: {
        StorageDead(_740);
        _738 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _739) -> [return: bb334, unwind: bb516];
    }

    bb334: {
        StorageDead(_739);
        _741 = discriminant(_738);
        switchInt(move _741) -> [0: bb335, 1: bb336, otherwise: bb5];
    }

    bb335: {
        StorageLive(_745);
        _745 = ((_738 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _737 = _745;
        StorageDead(_745);
        StorageLive(_735);
        _735 = (_737.0: solana_program::pubkey::Pubkey);
        StorageLive(_736);
        _736 = (_737.1: &[u8]);
        _1153 = discriminant(_738);
        StorageDead(_738);
        StorageDead(_737);
        StorageLive(_748);
        StorageLive(_749);
        StorageLive(_750);
        StorageLive(_751);
        _751 = &(*_736);
        _750 = LendingInstruction::unpack_u8(move _751) -> [return: bb338, unwind continue];
    }

    bb336: {
        StorageLive(_742);
        _742 = move ((_738 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_744);
        _744 = move _742;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _744) -> [return: bb337, unwind: bb540];
    }

    bb337: {
        StorageDead(_744);
        StorageDead(_742);
        _1235 = discriminant(_738);
        StorageDead(_738);
        StorageDead(_737);
        goto -> bb473;
    }

    bb338: {
        StorageDead(_751);
        _749 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _750) -> [return: bb339, unwind: bb516];
    }

    bb339: {
        StorageDead(_750);
        _752 = discriminant(_749);
        switchInt(move _752) -> [0: bb340, 1: bb341, otherwise: bb5];
    }

    bb340: {
        StorageLive(_756);
        _756 = ((_749 as Continue).0: (u8, &[u8]));
        _748 = _756;
        StorageDead(_756);
        StorageLive(_746);
        _746 = (_748.0: u8);
        StorageLive(_747);
        _747 = (_748.1: &[u8]);
        _1155 = discriminant(_749);
        StorageDead(_749);
        StorageDead(_748);
        StorageLive(_759);
        StorageLive(_760);
        StorageLive(_761);
        StorageLive(_762);
        _762 = &(*_747);
        _761 = LendingInstruction::unpack_u8(move _762) -> [return: bb343, unwind continue];
    }

    bb341: {
        StorageLive(_753);
        _753 = move ((_749 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_755);
        _755 = move _753;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _755) -> [return: bb342, unwind: bb539];
    }

    bb342: {
        StorageDead(_755);
        StorageDead(_753);
        _1233 = discriminant(_749);
        StorageDead(_749);
        StorageDead(_748);
        goto -> bb472;
    }

    bb343: {
        StorageDead(_762);
        _760 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _761) -> [return: bb344, unwind: bb516];
    }

    bb344: {
        StorageDead(_761);
        _763 = discriminant(_760);
        switchInt(move _763) -> [0: bb345, 1: bb346, otherwise: bb5];
    }

    bb345: {
        StorageLive(_767);
        _767 = ((_760 as Continue).0: (u8, &[u8]));
        _759 = _767;
        StorageDead(_767);
        StorageLive(_757);
        _757 = (_759.0: u8);
        StorageLive(_758);
        _758 = (_759.1: &[u8]);
        _1157 = discriminant(_760);
        StorageDead(_760);
        StorageDead(_759);
        StorageLive(_770);
        StorageLive(_771);
        StorageLive(_772);
        StorageLive(_773);
        _773 = &(*_758);
        _772 = LendingInstruction::unpack_u64(move _773) -> [return: bb348, unwind continue];
    }

    bb346: {
        StorageLive(_764);
        _764 = move ((_760 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_766);
        _766 = move _764;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _766) -> [return: bb347, unwind: bb538];
    }

    bb347: {
        StorageDead(_766);
        StorageDead(_764);
        _1231 = discriminant(_760);
        StorageDead(_760);
        StorageDead(_759);
        goto -> bb471;
    }

    bb348: {
        StorageDead(_773);
        _771 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _772) -> [return: bb349, unwind: bb516];
    }

    bb349: {
        StorageDead(_772);
        _774 = discriminant(_771);
        switchInt(move _774) -> [0: bb350, 1: bb351, otherwise: bb5];
    }

    bb350: {
        StorageLive(_778);
        _778 = ((_771 as Continue).0: (u64, &[u8]));
        _770 = _778;
        StorageDead(_778);
        StorageLive(_768);
        _768 = (_770.0: u64);
        StorageLive(_769);
        _769 = (_770.1: &[u8]);
        _1159 = discriminant(_771);
        StorageDead(_771);
        StorageDead(_770);
        StorageLive(_781);
        StorageLive(_782);
        StorageLive(_783);
        StorageLive(_784);
        _784 = &(*_769);
        _783 = LendingInstruction::unpack_u8(move _784) -> [return: bb353, unwind continue];
    }

    bb351: {
        StorageLive(_775);
        _775 = move ((_771 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_777);
        _777 = move _775;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _777) -> [return: bb352, unwind: bb537];
    }

    bb352: {
        StorageDead(_777);
        StorageDead(_775);
        _1229 = discriminant(_771);
        StorageDead(_771);
        StorageDead(_770);
        goto -> bb470;
    }

    bb353: {
        StorageDead(_784);
        _782 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _783) -> [return: bb354, unwind: bb516];
    }

    bb354: {
        StorageDead(_783);
        _785 = discriminant(_782);
        switchInt(move _785) -> [0: bb355, 1: bb356, otherwise: bb5];
    }

    bb355: {
        StorageLive(_789);
        _789 = ((_782 as Continue).0: (u8, &[u8]));
        _781 = _789;
        StorageDead(_789);
        StorageLive(_779);
        _779 = (_781.0: u8);
        StorageLive(_780);
        _780 = (_781.1: &[u8]);
        _1161 = discriminant(_782);
        StorageDead(_782);
        StorageDead(_781);
        StorageLive(_792);
        StorageLive(_793);
        StorageLive(_794);
        StorageLive(_795);
        _795 = &(*_780);
        _794 = LendingInstruction::unpack_u8(move _795) -> [return: bb358, unwind continue];
    }

    bb356: {
        StorageLive(_786);
        _786 = move ((_782 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_788);
        _788 = move _786;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _788) -> [return: bb357, unwind: bb536];
    }

    bb357: {
        StorageDead(_788);
        StorageDead(_786);
        _1227 = discriminant(_782);
        StorageDead(_782);
        StorageDead(_781);
        goto -> bb469;
    }

    bb358: {
        StorageDead(_795);
        _793 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _794) -> [return: bb359, unwind: bb516];
    }

    bb359: {
        StorageDead(_794);
        _796 = discriminant(_793);
        switchInt(move _796) -> [0: bb360, 1: bb361, otherwise: bb5];
    }

    bb360: {
        StorageLive(_800);
        _800 = ((_793 as Continue).0: (u8, &[u8]));
        _792 = _800;
        StorageDead(_800);
        StorageLive(_790);
        _790 = (_792.0: u8);
        StorageLive(_791);
        _791 = (_792.1: &[u8]);
        _1163 = discriminant(_793);
        StorageDead(_793);
        StorageDead(_792);
        StorageLive(_803);
        StorageLive(_804);
        StorageLive(_805);
        StorageLive(_806);
        _806 = &(*_791);
        _805 = LendingInstruction::unpack_u8(move _806) -> [return: bb363, unwind continue];
    }

    bb361: {
        StorageLive(_797);
        _797 = move ((_793 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_799);
        _799 = move _797;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _799) -> [return: bb362, unwind: bb535];
    }

    bb362: {
        StorageDead(_799);
        StorageDead(_797);
        _1225 = discriminant(_793);
        StorageDead(_793);
        StorageDead(_792);
        goto -> bb468;
    }

    bb363: {
        StorageDead(_806);
        _804 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _805) -> [return: bb364, unwind: bb516];
    }

    bb364: {
        StorageDead(_805);
        _807 = discriminant(_804);
        switchInt(move _807) -> [0: bb365, 1: bb366, otherwise: bb5];
    }

    bb365: {
        StorageLive(_811);
        _811 = ((_804 as Continue).0: (u8, &[u8]));
        _803 = _811;
        StorageDead(_811);
        StorageLive(_801);
        _801 = (_803.0: u8);
        StorageLive(_802);
        _802 = (_803.1: &[u8]);
        _1165 = discriminant(_804);
        StorageDead(_804);
        StorageDead(_803);
        StorageLive(_814);
        StorageLive(_815);
        StorageLive(_816);
        StorageLive(_817);
        _817 = &(*_802);
        _816 = LendingInstruction::unpack_i64(move _817) -> [return: bb368, unwind continue];
    }

    bb366: {
        StorageLive(_808);
        _808 = move ((_804 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_810);
        _810 = move _808;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _810) -> [return: bb367, unwind: bb534];
    }

    bb367: {
        StorageDead(_810);
        StorageDead(_808);
        _1223 = discriminant(_804);
        StorageDead(_804);
        StorageDead(_803);
        goto -> bb467;
    }

    bb368: {
        StorageDead(_817);
        _815 = <Result<(i64, &[u8]), ProgramError> as Try>::branch(move _816) -> [return: bb369, unwind: bb516];
    }

    bb369: {
        StorageDead(_816);
        _818 = discriminant(_815);
        switchInt(move _818) -> [0: bb370, 1: bb371, otherwise: bb5];
    }

    bb370: {
        StorageLive(_822);
        _822 = ((_815 as Continue).0: (i64, &[u8]));
        _814 = _822;
        StorageDead(_822);
        StorageLive(_812);
        _812 = (_814.0: i64);
        StorageLive(_813);
        _813 = (_814.1: &[u8]);
        _1167 = discriminant(_815);
        StorageDead(_815);
        StorageDead(_814);
        StorageLive(_825);
        StorageLive(_826);
        StorageLive(_827);
        StorageLive(_828);
        StorageLive(_829);
        _829 = &(*_813);
        _828 = LendingInstruction::unpack_u8(move _829) -> [return: bb373, unwind continue];
    }

    bb371: {
        StorageLive(_819);
        _819 = move ((_815 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_821);
        _821 = move _819;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _821) -> [return: bb372, unwind: bb533];
    }

    bb372: {
        StorageDead(_821);
        StorageDead(_819);
        _1221 = discriminant(_815);
        StorageDead(_815);
        StorageDead(_814);
        goto -> bb466;
    }

    bb373: {
        StorageDead(_829);
        _827 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _828) -> [return: bb374, unwind: bb516];
    }

    bb374: {
        _1032 = const true;
        StorageDead(_828);
        _830 = discriminant(_827);
        switchInt(move _830) -> [0: bb375, 1: bb376, otherwise: bb5];
    }

    bb375: {
        StorageLive(_834);
        _834 = ((_827 as Continue).0: (u8, &[u8]));
        _826 = _834;
        StorageDead(_834);
        switchInt((_826.0: u8)) -> [0: bb379, 1: bb380, otherwise: bb378];
    }

    bb376: {
        StorageLive(_831);
        _831 = move ((_827 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_833);
        _833 = move _831;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _833) -> [return: bb377, unwind: bb532];
    }

    bb377: {
        StorageDead(_833);
        StorageDead(_831);
        goto -> bb517;
    }

    bb378: {
        StorageLive(_854);
        StorageLive(_855);
        _855 = LendingError::InstructionUnpackError;
        _854 = <LendingError as Into<ProgramError>>::into(move _855) -> [return: bb386, unwind: bb532];
    }

    bb379: {
        StorageLive(_835);
        _835 = (_826.1: &[u8]);
        StorageLive(_836);
        _836 = Option::<Pubkey>::None;
        StorageLive(_837);
        _837 = _835;
        _825 = (move _836, move _837);
        StorageDead(_837);
        StorageDead(_836);
        StorageDead(_835);
        goto -> bb387;
    }

    bb380: {
        StorageLive(_838);
        _838 = (_826.1: &[u8]);
        StorageLive(_841);
        StorageLive(_842);
        StorageLive(_843);
        StorageLive(_844);
        _844 = &(*_838);
        _843 = LendingInstruction::unpack_pubkey(move _844) -> [return: bb381, unwind: bb532];
    }

    bb381: {
        StorageDead(_844);
        _842 = <Result<(Pubkey, &[u8]), ProgramError> as Try>::branch(move _843) -> [return: bb382, unwind: bb532];
    }

    bb382: {
        StorageDead(_843);
        _845 = discriminant(_842);
        switchInt(move _845) -> [0: bb383, 1: bb384, otherwise: bb5];
    }

    bb383: {
        StorageLive(_849);
        _849 = ((_842 as Continue).0: (solana_program::pubkey::Pubkey, &[u8]));
        _841 = _849;
        StorageDead(_849);
        StorageLive(_839);
        _839 = (_841.0: solana_program::pubkey::Pubkey);
        StorageLive(_840);
        _840 = (_841.1: &[u8]);
        _1169 = discriminant(_842);
        StorageDead(_842);
        StorageDead(_841);
        StorageLive(_850);
        StorageLive(_851);
        _851 = _839;
        _850 = Option::<Pubkey>::Some(move _851);
        StorageDead(_851);
        StorageLive(_852);
        _852 = _840;
        _825 = (move _850, move _852);
        StorageDead(_852);
        StorageDead(_850);
        StorageDead(_840);
        StorageDead(_839);
        StorageDead(_838);
        goto -> bb387;
    }

    bb384: {
        StorageLive(_846);
        _846 = move ((_842 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_848);
        _848 = move _846;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _848) -> [return: bb385, unwind: bb531];
    }

    bb385: {
        StorageDead(_848);
        StorageDead(_846);
        _1217 = discriminant(_842);
        StorageDead(_842);
        StorageDead(_841);
        StorageDead(_838);
        goto -> bb517;
    }

    bb386: {
        StorageDead(_855);
        _0 = Result::<LendingInstruction, ProgramError>::Err(move _854);
        StorageDead(_854);
        goto -> bb517;
    }

    bb387: {
        StorageLive(_823);
        _823 = (_825.0: std::option::Option<solana_program::pubkey::Pubkey>);
        StorageLive(_824);
        _824 = (_825.1: &[u8]);
        _1171 = discriminant(_827);
        _1032 = const false;
        StorageDead(_827);
        StorageDead(_826);
        StorageDead(_825);
        StorageLive(_858);
        StorageLive(_859);
        StorageLive(_860);
        StorageLive(_861);
        _861 = &(*_824);
        _860 = LendingInstruction::unpack_u64(move _861) -> [return: bb388, unwind continue];
    }

    bb388: {
        StorageDead(_861);
        _859 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _860) -> [return: bb389, unwind: bb516];
    }

    bb389: {
        StorageDead(_860);
        _862 = discriminant(_859);
        switchInt(move _862) -> [0: bb390, 1: bb391, otherwise: bb5];
    }

    bb390: {
        StorageLive(_866);
        _866 = ((_859 as Continue).0: (u64, &[u8]));
        _858 = _866;
        StorageDead(_866);
        StorageLive(_856);
        _856 = (_858.0: u64);
        StorageLive(_857);
        _857 = (_858.1: &[u8]);
        _1173 = discriminant(_859);
        StorageDead(_859);
        StorageDead(_858);
        StorageLive(_869);
        StorageLive(_870);
        StorageLive(_871);
        StorageLive(_872);
        _872 = &(*_857);
        _871 = LendingInstruction::unpack_u64(move _872) -> [return: bb393, unwind continue];
    }

    bb391: {
        StorageLive(_863);
        _863 = move ((_859 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_865);
        _865 = move _863;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _865) -> [return: bb392, unwind: bb530];
    }

    bb392: {
        StorageDead(_865);
        StorageDead(_863);
        _1215 = discriminant(_859);
        StorageDead(_859);
        StorageDead(_858);
        goto -> bb464;
    }

    bb393: {
        StorageDead(_872);
        _870 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _871) -> [return: bb394, unwind: bb516];
    }

    bb394: {
        StorageDead(_871);
        _873 = discriminant(_870);
        switchInt(move _873) -> [0: bb395, 1: bb396, otherwise: bb5];
    }

    bb395: {
        StorageLive(_877);
        _877 = ((_870 as Continue).0: (u64, &[u8]));
        _869 = _877;
        StorageDead(_877);
        StorageLive(_867);
        _867 = (_869.0: u64);
        StorageLive(_868);
        _868 = (_869.1: &[u8]);
        _1175 = discriminant(_870);
        StorageDead(_870);
        StorageDead(_869);
        StorageLive(_880);
        StorageLive(_881);
        StorageLive(_882);
        StorageLive(_883);
        _883 = &(*_868);
        _882 = LendingInstruction::unpack_u64(move _883) -> [return: bb398, unwind continue];
    }

    bb396: {
        StorageLive(_874);
        _874 = move ((_870 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_876);
        _876 = move _874;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _876) -> [return: bb397, unwind: bb529];
    }

    bb397: {
        StorageDead(_876);
        StorageDead(_874);
        _1213 = discriminant(_870);
        StorageDead(_870);
        StorageDead(_869);
        goto -> bb463;
    }

    bb398: {
        StorageDead(_883);
        _881 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _882) -> [return: bb399, unwind: bb516];
    }

    bb399: {
        StorageDead(_882);
        _884 = discriminant(_881);
        switchInt(move _884) -> [0: bb400, 1: bb401, otherwise: bb5];
    }

    bb400: {
        StorageLive(_888);
        _888 = ((_881 as Continue).0: (u64, &[u8]));
        _880 = _888;
        StorageDead(_888);
        StorageLive(_878);
        _878 = (_880.0: u64);
        StorageLive(_879);
        _879 = (_880.1: &[u8]);
        _1177 = discriminant(_881);
        StorageDead(_881);
        StorageDead(_880);
        StorageLive(_891);
        StorageLive(_892);
        StorageLive(_893);
        StorageLive(_894);
        _894 = &(*_879);
        _893 = LendingInstruction::unpack_u64(move _894) -> [return: bb403, unwind continue];
    }

    bb401: {
        StorageLive(_885);
        _885 = move ((_881 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_887);
        _887 = move _885;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _887) -> [return: bb402, unwind: bb528];
    }

    bb402: {
        StorageDead(_887);
        StorageDead(_885);
        _1211 = discriminant(_881);
        StorageDead(_881);
        StorageDead(_880);
        goto -> bb462;
    }

    bb403: {
        StorageDead(_894);
        _892 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _893) -> [return: bb404, unwind: bb516];
    }

    bb404: {
        StorageDead(_893);
        _895 = discriminant(_892);
        switchInt(move _895) -> [0: bb405, 1: bb406, otherwise: bb5];
    }

    bb405: {
        StorageLive(_899);
        _899 = ((_892 as Continue).0: (u64, &[u8]));
        _891 = _899;
        StorageDead(_899);
        StorageLive(_889);
        _889 = (_891.0: u64);
        StorageLive(_890);
        _890 = (_891.1: &[u8]);
        _1179 = discriminant(_892);
        StorageDead(_892);
        StorageDead(_891);
        StorageLive(_900);
        StorageLive(_901);
        _901 = _581;
        StorageLive(_902);
        _902 = _592;
        StorageLive(_903);
        _903 = _603;
        StorageLive(_904);
        _904 = _614;
        StorageLive(_905);
        _905 = _790;
        StorageLive(_906);
        _906 = _625;
        StorageLive(_907);
        _907 = _801;
        StorageLive(_908);
        _908 = _636;
        StorageLive(_909);
        _909 = _647;
        StorageLive(_910);
        _910 = _658;
        StorageLive(_911);
        _911 = _669;
        StorageLive(_912);
        StorageLive(_913);
        _913 = _680;
        StorageLive(_914);
        _914 = _691;
        StorageLive(_915);
        _915 = _702;
        _912 = reserve::ReserveFees { borrow_fee_wad: move _913, flash_loan_fee_wad: move _914, host_fee_percentage: move _915 };
        StorageDead(_915);
        StorageDead(_914);
        StorageDead(_913);
        StorageLive(_916);
        _916 = _713;
        StorageLive(_917);
        _917 = _724;
        StorageLive(_918);
        _918 = _735;
        StorageLive(_919);
        _919 = _746;
        StorageLive(_920);
        _920 = _757;
        StorageLive(_921);
        _921 = _768;
        StorageLive(_922);
        StorageLive(_923);
        StorageLive(_924);
        _924 = _779;
        _923 = <reserve::ReserveType as FromPrimitive>::from_u8(move _924) -> [return: bb408, unwind continue];
    }

    bb406: {
        StorageLive(_896);
        _896 = move ((_892 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_898);
        _898 = move _896;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _898) -> [return: bb407, unwind: bb527];
    }

    bb407: {
        StorageDead(_898);
        StorageDead(_896);
        _1209 = discriminant(_892);
        StorageDead(_892);
        StorageDead(_891);
        StorageDead(_879);
        StorageDead(_878);
        goto -> bb462;
    }

    bb408: {
        StorageDead(_924);
        _922 = Option::<reserve::ReserveType>::unwrap(move _923) -> [return: bb409, unwind continue];
    }

    bb409: {
        StorageDead(_923);
        StorageLive(_925);
        _925 = _812;
        StorageLive(_926);
        _926 = _823;
        StorageLive(_927);
        _927 = _856;
        StorageLive(_928);
        _928 = _867;
        _900 = reserve::ReserveConfig { optimal_utilization_rate: move _901, max_utilization_rate: move _902, loan_to_value_ratio: move _903, liquidation_bonus: move _904, max_liquidation_bonus: move _905, liquidation_threshold: move _906, max_liquidation_threshold: move _907, min_borrow_rate: move _908, optimal_borrow_rate: move _909, max_borrow_rate: move _910, super_max_borrow_rate: move _911, fees: move _912, deposit_limit: move _916, borrow_limit: move _917, fee_receiver: move _918, protocol_liquidation_fee: move _919, protocol_take_rate: move _920, added_borrow_weight_bps: move _921, reserve_type: move _922, scaled_price_offset_bps: move _925, extra_oracle_pubkey: move _926, attributed_borrow_limit_open: move _927, attributed_borrow_limit_close: move _928 };
        StorageDead(_928);
        StorageDead(_927);
        StorageDead(_926);
        StorageDead(_925);
        StorageDead(_922);
        StorageDead(_921);
        StorageDead(_920);
        StorageDead(_919);
        StorageDead(_918);
        StorageDead(_917);
        StorageDead(_916);
        StorageDead(_912);
        StorageDead(_911);
        StorageDead(_910);
        StorageDead(_909);
        StorageDead(_908);
        StorageDead(_907);
        StorageDead(_906);
        StorageDead(_905);
        StorageDead(_904);
        StorageDead(_903);
        StorageDead(_902);
        StorageDead(_901);
        StorageLive(_929);
        StorageLive(_930);
        _930 = _878;
        StorageLive(_931);
        _931 = _889;
        _929 = rate_limiter::RateLimiterConfig { window_duration: move _930, max_outflow: move _931 };
        StorageDead(_931);
        StorageDead(_930);
        _15 = LendingInstruction::UpdateReserveConfig { config: move _900, rate_limiter_config: move _929 };
        StorageDead(_929);
        StorageDead(_900);
        StorageDead(_890);
        StorageDead(_889);
        StorageDead(_879);
        StorageDead(_878);
        StorageDead(_868);
        StorageDead(_867);
        StorageDead(_857);
        StorageDead(_856);
        StorageDead(_824);
        StorageDead(_823);
        StorageDead(_813);
        StorageDead(_812);
        StorageDead(_802);
        StorageDead(_801);
        StorageDead(_791);
        StorageDead(_790);
        StorageDead(_780);
        StorageDead(_779);
        StorageDead(_769);
        StorageDead(_768);
        StorageDead(_758);
        StorageDead(_757);
        StorageDead(_747);
        StorageDead(_746);
        StorageDead(_736);
        StorageDead(_735);
        StorageDead(_725);
        StorageDead(_724);
        StorageDead(_714);
        StorageDead(_713);
        StorageDead(_703);
        StorageDead(_702);
        StorageDead(_692);
        StorageDead(_691);
        StorageDead(_681);
        StorageDead(_680);
        StorageDead(_670);
        StorageDead(_669);
        StorageDead(_659);
        StorageDead(_658);
        StorageDead(_648);
        StorageDead(_647);
        StorageDead(_637);
        StorageDead(_636);
        StorageDead(_626);
        StorageDead(_625);
        StorageDead(_615);
        StorageDead(_614);
        StorageDead(_604);
        StorageDead(_603);
        StorageDead(_593);
        StorageDead(_592);
        StorageDead(_582);
        StorageDead(_581);
        goto -> bb460;
    }

    bb410: {
        StorageLive(_934);
        StorageLive(_935);
        StorageLive(_936);
        StorageLive(_937);
        _937 = &(*_3);
        _936 = LendingInstruction::unpack_u64(move _937) -> [return: bb411, unwind continue];
    }

    bb411: {
        StorageDead(_937);
        _935 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _936) -> [return: bb412, unwind: bb516];
    }

    bb412: {
        StorageDead(_936);
        _938 = discriminant(_935);
        switchInt(move _938) -> [0: bb413, 1: bb414, otherwise: bb5];
    }

    bb413: {
        StorageLive(_942);
        _942 = ((_935 as Continue).0: (u64, &[u8]));
        _934 = _942;
        StorageDead(_942);
        StorageLive(_932);
        _932 = (_934.0: u64);
        StorageLive(_933);
        _933 = (_934.1: &[u8]);
        _1181 = discriminant(_935);
        StorageDead(_935);
        StorageDead(_934);
        StorageLive(_943);
        _943 = _932;
        _15 = LendingInstruction::LiquidateObligationAndRedeemReserveCollateral { liquidity_amount: move _943 };
        StorageDead(_943);
        StorageDead(_933);
        StorageDead(_932);
        goto -> bb460;
    }

    bb414: {
        StorageLive(_939);
        _939 = move ((_935 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_941);
        _941 = move _939;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _941) -> [return: bb415, unwind: bb526];
    }

    bb415: {
        StorageDead(_941);
        StorageDead(_939);
        _1207 = discriminant(_935);
        StorageDead(_935);
        StorageDead(_934);
        goto -> bb514;
    }

    bb416: {
        _15 = LendingInstruction::RedeemFees;
        goto -> bb460;
    }

    bb417: {
        StorageLive(_946);
        StorageLive(_947);
        StorageLive(_948);
        StorageLive(_949);
        _949 = &(*_3);
        _948 = LendingInstruction::unpack_u64(move _949) -> [return: bb418, unwind continue];
    }

    bb418: {
        StorageDead(_949);
        _947 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _948) -> [return: bb419, unwind: bb516];
    }

    bb419: {
        StorageDead(_948);
        _950 = discriminant(_947);
        switchInt(move _950) -> [0: bb420, 1: bb421, otherwise: bb5];
    }

    bb420: {
        StorageLive(_954);
        _954 = ((_947 as Continue).0: (u64, &[u8]));
        _946 = _954;
        StorageDead(_954);
        StorageLive(_944);
        _944 = (_946.0: u64);
        StorageLive(_945);
        _945 = (_946.1: &[u8]);
        _1183 = discriminant(_947);
        StorageDead(_947);
        StorageDead(_946);
        StorageLive(_955);
        _955 = _944;
        _15 = LendingInstruction::FlashBorrowReserveLiquidity { liquidity_amount: move _955 };
        StorageDead(_955);
        StorageDead(_945);
        StorageDead(_944);
        goto -> bb460;
    }

    bb421: {
        StorageLive(_951);
        _951 = move ((_947 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_953);
        _953 = move _951;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _953) -> [return: bb422, unwind: bb525];
    }

    bb422: {
        StorageDead(_953);
        StorageDead(_951);
        _1205 = discriminant(_947);
        StorageDead(_947);
        StorageDead(_946);
        goto -> bb514;
    }

    bb423: {
        StorageLive(_958);
        StorageLive(_959);
        StorageLive(_960);
        StorageLive(_961);
        _961 = &(*_3);
        _960 = LendingInstruction::unpack_u64(move _961) -> [return: bb424, unwind continue];
    }

    bb424: {
        StorageDead(_961);
        _959 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _960) -> [return: bb425, unwind: bb516];
    }

    bb425: {
        StorageDead(_960);
        _962 = discriminant(_959);
        switchInt(move _962) -> [0: bb426, 1: bb427, otherwise: bb5];
    }

    bb426: {
        StorageLive(_966);
        _966 = ((_959 as Continue).0: (u64, &[u8]));
        _958 = _966;
        StorageDead(_966);
        StorageLive(_956);
        _956 = (_958.0: u64);
        StorageLive(_957);
        _957 = (_958.1: &[u8]);
        _1185 = discriminant(_959);
        StorageDead(_959);
        StorageDead(_958);
        StorageLive(_969);
        StorageLive(_970);
        StorageLive(_971);
        StorageLive(_972);
        _972 = &(*_957);
        _971 = LendingInstruction::unpack_u8(move _972) -> [return: bb429, unwind continue];
    }

    bb427: {
        StorageLive(_963);
        _963 = move ((_959 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_965);
        _965 = move _963;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _965) -> [return: bb428, unwind: bb524];
    }

    bb428: {
        StorageDead(_965);
        StorageDead(_963);
        _1203 = discriminant(_959);
        StorageDead(_959);
        StorageDead(_958);
        goto -> bb514;
    }

    bb429: {
        StorageDead(_972);
        _970 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _971) -> [return: bb430, unwind: bb516];
    }

    bb430: {
        StorageDead(_971);
        _973 = discriminant(_970);
        switchInt(move _973) -> [0: bb431, 1: bb432, otherwise: bb5];
    }

    bb431: {
        StorageLive(_977);
        _977 = ((_970 as Continue).0: (u8, &[u8]));
        _969 = _977;
        StorageDead(_977);
        StorageLive(_967);
        _967 = (_969.0: u8);
        StorageLive(_968);
        _968 = (_969.1: &[u8]);
        _1187 = discriminant(_970);
        StorageDead(_970);
        StorageDead(_969);
        StorageLive(_978);
        _978 = _956;
        StorageLive(_979);
        _979 = _967;
        _15 = LendingInstruction::FlashRepayReserveLiquidity { liquidity_amount: move _978, borrow_instruction_index: move _979 };
        StorageDead(_979);
        StorageDead(_978);
        StorageDead(_968);
        StorageDead(_967);
        StorageDead(_957);
        StorageDead(_956);
        goto -> bb460;
    }

    bb432: {
        StorageLive(_974);
        _974 = move ((_970 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_976);
        _976 = move _974;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _976) -> [return: bb433, unwind: bb523];
    }

    bb433: {
        StorageDead(_976);
        StorageDead(_974);
        _1201 = discriminant(_970);
        StorageDead(_970);
        StorageDead(_969);
        StorageDead(_957);
        StorageDead(_956);
        goto -> bb514;
    }

    bb434: {
        StorageLive(_982);
        StorageLive(_983);
        StorageLive(_984);
        StorageLive(_985);
        _985 = &(*_3);
        _984 = LendingInstruction::unpack_u64(move _985) -> [return: bb435, unwind continue];
    }

    bb435: {
        StorageDead(_985);
        _983 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _984) -> [return: bb436, unwind: bb516];
    }

    bb436: {
        StorageDead(_984);
        _986 = discriminant(_983);
        switchInt(move _986) -> [0: bb437, 1: bb438, otherwise: bb5];
    }

    bb437: {
        StorageLive(_990);
        _990 = ((_983 as Continue).0: (u64, &[u8]));
        _982 = _990;
        StorageDead(_990);
        StorageLive(_980);
        _980 = (_982.0: u64);
        StorageLive(_981);
        _981 = (_982.1: &[u8]);
        _1189 = discriminant(_983);
        StorageDead(_983);
        StorageDead(_982);
        StorageLive(_991);
        _991 = _980;
        _15 = LendingInstruction::ForgiveDebt { liquidity_amount: move _991 };
        StorageDead(_991);
        StorageDead(_981);
        StorageDead(_980);
        goto -> bb460;
    }

    bb438: {
        StorageLive(_987);
        _987 = move ((_983 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_989);
        _989 = move _987;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _989) -> [return: bb439, unwind: bb522];
    }

    bb439: {
        StorageDead(_989);
        StorageDead(_987);
        _1199 = discriminant(_983);
        StorageDead(_983);
        StorageDead(_982);
        goto -> bb514;
    }

    bb440: {
        _15 = LendingInstruction::UpdateMarketMetadata;
        goto -> bb460;
    }

    bb441: {
        StorageLive(_994);
        StorageLive(_995);
        StorageLive(_996);
        StorageLive(_997);
        StorageLive(_998);
        _998 = &(*_3);
        _997 = LendingInstruction::unpack_u8(move _998) -> [return: bb442, unwind continue];
    }

    bb442: {
        StorageDead(_998);
        _996 = <Result<(u8, &[u8]), ProgramError> as Try>::branch(move _997) -> [return: bb443, unwind: bb516];
    }

    bb443: {
        _1031 = const true;
        StorageDead(_997);
        _999 = discriminant(_996);
        switchInt(move _999) -> [0: bb444, 1: bb445, otherwise: bb5];
    }

    bb444: {
        StorageLive(_1003);
        _1003 = ((_996 as Continue).0: (u8, &[u8]));
        _995 = _1003;
        StorageDead(_1003);
        switchInt((_995.0: u8)) -> [0: bb448, 1: bb449, otherwise: bb447];
    }

    bb445: {
        StorageLive(_1000);
        _1000 = move ((_996 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_1002);
        _1002 = move _1000;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _1002) -> [return: bb446, unwind: bb521];
    }

    bb446: {
        StorageDead(_1002);
        StorageDead(_1000);
        goto -> bb461;
    }

    bb447: {
        StorageLive(_1009);
        StorageLive(_1010);
        _1010 = LendingError::InstructionUnpackError;
        _1009 = <LendingError as Into<ProgramError>>::into(move _1010) -> [return: bb450, unwind: bb521];
    }

    bb448: {
        StorageLive(_1004);
        _1004 = (_995.1: &[u8]);
        StorageLive(_1005);
        _1005 = _1004;
        _994 = (const false, move _1005);
        StorageDead(_1005);
        StorageDead(_1004);
        goto -> bb451;
    }

    bb449: {
        StorageLive(_1006);
        _1006 = (_995.1: &[u8]);
        StorageLive(_1007);
        _1007 = _1006;
        _994 = (const true, move _1007);
        StorageDead(_1007);
        StorageDead(_1006);
        goto -> bb451;
    }

    bb450: {
        StorageDead(_1010);
        _0 = Result::<LendingInstruction, ProgramError>::Err(move _1009);
        StorageDead(_1009);
        goto -> bb461;
    }

    bb451: {
        StorageLive(_992);
        _992 = (_994.0: bool);
        StorageLive(_993);
        _993 = (_994.1: &[u8]);
        _1191 = discriminant(_996);
        _1031 = const false;
        StorageDead(_996);
        StorageDead(_995);
        StorageDead(_994);
        StorageLive(_1011);
        _1011 = _992;
        _15 = LendingInstruction::SetObligationCloseabilityStatus { closeable: move _1011 };
        StorageDead(_1011);
        StorageDead(_993);
        StorageDead(_992);
        goto -> bb460;
    }

    bb452: {
        StorageLive(_1014);
        StorageLive(_1015);
        StorageLive(_1016);
        StorageLive(_1017);
        _1017 = &(*_3);
        _1016 = LendingInstruction::unpack_u64(move _1017) -> [return: bb453, unwind continue];
    }

    bb453: {
        StorageDead(_1017);
        _1015 = <Result<(u64, &[u8]), ProgramError> as Try>::branch(move _1016) -> [return: bb454, unwind: bb516];
    }

    bb454: {
        StorageDead(_1016);
        _1018 = discriminant(_1015);
        switchInt(move _1018) -> [0: bb455, 1: bb456, otherwise: bb5];
    }

    bb455: {
        StorageLive(_1022);
        _1022 = ((_1015 as Continue).0: (u64, &[u8]));
        _1014 = _1022;
        StorageDead(_1022);
        StorageLive(_1012);
        _1012 = (_1014.0: u64);
        StorageLive(_1013);
        _1013 = (_1014.1: &[u8]);
        _1193 = discriminant(_1015);
        StorageDead(_1015);
        StorageDead(_1014);
        StorageLive(_1023);
        _1023 = _1012;
        _15 = LendingInstruction::DonateToReserve { liquidity_amount: move _1023 };
        StorageDead(_1023);
        StorageDead(_1013);
        StorageDead(_1012);
        goto -> bb460;
    }

    bb456: {
        StorageLive(_1019);
        _1019 = move ((_1015 as Break).0: std::result::Result<std::convert::Infallible, solana_program::program_error::ProgramError>);
        StorageLive(_1021);
        _1021 = move _1019;
        _0 = <Result<LendingInstruction, ProgramError> as FromResidual<Result<Infallible, ProgramError>>>::from_residual(move _1021) -> [return: bb457, unwind: bb520];
    }

    bb457: {
        StorageDead(_1021);
        StorageDead(_1019);
        _1195 = discriminant(_1015);
        StorageDead(_1015);
        StorageDead(_1014);
        goto -> bb514;
    }

    bb458: {
        StorageDead(_1026);
        StorageDead(_1027);
        StorageDead(_1025);
        StorageLive(_1028);
        StorageLive(_1029);
        _1029 = LendingError::InstructionUnpackError;
        _1028 = <LendingError as Into<ProgramError>>::into(move _1029) -> [return: bb459, unwind continue];
    }

    bb459: {
        StorageDead(_1029);
        _0 = Result::<LendingInstruction, ProgramError>::Err(move _1028);
        StorageDead(_1028);
        goto -> bb514;
    }

    bb460: {
        _0 = Result::<LendingInstruction, ProgramError>::Ok(move _15);
        StorageDead(_15);
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb515;
    }

    bb461: {
        _1197 = discriminant(_996);
        _1031 = const false;
        StorageDead(_996);
        StorageDead(_995);
        StorageDead(_994);
        goto -> bb514;
    }

    bb462: {
        StorageDead(_868);
        StorageDead(_867);
        goto -> bb463;
    }

    bb463: {
        StorageDead(_857);
        StorageDead(_856);
        goto -> bb464;
    }

    bb464: {
        StorageDead(_824);
        StorageDead(_823);
        goto -> bb465;
    }

    bb465: {
        StorageDead(_813);
        StorageDead(_812);
        goto -> bb466;
    }

    bb466: {
        StorageDead(_802);
        StorageDead(_801);
        goto -> bb467;
    }

    bb467: {
        StorageDead(_791);
        StorageDead(_790);
        goto -> bb468;
    }

    bb468: {
        StorageDead(_780);
        StorageDead(_779);
        goto -> bb469;
    }

    bb469: {
        StorageDead(_769);
        StorageDead(_768);
        goto -> bb470;
    }

    bb470: {
        StorageDead(_758);
        StorageDead(_757);
        goto -> bb471;
    }

    bb471: {
        StorageDead(_747);
        StorageDead(_746);
        goto -> bb472;
    }

    bb472: {
        StorageDead(_736);
        StorageDead(_735);
        goto -> bb473;
    }

    bb473: {
        StorageDead(_725);
        StorageDead(_724);
        goto -> bb474;
    }

    bb474: {
        StorageDead(_714);
        StorageDead(_713);
        goto -> bb475;
    }

    bb475: {
        StorageDead(_703);
        StorageDead(_702);
        goto -> bb476;
    }

    bb476: {
        StorageDead(_692);
        StorageDead(_691);
        goto -> bb477;
    }

    bb477: {
        StorageDead(_681);
        StorageDead(_680);
        goto -> bb478;
    }

    bb478: {
        StorageDead(_670);
        StorageDead(_669);
        goto -> bb479;
    }

    bb479: {
        StorageDead(_659);
        StorageDead(_658);
        goto -> bb480;
    }

    bb480: {
        StorageDead(_648);
        StorageDead(_647);
        goto -> bb481;
    }

    bb481: {
        StorageDead(_637);
        StorageDead(_636);
        goto -> bb482;
    }

    bb482: {
        StorageDead(_626);
        StorageDead(_625);
        goto -> bb483;
    }

    bb483: {
        StorageDead(_615);
        StorageDead(_614);
        goto -> bb484;
    }

    bb484: {
        StorageDead(_604);
        StorageDead(_603);
        goto -> bb485;
    }

    bb485: {
        StorageDead(_593);
        StorageDead(_592);
        goto -> bb486;
    }

    bb486: {
        StorageDead(_582);
        StorageDead(_581);
        goto -> bb514;
    }

    bb487: {
        StorageDead(_377);
        StorageDead(_376);
        goto -> bb488;
    }

    bb488: {
        StorageDead(_366);
        StorageDead(_365);
        goto -> bb489;
    }

    bb489: {
        StorageDead(_355);
        StorageDead(_354);
        goto -> bb490;
    }

    bb490: {
        StorageDead(_344);
        StorageDead(_343);
        goto -> bb491;
    }

    bb491: {
        StorageDead(_333);
        StorageDead(_332);
        goto -> bb492;
    }

    bb492: {
        StorageDead(_322);
        StorageDead(_321);
        goto -> bb493;
    }

    bb493: {
        StorageDead(_311);
        StorageDead(_310);
        goto -> bb494;
    }

    bb494: {
        StorageDead(_300);
        StorageDead(_299);
        goto -> bb495;
    }

    bb495: {
        StorageDead(_289);
        StorageDead(_288);
        goto -> bb496;
    }

    bb496: {
        StorageDead(_278);
        StorageDead(_277);
        goto -> bb497;
    }

    bb497: {
        StorageDead(_267);
        StorageDead(_266);
        goto -> bb498;
    }

    bb498: {
        StorageDead(_256);
        StorageDead(_255);
        goto -> bb499;
    }

    bb499: {
        StorageDead(_245);
        StorageDead(_244);
        goto -> bb500;
    }

    bb500: {
        StorageDead(_234);
        StorageDead(_233);
        goto -> bb501;
    }

    bb501: {
        StorageDead(_223);
        StorageDead(_222);
        goto -> bb502;
    }

    bb502: {
        StorageDead(_212);
        StorageDead(_211);
        goto -> bb503;
    }

    bb503: {
        StorageDead(_201);
        StorageDead(_200);
        goto -> bb504;
    }

    bb504: {
        StorageDead(_190);
        StorageDead(_189);
        goto -> bb505;
    }

    bb505: {
        StorageDead(_179);
        StorageDead(_178);
        goto -> bb506;
    }

    bb506: {
        StorageDead(_168);
        StorageDead(_167);
        goto -> bb507;
    }

    bb507: {
        StorageDead(_157);
        StorageDead(_156);
        goto -> bb508;
    }

    bb508: {
        StorageDead(_146);
        StorageDead(_145);
        goto -> bb509;
    }

    bb509: {
        StorageDead(_135);
        StorageDead(_134);
        goto -> bb510;
    }

    bb510: {
        StorageDead(_124);
        StorageDead(_123);
        goto -> bb514;
    }

    bb511: {
        StorageDead(_63);
        StorageDead(_62);
        goto -> bb512;
    }

    bb512: {
        StorageDead(_52);
        StorageDead(_51);
        goto -> bb513;
    }

    bb513: {
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb514;
    }

    bb514: {
        StorageDead(_15);
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb515;
    }

    bb515: {
        return;
    }

    bb516 (cleanup): {
        resume;
    }

    bb517: {
        _1219 = discriminant(_827);
        _1032 = const false;
        StorageDead(_827);
        StorageDead(_826);
        StorageDead(_825);
        goto -> bb465;
    }

    bb518: {
        _1291 = discriminant(_380);
        _1033 = const false;
        StorageDead(_380);
        StorageDead(_379);
        StorageDead(_378);
        goto -> bb488;
    }

    bb519: {
        _1343 = discriminant(_77);
        _1034 = const false;
        StorageDead(_77);
        StorageDead(_76);
        StorageDead(_75);
        goto -> bb511;
    }

    bb520 (cleanup): {
        _1355 = discriminant(_1015);
        goto -> bb516;
    }

    bb521 (cleanup): {
        _1356 = discriminant(_996);
        goto -> bb516;
    }

    bb522 (cleanup): {
        _1357 = discriminant(_983);
        goto -> bb516;
    }

    bb523 (cleanup): {
        _1358 = discriminant(_970);
        goto -> bb516;
    }

    bb524 (cleanup): {
        _1359 = discriminant(_959);
        goto -> bb516;
    }

    bb525 (cleanup): {
        _1360 = discriminant(_947);
        goto -> bb516;
    }

    bb526 (cleanup): {
        _1361 = discriminant(_935);
        goto -> bb516;
    }

    bb527 (cleanup): {
        _1362 = discriminant(_892);
        goto -> bb516;
    }

    bb528 (cleanup): {
        _1363 = discriminant(_881);
        goto -> bb516;
    }

    bb529 (cleanup): {
        _1364 = discriminant(_870);
        goto -> bb516;
    }

    bb530 (cleanup): {
        _1365 = discriminant(_859);
        goto -> bb516;
    }

    bb531 (cleanup): {
        _1366 = discriminant(_842);
        goto -> bb532;
    }

    bb532 (cleanup): {
        _1367 = discriminant(_827);
        goto -> bb516;
    }

    bb533 (cleanup): {
        _1368 = discriminant(_815);
        goto -> bb516;
    }

    bb534 (cleanup): {
        _1369 = discriminant(_804);
        goto -> bb516;
    }

    bb535 (cleanup): {
        _1370 = discriminant(_793);
        goto -> bb516;
    }

    bb536 (cleanup): {
        _1371 = discriminant(_782);
        goto -> bb516;
    }

    bb537 (cleanup): {
        _1372 = discriminant(_771);
        goto -> bb516;
    }

    bb538 (cleanup): {
        _1373 = discriminant(_760);
        goto -> bb516;
    }

    bb539 (cleanup): {
        _1374 = discriminant(_749);
        goto -> bb516;
    }

    bb540 (cleanup): {
        _1375 = discriminant(_738);
        goto -> bb516;
    }

    bb541 (cleanup): {
        _1376 = discriminant(_727);
        goto -> bb516;
    }

    bb542 (cleanup): {
        _1377 = discriminant(_716);
        goto -> bb516;
    }

    bb543 (cleanup): {
        _1378 = discriminant(_705);
        goto -> bb516;
    }

    bb544 (cleanup): {
        _1379 = discriminant(_694);
        goto -> bb516;
    }

    bb545 (cleanup): {
        _1380 = discriminant(_683);
        goto -> bb516;
    }

    bb546 (cleanup): {
        _1381 = discriminant(_672);
        goto -> bb516;
    }

    bb547 (cleanup): {
        _1382 = discriminant(_661);
        goto -> bb516;
    }

    bb548 (cleanup): {
        _1383 = discriminant(_650);
        goto -> bb516;
    }

    bb549 (cleanup): {
        _1384 = discriminant(_639);
        goto -> bb516;
    }

    bb550 (cleanup): {
        _1385 = discriminant(_628);
        goto -> bb516;
    }

    bb551 (cleanup): {
        _1386 = discriminant(_617);
        goto -> bb516;
    }

    bb552 (cleanup): {
        _1387 = discriminant(_606);
        goto -> bb516;
    }

    bb553 (cleanup): {
        _1388 = discriminant(_595);
        goto -> bb516;
    }

    bb554 (cleanup): {
        _1389 = discriminant(_584);
        goto -> bb516;
    }

    bb555 (cleanup): {
        _1390 = discriminant(_572);
        goto -> bb516;
    }

    bb556 (cleanup): {
        _1391 = discriminant(_560);
        goto -> bb516;
    }

    bb557 (cleanup): {
        _1392 = discriminant(_548);
        goto -> bb516;
    }

    bb558 (cleanup): {
        _1393 = discriminant(_536);
        goto -> bb516;
    }

    bb559 (cleanup): {
        _1394 = discriminant(_524);
        goto -> bb516;
    }

    bb560 (cleanup): {
        _1395 = discriminant(_512);
        goto -> bb516;
    }

    bb561 (cleanup): {
        _1396 = discriminant(_500);
        goto -> bb516;
    }

    bb562 (cleanup): {
        _1397 = discriminant(_488);
        goto -> bb516;
    }

    bb563 (cleanup): {
        _1398 = discriminant(_476);
        goto -> bb516;
    }

    bb564 (cleanup): {
        _1399 = discriminant(_464);
        goto -> bb516;
    }

    bb565 (cleanup): {
        _1400 = discriminant(_423);
        goto -> bb516;
    }

    bb566 (cleanup): {
        _1401 = discriminant(_412);
        goto -> bb516;
    }

    bb567 (cleanup): {
        _1402 = discriminant(_395);
        goto -> bb568;
    }

    bb568 (cleanup): {
        _1403 = discriminant(_380);
        goto -> bb516;
    }

    bb569 (cleanup): {
        _1404 = discriminant(_368);
        goto -> bb516;
    }

    bb570 (cleanup): {
        _1405 = discriminant(_357);
        goto -> bb516;
    }

    bb571 (cleanup): {
        _1406 = discriminant(_346);
        goto -> bb516;
    }

    bb572 (cleanup): {
        _1407 = discriminant(_335);
        goto -> bb516;
    }

    bb573 (cleanup): {
        _1408 = discriminant(_324);
        goto -> bb516;
    }

    bb574 (cleanup): {
        _1409 = discriminant(_313);
        goto -> bb516;
    }

    bb575 (cleanup): {
        _1410 = discriminant(_302);
        goto -> bb516;
    }

    bb576 (cleanup): {
        _1411 = discriminant(_291);
        goto -> bb516;
    }

    bb577 (cleanup): {
        _1412 = discriminant(_280);
        goto -> bb516;
    }

    bb578 (cleanup): {
        _1413 = discriminant(_269);
        goto -> bb516;
    }

    bb579 (cleanup): {
        _1414 = discriminant(_258);
        goto -> bb516;
    }

    bb580 (cleanup): {
        _1415 = discriminant(_247);
        goto -> bb516;
    }

    bb581 (cleanup): {
        _1416 = discriminant(_236);
        goto -> bb516;
    }

    bb582 (cleanup): {
        _1417 = discriminant(_225);
        goto -> bb516;
    }

    bb583 (cleanup): {
        _1418 = discriminant(_214);
        goto -> bb516;
    }

    bb584 (cleanup): {
        _1419 = discriminant(_203);
        goto -> bb516;
    }

    bb585 (cleanup): {
        _1420 = discriminant(_192);
        goto -> bb516;
    }

    bb586 (cleanup): {
        _1421 = discriminant(_181);
        goto -> bb516;
    }

    bb587 (cleanup): {
        _1422 = discriminant(_170);
        goto -> bb516;
    }

    bb588 (cleanup): {
        _1423 = discriminant(_159);
        goto -> bb516;
    }

    bb589 (cleanup): {
        _1424 = discriminant(_148);
        goto -> bb516;
    }

    bb590 (cleanup): {
        _1425 = discriminant(_137);
        goto -> bb516;
    }

    bb591 (cleanup): {
        _1426 = discriminant(_126);
        goto -> bb516;
    }

    bb592 (cleanup): {
        _1427 = discriminant(_109);
        goto -> bb516;
    }

    bb593 (cleanup): {
        _1428 = discriminant(_92);
        goto -> bb594;
    }

    bb594 (cleanup): {
        _1429 = discriminant(_77);
        goto -> bb516;
    }

    bb595 (cleanup): {
        _1430 = discriminant(_65);
        goto -> bb516;
    }

    bb596 (cleanup): {
        _1431 = discriminant(_54);
        goto -> bb516;
    }

    bb597 (cleanup): {
        _1432 = discriminant(_43);
        goto -> bb516;
    }

    bb598 (cleanup): {
        _1433 = discriminant(_30);
        goto -> bb516;
    }

    bb599 (cleanup): {
        _1434 = discriminant(_19);
        goto -> bb516;
    }
}
