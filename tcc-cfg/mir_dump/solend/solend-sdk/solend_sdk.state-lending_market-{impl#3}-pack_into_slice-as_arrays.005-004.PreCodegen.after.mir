// MIR for `lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:84:1: 84:28>::pack_into_slice::as_arrays` after PreCodegen

fn lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:84:1: 84:28>::pack_into_slice::as_arrays(_1: &mut [T; 290]) -> (&mut [T; 1], &mut [T; 1], &mut [T; 32], &mut [T; 32], &mut [T; 32], &mut [T; 32], &mut [T; 32], &mut [T; 56], &mut [T; 32], &mut [T; 32], &mut [T; 8]) {
    debug a => _1;
    let mut _0: (&mut [T; 1], &mut [T; 1], &mut [T; 32], &mut [T; 32], &mut [T; 32], &mut [T; 32], &mut [T; 32], &mut [T; 56], &mut [T; 32], &mut [T; 32], &mut [T; 8]);
    let mut _2: *mut T;
    let mut _3: &mut [T];
    let mut _4: &mut [T; 290];
    let mut _5: &mut [T; 1];
    let mut _6: &mut [T; 1];
    let mut _8: *mut [T; 1];
    let mut _9: *mut T;
    let mut _10: *mut T;
    let mut _11: *mut T;
    let mut _12: &mut [T; 1];
    let mut _13: &mut [T; 1];
    let mut _15: *mut [T; 1];
    let mut _16: *mut T;
    let mut _17: *mut T;
    let mut _18: *mut T;
    let mut _19: &mut [T; 32];
    let mut _20: &mut [T; 32];
    let mut _22: *mut [T; 32];
    let mut _23: *mut T;
    let mut _24: *mut T;
    let mut _25: *mut T;
    let mut _26: &mut [T; 32];
    let mut _27: &mut [T; 32];
    let mut _29: *mut [T; 32];
    let mut _30: *mut T;
    let mut _31: *mut T;
    let mut _32: *mut T;
    let mut _33: &mut [T; 32];
    let mut _34: &mut [T; 32];
    let mut _36: *mut [T; 32];
    let mut _37: *mut T;
    let mut _38: *mut T;
    let mut _39: *mut T;
    let mut _40: &mut [T; 32];
    let mut _41: &mut [T; 32];
    let mut _43: *mut [T; 32];
    let mut _44: *mut T;
    let mut _45: *mut T;
    let mut _46: *mut T;
    let mut _47: &mut [T; 32];
    let mut _48: &mut [T; 32];
    let mut _50: *mut [T; 32];
    let mut _51: *mut T;
    let mut _52: *mut T;
    let mut _53: *mut T;
    let mut _54: &mut [T; 56];
    let mut _55: &mut [T; 56];
    let mut _57: *mut [T; 56];
    let mut _58: *mut T;
    let mut _59: *mut T;
    let mut _60: *mut T;
    let mut _61: &mut [T; 32];
    let mut _62: &mut [T; 32];
    let mut _64: *mut [T; 32];
    let mut _65: *mut T;
    let mut _66: *mut T;
    let mut _67: *mut T;
    let mut _68: &mut [T; 32];
    let mut _69: &mut [T; 32];
    let mut _71: *mut [T; 32];
    let mut _72: *mut T;
    let mut _73: *mut T;
    let mut _74: *mut T;
    let mut _75: &mut [T; 8];
    let mut _76: &mut [T; 8];
    let mut _78: *mut [T; 8];
    let mut _79: *mut T;
    let mut _80: *mut T;
    let mut _81: *mut T;
    scope 1 {
        debug p => _2;
        let _7: &mut [T; 1];
        let _14: &mut [T; 1];
        let _21: &mut [T; 32];
        let _28: &mut [T; 32];
        let _35: &mut [T; 32];
        let _42: &mut [T; 32];
        let _49: &mut [T; 32];
        let _56: &mut [T; 56];
        let _63: &mut [T; 32];
        let _70: &mut [T; 32];
        let _77: &mut [T; 8];
        scope 2 {
            debug aref => _7;
        }
        scope 3 {
            debug aref => _14;
        }
        scope 4 {
            debug aref => _21;
        }
        scope 5 {
            debug aref => _28;
        }
        scope 6 {
            debug aref => _35;
        }
        scope 7 {
            debug aref => _42;
        }
        scope 8 {
            debug aref => _49;
        }
        scope 9 {
            debug aref => _56;
        }
        scope 10 {
            debug aref => _63;
        }
        scope 11 {
            debug aref => _70;
        }
        scope 12 {
            debug aref => _77;
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &mut (*_1);
        _3 = move _4 as &mut [T] (PointerCoercion(Unsize));
        StorageDead(_4);
        _2 = core::slice::<impl [T]>::as_mut_ptr(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = _2;
        _8 = move _9 as *mut [T; 1] (PtrToPtr);
        StorageDead(_9);
        _7 = &mut (*_8);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _2;
        _10 = std::ptr::mut_ptr::<impl *mut T>::add(move _11, const 1_usize) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_11);
        _2 = move _10;
        StorageDead(_10);
        _6 = &mut (*_7);
        StorageDead(_8);
        StorageDead(_7);
        _5 = &mut (*_6);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = _2;
        _15 = move _16 as *mut [T; 1] (PtrToPtr);
        StorageDead(_16);
        _14 = &mut (*_15);
        StorageLive(_17);
        StorageLive(_18);
        _18 = _2;
        _17 = std::ptr::mut_ptr::<impl *mut T>::add(move _18, const 1_usize) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_18);
        _2 = move _17;
        StorageDead(_17);
        _13 = &mut (*_14);
        StorageDead(_15);
        StorageDead(_14);
        _12 = &mut (*_13);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        _23 = _2;
        _22 = move _23 as *mut [T; 32] (PtrToPtr);
        StorageDead(_23);
        _21 = &mut (*_22);
        StorageLive(_24);
        StorageLive(_25);
        _25 = _2;
        _24 = std::ptr::mut_ptr::<impl *mut T>::add(move _25, const _) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_25);
        _2 = move _24;
        StorageDead(_24);
        _20 = &mut (*_21);
        StorageDead(_22);
        StorageDead(_21);
        _19 = &mut (*_20);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = _2;
        _29 = move _30 as *mut [T; 32] (PtrToPtr);
        StorageDead(_30);
        _28 = &mut (*_29);
        StorageLive(_31);
        StorageLive(_32);
        _32 = _2;
        _31 = std::ptr::mut_ptr::<impl *mut T>::add(move _32, const 32_usize) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_32);
        _2 = move _31;
        StorageDead(_31);
        _27 = &mut (*_28);
        StorageDead(_29);
        StorageDead(_28);
        _26 = &mut (*_27);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = _2;
        _36 = move _37 as *mut [T; 32] (PtrToPtr);
        StorageDead(_37);
        _35 = &mut (*_36);
        StorageLive(_38);
        StorageLive(_39);
        _39 = _2;
        _38 = std::ptr::mut_ptr::<impl *mut T>::add(move _39, const _) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_39);
        _2 = move _38;
        StorageDead(_38);
        _34 = &mut (*_35);
        StorageDead(_36);
        StorageDead(_35);
        _33 = &mut (*_34);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = _2;
        _43 = move _44 as *mut [T; 32] (PtrToPtr);
        StorageDead(_44);
        _42 = &mut (*_43);
        StorageLive(_45);
        StorageLive(_46);
        _46 = _2;
        _45 = std::ptr::mut_ptr::<impl *mut T>::add(move _46, const _) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_46);
        _2 = move _45;
        StorageDead(_45);
        _41 = &mut (*_42);
        StorageDead(_43);
        StorageDead(_42);
        _40 = &mut (*_41);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        _51 = _2;
        _50 = move _51 as *mut [T; 32] (PtrToPtr);
        StorageDead(_51);
        _49 = &mut (*_50);
        StorageLive(_52);
        StorageLive(_53);
        _53 = _2;
        _52 = std::ptr::mut_ptr::<impl *mut T>::add(move _53, const _) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_53);
        _2 = move _52;
        StorageDead(_52);
        _48 = &mut (*_49);
        StorageDead(_50);
        StorageDead(_49);
        _47 = &mut (*_48);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = _2;
        _57 = move _58 as *mut [T; 56] (PtrToPtr);
        StorageDead(_58);
        _56 = &mut (*_57);
        StorageLive(_59);
        StorageLive(_60);
        _60 = _2;
        _59 = std::ptr::mut_ptr::<impl *mut T>::add(move _60, const _) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_60);
        _2 = move _59;
        StorageDead(_59);
        _55 = &mut (*_56);
        StorageDead(_57);
        StorageDead(_56);
        _54 = &mut (*_55);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        _65 = _2;
        _64 = move _65 as *mut [T; 32] (PtrToPtr);
        StorageDead(_65);
        _63 = &mut (*_64);
        StorageLive(_66);
        StorageLive(_67);
        _67 = _2;
        _66 = std::ptr::mut_ptr::<impl *mut T>::add(move _67, const _) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_67);
        _2 = move _66;
        StorageDead(_66);
        _62 = &mut (*_63);
        StorageDead(_64);
        StorageDead(_63);
        _61 = &mut (*_62);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        _72 = _2;
        _71 = move _72 as *mut [T; 32] (PtrToPtr);
        StorageDead(_72);
        _70 = &mut (*_71);
        StorageLive(_73);
        StorageLive(_74);
        _74 = _2;
        _73 = std::ptr::mut_ptr::<impl *mut T>::add(move _74, const _) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_74);
        _2 = move _73;
        StorageDead(_73);
        _69 = &mut (*_70);
        StorageDead(_71);
        StorageDead(_70);
        _68 = &mut (*_69);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        _79 = _2;
        _78 = move _79 as *mut [T; 8] (PtrToPtr);
        StorageDead(_79);
        _77 = &mut (*_78);
        StorageLive(_80);
        StorageLive(_81);
        _81 = _2;
        _80 = std::ptr::mut_ptr::<impl *mut T>::add(move _81, const 8_usize) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_81);
        _2 = move _80;
        StorageDead(_80);
        _76 = &mut (*_77);
        StorageDead(_78);
        StorageDead(_77);
        _75 = &mut (*_76);
        _0 = (move _5, move _12, move _19, move _26, move _33, move _40, move _47, move _54, move _61, move _68, move _75);
        StorageDead(_75);
        StorageDead(_68);
        StorageDead(_61);
        StorageDead(_54);
        StorageDead(_47);
        StorageDead(_40);
        StorageDead(_33);
        StorageDead(_26);
        StorageDead(_19);
        StorageDead(_12);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_76);
        StorageDead(_69);
        StorageDead(_62);
        StorageDead(_55);
        StorageDead(_48);
        StorageDead(_41);
        StorageDead(_34);
        StorageDead(_27);
        StorageDead(_20);
        StorageDead(_13);
        StorageDead(_6);
        return;
    }
}
