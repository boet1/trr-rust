digraph Mir_0_487 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveLiquidity::borrow(_1: &amp;ReErased mut state::reserve::ReserveLiquidity, _2: math::decimal::Decimal) -&gt; std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _6: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _11: u64;<br align="left"/>let _12: ();<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: !;<br align="left"/>let _17: ();<br align="left"/>let mut _18: &amp;ReErased str;<br align="left"/>let _19: &amp;ReErased str;<br align="left"/>let mut _20: solana_program::program_error::ProgramError;<br align="left"/>let mut _21: error::LendingError;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _24: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _25: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _26: u64;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: error::LendingError;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _33: u64;<br align="left"/>let mut _34: math::decimal::Decimal;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _36: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _37: math::decimal::Decimal;<br align="left"/>let mut _38: math::decimal::Decimal;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _43: math::decimal::Decimal;<br align="left"/>let mut _44: ();<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug borrow_decimal =&gt; _2;<br align="left"/>debug borrow_amount =&gt; _3;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>>;
    bb0__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;_2<br/></td></tr><tr><td align="left">_5 = decimal::Decimal::try_floor_u64(move _6)</td></tr></table>>];
    bb1__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Result&lt;u64, ProgramError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Continue).0: u64)<br/>_3 = _11<br/>StorageDead(_11)<br/>_45 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _3<br/>StorageLive(_15)<br/>_15 = ((*_1).5: u64)<br/>_13 = Gt(move _14, move _15)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb4__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_51 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = const &quot;Borrow amount cannot exceed available amount&quot;<br/>_18 = &amp;(*_19)<br/></td></tr><tr><td align="left">_17 = solana_program::log::sol_log(move _18)</td></tr></table>>];
    bb8__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = LendingError::InsufficientLiquidity<br/></td></tr><tr><td align="left">_20 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _21)</td></tr></table>>];
    bb9__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_0 = Result::&lt;(), ProgramError&gt;::Err(move _20)<br/>StorageDead(_20)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>_12 = const ()<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = ((*_1).5: u64)<br/>StorageLive(_27)<br/>_27 = _3<br/></td></tr><tr><td align="left">_25 = core::num::&lt;impl u64&gt;::checked_sub(move _26, move _27)</td></tr></table>>];
    bb11__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_28)<br/>_28 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_24 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _25, move _28)</td></tr></table>>];
    bb12__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb13__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_29 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb14__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_23 as Continue).0: u64)<br/>_22 = _33<br/>StorageDead(_33)<br/>((*_1).5: u64) = move _22<br/>StorageDead(_22)<br/>StorageDead(_23)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = ((*_1).6: math::decimal::Decimal)<br/>StorageLive(_38)<br/>_38 = _2<br/></td></tr><tr><td align="left">_36 = &lt;decimal::Decimal as common::TryAdd&gt;::try_add(move _37, move _38)</td></tr></table>>];
    bb15__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_32)<br/>_32 = move _30<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb16__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_22)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb18__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_39 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb19__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_35 as Continue).0: math::decimal::Decimal)<br/>_34 = _43<br/>StorageDead(_43)<br/>((*_1).6: math::decimal::Decimal) = move _34<br/>StorageDead(_34)<br/>_47 = discriminant(_35)<br/>StorageDead(_35)<br/>StorageLive(_44)<br/>_44 = ()<br/>_0 = Result::&lt;(), ProgramError&gt;::Ok(move _44)<br/>StorageDead(_44)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_42)<br/>_42 = move _40<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb21__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_34)<br/>_49 = discriminant(_35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb24__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb25__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left" balign="left">_53 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_487 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_54 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_487 -> bb1__0_487 [label="return"];
    bb1__0_487 -> bb2__0_487 [label="return"];
    bb1__0_487 -> bb24__0_487 [label="unwind"];
    bb2__0_487 -> bb3__0_487 [label="0"];
    bb2__0_487 -> bb5__0_487 [label="1"];
    bb2__0_487 -> bb4__0_487 [label="otherwise"];
    bb3__0_487 -> bb10__0_487 [label="0"];
    bb3__0_487 -> bb7__0_487 [label="otherwise"];
    bb5__0_487 -> bb6__0_487 [label="return"];
    bb5__0_487 -> bb26__0_487 [label="unwind"];
    bb6__0_487 -> bb22__0_487 [label=""];
    bb7__0_487 -> bb8__0_487 [label="return"];
    bb8__0_487 -> bb9__0_487 [label="return"];
    bb9__0_487 -> bb22__0_487 [label=""];
    bb10__0_487 -> bb11__0_487 [label="return"];
    bb11__0_487 -> bb12__0_487 [label="return"];
    bb12__0_487 -> bb13__0_487 [label="return"];
    bb13__0_487 -> bb14__0_487 [label="0"];
    bb13__0_487 -> bb15__0_487 [label="1"];
    bb13__0_487 -> bb4__0_487 [label="otherwise"];
    bb14__0_487 -> bb17__0_487 [label="return"];
    bb15__0_487 -> bb16__0_487 [label="return"];
    bb16__0_487 -> bb22__0_487 [label=""];
    bb17__0_487 -> bb18__0_487 [label="return"];
    bb17__0_487 -> bb24__0_487 [label="unwind"];
    bb18__0_487 -> bb19__0_487 [label="0"];
    bb18__0_487 -> bb20__0_487 [label="1"];
    bb18__0_487 -> bb4__0_487 [label="otherwise"];
    bb19__0_487 -> bb23__0_487 [label=""];
    bb20__0_487 -> bb21__0_487 [label="return"];
    bb20__0_487 -> bb25__0_487 [label="unwind"];
    bb21__0_487 -> bb22__0_487 [label=""];
    bb22__0_487 -> bb23__0_487 [label=""];
    bb25__0_487 -> bb24__0_487 [label=""];
    bb26__0_487 -> bb24__0_487 [label=""];
}
