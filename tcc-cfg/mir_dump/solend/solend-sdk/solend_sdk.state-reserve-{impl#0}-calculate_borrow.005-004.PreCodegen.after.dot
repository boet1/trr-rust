digraph Mir_0_468 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::calculate_borrow(_1: &amp;ReErased state::reserve::Reserve, _2: u64, _3: math::decimal::Decimal, _4: math::decimal::Decimal) -&gt; std::result::Result&lt;state::reserve::CalculateBorrowResult, solana_program::program_error::ProgramError&gt;<br align="left"/>let _5: u64;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _8: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _9: u32;<br align="left"/>let mut _10: u8;<br align="left"/>let mut _11: error::LendingError;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _16: u64;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: u64;<br align="left"/>let _19: math::decimal::Decimal;<br align="left"/>let mut _20: math::decimal::Decimal;<br align="left"/>let mut _21: math::decimal::Decimal;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _23: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _24: math::decimal::Decimal;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _26: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _27: math::decimal::Decimal;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _29: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _30: math::decimal::Decimal;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _36: math::decimal::Decimal;<br align="left"/>let mut _37: math::decimal::Decimal;<br align="left"/>let mut _38: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _43: math::decimal::Decimal;<br align="left"/>let mut _44: math::decimal::Decimal;<br align="left"/>let mut _45: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _50: math::decimal::Decimal;<br align="left"/>let mut _51: math::decimal::Decimal;<br align="left"/>let mut _52: math::decimal::Decimal;<br align="left"/>let mut _53: u64;<br align="left"/>let _54: u64;<br align="left"/>let _55: u64;<br align="left"/>let mut _56: (u64, u64);<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, (u64, u64)&gt;;<br align="left"/>let mut _58: std::result::Result&lt;(u64, u64), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _59: &amp;ReErased state::reserve::ReserveFees;<br align="left"/>let mut _60: math::decimal::Decimal;<br align="left"/>let mut _61: state::reserve::FeeCalculation;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _66: (u64, u64);<br align="left"/>let _67: u64;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _69: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _70: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _73: std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _74: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _79: u64;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: error::LendingError;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _86: u64;<br align="left"/>let mut _87: state::reserve::CalculateBorrowResult;<br align="left"/>let mut _88: math::decimal::Decimal;<br align="left"/>let mut _89: u64;<br align="left"/>let mut _90: u64;<br align="left"/>let mut _91: u64;<br align="left"/>let _92: u64;<br align="left"/>let _93: math::decimal::Decimal;<br align="left"/>let mut _94: u64;<br align="left"/>let _95: u64;<br align="left"/>let _96: u64;<br align="left"/>let mut _97: (u64, u64);<br align="left"/>let mut _98: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, (u64, u64)&gt;;<br align="left"/>let mut _99: std::result::Result&lt;(u64, u64), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _100: &amp;ReErased state::reserve::ReserveFees;<br align="left"/>let mut _101: math::decimal::Decimal;<br align="left"/>let mut _102: state::reserve::FeeCalculation;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _107: (u64, u64);<br align="left"/>let _108: math::decimal::Decimal;<br align="left"/>let mut _109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _110: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _111: math::decimal::Decimal;<br align="left"/>let mut _112: math::decimal::Decimal;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _118: math::decimal::Decimal;<br align="left"/>let _119: math::decimal::Decimal;<br align="left"/>let mut _120: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _121: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _122: math::decimal::Decimal;<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _124: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _125: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _126: math::decimal::Decimal;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _131: math::decimal::Decimal;<br align="left"/>let mut _132: math::decimal::Decimal;<br align="left"/>let mut _133: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _134: isize;<br align="left"/>let _135: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _136: !;<br align="left"/>let mut _137: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _138: math::decimal::Decimal;<br align="left"/>let _139: ();<br align="left"/>let mut _140: bool;<br align="left"/>let mut _141: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _142: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _143: !;<br align="left"/>let _144: ();<br align="left"/>let mut _145: &amp;ReErased str;<br align="left"/>let _146: &amp;ReErased str;<br align="left"/>let mut _147: solana_program::program_error::ProgramError;<br align="left"/>let mut _148: error::LendingError;<br align="left"/>let mut _149: state::reserve::CalculateBorrowResult;<br align="left"/>let mut _150: math::decimal::Decimal;<br align="left"/>let mut _151: u64;<br align="left"/>let mut _152: u64;<br align="left"/>let mut _153: u64;<br align="left"/>let mut _154: bool;<br align="left"/>let mut _155: bool;<br align="left"/>let mut _156: bool;<br align="left"/>let mut _157: bool;<br align="left"/>let mut _158: bool;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: isize;<br align="left"/>let mut _197: isize;<br align="left"/>let mut _198: isize;<br align="left"/>let mut _199: isize;<br align="left"/>let mut _200: isize;<br align="left"/>let mut _201: isize;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug amount_to_borrow =&gt; _2;<br align="left"/>debug max_borrow_value =&gt; _3;<br align="left"/>debug remaining_reserve_borrow =&gt; _4;<br align="left"/>debug decimals =&gt; _5;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug borrow_amount =&gt; _19;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug borrow_fee =&gt; _54;<br align="left"/>debug host_fee =&gt; _55;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug receive_amount =&gt; _67;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug receive_amount =&gt; _92;<br align="left"/>debug borrow_amount =&gt; _93;<br align="left"/>debug borrow_fee =&gt; _95;<br align="left"/>debug host_fee =&gt; _96;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>debug borrow_amount =&gt; _108;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>debug borrow_value =&gt; _119;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>debug residual =&gt; _135;<br align="left"/>debug val =&gt; _138;<br align="left"/>>;
    bb0__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_157 = const false<br/>_156 = const false<br/>_158 = const false<br/>_155 = const false<br/>_154 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = (((*_1).3: state::reserve::ReserveLiquidity).1: u8)<br/>_9 = move _10 as u32 (IntToInt)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = core::num::&lt;impl u64&gt;::checked_pow(const 10_u64, move _9)</td></tr></table>>];
    bb1__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_11)<br/>_11 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_7 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _8, move _11)</td></tr></table>>];
    bb2__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb3__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_12 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_6 as Continue).0: u64)<br/>_5 = _16<br/>StorageDead(_16)<br/>StorageDead(_6)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/>_17 = Eq(move _18, const _)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb5__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_15)<br/>_15 = move _13<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb7__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _3<br/>StorageLive(_31)<br/>_31 = _5<br/></td></tr><tr><td align="left">_29 = &lt;decimal::Decimal as common::TryMul&lt;u64&gt;&gt;::try_mul(move _30, move _31)</td></tr></table>>];
    bb9__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_92)<br/>_92 = _2<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = _92<br/></td></tr><tr><td align="left">_93 = &lt;decimal::Decimal as From&lt;u64&gt;&gt;::from(move _94)</td></tr></table>>];
    bb10__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb11__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_157 = const true<br/>StorageDead(_29)<br/>_32 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb12__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_28 as Continue).0: math::decimal::Decimal)<br/>_27 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_1)<br/></td></tr><tr><td align="left">_37 = reserve::Reserve::price_upper_bound(move _38)</td></tr></table>>];
    bb13__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_35)<br/>_35 = move _33<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb14__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_26 = &lt;decimal::Decimal as common::TryDiv&lt;decimal::Decimal&gt;&gt;::try_div(move _27, move _37)</td></tr></table>>];
    bb16__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb17__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_156 = const true<br/>StorageDead(_26)<br/>_39 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb18__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_25 as Continue).0: math::decimal::Decimal)<br/>_24 = _43<br/>StorageDead(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;(*_1)<br/></td></tr><tr><td align="left">_44 = reserve::Reserve::borrow_weight(move _45)</td></tr></table>>];
    bb19__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = move ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_42)<br/>_42 = move _40<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb20__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">_23 = &lt;decimal::Decimal as common::TryDiv&lt;decimal::Decimal&gt;&gt;::try_div(move _24, move _44)</td></tr></table>>];
    bb22__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb23__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_158 = const true<br/>StorageDead(_23)<br/>_46 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb24__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_22 as Continue).0: math::decimal::Decimal)<br/>_21 = _50<br/>StorageDead(_50)<br/>StorageLive(_51)<br/>_51 = _4<br/></td></tr><tr><td align="left">_20 = &lt;decimal::Decimal as Ord&gt;::min(move _21, move _51)</td></tr></table>>];
    bb25__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb26__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>_189 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_21)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = (((*_1).3: state::reserve::ReserveLiquidity).5: u64)<br/></td></tr><tr><td align="left">_52 = &lt;u64 as Into&lt;decimal::Decimal&gt;&gt;::into(move _53)</td></tr></table>>];
    bb28__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_19 = &lt;decimal::Decimal as Ord&gt;::min(move _20, move _52)</td></tr></table>>];
    bb29__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_20)<br/>_159 = discriminant(_22)<br/>_161 = discriminant(_25)<br/>_163 = discriminant(_28)<br/>_157 = const false<br/>StorageDead(_28)<br/>_156 = const false<br/>StorageDead(_25)<br/>_158 = const false<br/>StorageDead(_22)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;(((*_1).5: state::reserve::ReserveConfig).11: state::reserve::ReserveFees)<br/>StorageLive(_60)<br/>_60 = _19<br/>StorageLive(_61)<br/>_61 = FeeCalculation::Inclusive<br/></td></tr><tr><td align="left">_58 = reserve::ReserveFees::calculate_borrow_fees(move _59, move _60, move _61)</td></tr></table>>];
    bb30__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;Result&lt;(u64, u64), ProgramError&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb31__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_62 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb32__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_57 as Continue).0: (u64, u64))<br/>_56 = _66<br/>StorageDead(_66)<br/>StorageLive(_54)<br/>_54 = (_56.0: u64)<br/>StorageLive(_55)<br/>_55 = (_56.1: u64)<br/>_165 = discriminant(_57)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_19<br/></td></tr><tr><td align="left">_73 = decimal::Decimal::try_floor_u64(move _74)</td></tr></table>>];
    bb33__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = move ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_65)<br/>_65 = move _63<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb34__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>_187 = discriminant(_57)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;Result&lt;u64, ProgramError&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb36__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_155 = const true<br/>StorageDead(_73)<br/>_75 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb37__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_72 as Continue).0: u64)<br/>_71 = _79<br/>StorageDead(_79)<br/>StorageLive(_80)<br/>_80 = _54<br/></td></tr><tr><td align="left">_70 = core::num::&lt;impl u64&gt;::checked_sub(move _71, move _80)</td></tr></table>>];
    bb38__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb39__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_71)<br/>StorageLive(_81)<br/>_81 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_69 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _70, move _81)</td></tr></table>>];
    bb41__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb42__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_82 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb43__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_68 as Continue).0: u64)<br/>_67 = _86<br/>StorageDead(_86)<br/>_167 = discriminant(_72)<br/>_155 = const false<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = _19<br/>StorageLive(_89)<br/>_89 = _67<br/>StorageLive(_90)<br/>_90 = _54<br/>StorageLive(_91)<br/>_91 = _55<br/>_87 = CalculateBorrowResult { borrow_amount: move _88, receive_amount: move _89, borrow_fee: move _90, host_fee: move _91 }<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>_0 = Result::&lt;CalculateBorrowResult, ProgramError&gt;::Ok(move _87)<br/>StorageDead(_87)<br/>StorageDead(_67)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = move ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_85)<br/>_85 = move _83<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb45__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;(((*_1).5: state::reserve::ReserveConfig).11: state::reserve::ReserveFees)<br/>StorageLive(_101)<br/>_101 = _93<br/>StorageLive(_102)<br/>_102 = FeeCalculation::Exclusive<br/></td></tr><tr><td align="left">_99 = reserve::ReserveFees::calculate_borrow_fees(move _100, move _101, move _102)</td></tr></table>>];
    bb47__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;Result&lt;(u64, u64), ProgramError&gt; as Try&gt;::branch(move _99)</td></tr></table>>];
    bb48__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_103 = discriminant(_98)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb49__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_98 as Continue).0: (u64, u64))<br/>_97 = _107<br/>StorageDead(_107)<br/>StorageLive(_95)<br/>_95 = (_97.0: u64)<br/>StorageLive(_96)<br/>_96 = (_97.1: u64)<br/>_169 = discriminant(_98)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = _93<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = _95<br/></td></tr><tr><td align="left">_112 = &lt;u64 as Into&lt;decimal::Decimal&gt;&gt;::into(move _113)</td></tr></table>>];
    bb50__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = move ((_98 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_106)<br/>_106 = move _104<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb51__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>_183 = discriminant(_98)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">_110 = &lt;decimal::Decimal as common::TryAdd&gt;::try_add(move _111, move _112)</td></tr></table>>];
    bb53__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _110)</td></tr></table>>];
    bb54__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_114 = discriminant(_109)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb55__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_109 as Continue).0: math::decimal::Decimal)<br/>_108 = _118<br/>StorageDead(_118)<br/>_171 = discriminant(_109)<br/>StorageDead(_109)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;(*_1)<br/>StorageLive(_126)<br/>_126 = _108<br/></td></tr><tr><td align="left">_124 = reserve::Reserve::market_value_upper_bound(move _125, move _126)</td></tr></table>>];
    bb56__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = move ((_109 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_117)<br/>_117 = move _115<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb57__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>_181 = discriminant(_109)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb59__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_154 = const true<br/>StorageDead(_124)<br/>_127 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb60__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_123 as Continue).0: math::decimal::Decimal)<br/>_122 = _131<br/>StorageDead(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;(*_1)<br/></td></tr><tr><td align="left">_132 = reserve::Reserve::borrow_weight(move _133)</td></tr></table>>];
    bb61__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = move ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_130)<br/>_130 = move _128<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb62__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">_121 = &lt;decimal::Decimal as common::TryMul&lt;decimal::Decimal&gt;&gt;::try_mul(move _122, move _132)</td></tr></table>>];
    bb64__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">_120 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _121)</td></tr></table>>];
    bb65__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_134 = discriminant(_120)<br/></td></tr><tr><td align="left">switchInt(move _134)</td></tr></table>>];
    bb66__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_120 as Continue).0: math::decimal::Decimal)<br/>_119 = _138<br/>StorageDead(_138)<br/>_173 = discriminant(_120)<br/>_175 = discriminant(_123)<br/>_154 = const false<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;_119<br/>StorageLive(_142)<br/>_142 = &amp;_3<br/></td></tr><tr><td align="left">_140 = &lt;decimal::Decimal as PartialOrd&gt;::gt(move _141, move _142)</td></tr></table>>];
    bb67__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = move ((_120 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_137)<br/>_137 = move _135<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;CalculateBorrowResult, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _137)</td></tr></table>>];
    bb68__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_135)<br/>_177 = discriminant(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb70__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = const &quot;Borrow value cannot exceed maximum borrow value&quot;<br/>_145 = &amp;(*_146)<br/></td></tr><tr><td align="left">_144 = solana_program::log::sol_log(move _145)</td></tr></table>>];
    bb71__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = LendingError::BorrowTooLarge<br/></td></tr><tr><td align="left">_147 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _148)</td></tr></table>>];
    bb72__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_0 = Result::&lt;CalculateBorrowResult, ProgramError&gt;::Err(move _147)<br/>StorageDead(_147)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>_139 = const ()<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = _108<br/>StorageLive(_151)<br/>_151 = _92<br/>StorageLive(_152)<br/>_152 = _95<br/>StorageLive(_153)<br/>_153 = _96<br/>_149 = CalculateBorrowResult { borrow_amount: move _150, receive_amount: move _151, borrow_fee: move _152, host_fee: move _153 }<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>_0 = Result::&lt;CalculateBorrowResult, ProgramError&gt;::Ok(move _149)<br/>StorageDead(_149)<br/>StorageDead(_119)<br/>StorageDead(_108)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_179 = discriminant(_123)<br/>_154 = const false<br/>StorageDead(_123)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_191 = discriminant(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_193 = discriminant(_28)<br/>_157 = const false<br/>StorageDead(_28)<br/>_156 = const false<br/>StorageDead(_25)<br/>_158 = const false<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left">return</td></tr></table>>];
    bb85__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb86__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_185 = discriminant(_72)<br/>_155 = const false<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left" balign="left">_195 = discriminant(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left" balign="left">_196 = discriminant(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left" balign="left">_197 = discriminant(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left" balign="left">_198 = discriminant(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left" balign="left">_199 = discriminant(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left" balign="left">_200 = discriminant(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left" balign="left">_201 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left" balign="left">_202 = discriminant(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_468 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left" balign="left">_203 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_468 -> bb1__0_468 [label="return"];
    bb1__0_468 -> bb2__0_468 [label="return"];
    bb2__0_468 -> bb3__0_468 [label="return"];
    bb3__0_468 -> bb4__0_468 [label="0"];
    bb3__0_468 -> bb6__0_468 [label="1"];
    bb3__0_468 -> bb5__0_468 [label="otherwise"];
    bb4__0_468 -> bb9__0_468 [label="0"];
    bb4__0_468 -> bb8__0_468 [label="otherwise"];
    bb6__0_468 -> bb7__0_468 [label="return"];
    bb7__0_468 -> bb83__0_468 [label=""];
    bb8__0_468 -> bb10__0_468 [label="return"];
    bb9__0_468 -> bb46__0_468 [label="return"];
    bb10__0_468 -> bb11__0_468 [label="return"];
    bb10__0_468 -> bb85__0_468 [label="unwind"];
    bb11__0_468 -> bb12__0_468 [label="0"];
    bb11__0_468 -> bb13__0_468 [label="1"];
    bb11__0_468 -> bb5__0_468 [label="otherwise"];
    bb12__0_468 -> bb15__0_468 [label="return"];
    bb12__0_468 -> bb95__0_468 [label="unwind"];
    bb13__0_468 -> bb14__0_468 [label="return"];
    bb13__0_468 -> bb95__0_468 [label="unwind"];
    bb14__0_468 -> bb80__0_468 [label=""];
    bb15__0_468 -> bb16__0_468 [label="return"];
    bb15__0_468 -> bb95__0_468 [label="unwind"];
    bb16__0_468 -> bb17__0_468 [label="return"];
    bb16__0_468 -> bb95__0_468 [label="unwind"];
    bb17__0_468 -> bb18__0_468 [label="0"];
    bb17__0_468 -> bb19__0_468 [label="1"];
    bb17__0_468 -> bb5__0_468 [label="otherwise"];
    bb18__0_468 -> bb21__0_468 [label="return"];
    bb18__0_468 -> bb94__0_468 [label="unwind"];
    bb19__0_468 -> bb20__0_468 [label="return"];
    bb19__0_468 -> bb94__0_468 [label="unwind"];
    bb20__0_468 -> bb79__0_468 [label=""];
    bb21__0_468 -> bb22__0_468 [label="return"];
    bb21__0_468 -> bb94__0_468 [label="unwind"];
    bb22__0_468 -> bb23__0_468 [label="return"];
    bb22__0_468 -> bb94__0_468 [label="unwind"];
    bb23__0_468 -> bb24__0_468 [label="0"];
    bb23__0_468 -> bb25__0_468 [label="1"];
    bb23__0_468 -> bb5__0_468 [label="otherwise"];
    bb24__0_468 -> bb27__0_468 [label="return"];
    bb24__0_468 -> bb93__0_468 [label="unwind"];
    bb25__0_468 -> bb26__0_468 [label="return"];
    bb25__0_468 -> bb93__0_468 [label="unwind"];
    bb26__0_468 -> bb79__0_468 [label=""];
    bb27__0_468 -> bb28__0_468 [label="return"];
    bb27__0_468 -> bb93__0_468 [label="unwind"];
    bb28__0_468 -> bb29__0_468 [label="return"];
    bb28__0_468 -> bb93__0_468 [label="unwind"];
    bb29__0_468 -> bb30__0_468 [label="return"];
    bb30__0_468 -> bb31__0_468 [label="return"];
    bb30__0_468 -> bb85__0_468 [label="unwind"];
    bb31__0_468 -> bb32__0_468 [label="0"];
    bb31__0_468 -> bb33__0_468 [label="1"];
    bb31__0_468 -> bb5__0_468 [label="otherwise"];
    bb32__0_468 -> bb35__0_468 [label="return"];
    bb33__0_468 -> bb34__0_468 [label="return"];
    bb33__0_468 -> bb92__0_468 [label="unwind"];
    bb34__0_468 -> bb81__0_468 [label=""];
    bb35__0_468 -> bb36__0_468 [label="return"];
    bb35__0_468 -> bb85__0_468 [label="unwind"];
    bb36__0_468 -> bb37__0_468 [label="0"];
    bb36__0_468 -> bb38__0_468 [label="1"];
    bb36__0_468 -> bb5__0_468 [label="otherwise"];
    bb37__0_468 -> bb40__0_468 [label="return"];
    bb37__0_468 -> bb91__0_468 [label="unwind"];
    bb38__0_468 -> bb39__0_468 [label="return"];
    bb38__0_468 -> bb91__0_468 [label="unwind"];
    bb39__0_468 -> bb86__0_468 [label=""];
    bb40__0_468 -> bb41__0_468 [label="return"];
    bb40__0_468 -> bb91__0_468 [label="unwind"];
    bb41__0_468 -> bb42__0_468 [label="return"];
    bb41__0_468 -> bb91__0_468 [label="unwind"];
    bb42__0_468 -> bb43__0_468 [label="0"];
    bb42__0_468 -> bb44__0_468 [label="1"];
    bb42__0_468 -> bb5__0_468 [label="otherwise"];
    bb43__0_468 -> bb74__0_468 [label=""];
    bb44__0_468 -> bb45__0_468 [label="return"];
    bb44__0_468 -> bb91__0_468 [label="unwind"];
    bb45__0_468 -> bb86__0_468 [label=""];
    bb46__0_468 -> bb47__0_468 [label="return"];
    bb47__0_468 -> bb48__0_468 [label="return"];
    bb47__0_468 -> bb85__0_468 [label="unwind"];
    bb48__0_468 -> bb49__0_468 [label="0"];
    bb48__0_468 -> bb50__0_468 [label="1"];
    bb48__0_468 -> bb5__0_468 [label="otherwise"];
    bb49__0_468 -> bb52__0_468 [label="return"];
    bb50__0_468 -> bb51__0_468 [label="return"];
    bb50__0_468 -> bb90__0_468 [label="unwind"];
    bb51__0_468 -> bb78__0_468 [label=""];
    bb52__0_468 -> bb53__0_468 [label="return"];
    bb53__0_468 -> bb54__0_468 [label="return"];
    bb53__0_468 -> bb85__0_468 [label="unwind"];
    bb54__0_468 -> bb55__0_468 [label="0"];
    bb54__0_468 -> bb56__0_468 [label="1"];
    bb54__0_468 -> bb5__0_468 [label="otherwise"];
    bb55__0_468 -> bb58__0_468 [label="return"];
    bb56__0_468 -> bb57__0_468 [label="return"];
    bb56__0_468 -> bb89__0_468 [label="unwind"];
    bb57__0_468 -> bb77__0_468 [label=""];
    bb58__0_468 -> bb59__0_468 [label="return"];
    bb58__0_468 -> bb85__0_468 [label="unwind"];
    bb59__0_468 -> bb60__0_468 [label="0"];
    bb59__0_468 -> bb61__0_468 [label="1"];
    bb59__0_468 -> bb5__0_468 [label="otherwise"];
    bb60__0_468 -> bb63__0_468 [label="return"];
    bb60__0_468 -> bb88__0_468 [label="unwind"];
    bb61__0_468 -> bb62__0_468 [label="return"];
    bb61__0_468 -> bb88__0_468 [label="unwind"];
    bb62__0_468 -> bb75__0_468 [label=""];
    bb63__0_468 -> bb64__0_468 [label="return"];
    bb63__0_468 -> bb88__0_468 [label="unwind"];
    bb64__0_468 -> bb65__0_468 [label="return"];
    bb64__0_468 -> bb88__0_468 [label="unwind"];
    bb65__0_468 -> bb66__0_468 [label="0"];
    bb65__0_468 -> bb67__0_468 [label="1"];
    bb65__0_468 -> bb5__0_468 [label="otherwise"];
    bb66__0_468 -> bb69__0_468 [label="return"];
    bb67__0_468 -> bb68__0_468 [label="return"];
    bb67__0_468 -> bb87__0_468 [label="unwind"];
    bb68__0_468 -> bb75__0_468 [label=""];
    bb69__0_468 -> bb73__0_468 [label="0"];
    bb69__0_468 -> bb70__0_468 [label="otherwise"];
    bb70__0_468 -> bb71__0_468 [label="return"];
    bb71__0_468 -> bb72__0_468 [label="return"];
    bb72__0_468 -> bb76__0_468 [label=""];
    bb73__0_468 -> bb74__0_468 [label=""];
    bb74__0_468 -> bb84__0_468 [label=""];
    bb75__0_468 -> bb76__0_468 [label=""];
    bb76__0_468 -> bb77__0_468 [label=""];
    bb77__0_468 -> bb78__0_468 [label=""];
    bb78__0_468 -> bb82__0_468 [label=""];
    bb79__0_468 -> bb80__0_468 [label=""];
    bb80__0_468 -> bb81__0_468 [label=""];
    bb81__0_468 -> bb82__0_468 [label=""];
    bb82__0_468 -> bb83__0_468 [label=""];
    bb83__0_468 -> bb84__0_468 [label=""];
    bb86__0_468 -> bb81__0_468 [label=""];
    bb87__0_468 -> bb88__0_468 [label=""];
    bb88__0_468 -> bb85__0_468 [label=""];
    bb89__0_468 -> bb85__0_468 [label=""];
    bb90__0_468 -> bb85__0_468 [label=""];
    bb91__0_468 -> bb85__0_468 [label=""];
    bb92__0_468 -> bb85__0_468 [label=""];
    bb93__0_468 -> bb94__0_468 [label=""];
    bb94__0_468 -> bb95__0_468 [label=""];
    bb95__0_468 -> bb85__0_468 [label=""];
}
