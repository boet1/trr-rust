digraph Mir_0_484 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn ReserveLiquidity::total_supply(_1: &amp;ReErased state::reserve::ReserveLiquidity) -&gt; std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;<br align="left"/>let mut _2: math::decimal::Decimal;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _4: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _5: math::decimal::Decimal;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: math::decimal::Decimal;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _12: math::decimal::Decimal;<br align="left"/>let mut _13: math::decimal::Decimal;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: isize;<br align="left"/>let mut _16: isize;<br align="left"/>let mut _17: isize;<br align="left"/>let mut _18: isize;<br align="left"/>let mut _19: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>>;
    bb0__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_14 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).5: u64)<br/></td></tr><tr><td align="left">_5 = &lt;decimal::Decimal as From&lt;u64&gt;&gt;::from(move _6)</td></tr></table>>];
    bb1__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = ((*_1).6: math::decimal::Decimal)<br/></td></tr><tr><td align="left">_4 = &lt;decimal::Decimal as common::TryAdd&gt;::try_add(move _5, move _7)</td></tr></table>>];
    bb2__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb3__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_14 = const true<br/>StorageDead(_4)<br/>_8 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb4__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_3 as Continue).0: math::decimal::Decimal)<br/>_2 = _12<br/>StorageDead(_12)<br/>StorageLive(_13)<br/>_13 = ((*_1).8: math::decimal::Decimal)<br/></td></tr><tr><td align="left">_0 = &lt;decimal::Decimal as common::TrySub&gt;::try_sub(move _2, move _13)</td></tr></table>>];
    bb5__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb7__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_2)<br/>_17 = discriminant(_3)<br/>_14 = const false<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_2)<br/>_15 = discriminant(_3)<br/>_14 = const false<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">return</td></tr></table>>];
    bb10__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb11__0_484 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left" balign="left">_19 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_484 -> bb1__0_484 [label="return"];
    bb1__0_484 -> bb2__0_484 [label="return"];
    bb2__0_484 -> bb3__0_484 [label="return"];
    bb2__0_484 -> bb10__0_484 [label="unwind"];
    bb3__0_484 -> bb4__0_484 [label="0"];
    bb3__0_484 -> bb6__0_484 [label="1"];
    bb3__0_484 -> bb5__0_484 [label="otherwise"];
    bb4__0_484 -> bb8__0_484 [label="return"];
    bb4__0_484 -> bb11__0_484 [label="unwind"];
    bb6__0_484 -> bb7__0_484 [label="return"];
    bb6__0_484 -> bb11__0_484 [label="unwind"];
    bb7__0_484 -> bb9__0_484 [label=""];
    bb8__0_484 -> bb9__0_484 [label=""];
    bb11__0_484 -> bb10__0_484 [label=""];
}
