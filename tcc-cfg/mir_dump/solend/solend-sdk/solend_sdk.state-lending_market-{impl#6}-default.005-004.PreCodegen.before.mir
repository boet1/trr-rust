// MIR for `lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:11:24: 11:31>::default` before PreCodegen

fn lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:11:24: 11:31>::default() -> LendingMarket {
    let mut _0: state::lending_market::LendingMarket;
    let mut _1: u8;
    let mut _2: u8;
    let mut _3: solana_program::pubkey::Pubkey;
    let mut _4: [u8; 32];
    let mut _5: solana_program::pubkey::Pubkey;
    let mut _6: solana_program::pubkey::Pubkey;
    let mut _7: solana_program::pubkey::Pubkey;
    let mut _8: state::rate_limiter::RateLimiter;
    let mut _9: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _10: solana_program::pubkey::Pubkey;

    bb0: {
        StorageLive(_1);
        _1 = <u8 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u8 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <Pubkey as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <[u8; 32] as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <Pubkey as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <Pubkey as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <Pubkey as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <rate_limiter::RateLimiter as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <Option<Pubkey> as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <Pubkey as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        _0 = LendingMarket { version: move _1, bump_seed: move _2, owner: move _3, quote_currency: move _4, token_program_id: move _5, oracle_program_id: move _6, switchboard_oracle_program_id: move _7, rate_limiter: move _8, whitelisted_liquidator: move _9, risk_authority: move _10 };
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
