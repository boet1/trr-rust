digraph Mir_0_327 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::max_withdraw_amount(_1: &amp;ReErased state::obligation::Obligation, _2: &amp;ReErased state::obligation::ObligationCollateral, _3: &amp;ReErased state::reserve::Reserve) -&gt; std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationLiquidity, std::alloc::Global&gt;;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: u64;<br align="left"/>let _9: ();<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _12: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _13: !;<br align="left"/>let _14: math::rate::Rate;<br align="left"/>let mut _15: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased math::rate::Rate;<br align="left"/>let mut _19: &amp;ReErased math::rate::Rate;<br align="left"/>let _20: math::rate::Rate;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: u64;<br align="left"/>let _23: math::decimal::Decimal;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _25: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _26: math::decimal::Decimal;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _28: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _29: math::decimal::Decimal;<br align="left"/>let mut _30: math::decimal::Decimal;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _35: math::decimal::Decimal;<br align="left"/>let mut _36: math::rate::Rate;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _41: math::decimal::Decimal;<br align="left"/>let _42: math::decimal::Decimal;<br align="left"/>let mut _43: &amp;ReErased state::reserve::Reserve;<br align="left"/>let _44: u64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _47: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _48: u32;<br align="left"/>let mut _49: u8;<br align="left"/>let mut _50: error::LendingError;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _55: u64;<br align="left"/>let _56: math::decimal::Decimal;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _58: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _59: math::decimal::Decimal;<br align="left"/>let mut _60: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _61: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _62: math::decimal::Decimal;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _68: math::decimal::Decimal;<br align="left"/>let mut _69: math::decimal::Decimal;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _74: math::decimal::Decimal;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _79: &amp;ReErased math::decimal::Decimal;<br align="left"/>let _80: math::decimal::Decimal;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _82: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _83: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _84: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _85: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, state::reserve::CollateralExchangeRate&gt;;<br align="left"/>let mut _86: std::result::Result&lt;state::reserve::CollateralExchangeRate, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _87: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _88: isize;<br align="left"/>let _89: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _92: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _93: math::decimal::Decimal;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _98: math::decimal::Decimal;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _103: u64;<br align="left"/>let mut _104: u64;<br align="left"/>let mut _105: bool;<br align="left"/>let mut _106: bool;<br align="left"/>let mut _107: bool;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: bool;<br align="left"/>let mut _110: isize;<br align="left"/>let mut _111: isize;<br align="left"/>let mut _112: isize;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug collateral =&gt; _2;<br align="left"/>debug withdraw_reserve =&gt; _3;<br align="left"/>debug loan_to_value_ratio =&gt; _14;<br align="left"/>debug max_withdraw_value =&gt; _23;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug price =&gt; _42;<br align="left"/>debug decimals =&gt; _44;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug max_withdraw_liquidity_amount =&gt; _56;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug residual =&gt; _89;<br align="left"/>debug val =&gt; _92;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>>;
    bb0__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_108 = const false<br/>_107 = const false<br/>_106 = const false<br/>_105 = const false<br/>_109 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;((*_1).5: std::vec::Vec&lt;state::obligation::ObligationLiquidity&gt;)<br/></td></tr><tr><td align="left">_5 = Vec::&lt;obligation::ObligationLiquidity&gt;::is_empty(move _6)</td></tr></table>>];
    bb1__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = ((*_2).1: u64)<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).10: math::decimal::Decimal)<br/>StorageLive(_12)<br/>_12 = &amp;((*_1).9: math::decimal::Decimal)<br/></td></tr><tr><td align="left">_10 = &lt;decimal::Decimal as PartialOrd&gt;::le(move _11, move _12)</td></tr></table>>];
    bb4__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb5__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(const 0_u64)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>_9 = const ()<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/></td></tr><tr><td align="left">_14 = reserve::Reserve::loan_to_value_ratio(move _15)</td></tr></table>>];
    bb7__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;_14<br/>StorageLive(_19)<br/>StorageLive(_20)<br/></td></tr><tr><td align="left">_20 = rate::Rate::zero()</td></tr></table>>];
    bb8__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_19 = &amp;_20<br/></td></tr><tr><td align="left">_17 = &lt;rate::Rate as PartialEq&gt;::eq(move _18, move _19)</td></tr></table>>];
    bb9__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb10__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_22)<br/>_22 = ((*_2).1: u64)<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(move _22)<br/>StorageDead(_22)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_16 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).10: math::decimal::Decimal)<br/>StorageLive(_30)<br/>_30 = ((*_1).9: math::decimal::Decimal)<br/></td></tr><tr><td align="left">_28 = &lt;decimal::Decimal as common::TrySub&gt;::try_sub(move _29, move _30)</td></tr></table>>];
    bb12__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb13__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_108 = const true<br/>StorageDead(_28)<br/>_31 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_27 as Continue).0: math::decimal::Decimal)<br/>_26 = _35<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>_36 = _14<br/></td></tr><tr><td align="left">_25 = &lt;decimal::Decimal as common::TryDiv&lt;rate::Rate&gt;&gt;::try_div(move _26, move _36)</td></tr></table>>];
    bb15__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb16__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb17__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb19__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_37 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb20__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_24 as Continue).0: math::decimal::Decimal)<br/>_23 = _41<br/>StorageDead(_41)<br/>_110 = discriminant(_24)<br/>_112 = discriminant(_27)<br/>_108 = const false<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;(*_3)<br/></td></tr><tr><td align="left">_42 = reserve::Reserve::price_lower_bound(move _43)</td></tr></table>>];
    bb21__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_40)<br/>_40 = move _38<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb22__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>_134 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = (((*_3).3: state::reserve::ReserveLiquidity).1: u8)<br/>_48 = move _49 as u32 (IntToInt)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = core::num::&lt;impl u64&gt;::checked_pow(const 10_u64, move _48)</td></tr></table>>];
    bb24__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_50)<br/>_50 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_46 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _47, move _50)</td></tr></table>>];
    bb25__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb26__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_51 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb27__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_45 as Continue).0: u64)<br/>_44 = _55<br/>StorageDead(_55)<br/>StorageDead(_45)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _23<br/>StorageLive(_63)<br/>_63 = _44<br/></td></tr><tr><td align="left">_61 = &lt;decimal::Decimal as common::TryMul&lt;u64&gt;&gt;::try_mul(move _62, move _63)</td></tr></table>>];
    bb28__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = move ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_54)<br/>_54 = move _52<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb29__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _61)</td></tr></table>>];
    bb31__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_107 = const true<br/>StorageDead(_61)<br/>_64 = discriminant(_60)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb32__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_60 as Continue).0: math::decimal::Decimal)<br/>_59 = _68<br/>StorageDead(_68)<br/>StorageLive(_69)<br/>_69 = _42<br/></td></tr><tr><td align="left">_58 = &lt;decimal::Decimal as common::TryDiv&lt;decimal::Decimal&gt;&gt;::try_div(move _59, move _69)</td></tr></table>>];
    bb33__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_60 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_67)<br/>_67 = move _65<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb34__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb36__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_70 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb37__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_57 as Continue).0: math::decimal::Decimal)<br/>_56 = _74<br/>StorageDead(_74)<br/>_114 = discriminant(_57)<br/>_116 = discriminant(_60)<br/>_107 = const false<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;(*_3)<br/></td></tr><tr><td align="left">_86 = reserve::Reserve::collateral_exchange_rate(move _87)</td></tr></table>>];
    bb38__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_73)<br/>_73 = move _71<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb39__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>_130 = discriminant(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = &lt;Result&lt;CollateralExchangeRate, ProgramError&gt; as Try&gt;::branch(move _86)</td></tr></table>>];
    bb41__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_106 = const true<br/>StorageDead(_86)<br/>_88 = discriminant(_85)<br/></td></tr><tr><td align="left">switchInt(move _88)</td></tr></table>>];
    bb42__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = ((_85 as Continue).0: state::reserve::CollateralExchangeRate)<br/>_84 = _92<br/>StorageDead(_92)<br/>_83 = &amp;_84<br/>StorageLive(_93)<br/>_93 = _56<br/></td></tr><tr><td align="left">_82 = CollateralExchangeRate::decimal_liquidity_to_collateral(move _83, move _93)</td></tr></table>>];
    bb43__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = move ((_85 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_91)<br/>_91 = move _89<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _91)</td></tr></table>>];
    bb44__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_56)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb46__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_105 = const true<br/>StorageDead(_82)<br/>_94 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb47__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_81 as Continue).0: math::decimal::Decimal)<br/>_80 = _98<br/>StorageDead(_98)<br/>_79 = &amp;_80<br/></td></tr><tr><td align="left">_78 = decimal::Decimal::try_floor_u64(move _79)</td></tr></table>>];
    bb48__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = move ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_97)<br/>_97 = move _95<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb49__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_56)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;Result&lt;u64, ProgramError&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb51__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_109 = const true<br/>StorageDead(_78)<br/>_99 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb52__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_77 as Continue).0: u64)<br/>_76 = _103<br/>StorageDead(_103)<br/>StorageLive(_104)<br/>_104 = ((*_2).1: u64)<br/></td></tr><tr><td align="left">_75 = std::cmp::min::&lt;u64&gt;(move _76, move _104)</td></tr></table>>];
    bb53__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = move ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_102)<br/>_102 = move _100<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb54__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_56)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/>_124 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_76)<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(move _75)<br/>StorageDead(_75)<br/>StorageDead(_56)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/>_118 = discriminant(_77)<br/>_120 = discriminant(_81)<br/>_122 = discriminant(_85)<br/>_106 = const false<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>_105 = const false<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>_109 = const false<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_126 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_128 = discriminant(_85)<br/>_106 = const false<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>_105 = const false<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>_109 = const false<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_132 = discriminant(_60)<br/>_107 = const false<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_136 = discriminant(_27)<br/>_108 = const false<br/>StorageDead(_27)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left">return</td></tr></table>>];
    bb64__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb65__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left" balign="left">_138 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_139 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_140 = discriminant(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left" balign="left">_141 = discriminant(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left" balign="left">_142 = discriminant(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left" balign="left">_143 = discriminant(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_327 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left" balign="left">_144 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_327 -> bb1__0_327 [label="return"];
    bb1__0_327 -> bb3__0_327 [label="0"];
    bb1__0_327 -> bb2__0_327 [label="otherwise"];
    bb2__0_327 -> bb63__0_327 [label=""];
    bb3__0_327 -> bb4__0_327 [label="return"];
    bb4__0_327 -> bb6__0_327 [label="0"];
    bb4__0_327 -> bb5__0_327 [label="otherwise"];
    bb5__0_327 -> bb63__0_327 [label=""];
    bb6__0_327 -> bb7__0_327 [label="return"];
    bb7__0_327 -> bb8__0_327 [label="return"];
    bb8__0_327 -> bb9__0_327 [label="return"];
    bb9__0_327 -> bb11__0_327 [label="0"];
    bb9__0_327 -> bb10__0_327 [label="otherwise"];
    bb10__0_327 -> bb62__0_327 [label=""];
    bb11__0_327 -> bb12__0_327 [label="return"];
    bb12__0_327 -> bb13__0_327 [label="return"];
    bb12__0_327 -> bb64__0_327 [label="unwind"];
    bb13__0_327 -> bb14__0_327 [label="0"];
    bb13__0_327 -> bb16__0_327 [label="1"];
    bb13__0_327 -> bb15__0_327 [label="otherwise"];
    bb14__0_327 -> bb18__0_327 [label="return"];
    bb14__0_327 -> bb71__0_327 [label="unwind"];
    bb16__0_327 -> bb17__0_327 [label="return"];
    bb16__0_327 -> bb71__0_327 [label="unwind"];
    bb17__0_327 -> bb60__0_327 [label=""];
    bb18__0_327 -> bb19__0_327 [label="return"];
    bb18__0_327 -> bb71__0_327 [label="unwind"];
    bb19__0_327 -> bb20__0_327 [label="0"];
    bb19__0_327 -> bb21__0_327 [label="1"];
    bb19__0_327 -> bb15__0_327 [label="otherwise"];
    bb20__0_327 -> bb23__0_327 [label="return"];
    bb21__0_327 -> bb22__0_327 [label="return"];
    bb21__0_327 -> bb70__0_327 [label="unwind"];
    bb22__0_327 -> bb60__0_327 [label=""];
    bb23__0_327 -> bb24__0_327 [label="return"];
    bb24__0_327 -> bb25__0_327 [label="return"];
    bb25__0_327 -> bb26__0_327 [label="return"];
    bb26__0_327 -> bb27__0_327 [label="0"];
    bb26__0_327 -> bb28__0_327 [label="1"];
    bb26__0_327 -> bb15__0_327 [label="otherwise"];
    bb27__0_327 -> bb30__0_327 [label="return"];
    bb28__0_327 -> bb29__0_327 [label="return"];
    bb29__0_327 -> bb59__0_327 [label=""];
    bb30__0_327 -> bb31__0_327 [label="return"];
    bb30__0_327 -> bb64__0_327 [label="unwind"];
    bb31__0_327 -> bb32__0_327 [label="0"];
    bb31__0_327 -> bb33__0_327 [label="1"];
    bb31__0_327 -> bb15__0_327 [label="otherwise"];
    bb32__0_327 -> bb35__0_327 [label="return"];
    bb32__0_327 -> bb69__0_327 [label="unwind"];
    bb33__0_327 -> bb34__0_327 [label="return"];
    bb33__0_327 -> bb69__0_327 [label="unwind"];
    bb34__0_327 -> bb58__0_327 [label=""];
    bb35__0_327 -> bb36__0_327 [label="return"];
    bb35__0_327 -> bb69__0_327 [label="unwind"];
    bb36__0_327 -> bb37__0_327 [label="0"];
    bb36__0_327 -> bb38__0_327 [label="1"];
    bb36__0_327 -> bb15__0_327 [label="otherwise"];
    bb37__0_327 -> bb40__0_327 [label="return"];
    bb38__0_327 -> bb39__0_327 [label="return"];
    bb38__0_327 -> bb68__0_327 [label="unwind"];
    bb39__0_327 -> bb58__0_327 [label=""];
    bb40__0_327 -> bb41__0_327 [label="return"];
    bb40__0_327 -> bb64__0_327 [label="unwind"];
    bb41__0_327 -> bb42__0_327 [label="0"];
    bb41__0_327 -> bb43__0_327 [label="1"];
    bb41__0_327 -> bb15__0_327 [label="otherwise"];
    bb42__0_327 -> bb45__0_327 [label="return"];
    bb42__0_327 -> bb67__0_327 [label="unwind"];
    bb43__0_327 -> bb44__0_327 [label="return"];
    bb43__0_327 -> bb67__0_327 [label="unwind"];
    bb44__0_327 -> bb57__0_327 [label=""];
    bb45__0_327 -> bb46__0_327 [label="return"];
    bb45__0_327 -> bb67__0_327 [label="unwind"];
    bb46__0_327 -> bb47__0_327 [label="0"];
    bb46__0_327 -> bb48__0_327 [label="1"];
    bb46__0_327 -> bb15__0_327 [label="otherwise"];
    bb47__0_327 -> bb50__0_327 [label="return"];
    bb47__0_327 -> bb66__0_327 [label="unwind"];
    bb48__0_327 -> bb49__0_327 [label="return"];
    bb48__0_327 -> bb66__0_327 [label="unwind"];
    bb49__0_327 -> bb56__0_327 [label=""];
    bb50__0_327 -> bb51__0_327 [label="return"];
    bb50__0_327 -> bb66__0_327 [label="unwind"];
    bb51__0_327 -> bb52__0_327 [label="0"];
    bb51__0_327 -> bb53__0_327 [label="1"];
    bb51__0_327 -> bb15__0_327 [label="otherwise"];
    bb52__0_327 -> bb55__0_327 [label="return"];
    bb52__0_327 -> bb65__0_327 [label="unwind"];
    bb53__0_327 -> bb54__0_327 [label="return"];
    bb53__0_327 -> bb65__0_327 [label="unwind"];
    bb54__0_327 -> bb56__0_327 [label=""];
    bb55__0_327 -> bb63__0_327 [label=""];
    bb56__0_327 -> bb57__0_327 [label=""];
    bb57__0_327 -> bb63__0_327 [label=""];
    bb58__0_327 -> bb59__0_327 [label=""];
    bb59__0_327 -> bb61__0_327 [label=""];
    bb60__0_327 -> bb61__0_327 [label=""];
    bb61__0_327 -> bb62__0_327 [label=""];
    bb62__0_327 -> bb63__0_327 [label=""];
    bb65__0_327 -> bb66__0_327 [label=""];
    bb66__0_327 -> bb67__0_327 [label=""];
    bb67__0_327 -> bb64__0_327 [label=""];
    bb68__0_327 -> bb69__0_327 [label=""];
    bb69__0_327 -> bb64__0_327 [label=""];
    bb70__0_327 -> bb71__0_327 [label=""];
    bb71__0_327 -> bb64__0_327 [label=""];
}
