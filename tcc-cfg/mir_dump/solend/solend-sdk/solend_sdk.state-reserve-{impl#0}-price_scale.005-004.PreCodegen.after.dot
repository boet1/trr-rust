digraph Mir_0_455 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::price_scale(_1: &amp;ReErased state::reserve::Reserve) -&gt; math::decimal::Decimal<br align="left"/>let _2: i64;<br align="left"/>let mut _3: i64;<br align="left"/>let mut _4: i64;<br align="left"/>let _5: i64;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: (i64, bool);<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: i64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug scaled_price_offset_bps =&gt; _2;<br align="left"/>debug price_weight_bps =&gt; _5;<br align="left"/>>;
    bb0__0_455 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = (((*_1).5: state::reserve::ReserveConfig).19: i64)<br/></td></tr><tr><td align="left">_3 = std::cmp::max::&lt;i64&gt;(const _, move _4)</td></tr></table>>];
    bb1__0_455 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">_2 = std::cmp::min::&lt;i64&gt;(const _, move _3)</td></tr></table>>];
    bb2__0_455 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _2<br/>_7 = CheckedAdd(const 10000_i64, _6)<br/></td></tr><tr><td align="left">assert(!move (_7.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const 10000_i64, move _6)</td></tr></table>>];
    bb3__0_455 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_5 = move (_7.0: i64)<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _5<br/>_8 = move _9 as u64 (IntToInt)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_0 = decimal::Decimal::from_bps(move _8)</td></tr></table>>];
    bb4__0_455 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_455 -> bb1__0_455 [label="return"];
    bb1__0_455 -> bb2__0_455 [label="return"];
    bb2__0_455 -> bb3__0_455 [label="success"];
    bb3__0_455 -> bb4__0_455 [label="return"];
}
