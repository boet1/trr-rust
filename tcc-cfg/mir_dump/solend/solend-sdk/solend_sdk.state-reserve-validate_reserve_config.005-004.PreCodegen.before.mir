// MIR for `validate_reserve_config` before PreCodegen

fn validate_reserve_config(_1: reserve::ReserveConfig) -> Result<(), ProgramError> {
    debug config => _1;
    let mut _0: std::result::Result<(), solana_program::program_error::ProgramError>;
    let _2: ();
    let mut _3: bool;
    let mut _4: u8;
    let mut _5: !;
    let _6: ();
    let mut _7: &str;
    let _8: &str;
    let mut _9: solana_program::program_error::ProgramError;
    let mut _10: error::LendingError;
    let _11: ();
    let mut _12: bool;
    let mut _13: u8;
    let mut _14: u8;
    let mut _15: bool;
    let mut _16: u8;
    let mut _17: !;
    let _18: ();
    let mut _19: &str;
    let _20: &str;
    let mut _21: solana_program::program_error::ProgramError;
    let mut _22: error::LendingError;
    let _23: ();
    let mut _24: bool;
    let mut _25: u8;
    let mut _26: !;
    let _27: ();
    let mut _28: &str;
    let _29: &str;
    let mut _30: solana_program::program_error::ProgramError;
    let mut _31: error::LendingError;
    let _32: ();
    let mut _33: bool;
    let mut _34: u8;
    let mut _35: !;
    let _36: ();
    let mut _37: &str;
    let _38: &str;
    let mut _39: solana_program::program_error::ProgramError;
    let mut _40: error::LendingError;
    let _41: ();
    let mut _42: bool;
    let mut _43: u8;
    let mut _44: u8;
    let mut _45: bool;
    let mut _46: u8;
    let mut _47: !;
    let _48: ();
    let mut _49: &str;
    let _50: &str;
    let mut _51: solana_program::program_error::ProgramError;
    let mut _52: error::LendingError;
    let _53: ();
    let mut _54: bool;
    let mut _55: u8;
    let mut _56: u8;
    let mut _57: bool;
    let mut _58: u8;
    let mut _59: !;
    let _60: ();
    let mut _61: &str;
    let _62: &str;
    let mut _63: solana_program::program_error::ProgramError;
    let mut _64: error::LendingError;
    let _65: ();
    let mut _66: bool;
    let mut _67: u8;
    let mut _68: u8;
    let mut _69: bool;
    let mut _70: u8;
    let mut _71: !;
    let _72: ();
    let mut _73: &str;
    let _74: &str;
    let mut _75: solana_program::program_error::ProgramError;
    let mut _76: error::LendingError;
    let _77: ();
    let mut _78: bool;
    let mut _79: u8;
    let mut _80: u8;
    let mut _81: !;
    let _82: ();
    let mut _83: &str;
    let _84: &str;
    let mut _85: solana_program::program_error::ProgramError;
    let mut _86: error::LendingError;
    let _87: ();
    let mut _88: bool;
    let mut _89: u8;
    let mut _90: u8;
    let mut _91: !;
    let _92: ();
    let mut _93: &str;
    let _94: &str;
    let mut _95: solana_program::program_error::ProgramError;
    let mut _96: error::LendingError;
    let _97: ();
    let mut _98: bool;
    let mut _99: u64;
    let mut _100: u64;
    let mut _101: u8;
    let mut _102: !;
    let _103: ();
    let mut _104: &str;
    let _105: &str;
    let mut _106: solana_program::program_error::ProgramError;
    let mut _107: error::LendingError;
    let _108: ();
    let mut _109: bool;
    let mut _110: u64;
    let mut _111: !;
    let _112: ();
    let mut _113: &str;
    let _114: &str;
    let mut _115: solana_program::program_error::ProgramError;
    let mut _116: error::LendingError;
    let _117: ();
    let mut _118: bool;
    let mut _119: u8;
    let mut _120: !;
    let _121: ();
    let mut _122: &str;
    let _123: &str;
    let mut _124: solana_program::program_error::ProgramError;
    let mut _125: error::LendingError;
    let _126: ();
    let mut _127: bool;
    let mut _128: u8;
    let mut _129: !;
    let _130: ();
    let mut _131: &str;
    let _132: &str;
    let mut _133: &std::string::String;
    let _134: &std::string::String;
    let _135: std::string::String;
    let _136: std::string::String;
    let mut _137: std::fmt::Arguments<'_>;
    let mut _138: &[&str];
    let mut _139: &[&str; 2];
    let _140: &[&str; 2];
    let _141: [&str; 2];
    let mut _142: &[core::fmt::rt::Argument<'_>];
    let mut _143: &[core::fmt::rt::Argument<'_>; 1];
    let _144: &[core::fmt::rt::Argument<'_>; 1];
    let _145: [core::fmt::rt::Argument<'_>; 1];
    let mut _146: core::fmt::rt::Argument<'_>;
    let mut _147: &u8;
    let _148: &u8;
    let _149: u8;
    let mut _150: solana_program::program_error::ProgramError;
    let mut _151: error::LendingError;
    let _152: ();
    let mut _153: bool;
    let mut _154: u64;
    let mut _155: u64;
    let mut _156: u64;
    let mut _157: u8;
    let mut _158: (u64, bool);
    let mut _159: u64;
    let mut _160: u64;
    let mut _161: u8;
    let mut _162: (u64, bool);
    let mut _163: (u64, bool);
    let mut _164: u64;
    let mut _165: u64;
    let mut _166: (u64, bool);
    let mut _167: !;
    let _168: ();
    let mut _169: &str;
    let _170: &str;
    let mut _171: &std::string::String;
    let _172: &std::string::String;
    let _173: std::string::String;
    let _174: std::string::String;
    let mut _175: std::fmt::Arguments<'_>;
    let mut _176: &[&str];
    let mut _177: &[&str; 2];
    let _178: &[&str; 2];
    let _179: [&str; 2];
    let mut _180: &[core::fmt::rt::Argument<'_>];
    let mut _181: &[core::fmt::rt::Argument<'_>; 1];
    let _182: &[core::fmt::rt::Argument<'_>; 1];
    let _183: [core::fmt::rt::Argument<'_>; 1];
    let mut _184: core::fmt::rt::Argument<'_>;
    let mut _185: &u8;
    let _186: &u8;
    let _187: u8;
    let mut _188: solana_program::program_error::ProgramError;
    let mut _189: error::LendingError;
    let _190: ();
    let mut _191: bool;
    let mut _192: u8;
    let mut _193: !;
    let _194: ();
    let mut _195: &str;
    let _196: &str;
    let mut _197: solana_program::program_error::ProgramError;
    let mut _198: error::LendingError;
    let _199: ();
    let mut _200: bool;
    let mut _201: &state::reserve::ReserveType;
    let mut _202: &state::reserve::ReserveType;
    let _203: state::reserve::ReserveType;
    let mut _204: bool;
    let mut _205: u8;
    let mut _206: bool;
    let mut _207: u8;
    let mut _208: !;
    let _209: ();
    let mut _210: &str;
    let _211: &str;
    let mut _212: solana_program::program_error::ProgramError;
    let mut _213: error::LendingError;
    let _214: ();
    let mut _215: bool;
    let mut _216: i64;
    let mut _217: bool;
    let mut _218: i64;
    let mut _219: !;
    let _220: ();
    let mut _221: &str;
    let _222: &str;
    let mut _223: &std::string::String;
    let _224: &std::string::String;
    let _225: std::string::String;
    let _226: std::string::String;
    let mut _227: std::fmt::Arguments<'_>;
    let mut _228: &[&str];
    let mut _229: &[&str; 3];
    let _230: &[&str; 3];
    let _231: [&str; 3];
    let mut _232: &[core::fmt::rt::Argument<'_>];
    let mut _233: &[core::fmt::rt::Argument<'_>; 2];
    let _234: &[core::fmt::rt::Argument<'_>; 2];
    let _235: [core::fmt::rt::Argument<'_>; 2];
    let mut _236: core::fmt::rt::Argument<'_>;
    let mut _237: &i64;
    let _238: &i64;
    let _239: i64;
    let mut _240: core::fmt::rt::Argument<'_>;
    let mut _241: &i64;
    let _242: &i64;
    let _243: i64;
    let mut _244: solana_program::program_error::ProgramError;
    let mut _245: error::LendingError;
    let _246: ();
    let mut _247: bool;
    let mut _248: u64;
    let mut _249: u64;
    let mut _250: !;
    let _251: ();
    let mut _252: &str;
    let _253: &str;
    let mut _254: solana_program::program_error::ProgramError;
    let mut _255: error::LendingError;
    let mut _256: ();
    let mut _257: &u8;
    let mut _258: &[&str; 2];
    let mut _259: &u8;
    let mut _260: &[&str; 2];
    let mut _261: &i64;
    let mut _262: &i64;
    let mut _263: &[&str; 3];
    let mut _264: &state::reserve::ReserveType;
    scope 1 {
        debug res => _136;
    }
    scope 2 {
        debug res => _174;
    }
    scope 3 {
        debug res => _226;
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = (_1.0: u8);
        _3 = Gt(move _4, const 100_u8);
        switchInt(move _3) -> [0: bb4, otherwise: bb1];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = const "Optimal utilization rate must be in range [0, 100]";
        _7 = &(*_8);
        _6 = solana_program::log::sol_log(move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_8);
        StorageDead(_6);
        StorageLive(_9);
        StorageLive(_10);
        _10 = LendingError::InvalidConfig;
        _9 = <LendingError as Into<ProgramError>>::into(move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        _0 = Result::<(), ProgramError>::Err(move _9);
        StorageDead(_9);
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb110;
    }

    bb4: {
        StorageDead(_4);
        _2 = const ();
        StorageDead(_3);
        StorageDead(_2);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = (_1.1: u8);
        StorageLive(_14);
        _14 = (_1.0: u8);
        _12 = Lt(move _13, move _14);
        switchInt(move _12) -> [0: bb6, otherwise: bb5];
    }

    bb5: {
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb7;
    }

    bb6: {
        StorageDead(_14);
        StorageDead(_13);
        StorageLive(_15);
        StorageLive(_16);
        _16 = (_1.1: u8);
        _15 = Gt(move _16, const 100_u8);
        switchInt(move _15) -> [0: bb8, otherwise: bb7];
    }

    bb7: {
        StorageDead(_16);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _20 = const "Unhealthy utilization rate must be in range [optimal_utilization_rate, 100]";
        _19 = &(*_20);
        _18 = solana_program::log::sol_log(move _19) -> [return: bb9, unwind continue];
    }

    bb8: {
        StorageDead(_16);
        _11 = const ();
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_11);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = (_1.2: u8);
        _24 = Ge(move _25, const 100_u8);
        switchInt(move _24) -> [0: bb12, otherwise: bb11];
    }

    bb9: {
        StorageDead(_19);
        StorageDead(_20);
        StorageDead(_18);
        StorageLive(_21);
        StorageLive(_22);
        _22 = LendingError::InvalidConfig;
        _21 = <LendingError as Into<ProgramError>>::into(move _22) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_22);
        _0 = Result::<(), ProgramError>::Err(move _21);
        StorageDead(_21);
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_11);
        goto -> bb110;
    }

    bb11: {
        StorageDead(_25);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = const "Loan to value ratio must be in range [0, 100)";
        _28 = &(*_29);
        _27 = solana_program::log::sol_log(move _28) -> [return: bb13, unwind continue];
    }

    bb12: {
        StorageDead(_25);
        _23 = const ();
        StorageDead(_24);
        StorageDead(_23);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = (_1.3: u8);
        _33 = Gt(move _34, const 100_u8);
        switchInt(move _33) -> [0: bb16, otherwise: bb15];
    }

    bb13: {
        StorageDead(_28);
        StorageDead(_29);
        StorageDead(_27);
        StorageLive(_30);
        StorageLive(_31);
        _31 = LendingError::InvalidConfig;
        _30 = <LendingError as Into<ProgramError>>::into(move _31) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_31);
        _0 = Result::<(), ProgramError>::Err(move _30);
        StorageDead(_30);
        StorageDead(_24);
        StorageDead(_23);
        goto -> bb110;
    }

    bb15: {
        StorageDead(_34);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = const "Liquidation bonus must be in range [0, 100]";
        _37 = &(*_38);
        _36 = solana_program::log::sol_log(move _37) -> [return: bb17, unwind continue];
    }

    bb16: {
        StorageDead(_34);
        _32 = const ();
        StorageDead(_33);
        StorageDead(_32);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = (_1.4: u8);
        StorageLive(_44);
        _44 = (_1.3: u8);
        _42 = Lt(move _43, move _44);
        switchInt(move _42) -> [0: bb20, otherwise: bb19];
    }

    bb17: {
        StorageDead(_37);
        StorageDead(_38);
        StorageDead(_36);
        StorageLive(_39);
        StorageLive(_40);
        _40 = LendingError::InvalidConfig;
        _39 = <LendingError as Into<ProgramError>>::into(move _40) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_40);
        _0 = Result::<(), ProgramError>::Err(move _39);
        StorageDead(_39);
        StorageDead(_33);
        StorageDead(_32);
        goto -> bb110;
    }

    bb19: {
        StorageDead(_44);
        StorageDead(_43);
        goto -> bb21;
    }

    bb20: {
        StorageDead(_44);
        StorageDead(_43);
        StorageLive(_45);
        StorageLive(_46);
        _46 = (_1.4: u8);
        _45 = Gt(move _46, const 100_u8);
        switchInt(move _45) -> [0: bb22, otherwise: bb21];
    }

    bb21: {
        StorageDead(_46);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = const "Max liquidation bonus must be in range [liquidation_bonus, 100]";
        _49 = &(*_50);
        _48 = solana_program::log::sol_log(move _49) -> [return: bb23, unwind continue];
    }

    bb22: {
        StorageDead(_46);
        _41 = const ();
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_41);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = (_1.5: u8);
        StorageLive(_56);
        _56 = (_1.2: u8);
        _54 = Lt(move _55, move _56);
        switchInt(move _54) -> [0: bb26, otherwise: bb25];
    }

    bb23: {
        StorageDead(_49);
        StorageDead(_50);
        StorageDead(_48);
        StorageLive(_51);
        StorageLive(_52);
        _52 = LendingError::InvalidConfig;
        _51 = <LendingError as Into<ProgramError>>::into(move _52) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_52);
        _0 = Result::<(), ProgramError>::Err(move _51);
        StorageDead(_51);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_41);
        goto -> bb110;
    }

    bb25: {
        StorageDead(_56);
        StorageDead(_55);
        goto -> bb27;
    }

    bb26: {
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_57);
        StorageLive(_58);
        _58 = (_1.5: u8);
        _57 = Gt(move _58, const 100_u8);
        switchInt(move _57) -> [0: bb28, otherwise: bb27];
    }

    bb27: {
        StorageDead(_58);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        _62 = const "Liquidation threshold must be in range [LTV, 100]";
        _61 = &(*_62);
        _60 = solana_program::log::sol_log(move _61) -> [return: bb29, unwind continue];
    }

    bb28: {
        StorageDead(_58);
        _53 = const ();
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_53);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        _67 = (_1.6: u8);
        StorageLive(_68);
        _68 = (_1.5: u8);
        _66 = Lt(move _67, move _68);
        switchInt(move _66) -> [0: bb32, otherwise: bb31];
    }

    bb29: {
        StorageDead(_61);
        StorageDead(_62);
        StorageDead(_60);
        StorageLive(_63);
        StorageLive(_64);
        _64 = LendingError::InvalidConfig;
        _63 = <LendingError as Into<ProgramError>>::into(move _64) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_64);
        _0 = Result::<(), ProgramError>::Err(move _63);
        StorageDead(_63);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_53);
        goto -> bb110;
    }

    bb31: {
        StorageDead(_68);
        StorageDead(_67);
        goto -> bb33;
    }

    bb32: {
        StorageDead(_68);
        StorageDead(_67);
        StorageLive(_69);
        StorageLive(_70);
        _70 = (_1.6: u8);
        _69 = Gt(move _70, const 100_u8);
        switchInt(move _69) -> [0: bb34, otherwise: bb33];
    }

    bb33: {
        StorageDead(_70);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        _74 = const "Max liquidation threshold must be in range [liquidation threshold, 100]";
        _73 = &(*_74);
        _72 = solana_program::log::sol_log(move _73) -> [return: bb35, unwind continue];
    }

    bb34: {
        StorageDead(_70);
        _65 = const ();
        StorageDead(_69);
        StorageDead(_66);
        StorageDead(_65);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        _79 = (_1.8: u8);
        StorageLive(_80);
        _80 = (_1.7: u8);
        _78 = Lt(move _79, move _80);
        switchInt(move _78) -> [0: bb38, otherwise: bb37];
    }

    bb35: {
        StorageDead(_73);
        StorageDead(_74);
        StorageDead(_72);
        StorageLive(_75);
        StorageLive(_76);
        _76 = LendingError::InvalidConfig;
        _75 = <LendingError as Into<ProgramError>>::into(move _76) -> [return: bb36, unwind continue];
    }

    bb36: {
        StorageDead(_76);
        _0 = Result::<(), ProgramError>::Err(move _75);
        StorageDead(_75);
        StorageDead(_69);
        StorageDead(_66);
        StorageDead(_65);
        goto -> bb110;
    }

    bb37: {
        StorageDead(_80);
        StorageDead(_79);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        _84 = const "Optimal borrow rate must be >= min borrow rate";
        _83 = &(*_84);
        _82 = solana_program::log::sol_log(move _83) -> [return: bb39, unwind continue];
    }

    bb38: {
        StorageDead(_80);
        StorageDead(_79);
        _77 = const ();
        StorageDead(_78);
        StorageDead(_77);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        _89 = (_1.8: u8);
        StorageLive(_90);
        _90 = (_1.9: u8);
        _88 = Gt(move _89, move _90);
        switchInt(move _88) -> [0: bb42, otherwise: bb41];
    }

    bb39: {
        StorageDead(_83);
        StorageDead(_84);
        StorageDead(_82);
        StorageLive(_85);
        StorageLive(_86);
        _86 = LendingError::InvalidConfig;
        _85 = <LendingError as Into<ProgramError>>::into(move _86) -> [return: bb40, unwind continue];
    }

    bb40: {
        StorageDead(_86);
        _0 = Result::<(), ProgramError>::Err(move _85);
        StorageDead(_85);
        StorageDead(_78);
        StorageDead(_77);
        goto -> bb110;
    }

    bb41: {
        StorageDead(_90);
        StorageDead(_89);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        _94 = const "Optimal borrow rate must be <= max borrow rate";
        _93 = &(*_94);
        _92 = solana_program::log::sol_log(move _93) -> [return: bb43, unwind continue];
    }

    bb42: {
        StorageDead(_90);
        StorageDead(_89);
        _87 = const ();
        StorageDead(_88);
        StorageDead(_87);
        StorageLive(_97);
        StorageLive(_98);
        StorageLive(_99);
        _99 = (_1.10: u64);
        StorageLive(_100);
        StorageLive(_101);
        _101 = (_1.9: u8);
        _100 = move _101 as u64 (IntToInt);
        StorageDead(_101);
        _98 = Lt(move _99, move _100);
        switchInt(move _98) -> [0: bb46, otherwise: bb45];
    }

    bb43: {
        StorageDead(_93);
        StorageDead(_94);
        StorageDead(_92);
        StorageLive(_95);
        StorageLive(_96);
        _96 = LendingError::InvalidConfig;
        _95 = <LendingError as Into<ProgramError>>::into(move _96) -> [return: bb44, unwind continue];
    }

    bb44: {
        StorageDead(_96);
        _0 = Result::<(), ProgramError>::Err(move _95);
        StorageDead(_95);
        StorageDead(_88);
        StorageDead(_87);
        goto -> bb110;
    }

    bb45: {
        StorageDead(_100);
        StorageDead(_99);
        StorageLive(_103);
        StorageLive(_104);
        StorageLive(_105);
        _105 = const "Super max borrow rate must be >= max borrow rate";
        _104 = &(*_105);
        _103 = solana_program::log::sol_log(move _104) -> [return: bb47, unwind continue];
    }

    bb46: {
        StorageDead(_100);
        StorageDead(_99);
        _97 = const ();
        StorageDead(_98);
        StorageDead(_97);
        StorageLive(_108);
        StorageLive(_109);
        StorageLive(_110);
        _110 = ((_1.11: state::reserve::ReserveFees).0: u64);
        _109 = Ge(move _110, const _);
        switchInt(move _109) -> [0: bb50, otherwise: bb49];
    }

    bb47: {
        StorageDead(_104);
        StorageDead(_105);
        StorageDead(_103);
        StorageLive(_106);
        StorageLive(_107);
        _107 = LendingError::InvalidConfig;
        _106 = <LendingError as Into<ProgramError>>::into(move _107) -> [return: bb48, unwind continue];
    }

    bb48: {
        StorageDead(_107);
        _0 = Result::<(), ProgramError>::Err(move _106);
        StorageDead(_106);
        StorageDead(_98);
        StorageDead(_97);
        goto -> bb110;
    }

    bb49: {
        StorageDead(_110);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        _114 = const "Borrow fee must be in range [0, 1_000_000_000_000_000_000)";
        _113 = &(*_114);
        _112 = solana_program::log::sol_log(move _113) -> [return: bb51, unwind continue];
    }

    bb50: {
        StorageDead(_110);
        _108 = const ();
        StorageDead(_109);
        StorageDead(_108);
        StorageLive(_117);
        StorageLive(_118);
        StorageLive(_119);
        _119 = ((_1.11: state::reserve::ReserveFees).2: u8);
        _118 = Gt(move _119, const 100_u8);
        switchInt(move _118) -> [0: bb54, otherwise: bb53];
    }

    bb51: {
        StorageDead(_113);
        StorageDead(_114);
        StorageDead(_112);
        StorageLive(_115);
        StorageLive(_116);
        _116 = LendingError::InvalidConfig;
        _115 = <LendingError as Into<ProgramError>>::into(move _116) -> [return: bb52, unwind continue];
    }

    bb52: {
        StorageDead(_116);
        _0 = Result::<(), ProgramError>::Err(move _115);
        StorageDead(_115);
        StorageDead(_109);
        StorageDead(_108);
        goto -> bb110;
    }

    bb53: {
        StorageDead(_119);
        StorageLive(_121);
        StorageLive(_122);
        StorageLive(_123);
        _123 = const "Host fee percentage must be in range [0, 100]";
        _122 = &(*_123);
        _121 = solana_program::log::sol_log(move _122) -> [return: bb55, unwind continue];
    }

    bb54: {
        StorageDead(_119);
        _117 = const ();
        StorageDead(_118);
        StorageDead(_117);
        StorageLive(_126);
        StorageLive(_127);
        StorageLive(_128);
        _128 = (_1.15: u8);
        _127 = Gt(move _128, const _);
        switchInt(move _127) -> [0: bb58, otherwise: bb57];
    }

    bb55: {
        StorageDead(_122);
        StorageDead(_123);
        StorageDead(_121);
        StorageLive(_124);
        StorageLive(_125);
        _125 = LendingError::InvalidConfig;
        _124 = <LendingError as Into<ProgramError>>::into(move _125) -> [return: bb56, unwind continue];
    }

    bb56: {
        StorageDead(_125);
        _0 = Result::<(), ProgramError>::Err(move _124);
        StorageDead(_124);
        StorageDead(_118);
        StorageDead(_117);
        goto -> bb110;
    }

    bb57: {
        StorageDead(_128);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        StorageLive(_137);
        StorageLive(_138);
        StorageLive(_139);
        StorageLive(_140);
        _258 = const _;
        _140 = &(*_258);
        _139 = &(*_140);
        _138 = move _139 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_139);
        StorageLive(_142);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        StorageLive(_146);
        StorageLive(_147);
        StorageLive(_148);
        _257 = const _;
        _148 = &(*_257);
        _147 = &(*_148);
        _146 = core::fmt::rt::Argument::<'_>::new_display::<u8>(move _147) -> [return: bb59, unwind continue];
    }

    bb58: {
        StorageDead(_128);
        _126 = const ();
        StorageDead(_127);
        StorageDead(_126);
        StorageLive(_152);
        StorageLive(_153);
        StorageLive(_154);
        StorageLive(_155);
        StorageLive(_156);
        StorageLive(_157);
        _157 = (_1.4: u8);
        _156 = move _157 as u64 (IntToInt);
        StorageDead(_157);
        _158 = CheckedMul(_156, const 100_u64);
        assert(!move (_158.1: bool), "attempt to compute `{} * {}`, which would overflow", move _156, const 100_u64) -> [success: bb66, unwind continue];
    }

    bb59: {
        StorageDead(_147);
        _145 = [move _146];
        StorageDead(_146);
        _144 = &_145;
        _143 = &(*_144);
        _142 = move _143 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_143);
        _137 = Arguments::<'_>::new_v1(move _138, move _142) -> [return: bb60, unwind continue];
    }

    bb60: {
        StorageDead(_142);
        StorageDead(_138);
        _136 = format(move _137) -> [return: bb61, unwind continue];
    }

    bb61: {
        StorageDead(_137);
        StorageDead(_148);
        StorageDead(_145);
        StorageDead(_144);
        StorageDead(_140);
        _135 = move _136;
        StorageDead(_136);
        _134 = &_135;
        _133 = &(*_134);
        _132 = <String as Deref>::deref(move _133) -> [return: bb62, unwind: bb113];
    }

    bb62: {
        _131 = &(*_132);
        StorageDead(_133);
        _130 = solana_program::log::sol_log(move _131) -> [return: bb63, unwind: bb113];
    }

    bb63: {
        StorageDead(_131);
        drop(_135) -> [return: bb64, unwind: bb114];
    }

    bb64: {
        StorageDead(_135);
        StorageDead(_134);
        StorageDead(_132);
        StorageDead(_130);
        StorageLive(_150);
        StorageLive(_151);
        _151 = LendingError::InvalidConfig;
        _150 = <LendingError as Into<ProgramError>>::into(move _151) -> [return: bb65, unwind continue];
    }

    bb65: {
        StorageDead(_151);
        _0 = Result::<(), ProgramError>::Err(move _150);
        StorageDead(_150);
        StorageDead(_127);
        StorageDead(_126);
        goto -> bb110;
    }

    bb66: {
        _155 = move (_158.0: u64);
        StorageDead(_156);
        StorageLive(_159);
        StorageLive(_160);
        StorageLive(_161);
        _161 = (_1.15: u8);
        _160 = move _161 as u64 (IntToInt);
        StorageDead(_161);
        _162 = CheckedMul(_160, const 10_u64);
        assert(!move (_162.1: bool), "attempt to compute `{} * {}`, which would overflow", move _160, const 10_u64) -> [success: bb67, unwind continue];
    }

    bb67: {
        _159 = move (_162.0: u64);
        StorageDead(_160);
        _163 = CheckedAdd(_155, _159);
        assert(!move (_163.1: bool), "attempt to compute `{} + {}`, which would overflow", move _155, move _159) -> [success: bb68, unwind continue];
    }

    bb68: {
        _154 = move (_163.0: u64);
        StorageDead(_159);
        StorageDead(_155);
        StorageLive(_164);
        StorageLive(_165);
        _165 = const _ as u64 (IntToInt);
        _166 = CheckedMul(_165, const 100_u64);
        assert(!move (_166.1: bool), "attempt to compute `{} * {}`, which would overflow", move _165, const 100_u64) -> [success: bb69, unwind continue];
    }

    bb69: {
        _164 = move (_166.0: u64);
        StorageDead(_165);
        _153 = Gt(move _154, move _164);
        switchInt(move _153) -> [0: bb78, otherwise: bb70];
    }

    bb70: {
        StorageDead(_164);
        StorageDead(_154);
        StorageLive(_168);
        StorageLive(_169);
        StorageLive(_170);
        StorageLive(_171);
        StorageLive(_172);
        StorageLive(_173);
        StorageLive(_174);
        StorageLive(_175);
        StorageLive(_176);
        StorageLive(_177);
        StorageLive(_178);
        _260 = const _;
        _178 = &(*_260);
        _177 = &(*_178);
        _176 = move _177 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_177);
        StorageLive(_180);
        StorageLive(_181);
        StorageLive(_182);
        StorageLive(_183);
        StorageLive(_184);
        StorageLive(_185);
        StorageLive(_186);
        _259 = const _;
        _186 = &(*_259);
        _185 = &(*_186);
        _184 = core::fmt::rt::Argument::<'_>::new_display::<u8>(move _185) -> [return: bb71, unwind continue];
    }

    bb71: {
        StorageDead(_185);
        _183 = [move _184];
        StorageDead(_184);
        _182 = &_183;
        _181 = &(*_182);
        _180 = move _181 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_181);
        _175 = Arguments::<'_>::new_v1(move _176, move _180) -> [return: bb72, unwind continue];
    }

    bb72: {
        StorageDead(_180);
        StorageDead(_176);
        _174 = format(move _175) -> [return: bb73, unwind continue];
    }

    bb73: {
        StorageDead(_175);
        StorageDead(_186);
        StorageDead(_183);
        StorageDead(_182);
        StorageDead(_178);
        _173 = move _174;
        StorageDead(_174);
        _172 = &_173;
        _171 = &(*_172);
        _170 = <String as Deref>::deref(move _171) -> [return: bb74, unwind: bb112];
    }

    bb74: {
        _169 = &(*_170);
        StorageDead(_171);
        _168 = solana_program::log::sol_log(move _169) -> [return: bb75, unwind: bb112];
    }

    bb75: {
        StorageDead(_169);
        drop(_173) -> [return: bb76, unwind: bb114];
    }

    bb76: {
        StorageDead(_173);
        StorageDead(_172);
        StorageDead(_170);
        StorageDead(_168);
        StorageLive(_188);
        StorageLive(_189);
        _189 = LendingError::InvalidConfig;
        _188 = <LendingError as Into<ProgramError>>::into(move _189) -> [return: bb77, unwind continue];
    }

    bb77: {
        StorageDead(_189);
        _0 = Result::<(), ProgramError>::Err(move _188);
        StorageDead(_188);
        StorageDead(_153);
        StorageDead(_152);
        goto -> bb110;
    }

    bb78: {
        StorageDead(_164);
        StorageDead(_154);
        _152 = const ();
        StorageDead(_153);
        StorageDead(_152);
        StorageLive(_190);
        StorageLive(_191);
        StorageLive(_192);
        _192 = (_1.16: u8);
        _191 = Gt(move _192, const 100_u8);
        switchInt(move _191) -> [0: bb80, otherwise: bb79];
    }

    bb79: {
        StorageDead(_192);
        StorageLive(_194);
        StorageLive(_195);
        StorageLive(_196);
        _196 = const "Protocol take rate must be in range [0, 100]";
        _195 = &(*_196);
        _194 = solana_program::log::sol_log(move _195) -> [return: bb81, unwind continue];
    }

    bb80: {
        StorageDead(_192);
        _190 = const ();
        StorageDead(_191);
        StorageDead(_190);
        StorageLive(_199);
        StorageLive(_200);
        StorageLive(_201);
        _201 = &(_1.18: state::reserve::ReserveType);
        StorageLive(_202);
        _264 = const _;
        _202 = &(*_264);
        _200 = <reserve::ReserveType as PartialEq>::eq(move _201, move _202) -> [return: bb83, unwind continue];
    }

    bb81: {
        StorageDead(_195);
        StorageDead(_196);
        StorageDead(_194);
        StorageLive(_197);
        StorageLive(_198);
        _198 = LendingError::InvalidConfig;
        _197 = <LendingError as Into<ProgramError>>::into(move _198) -> [return: bb82, unwind continue];
    }

    bb82: {
        StorageDead(_198);
        _0 = Result::<(), ProgramError>::Err(move _197);
        StorageDead(_197);
        StorageDead(_191);
        StorageDead(_190);
        goto -> bb110;
    }

    bb83: {
        switchInt(move _200) -> [0: bb92, otherwise: bb84];
    }

    bb84: {
        StorageDead(_202);
        StorageDead(_201);
        StorageLive(_204);
        StorageLive(_205);
        _205 = (_1.2: u8);
        _204 = Eq(move _205, const 0_u8);
        switchInt(move _204) -> [0: bb88, otherwise: bb85];
    }

    bb85: {
        StorageDead(_205);
        StorageLive(_206);
        StorageLive(_207);
        _207 = (_1.5: u8);
        _206 = Eq(move _207, const 0_u8);
        switchInt(move _206) -> [0: bb87, otherwise: bb86];
    }

    bb86: {
        StorageDead(_207);
        goto -> bb93;
    }

    bb87: {
        StorageDead(_207);
        goto -> bb89;
    }

    bb88: {
        StorageDead(_205);
        goto -> bb89;
    }

    bb89: {
        StorageLive(_209);
        StorageLive(_210);
        StorageLive(_211);
        _211 = const "open/close LTV must be 0 for isolated reserves";
        _210 = &(*_211);
        _209 = solana_program::log::sol_log(move _210) -> [return: bb90, unwind continue];
    }

    bb90: {
        StorageDead(_210);
        StorageDead(_211);
        StorageDead(_209);
        StorageLive(_212);
        StorageLive(_213);
        _213 = LendingError::InvalidConfig;
        _212 = <LendingError as Into<ProgramError>>::into(move _213) -> [return: bb91, unwind continue];
    }

    bb91: {
        StorageDead(_213);
        _0 = Result::<(), ProgramError>::Err(move _212);
        StorageDead(_212);
        StorageDead(_206);
        StorageDead(_204);
        StorageDead(_200);
        StorageDead(_199);
        goto -> bb110;
    }

    bb92: {
        StorageDead(_202);
        StorageDead(_201);
        goto -> bb93;
    }

    bb93: {
        _199 = const ();
        StorageDead(_206);
        StorageDead(_204);
        StorageDead(_200);
        StorageDead(_199);
        StorageLive(_214);
        StorageLive(_215);
        StorageLive(_216);
        _216 = (_1.19: i64);
        _215 = Lt(move _216, const _);
        switchInt(move _215) -> [0: bb95, otherwise: bb94];
    }

    bb94: {
        StorageDead(_216);
        goto -> bb96;
    }

    bb95: {
        StorageDead(_216);
        StorageLive(_217);
        StorageLive(_218);
        _218 = (_1.19: i64);
        _217 = Gt(move _218, const _);
        switchInt(move _217) -> [0: bb97, otherwise: bb96];
    }

    bb96: {
        StorageDead(_218);
        StorageLive(_220);
        StorageLive(_221);
        StorageLive(_222);
        StorageLive(_223);
        StorageLive(_224);
        StorageLive(_225);
        StorageLive(_226);
        StorageLive(_227);
        StorageLive(_228);
        StorageLive(_229);
        StorageLive(_230);
        _263 = const _;
        _230 = &(*_263);
        _229 = &(*_230);
        _228 = move _229 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_229);
        StorageLive(_232);
        StorageLive(_233);
        StorageLive(_234);
        StorageLive(_235);
        StorageLive(_236);
        StorageLive(_237);
        StorageLive(_238);
        _262 = const _;
        _238 = &(*_262);
        _237 = &(*_238);
        _236 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _237) -> [return: bb98, unwind continue];
    }

    bb97: {
        StorageDead(_218);
        _214 = const ();
        StorageDead(_217);
        StorageDead(_215);
        StorageDead(_214);
        StorageLive(_246);
        StorageLive(_247);
        StorageLive(_248);
        _248 = (_1.21: u64);
        StorageLive(_249);
        _249 = (_1.22: u64);
        _247 = Gt(move _248, move _249);
        switchInt(move _247) -> [0: bb107, otherwise: bb106];
    }

    bb98: {
        StorageDead(_237);
        StorageLive(_240);
        StorageLive(_241);
        StorageLive(_242);
        _261 = const _;
        _242 = &(*_261);
        _241 = &(*_242);
        _240 = core::fmt::rt::Argument::<'_>::new_display::<i64>(move _241) -> [return: bb99, unwind continue];
    }

    bb99: {
        StorageDead(_241);
        _235 = [move _236, move _240];
        StorageDead(_240);
        StorageDead(_236);
        _234 = &_235;
        _233 = &(*_234);
        _232 = move _233 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_233);
        _227 = Arguments::<'_>::new_v1(move _228, move _232) -> [return: bb100, unwind continue];
    }

    bb100: {
        StorageDead(_232);
        StorageDead(_228);
        _226 = format(move _227) -> [return: bb101, unwind continue];
    }

    bb101: {
        StorageDead(_227);
        StorageDead(_242);
        StorageDead(_238);
        StorageDead(_235);
        StorageDead(_234);
        StorageDead(_230);
        _225 = move _226;
        StorageDead(_226);
        _224 = &_225;
        _223 = &(*_224);
        _222 = <String as Deref>::deref(move _223) -> [return: bb102, unwind: bb111];
    }

    bb102: {
        _221 = &(*_222);
        StorageDead(_223);
        _220 = solana_program::log::sol_log(move _221) -> [return: bb103, unwind: bb111];
    }

    bb103: {
        StorageDead(_221);
        drop(_225) -> [return: bb104, unwind: bb114];
    }

    bb104: {
        StorageDead(_225);
        StorageDead(_224);
        StorageDead(_222);
        StorageDead(_220);
        StorageLive(_244);
        StorageLive(_245);
        _245 = LendingError::InvalidConfig;
        _244 = <LendingError as Into<ProgramError>>::into(move _245) -> [return: bb105, unwind continue];
    }

    bb105: {
        StorageDead(_245);
        _0 = Result::<(), ProgramError>::Err(move _244);
        StorageDead(_244);
        StorageDead(_217);
        StorageDead(_215);
        StorageDead(_214);
        goto -> bb110;
    }

    bb106: {
        StorageDead(_249);
        StorageDead(_248);
        StorageLive(_251);
        StorageLive(_252);
        StorageLive(_253);
        _253 = const "open attributed borrow limit must be <= close attributed borrow limit";
        _252 = &(*_253);
        _251 = solana_program::log::sol_log(move _252) -> [return: bb108, unwind continue];
    }

    bb107: {
        StorageDead(_249);
        StorageDead(_248);
        _246 = const ();
        StorageDead(_247);
        StorageDead(_246);
        StorageLive(_256);
        _256 = ();
        _0 = Result::<(), ProgramError>::Ok(move _256);
        StorageDead(_256);
        goto -> bb110;
    }

    bb108: {
        StorageDead(_252);
        StorageDead(_253);
        StorageDead(_251);
        StorageLive(_254);
        StorageLive(_255);
        _255 = LendingError::InvalidConfig;
        _254 = <LendingError as Into<ProgramError>>::into(move _255) -> [return: bb109, unwind continue];
    }

    bb109: {
        StorageDead(_255);
        _0 = Result::<(), ProgramError>::Err(move _254);
        StorageDead(_254);
        StorageDead(_247);
        StorageDead(_246);
        goto -> bb110;
    }

    bb110: {
        return;
    }

    bb111 (cleanup): {
        drop(_225) -> [return: bb114, unwind terminate(cleanup)];
    }

    bb112 (cleanup): {
        drop(_173) -> [return: bb114, unwind terminate(cleanup)];
    }

    bb113 (cleanup): {
        drop(_135) -> [return: bb114, unwind terminate(cleanup)];
    }

    bb114 (cleanup): {
        resume;
    }
}
