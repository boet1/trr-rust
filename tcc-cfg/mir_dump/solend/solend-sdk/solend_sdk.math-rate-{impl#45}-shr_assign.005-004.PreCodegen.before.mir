// MIR for `rate::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1627:3: 1627:74>::shr_assign` before PreCodegen

fn rate::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1627:3: 1627:74>::shr_assign(_1: &mut U128, _2: T) -> () {
    debug self => _1;
    debug shift => _2;
    let mut _0: ();
    let mut _3: math::rate::U128;
    let mut _4: math::rate::U128;
    let mut _5: T;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = (*_1);
        StorageLive(_5);
        _5 = move _2;
        _3 = <U128 as Shr<T>>::shr(move _4, move _5) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        (*_1) = move _3;
        StorageDead(_3);
        _0 = const ();
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
