// MIR for `liquidate_obligation_and_redeem_reserve_collateral` before PreCodegen

fn liquidate_obligation_and_redeem_reserve_collateral(_1: Pubkey, _2: u64, _3: Pubkey, _4: Pubkey, _5: Pubkey, _6: Pubkey, _7: Pubkey, _8: Pubkey, _9: Pubkey, _10: Pubkey, _11: Pubkey, _12: Pubkey, _13: Pubkey, _14: Pubkey, _15: Pubkey) -> Instruction {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug source_liquidity_pubkey => _3;
    debug destination_collateral_pubkey => _4;
    debug destination_liquidity_pubkey => _5;
    debug repay_reserve_pubkey => _6;
    debug repay_reserve_liquidity_supply_pubkey => _7;
    debug withdraw_reserve_pubkey => _8;
    debug withdraw_reserve_collateral_mint_pubkey => _9;
    debug withdraw_reserve_collateral_supply_pubkey => _10;
    debug withdraw_reserve_liquidity_supply_pubkey => _11;
    debug withdraw_reserve_liquidity_fee_receiver_pubkey => _12;
    debug obligation_pubkey => _13;
    debug lending_market_pubkey => _14;
    debug user_transfer_authority_pubkey => _15;
    let mut _0: solana_program::instruction::Instruction;
    let _16: solana_program::pubkey::Pubkey;
    let _17: u8;
    let mut _18: (solana_program::pubkey::Pubkey, u8);
    let mut _19: &[&[u8]];
    let mut _20: &[&[u8]; 1];
    let _21: &[&[u8]; 1];
    let _22: [&[u8]; 1];
    let mut _23: &[u8];
    let _24: &[u8];
    let _25: &[u8];
    let mut _26: &[u8; 32];
    let _27: [u8; 32];
    let mut _28: solana_program::pubkey::Pubkey;
    let mut _29: std::ops::RangeTo<usize>;
    let mut _30: &solana_program::pubkey::Pubkey;
    let _31: &solana_program::pubkey::Pubkey;
    let mut _32: solana_program::pubkey::Pubkey;
    let mut _33: std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _34: std::boxed::Box<[solana_program::instruction::AccountMeta]>;
    let mut _35: std::boxed::Box<[solana_program::instruction::AccountMeta; 15]>;
    let mut _36: usize;
    let mut _37: usize;
    let mut _38: *mut u8;
    let mut _39: std::boxed::Box<[solana_program::instruction::AccountMeta; 15]>;
    let mut _40: solana_program::instruction::AccountMeta;
    let mut _41: solana_program::pubkey::Pubkey;
    let mut _42: solana_program::instruction::AccountMeta;
    let mut _43: solana_program::pubkey::Pubkey;
    let mut _44: solana_program::instruction::AccountMeta;
    let mut _45: solana_program::pubkey::Pubkey;
    let mut _46: solana_program::instruction::AccountMeta;
    let mut _47: solana_program::pubkey::Pubkey;
    let mut _48: solana_program::instruction::AccountMeta;
    let mut _49: solana_program::pubkey::Pubkey;
    let mut _50: solana_program::instruction::AccountMeta;
    let mut _51: solana_program::pubkey::Pubkey;
    let mut _52: solana_program::instruction::AccountMeta;
    let mut _53: solana_program::pubkey::Pubkey;
    let mut _54: solana_program::instruction::AccountMeta;
    let mut _55: solana_program::pubkey::Pubkey;
    let mut _56: solana_program::instruction::AccountMeta;
    let mut _57: solana_program::pubkey::Pubkey;
    let mut _58: solana_program::instruction::AccountMeta;
    let mut _59: solana_program::pubkey::Pubkey;
    let mut _60: solana_program::instruction::AccountMeta;
    let mut _61: solana_program::pubkey::Pubkey;
    let mut _62: solana_program::instruction::AccountMeta;
    let mut _63: solana_program::pubkey::Pubkey;
    let mut _64: solana_program::instruction::AccountMeta;
    let mut _65: solana_program::pubkey::Pubkey;
    let mut _66: solana_program::instruction::AccountMeta;
    let mut _67: solana_program::pubkey::Pubkey;
    let mut _68: solana_program::instruction::AccountMeta;
    let mut _69: solana_program::pubkey::Pubkey;
    let mut _70: std::vec::Vec<u8>;
    let mut _71: &instruction::LendingInstruction;
    let _72: instruction::LendingInstruction;
    let mut _73: u64;
    let mut _74: *const [solana_program::instruction::AccountMeta; 15];
    scope 1 {
        debug lending_market_authority_pubkey => _16;
        debug _bump_seed => _17;
        let mut _75: *const ();
        let mut _76: usize;
        let mut _77: usize;
        let mut _78: usize;
        let mut _79: usize;
        let mut _80: bool;
        scope 2 {
        }
    }

    bb0: {
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = _14;
        _27 = Pubkey::to_bytes(move _28) -> [return: bb1, unwind continue];
    }

    bb1: {
        _26 = &_27;
        StorageDead(_28);
        StorageLive(_29);
        _29 = RangeTo::<usize> { end: const _ };
        _25 = <[u8; 32] as Index<RangeTo<usize>>>::index(move _26, move _29) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_29);
        StorageDead(_26);
        _24 = &(*_25);
        _23 = &(*_24);
        _22 = [move _23];
        StorageDead(_23);
        _21 = &_22;
        _20 = &(*_21);
        _19 = move _20 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_20);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &_1;
        _30 = &(*_31);
        _18 = Pubkey::find_program_address(move _19, move _30) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_30);
        StorageDead(_19);
        StorageLive(_16);
        _16 = (_18.0: solana_program::pubkey::Pubkey);
        StorageLive(_17);
        _17 = (_18.1: u8);
        StorageDead(_31);
        StorageDead(_27);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_18);
        StorageLive(_32);
        _32 = _1;
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        _36 = SizeOf([solana_program::instruction::AccountMeta; 15]);
        _37 = AlignOf([solana_program::instruction::AccountMeta; 15]);
        _38 = alloc::alloc::exchange_malloc(move _36, move _37) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_39);
        _39 = ShallowInitBox(move _38, [solana_program::instruction::AccountMeta; 15]);
        StorageLive(_40);
        StorageLive(_41);
        _41 = _3;
        _40 = AccountMeta::new(move _41, const false) -> [return: bb5, unwind: bb24];
    }

    bb5: {
        StorageDead(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = _4;
        _42 = AccountMeta::new(move _43, const false) -> [return: bb6, unwind: bb24];
    }

    bb6: {
        StorageDead(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = _5;
        _44 = AccountMeta::new(move _45, const false) -> [return: bb7, unwind: bb24];
    }

    bb7: {
        StorageDead(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = _6;
        _46 = AccountMeta::new(move _47, const false) -> [return: bb8, unwind: bb24];
    }

    bb8: {
        StorageDead(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = _7;
        _48 = AccountMeta::new(move _49, const false) -> [return: bb9, unwind: bb24];
    }

    bb9: {
        StorageDead(_49);
        StorageLive(_50);
        StorageLive(_51);
        _51 = _8;
        _50 = AccountMeta::new(move _51, const false) -> [return: bb10, unwind: bb24];
    }

    bb10: {
        StorageDead(_51);
        StorageLive(_52);
        StorageLive(_53);
        _53 = _9;
        _52 = AccountMeta::new(move _53, const false) -> [return: bb11, unwind: bb24];
    }

    bb11: {
        StorageDead(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = _10;
        _54 = AccountMeta::new(move _55, const false) -> [return: bb12, unwind: bb24];
    }

    bb12: {
        StorageDead(_55);
        StorageLive(_56);
        StorageLive(_57);
        _57 = _11;
        _56 = AccountMeta::new(move _57, const false) -> [return: bb13, unwind: bb24];
    }

    bb13: {
        StorageDead(_57);
        StorageLive(_58);
        StorageLive(_59);
        _59 = _12;
        _58 = AccountMeta::new(move _59, const false) -> [return: bb14, unwind: bb24];
    }

    bb14: {
        StorageDead(_59);
        StorageLive(_60);
        StorageLive(_61);
        _61 = _13;
        _60 = AccountMeta::new(move _61, const false) -> [return: bb15, unwind: bb24];
    }

    bb15: {
        StorageDead(_61);
        StorageLive(_62);
        StorageLive(_63);
        _63 = _14;
        _62 = AccountMeta::new(move _63, const false) -> [return: bb16, unwind: bb24];
    }

    bb16: {
        StorageDead(_63);
        StorageLive(_64);
        StorageLive(_65);
        _65 = _16;
        _64 = AccountMeta::new_readonly(move _65, const false) -> [return: bb17, unwind: bb24];
    }

    bb17: {
        StorageDead(_65);
        StorageLive(_66);
        StorageLive(_67);
        _67 = _15;
        _66 = AccountMeta::new_readonly(move _67, const true) -> [return: bb18, unwind: bb24];
    }

    bb18: {
        StorageDead(_67);
        StorageLive(_68);
        StorageLive(_69);
        _69 = spl_token::id() -> [return: bb19, unwind: bb24];
    }

    bb19: {
        _68 = AccountMeta::new_readonly(move _69, const false) -> [return: bb20, unwind: bb24];
    }

    bb20: {
        StorageDead(_69);
        _74 = (((_39.0: std::ptr::Unique<[solana_program::instruction::AccountMeta; 15]>).0: std::ptr::NonNull<[solana_program::instruction::AccountMeta; 15]>).0: *const [solana_program::instruction::AccountMeta; 15]);
        _75 = _74 as *const () (PtrToPtr);
        _76 = _75 as usize (Transmute);
        _77 = AlignOf([solana_program::instruction::AccountMeta; 15]);
        _78 = Sub(_77, const 1_usize);
        _79 = BitAnd(_76, _78);
        _80 = Eq(_79, const 0_usize);
        assert(_80, "misaligned pointer dereference: address must be a multiple of {} but is {}", _77, _76) -> [success: bb26, unwind unreachable];
    }

    bb21: {
        StorageDead(_34);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        _73 = _2;
        _72 = LendingInstruction::LiquidateObligationAndRedeemReserveCollateral { liquidity_amount: move _73 };
        _71 = &_72;
        StorageDead(_73);
        _70 = LendingInstruction::pack(move _71) -> [return: bb22, unwind: bb23];
    }

    bb22: {
        StorageDead(_71);
        _0 = Instruction { program_id: move _32, accounts: move _33, data: move _70 };
        StorageDead(_70);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_72);
        return;
    }

    bb23 (cleanup): {
        drop(_33) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb24 (cleanup): {
        drop(_39) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb25 (cleanup): {
        resume;
    }

    bb26: {
        (*_74) = [move _40, move _42, move _44, move _46, move _48, move _50, move _52, move _54, move _56, move _58, move _60, move _62, move _64, move _66, move _68];
        StorageDead(_68);
        StorageDead(_66);
        StorageDead(_64);
        StorageDead(_62);
        StorageDead(_60);
        StorageDead(_58);
        StorageDead(_56);
        StorageDead(_54);
        StorageDead(_52);
        StorageDead(_50);
        StorageDead(_48);
        StorageDead(_46);
        StorageDead(_44);
        StorageDead(_42);
        StorageDead(_40);
        _35 = move _39;
        _34 = move _35 as std::boxed::Box<[solana_program::instruction::AccountMeta]> (PointerCoercion(Unsize));
        StorageDead(_39);
        StorageDead(_35);
        _33 = std::slice::<impl [AccountMeta]>::into_vec::<std::alloc::Global>(move _34) -> [return: bb21, unwind: bb25];
    }
}
