// MIR for `borrow_obligation_liquidity` after PreCodegen

fn borrow_obligation_liquidity(_1: Pubkey, _2: u64, _3: Pubkey, _4: Pubkey, _5: Pubkey, _6: Pubkey, _7: Pubkey, _8: Pubkey, _9: Pubkey, _10: Vec<Pubkey>, _11: Option<Pubkey>) -> Instruction {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug source_liquidity_pubkey => _3;
    debug destination_liquidity_pubkey => _4;
    debug borrow_reserve_pubkey => _5;
    debug borrow_reserve_liquidity_fee_receiver_pubkey => _6;
    debug obligation_pubkey => _7;
    debug lending_market_pubkey => _8;
    debug obligation_owner_pubkey => _9;
    debug collateral_reserves => _10;
    debug host_fee_receiver_pubkey => _11;
    let mut _0: solana_program::instruction::Instruction;
    let _12: solana_program::pubkey::Pubkey;
    let _13: u8;
    let mut _14: (solana_program::pubkey::Pubkey, u8);
    let mut _15: &[&[u8]];
    let mut _16: &[&[u8]; 1];
    let _17: &[&[u8]; 1];
    let _18: [&[u8]; 1];
    let mut _19: &[u8];
    let _20: &[u8];
    let _21: &[u8];
    let mut _22: &[u8; 32];
    let _23: [u8; 32];
    let mut _24: solana_program::pubkey::Pubkey;
    let mut _25: std::ops::RangeTo<usize>;
    let mut _26: &solana_program::pubkey::Pubkey;
    let _27: &solana_program::pubkey::Pubkey;
    let mut _29: std::boxed::Box<[solana_program::instruction::AccountMeta]>;
    let mut _30: std::boxed::Box<[solana_program::instruction::AccountMeta; 9]>;
    let mut _31: usize;
    let mut _32: usize;
    let mut _33: *mut u8;
    let mut _34: std::boxed::Box<[solana_program::instruction::AccountMeta; 9]>;
    let mut _35: solana_program::instruction::AccountMeta;
    let mut _36: solana_program::pubkey::Pubkey;
    let mut _37: solana_program::instruction::AccountMeta;
    let mut _38: solana_program::pubkey::Pubkey;
    let mut _39: solana_program::instruction::AccountMeta;
    let mut _40: solana_program::pubkey::Pubkey;
    let mut _41: solana_program::instruction::AccountMeta;
    let mut _42: solana_program::pubkey::Pubkey;
    let mut _43: solana_program::instruction::AccountMeta;
    let mut _44: solana_program::pubkey::Pubkey;
    let mut _45: solana_program::instruction::AccountMeta;
    let mut _46: solana_program::pubkey::Pubkey;
    let mut _47: solana_program::instruction::AccountMeta;
    let mut _48: solana_program::pubkey::Pubkey;
    let mut _49: solana_program::instruction::AccountMeta;
    let mut _50: solana_program::pubkey::Pubkey;
    let mut _51: solana_program::instruction::AccountMeta;
    let mut _52: solana_program::pubkey::Pubkey;
    let _53: ();
    let mut _54: std::vec::IntoIter<solana_program::pubkey::Pubkey>;
    let mut _55: std::vec::Vec<solana_program::pubkey::Pubkey>;
    let mut _57: ();
    let _58: ();
    let mut _59: std::option::Option<solana_program::pubkey::Pubkey>;
    let mut _60: &mut std::vec::IntoIter<solana_program::pubkey::Pubkey>;
    let mut _61: &mut std::vec::IntoIter<solana_program::pubkey::Pubkey>;
    let mut _62: isize;
    let mut _63: !;
    let _65: ();
    let mut _66: &mut std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _67: solana_program::instruction::AccountMeta;
    let mut _68: solana_program::pubkey::Pubkey;
    let _69: ();
    let mut _70: isize;
    let _72: ();
    let mut _73: &mut std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _74: solana_program::instruction::AccountMeta;
    let mut _75: solana_program::pubkey::Pubkey;
    let mut _76: solana_program::pubkey::Pubkey;
    let mut _77: std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _78: std::vec::Vec<u8>;
    let mut _79: &instruction::LendingInstruction;
    let _80: instruction::LendingInstruction;
    let mut _81: u64;
    let mut _82: bool;
    let mut _83: bool;
    let mut _84: *const [solana_program::instruction::AccountMeta; 9];
    scope 1 {
        debug lending_market_authority_pubkey => _12;
        debug _bump_seed => _13;
        let mut _28: std::vec::Vec<solana_program::instruction::AccountMeta>;
        let mut _85: *const ();
        let mut _86: usize;
        let mut _87: usize;
        let mut _88: usize;
        let mut _89: usize;
        let mut _90: bool;
        scope 2 {
            debug accounts => _28;
            let mut _56: std::vec::IntoIter<solana_program::pubkey::Pubkey>;
            scope 4 {
                debug iter => _56;
                let _64: solana_program::pubkey::Pubkey;
                scope 5 {
                    debug collateral_reserve => _64;
                }
            }
            scope 6 {
                debug host_fee_receiver_pubkey => _71;
                let _71: solana_program::pubkey::Pubkey;
            }
        }
        scope 3 {
        }
    }

    bb0: {
        _83 = const false;
        _82 = const false;
        _83 = const true;
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        _24 = _8;
        _23 = Pubkey::to_bytes(move _24) -> [return: bb1, unwind: bb38];
    }

    bb1: {
        _22 = &_23;
        StorageDead(_24);
        StorageLive(_25);
        _25 = RangeTo::<usize> { end: const _ };
        _21 = <[u8; 32] as Index<RangeTo<usize>>>::index(move _22, move _25) -> [return: bb2, unwind: bb38];
    }

    bb2: {
        StorageDead(_25);
        StorageDead(_22);
        _20 = &(*_21);
        _19 = &(*_20);
        _18 = [move _19];
        StorageDead(_19);
        _17 = &_18;
        _16 = &(*_17);
        _15 = move _16 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_16);
        StorageLive(_26);
        StorageLive(_27);
        _27 = &_1;
        _26 = &(*_27);
        _14 = Pubkey::find_program_address(move _15, move _26) -> [return: bb3, unwind: bb38];
    }

    bb3: {
        StorageDead(_26);
        StorageDead(_15);
        StorageLive(_12);
        _12 = (_14.0: solana_program::pubkey::Pubkey);
        StorageLive(_13);
        _13 = (_14.1: u8);
        StorageDead(_27);
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_14);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _31 = SizeOf([solana_program::instruction::AccountMeta; 9]);
        _32 = AlignOf([solana_program::instruction::AccountMeta; 9]);
        _33 = alloc::alloc::exchange_malloc(move _31, move _32) -> [return: bb4, unwind: bb38];
    }

    bb4: {
        StorageLive(_34);
        _34 = ShallowInitBox(move _33, [solana_program::instruction::AccountMeta; 9]);
        StorageLive(_35);
        StorageLive(_36);
        _36 = _3;
        _35 = AccountMeta::new(move _36, const false) -> [return: bb5, unwind: bb33];
    }

    bb5: {
        StorageDead(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = _4;
        _37 = AccountMeta::new(move _38, const false) -> [return: bb6, unwind: bb33];
    }

    bb6: {
        StorageDead(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = _5;
        _39 = AccountMeta::new(move _40, const false) -> [return: bb7, unwind: bb33];
    }

    bb7: {
        StorageDead(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = _6;
        _41 = AccountMeta::new(move _42, const false) -> [return: bb8, unwind: bb33];
    }

    bb8: {
        StorageDead(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = _7;
        _43 = AccountMeta::new(move _44, const false) -> [return: bb9, unwind: bb33];
    }

    bb9: {
        StorageDead(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = _8;
        _45 = AccountMeta::new(move _46, const false) -> [return: bb10, unwind: bb33];
    }

    bb10: {
        StorageDead(_46);
        StorageLive(_47);
        StorageLive(_48);
        _48 = _12;
        _47 = AccountMeta::new_readonly(move _48, const false) -> [return: bb11, unwind: bb33];
    }

    bb11: {
        StorageDead(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = _9;
        _49 = AccountMeta::new_readonly(move _50, const true) -> [return: bb12, unwind: bb33];
    }

    bb12: {
        StorageDead(_50);
        StorageLive(_51);
        StorageLive(_52);
        _52 = spl_token::id() -> [return: bb13, unwind: bb33];
    }

    bb13: {
        _51 = AccountMeta::new_readonly(move _52, const false) -> [return: bb14, unwind: bb33];
    }

    bb14: {
        StorageDead(_52);
        _84 = (((_34.0: std::ptr::Unique<[solana_program::instruction::AccountMeta; 9]>).0: std::ptr::NonNull<[solana_program::instruction::AccountMeta; 9]>).0: *const [solana_program::instruction::AccountMeta; 9]);
        _85 = _84 as *const () (PtrToPtr);
        _86 = _85 as usize (Transmute);
        _87 = AlignOf([solana_program::instruction::AccountMeta; 9]);
        _88 = Sub(_87, const 1_usize);
        _89 = BitAnd(_86, _88);
        _90 = Eq(_89, const 0_usize);
        assert(_90, "misaligned pointer dereference: address must be a multiple of {} but is {}", _87, _86) -> [success: bb39, unwind unreachable];
    }

    bb15: {
        _82 = const true;
        StorageDead(_29);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        _83 = const false;
        _55 = move _10;
        _54 = <Vec<Pubkey> as IntoIterator>::into_iter(move _55) -> [return: bb16, unwind: bb36];
    }

    bb16: {
        StorageDead(_55);
        StorageLive(_56);
        _56 = move _54;
        goto -> bb17;
    }

    bb17: {
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        _61 = &mut _56;
        _60 = &mut (*_61);
        _59 = <std::vec::IntoIter<Pubkey> as Iterator>::next(move _60) -> [return: bb18, unwind: bb32];
    }

    bb18: {
        StorageDead(_60);
        _62 = discriminant(_59);
        switchInt(move _62) -> [0: bb21, 1: bb19, otherwise: bb20];
    }

    bb19: {
        StorageLive(_64);
        _64 = ((_59 as Some).0: solana_program::pubkey::Pubkey);
        StorageLive(_65);
        StorageLive(_66);
        _66 = &mut _28;
        StorageLive(_67);
        StorageLive(_68);
        _68 = _64;
        _67 = AccountMeta::new(move _68, const false) -> [return: bb22, unwind: bb32];
    }

    bb20: {
        unreachable;
    }

    bb21: {
        _53 = const ();
        StorageDead(_61);
        StorageDead(_59);
        StorageDead(_58);
        drop(_56) -> [return: bb24, unwind: bb36];
    }

    bb22: {
        StorageDead(_68);
        _65 = Vec::<AccountMeta>::push(move _66, move _67) -> [return: bb23, unwind: bb32];
    }

    bb23: {
        StorageDead(_67);
        StorageDead(_66);
        StorageDead(_65);
        _58 = const ();
        StorageDead(_64);
        StorageDead(_61);
        StorageDead(_59);
        StorageDead(_58);
        _57 = const ();
        goto -> bb17;
    }

    bb24: {
        StorageDead(_56);
        StorageDead(_54);
        StorageDead(_53);
        StorageLive(_69);
        _70 = discriminant(_11);
        switchInt(move _70) -> [1: bb25, otherwise: bb28];
    }

    bb25: {
        StorageLive(_71);
        _71 = ((_11 as Some).0: solana_program::pubkey::Pubkey);
        StorageLive(_72);
        StorageLive(_73);
        _73 = &mut _28;
        StorageLive(_74);
        StorageLive(_75);
        _75 = _71;
        _74 = AccountMeta::new(move _75, const false) -> [return: bb26, unwind: bb36];
    }

    bb26: {
        StorageDead(_75);
        _72 = Vec::<AccountMeta>::push(move _73, move _74) -> [return: bb27, unwind: bb36];
    }

    bb27: {
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_72);
        _69 = const ();
        StorageDead(_71);
        goto -> bb29;
    }

    bb28: {
        _69 = const ();
        goto -> bb29;
    }

    bb29: {
        StorageDead(_69);
        StorageLive(_76);
        _76 = _1;
        StorageLive(_77);
        _82 = const false;
        _77 = move _28;
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        _81 = _2;
        _80 = LendingInstruction::BorrowObligationLiquidity { liquidity_amount: move _81 };
        _79 = &_80;
        StorageDead(_81);
        _78 = LendingInstruction::pack(move _79) -> [return: bb30, unwind: bb31];
    }

    bb30: {
        StorageDead(_79);
        _0 = Instruction { program_id: move _76, accounts: move _77, data: move _78 };
        StorageDead(_78);
        StorageDead(_77);
        StorageDead(_76);
        _82 = const false;
        StorageDead(_28);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_80);
        return;
    }

    bb31 (cleanup): {
        drop(_77) -> [return: bb36, unwind terminate(cleanup)];
    }

    bb32 (cleanup): {
        drop(_56) -> [return: bb36, unwind terminate(cleanup)];
    }

    bb33 (cleanup): {
        drop(_34) -> [return: bb38, unwind terminate(cleanup)];
    }

    bb34 (cleanup): {
        resume;
    }

    bb35 (cleanup): {
        drop(_28) -> [return: bb38, unwind terminate(cleanup)];
    }

    bb36 (cleanup): {
        switchInt(_82) -> [0: bb38, otherwise: bb35];
    }

    bb37 (cleanup): {
        drop(_10) -> [return: bb34, unwind terminate(cleanup)];
    }

    bb38 (cleanup): {
        switchInt(_83) -> [0: bb34, otherwise: bb37];
    }

    bb39: {
        (*_84) = [move _35, move _37, move _39, move _41, move _43, move _45, move _47, move _49, move _51];
        StorageDead(_51);
        StorageDead(_49);
        StorageDead(_47);
        StorageDead(_45);
        StorageDead(_43);
        StorageDead(_41);
        StorageDead(_39);
        StorageDead(_37);
        StorageDead(_35);
        _30 = move _34;
        _29 = move _30 as std::boxed::Box<[solana_program::instruction::AccountMeta]> (PointerCoercion(Unsize));
        StorageDead(_34);
        StorageDead(_30);
        _28 = std::slice::<impl [AccountMeta]>::into_vec::<std::alloc::Global>(move _29) -> [return: bb15, unwind: bb38];
    }
}
