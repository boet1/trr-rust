// MIR for `error::<impl at token-lending\sdk\src\error.rs:10:28: 10:33>::fmt` after PreCodegen

fn error::<impl at token-lending\sdk\src\error.rs:10:28: 10:33>::fmt(_1: &LendingError, _2: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    debug self => _1;
    debug __formatter => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: isize;
    let mut _4: &mut std::fmt::Formatter<'_>;
    let mut _5: &str;
    let _6: &str;
    let mut _7: &mut std::fmt::Formatter<'_>;
    let mut _8: &str;
    let _9: &str;
    let mut _10: &mut std::fmt::Formatter<'_>;
    let mut _11: &str;
    let _12: &str;
    let mut _13: &mut std::fmt::Formatter<'_>;
    let mut _14: &str;
    let _15: &str;
    let mut _16: &mut std::fmt::Formatter<'_>;
    let mut _17: &str;
    let _18: &str;
    let mut _19: &mut std::fmt::Formatter<'_>;
    let mut _20: &str;
    let _21: &str;
    let mut _22: &mut std::fmt::Formatter<'_>;
    let mut _23: &str;
    let _24: &str;
    let mut _25: &mut std::fmt::Formatter<'_>;
    let mut _26: &str;
    let _27: &str;
    let mut _28: &mut std::fmt::Formatter<'_>;
    let mut _29: &str;
    let _30: &str;
    let mut _31: &mut std::fmt::Formatter<'_>;
    let mut _32: &str;
    let _33: &str;
    let mut _34: &mut std::fmt::Formatter<'_>;
    let mut _35: &str;
    let _36: &str;
    let mut _37: &mut std::fmt::Formatter<'_>;
    let mut _38: &str;
    let _39: &str;
    let mut _40: &mut std::fmt::Formatter<'_>;
    let mut _41: &str;
    let _42: &str;
    let mut _43: &mut std::fmt::Formatter<'_>;
    let mut _44: &str;
    let _45: &str;
    let mut _46: &mut std::fmt::Formatter<'_>;
    let mut _47: &str;
    let _48: &str;
    let mut _49: &mut std::fmt::Formatter<'_>;
    let mut _50: &str;
    let _51: &str;
    let mut _52: &mut std::fmt::Formatter<'_>;
    let mut _53: &str;
    let _54: &str;
    let mut _55: &mut std::fmt::Formatter<'_>;
    let mut _56: &str;
    let _57: &str;
    let mut _58: &mut std::fmt::Formatter<'_>;
    let mut _59: &str;
    let _60: &str;
    let mut _61: &mut std::fmt::Formatter<'_>;
    let mut _62: &str;
    let _63: &str;
    let mut _64: &mut std::fmt::Formatter<'_>;
    let mut _65: &str;
    let _66: &str;
    let mut _67: &mut std::fmt::Formatter<'_>;
    let mut _68: &str;
    let _69: &str;
    let mut _70: &mut std::fmt::Formatter<'_>;
    let mut _71: &str;
    let _72: &str;
    let mut _73: &mut std::fmt::Formatter<'_>;
    let mut _74: &str;
    let _75: &str;
    let mut _76: &mut std::fmt::Formatter<'_>;
    let mut _77: &str;
    let _78: &str;
    let mut _79: &mut std::fmt::Formatter<'_>;
    let mut _80: &str;
    let _81: &str;
    let mut _82: &mut std::fmt::Formatter<'_>;
    let mut _83: &str;
    let _84: &str;
    let mut _85: &mut std::fmt::Formatter<'_>;
    let mut _86: &str;
    let _87: &str;
    let mut _88: &mut std::fmt::Formatter<'_>;
    let mut _89: &str;
    let _90: &str;
    let mut _91: &mut std::fmt::Formatter<'_>;
    let mut _92: &str;
    let _93: &str;
    let mut _94: &mut std::fmt::Formatter<'_>;
    let mut _95: &str;
    let _96: &str;
    let mut _97: &mut std::fmt::Formatter<'_>;
    let mut _98: &str;
    let _99: &str;
    let mut _100: &mut std::fmt::Formatter<'_>;
    let mut _101: &str;
    let _102: &str;
    let mut _103: &mut std::fmt::Formatter<'_>;
    let mut _104: &str;
    let _105: &str;
    let mut _106: &mut std::fmt::Formatter<'_>;
    let mut _107: &str;
    let _108: &str;
    let mut _109: &mut std::fmt::Formatter<'_>;
    let mut _110: &str;
    let _111: &str;
    let mut _112: &mut std::fmt::Formatter<'_>;
    let mut _113: &str;
    let _114: &str;
    let mut _115: &mut std::fmt::Formatter<'_>;
    let mut _116: &str;
    let _117: &str;
    let mut _118: &mut std::fmt::Formatter<'_>;
    let mut _119: &str;
    let _120: &str;
    let mut _121: &mut std::fmt::Formatter<'_>;
    let mut _122: &str;
    let _123: &str;
    let mut _124: &mut std::fmt::Formatter<'_>;
    let mut _125: &str;
    let _126: &str;
    let mut _127: &mut std::fmt::Formatter<'_>;
    let mut _128: &str;
    let _129: &str;
    let mut _130: &mut std::fmt::Formatter<'_>;
    let mut _131: &str;
    let _132: &str;
    let mut _133: &mut std::fmt::Formatter<'_>;
    let mut _134: &str;
    let _135: &str;
    let mut _136: &mut std::fmt::Formatter<'_>;
    let mut _137: &str;
    let _138: &str;
    let mut _139: &mut std::fmt::Formatter<'_>;
    let mut _140: &str;
    let _141: &str;
    let mut _142: &mut std::fmt::Formatter<'_>;
    let mut _143: &str;
    let _144: &str;
    let mut _145: &mut std::fmt::Formatter<'_>;
    let mut _146: &str;
    let _147: &str;
    let mut _148: &mut std::fmt::Formatter<'_>;
    let mut _149: &str;
    let _150: &str;
    let mut _151: &mut std::fmt::Formatter<'_>;
    let mut _152: &str;
    let _153: &str;
    let mut _154: &mut std::fmt::Formatter<'_>;
    let mut _155: &str;
    let _156: &str;
    let mut _157: &mut std::fmt::Formatter<'_>;
    let mut _158: &str;
    let _159: &str;
    let mut _160: &mut std::fmt::Formatter<'_>;
    let mut _161: &str;
    let _162: &str;
    let mut _163: &mut std::fmt::Formatter<'_>;
    let mut _164: &str;
    let _165: &str;
    let mut _166: &mut std::fmt::Formatter<'_>;
    let mut _167: &str;
    let _168: &str;
    let mut _169: &mut std::fmt::Formatter<'_>;
    let mut _170: &str;
    let _171: &str;
    let mut _172: &mut std::fmt::Formatter<'_>;
    let mut _173: &str;
    let _174: &str;
    let mut _175: &mut std::fmt::Formatter<'_>;
    let mut _176: &str;
    let _177: &str;
    let mut _178: &mut std::fmt::Formatter<'_>;
    let mut _179: &str;
    let _180: &str;
    scope 1 {
    }

    bb0: {
        _3 = discriminant((*_1));
        switchInt(move _3) -> [0: bb3, 1: bb5, 2: bb7, 3: bb9, 4: bb11, 5: bb13, 6: bb15, 7: bb17, 8: bb19, 9: bb21, 10: bb23, 11: bb25, 12: bb27, 13: bb29, 14: bb31, 15: bb33, 16: bb35, 17: bb37, 18: bb39, 19: bb41, 20: bb43, 21: bb45, 22: bb47, 23: bb49, 24: bb51, 25: bb53, 26: bb55, 27: bb57, 28: bb59, 29: bb61, 30: bb63, 31: bb65, 32: bb67, 33: bb69, 34: bb71, 35: bb73, 36: bb75, 37: bb77, 38: bb79, 39: bb81, 40: bb83, 41: bb85, 42: bb87, 43: bb89, 44: bb91, 45: bb93, 46: bb95, 47: bb97, 48: bb99, 49: bb101, 50: bb103, 51: bb105, 52: bb107, 53: bb109, 54: bb111, 55: bb113, 56: bb115, 57: bb117, 58: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_178);
        _178 = &mut (*_2);
        StorageLive(_179);
        StorageLive(_180);
        _180 = const "Borrow Attribution Limit Not Exceeded";
        _179 = &(*_180);
        _0 = Formatter::<'_>::write_str(move _178, move _179) -> [return: bb119, unwind continue];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_4);
        _4 = &mut (*_2);
        StorageLive(_5);
        StorageLive(_6);
        _6 = const "Failed to unpack instruction data";
        _5 = &(*_6);
        _0 = Formatter::<'_>::write_str(move _4, move _5) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb120;
    }

    bb5: {
        StorageLive(_7);
        _7 = &mut (*_2);
        StorageLive(_8);
        StorageLive(_9);
        _9 = const "Account is already initialized";
        _8 = &(*_9);
        _0 = Formatter::<'_>::write_str(move _7, move _8) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb120;
    }

    bb7: {
        StorageLive(_10);
        _10 = &mut (*_2);
        StorageLive(_11);
        StorageLive(_12);
        _12 = const "Lamport balance below rent-exempt threshold";
        _11 = &(*_12);
        _0 = Formatter::<'_>::write_str(move _10, move _11) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb120;
    }

    bb9: {
        StorageLive(_13);
        _13 = &mut (*_2);
        StorageLive(_14);
        StorageLive(_15);
        _15 = const "Market authority is invalid";
        _14 = &(*_15);
        _0 = Formatter::<'_>::write_str(move _13, move _14) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb120;
    }

    bb11: {
        StorageLive(_16);
        _16 = &mut (*_2);
        StorageLive(_17);
        StorageLive(_18);
        _18 = const "Market owner is invalid";
        _17 = &(*_18);
        _0 = Formatter::<'_>::write_str(move _16, move _17) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb120;
    }

    bb13: {
        StorageLive(_19);
        _19 = &mut (*_2);
        StorageLive(_20);
        StorageLive(_21);
        _21 = const "Input account owner is not the program address";
        _20 = &(*_21);
        _0 = Formatter::<'_>::write_str(move _19, move _20) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        goto -> bb120;
    }

    bb15: {
        StorageLive(_22);
        _22 = &mut (*_2);
        StorageLive(_23);
        StorageLive(_24);
        _24 = const "Input token account is not owned by the correct token program id";
        _23 = &(*_24);
        _0 = Formatter::<'_>::write_str(move _22, move _23) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        goto -> bb120;
    }

    bb17: {
        StorageLive(_25);
        _25 = &mut (*_2);
        StorageLive(_26);
        StorageLive(_27);
        _27 = const "Input token account is not valid";
        _26 = &(*_27);
        _0 = Formatter::<'_>::write_str(move _25, move _26) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        goto -> bb120;
    }

    bb19: {
        StorageLive(_28);
        _28 = &mut (*_2);
        StorageLive(_29);
        StorageLive(_30);
        _30 = const "Input token mint account is not valid";
        _29 = &(*_30);
        _0 = Formatter::<'_>::write_str(move _28, move _29) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        goto -> bb120;
    }

    bb21: {
        StorageLive(_31);
        _31 = &mut (*_2);
        StorageLive(_32);
        StorageLive(_33);
        _33 = const "Input token program account is not valid";
        _32 = &(*_33);
        _0 = Formatter::<'_>::write_str(move _31, move _32) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_31);
        goto -> bb120;
    }

    bb23: {
        StorageLive(_34);
        _34 = &mut (*_2);
        StorageLive(_35);
        StorageLive(_36);
        _36 = const "Input amount is invalid";
        _35 = &(*_36);
        _0 = Formatter::<'_>::write_str(move _34, move _35) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        goto -> bb120;
    }

    bb25: {
        StorageLive(_37);
        _37 = &mut (*_2);
        StorageLive(_38);
        StorageLive(_39);
        _39 = const "Input config value is invalid";
        _38 = &(*_39);
        _0 = Formatter::<'_>::write_str(move _37, move _38) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_37);
        goto -> bb120;
    }

    bb27: {
        StorageLive(_40);
        _40 = &mut (*_2);
        StorageLive(_41);
        StorageLive(_42);
        _42 = const "Input account must be a signer";
        _41 = &(*_42);
        _0 = Formatter::<'_>::write_str(move _40, move _41) -> [return: bb28, unwind continue];
    }

    bb28: {
        StorageDead(_42);
        StorageDead(_41);
        StorageDead(_40);
        goto -> bb120;
    }

    bb29: {
        StorageLive(_43);
        _43 = &mut (*_2);
        StorageLive(_44);
        StorageLive(_45);
        _45 = const "Invalid account input";
        _44 = &(*_45);
        _0 = Formatter::<'_>::write_str(move _43, move _44) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_45);
        StorageDead(_44);
        StorageDead(_43);
        goto -> bb120;
    }

    bb31: {
        StorageLive(_46);
        _46 = &mut (*_2);
        StorageLive(_47);
        StorageLive(_48);
        _48 = const "Math operation overflow";
        _47 = &(*_48);
        _0 = Formatter::<'_>::write_str(move _46, move _47) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_48);
        StorageDead(_47);
        StorageDead(_46);
        goto -> bb120;
    }

    bb33: {
        StorageLive(_49);
        _49 = &mut (*_2);
        StorageLive(_50);
        StorageLive(_51);
        _51 = const "Token initialize mint failed";
        _50 = &(*_51);
        _0 = Formatter::<'_>::write_str(move _49, move _50) -> [return: bb34, unwind continue];
    }

    bb34: {
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_49);
        goto -> bb120;
    }

    bb35: {
        StorageLive(_52);
        _52 = &mut (*_2);
        StorageLive(_53);
        StorageLive(_54);
        _54 = const "Token initialize account failed";
        _53 = &(*_54);
        _0 = Formatter::<'_>::write_str(move _52, move _53) -> [return: bb36, unwind continue];
    }

    bb36: {
        StorageDead(_54);
        StorageDead(_53);
        StorageDead(_52);
        goto -> bb120;
    }

    bb37: {
        StorageLive(_55);
        _55 = &mut (*_2);
        StorageLive(_56);
        StorageLive(_57);
        _57 = const "Token transfer failed";
        _56 = &(*_57);
        _0 = Formatter::<'_>::write_str(move _55, move _56) -> [return: bb38, unwind continue];
    }

    bb38: {
        StorageDead(_57);
        StorageDead(_56);
        StorageDead(_55);
        goto -> bb120;
    }

    bb39: {
        StorageLive(_58);
        _58 = &mut (*_2);
        StorageLive(_59);
        StorageLive(_60);
        _60 = const "Token mint to failed";
        _59 = &(*_60);
        _0 = Formatter::<'_>::write_str(move _58, move _59) -> [return: bb40, unwind continue];
    }

    bb40: {
        StorageDead(_60);
        StorageDead(_59);
        StorageDead(_58);
        goto -> bb120;
    }

    bb41: {
        StorageLive(_61);
        _61 = &mut (*_2);
        StorageLive(_62);
        StorageLive(_63);
        _63 = const "Token burn failed";
        _62 = &(*_63);
        _0 = Formatter::<'_>::write_str(move _61, move _62) -> [return: bb42, unwind continue];
    }

    bb42: {
        StorageDead(_63);
        StorageDead(_62);
        StorageDead(_61);
        goto -> bb120;
    }

    bb43: {
        StorageLive(_64);
        _64 = &mut (*_2);
        StorageLive(_65);
        StorageLive(_66);
        _66 = const "Insufficient liquidity available";
        _65 = &(*_66);
        _0 = Formatter::<'_>::write_str(move _64, move _65) -> [return: bb44, unwind continue];
    }

    bb44: {
        StorageDead(_66);
        StorageDead(_65);
        StorageDead(_64);
        goto -> bb120;
    }

    bb45: {
        StorageLive(_67);
        _67 = &mut (*_2);
        StorageLive(_68);
        StorageLive(_69);
        _69 = const "Input reserve has collateral disabled";
        _68 = &(*_69);
        _0 = Formatter::<'_>::write_str(move _67, move _68) -> [return: bb46, unwind continue];
    }

    bb46: {
        StorageDead(_69);
        StorageDead(_68);
        StorageDead(_67);
        goto -> bb120;
    }

    bb47: {
        StorageLive(_70);
        _70 = &mut (*_2);
        StorageLive(_71);
        StorageLive(_72);
        _72 = const "Reserve state needs to be refreshed";
        _71 = &(*_72);
        _0 = Formatter::<'_>::write_str(move _70, move _71) -> [return: bb48, unwind continue];
    }

    bb48: {
        StorageDead(_72);
        StorageDead(_71);
        StorageDead(_70);
        goto -> bb120;
    }

    bb49: {
        StorageLive(_73);
        _73 = &mut (*_2);
        StorageLive(_74);
        StorageLive(_75);
        _75 = const "Withdraw amount too small";
        _74 = &(*_75);
        _0 = Formatter::<'_>::write_str(move _73, move _74) -> [return: bb50, unwind continue];
    }

    bb50: {
        StorageDead(_75);
        StorageDead(_74);
        StorageDead(_73);
        goto -> bb120;
    }

    bb51: {
        StorageLive(_76);
        _76 = &mut (*_2);
        StorageLive(_77);
        StorageLive(_78);
        _78 = const "Withdraw amount too large";
        _77 = &(*_78);
        _0 = Formatter::<'_>::write_str(move _76, move _77) -> [return: bb52, unwind continue];
    }

    bb52: {
        StorageDead(_78);
        StorageDead(_77);
        StorageDead(_76);
        goto -> bb120;
    }

    bb53: {
        StorageLive(_79);
        _79 = &mut (*_2);
        StorageLive(_80);
        StorageLive(_81);
        _81 = const "Borrow amount too small to receive liquidity after fees";
        _80 = &(*_81);
        _0 = Formatter::<'_>::write_str(move _79, move _80) -> [return: bb54, unwind continue];
    }

    bb54: {
        StorageDead(_81);
        StorageDead(_80);
        StorageDead(_79);
        goto -> bb120;
    }

    bb55: {
        StorageLive(_82);
        _82 = &mut (*_2);
        StorageLive(_83);
        StorageLive(_84);
        _84 = const "Borrow amount too large for deposited collateral";
        _83 = &(*_84);
        _0 = Formatter::<'_>::write_str(move _82, move _83) -> [return: bb56, unwind continue];
    }

    bb56: {
        StorageDead(_84);
        StorageDead(_83);
        StorageDead(_82);
        goto -> bb120;
    }

    bb57: {
        StorageLive(_85);
        _85 = &mut (*_2);
        StorageLive(_86);
        StorageLive(_87);
        _87 = const "Repay amount too small to transfer liquidity";
        _86 = &(*_87);
        _0 = Formatter::<'_>::write_str(move _85, move _86) -> [return: bb58, unwind continue];
    }

    bb58: {
        StorageDead(_87);
        StorageDead(_86);
        StorageDead(_85);
        goto -> bb120;
    }

    bb59: {
        StorageLive(_88);
        _88 = &mut (*_2);
        StorageLive(_89);
        StorageLive(_90);
        _90 = const "Liquidation amount too small to receive collateral";
        _89 = &(*_90);
        _0 = Formatter::<'_>::write_str(move _88, move _89) -> [return: bb60, unwind continue];
    }

    bb60: {
        StorageDead(_90);
        StorageDead(_89);
        StorageDead(_88);
        goto -> bb120;
    }

    bb61: {
        StorageLive(_91);
        _91 = &mut (*_2);
        StorageLive(_92);
        StorageLive(_93);
        _93 = const "Cannot liquidate healthy obligations";
        _92 = &(*_93);
        _0 = Formatter::<'_>::write_str(move _91, move _92) -> [return: bb62, unwind continue];
    }

    bb62: {
        StorageDead(_93);
        StorageDead(_92);
        StorageDead(_91);
        goto -> bb120;
    }

    bb63: {
        StorageLive(_94);
        _94 = &mut (*_2);
        StorageLive(_95);
        StorageLive(_96);
        _96 = const "Obligation state needs to be refreshed";
        _95 = &(*_96);
        _0 = Formatter::<'_>::write_str(move _94, move _95) -> [return: bb64, unwind continue];
    }

    bb64: {
        StorageDead(_96);
        StorageDead(_95);
        StorageDead(_94);
        goto -> bb120;
    }

    bb65: {
        StorageLive(_97);
        _97 = &mut (*_2);
        StorageLive(_98);
        StorageLive(_99);
        _99 = const "Obligation reserve limit exceeded";
        _98 = &(*_99);
        _0 = Formatter::<'_>::write_str(move _97, move _98) -> [return: bb66, unwind continue];
    }

    bb66: {
        StorageDead(_99);
        StorageDead(_98);
        StorageDead(_97);
        goto -> bb120;
    }

    bb67: {
        StorageLive(_100);
        _100 = &mut (*_2);
        StorageLive(_101);
        StorageLive(_102);
        _102 = const "Obligation owner is invalid";
        _101 = &(*_102);
        _0 = Formatter::<'_>::write_str(move _100, move _101) -> [return: bb68, unwind continue];
    }

    bb68: {
        StorageDead(_102);
        StorageDead(_101);
        StorageDead(_100);
        goto -> bb120;
    }

    bb69: {
        StorageLive(_103);
        _103 = &mut (*_2);
        StorageLive(_104);
        StorageLive(_105);
        _105 = const "Obligation deposits are empty";
        _104 = &(*_105);
        _0 = Formatter::<'_>::write_str(move _103, move _104) -> [return: bb70, unwind continue];
    }

    bb70: {
        StorageDead(_105);
        StorageDead(_104);
        StorageDead(_103);
        goto -> bb120;
    }

    bb71: {
        StorageLive(_106);
        _106 = &mut (*_2);
        StorageLive(_107);
        StorageLive(_108);
        _108 = const "Obligation borrows are empty";
        _107 = &(*_108);
        _0 = Formatter::<'_>::write_str(move _106, move _107) -> [return: bb72, unwind continue];
    }

    bb72: {
        StorageDead(_108);
        StorageDead(_107);
        StorageDead(_106);
        goto -> bb120;
    }

    bb73: {
        StorageLive(_109);
        _109 = &mut (*_2);
        StorageLive(_110);
        StorageLive(_111);
        _111 = const "Obligation deposits have zero value";
        _110 = &(*_111);
        _0 = Formatter::<'_>::write_str(move _109, move _110) -> [return: bb74, unwind continue];
    }

    bb74: {
        StorageDead(_111);
        StorageDead(_110);
        StorageDead(_109);
        goto -> bb120;
    }

    bb75: {
        StorageLive(_112);
        _112 = &mut (*_2);
        StorageLive(_113);
        StorageLive(_114);
        _114 = const "Obligation borrows have zero value";
        _113 = &(*_114);
        _0 = Formatter::<'_>::write_str(move _112, move _113) -> [return: bb76, unwind continue];
    }

    bb76: {
        StorageDead(_114);
        StorageDead(_113);
        StorageDead(_112);
        goto -> bb120;
    }

    bb77: {
        StorageLive(_115);
        _115 = &mut (*_2);
        StorageLive(_116);
        StorageLive(_117);
        _117 = const "Invalid obligation collateral";
        _116 = &(*_117);
        _0 = Formatter::<'_>::write_str(move _115, move _116) -> [return: bb78, unwind continue];
    }

    bb78: {
        StorageDead(_117);
        StorageDead(_116);
        StorageDead(_115);
        goto -> bb120;
    }

    bb79: {
        StorageLive(_118);
        _118 = &mut (*_2);
        StorageLive(_119);
        StorageLive(_120);
        _120 = const "Invalid obligation liquidity";
        _119 = &(*_120);
        _0 = Formatter::<'_>::write_str(move _118, move _119) -> [return: bb80, unwind continue];
    }

    bb80: {
        StorageDead(_120);
        StorageDead(_119);
        StorageDead(_118);
        goto -> bb120;
    }

    bb81: {
        StorageLive(_121);
        _121 = &mut (*_2);
        StorageLive(_122);
        StorageLive(_123);
        _123 = const "Obligation collateral is empty";
        _122 = &(*_123);
        _0 = Formatter::<'_>::write_str(move _121, move _122) -> [return: bb82, unwind continue];
    }

    bb82: {
        StorageDead(_123);
        StorageDead(_122);
        StorageDead(_121);
        goto -> bb120;
    }

    bb83: {
        StorageLive(_124);
        _124 = &mut (*_2);
        StorageLive(_125);
        StorageLive(_126);
        _126 = const "Obligation liquidity is empty";
        _125 = &(*_126);
        _0 = Formatter::<'_>::write_str(move _124, move _125) -> [return: bb84, unwind continue];
    }

    bb84: {
        StorageDead(_126);
        StorageDead(_125);
        StorageDead(_124);
        goto -> bb120;
    }

    bb85: {
        StorageLive(_127);
        _127 = &mut (*_2);
        StorageLive(_128);
        StorageLive(_129);
        _129 = const "Interest rate is negative";
        _128 = &(*_129);
        _0 = Formatter::<'_>::write_str(move _127, move _128) -> [return: bb86, unwind continue];
    }

    bb86: {
        StorageDead(_129);
        StorageDead(_128);
        StorageDead(_127);
        goto -> bb120;
    }

    bb87: {
        StorageLive(_130);
        _130 = &mut (*_2);
        StorageLive(_131);
        StorageLive(_132);
        _132 = const "Input oracle config is invalid";
        _131 = &(*_132);
        _0 = Formatter::<'_>::write_str(move _130, move _131) -> [return: bb88, unwind continue];
    }

    bb88: {
        StorageDead(_132);
        StorageDead(_131);
        StorageDead(_130);
        goto -> bb120;
    }

    bb89: {
        StorageLive(_133);
        _133 = &mut (*_2);
        StorageLive(_134);
        StorageLive(_135);
        _135 = const "Input flash loan receiver program account is not valid";
        _134 = &(*_135);
        _0 = Formatter::<'_>::write_str(move _133, move _134) -> [return: bb90, unwind continue];
    }

    bb90: {
        StorageDead(_135);
        StorageDead(_134);
        StorageDead(_133);
        goto -> bb120;
    }

    bb91: {
        StorageLive(_136);
        _136 = &mut (*_2);
        StorageLive(_137);
        StorageLive(_138);
        _138 = const "Not enough liquidity after flash loan";
        _137 = &(*_138);
        _0 = Formatter::<'_>::write_str(move _136, move _137) -> [return: bb92, unwind continue];
    }

    bb92: {
        StorageDead(_138);
        StorageDead(_137);
        StorageDead(_136);
        goto -> bb120;
    }

    bb93: {
        StorageLive(_139);
        _139 = &mut (*_2);
        StorageLive(_140);
        StorageLive(_141);
        _141 = const "Null oracle config";
        _140 = &(*_141);
        _0 = Formatter::<'_>::write_str(move _139, move _140) -> [return: bb94, unwind continue];
    }

    bb94: {
        StorageDead(_141);
        StorageDead(_140);
        StorageDead(_139);
        goto -> bb120;
    }

    bb95: {
        StorageLive(_142);
        _142 = &mut (*_2);
        StorageLive(_143);
        StorageLive(_144);
        _144 = const "Insufficent protocol fees to claim or no liquidity availible";
        _143 = &(*_144);
        _0 = Formatter::<'_>::write_str(move _142, move _143) -> [return: bb96, unwind continue];
    }

    bb96: {
        StorageDead(_144);
        StorageDead(_143);
        StorageDead(_142);
        goto -> bb120;
    }

    bb97: {
        StorageLive(_145);
        _145 = &mut (*_2);
        StorageLive(_146);
        StorageLive(_147);
        _147 = const "No cpi flash borrows allowed";
        _146 = &(*_147);
        _0 = Formatter::<'_>::write_str(move _145, move _146) -> [return: bb98, unwind continue];
    }

    bb98: {
        StorageDead(_147);
        StorageDead(_146);
        StorageDead(_145);
        goto -> bb120;
    }

    bb99: {
        StorageLive(_148);
        _148 = &mut (*_2);
        StorageLive(_149);
        StorageLive(_150);
        _150 = const "No corresponding repay found for flash borrow";
        _149 = &(*_150);
        _0 = Formatter::<'_>::write_str(move _148, move _149) -> [return: bb100, unwind continue];
    }

    bb100: {
        StorageDead(_150);
        StorageDead(_149);
        StorageDead(_148);
        goto -> bb120;
    }

    bb101: {
        StorageLive(_151);
        _151 = &mut (*_2);
        StorageLive(_152);
        StorageLive(_153);
        _153 = const "Invalid repay found";
        _152 = &(*_153);
        _0 = Formatter::<'_>::write_str(move _151, move _152) -> [return: bb102, unwind continue];
    }

    bb102: {
        StorageDead(_153);
        StorageDead(_152);
        StorageDead(_151);
        goto -> bb120;
    }

    bb103: {
        StorageLive(_154);
        _154 = &mut (*_2);
        StorageLive(_155);
        StorageLive(_156);
        _156 = const "No cpi flash repays allowed";
        _155 = &(*_156);
        _0 = Formatter::<'_>::write_str(move _154, move _155) -> [return: bb104, unwind continue];
    }

    bb104: {
        StorageDead(_156);
        StorageDead(_155);
        StorageDead(_154);
        goto -> bb120;
    }

    bb105: {
        StorageLive(_157);
        _157 = &mut (*_2);
        StorageLive(_158);
        StorageLive(_159);
        _159 = const "Multiple flash borrows not allowed in the same transaction";
        _158 = &(*_159);
        _0 = Formatter::<'_>::write_str(move _157, move _158) -> [return: bb106, unwind continue];
    }

    bb106: {
        StorageDead(_159);
        StorageDead(_158);
        StorageDead(_157);
        goto -> bb120;
    }

    bb107: {
        StorageLive(_160);
        _160 = &mut (*_2);
        StorageLive(_161);
        StorageLive(_162);
        _162 = const "Flash loans are disabled for this reserve";
        _161 = &(*_162);
        _0 = Formatter::<'_>::write_str(move _160, move _161) -> [return: bb108, unwind continue];
    }

    bb108: {
        StorageDead(_162);
        StorageDead(_161);
        StorageDead(_160);
        goto -> bb120;
    }

    bb109: {
        StorageLive(_163);
        _163 = &mut (*_2);
        StorageLive(_164);
        StorageLive(_165);
        _165 = const "Instruction is deprecated";
        _164 = &(*_165);
        _0 = Formatter::<'_>::write_str(move _163, move _164) -> [return: bb110, unwind continue];
    }

    bb110: {
        StorageDead(_165);
        StorageDead(_164);
        StorageDead(_163);
        goto -> bb120;
    }

    bb111: {
        StorageLive(_166);
        _166 = &mut (*_2);
        StorageLive(_167);
        StorageLive(_168);
        _168 = const "Outflow Rate Limit Exceeded";
        _167 = &(*_168);
        _0 = Formatter::<'_>::write_str(move _166, move _167) -> [return: bb112, unwind continue];
    }

    bb112: {
        StorageDead(_168);
        StorageDead(_167);
        StorageDead(_166);
        goto -> bb120;
    }

    bb113: {
        StorageLive(_169);
        _169 = &mut (*_2);
        StorageLive(_170);
        StorageLive(_171);
        _171 = const "Not a whitelisted liquidator";
        _170 = &(*_171);
        _0 = Formatter::<'_>::write_str(move _169, move _170) -> [return: bb114, unwind continue];
    }

    bb114: {
        StorageDead(_171);
        StorageDead(_170);
        StorageDead(_169);
        goto -> bb120;
    }

    bb115: {
        StorageLive(_172);
        _172 = &mut (*_2);
        StorageLive(_173);
        StorageLive(_174);
        _174 = const "Isolated Tier Asset Violation";
        _173 = &(*_174);
        _0 = Formatter::<'_>::write_str(move _172, move _173) -> [return: bb116, unwind continue];
    }

    bb116: {
        StorageDead(_174);
        StorageDead(_173);
        StorageDead(_172);
        goto -> bb120;
    }

    bb117: {
        StorageLive(_175);
        _175 = &mut (*_2);
        StorageLive(_176);
        StorageLive(_177);
        _177 = const "Borrow Attribution Limit Exceeded";
        _176 = &(*_177);
        _0 = Formatter::<'_>::write_str(move _175, move _176) -> [return: bb118, unwind continue];
    }

    bb118: {
        StorageDead(_177);
        StorageDead(_176);
        StorageDead(_175);
        goto -> bb120;
    }

    bb119: {
        StorageDead(_180);
        StorageDead(_179);
        StorageDead(_178);
        goto -> bb120;
    }

    bb120: {
        return;
    }
}
