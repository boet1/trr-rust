// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:1232:1: 1232:22>::pack_into_slice` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:1232:1: 1232:22>::pack_into_slice(_1: &reserve::Reserve, _2: &mut [u8]) -> () {
    debug self => _1;
    debug output => _2;
    let mut _0: ();
    let _3: &mut [u8; 619];
    let mut _4: &mut [u8; 619];
    let mut _5: &mut [u8; 619];
    let _6: usize;
    let mut _8: &mut [u8];
    let mut _9: &mut [u8];
    let mut _10: std::ops::Range<usize>;
    let mut _11: usize;
    let mut _12: usize;
    let mut _13: usize;
    let mut _14: (usize, bool);
    let mut _15: &mut [u8; 619];
    let mut _16: &mut [u8];
    let mut _65: (&mut [u8; 1], &mut [u8; 8], &mut [u8; 1], &mut [u8; 32], &mut [u8; 32], &mut [u8; 1], &mut [u8; 32], &mut [u8; 32], &mut [u8; 32], &mut [u8; 8], &mut [u8; 16], &mut [u8; 16], &mut [u8; 16], &mut [u8; 32], &mut [u8; 8], &mut [u8; 32], &mut [u8; 1], &mut [u8; 1], &mut [u8; 1], &mut [u8; 1], &mut [u8; 1], &mut [u8; 1], &mut [u8; 1], &mut [u8; 8], &mut [u8; 8], &mut [u8; 1], &mut [u8; 8], &mut [u8; 8], &mut [u8; 32], &mut [u8; 1], &mut [u8; 1], &mut [u8; 16], &mut [u8; 56], &mut [u8; 8], &mut [u8; 16], &mut [u8; 1], &mut [u8; 1], &mut [u8; 8], &mut [u8; 1], &mut [u8; 1], &mut [u8; 8], &mut [u8; 32], &mut [u8; 1], &mut [u8; 16], &mut [u8; 16], &mut [u8; 8], &mut [u8; 8], &mut [u8; 49]);
    let mut _67: &mut [u8; 619];
    let mut _68: [u8; 1];
    let mut _69: u8;
    let mut _70: [u8; 8];
    let mut _71: u64;
    let _72: ();
    let mut _73: bool;
    let mut _74: &mut [u8; 1];
    let _75: ();
    let mut _76: &mut [u8];
    let mut _77: &mut [u8; 32];
    let mut _78: &[u8];
    let _79: &[u8];
    let mut _80: &solana_program::pubkey::Pubkey;
    let _81: ();
    let mut _82: &mut [u8];
    let mut _83: &mut [u8; 32];
    let mut _84: &[u8];
    let _85: &[u8];
    let mut _86: &solana_program::pubkey::Pubkey;
    let mut _87: [u8; 1];
    let mut _88: u8;
    let _89: ();
    let mut _90: &mut [u8];
    let mut _91: &mut [u8; 32];
    let mut _92: &[u8];
    let _93: &[u8];
    let mut _94: &solana_program::pubkey::Pubkey;
    let _95: ();
    let mut _96: &mut [u8];
    let mut _97: &mut [u8; 32];
    let mut _98: &[u8];
    let _99: &[u8];
    let mut _100: &solana_program::pubkey::Pubkey;
    let _101: ();
    let mut _102: &mut [u8];
    let mut _103: &mut [u8; 32];
    let mut _104: &[u8];
    let _105: &[u8];
    let mut _106: &solana_program::pubkey::Pubkey;
    let mut _107: [u8; 8];
    let mut _108: u64;
    let _109: ();
    let mut _110: math::decimal::Decimal;
    let mut _111: &mut [u8; 16];
    let _112: ();
    let mut _113: math::decimal::Decimal;
    let mut _114: &mut [u8; 16];
    let _115: ();
    let mut _116: math::decimal::Decimal;
    let mut _117: &mut [u8; 16];
    let _118: ();
    let mut _119: math::decimal::Decimal;
    let mut _120: &mut [u8; 16];
    let _121: ();
    let mut _122: math::decimal::Decimal;
    let mut _123: &mut [u8; 16];
    let _124: ();
    let mut _125: isize;
    let _127: usize;
    let mut _128: usize;
    let mut _129: bool;
    let _130: ();
    let mut _131: math::decimal::Decimal;
    let mut _132: &mut [u8; 16];
    let _133: usize;
    let mut _134: usize;
    let mut _135: bool;
    let _136: ();
    let mut _137: math::decimal::Decimal;
    let mut _138: &mut [u8; 16];
    let _139: ();
    let mut _140: &mut [u8];
    let mut _141: &mut [u8; 32];
    let mut _142: &[u8];
    let _143: &[u8];
    let mut _144: &solana_program::pubkey::Pubkey;
    let mut _145: [u8; 8];
    let mut _146: u64;
    let _147: ();
    let mut _148: &mut [u8];
    let mut _149: &mut [u8; 32];
    let mut _150: &[u8];
    let _151: &[u8];
    let mut _152: &solana_program::pubkey::Pubkey;
    let mut _153: [u8; 1];
    let mut _154: u8;
    let mut _155: [u8; 1];
    let mut _156: u8;
    let mut _157: [u8; 1];
    let mut _158: u8;
    let mut _159: [u8; 1];
    let mut _160: u8;
    let mut _161: [u8; 1];
    let mut _162: u8;
    let mut _163: [u8; 1];
    let mut _164: u8;
    let mut _165: [u8; 1];
    let mut _166: u8;
    let mut _167: [u8; 1];
    let mut _168: u8;
    let mut _169: [u8; 8];
    let mut _170: u64;
    let mut _171: [u8; 8];
    let mut _172: u64;
    let mut _173: [u8; 8];
    let mut _174: u64;
    let mut _175: [u8; 1];
    let mut _176: u8;
    let mut _177: [u8; 8];
    let mut _178: u64;
    let mut _179: [u8; 8];
    let mut _180: u64;
    let _181: ();
    let mut _182: &mut [u8];
    let mut _183: &mut [u8; 32];
    let mut _184: &[u8];
    let _185: &[u8];
    let mut _186: &solana_program::pubkey::Pubkey;
    let mut _187: [u8; 1];
    let mut _188: u8;
    let mut _189: [u8; 1];
    let mut _190: u8;
    let mut _191: [u8; 1];
    let mut _192: u8;
    let _193: state::reserve::ReserveType;
    let mut _194: isize;
    let mut _195: u8;
    let mut _196: bool;
    let mut _197: [u8; 8];
    let mut _198: i64;
    let _199: ();
    let mut _200: isize;
    let mut _202: &mut [u8];
    let mut _203: &mut [u8; 32];
    let mut _204: &[u8];
    let _205: &[u8];
    let mut _206: &solana_program::pubkey::Pubkey;
    let mut _207: &mut [u8];
    let mut _208: &mut [u8; 32];
    let mut _209: &[u8];
    let mut _210: &[u8; 32];
    let _211: &[u8; 32];
    let _212: [u8; 32];
    let _213: ();
    let mut _214: &state::rate_limiter::RateLimiter;
    let mut _215: &mut [u8];
    let mut _216: &mut [u8; 56];
    let mut _217: [u8; 8];
    let mut _218: u64;
    let mut _219: [u8; 1];
    let mut _220: u8;
    let mut _221: [u8; 1];
    let mut _222: u8;
    let mut _223: [u8; 8];
    let mut _224: u64;
    let mut _225: [u8; 8];
    let mut _226: u64;
    let _227: ();
    let mut _228: math::decimal::Decimal;
    let mut _229: &mut [u8; 16];
    scope 1 {
        debug output => _3;
        scope 6 {
            debug version => _17;
            debug last_update_slot => _18;
            debug last_update_stale => _19;
            debug lending_market => _20;
            debug liquidity_mint_pubkey => _21;
            debug liquidity_mint_decimals => _22;
            debug liquidity_supply_pubkey => _23;
            debug liquidity_pyth_oracle_pubkey => _24;
            debug liquidity_switchboard_oracle_pubkey => _25;
            debug liquidity_available_amount => _26;
            debug liquidity_borrowed_amount_wads => _27;
            debug liquidity_cumulative_borrow_rate_wads => _28;
            debug liquidity_market_price => _29;
            debug collateral_mint_pubkey => _30;
            debug collateral_mint_total_supply => _31;
            debug collateral_supply_pubkey => _32;
            debug config_optimal_utilization_rate => _33;
            debug config_loan_to_value_ratio => _34;
            debug config_liquidation_bonus => _35;
            debug config_liquidation_threshold => _36;
            debug config_min_borrow_rate => _37;
            debug config_optimal_borrow_rate => _38;
            debug config_max_borrow_rate => _39;
            debug config_fees_borrow_fee_wad => _40;
            debug config_fees_flash_loan_fee_wad => _41;
            debug config_fees_host_fee_percentage => _42;
            debug config_deposit_limit => _43;
            debug config_borrow_limit => _44;
            debug config_fee_receiver => _45;
            debug config_protocol_liquidation_fee => _46;
            debug config_protocol_take_rate => _47;
            debug liquidity_accumulated_protocol_fees_wads => _48;
            debug rate_limiter => _49;
            debug config_added_borrow_weight_bps => _50;
            debug liquidity_smoothed_market_price => _51;
            debug config_asset_type => _52;
            debug config_max_utilization_rate => _53;
            debug config_super_max_borrow_rate => _54;
            debug config_max_liquidation_bonus => _55;
            debug config_max_liquidation_threshold => _56;
            debug config_scaled_price_offset_bps => _57;
            debug config_extra_oracle_pubkey => _58;
            debug liquidity_extra_market_price_flag => _59;
            debug liquidity_extra_market_price => _60;
            debug attributed_borrow_value => _61;
            debug config_attributed_borrow_limit_open => _62;
            debug config_attributed_borrow_limit_close => _63;
            debug _padding => _64;
            let _126: math::decimal::Decimal;
            let _201: solana_program::pubkey::Pubkey;
            let mut _230: &[u8; 32];
            scope 11 {
                debug extra_market_price => _126;
            }
            scope 12 {
                debug pubkey => _201;
            }
        }
        scope 7 {
            let _17: &mut [u8; 1];
            let _18: &mut [u8; 8];
            let _19: &mut [u8; 1];
            let _20: &mut [u8; 32];
            let _21: &mut [u8; 32];
            let _22: &mut [u8; 1];
            let _23: &mut [u8; 32];
            let _24: &mut [u8; 32];
            let _25: &mut [u8; 32];
            let _26: &mut [u8; 8];
            let _27: &mut [u8; 16];
            let _28: &mut [u8; 16];
            let _29: &mut [u8; 16];
            let _30: &mut [u8; 32];
            let _31: &mut [u8; 8];
            let _32: &mut [u8; 32];
            let _33: &mut [u8; 1];
            let _34: &mut [u8; 1];
            let _35: &mut [u8; 1];
            let _36: &mut [u8; 1];
            let _37: &mut [u8; 1];
            let _38: &mut [u8; 1];
            let _39: &mut [u8; 1];
            let _40: &mut [u8; 8];
            let _41: &mut [u8; 8];
            let _42: &mut [u8; 1];
            let _43: &mut [u8; 8];
            let _44: &mut [u8; 8];
            let _45: &mut [u8; 32];
            let _46: &mut [u8; 1];
            let _47: &mut [u8; 1];
            let _48: &mut [u8; 16];
            let _49: &mut [u8; 56];
            let _50: &mut [u8; 8];
            let _51: &mut [u8; 16];
            let _52: &mut [u8; 1];
            let _53: &mut [u8; 1];
            let _54: &mut [u8; 8];
            let _55: &mut [u8; 1];
            let _56: &mut [u8; 1];
            let _57: &mut [u8; 8];
            let _58: &mut [u8; 32];
            let _59: &mut [u8; 1];
            let _60: &mut [u8; 16];
            let _61: &mut [u8; 16];
            let _62: &mut [u8; 8];
            let _63: &mut [u8; 8];
            let _64: &mut [u8; 49];
            let _66: &mut [u8; 619];
            scope 8 {
                debug input => _66;
                scope 9 {
                    scope 10 {
                    }
                }
            }
        }
    }
    scope 2 {
        debug offset => _6;
        let _7: &mut [u8];
        scope 3 {
            debug slice => _7;
            scope 4 {
                scope 5 {
                }
            }
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = const 0_usize;
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut (*_2);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _6;
        StorageLive(_12);
        StorageLive(_13);
        _13 = _6;
        _14 = CheckedAdd(_13, const _);
        assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", move _13, const _) -> [success: bb1, unwind continue];
    }

    bb1: {
        _12 = move (_14.0: usize);
        StorageDead(_13);
        _10 = std::ops::Range::<usize> { start: move _11, end: move _12 };
        StorageDead(_12);
        StorageDead(_11);
        _8 = <[u8] as IndexMut<std::ops::Range<usize>>>::index_mut(move _9, move _10) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_10);
        StorageDead(_9);
        _7 = &mut (*_8);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &mut (*_7);
        _15 = <reserve::Reserve as Pack>::pack_into_slice::as_array::<u8>(move _16) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_16);
        _5 = &mut (*_15);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        _4 = &mut (*_5);
        _3 = &mut (*_4);
        StorageDead(_15);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_65);
        StorageLive(_66);
        _66 = move _3;
        StorageLive(_67);
        _67 = &mut (*_66);
        _65 = <reserve::Reserve as Pack>::pack_into_slice::as_arrays::<u8>(move _67) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_67);
        StorageDead(_66);
        StorageLive(_17);
        _17 = move (_65.0: &mut [u8; 1]);
        StorageLive(_18);
        _18 = move (_65.1: &mut [u8; 8]);
        StorageLive(_19);
        _19 = move (_65.2: &mut [u8; 1]);
        StorageLive(_20);
        _20 = move (_65.3: &mut [u8; 32]);
        StorageLive(_21);
        _21 = move (_65.4: &mut [u8; 32]);
        StorageLive(_22);
        _22 = move (_65.5: &mut [u8; 1]);
        StorageLive(_23);
        _23 = move (_65.6: &mut [u8; 32]);
        StorageLive(_24);
        _24 = move (_65.7: &mut [u8; 32]);
        StorageLive(_25);
        _25 = move (_65.8: &mut [u8; 32]);
        StorageLive(_26);
        _26 = move (_65.9: &mut [u8; 8]);
        StorageLive(_27);
        _27 = move (_65.10: &mut [u8; 16]);
        StorageLive(_28);
        _28 = move (_65.11: &mut [u8; 16]);
        StorageLive(_29);
        _29 = move (_65.12: &mut [u8; 16]);
        StorageLive(_30);
        _30 = move (_65.13: &mut [u8; 32]);
        StorageLive(_31);
        _31 = move (_65.14: &mut [u8; 8]);
        StorageLive(_32);
        _32 = move (_65.15: &mut [u8; 32]);
        StorageLive(_33);
        _33 = move (_65.16: &mut [u8; 1]);
        StorageLive(_34);
        _34 = move (_65.17: &mut [u8; 1]);
        StorageLive(_35);
        _35 = move (_65.18: &mut [u8; 1]);
        StorageLive(_36);
        _36 = move (_65.19: &mut [u8; 1]);
        StorageLive(_37);
        _37 = move (_65.20: &mut [u8; 1]);
        StorageLive(_38);
        _38 = move (_65.21: &mut [u8; 1]);
        StorageLive(_39);
        _39 = move (_65.22: &mut [u8; 1]);
        StorageLive(_40);
        _40 = move (_65.23: &mut [u8; 8]);
        StorageLive(_41);
        _41 = move (_65.24: &mut [u8; 8]);
        StorageLive(_42);
        _42 = move (_65.25: &mut [u8; 1]);
        StorageLive(_43);
        _43 = move (_65.26: &mut [u8; 8]);
        StorageLive(_44);
        _44 = move (_65.27: &mut [u8; 8]);
        StorageLive(_45);
        _45 = move (_65.28: &mut [u8; 32]);
        StorageLive(_46);
        _46 = move (_65.29: &mut [u8; 1]);
        StorageLive(_47);
        _47 = move (_65.30: &mut [u8; 1]);
        StorageLive(_48);
        _48 = move (_65.31: &mut [u8; 16]);
        StorageLive(_49);
        _49 = move (_65.32: &mut [u8; 56]);
        StorageLive(_50);
        _50 = move (_65.33: &mut [u8; 8]);
        StorageLive(_51);
        _51 = move (_65.34: &mut [u8; 16]);
        StorageLive(_52);
        _52 = move (_65.35: &mut [u8; 1]);
        StorageLive(_53);
        _53 = move (_65.36: &mut [u8; 1]);
        StorageLive(_54);
        _54 = move (_65.37: &mut [u8; 8]);
        StorageLive(_55);
        _55 = move (_65.38: &mut [u8; 1]);
        StorageLive(_56);
        _56 = move (_65.39: &mut [u8; 1]);
        StorageLive(_57);
        _57 = move (_65.40: &mut [u8; 8]);
        StorageLive(_58);
        _58 = move (_65.41: &mut [u8; 32]);
        StorageLive(_59);
        _59 = move (_65.42: &mut [u8; 1]);
        StorageLive(_60);
        _60 = move (_65.43: &mut [u8; 16]);
        StorageLive(_61);
        _61 = move (_65.44: &mut [u8; 16]);
        StorageLive(_62);
        _62 = move (_65.45: &mut [u8; 8]);
        StorageLive(_63);
        _63 = move (_65.46: &mut [u8; 8]);
        StorageLive(_64);
        _64 = move (_65.47: &mut [u8; 49]);
        StorageDead(_65);
        StorageLive(_68);
        StorageLive(_69);
        _69 = ((*_1).0: u8);
        _68 = core::num::<impl u8>::to_le_bytes(move _69) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_69);
        (*_17) = move _68;
        StorageDead(_68);
        StorageLive(_70);
        StorageLive(_71);
        _71 = (((*_1).1: state::last_update::LastUpdate).0: u64);
        _70 = core::num::<impl u64>::to_le_bytes(move _71) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_71);
        (*_18) = move _70;
        StorageDead(_70);
        StorageLive(_72);
        StorageLive(_73);
        _73 = (((*_1).1: state::last_update::LastUpdate).1: bool);
        StorageLive(_74);
        _74 = &mut (*_19);
        _72 = state::pack_bool(move _73, move _74) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_72);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _77 = &mut (*_20);
        _76 = move _77 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_77);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &((*_1).2: solana_program::pubkey::Pubkey);
        _79 = <Pubkey as AsRef<[u8]>>::as_ref(move _80) -> [return: bb8, unwind continue];
    }

    bb8: {
        _78 = &(*_79);
        StorageDead(_80);
        _75 = core::slice::<impl [u8]>::copy_from_slice(move _76, move _78) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_78);
        StorageDead(_76);
        StorageDead(_79);
        StorageDead(_75);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        _83 = &mut (*_21);
        _82 = move _83 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_83);
        StorageLive(_84);
        StorageLive(_85);
        StorageLive(_86);
        _86 = &(((*_1).3: state::reserve::ReserveLiquidity).0: solana_program::pubkey::Pubkey);
        _85 = <Pubkey as AsRef<[u8]>>::as_ref(move _86) -> [return: bb10, unwind continue];
    }

    bb10: {
        _84 = &(*_85);
        StorageDead(_86);
        _81 = core::slice::<impl [u8]>::copy_from_slice(move _82, move _84) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_84);
        StorageDead(_82);
        StorageDead(_85);
        StorageDead(_81);
        StorageLive(_87);
        StorageLive(_88);
        _88 = (((*_1).3: state::reserve::ReserveLiquidity).1: u8);
        _87 = core::num::<impl u8>::to_le_bytes(move _88) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_88);
        (*_22) = move _87;
        StorageDead(_87);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        _91 = &mut (*_23);
        _90 = move _91 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        _94 = &(((*_1).3: state::reserve::ReserveLiquidity).2: solana_program::pubkey::Pubkey);
        _93 = <Pubkey as AsRef<[u8]>>::as_ref(move _94) -> [return: bb13, unwind continue];
    }

    bb13: {
        _92 = &(*_93);
        StorageDead(_94);
        _89 = core::slice::<impl [u8]>::copy_from_slice(move _90, move _92) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_92);
        StorageDead(_90);
        StorageDead(_93);
        StorageDead(_89);
        StorageLive(_95);
        StorageLive(_96);
        StorageLive(_97);
        _97 = &mut (*_24);
        _96 = move _97 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_97);
        StorageLive(_98);
        StorageLive(_99);
        StorageLive(_100);
        _100 = &(((*_1).3: state::reserve::ReserveLiquidity).3: solana_program::pubkey::Pubkey);
        _99 = <Pubkey as AsRef<[u8]>>::as_ref(move _100) -> [return: bb15, unwind continue];
    }

    bb15: {
        _98 = &(*_99);
        StorageDead(_100);
        _95 = core::slice::<impl [u8]>::copy_from_slice(move _96, move _98) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_98);
        StorageDead(_96);
        StorageDead(_99);
        StorageDead(_95);
        StorageLive(_101);
        StorageLive(_102);
        StorageLive(_103);
        _103 = &mut (*_25);
        _102 = move _103 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_103);
        StorageLive(_104);
        StorageLive(_105);
        StorageLive(_106);
        _106 = &(((*_1).3: state::reserve::ReserveLiquidity).4: solana_program::pubkey::Pubkey);
        _105 = <Pubkey as AsRef<[u8]>>::as_ref(move _106) -> [return: bb17, unwind continue];
    }

    bb17: {
        _104 = &(*_105);
        StorageDead(_106);
        _101 = core::slice::<impl [u8]>::copy_from_slice(move _102, move _104) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_104);
        StorageDead(_102);
        StorageDead(_105);
        StorageDead(_101);
        StorageLive(_107);
        StorageLive(_108);
        _108 = (((*_1).3: state::reserve::ReserveLiquidity).5: u64);
        _107 = core::num::<impl u64>::to_le_bytes(move _108) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_108);
        (*_26) = move _107;
        StorageDead(_107);
        StorageLive(_109);
        StorageLive(_110);
        _110 = (((*_1).3: state::reserve::ReserveLiquidity).6: math::decimal::Decimal);
        StorageLive(_111);
        _111 = &mut (*_27);
        _109 = state::pack_decimal(move _110, move _111) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_111);
        StorageDead(_110);
        StorageDead(_109);
        StorageLive(_112);
        StorageLive(_113);
        _113 = (((*_1).3: state::reserve::ReserveLiquidity).7: math::decimal::Decimal);
        StorageLive(_114);
        _114 = &mut (*_28);
        _112 = state::pack_decimal(move _113, move _114) -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageDead(_114);
        StorageDead(_113);
        StorageDead(_112);
        StorageLive(_115);
        StorageLive(_116);
        _116 = (((*_1).3: state::reserve::ReserveLiquidity).8: math::decimal::Decimal);
        StorageLive(_117);
        _117 = &mut (*_48);
        _115 = state::pack_decimal(move _116, move _117) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_117);
        StorageDead(_116);
        StorageDead(_115);
        StorageLive(_118);
        StorageLive(_119);
        _119 = (((*_1).3: state::reserve::ReserveLiquidity).9: math::decimal::Decimal);
        StorageLive(_120);
        _120 = &mut (*_29);
        _118 = state::pack_decimal(move _119, move _120) -> [return: bb23, unwind continue];
    }

    bb23: {
        StorageDead(_120);
        StorageDead(_119);
        StorageDead(_118);
        StorageLive(_121);
        StorageLive(_122);
        _122 = (((*_1).3: state::reserve::ReserveLiquidity).10: math::decimal::Decimal);
        StorageLive(_123);
        _123 = &mut (*_51);
        _121 = state::pack_decimal(move _122, move _123) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_123);
        StorageDead(_122);
        StorageDead(_121);
        StorageLive(_124);
        _125 = discriminant((((*_1).3: state::reserve::ReserveLiquidity).11: std::option::Option<math::decimal::Decimal>));
        switchInt(move _125) -> [0: bb25, 1: bb27, otherwise: bb26];
    }

    bb25: {
        StorageLive(_133);
        _133 = const 0_usize;
        _134 = Len((*_59));
        _135 = Lt(_133, _134);
        assert(move _135, "index out of bounds: the length is {} but the index is {}", move _134, _133) -> [success: bb30, unwind continue];
    }

    bb26: {
        unreachable;
    }

    bb27: {
        StorageLive(_126);
        _126 = (((((*_1).3: state::reserve::ReserveLiquidity).11: std::option::Option<math::decimal::Decimal>) as Some).0: math::decimal::Decimal);
        StorageLive(_127);
        _127 = const 0_usize;
        _128 = Len((*_59));
        _129 = Lt(_127, _128);
        assert(move _129, "index out of bounds: the length is {} but the index is {}", move _128, _127) -> [success: bb28, unwind continue];
    }

    bb28: {
        (*_59)[_127] = const 1_u8;
        StorageDead(_127);
        StorageLive(_130);
        StorageLive(_131);
        _131 = _126;
        StorageLive(_132);
        _132 = &mut (*_60);
        _130 = state::pack_decimal(move _131, move _132) -> [return: bb29, unwind continue];
    }

    bb29: {
        StorageDead(_132);
        StorageDead(_131);
        StorageDead(_130);
        _124 = const ();
        StorageDead(_126);
        goto -> bb33;
    }

    bb30: {
        (*_59)[_133] = const 0_u8;
        StorageDead(_133);
        StorageLive(_136);
        StorageLive(_137);
        _137 = decimal::Decimal::zero() -> [return: bb31, unwind continue];
    }

    bb31: {
        StorageLive(_138);
        _138 = &mut (*_60);
        _136 = state::pack_decimal(move _137, move _138) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_138);
        StorageDead(_137);
        StorageDead(_136);
        _124 = const ();
        goto -> bb33;
    }

    bb33: {
        StorageDead(_124);
        StorageLive(_139);
        StorageLive(_140);
        StorageLive(_141);
        _141 = &mut (*_30);
        _140 = move _141 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_141);
        StorageLive(_142);
        StorageLive(_143);
        StorageLive(_144);
        _144 = &(((*_1).4: state::reserve::ReserveCollateral).0: solana_program::pubkey::Pubkey);
        _143 = <Pubkey as AsRef<[u8]>>::as_ref(move _144) -> [return: bb34, unwind continue];
    }

    bb34: {
        _142 = &(*_143);
        StorageDead(_144);
        _139 = core::slice::<impl [u8]>::copy_from_slice(move _140, move _142) -> [return: bb35, unwind continue];
    }

    bb35: {
        StorageDead(_142);
        StorageDead(_140);
        StorageDead(_143);
        StorageDead(_139);
        StorageLive(_145);
        StorageLive(_146);
        _146 = (((*_1).4: state::reserve::ReserveCollateral).1: u64);
        _145 = core::num::<impl u64>::to_le_bytes(move _146) -> [return: bb36, unwind continue];
    }

    bb36: {
        StorageDead(_146);
        (*_31) = move _145;
        StorageDead(_145);
        StorageLive(_147);
        StorageLive(_148);
        StorageLive(_149);
        _149 = &mut (*_32);
        _148 = move _149 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_149);
        StorageLive(_150);
        StorageLive(_151);
        StorageLive(_152);
        _152 = &(((*_1).4: state::reserve::ReserveCollateral).2: solana_program::pubkey::Pubkey);
        _151 = <Pubkey as AsRef<[u8]>>::as_ref(move _152) -> [return: bb37, unwind continue];
    }

    bb37: {
        _150 = &(*_151);
        StorageDead(_152);
        _147 = core::slice::<impl [u8]>::copy_from_slice(move _148, move _150) -> [return: bb38, unwind continue];
    }

    bb38: {
        StorageDead(_150);
        StorageDead(_148);
        StorageDead(_151);
        StorageDead(_147);
        StorageLive(_153);
        StorageLive(_154);
        _154 = (((*_1).5: state::reserve::ReserveConfig).0: u8);
        _153 = core::num::<impl u8>::to_le_bytes(move _154) -> [return: bb39, unwind continue];
    }

    bb39: {
        StorageDead(_154);
        (*_33) = move _153;
        StorageDead(_153);
        StorageLive(_155);
        StorageLive(_156);
        _156 = (((*_1).5: state::reserve::ReserveConfig).1: u8);
        _155 = core::num::<impl u8>::to_le_bytes(move _156) -> [return: bb40, unwind continue];
    }

    bb40: {
        StorageDead(_156);
        (*_53) = move _155;
        StorageDead(_155);
        StorageLive(_157);
        StorageLive(_158);
        _158 = (((*_1).5: state::reserve::ReserveConfig).2: u8);
        _157 = core::num::<impl u8>::to_le_bytes(move _158) -> [return: bb41, unwind continue];
    }

    bb41: {
        StorageDead(_158);
        (*_34) = move _157;
        StorageDead(_157);
        StorageLive(_159);
        StorageLive(_160);
        _160 = (((*_1).5: state::reserve::ReserveConfig).3: u8);
        _159 = core::num::<impl u8>::to_le_bytes(move _160) -> [return: bb42, unwind continue];
    }

    bb42: {
        StorageDead(_160);
        (*_35) = move _159;
        StorageDead(_159);
        StorageLive(_161);
        StorageLive(_162);
        _162 = (((*_1).5: state::reserve::ReserveConfig).5: u8);
        _161 = core::num::<impl u8>::to_le_bytes(move _162) -> [return: bb43, unwind continue];
    }

    bb43: {
        StorageDead(_162);
        (*_36) = move _161;
        StorageDead(_161);
        StorageLive(_163);
        StorageLive(_164);
        _164 = (((*_1).5: state::reserve::ReserveConfig).7: u8);
        _163 = core::num::<impl u8>::to_le_bytes(move _164) -> [return: bb44, unwind continue];
    }

    bb44: {
        StorageDead(_164);
        (*_37) = move _163;
        StorageDead(_163);
        StorageLive(_165);
        StorageLive(_166);
        _166 = (((*_1).5: state::reserve::ReserveConfig).8: u8);
        _165 = core::num::<impl u8>::to_le_bytes(move _166) -> [return: bb45, unwind continue];
    }

    bb45: {
        StorageDead(_166);
        (*_38) = move _165;
        StorageDead(_165);
        StorageLive(_167);
        StorageLive(_168);
        _168 = (((*_1).5: state::reserve::ReserveConfig).9: u8);
        _167 = core::num::<impl u8>::to_le_bytes(move _168) -> [return: bb46, unwind continue];
    }

    bb46: {
        StorageDead(_168);
        (*_39) = move _167;
        StorageDead(_167);
        StorageLive(_169);
        StorageLive(_170);
        _170 = (((*_1).5: state::reserve::ReserveConfig).10: u64);
        _169 = core::num::<impl u64>::to_le_bytes(move _170) -> [return: bb47, unwind continue];
    }

    bb47: {
        StorageDead(_170);
        (*_54) = move _169;
        StorageDead(_169);
        StorageLive(_171);
        StorageLive(_172);
        _172 = ((((*_1).5: state::reserve::ReserveConfig).11: state::reserve::ReserveFees).0: u64);
        _171 = core::num::<impl u64>::to_le_bytes(move _172) -> [return: bb48, unwind continue];
    }

    bb48: {
        StorageDead(_172);
        (*_40) = move _171;
        StorageDead(_171);
        StorageLive(_173);
        StorageLive(_174);
        _174 = ((((*_1).5: state::reserve::ReserveConfig).11: state::reserve::ReserveFees).1: u64);
        _173 = core::num::<impl u64>::to_le_bytes(move _174) -> [return: bb49, unwind continue];
    }

    bb49: {
        StorageDead(_174);
        (*_41) = move _173;
        StorageDead(_173);
        StorageLive(_175);
        StorageLive(_176);
        _176 = ((((*_1).5: state::reserve::ReserveConfig).11: state::reserve::ReserveFees).2: u8);
        _175 = core::num::<impl u8>::to_le_bytes(move _176) -> [return: bb50, unwind continue];
    }

    bb50: {
        StorageDead(_176);
        (*_42) = move _175;
        StorageDead(_175);
        StorageLive(_177);
        StorageLive(_178);
        _178 = (((*_1).5: state::reserve::ReserveConfig).12: u64);
        _177 = core::num::<impl u64>::to_le_bytes(move _178) -> [return: bb51, unwind continue];
    }

    bb51: {
        StorageDead(_178);
        (*_43) = move _177;
        StorageDead(_177);
        StorageLive(_179);
        StorageLive(_180);
        _180 = (((*_1).5: state::reserve::ReserveConfig).13: u64);
        _179 = core::num::<impl u64>::to_le_bytes(move _180) -> [return: bb52, unwind continue];
    }

    bb52: {
        StorageDead(_180);
        (*_44) = move _179;
        StorageDead(_179);
        StorageLive(_181);
        StorageLive(_182);
        StorageLive(_183);
        _183 = &mut (*_45);
        _182 = move _183 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_183);
        StorageLive(_184);
        StorageLive(_185);
        StorageLive(_186);
        _186 = &(((*_1).5: state::reserve::ReserveConfig).14: solana_program::pubkey::Pubkey);
        _185 = <Pubkey as AsRef<[u8]>>::as_ref(move _186) -> [return: bb53, unwind continue];
    }

    bb53: {
        _184 = &(*_185);
        StorageDead(_186);
        _181 = core::slice::<impl [u8]>::copy_from_slice(move _182, move _184) -> [return: bb54, unwind continue];
    }

    bb54: {
        StorageDead(_184);
        StorageDead(_182);
        StorageDead(_185);
        StorageDead(_181);
        StorageLive(_187);
        StorageLive(_188);
        _188 = (((*_1).5: state::reserve::ReserveConfig).15: u8);
        _187 = core::num::<impl u8>::to_le_bytes(move _188) -> [return: bb55, unwind continue];
    }

    bb55: {
        StorageDead(_188);
        (*_46) = move _187;
        StorageDead(_187);
        StorageLive(_189);
        StorageLive(_190);
        _190 = (((*_1).5: state::reserve::ReserveConfig).16: u8);
        _189 = core::num::<impl u8>::to_le_bytes(move _190) -> [return: bb56, unwind continue];
    }

    bb56: {
        StorageDead(_190);
        (*_47) = move _189;
        StorageDead(_189);
        StorageLive(_191);
        StorageLive(_192);
        StorageLive(_193);
        _193 = (((*_1).5: state::reserve::ReserveConfig).18: state::reserve::ReserveType);
        _194 = discriminant(_193);
        _195 = _194 as u8 (IntToInt);
        _196 = Le(_195, const 1_u8);
        assume(move _196);
        _192 = move _194 as u8 (IntToInt);
        StorageDead(_193);
        _191 = core::num::<impl u8>::to_le_bytes(move _192) -> [return: bb57, unwind continue];
    }

    bb57: {
        StorageDead(_192);
        (*_52) = move _191;
        StorageDead(_191);
        StorageLive(_197);
        StorageLive(_198);
        _198 = (((*_1).5: state::reserve::ReserveConfig).19: i64);
        _197 = core::num::<impl i64>::to_le_bytes(move _198) -> [return: bb58, unwind continue];
    }

    bb58: {
        StorageDead(_198);
        (*_57) = move _197;
        StorageDead(_197);
        StorageLive(_199);
        _200 = discriminant((((*_1).5: state::reserve::ReserveConfig).20: std::option::Option<solana_program::pubkey::Pubkey>));
        switchInt(move _200) -> [0: bb59, 1: bb60, otherwise: bb26];
    }

    bb59: {
        StorageLive(_207);
        StorageLive(_208);
        _208 = &mut (*_58);
        _207 = move _208 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_208);
        StorageLive(_209);
        StorageLive(_210);
        StorageLive(_211);
        _230 = const _;
        _211 = &(*_230);
        _210 = &(*_211);
        _209 = move _210 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_210);
        _199 = core::slice::<impl [u8]>::copy_from_slice(move _207, move _209) -> [return: bb63, unwind continue];
    }

    bb60: {
        StorageLive(_201);
        _201 = (((((*_1).5: state::reserve::ReserveConfig).20: std::option::Option<solana_program::pubkey::Pubkey>) as Some).0: solana_program::pubkey::Pubkey);
        StorageLive(_202);
        StorageLive(_203);
        _203 = &mut (*_58);
        _202 = move _203 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_203);
        StorageLive(_204);
        StorageLive(_205);
        StorageLive(_206);
        _206 = &_201;
        _205 = <Pubkey as AsRef<[u8]>>::as_ref(move _206) -> [return: bb61, unwind continue];
    }

    bb61: {
        _204 = &(*_205);
        StorageDead(_206);
        _199 = core::slice::<impl [u8]>::copy_from_slice(move _202, move _204) -> [return: bb62, unwind continue];
    }

    bb62: {
        StorageDead(_205);
        StorageDead(_204);
        StorageDead(_202);
        StorageDead(_201);
        goto -> bb64;
    }

    bb63: {
        StorageDead(_211);
        StorageDead(_209);
        StorageDead(_207);
        goto -> bb64;
    }

    bb64: {
        StorageDead(_199);
        StorageLive(_213);
        StorageLive(_214);
        _214 = &((*_1).6: state::rate_limiter::RateLimiter);
        StorageLive(_215);
        StorageLive(_216);
        _216 = &mut (*_49);
        _215 = move _216 as &mut [u8] (PointerCoercion(Unsize));
        StorageDead(_216);
        _213 = <rate_limiter::RateLimiter as Pack>::pack_into_slice(move _214, move _215) -> [return: bb65, unwind continue];
    }

    bb65: {
        StorageDead(_215);
        StorageDead(_214);
        StorageDead(_213);
        StorageLive(_217);
        StorageLive(_218);
        _218 = (((*_1).5: state::reserve::ReserveConfig).17: u64);
        _217 = core::num::<impl u64>::to_le_bytes(move _218) -> [return: bb66, unwind continue];
    }

    bb66: {
        StorageDead(_218);
        (*_50) = move _217;
        StorageDead(_217);
        StorageLive(_219);
        StorageLive(_220);
        _220 = (((*_1).5: state::reserve::ReserveConfig).4: u8);
        _219 = core::num::<impl u8>::to_le_bytes(move _220) -> [return: bb67, unwind continue];
    }

    bb67: {
        StorageDead(_220);
        (*_55) = move _219;
        StorageDead(_219);
        StorageLive(_221);
        StorageLive(_222);
        _222 = (((*_1).5: state::reserve::ReserveConfig).6: u8);
        _221 = core::num::<impl u8>::to_le_bytes(move _222) -> [return: bb68, unwind continue];
    }

    bb68: {
        StorageDead(_222);
        (*_56) = move _221;
        StorageDead(_221);
        StorageLive(_223);
        StorageLive(_224);
        _224 = (((*_1).5: state::reserve::ReserveConfig).21: u64);
        _223 = core::num::<impl u64>::to_le_bytes(move _224) -> [return: bb69, unwind continue];
    }

    bb69: {
        StorageDead(_224);
        (*_62) = move _223;
        StorageDead(_223);
        StorageLive(_225);
        StorageLive(_226);
        _226 = (((*_1).5: state::reserve::ReserveConfig).22: u64);
        _225 = core::num::<impl u64>::to_le_bytes(move _226) -> [return: bb70, unwind continue];
    }

    bb70: {
        StorageDead(_226);
        (*_63) = move _225;
        StorageDead(_225);
        StorageLive(_227);
        StorageLive(_228);
        _228 = ((*_1).7: math::decimal::Decimal);
        StorageLive(_229);
        _229 = &mut (*_61);
        _227 = state::pack_decimal(move _228, move _229) -> [return: bb71, unwind continue];
    }

    bb71: {
        StorageDead(_229);
        StorageDead(_228);
        StorageDead(_227);
        _0 = const ();
        StorageDead(_64);
        StorageDead(_63);
        StorageDead(_62);
        StorageDead(_61);
        StorageDead(_60);
        StorageDead(_59);
        StorageDead(_58);
        StorageDead(_57);
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_53);
        StorageDead(_52);
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_49);
        StorageDead(_48);
        StorageDead(_47);
        StorageDead(_46);
        StorageDead(_45);
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_3);
        return;
    }
}
