// MIR for `deposit_reserve_liquidity_and_obligation_collateral` after PreCodegen

fn deposit_reserve_liquidity_and_obligation_collateral(_1: Pubkey, _2: u64, _3: Pubkey, _4: Pubkey, _5: Pubkey, _6: Pubkey, _7: Pubkey, _8: Pubkey, _9: Pubkey, _10: Pubkey, _11: Pubkey, _12: Pubkey, _13: Pubkey, _14: Pubkey) -> Instruction {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug source_liquidity_pubkey => _3;
    debug user_collateral_pubkey => _4;
    debug reserve_pubkey => _5;
    debug reserve_liquidity_supply_pubkey => _6;
    debug reserve_collateral_mint_pubkey => _7;
    debug lending_market_pubkey => _8;
    debug destination_deposit_collateral_pubkey => _9;
    debug obligation_pubkey => _10;
    debug obligation_owner_pubkey => _11;
    debug reserve_liquidity_pyth_oracle_pubkey => _12;
    debug reserve_liquidity_switchboard_oracle_pubkey => _13;
    debug user_transfer_authority_pubkey => _14;
    let mut _0: solana_program::instruction::Instruction;
    let _15: solana_program::pubkey::Pubkey;
    let _16: u8;
    let mut _17: (solana_program::pubkey::Pubkey, u8);
    let mut _18: &[&[u8]];
    let mut _19: &[&[u8]; 1];
    let _20: &[&[u8]; 1];
    let _21: [&[u8]; 1];
    let mut _22: &[u8];
    let _23: &[u8];
    let _24: &[u8];
    let mut _25: &[u8; 32];
    let _26: [u8; 32];
    let mut _27: solana_program::pubkey::Pubkey;
    let mut _28: std::ops::RangeTo<usize>;
    let mut _29: &solana_program::pubkey::Pubkey;
    let _30: &solana_program::pubkey::Pubkey;
    let mut _31: solana_program::pubkey::Pubkey;
    let mut _32: std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _33: std::boxed::Box<[solana_program::instruction::AccountMeta]>;
    let mut _34: std::boxed::Box<[solana_program::instruction::AccountMeta; 14]>;
    let mut _35: usize;
    let mut _36: usize;
    let mut _37: *mut u8;
    let mut _38: std::boxed::Box<[solana_program::instruction::AccountMeta; 14]>;
    let mut _39: solana_program::instruction::AccountMeta;
    let mut _40: solana_program::pubkey::Pubkey;
    let mut _41: solana_program::instruction::AccountMeta;
    let mut _42: solana_program::pubkey::Pubkey;
    let mut _43: solana_program::instruction::AccountMeta;
    let mut _44: solana_program::pubkey::Pubkey;
    let mut _45: solana_program::instruction::AccountMeta;
    let mut _46: solana_program::pubkey::Pubkey;
    let mut _47: solana_program::instruction::AccountMeta;
    let mut _48: solana_program::pubkey::Pubkey;
    let mut _49: solana_program::instruction::AccountMeta;
    let mut _50: solana_program::pubkey::Pubkey;
    let mut _51: solana_program::instruction::AccountMeta;
    let mut _52: solana_program::pubkey::Pubkey;
    let mut _53: solana_program::instruction::AccountMeta;
    let mut _54: solana_program::pubkey::Pubkey;
    let mut _55: solana_program::instruction::AccountMeta;
    let mut _56: solana_program::pubkey::Pubkey;
    let mut _57: solana_program::instruction::AccountMeta;
    let mut _58: solana_program::pubkey::Pubkey;
    let mut _59: solana_program::instruction::AccountMeta;
    let mut _60: solana_program::pubkey::Pubkey;
    let mut _61: solana_program::instruction::AccountMeta;
    let mut _62: solana_program::pubkey::Pubkey;
    let mut _63: solana_program::instruction::AccountMeta;
    let mut _64: solana_program::pubkey::Pubkey;
    let mut _65: solana_program::instruction::AccountMeta;
    let mut _66: solana_program::pubkey::Pubkey;
    let mut _67: std::vec::Vec<u8>;
    let mut _68: &instruction::LendingInstruction;
    let _69: instruction::LendingInstruction;
    let mut _70: u64;
    let mut _71: *const [solana_program::instruction::AccountMeta; 14];
    scope 1 {
        debug lending_market_authority_pubkey => _15;
        debug _bump_seed => _16;
        let mut _72: *const ();
        let mut _73: usize;
        let mut _74: usize;
        let mut _75: usize;
        let mut _76: usize;
        let mut _77: bool;
        scope 2 {
        }
    }

    bb0: {
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        _27 = _8;
        _26 = Pubkey::to_bytes(move _27) -> [return: bb1, unwind continue];
    }

    bb1: {
        _25 = &_26;
        StorageDead(_27);
        StorageLive(_28);
        _28 = RangeTo::<usize> { end: const _ };
        _24 = <[u8; 32] as Index<RangeTo<usize>>>::index(move _25, move _28) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_28);
        StorageDead(_25);
        _23 = &(*_24);
        _22 = &(*_23);
        _21 = [move _22];
        StorageDead(_22);
        _20 = &_21;
        _19 = &(*_20);
        _18 = move _19 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_19);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &_1;
        _29 = &(*_30);
        _17 = Pubkey::find_program_address(move _18, move _29) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_29);
        StorageDead(_18);
        StorageLive(_15);
        _15 = (_17.0: solana_program::pubkey::Pubkey);
        StorageLive(_16);
        _16 = (_17.1: u8);
        StorageDead(_30);
        StorageDead(_26);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_17);
        StorageLive(_31);
        _31 = _1;
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _35 = SizeOf([solana_program::instruction::AccountMeta; 14]);
        _36 = AlignOf([solana_program::instruction::AccountMeta; 14]);
        _37 = alloc::alloc::exchange_malloc(move _35, move _36) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_38);
        _38 = ShallowInitBox(move _37, [solana_program::instruction::AccountMeta; 14]);
        StorageLive(_39);
        StorageLive(_40);
        _40 = _3;
        _39 = AccountMeta::new(move _40, const false) -> [return: bb5, unwind: bb23];
    }

    bb5: {
        StorageDead(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = _4;
        _41 = AccountMeta::new(move _42, const false) -> [return: bb6, unwind: bb23];
    }

    bb6: {
        StorageDead(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = _5;
        _43 = AccountMeta::new(move _44, const false) -> [return: bb7, unwind: bb23];
    }

    bb7: {
        StorageDead(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = _6;
        _45 = AccountMeta::new(move _46, const false) -> [return: bb8, unwind: bb23];
    }

    bb8: {
        StorageDead(_46);
        StorageLive(_47);
        StorageLive(_48);
        _48 = _7;
        _47 = AccountMeta::new(move _48, const false) -> [return: bb9, unwind: bb23];
    }

    bb9: {
        StorageDead(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = _8;
        _49 = AccountMeta::new_readonly(move _50, const false) -> [return: bb10, unwind: bb23];
    }

    bb10: {
        StorageDead(_50);
        StorageLive(_51);
        StorageLive(_52);
        _52 = _15;
        _51 = AccountMeta::new_readonly(move _52, const false) -> [return: bb11, unwind: bb23];
    }

    bb11: {
        StorageDead(_52);
        StorageLive(_53);
        StorageLive(_54);
        _54 = _9;
        _53 = AccountMeta::new(move _54, const false) -> [return: bb12, unwind: bb23];
    }

    bb12: {
        StorageDead(_54);
        StorageLive(_55);
        StorageLive(_56);
        _56 = _10;
        _55 = AccountMeta::new(move _56, const false) -> [return: bb13, unwind: bb23];
    }

    bb13: {
        StorageDead(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = _11;
        _57 = AccountMeta::new(move _58, const true) -> [return: bb14, unwind: bb23];
    }

    bb14: {
        StorageDead(_58);
        StorageLive(_59);
        StorageLive(_60);
        _60 = _12;
        _59 = AccountMeta::new_readonly(move _60, const false) -> [return: bb15, unwind: bb23];
    }

    bb15: {
        StorageDead(_60);
        StorageLive(_61);
        StorageLive(_62);
        _62 = _13;
        _61 = AccountMeta::new_readonly(move _62, const false) -> [return: bb16, unwind: bb23];
    }

    bb16: {
        StorageDead(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = _14;
        _63 = AccountMeta::new_readonly(move _64, const true) -> [return: bb17, unwind: bb23];
    }

    bb17: {
        StorageDead(_64);
        StorageLive(_65);
        StorageLive(_66);
        _66 = spl_token::id() -> [return: bb18, unwind: bb23];
    }

    bb18: {
        _65 = AccountMeta::new_readonly(move _66, const false) -> [return: bb19, unwind: bb23];
    }

    bb19: {
        StorageDead(_66);
        _71 = (((_38.0: std::ptr::Unique<[solana_program::instruction::AccountMeta; 14]>).0: std::ptr::NonNull<[solana_program::instruction::AccountMeta; 14]>).0: *const [solana_program::instruction::AccountMeta; 14]);
        _72 = _71 as *const () (PtrToPtr);
        _73 = _72 as usize (Transmute);
        _74 = AlignOf([solana_program::instruction::AccountMeta; 14]);
        _75 = Sub(_74, const 1_usize);
        _76 = BitAnd(_73, _75);
        _77 = Eq(_76, const 0_usize);
        assert(_77, "misaligned pointer dereference: address must be a multiple of {} but is {}", _74, _73) -> [success: bb25, unwind unreachable];
    }

    bb20: {
        StorageDead(_33);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        _70 = _2;
        _69 = LendingInstruction::DepositReserveLiquidityAndObligationCollateral { liquidity_amount: move _70 };
        _68 = &_69;
        StorageDead(_70);
        _67 = LendingInstruction::pack(move _68) -> [return: bb21, unwind: bb22];
    }

    bb21: {
        StorageDead(_68);
        _0 = Instruction { program_id: move _31, accounts: move _32, data: move _67 };
        StorageDead(_67);
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_69);
        return;
    }

    bb22 (cleanup): {
        drop(_32) -> [return: bb24, unwind terminate(cleanup)];
    }

    bb23 (cleanup): {
        drop(_38) -> [return: bb24, unwind terminate(cleanup)];
    }

    bb24 (cleanup): {
        resume;
    }

    bb25: {
        (*_71) = [move _39, move _41, move _43, move _45, move _47, move _49, move _51, move _53, move _55, move _57, move _59, move _61, move _63, move _65];
        StorageDead(_65);
        StorageDead(_63);
        StorageDead(_61);
        StorageDead(_59);
        StorageDead(_57);
        StorageDead(_55);
        StorageDead(_53);
        StorageDead(_51);
        StorageDead(_49);
        StorageDead(_47);
        StorageDead(_45);
        StorageDead(_43);
        StorageDead(_41);
        StorageDead(_39);
        _34 = move _38;
        _33 = move _34 as std::boxed::Box<[solana_program::instruction::AccountMeta]> (PointerCoercion(Unsize));
        StorageDead(_38);
        StorageDead(_34);
        _32 = std::slice::<impl [AccountMeta]>::into_vec::<std::alloc::Global>(move _33) -> [return: bb20, unwind: bb24];
    }
}
