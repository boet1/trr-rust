// MIR for `update_reserve_config` after PreCodegen

fn update_reserve_config(_1: Pubkey, _2: reserve::ReserveConfig, _3: rate_limiter::RateLimiterConfig, _4: Pubkey, _5: Pubkey, _6: Pubkey, _7: Pubkey, _8: Pubkey, _9: Pubkey) -> Instruction {
    debug program_id => _1;
    debug config => _2;
    debug rate_limiter_config => _3;
    debug reserve_pubkey => _4;
    debug lending_market_pubkey => _5;
    debug lending_market_owner_pubkey => _6;
    debug pyth_product_pubkey => _7;
    debug pyth_price_pubkey => _8;
    debug switchboard_feed_pubkey => _9;
    let mut _0: solana_program::instruction::Instruction;
    let _10: solana_program::pubkey::Pubkey;
    let _11: u8;
    let mut _12: (solana_program::pubkey::Pubkey, u8);
    let mut _13: &[&[u8]];
    let mut _14: &[&[u8]; 1];
    let _15: &[&[u8]; 1];
    let _16: [&[u8]; 1];
    let mut _17: &[u8];
    let _18: &[u8];
    let _19: &[u8];
    let mut _20: &[u8; 32];
    let _21: [u8; 32];
    let mut _22: solana_program::pubkey::Pubkey;
    let mut _23: std::ops::RangeTo<usize>;
    let mut _24: &solana_program::pubkey::Pubkey;
    let _25: &solana_program::pubkey::Pubkey;
    let mut _27: std::boxed::Box<[solana_program::instruction::AccountMeta]>;
    let mut _28: std::boxed::Box<[solana_program::instruction::AccountMeta; 7]>;
    let mut _29: usize;
    let mut _30: usize;
    let mut _31: *mut u8;
    let mut _32: std::boxed::Box<[solana_program::instruction::AccountMeta; 7]>;
    let mut _33: solana_program::instruction::AccountMeta;
    let mut _34: solana_program::pubkey::Pubkey;
    let mut _35: solana_program::instruction::AccountMeta;
    let mut _36: solana_program::pubkey::Pubkey;
    let mut _37: solana_program::instruction::AccountMeta;
    let mut _38: solana_program::pubkey::Pubkey;
    let mut _39: solana_program::instruction::AccountMeta;
    let mut _40: solana_program::pubkey::Pubkey;
    let mut _41: solana_program::instruction::AccountMeta;
    let mut _42: solana_program::pubkey::Pubkey;
    let mut _43: solana_program::instruction::AccountMeta;
    let mut _44: solana_program::pubkey::Pubkey;
    let mut _45: solana_program::instruction::AccountMeta;
    let mut _46: solana_program::pubkey::Pubkey;
    let _47: ();
    let mut _48: isize;
    let _50: ();
    let mut _51: &mut std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _52: solana_program::instruction::AccountMeta;
    let mut _53: solana_program::pubkey::Pubkey;
    let mut _54: solana_program::pubkey::Pubkey;
    let mut _55: std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _56: std::vec::Vec<u8>;
    let mut _57: &instruction::LendingInstruction;
    let _58: instruction::LendingInstruction;
    let mut _59: state::reserve::ReserveConfig;
    let mut _60: state::rate_limiter::RateLimiterConfig;
    let mut _61: bool;
    let mut _62: *const [solana_program::instruction::AccountMeta; 7];
    scope 1 {
        debug lending_market_authority_pubkey => _10;
        debug _bump_seed => _11;
        let mut _26: std::vec::Vec<solana_program::instruction::AccountMeta>;
        let mut _63: *const ();
        let mut _64: usize;
        let mut _65: usize;
        let mut _66: usize;
        let mut _67: usize;
        let mut _68: bool;
        scope 2 {
            debug accounts => _26;
            scope 4 {
                debug extra_oracle_pubkey => _49;
                let _49: solana_program::pubkey::Pubkey;
            }
        }
        scope 3 {
        }
    }

    bb0: {
        _61 = const false;
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = _5;
        _21 = Pubkey::to_bytes(move _22) -> [return: bb1, unwind continue];
    }

    bb1: {
        _20 = &_21;
        StorageDead(_22);
        StorageLive(_23);
        _23 = RangeTo::<usize> { end: const _ };
        _19 = <[u8; 32] as Index<RangeTo<usize>>>::index(move _20, move _23) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_23);
        StorageDead(_20);
        _18 = &(*_19);
        _17 = &(*_18);
        _16 = [move _17];
        StorageDead(_17);
        _15 = &_16;
        _14 = &(*_15);
        _13 = move _14 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_14);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &_1;
        _24 = &(*_25);
        _12 = Pubkey::find_program_address(move _13, move _24) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_24);
        StorageDead(_13);
        StorageLive(_10);
        _10 = (_12.0: solana_program::pubkey::Pubkey);
        StorageLive(_11);
        _11 = (_12.1: u8);
        StorageDead(_25);
        StorageDead(_21);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_12);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _29 = SizeOf([solana_program::instruction::AccountMeta; 7]);
        _30 = AlignOf([solana_program::instruction::AccountMeta; 7]);
        _31 = alloc::alloc::exchange_malloc(move _29, move _30) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_32);
        _32 = ShallowInitBox(move _31, [solana_program::instruction::AccountMeta; 7]);
        StorageLive(_33);
        StorageLive(_34);
        _34 = _4;
        _33 = AccountMeta::new(move _34, const false) -> [return: bb5, unwind: bb20];
    }

    bb5: {
        StorageDead(_34);
        StorageLive(_35);
        StorageLive(_36);
        _36 = _5;
        _35 = AccountMeta::new_readonly(move _36, const false) -> [return: bb6, unwind: bb20];
    }

    bb6: {
        StorageDead(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = _10;
        _37 = AccountMeta::new_readonly(move _38, const false) -> [return: bb7, unwind: bb20];
    }

    bb7: {
        StorageDead(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = _6;
        _39 = AccountMeta::new_readonly(move _40, const true) -> [return: bb8, unwind: bb20];
    }

    bb8: {
        StorageDead(_40);
        StorageLive(_41);
        StorageLive(_42);
        _42 = _7;
        _41 = AccountMeta::new_readonly(move _42, const false) -> [return: bb9, unwind: bb20];
    }

    bb9: {
        StorageDead(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = _8;
        _43 = AccountMeta::new_readonly(move _44, const false) -> [return: bb10, unwind: bb20];
    }

    bb10: {
        StorageDead(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = _9;
        _45 = AccountMeta::new_readonly(move _46, const false) -> [return: bb11, unwind: bb20];
    }

    bb11: {
        StorageDead(_46);
        _62 = (((_32.0: std::ptr::Unique<[solana_program::instruction::AccountMeta; 7]>).0: std::ptr::NonNull<[solana_program::instruction::AccountMeta; 7]>).0: *const [solana_program::instruction::AccountMeta; 7]);
        _63 = _62 as *const () (PtrToPtr);
        _64 = _63 as usize (Transmute);
        _65 = AlignOf([solana_program::instruction::AccountMeta; 7]);
        _66 = Sub(_65, const 1_usize);
        _67 = BitAnd(_64, _66);
        _68 = Eq(_67, const 0_usize);
        assert(_68, "misaligned pointer dereference: address must be a multiple of {} but is {}", _65, _64) -> [success: bb24, unwind unreachable];
    }

    bb12: {
        _61 = const true;
        StorageDead(_27);
        StorageLive(_47);
        _48 = discriminant((_2.20: std::option::Option<solana_program::pubkey::Pubkey>));
        switchInt(move _48) -> [1: bb13, otherwise: bb16];
    }

    bb13: {
        StorageLive(_49);
        _49 = (((_2.20: std::option::Option<solana_program::pubkey::Pubkey>) as Some).0: solana_program::pubkey::Pubkey);
        StorageLive(_50);
        StorageLive(_51);
        _51 = &mut _26;
        StorageLive(_52);
        StorageLive(_53);
        _53 = _49;
        _52 = AccountMeta::new_readonly(move _53, const false) -> [return: bb14, unwind: bb23];
    }

    bb14: {
        StorageDead(_53);
        _50 = Vec::<AccountMeta>::push(move _51, move _52) -> [return: bb15, unwind: bb23];
    }

    bb15: {
        StorageDead(_52);
        StorageDead(_51);
        StorageDead(_50);
        _47 = const ();
        StorageDead(_49);
        goto -> bb17;
    }

    bb16: {
        _47 = const ();
        goto -> bb17;
    }

    bb17: {
        StorageDead(_47);
        StorageLive(_54);
        _54 = _1;
        StorageLive(_55);
        _61 = const false;
        _55 = move _26;
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        _59 = _2;
        StorageLive(_60);
        _60 = _3;
        _58 = LendingInstruction::UpdateReserveConfig { config: move _59, rate_limiter_config: move _60 };
        _57 = &_58;
        StorageDead(_60);
        StorageDead(_59);
        _56 = LendingInstruction::pack(move _57) -> [return: bb18, unwind: bb19];
    }

    bb18: {
        StorageDead(_57);
        _0 = Instruction { program_id: move _54, accounts: move _55, data: move _56 };
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_54);
        _61 = const false;
        StorageDead(_26);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_58);
        return;
    }

    bb19 (cleanup): {
        drop(_55) -> [return: bb23, unwind terminate(cleanup)];
    }

    bb20 (cleanup): {
        drop(_32) -> [return: bb21, unwind terminate(cleanup)];
    }

    bb21 (cleanup): {
        resume;
    }

    bb22 (cleanup): {
        drop(_26) -> [return: bb21, unwind terminate(cleanup)];
    }

    bb23 (cleanup): {
        switchInt(_61) -> [0: bb21, otherwise: bb22];
    }

    bb24: {
        (*_62) = [move _33, move _35, move _37, move _39, move _41, move _43, move _45];
        StorageDead(_45);
        StorageDead(_43);
        StorageDead(_41);
        StorageDead(_39);
        StorageDead(_37);
        StorageDead(_35);
        StorageDead(_33);
        _28 = move _32;
        _27 = move _28 as std::boxed::Box<[solana_program::instruction::AccountMeta]> (PointerCoercion(Unsize));
        StorageDead(_32);
        StorageDead(_28);
        _26 = std::slice::<impl [AccountMeta]>::into_vec::<std::alloc::Global>(move _27) -> [return: bb12, unwind: bb21];
    }
}
