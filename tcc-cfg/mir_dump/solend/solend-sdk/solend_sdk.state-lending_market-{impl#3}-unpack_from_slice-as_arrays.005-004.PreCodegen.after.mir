// MIR for `lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:84:1: 84:28>::unpack_from_slice::as_arrays` after PreCodegen

fn lending_market::<impl at token-lending\sdk\src\state\lending_market.rs:84:1: 84:28>::unpack_from_slice::as_arrays(_1: &[T; 290]) -> (&[T; 1], &[T; 1], &[T; 32], &[T; 32], &[T; 32], &[T; 32], &[T; 32], &[T; 56], &[T; 32], &[T; 32], &[T; 8]) {
    debug a => _1;
    let mut _0: (&[T; 1], &[T; 1], &[T; 32], &[T; 32], &[T; 32], &[T; 32], &[T; 32], &[T; 56], &[T; 32], &[T; 32], &[T; 8]);
    let mut _2: *const T;
    let mut _3: &[T];
    let mut _4: &[T; 290];
    let mut _5: &[T; 1];
    let _7: *const [T; 1];
    let mut _8: *const T;
    let mut _9: *const T;
    let mut _10: *const T;
    let mut _11: isize;
    let mut _12: &[T; 1];
    let _14: *const [T; 1];
    let mut _15: *const T;
    let mut _16: *const T;
    let mut _17: *const T;
    let mut _18: isize;
    let mut _19: &[T; 32];
    let _21: *const [T; 32];
    let mut _22: *const T;
    let mut _23: *const T;
    let mut _24: *const T;
    let mut _25: isize;
    let mut _26: &[T; 32];
    let _28: *const [T; 32];
    let mut _29: *const T;
    let mut _30: *const T;
    let mut _31: *const T;
    let mut _32: isize;
    let mut _33: &[T; 32];
    let _35: *const [T; 32];
    let mut _36: *const T;
    let mut _37: *const T;
    let mut _38: *const T;
    let mut _39: isize;
    let mut _40: &[T; 32];
    let _42: *const [T; 32];
    let mut _43: *const T;
    let mut _44: *const T;
    let mut _45: *const T;
    let mut _46: isize;
    let mut _47: &[T; 32];
    let _49: *const [T; 32];
    let mut _50: *const T;
    let mut _51: *const T;
    let mut _52: *const T;
    let mut _53: isize;
    let mut _54: &[T; 56];
    let _56: *const [T; 56];
    let mut _57: *const T;
    let mut _58: *const T;
    let mut _59: *const T;
    let mut _60: isize;
    let mut _61: &[T; 32];
    let _63: *const [T; 32];
    let mut _64: *const T;
    let mut _65: *const T;
    let mut _66: *const T;
    let mut _67: isize;
    let mut _68: &[T; 32];
    let _70: *const [T; 32];
    let mut _71: *const T;
    let mut _72: *const T;
    let mut _73: *const T;
    let mut _74: isize;
    let mut _75: &[T; 8];
    let _77: *const [T; 8];
    let mut _78: *const T;
    let mut _79: *const T;
    let mut _80: *const T;
    let mut _81: isize;
    scope 1 {
        debug p => _2;
        let _6: &[T; 1];
        let _13: &[T; 1];
        let _20: &[T; 32];
        let _27: &[T; 32];
        let _34: &[T; 32];
        let _41: &[T; 32];
        let _48: &[T; 32];
        let _55: &[T; 56];
        let _62: &[T; 32];
        let _69: &[T; 32];
        let _76: &[T; 8];
        scope 2 {
            debug aref => _6;
        }
        scope 3 {
            debug aref => _13;
        }
        scope 4 {
            debug aref => _20;
        }
        scope 5 {
            debug aref => _27;
        }
        scope 6 {
            debug aref => _34;
        }
        scope 7 {
            debug aref => _41;
        }
        scope 8 {
            debug aref => _48;
        }
        scope 9 {
            debug aref => _55;
        }
        scope 10 {
            debug aref => _62;
        }
        scope 11 {
            debug aref => _69;
        }
        scope 12 {
            debug aref => _76;
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = move _4 as &[T] (PointerCoercion(Unsize));
        StorageDead(_4);
        _2 = core::slice::<impl [T]>::as_ptr(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = _2;
        _7 = move _8 as *const [T; 1] (PtrToPtr);
        StorageDead(_8);
        _6 = &(*_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = _2;
        StorageLive(_11);
        _11 = const 1_isize;
        _9 = std::ptr::const_ptr::<impl *const T>::offset(move _10, move _11) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_11);
        StorageDead(_10);
        _2 = move _9;
        StorageDead(_9);
        _5 = &(*_6);
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = _2;
        _14 = move _15 as *const [T; 1] (PtrToPtr);
        StorageDead(_15);
        _13 = &(*_14);
        StorageLive(_16);
        StorageLive(_17);
        _17 = _2;
        StorageLive(_18);
        _18 = const 1_isize;
        _16 = std::ptr::const_ptr::<impl *const T>::offset(move _17, move _18) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_18);
        StorageDead(_17);
        _2 = move _16;
        StorageDead(_16);
        _12 = &(*_13);
        StorageDead(_14);
        StorageDead(_13);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = _2;
        _21 = move _22 as *const [T; 32] (PtrToPtr);
        StorageDead(_22);
        _20 = &(*_21);
        StorageLive(_23);
        StorageLive(_24);
        _24 = _2;
        StorageLive(_25);
        _25 = const _ as isize (IntToInt);
        _23 = std::ptr::const_ptr::<impl *const T>::offset(move _24, move _25) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_25);
        StorageDead(_24);
        _2 = move _23;
        StorageDead(_23);
        _19 = &(*_20);
        StorageDead(_21);
        StorageDead(_20);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = _2;
        _28 = move _29 as *const [T; 32] (PtrToPtr);
        StorageDead(_29);
        _27 = &(*_28);
        StorageLive(_30);
        StorageLive(_31);
        _31 = _2;
        StorageLive(_32);
        _32 = const 32_isize;
        _30 = std::ptr::const_ptr::<impl *const T>::offset(move _31, move _32) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_32);
        StorageDead(_31);
        _2 = move _30;
        StorageDead(_30);
        _26 = &(*_27);
        StorageDead(_28);
        StorageDead(_27);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        _36 = _2;
        _35 = move _36 as *const [T; 32] (PtrToPtr);
        StorageDead(_36);
        _34 = &(*_35);
        StorageLive(_37);
        StorageLive(_38);
        _38 = _2;
        StorageLive(_39);
        _39 = const _ as isize (IntToInt);
        _37 = std::ptr::const_ptr::<impl *const T>::offset(move _38, move _39) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_39);
        StorageDead(_38);
        _2 = move _37;
        StorageDead(_37);
        _33 = &(*_34);
        StorageDead(_35);
        StorageDead(_34);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = _2;
        _42 = move _43 as *const [T; 32] (PtrToPtr);
        StorageDead(_43);
        _41 = &(*_42);
        StorageLive(_44);
        StorageLive(_45);
        _45 = _2;
        StorageLive(_46);
        _46 = const _ as isize (IntToInt);
        _44 = std::ptr::const_ptr::<impl *const T>::offset(move _45, move _46) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_46);
        StorageDead(_45);
        _2 = move _44;
        StorageDead(_44);
        _40 = &(*_41);
        StorageDead(_42);
        StorageDead(_41);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = _2;
        _49 = move _50 as *const [T; 32] (PtrToPtr);
        StorageDead(_50);
        _48 = &(*_49);
        StorageLive(_51);
        StorageLive(_52);
        _52 = _2;
        StorageLive(_53);
        _53 = const _ as isize (IntToInt);
        _51 = std::ptr::const_ptr::<impl *const T>::offset(move _52, move _53) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_53);
        StorageDead(_52);
        _2 = move _51;
        StorageDead(_51);
        _47 = &(*_48);
        StorageDead(_49);
        StorageDead(_48);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        _57 = _2;
        _56 = move _57 as *const [T; 56] (PtrToPtr);
        StorageDead(_57);
        _55 = &(*_56);
        StorageLive(_58);
        StorageLive(_59);
        _59 = _2;
        StorageLive(_60);
        _60 = const _ as isize (IntToInt);
        _58 = std::ptr::const_ptr::<impl *const T>::offset(move _59, move _60) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_60);
        StorageDead(_59);
        _2 = move _58;
        StorageDead(_58);
        _54 = &(*_55);
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        _64 = _2;
        _63 = move _64 as *const [T; 32] (PtrToPtr);
        StorageDead(_64);
        _62 = &(*_63);
        StorageLive(_65);
        StorageLive(_66);
        _66 = _2;
        StorageLive(_67);
        _67 = const _ as isize (IntToInt);
        _65 = std::ptr::const_ptr::<impl *const T>::offset(move _66, move _67) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_67);
        StorageDead(_66);
        _2 = move _65;
        StorageDead(_65);
        _61 = &(*_62);
        StorageDead(_63);
        StorageDead(_62);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        _71 = _2;
        _70 = move _71 as *const [T; 32] (PtrToPtr);
        StorageDead(_71);
        _69 = &(*_70);
        StorageLive(_72);
        StorageLive(_73);
        _73 = _2;
        StorageLive(_74);
        _74 = const _ as isize (IntToInt);
        _72 = std::ptr::const_ptr::<impl *const T>::offset(move _73, move _74) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_74);
        StorageDead(_73);
        _2 = move _72;
        StorageDead(_72);
        _68 = &(*_69);
        StorageDead(_70);
        StorageDead(_69);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        _78 = _2;
        _77 = move _78 as *const [T; 8] (PtrToPtr);
        StorageDead(_78);
        _76 = &(*_77);
        StorageLive(_79);
        StorageLive(_80);
        _80 = _2;
        StorageLive(_81);
        _81 = const 8_isize;
        _79 = std::ptr::const_ptr::<impl *const T>::offset(move _80, move _81) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_81);
        StorageDead(_80);
        _2 = move _79;
        StorageDead(_79);
        _75 = &(*_76);
        StorageDead(_77);
        StorageDead(_76);
        _0 = (move _5, move _12, move _19, move _26, move _33, move _40, move _47, move _54, move _61, move _68, move _75);
        StorageDead(_75);
        StorageDead(_68);
        StorageDead(_61);
        StorageDead(_54);
        StorageDead(_47);
        StorageDead(_40);
        StorageDead(_33);
        StorageDead(_26);
        StorageDead(_19);
        StorageDead(_12);
        StorageDead(_5);
        StorageDead(_2);
        return;
    }
}
