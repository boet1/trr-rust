digraph Mir_0_463 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::Reserve::deposit_liquidity(_1: &amp;ReErased mut state::reserve::Reserve, _2: u64) -&gt; std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _6: &amp;ReErased state::reserve::CollateralExchangeRate;<br align="left"/>let _7: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, state::reserve::CollateralExchangeRate&gt;;<br align="left"/>let mut _9: std::result::Result&lt;state::reserve::CollateralExchangeRate, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _10: &amp;ReErased state::reserve::Reserve;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _15: state::reserve::CollateralExchangeRate;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _21: u64;<br align="left"/>let _22: ();<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _24: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _25: &amp;ReErased mut state::reserve::ReserveLiquidity;<br align="left"/>let mut _26: u64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _31: ();<br align="left"/>let _32: ();<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, ()&gt;;<br align="left"/>let mut _34: std::result::Result&lt;(), solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _35: &amp;ReErased mut state::reserve::ReserveCollateral;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _41: ();<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: bool;<br align="left"/>let mut _44: isize;<br align="left"/>let mut _45: isize;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>let mut _61: isize;<br align="left"/>let mut _62: isize;<br align="left"/>let mut _63: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug liquidity_amount =&gt; _2;<br align="left"/>debug collateral_amount =&gt; _3;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>>;
    bb0__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_43 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/></td></tr><tr><td align="left">_9 = reserve::Reserve::collateral_exchange_rate(move _10)</td></tr></table>>];
    bb1__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;Result&lt;CollateralExchangeRate, ProgramError&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_43 = const true<br/>StorageDead(_9)<br/>_11 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_8 as Continue).0: state::reserve::CollateralExchangeRate)<br/>_7 = _15<br/>StorageDead(_15)<br/>_6 = &amp;_7<br/>StorageLive(_16)<br/>_16 = _2<br/></td></tr><tr><td align="left">_5 = CollateralExchangeRate::liquidity_to_collateral(move _6, move _16)</td></tr></table>>];
    bb4__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Result&lt;u64, ProgramError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb8__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_17 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_4 as Continue).0: u64)<br/>_3 = _21<br/>StorageDead(_21)<br/>_44 = discriminant(_4)<br/>_46 = discriminant(_8)<br/>_43 = const false<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;mut ((*_1).3: state::reserve::ReserveLiquidity)<br/>StorageLive(_26)<br/>_26 = _2<br/></td></tr><tr><td align="left">_24 = ReserveLiquidity::deposit(move _25, move _26)</td></tr></table>>];
    bb10__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_56 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb13__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_27 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb14__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_23 as Continue).0: ())<br/>_22 = _31<br/>StorageDead(_31)<br/>_48 = discriminant(_23)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;mut ((*_1).4: state::reserve::ReserveCollateral)<br/>StorageLive(_36)<br/>_36 = _3<br/></td></tr><tr><td align="left">_34 = ReserveCollateral::mint(move _35, move _36)</td></tr></table>>];
    bb15__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_30)<br/>_30 = move _28<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb16__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_54 = discriminant(_23)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;Result&lt;(), ProgramError&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb18__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_37 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb19__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_33 as Continue).0: ())<br/>_32 = _41<br/>StorageDead(_41)<br/>_50 = discriminant(_33)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_42)<br/>_42 = _3<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(move _42)<br/>StorageDead(_42)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_40)<br/>_40 = move _38<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb21__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>_52 = discriminant(_33)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_58 = discriminant(_8)<br/>_43 = const false<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">return</td></tr></table>>];
    bb25__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb26__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_60 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_61 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left" balign="left">_62 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_463 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">29 (cleanup)</td></tr><tr><td align="left" balign="left">_63 = discriminant(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_463 -> bb1__0_463 [label="return"];
    bb1__0_463 -> bb2__0_463 [label="return"];
    bb1__0_463 -> bb25__0_463 [label="unwind"];
    bb2__0_463 -> bb3__0_463 [label="0"];
    bb2__0_463 -> bb5__0_463 [label="1"];
    bb2__0_463 -> bb4__0_463 [label="otherwise"];
    bb3__0_463 -> bb7__0_463 [label="return"];
    bb3__0_463 -> bb29__0_463 [label="unwind"];
    bb5__0_463 -> bb6__0_463 [label="return"];
    bb5__0_463 -> bb29__0_463 [label="unwind"];
    bb6__0_463 -> bb22__0_463 [label=""];
    bb7__0_463 -> bb8__0_463 [label="return"];
    bb7__0_463 -> bb29__0_463 [label="unwind"];
    bb8__0_463 -> bb9__0_463 [label="0"];
    bb8__0_463 -> bb10__0_463 [label="1"];
    bb8__0_463 -> bb4__0_463 [label="otherwise"];
    bb9__0_463 -> bb12__0_463 [label="return"];
    bb10__0_463 -> bb11__0_463 [label="return"];
    bb10__0_463 -> bb28__0_463 [label="unwind"];
    bb11__0_463 -> bb22__0_463 [label=""];
    bb12__0_463 -> bb13__0_463 [label="return"];
    bb12__0_463 -> bb25__0_463 [label="unwind"];
    bb13__0_463 -> bb14__0_463 [label="0"];
    bb13__0_463 -> bb15__0_463 [label="1"];
    bb13__0_463 -> bb4__0_463 [label="otherwise"];
    bb14__0_463 -> bb17__0_463 [label="return"];
    bb15__0_463 -> bb16__0_463 [label="return"];
    bb15__0_463 -> bb27__0_463 [label="unwind"];
    bb16__0_463 -> bb23__0_463 [label=""];
    bb17__0_463 -> bb18__0_463 [label="return"];
    bb17__0_463 -> bb25__0_463 [label="unwind"];
    bb18__0_463 -> bb19__0_463 [label="0"];
    bb18__0_463 -> bb20__0_463 [label="1"];
    bb18__0_463 -> bb4__0_463 [label="otherwise"];
    bb19__0_463 -> bb24__0_463 [label=""];
    bb20__0_463 -> bb21__0_463 [label="return"];
    bb20__0_463 -> bb26__0_463 [label="unwind"];
    bb21__0_463 -> bb23__0_463 [label=""];
    bb22__0_463 -> bb23__0_463 [label=""];
    bb23__0_463 -> bb24__0_463 [label=""];
    bb26__0_463 -> bb25__0_463 [label=""];
    bb27__0_463 -> bb25__0_463 [label=""];
    bb28__0_463 -> bb29__0_463 [label=""];
    bb29__0_463 -> bb25__0_463 [label=""];
}
