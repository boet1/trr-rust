// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:641:24: 641:31>::default` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:641:24: 641:31>::default() -> ReserveLiquidity {
    let mut _0: state::reserve::ReserveLiquidity;
    let mut _1: solana_program::pubkey::Pubkey;
    let mut _2: u8;
    let mut _3: solana_program::pubkey::Pubkey;
    let mut _4: solana_program::pubkey::Pubkey;
    let mut _5: solana_program::pubkey::Pubkey;
    let mut _6: u64;
    let mut _7: math::decimal::Decimal;
    let mut _8: math::decimal::Decimal;
    let mut _9: math::decimal::Decimal;
    let mut _10: math::decimal::Decimal;
    let mut _11: math::decimal::Decimal;
    let mut _12: std::option::Option<math::decimal::Decimal>;

    bb0: {
        StorageLive(_1);
        _1 = <Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <u8 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <Pubkey as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <Pubkey as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <Pubkey as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <u64 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <decimal::Decimal as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <decimal::Decimal as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <decimal::Decimal as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <decimal::Decimal as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageLive(_11);
        _11 = <decimal::Decimal as Default>::default() -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageLive(_12);
        _12 = <Option<decimal::Decimal> as Default>::default() -> [return: bb12, unwind continue];
    }

    bb12: {
        _0 = ReserveLiquidity { mint_pubkey: move _1, mint_decimals: move _2, supply_pubkey: move _3, pyth_oracle_pubkey: move _4, switchboard_oracle_pubkey: move _5, available_amount: move _6, borrowed_amount_wads: move _7, cumulative_borrow_rate_wads: move _8, accumulated_protocol_fees_wads: move _9, market_price: move _10, smoothed_market_price: move _11, extra_market_price: move _12 };
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
