digraph Mir_0_70 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn refresh_obligation(_1: solana_program::pubkey::Pubkey, _2: solana_program::pubkey::Pubkey, _3: std::vec::Vec&lt;solana_program::pubkey::Pubkey, std::alloc::Global&gt;) -&gt; solana_program::instruction::Instruction<br align="left"/>let mut _4: std::vec::Vec&lt;solana_program::instruction::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _5: std::boxed::Box&lt;[solana_program::instruction::AccountMeta], std::alloc::Global&gt;;<br align="left"/>let mut _6: std::boxed::Box&lt;[solana_program::instruction::AccountMeta; 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _7: usize;<br align="left"/>let mut _8: usize;<br align="left"/>let mut _9: *mut u8;<br align="left"/>let mut _10: std::boxed::Box&lt;[solana_program::instruction::AccountMeta; 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _11: solana_program::instruction::AccountMeta;<br align="left"/>let mut _12: solana_program::pubkey::Pubkey;<br align="left"/>let _13: ();<br align="left"/>let mut _14: &amp;ReErased mut std::vec::Vec&lt;solana_program::instruction::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _15: std::iter::Map&lt;std::vec::IntoIter&lt;solana_program::pubkey::Pubkey, std::alloc::Global&gt;, Closure(DefId(0:71 ~ solend_sdk[296d]::instruction::refresh_obligation::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((solana_program::pubkey::Pubkey,)) -&gt; solana_program::instruction::AccountMeta, []), ()])&gt;;<br align="left"/>let mut _16: std::vec::IntoIter&lt;solana_program::pubkey::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _17: std::vec::Vec&lt;solana_program::pubkey::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _18: Closure(DefId(0:71 ~ solend_sdk[296d]::instruction::refresh_obligation::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((solana_program::pubkey::Pubkey,)) -&gt; solana_program::instruction::AccountMeta, []), ()]);<br align="left"/>let mut _19: solana_program::pubkey::Pubkey;<br align="left"/>let mut _20: std::vec::Vec&lt;solana_program::instruction::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _21: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _22: &amp;ReErased instruction::LendingInstruction;<br align="left"/>let _23: instruction::LendingInstruction;<br align="left"/>let mut _24: &amp;ReErased instruction::LendingInstruction;<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: *const [solana_program::instruction::AccountMeta; 1_usize];<br align="left"/>let mut _28: *const ();<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: usize;<br align="left"/>let mut _31: usize;<br align="left"/>let mut _32: usize;<br align="left"/>let mut _33: bool;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug obligation_pubkey =&gt; _2;<br align="left"/>debug reserve_pubkeys =&gt; _3;<br align="left"/>debug accounts =&gt; _4;<br align="left"/>>;
    bb0__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_26 = const false<br/>_25 = const false<br/>_26 = const true<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_7 = SizeOf([solana_program::instruction::AccountMeta; 1])<br/>_8 = AlignOf([solana_program::instruction::AccountMeta; 1])<br/></td></tr><tr><td align="left">_9 = alloc::alloc::exchange_malloc(move _7, move _8)</td></tr></table>>];
    bb1__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ShallowInitBox(move _9, [solana_program::instruction::AccountMeta; 1])<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _2<br/></td></tr><tr><td align="left">_11 = AccountMeta::new(move _12, const false)</td></tr></table>>];
    bb2__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_27 = (((_10.0: std::ptr::Unique&lt;[solana_program::instruction::AccountMeta; 1]&gt;).0: std::ptr::NonNull&lt;[solana_program::instruction::AccountMeta; 1]&gt;).0: *const [solana_program::instruction::AccountMeta; 1])<br/>_28 = _27 as *const () (PtrToPtr)<br/>_29 = _28 as usize (Transmute)<br/>_30 = AlignOf([solana_program::instruction::AccountMeta; 1])<br/>_31 = Sub(_30, const 1_usize)<br/>_32 = BitAnd(_29, _31)<br/>_33 = Eq(_32, const 0_usize)<br/></td></tr><tr><td align="left">assert(_33, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _30, _29)</td></tr></table>>];
    bb3__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_25 = const true<br/>StorageDead(_5)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut _4<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_26 = const false<br/>_17 = move _3<br/></td></tr><tr><td align="left">_16 = &lt;Vec&lt;Pubkey&gt; as IntoIterator&gt;::into_iter(move _17)</td></tr></table>>];
    bb4__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = {closure@token-lending\sdk\src\instruction.rs:1329:18: 1329:26}<br/></td></tr><tr><td align="left">_15 = &lt;std::vec::IntoIter&lt;Pubkey&gt; as Iterator&gt;::map::&lt;AccountMeta, {closure@token-lending\sdk\src\instruction.rs:1329:18: 1329:26}&gt;(move _16, move _18)</td></tr></table>>];
    bb5__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_13 = &lt;Vec&lt;AccountMeta&gt; as Extend&lt;AccountMeta&gt;&gt;::extend::&lt;Map&lt;std::vec::IntoIter&lt;Pubkey&gt;, {closure@token-lending\sdk\src\instruction.rs:1329:18: 1329:26}&gt;&gt;(move _14, move _15)</td></tr></table>>];
    bb6__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_19)<br/>_19 = _1<br/>StorageLive(_20)<br/>_25 = const false<br/>_20 = move _4<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_24 = const _<br/>_22 = &amp;(*_24)<br/></td></tr><tr><td align="left">_21 = LendingInstruction::pack(move _22)</td></tr></table>>];
    bb7__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_0 = Instruction { program_id: move _19, accounts: move _20, data: move _21 }<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>_25 = const false<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb8__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">8 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb9__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb10__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb11__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb12__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">switchInt(_25)</td></tr></table>>];
    bb13__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb14__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">switchInt(_26)</td></tr></table>>];
    bb15__0_70 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">(*_27) = [move _11]<br/>StorageDead(_11)<br/>_6 = move _10<br/>_5 = move _6 as std::boxed::Box&lt;[solana_program::instruction::AccountMeta]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_10)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = std::slice::&lt;impl [AccountMeta]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _5)</td></tr></table>>];
    bb0__0_70 -> bb1__0_70 [label="return"];
    bb0__0_70 -> bb14__0_70 [label="unwind"];
    bb1__0_70 -> bb2__0_70 [label="return"];
    bb1__0_70 -> bb9__0_70 [label="unwind"];
    bb2__0_70 -> bb15__0_70 [label="success"];
    bb3__0_70 -> bb4__0_70 [label="return"];
    bb3__0_70 -> bb12__0_70 [label="unwind"];
    bb4__0_70 -> bb5__0_70 [label="return"];
    bb4__0_70 -> bb12__0_70 [label="unwind"];
    bb5__0_70 -> bb6__0_70 [label="return"];
    bb5__0_70 -> bb12__0_70 [label="unwind"];
    bb6__0_70 -> bb7__0_70 [label="return"];
    bb6__0_70 -> bb8__0_70 [label="unwind"];
    bb8__0_70 -> bb12__0_70 [label="return"];
    bb9__0_70 -> bb14__0_70 [label="return"];
    bb11__0_70 -> bb14__0_70 [label="return"];
    bb12__0_70 -> bb14__0_70 [label="0"];
    bb12__0_70 -> bb11__0_70 [label="otherwise"];
    bb13__0_70 -> bb10__0_70 [label="return"];
    bb14__0_70 -> bb10__0_70 [label="0"];
    bb14__0_70 -> bb13__0_70 [label="otherwise"];
    bb15__0_70 -> bb3__0_70 [label="return"];
    bb15__0_70 -> bb14__0_70 [label="unwind"];
}
