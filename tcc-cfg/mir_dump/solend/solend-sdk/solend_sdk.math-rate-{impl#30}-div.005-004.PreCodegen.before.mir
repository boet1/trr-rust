// MIR for `rate::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1449:3: 1449:68>::div` before PreCodegen

fn rate::<impl at C:\Users\Yellow Letter HQ\.cargo\registry\src\index.crates.io-6f17d22bba15001f\uint-0.9.1\src\uint.rs:1449:3: 1449:68>::div(_1: U128, _2: T) -> U128 {
    debug self => _1;
    debug other => _2;
    let mut _0: math::rate::U128;
    let _3: math::rate::U128;
    let mut _4: T;
    let mut _5: (math::rate::U128, math::rate::U128);
    let mut _6: math::rate::U128;
    let mut _7: math::rate::U128;
    scope 1 {
        debug other => _3;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = move _2;
        _3 = <T as Into<U128>>::into(move _4) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _1;
        StorageLive(_7);
        _7 = _3;
        _5 = U128::div_mod(move _6, move _7) -> [return: bb2, unwind: bb3];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_6);
        _0 = (_5.0: math::rate::U128);
        StorageDead(_3);
        StorageDead(_5);
        return;
    }

    bb3 (cleanup): {
        resume;
    }
}
