// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:45:10: 45:15>::clone` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:45:10: 45:15>::clone(_1: &reserve::Reserve) -> reserve::Reserve {
    debug self => _1;
    let mut _0: state::reserve::Reserve;
    let mut _2: u8;
    let mut _3: &u8;
    let _4: &u8;
    let mut _5: state::last_update::LastUpdate;
    let mut _6: &state::last_update::LastUpdate;
    let _7: &state::last_update::LastUpdate;
    let mut _8: solana_program::pubkey::Pubkey;
    let mut _9: &solana_program::pubkey::Pubkey;
    let _10: &solana_program::pubkey::Pubkey;
    let mut _11: state::reserve::ReserveLiquidity;
    let mut _12: &state::reserve::ReserveLiquidity;
    let _13: &state::reserve::ReserveLiquidity;
    let mut _14: state::reserve::ReserveCollateral;
    let mut _15: &state::reserve::ReserveCollateral;
    let _16: &state::reserve::ReserveCollateral;
    let mut _17: state::reserve::ReserveConfig;
    let mut _18: &state::reserve::ReserveConfig;
    let _19: &state::reserve::ReserveConfig;
    let mut _20: state::rate_limiter::RateLimiter;
    let mut _21: &state::rate_limiter::RateLimiter;
    let _22: &state::rate_limiter::RateLimiter;
    let mut _23: math::decimal::Decimal;
    let mut _24: &math::decimal::Decimal;
    let _25: &math::decimal::Decimal;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).0: u8);
        _3 = &(*_4);
        _2 = <u8 as Clone>::clone(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: state::last_update::LastUpdate);
        _6 = &(*_7);
        _5 = <last_update::LastUpdate as Clone>::clone(move _6) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: solana_program::pubkey::Pubkey);
        _9 = &(*_10);
        _8 = <Pubkey as Clone>::clone(move _9) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_9);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: state::reserve::ReserveLiquidity);
        _12 = &(*_13);
        _11 = <ReserveLiquidity as Clone>::clone(move _12) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_12);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).4: state::reserve::ReserveCollateral);
        _15 = &(*_16);
        _14 = <ReserveCollateral as Clone>::clone(move _15) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_15);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &((*_1).5: state::reserve::ReserveConfig);
        _18 = &(*_19);
        _17 = <reserve::ReserveConfig as Clone>::clone(move _18) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_18);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).6: state::rate_limiter::RateLimiter);
        _21 = &(*_22);
        _20 = <rate_limiter::RateLimiter as Clone>::clone(move _21) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_21);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &((*_1).7: math::decimal::Decimal);
        _24 = &(*_25);
        _23 = <decimal::Decimal as Clone>::clone(move _24) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_24);
        _0 = reserve::Reserve { version: move _2, last_update: move _5, lending_market: move _8, liquidity: move _11, collateral: move _14, config: move _17, rate_limiter: move _20, attributed_borrow_value: move _23 };
        StorageDead(_23);
        StorageDead(_20);
        StorageDead(_17);
        StorageDead(_14);
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_2);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_19);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_4);
        return;
    }
}
