// MIR for `liquidate_obligation` after PreCodegen

fn liquidate_obligation(_1: Pubkey, _2: u64, _3: Pubkey, _4: Pubkey, _5: Pubkey, _6: Pubkey, _7: Pubkey, _8: Pubkey, _9: Pubkey, _10: Pubkey, _11: Pubkey) -> Instruction {
    debug program_id => _1;
    debug liquidity_amount => _2;
    debug source_liquidity_pubkey => _3;
    debug destination_collateral_pubkey => _4;
    debug repay_reserve_pubkey => _5;
    debug repay_reserve_liquidity_supply_pubkey => _6;
    debug withdraw_reserve_pubkey => _7;
    debug withdraw_reserve_collateral_supply_pubkey => _8;
    debug obligation_pubkey => _9;
    debug lending_market_pubkey => _10;
    debug user_transfer_authority_pubkey => _11;
    let mut _0: solana_program::instruction::Instruction;
    let _12: solana_program::pubkey::Pubkey;
    let _13: u8;
    let mut _14: (solana_program::pubkey::Pubkey, u8);
    let mut _15: &[&[u8]];
    let mut _16: &[&[u8]; 1];
    let _17: &[&[u8]; 1];
    let _18: [&[u8]; 1];
    let mut _19: &[u8];
    let _20: &[u8];
    let _21: &[u8];
    let mut _22: &[u8; 32];
    let _23: [u8; 32];
    let mut _24: solana_program::pubkey::Pubkey;
    let mut _25: std::ops::RangeTo<usize>;
    let mut _26: &solana_program::pubkey::Pubkey;
    let _27: &solana_program::pubkey::Pubkey;
    let mut _28: solana_program::pubkey::Pubkey;
    let mut _29: std::vec::Vec<solana_program::instruction::AccountMeta>;
    let mut _30: std::boxed::Box<[solana_program::instruction::AccountMeta]>;
    let mut _31: std::boxed::Box<[solana_program::instruction::AccountMeta; 11]>;
    let mut _32: usize;
    let mut _33: usize;
    let mut _34: *mut u8;
    let mut _35: std::boxed::Box<[solana_program::instruction::AccountMeta; 11]>;
    let mut _36: solana_program::instruction::AccountMeta;
    let mut _37: solana_program::pubkey::Pubkey;
    let mut _38: solana_program::instruction::AccountMeta;
    let mut _39: solana_program::pubkey::Pubkey;
    let mut _40: solana_program::instruction::AccountMeta;
    let mut _41: solana_program::pubkey::Pubkey;
    let mut _42: solana_program::instruction::AccountMeta;
    let mut _43: solana_program::pubkey::Pubkey;
    let mut _44: solana_program::instruction::AccountMeta;
    let mut _45: solana_program::pubkey::Pubkey;
    let mut _46: solana_program::instruction::AccountMeta;
    let mut _47: solana_program::pubkey::Pubkey;
    let mut _48: solana_program::instruction::AccountMeta;
    let mut _49: solana_program::pubkey::Pubkey;
    let mut _50: solana_program::instruction::AccountMeta;
    let mut _51: solana_program::pubkey::Pubkey;
    let mut _52: solana_program::instruction::AccountMeta;
    let mut _53: solana_program::pubkey::Pubkey;
    let mut _54: solana_program::instruction::AccountMeta;
    let mut _55: solana_program::pubkey::Pubkey;
    let mut _56: solana_program::instruction::AccountMeta;
    let mut _57: solana_program::pubkey::Pubkey;
    let mut _58: std::vec::Vec<u8>;
    let mut _59: &instruction::LendingInstruction;
    let _60: instruction::LendingInstruction;
    let mut _61: u64;
    let mut _62: *const [solana_program::instruction::AccountMeta; 11];
    scope 1 {
        debug lending_market_authority_pubkey => _12;
        debug _bump_seed => _13;
        let mut _63: *const ();
        let mut _64: usize;
        let mut _65: usize;
        let mut _66: usize;
        let mut _67: usize;
        let mut _68: bool;
        scope 2 {
        }
    }

    bb0: {
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        _24 = _10;
        _23 = Pubkey::to_bytes(move _24) -> [return: bb1, unwind continue];
    }

    bb1: {
        _22 = &_23;
        StorageDead(_24);
        StorageLive(_25);
        _25 = RangeTo::<usize> { end: const _ };
        _21 = <[u8; 32] as Index<RangeTo<usize>>>::index(move _22, move _25) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_25);
        StorageDead(_22);
        _20 = &(*_21);
        _19 = &(*_20);
        _18 = [move _19];
        StorageDead(_19);
        _17 = &_18;
        _16 = &(*_17);
        _15 = move _16 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_16);
        StorageLive(_26);
        StorageLive(_27);
        _27 = &_1;
        _26 = &(*_27);
        _14 = Pubkey::find_program_address(move _15, move _26) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_26);
        StorageDead(_15);
        StorageLive(_12);
        _12 = (_14.0: solana_program::pubkey::Pubkey);
        StorageLive(_13);
        _13 = (_14.1: u8);
        StorageDead(_27);
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_14);
        StorageLive(_28);
        _28 = _1;
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _32 = SizeOf([solana_program::instruction::AccountMeta; 11]);
        _33 = AlignOf([solana_program::instruction::AccountMeta; 11]);
        _34 = alloc::alloc::exchange_malloc(move _32, move _33) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_35);
        _35 = ShallowInitBox(move _34, [solana_program::instruction::AccountMeta; 11]);
        StorageLive(_36);
        StorageLive(_37);
        _37 = _3;
        _36 = AccountMeta::new(move _37, const false) -> [return: bb5, unwind: bb20];
    }

    bb5: {
        StorageDead(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = _4;
        _38 = AccountMeta::new(move _39, const false) -> [return: bb6, unwind: bb20];
    }

    bb6: {
        StorageDead(_39);
        StorageLive(_40);
        StorageLive(_41);
        _41 = _5;
        _40 = AccountMeta::new(move _41, const false) -> [return: bb7, unwind: bb20];
    }

    bb7: {
        StorageDead(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = _6;
        _42 = AccountMeta::new(move _43, const false) -> [return: bb8, unwind: bb20];
    }

    bb8: {
        StorageDead(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = _7;
        _44 = AccountMeta::new_readonly(move _45, const false) -> [return: bb9, unwind: bb20];
    }

    bb9: {
        StorageDead(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = _8;
        _46 = AccountMeta::new(move _47, const false) -> [return: bb10, unwind: bb20];
    }

    bb10: {
        StorageDead(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = _9;
        _48 = AccountMeta::new(move _49, const false) -> [return: bb11, unwind: bb20];
    }

    bb11: {
        StorageDead(_49);
        StorageLive(_50);
        StorageLive(_51);
        _51 = _10;
        _50 = AccountMeta::new_readonly(move _51, const false) -> [return: bb12, unwind: bb20];
    }

    bb12: {
        StorageDead(_51);
        StorageLive(_52);
        StorageLive(_53);
        _53 = _12;
        _52 = AccountMeta::new_readonly(move _53, const false) -> [return: bb13, unwind: bb20];
    }

    bb13: {
        StorageDead(_53);
        StorageLive(_54);
        StorageLive(_55);
        _55 = _11;
        _54 = AccountMeta::new_readonly(move _55, const true) -> [return: bb14, unwind: bb20];
    }

    bb14: {
        StorageDead(_55);
        StorageLive(_56);
        StorageLive(_57);
        _57 = spl_token::id() -> [return: bb15, unwind: bb20];
    }

    bb15: {
        _56 = AccountMeta::new_readonly(move _57, const false) -> [return: bb16, unwind: bb20];
    }

    bb16: {
        StorageDead(_57);
        _62 = (((_35.0: std::ptr::Unique<[solana_program::instruction::AccountMeta; 11]>).0: std::ptr::NonNull<[solana_program::instruction::AccountMeta; 11]>).0: *const [solana_program::instruction::AccountMeta; 11]);
        _63 = _62 as *const () (PtrToPtr);
        _64 = _63 as usize (Transmute);
        _65 = AlignOf([solana_program::instruction::AccountMeta; 11]);
        _66 = Sub(_65, const 1_usize);
        _67 = BitAnd(_64, _66);
        _68 = Eq(_67, const 0_usize);
        assert(_68, "misaligned pointer dereference: address must be a multiple of {} but is {}", _65, _64) -> [success: bb22, unwind unreachable];
    }

    bb17: {
        StorageDead(_30);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        _61 = _2;
        _60 = LendingInstruction::LiquidateObligation { liquidity_amount: move _61 };
        _59 = &_60;
        StorageDead(_61);
        _58 = LendingInstruction::pack(move _59) -> [return: bb18, unwind: bb19];
    }

    bb18: {
        StorageDead(_59);
        _0 = Instruction { program_id: move _28, accounts: move _29, data: move _58 };
        StorageDead(_58);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_60);
        return;
    }

    bb19 (cleanup): {
        drop(_29) -> [return: bb21, unwind terminate(cleanup)];
    }

    bb20 (cleanup): {
        drop(_35) -> [return: bb21, unwind terminate(cleanup)];
    }

    bb21 (cleanup): {
        resume;
    }

    bb22: {
        (*_62) = [move _36, move _38, move _40, move _42, move _44, move _46, move _48, move _50, move _52, move _54, move _56];
        StorageDead(_56);
        StorageDead(_54);
        StorageDead(_52);
        StorageDead(_50);
        StorageDead(_48);
        StorageDead(_46);
        StorageDead(_44);
        StorageDead(_42);
        StorageDead(_40);
        StorageDead(_38);
        StorageDead(_36);
        _31 = move _35;
        _30 = move _31 as std::boxed::Box<[solana_program::instruction::AccountMeta]> (PointerCoercion(Unsize));
        StorageDead(_35);
        StorageDead(_31);
        _29 = std::slice::<impl [AccountMeta]>::into_vec::<std::alloc::Global>(move _30) -> [return: bb17, unwind: bb21];
    }
}
