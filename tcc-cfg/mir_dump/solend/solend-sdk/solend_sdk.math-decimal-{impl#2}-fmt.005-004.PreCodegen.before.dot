digraph Mir_0_142 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;decimal::Decimal as Debug&gt;::fmt(_1: &amp;ReErased math::decimal::Decimal, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _4: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _5: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _6: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _7: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _8: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _9: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _10: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _11: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _12: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _13: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased &amp;ReErased math::decimal::Decimal;<br align="left"/>let _15: &amp;ReErased &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _16: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>>;
    bb0__0_142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;mut (*_2)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_16 = const _<br/>_7 = &amp;(*_16)<br/>_6 = &amp;(*_7)<br/>_5 = move _6 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_6)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;_1<br/>_14 = &amp;(*_15)<br/></td></tr><tr><td align="left">_13 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;decimal::Decimal&gt;(move _14)</td></tr></table>>];
    bb1__0_142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_12 = [move _13]<br/>StorageDead(_13)<br/>_11 = &amp;_12<br/>_10 = &amp;(*_11)<br/>_9 = move _10 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_4 = Arguments::&lt;'_&gt;::new_v1(move _5, move _9)</td></tr></table>>];
    bb2__0_142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::write_fmt(move _3, move _4)</td></tr></table>>];
    bb3__0_142 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_142 -> bb1__0_142 [label="return"];
    bb1__0_142 -> bb2__0_142 [label="return"];
    bb2__0_142 -> bb3__0_142 [label="return"];
}
