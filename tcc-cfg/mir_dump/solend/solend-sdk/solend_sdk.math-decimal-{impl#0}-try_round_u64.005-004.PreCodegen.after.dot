digraph Mir_0_133 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn decimal::Decimal::try_round_u64(_1: &amp;ReErased math::decimal::Decimal) -&gt; std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;<br align="left"/>let _2: math::decimal::U192;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, math::decimal::U192&gt;;<br align="left"/>let mut _4: std::result::Result&lt;math::decimal::U192, error::LendingError&gt;;<br align="left"/>let mut _5: std::option::Option&lt;math::decimal::U192&gt;;<br align="left"/>let mut _6: math::decimal::U192;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, math::decimal::U192&gt;;<br align="left"/>let mut _8: std::result::Result&lt;math::decimal::U192, error::LendingError&gt;;<br align="left"/>let mut _9: std::option::Option&lt;math::decimal::U192&gt;;<br align="left"/>let mut _10: math::decimal::U192;<br align="left"/>let mut _11: math::decimal::U192;<br align="left"/>let mut _12: error::LendingError;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _17: math::decimal::U192;<br align="left"/>let mut _18: math::decimal::U192;<br align="left"/>let mut _19: error::LendingError;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _24: math::decimal::U192;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _27: std::result::Result&lt;u64, error::LendingError&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u64, &amp;ReErased str&gt;;<br align="left"/>let mut _29: math::decimal::U192;<br align="left"/>let mut _30: Closure(DefId(0:134 ~ solend_sdk[296d]::math::decimal::{impl#0}::try_round_u64::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased str,)) -&gt; error::LendingError, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _35: u64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug rounded_val =&gt; _2;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>>;
    bb0__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/></td></tr><tr><td align="left">_10 = decimal::Decimal::half_wad()</td></tr></table>>];
    bb1__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((*_1).0: math::decimal::U192)<br/></td></tr><tr><td align="left">_9 = U192::checked_add(move _10, move _11)</td></tr></table>>];
    bb2__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_12)<br/>_12 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_8 = Option::&lt;U192&gt;::ok_or::&lt;LendingError&gt;(move _9, move _12)</td></tr></table>>];
    bb3__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;Result&lt;U192, LendingError&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb4__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_13 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_7 as Continue).0: math::decimal::U192)<br/>_6 = _17<br/>StorageDead(_17)<br/>StorageLive(_18)<br/></td></tr><tr><td align="left">_18 = decimal::Decimal::wad()</td></tr></table>>];
    bb6__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_16)<br/>_16 = move _14<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb8__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">_5 = U192::checked_div(move _6, move _18)</td></tr></table>>];
    bb10__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_6)<br/>StorageLive(_19)<br/>_19 = LendingError::MathOverflow<br/></td></tr><tr><td align="left">_4 = Option::&lt;U192&gt;::ok_or::&lt;LendingError&gt;(move _5, move _19)</td></tr></table>>];
    bb11__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;Result&lt;U192, LendingError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb12__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_20 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb13__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_3 as Continue).0: math::decimal::U192)<br/>_2 = _24<br/>StorageDead(_24)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _2<br/></td></tr><tr><td align="left">_28 = &lt;u64 as TryFrom&lt;U192&gt;&gt;::try_from(move _29)</td></tr></table>>];
    bb14__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb15__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = {closure@token-lending\sdk\src\math\decimal.rs:86:47: 86:50}<br/></td></tr><tr><td align="left">_27 = Result::&lt;u64, &amp;str&gt;::map_err::&lt;LendingError, {closure@token-lending\sdk\src\math\decimal.rs:86:47: 86:50}&gt;(move _28, move _30)</td></tr></table>>];
    bb17__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb18__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb19__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_26 as Continue).0: u64)<br/>_25 = _35<br/>StorageDead(_35)<br/>_0 = Result::&lt;u64, ProgramError&gt;::Ok(move _25)<br/>StorageDead(_25)<br/>StorageDead(_2)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u64, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb21__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_25)<br/>StorageDead(_2)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_133 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_133 -> bb1__0_133 [label="return"];
    bb1__0_133 -> bb2__0_133 [label="return"];
    bb2__0_133 -> bb3__0_133 [label="return"];
    bb3__0_133 -> bb4__0_133 [label="return"];
    bb4__0_133 -> bb5__0_133 [label="0"];
    bb4__0_133 -> bb7__0_133 [label="1"];
    bb4__0_133 -> bb6__0_133 [label="otherwise"];
    bb5__0_133 -> bb9__0_133 [label="return"];
    bb7__0_133 -> bb8__0_133 [label="return"];
    bb8__0_133 -> bb22__0_133 [label=""];
    bb9__0_133 -> bb10__0_133 [label="return"];
    bb10__0_133 -> bb11__0_133 [label="return"];
    bb11__0_133 -> bb12__0_133 [label="return"];
    bb12__0_133 -> bb13__0_133 [label="0"];
    bb12__0_133 -> bb14__0_133 [label="1"];
    bb12__0_133 -> bb6__0_133 [label="otherwise"];
    bb13__0_133 -> bb16__0_133 [label="return"];
    bb14__0_133 -> bb15__0_133 [label="return"];
    bb15__0_133 -> bb22__0_133 [label=""];
    bb16__0_133 -> bb17__0_133 [label="return"];
    bb17__0_133 -> bb18__0_133 [label="return"];
    bb18__0_133 -> bb19__0_133 [label="0"];
    bb18__0_133 -> bb20__0_133 [label="1"];
    bb18__0_133 -> bb6__0_133 [label="otherwise"];
    bb19__0_133 -> bb23__0_133 [label=""];
    bb20__0_133 -> bb21__0_133 [label="return"];
    bb21__0_133 -> bb23__0_133 [label=""];
    bb22__0_133 -> bb23__0_133 [label=""];
}
