digraph Mir_0_1401 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn U128::split(_1: u64) -&gt; (u64, u64)<br align="left"/>let mut _2: u64;<br align="left"/>let mut _3: u64;<br align="left"/>let mut _4: u32;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: u64;<br align="left"/>debug a =&gt; _1;<br align="left"/>>;
    bb0__0_1401 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = _1<br/>_4 = const 32_i32 as u32 (IntToInt)<br/>_5 = Lt(move _4, const 64_u32)<br/></td></tr><tr><td align="left">assert(move _5, &quot;attempt to shift right by `{}`, which would overflow&quot;, const 32_i32)</td></tr></table>>];
    bb1__0_1401 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_2 = Shr(move _3, const 32_i32)<br/>StorageDead(_3)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _1<br/>_6 = BitAnd(move _7, const 4294967295_u64)<br/>StorageDead(_7)<br/>_0 = (move _2, move _6)<br/>StorageDead(_6)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1401 -> bb1__0_1401 [label="success"];
}
