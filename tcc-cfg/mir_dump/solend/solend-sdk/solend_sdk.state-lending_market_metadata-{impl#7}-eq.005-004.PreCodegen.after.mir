// MIR for `lending_market_metadata::<impl at token-lending\sdk\src\state\lending_market_metadata.rs:23:30: 23:39>::eq` after PreCodegen

fn lending_market_metadata::<impl at token-lending\sdk\src\state\lending_market_metadata.rs:23:30: 23:39>::eq(_1: &lending_market_metadata::LendingMarketMetadata, _2: &lending_market_metadata::LendingMarketMetadata) -> bool {
    debug self => _1;
    debug other => _2;
    let mut _0: bool;
    let mut _3: bool;
    let mut _4: u8;
    let mut _5: u8;
    let mut _6: bool;
    let mut _7: &[u8; 50];
    let mut _8: &[u8; 50];
    let mut _9: bool;
    let mut _10: &[u8; 300];
    let mut _11: &[u8; 300];
    let mut _12: bool;
    let mut _13: &[u8; 250];
    let mut _14: &[u8; 250];
    let mut _15: bool;
    let mut _16: &[solana_program::pubkey::Pubkey; 4];
    let mut _17: &[solana_program::pubkey::Pubkey; 4];
    let mut _18: &[u8; 100];
    let mut _19: &[u8; 100];

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_1).0: u8);
        StorageLive(_5);
        _5 = ((*_2).0: u8);
        _3 = Eq(move _4, move _5);
        switchInt(move _3) -> [0: bb14, otherwise: bb1];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).1: [u8; 50]);
        StorageLive(_8);
        _8 = &((*_2).1: [u8; 50]);
        _6 = <[u8; 50] as PartialEq>::eq(move _7, move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        switchInt(move _6) -> [0: bb13, otherwise: bb3];
    }

    bb3: {
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).2: [u8; 300]);
        StorageLive(_11);
        _11 = &((*_2).2: [u8; 300]);
        _9 = <[u8; 300] as PartialEq>::eq(move _10, move _11) -> [return: bb4, unwind continue];
    }

    bb4: {
        switchInt(move _9) -> [0: bb12, otherwise: bb5];
    }

    bb5: {
        StorageDead(_11);
        StorageDead(_10);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &((*_1).3: [u8; 250]);
        StorageLive(_14);
        _14 = &((*_2).3: [u8; 250]);
        _12 = <[u8; 250] as PartialEq>::eq(move _13, move _14) -> [return: bb6, unwind continue];
    }

    bb6: {
        switchInt(move _12) -> [0: bb11, otherwise: bb7];
    }

    bb7: {
        StorageDead(_14);
        StorageDead(_13);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).4: [solana_program::pubkey::Pubkey; 4]);
        StorageLive(_17);
        _17 = &((*_2).4: [solana_program::pubkey::Pubkey; 4]);
        _15 = <[Pubkey; 4] as PartialEq>::eq(move _16, move _17) -> [return: bb8, unwind continue];
    }

    bb8: {
        switchInt(move _15) -> [0: bb10, otherwise: bb9];
    }

    bb9: {
        StorageDead(_17);
        StorageDead(_16);
        StorageLive(_18);
        _18 = &((*_1).5: [u8; 100]);
        StorageLive(_19);
        _19 = &((*_2).5: [u8; 100]);
        _0 = <[u8; 100] as PartialEq>::eq(move _18, move _19) -> [return: bb16, unwind continue];
    }

    bb10: {
        StorageDead(_17);
        StorageDead(_16);
        goto -> bb15;
    }

    bb11: {
        StorageDead(_14);
        StorageDead(_13);
        goto -> bb15;
    }

    bb12: {
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb15;
    }

    bb13: {
        StorageDead(_8);
        StorageDead(_7);
        goto -> bb15;
    }

    bb14: {
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb15;
    }

    bb15: {
        _0 = const false;
        goto -> bb17;
    }

    bb16: {
        StorageDead(_19);
        StorageDead(_18);
        goto -> bb17;
    }

    bb17: {
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_9);
        StorageDead(_6);
        StorageDead(_3);
        return;
    }
}
