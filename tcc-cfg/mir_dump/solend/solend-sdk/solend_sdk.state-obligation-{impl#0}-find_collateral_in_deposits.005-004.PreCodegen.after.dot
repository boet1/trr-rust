digraph Mir_0_330 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn obligation::Obligation::find_collateral_in_deposits(_1: &amp;ReErased state::obligation::Obligation, _2: solana_program::pubkey::Pubkey) -&gt; std::result::Result&lt;(&amp;ReErased state::obligation::ObligationCollateral, usize), solana_program::program_error::ProgramError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _6: !;<br align="left"/>let _7: ();<br align="left"/>let mut _8: &amp;ReErased str;<br align="left"/>let _9: &amp;ReErased str;<br align="left"/>let mut _10: solana_program::program_error::ProgramError;<br align="left"/>let mut _11: error::LendingError;<br align="left"/>let _12: usize;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, usize&gt;;<br align="left"/>let mut _14: std::result::Result&lt;usize, error::LendingError&gt;;<br align="left"/>let mut _15: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _16: &amp;ReErased state::obligation::Obligation;<br align="left"/>let mut _17: solana_program::pubkey::Pubkey;<br align="left"/>let mut _18: error::LendingError;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _23: usize;<br align="left"/>let mut _24: (&amp;ReErased state::obligation::ObligationCollateral, usize);<br align="left"/>let mut _25: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let _26: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let _27: &amp;ReErased state::obligation::ObligationCollateral;<br align="left"/>let mut _28: &amp;ReErased std::vec::Vec&lt;state::obligation::ObligationCollateral, std::alloc::Global&gt;;<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: usize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug deposit_reserve =&gt; _2;<br align="left"/>debug collateral_index =&gt; _12;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>>;
    bb0__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/></td></tr><tr><td align="left">_4 = Vec::&lt;obligation::ObligationCollateral&gt;::is_empty(move _5)</td></tr></table>>];
    bb1__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = const &quot;Obligation has no deposits&quot;<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_7 = solana_program::log::sol_log(move _8)</td></tr></table>>];
    bb3__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = LendingError::ObligationDepositsEmpty<br/></td></tr><tr><td align="left">_10 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _11)</td></tr></table>>];
    bb4__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_0 = Result::&lt;(&amp;obligation::ObligationCollateral, usize), ProgramError&gt;::Err(move _10)<br/>StorageDead(_10)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_1)<br/>StorageLive(_17)<br/>_17 = _2<br/></td></tr><tr><td align="left">_15 = obligation::Obligation::_find_collateral_index_in_deposits(move _16, move _17)</td></tr></table>>];
    bb6__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_18)<br/>_18 = LendingError::InvalidObligationCollateral<br/></td></tr><tr><td align="left">_14 = Option::&lt;usize&gt;::ok_or::&lt;LendingError&gt;(move _15, move _18)</td></tr></table>>];
    bb7__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;Result&lt;usize, LendingError&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_19 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_13 as Continue).0: usize)<br/>_12 = _23<br/>StorageDead(_23)<br/>StorageDead(_13)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;((*_1).4: std::vec::Vec&lt;state::obligation::ObligationCollateral&gt;)<br/>StorageLive(_29)<br/>_29 = _12<br/></td></tr><tr><td align="left">_27 = &lt;Vec&lt;obligation::ObligationCollateral&gt; as Index&lt;usize&gt;&gt;::index(move _28, move _29)</td></tr></table>>];
    bb10__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb11__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(&amp;obligation::ObligationCollateral, usize), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb12__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>_26 = &amp;(*_27)<br/>_25 = &amp;(*_26)<br/>StorageLive(_30)<br/>_30 = _12<br/>_24 = (move _25, move _30)<br/>StorageDead(_30)<br/>StorageDead(_25)<br/>_0 = Result::&lt;(&amp;obligation::ObligationCollateral, usize), ProgramError&gt;::Ok(move _24)<br/>StorageDead(_24)<br/>StorageDead(_12)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_330 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_330 -> bb1__0_330 [label="return"];
    bb1__0_330 -> bb5__0_330 [label="0"];
    bb1__0_330 -> bb2__0_330 [label="otherwise"];
    bb2__0_330 -> bb3__0_330 [label="return"];
    bb3__0_330 -> bb4__0_330 [label="return"];
    bb4__0_330 -> bb14__0_330 [label=""];
    bb5__0_330 -> bb6__0_330 [label="return"];
    bb6__0_330 -> bb7__0_330 [label="return"];
    bb7__0_330 -> bb8__0_330 [label="return"];
    bb8__0_330 -> bb9__0_330 [label="0"];
    bb8__0_330 -> bb11__0_330 [label="1"];
    bb8__0_330 -> bb10__0_330 [label="otherwise"];
    bb9__0_330 -> bb13__0_330 [label="return"];
    bb11__0_330 -> bb12__0_330 [label="return"];
    bb12__0_330 -> bb14__0_330 [label=""];
    bb13__0_330 -> bb14__0_330 [label=""];
}
