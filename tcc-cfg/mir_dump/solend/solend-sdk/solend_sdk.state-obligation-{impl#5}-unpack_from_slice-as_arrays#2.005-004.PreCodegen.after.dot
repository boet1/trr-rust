digraph Mir_0_2171 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;obligation::Obligation as Pack&gt;::unpack_from_slice::as_arrays(_1: &amp;ReErased [T/#0; 112_usize]) -&gt; (&amp;ReErased [T/#0; 32_usize], &amp;ReErased [T/#0; 16_usize], &amp;ReErased [T/#0; 16_usize], &amp;ReErased [T/#0; 16_usize], &amp;ReErased [T/#0; 32_usize])<br align="left"/>let mut _2: *const T/#0;<br align="left"/>let mut _3: &amp;ReErased [T/#0];<br align="left"/>let mut _4: &amp;ReErased [T/#0; 112_usize];<br align="left"/>let mut _5: &amp;ReErased [T/#0; 32_usize];<br align="left"/>let _6: &amp;ReErased [T/#0; 32_usize];<br align="left"/>let _7: *const [T/#0; 32_usize];<br align="left"/>let mut _8: *const T/#0;<br align="left"/>let mut _9: *const T/#0;<br align="left"/>let mut _10: *const T/#0;<br align="left"/>let mut _11: isize;<br align="left"/>let mut _12: &amp;ReErased [T/#0; 16_usize];<br align="left"/>let _13: &amp;ReErased [T/#0; 16_usize];<br align="left"/>let _14: *const [T/#0; 16_usize];<br align="left"/>let mut _15: *const T/#0;<br align="left"/>let mut _16: *const T/#0;<br align="left"/>let mut _17: *const T/#0;<br align="left"/>let mut _18: isize;<br align="left"/>let mut _19: &amp;ReErased [T/#0; 16_usize];<br align="left"/>let _20: &amp;ReErased [T/#0; 16_usize];<br align="left"/>let _21: *const [T/#0; 16_usize];<br align="left"/>let mut _22: *const T/#0;<br align="left"/>let mut _23: *const T/#0;<br align="left"/>let mut _24: *const T/#0;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: &amp;ReErased [T/#0; 16_usize];<br align="left"/>let _27: &amp;ReErased [T/#0; 16_usize];<br align="left"/>let _28: *const [T/#0; 16_usize];<br align="left"/>let mut _29: *const T/#0;<br align="left"/>let mut _30: *const T/#0;<br align="left"/>let mut _31: *const T/#0;<br align="left"/>let mut _32: isize;<br align="left"/>let mut _33: &amp;ReErased [T/#0; 32_usize];<br align="left"/>let _34: &amp;ReErased [T/#0; 32_usize];<br align="left"/>let _35: *const [T/#0; 32_usize];<br align="left"/>let mut _36: *const T/#0;<br align="left"/>let mut _37: *const T/#0;<br align="left"/>let mut _38: *const T/#0;<br align="left"/>let mut _39: isize;<br align="left"/>debug a =&gt; _1;<br align="left"/>debug p =&gt; _2;<br align="left"/>debug aref =&gt; _6;<br align="left"/>debug aref =&gt; _13;<br align="left"/>debug aref =&gt; _20;<br align="left"/>debug aref =&gt; _27;<br align="left"/>debug aref =&gt; _34;<br align="left"/>>;
    bb0__0_2171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;(*_1)<br/>_3 = move _4 as &amp;[T] (PointerCoercion(Unsize))<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">_2 = core::slice::&lt;impl [T]&gt;::as_ptr(move _3)</td></tr></table>>];
    bb1__0_2171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _2<br/>_7 = move _8 as *const [T; 32] (PtrToPtr)<br/>StorageDead(_8)<br/>_6 = &amp;(*_7)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _2<br/>StorageLive(_11)<br/>_11 = const _ as isize (IntToInt)<br/></td></tr><tr><td align="left">_9 = std::ptr::const_ptr::&lt;impl *const T&gt;::offset(move _10, move _11)</td></tr></table>>];
    bb2__0_2171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>_2 = move _9<br/>StorageDead(_9)<br/>_5 = &amp;(*_6)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _2<br/>_14 = move _15 as *const [T; 16] (PtrToPtr)<br/>StorageDead(_15)<br/>_13 = &amp;(*_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _2<br/>StorageLive(_18)<br/>_18 = const 16_isize<br/></td></tr><tr><td align="left">_16 = std::ptr::const_ptr::&lt;impl *const T&gt;::offset(move _17, move _18)</td></tr></table>>];
    bb3__0_2171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>_2 = move _16<br/>StorageDead(_16)<br/>_12 = &amp;(*_13)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _2<br/>_21 = move _22 as *const [T; 16] (PtrToPtr)<br/>StorageDead(_22)<br/>_20 = &amp;(*_21)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _2<br/>StorageLive(_25)<br/>_25 = const 16_isize<br/></td></tr><tr><td align="left">_23 = std::ptr::const_ptr::&lt;impl *const T&gt;::offset(move _24, move _25)</td></tr></table>>];
    bb4__0_2171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>_2 = move _23<br/>StorageDead(_23)<br/>_19 = &amp;(*_20)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _2<br/>_28 = move _29 as *const [T; 16] (PtrToPtr)<br/>StorageDead(_29)<br/>_27 = &amp;(*_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _2<br/>StorageLive(_32)<br/>_32 = const 16_isize<br/></td></tr><tr><td align="left">_30 = std::ptr::const_ptr::&lt;impl *const T&gt;::offset(move _31, move _32)</td></tr></table>>];
    bb5__0_2171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>_2 = move _30<br/>StorageDead(_30)<br/>_26 = &amp;(*_27)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _2<br/>_35 = move _36 as *const [T; 32] (PtrToPtr)<br/>StorageDead(_36)<br/>_34 = &amp;(*_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _2<br/>StorageLive(_39)<br/>_39 = const 32_isize<br/></td></tr><tr><td align="left">_37 = std::ptr::const_ptr::&lt;impl *const T&gt;::offset(move _38, move _39)</td></tr></table>>];
    bb6__0_2171 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>_2 = move _37<br/>StorageDead(_37)<br/>_33 = &amp;(*_34)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>_0 = (move _5, move _12, move _19, move _26, move _33)<br/>StorageDead(_33)<br/>StorageDead(_26)<br/>StorageDead(_19)<br/>StorageDead(_12)<br/>StorageDead(_5)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2171 -> bb1__0_2171 [label="return"];
    bb1__0_2171 -> bb2__0_2171 [label="return"];
    bb2__0_2171 -> bb3__0_2171 [label="return"];
    bb3__0_2171 -> bb4__0_2171 [label="return"];
    bb4__0_2171 -> bb5__0_2171 [label="return"];
    bb5__0_2171 -> bb6__0_2171 [label="return"];
}
