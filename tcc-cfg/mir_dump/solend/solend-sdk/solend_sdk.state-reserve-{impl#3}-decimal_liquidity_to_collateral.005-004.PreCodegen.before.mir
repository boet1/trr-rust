// MIR for `reserve::<impl at token-lending\sdk\src\state\reserve.rs:902:1: 902:28>::decimal_liquidity_to_collateral` before PreCodegen

fn reserve::<impl at token-lending\sdk\src\state\reserve.rs:902:1: 902:28>::decimal_liquidity_to_collateral(_1: &CollateralExchangeRate, _2: decimal::Decimal) -> Result<decimal::Decimal, ProgramError> {
    debug self => _1;
    debug liquidity_amount => _2;
    let mut _0: std::result::Result<math::decimal::Decimal, solana_program::program_error::ProgramError>;
    let mut _3: math::decimal::Decimal;
    let mut _4: math::rate::Rate;

    bb0: {
        StorageLive(_3);
        _3 = _2;
        StorageLive(_4);
        _4 = ((*_1).0: math::rate::Rate);
        _0 = <decimal::Decimal as common::TryMul<rate::Rate>>::try_mul(move _3, move _4) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
