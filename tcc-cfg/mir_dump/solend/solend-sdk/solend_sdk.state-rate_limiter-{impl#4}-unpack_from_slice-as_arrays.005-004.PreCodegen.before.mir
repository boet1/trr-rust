// MIR for `rate_limiter::<impl at token-lending\sdk\src\state\rate_limiter.rs:166:1: 166:26>::unpack_from_slice::as_arrays` before PreCodegen

fn rate_limiter::<impl at token-lending\sdk\src\state\rate_limiter.rs:166:1: 166:26>::unpack_from_slice::as_arrays(_1: &[T; 56]) -> (&[T; 8], &[T; 8], &[T; 16], &[T; 8], &[T; 16]) {
    debug a => _1;
    let mut _0: (&[T; 8], &[T; 8], &[T; 16], &[T; 8], &[T; 16]);
    let mut _2: *const T;
    let mut _3: &[T];
    let mut _4: &[T; 56];
    let mut _5: &[T; 8];
    let _7: *const [T; 8];
    let mut _8: *const T;
    let mut _9: *const T;
    let mut _10: *const T;
    let mut _11: isize;
    let mut _12: &[T; 8];
    let _14: *const [T; 8];
    let mut _15: *const T;
    let mut _16: *const T;
    let mut _17: *const T;
    let mut _18: isize;
    let mut _19: &[T; 16];
    let _21: *const [T; 16];
    let mut _22: *const T;
    let mut _23: *const T;
    let mut _24: *const T;
    let mut _25: isize;
    let mut _26: &[T; 8];
    let _28: *const [T; 8];
    let mut _29: *const T;
    let mut _30: *const T;
    let mut _31: *const T;
    let mut _32: isize;
    let mut _33: &[T; 16];
    let _35: *const [T; 16];
    let mut _36: *const T;
    let mut _37: *const T;
    let mut _38: *const T;
    let mut _39: isize;
    scope 1 {
        debug p => _2;
        let _6: &[T; 8];
        let _13: &[T; 8];
        let _20: &[T; 16];
        let _27: &[T; 8];
        let _34: &[T; 16];
        scope 2 {
            debug aref => _6;
        }
        scope 3 {
            debug aref => _13;
        }
        scope 4 {
            debug aref => _20;
        }
        scope 5 {
            debug aref => _27;
        }
        scope 6 {
            debug aref => _34;
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        _3 = move _4 as &[T] (PointerCoercion(Unsize));
        StorageDead(_4);
        _2 = core::slice::<impl [T]>::as_ptr(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = _2;
        _7 = move _8 as *const [T; 8] (PtrToPtr);
        StorageDead(_8);
        _6 = &(*_7);
        StorageLive(_9);
        StorageLive(_10);
        _10 = _2;
        StorageLive(_11);
        _11 = const 8_isize;
        _9 = std::ptr::const_ptr::<impl *const T>::offset(move _10, move _11) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_11);
        StorageDead(_10);
        _2 = move _9;
        StorageDead(_9);
        _5 = &(*_6);
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = _2;
        _14 = move _15 as *const [T; 8] (PtrToPtr);
        StorageDead(_15);
        _13 = &(*_14);
        StorageLive(_16);
        StorageLive(_17);
        _17 = _2;
        StorageLive(_18);
        _18 = const 8_isize;
        _16 = std::ptr::const_ptr::<impl *const T>::offset(move _17, move _18) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_18);
        StorageDead(_17);
        _2 = move _16;
        StorageDead(_16);
        _12 = &(*_13);
        StorageDead(_14);
        StorageDead(_13);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = _2;
        _21 = move _22 as *const [T; 16] (PtrToPtr);
        StorageDead(_22);
        _20 = &(*_21);
        StorageLive(_23);
        StorageLive(_24);
        _24 = _2;
        StorageLive(_25);
        _25 = const 16_isize;
        _23 = std::ptr::const_ptr::<impl *const T>::offset(move _24, move _25) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_25);
        StorageDead(_24);
        _2 = move _23;
        StorageDead(_23);
        _19 = &(*_20);
        StorageDead(_21);
        StorageDead(_20);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = _2;
        _28 = move _29 as *const [T; 8] (PtrToPtr);
        StorageDead(_29);
        _27 = &(*_28);
        StorageLive(_30);
        StorageLive(_31);
        _31 = _2;
        StorageLive(_32);
        _32 = const 8_isize;
        _30 = std::ptr::const_ptr::<impl *const T>::offset(move _31, move _32) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_32);
        StorageDead(_31);
        _2 = move _30;
        StorageDead(_30);
        _26 = &(*_27);
        StorageDead(_28);
        StorageDead(_27);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        _36 = _2;
        _35 = move _36 as *const [T; 16] (PtrToPtr);
        StorageDead(_36);
        _34 = &(*_35);
        StorageLive(_37);
        StorageLive(_38);
        _38 = _2;
        StorageLive(_39);
        _39 = const 16_isize;
        _37 = std::ptr::const_ptr::<impl *const T>::offset(move _38, move _39) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_39);
        StorageDead(_38);
        _2 = move _37;
        StorageDead(_37);
        _33 = &(*_34);
        StorageDead(_35);
        StorageDead(_34);
        _0 = (move _5, move _12, move _19, move _26, move _33);
        StorageDead(_33);
        StorageDead(_26);
        StorageDead(_19);
        StorageDead(_12);
        StorageDead(_5);
        StorageDead(_2);
        return;
    }
}
