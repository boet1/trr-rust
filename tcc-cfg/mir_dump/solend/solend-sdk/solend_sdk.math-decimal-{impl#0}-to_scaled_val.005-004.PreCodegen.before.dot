digraph Mir_0_130 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn decimal::Decimal::to_scaled_val(_1: &amp;ReErased math::decimal::Decimal) -&gt; std::result::Result&lt;u128, solana_program::program_error::ProgramError&gt;<br align="left"/>let mut _2: u128;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;, u128&gt;;<br align="left"/>let mut _4: std::result::Result&lt;u128, error::LendingError&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u128, &amp;ReErased str&gt;;<br align="left"/>let mut _6: math::decimal::U192;<br align="left"/>let mut _7: Closure(DefId(0:131 ~ solend_sdk[296d]::math::decimal::{impl#0}::to_scaled_val::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased str,)) -&gt; error::LendingError, []), ()]);<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;;<br align="left"/>let _12: u128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>>;
    bb0__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).0: math::decimal::U192)<br/></td></tr><tr><td align="left">_5 = &lt;u128 as TryFrom&lt;U192&gt;&gt;::try_from(move _6)</td></tr></table>>];
    bb1__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = {closure@token-lending\sdk\src\math\decimal.rs:71:43: 71:46}<br/></td></tr><tr><td align="left">_4 = Result::&lt;u128, &amp;str&gt;::map_err::&lt;LendingError, {closure@token-lending\sdk\src\math\decimal.rs:71:43: 71:46}&gt;(move _5, move _7)</td></tr></table>>];
    bb2__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;Result&lt;u128, LendingError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb3__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_8 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb4__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_3 as Continue).0: u128)<br/>_2 = _12<br/>StorageDead(_12)<br/>_0 = Result::&lt;u128, ProgramError&gt;::Ok(move _2)<br/>StorageDead(_2)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::LendingError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;u128, ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb7__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_2)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_130 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_130 -> bb1__0_130 [label="return"];
    bb1__0_130 -> bb2__0_130 [label="return"];
    bb2__0_130 -> bb3__0_130 [label="return"];
    bb3__0_130 -> bb4__0_130 [label="0"];
    bb3__0_130 -> bb6__0_130 [label="1"];
    bb3__0_130 -> bb5__0_130 [label="otherwise"];
    bb4__0_130 -> bb8__0_130 [label=""];
    bb6__0_130 -> bb7__0_130 [label="return"];
    bb7__0_130 -> bb8__0_130 [label=""];
}
