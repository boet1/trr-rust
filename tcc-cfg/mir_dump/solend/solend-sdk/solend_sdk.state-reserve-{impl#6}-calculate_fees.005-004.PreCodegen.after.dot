digraph Mir_0_524 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn reserve::ReserveFees::calculate_fees(_1: &amp;ReErased state::reserve::ReserveFees, _2: math::decimal::Decimal, _3: u64, _4: state::reserve::FeeCalculation) -&gt; std::result::Result&lt;(u64, u64), solana_program::program_error::ProgramError&gt;<br align="left"/>let _5: math::rate::Rate;<br align="left"/>let mut _6: u64;<br align="left"/>let _7: math::rate::Rate;<br align="left"/>let mut _8: u8;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: &amp;ReErased math::rate::Rate;<br align="left"/>let mut _11: &amp;ReErased math::rate::Rate;<br align="left"/>let _12: math::rate::Rate;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _15: &amp;ReErased math::decimal::Decimal;<br align="left"/>let _16: math::decimal::Decimal;<br align="left"/>let _17: bool;<br align="left"/>let mut _18: &amp;ReErased math::rate::Rate;<br align="left"/>let mut _19: &amp;ReErased math::rate::Rate;<br align="left"/>let _20: math::rate::Rate;<br align="left"/>let _21: u64;<br align="left"/>let mut _22: bool;<br align="left"/>let _23: math::decimal::Decimal;<br align="left"/>let mut _24: isize;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _26: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _27: math::decimal::Decimal;<br align="left"/>let mut _28: math::rate::Rate;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _33: math::decimal::Decimal;<br align="left"/>let _34: math::rate::Rate;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::rate::Rate&gt;;<br align="left"/>let mut _36: std::result::Result&lt;math::rate::Rate, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _37: math::rate::Rate;<br align="left"/>let mut _38: math::rate::Rate;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::rate::Rate&gt;;<br align="left"/>let mut _40: std::result::Result&lt;math::rate::Rate, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _41: math::rate::Rate;<br align="left"/>let mut _42: math::rate::Rate;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _47: math::rate::Rate;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _52: math::rate::Rate;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _54: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _55: math::decimal::Decimal;<br align="left"/>let mut _56: math::rate::Rate;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _61: math::decimal::Decimal;<br align="left"/>let _62: math::decimal::Decimal;<br align="left"/>let mut _63: math::decimal::Decimal;<br align="left"/>let mut _64: math::decimal::Decimal;<br align="left"/>let mut _65: u64;<br align="left"/>let _66: ();<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _69: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _70: !;<br align="left"/>let _71: ();<br align="left"/>let mut _72: &amp;ReErased str;<br align="left"/>let _73: &amp;ReErased str;<br align="left"/>let mut _74: solana_program::program_error::ProgramError;<br align="left"/>let mut _75: error::LendingError;<br align="left"/>let _76: u64;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _79: &amp;ReErased math::decimal::Decimal;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _84: u64;<br align="left"/>let _85: u64;<br align="left"/>let mut _86: bool;<br align="left"/>let mut _87: u64;<br align="left"/>let mut _88: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, u64&gt;;<br align="left"/>let mut _89: std::result::Result&lt;u64, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _90: &amp;ReErased math::decimal::Decimal;<br align="left"/>let _91: math::decimal::Decimal;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;, math::decimal::Decimal&gt;;<br align="left"/>let mut _93: std::result::Result&lt;math::decimal::Decimal, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _94: math::decimal::Decimal;<br align="left"/>let mut _95: math::rate::Rate;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _100: math::decimal::Decimal;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;;<br align="left"/>let _105: u64;<br align="left"/>let mut _106: (u64, u64);<br align="left"/>let mut _107: u64;<br align="left"/>let mut _108: u64;<br align="left"/>let mut _109: (u64, u64);<br align="left"/>let mut _110: bool;<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: bool;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug amount =&gt; _2;<br align="left"/>debug fee_wad =&gt; _3;<br align="left"/>debug fee_calculation =&gt; _4;<br align="left"/>debug borrow_fee_rate =&gt; _5;<br align="left"/>debug host_fee_rate =&gt; _7;<br align="left"/>debug need_to_assess_host_fee =&gt; _17;<br align="left"/>debug minimum_fee =&gt; _21;<br align="left"/>debug borrow_fee_amount =&gt; _23;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug borrow_fee_rate =&gt; _34;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug borrow_fee_decimal =&gt; _62;<br align="left"/>debug borrow_fee =&gt; _76;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug host_fee =&gt; _85;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>>;
    bb0__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_111 = const false<br/>_110 = const false<br/>_112 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/></td></tr><tr><td align="left">_5 = rate::Rate::from_scaled_val(move _6)</td></tr></table>>];
    bb1__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = ((*_1).2: u8)<br/></td></tr><tr><td align="left">_7 = rate::Rate::from_percent(move _8)</td></tr></table>>];
    bb2__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;_5<br/>StorageLive(_11)<br/>StorageLive(_12)<br/></td></tr><tr><td align="left">_12 = rate::Rate::zero()</td></tr></table>>];
    bb3__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_11 = &amp;_12<br/></td></tr><tr><td align="left">_9 = &lt;rate::Rate as PartialOrd&gt;::gt(move _10, move _11)</td></tr></table>>];
    bb4__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb5__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;_2<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = decimal::Decimal::zero()</td></tr></table>>];
    bb6__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_15 = &amp;_16<br/></td></tr><tr><td align="left">_13 = &lt;decimal::Decimal as PartialOrd&gt;::gt(move _14, move _15)</td></tr></table>>];
    bb7__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb8__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;_7<br/>StorageLive(_19)<br/>StorageLive(_20)<br/></td></tr><tr><td align="left">_20 = rate::Rate::zero()</td></tr></table>>];
    bb9__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_19 = &amp;_20<br/></td></tr><tr><td align="left">_17 = &lt;rate::Rate as PartialOrd&gt;::gt(move _18, move _19)</td></tr></table>>];
    bb10__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _17<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb11__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_21 = const 2_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_21 = const 1_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>_24 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb14__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _5<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = _5<br/>StorageLive(_42)<br/></td></tr><tr><td align="left">_42 = rate::Rate::one()</td></tr></table>>];
    bb15__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb16__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _2<br/>StorageLive(_28)<br/>_28 = _5<br/></td></tr><tr><td align="left">_26 = &lt;decimal::Decimal as common::TryMul&lt;rate::Rate&gt;&gt;::try_mul(move _27, move _28)</td></tr></table>>];
    bb17__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb18__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_29 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb19__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_25 as Continue).0: math::decimal::Decimal)<br/>_23 = _33<br/>StorageDead(_33)<br/>_113 = discriminant(_25)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_32)<br/>_32 = move _30<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb21__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_139 = discriminant(_25)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">_40 = &lt;rate::Rate as common::TryAdd&gt;::try_add(move _41, move _42)</td></tr></table>>];
    bb23__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;Result&lt;rate::Rate, ProgramError&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb24__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_111 = const true<br/>StorageDead(_40)<br/>_43 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb25__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_39 as Continue).0: math::rate::Rate)<br/>_38 = _47<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_36 = &lt;rate::Rate as common::TryDiv&lt;rate::Rate&gt;&gt;::try_div(move _37, move _38)</td></tr></table>>];
    bb26__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb27__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;Result&lt;rate::Rate, ProgramError&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb29__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_48 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb30__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_35 as Continue).0: math::rate::Rate)<br/>_34 = _52<br/>StorageDead(_52)<br/>_115 = discriminant(_35)<br/>_117 = discriminant(_39)<br/>_111 = const false<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _2<br/>StorageLive(_56)<br/>_56 = _34<br/></td></tr><tr><td align="left">_54 = &lt;decimal::Decimal as common::TryMul&lt;rate::Rate&gt;&gt;::try_mul(move _55, move _56)</td></tr></table>>];
    bb31__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_51)<br/>_51 = move _49<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb32__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>_135 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb34__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_57 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb35__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_53 as Continue).0: math::decimal::Decimal)<br/>_23 = _61<br/>StorageDead(_61)<br/>StorageDead(_34)<br/>_119 = discriminant(_53)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = move ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_60)<br/>_60 = move _58<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb37__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_34)<br/>_133 = discriminant(_53)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _23<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _21<br/></td></tr><tr><td align="left">_64 = &lt;u64 as Into&lt;decimal::Decimal&gt;&gt;::into(move _65)</td></tr></table>>];
    bb39__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_62 = &lt;decimal::Decimal as Ord&gt;::max(move _63, move _64)</td></tr></table>>];
    bb40__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_62<br/>StorageLive(_69)<br/>_69 = &amp;_2<br/></td></tr><tr><td align="left">_67 = &lt;decimal::Decimal as PartialOrd&gt;::ge(move _68, move _69)</td></tr></table>>];
    bb41__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb42__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = const &quot;Borrow amount is too small to receive liquidity after fees&quot;<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = solana_program::log::sol_log(move _72)</td></tr></table>>];
    bb43__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = LendingError::BorrowTooSmall<br/></td></tr><tr><td align="left">_74 = &lt;LendingError as Into&lt;ProgramError&gt;&gt;::into(move _75)</td></tr></table>>];
    bb44__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_0 = Result::&lt;(u64, u64), ProgramError&gt;::Err(move _74)<br/>StorageDead(_74)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>_66 = const ()<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;_62<br/></td></tr><tr><td align="left">_78 = decimal::Decimal::try_round_u64(move _79)</td></tr></table>>];
    bb46__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;Result&lt;u64, ProgramError&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb47__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_80 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb48__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_77 as Continue).0: u64)<br/>_76 = _84<br/>StorageDead(_84)<br/>_121 = discriminant(_77)<br/>StorageDead(_77)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _17<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb49__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = move ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_83)<br/>_83 = move _81<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb50__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>_131 = discriminant(_77)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = _62<br/>StorageLive(_95)<br/>_95 = _7<br/></td></tr><tr><td align="left">_93 = &lt;decimal::Decimal as common::TryMul&lt;rate::Rate&gt;&gt;::try_mul(move _94, move _95)</td></tr></table>>];
    bb52__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;Result&lt;decimal::Decimal, ProgramError&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb53__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_110 = const true<br/>StorageDead(_93)<br/>_96 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb54__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_92 as Continue).0: math::decimal::Decimal)<br/>_91 = _100<br/>StorageDead(_100)<br/>_90 = &amp;_91<br/></td></tr><tr><td align="left">_89 = decimal::Decimal::try_round_u64(move _90)</td></tr></table>>];
    bb55__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = move ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_99)<br/>_99 = move _97<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb56__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = &lt;Result&lt;u64, ProgramError&gt; as Try&gt;::branch(move _89)</td></tr></table>>];
    bb58__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_112 = const true<br/>StorageDead(_89)<br/>_101 = discriminant(_88)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb59__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_88 as Continue).0: u64)<br/>_87 = _105<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_85 = &lt;u64 as Ord&gt;::max(move _87, const 1_u64)</td></tr></table>>];
    bb60__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = move ((_88 as Break).0: std::result::Result&lt;std::convert::Infallible, solana_program::program_error::ProgramError&gt;)<br/>StorageLive(_104)<br/>_104 = move _102<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(u64, u64), ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, ProgramError&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb61__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_87)<br/>_127 = discriminant(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_123 = discriminant(_88)<br/>_125 = discriminant(_92)<br/>_110 = const false<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>_112 = const false<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_85 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = _76<br/>StorageLive(_108)<br/>_108 = _85<br/>_106 = (move _107, move _108)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>_0 = Result::&lt;(u64, u64), ProgramError&gt;::Ok(move _106)<br/>StorageDead(_106)<br/>StorageDead(_85)<br/>StorageDead(_76)<br/>StorageDead(_62)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = (const 0_u64, const 0_u64)<br/>_0 = Result::&lt;(u64, u64), ProgramError&gt;::Ok(move _109)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_129 = discriminant(_92)<br/>_110 = const false<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>_112 = const false<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_137 = discriminant(_39)<br/>_111 = const false<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">return</td></tr></table>>];
    bb75__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb76__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left" balign="left">_141 = discriminant(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left" balign="left">_142 = discriminant(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left" balign="left">_143 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_144 = discriminant(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left" balign="left">_145 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left" balign="left">_146 = discriminant(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_524 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left" balign="left">_147 = discriminant(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_524 -> bb1__0_524 [label="return"];
    bb1__0_524 -> bb2__0_524 [label="return"];
    bb2__0_524 -> bb3__0_524 [label="return"];
    bb3__0_524 -> bb4__0_524 [label="return"];
    bb4__0_524 -> bb66__0_524 [label="0"];
    bb4__0_524 -> bb5__0_524 [label="otherwise"];
    bb5__0_524 -> bb6__0_524 [label="return"];
    bb6__0_524 -> bb7__0_524 [label="return"];
    bb7__0_524 -> bb65__0_524 [label="0"];
    bb7__0_524 -> bb8__0_524 [label="otherwise"];
    bb8__0_524 -> bb9__0_524 [label="return"];
    bb9__0_524 -> bb10__0_524 [label="return"];
    bb10__0_524 -> bb12__0_524 [label="0"];
    bb10__0_524 -> bb11__0_524 [label="otherwise"];
    bb11__0_524 -> bb13__0_524 [label=""];
    bb12__0_524 -> bb13__0_524 [label=""];
    bb13__0_524 -> bb16__0_524 [label="0"];
    bb13__0_524 -> bb14__0_524 [label="1"];
    bb13__0_524 -> bb15__0_524 [label="otherwise"];
    bb14__0_524 -> bb22__0_524 [label="return"];
    bb16__0_524 -> bb17__0_524 [label="return"];
    bb17__0_524 -> bb18__0_524 [label="return"];
    bb17__0_524 -> bb75__0_524 [label="unwind"];
    bb18__0_524 -> bb19__0_524 [label="0"];
    bb18__0_524 -> bb20__0_524 [label="1"];
    bb18__0_524 -> bb15__0_524 [label="otherwise"];
    bb19__0_524 -> bb38__0_524 [label=""];
    bb20__0_524 -> bb21__0_524 [label="return"];
    bb20__0_524 -> bb82__0_524 [label="unwind"];
    bb21__0_524 -> bb73__0_524 [label=""];
    bb22__0_524 -> bb23__0_524 [label="return"];
    bb23__0_524 -> bb24__0_524 [label="return"];
    bb23__0_524 -> bb75__0_524 [label="unwind"];
    bb24__0_524 -> bb25__0_524 [label="0"];
    bb24__0_524 -> bb26__0_524 [label="1"];
    bb24__0_524 -> bb15__0_524 [label="otherwise"];
    bb25__0_524 -> bb28__0_524 [label="return"];
    bb25__0_524 -> bb81__0_524 [label="unwind"];
    bb26__0_524 -> bb27__0_524 [label="return"];
    bb26__0_524 -> bb81__0_524 [label="unwind"];
    bb27__0_524 -> bb72__0_524 [label=""];
    bb28__0_524 -> bb29__0_524 [label="return"];
    bb28__0_524 -> bb81__0_524 [label="unwind"];
    bb29__0_524 -> bb30__0_524 [label="0"];
    bb29__0_524 -> bb31__0_524 [label="1"];
    bb29__0_524 -> bb15__0_524 [label="otherwise"];
    bb30__0_524 -> bb33__0_524 [label="return"];
    bb31__0_524 -> bb32__0_524 [label="return"];
    bb31__0_524 -> bb80__0_524 [label="unwind"];
    bb32__0_524 -> bb72__0_524 [label=""];
    bb33__0_524 -> bb34__0_524 [label="return"];
    bb33__0_524 -> bb75__0_524 [label="unwind"];
    bb34__0_524 -> bb35__0_524 [label="0"];
    bb34__0_524 -> bb36__0_524 [label="1"];
    bb34__0_524 -> bb15__0_524 [label="otherwise"];
    bb35__0_524 -> bb38__0_524 [label=""];
    bb36__0_524 -> bb37__0_524 [label="return"];
    bb36__0_524 -> bb79__0_524 [label="unwind"];
    bb37__0_524 -> bb73__0_524 [label=""];
    bb38__0_524 -> bb39__0_524 [label="return"];
    bb39__0_524 -> bb40__0_524 [label="return"];
    bb40__0_524 -> bb41__0_524 [label="return"];
    bb41__0_524 -> bb45__0_524 [label="0"];
    bb41__0_524 -> bb42__0_524 [label="otherwise"];
    bb42__0_524 -> bb43__0_524 [label="return"];
    bb43__0_524 -> bb44__0_524 [label="return"];
    bb44__0_524 -> bb71__0_524 [label=""];
    bb45__0_524 -> bb46__0_524 [label="return"];
    bb46__0_524 -> bb47__0_524 [label="return"];
    bb46__0_524 -> bb75__0_524 [label="unwind"];
    bb47__0_524 -> bb48__0_524 [label="0"];
    bb47__0_524 -> bb49__0_524 [label="1"];
    bb47__0_524 -> bb15__0_524 [label="otherwise"];
    bb48__0_524 -> bb63__0_524 [label="0"];
    bb48__0_524 -> bb51__0_524 [label="otherwise"];
    bb49__0_524 -> bb50__0_524 [label="return"];
    bb49__0_524 -> bb78__0_524 [label="unwind"];
    bb50__0_524 -> bb70__0_524 [label=""];
    bb51__0_524 -> bb52__0_524 [label="return"];
    bb52__0_524 -> bb53__0_524 [label="return"];
    bb52__0_524 -> bb75__0_524 [label="unwind"];
    bb53__0_524 -> bb54__0_524 [label="0"];
    bb53__0_524 -> bb55__0_524 [label="1"];
    bb53__0_524 -> bb15__0_524 [label="otherwise"];
    bb54__0_524 -> bb57__0_524 [label="return"];
    bb54__0_524 -> bb77__0_524 [label="unwind"];
    bb55__0_524 -> bb56__0_524 [label="return"];
    bb55__0_524 -> bb77__0_524 [label="unwind"];
    bb56__0_524 -> bb69__0_524 [label=""];
    bb57__0_524 -> bb58__0_524 [label="return"];
    bb57__0_524 -> bb77__0_524 [label="unwind"];
    bb58__0_524 -> bb59__0_524 [label="0"];
    bb58__0_524 -> bb60__0_524 [label="1"];
    bb58__0_524 -> bb15__0_524 [label="otherwise"];
    bb59__0_524 -> bb62__0_524 [label="return"];
    bb59__0_524 -> bb76__0_524 [label="unwind"];
    bb60__0_524 -> bb61__0_524 [label="return"];
    bb60__0_524 -> bb76__0_524 [label="unwind"];
    bb61__0_524 -> bb69__0_524 [label=""];
    bb62__0_524 -> bb64__0_524 [label=""];
    bb63__0_524 -> bb64__0_524 [label=""];
    bb64__0_524 -> bb68__0_524 [label=""];
    bb65__0_524 -> bb67__0_524 [label=""];
    bb66__0_524 -> bb67__0_524 [label=""];
    bb67__0_524 -> bb68__0_524 [label=""];
    bb68__0_524 -> bb74__0_524 [label=""];
    bb69__0_524 -> bb70__0_524 [label=""];
    bb70__0_524 -> bb71__0_524 [label=""];
    bb71__0_524 -> bb73__0_524 [label=""];
    bb72__0_524 -> bb73__0_524 [label=""];
    bb73__0_524 -> bb74__0_524 [label=""];
    bb76__0_524 -> bb77__0_524 [label=""];
    bb77__0_524 -> bb75__0_524 [label=""];
    bb78__0_524 -> bb75__0_524 [label=""];
    bb79__0_524 -> bb75__0_524 [label=""];
    bb80__0_524 -> bb81__0_524 [label=""];
    bb81__0_524 -> bb75__0_524 [label=""];
    bb82__0_524 -> bb75__0_524 [label=""];
}
