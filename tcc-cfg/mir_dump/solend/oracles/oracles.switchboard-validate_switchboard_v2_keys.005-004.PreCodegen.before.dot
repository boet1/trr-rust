digraph Mir_0_88 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_switchboard_v2_keys(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _6: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: ();<br align="left"/>let _9: ();<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _12: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _13: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _14: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _17: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _18: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _19: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: !;<br align="left"/>let _21: ();<br align="left"/>let mut _22: &amp;ReErased str;<br align="left"/>let _23: &amp;ReErased str;<br align="left"/>let mut _24: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _25: solend_sdk::error::LendingError;<br align="left"/>let _26: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _27: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _35: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _36: &amp;ReErased switchboard_v2::AggregatorAccountData;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, &amp;ReErased switchboard_v2::AggregatorAccountData&gt;;<br align="left"/>let mut _38: std::result::Result&lt;&amp;ReErased switchboard_v2::AggregatorAccountData, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased [u8];<br align="left"/>let _40: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _41: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _46: &amp;ReErased switchboard_v2::AggregatorAccountData;<br align="left"/>let mut _47: ();<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _49: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _50: &amp;ReErased mut [u8];<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: isize;<br align="left"/>let mut _58: isize;<br align="left"/>let mut _59: isize;<br align="left"/>let mut _60: isize;<br align="left"/>debug switchboard_feed_info =&gt; _1;<br align="left"/>debug data =&gt; _26;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>>;
    bb0__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_49 = deref_copy ((*_1).0: &amp;anchor_lang::prelude::Pubkey)<br/>_4 = &amp;(*_49)<br/>StorageLive(_5)<br/>_48 = const _<br/>_5 = &amp;(*_48)<br/></td></tr><tr><td align="left">_3 = &lt;Pubkey as PartialEq&gt;::eq(move _4, move _5)</td></tr></table>>];
    bb1__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb2__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>_8 = ()<br/>_0 = Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>_2 = const ()<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">_14 = switchboard_v2_mainnet::id()</td></tr></table>>];
    bb4__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_13 = &amp;_14<br/>_12 = &amp;_13<br/></td></tr><tr><td align="left">_10 = &lt;&amp;Pubkey as PartialEq&gt;::ne(move _11, move _12)</td></tr></table>>];
    bb5__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb6__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/></td></tr><tr><td align="left">_19 = switchboard_v2_devnet::id()</td></tr></table>>];
    bb7__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_18 = &amp;_19<br/>_17 = &amp;_18<br/></td></tr><tr><td align="left">_15 = &lt;&amp;Pubkey as PartialEq&gt;::ne(move _16, move _17)</td></tr></table>>];
    bb8__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb9__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = const &quot;Switchboard account provided is not owned by the switchboard oracle program&quot;<br/>_22 = &amp;(*_23)<br/></td></tr><tr><td align="left">_21 = solana_program::log::sol_log(move _22)</td></tr></table>>];
    bb10__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = InvalidOracleConfig<br/></td></tr><tr><td align="left">_24 = &lt;LendingError as Into&lt;anchor_lang::prelude::ProgramError&gt;&gt;::into(move _25)</td></tr></table>>];
    bb11__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_0 = Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Err(move _24)<br/>StorageDead(_24)<br/>StorageDead(_15)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_9 = const ()<br/>StorageDead(_15)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;(*_1)<br/></td></tr><tr><td align="left">_29 = AccountInfo::&lt;'_&gt;::try_borrow_data(move _30)</td></tr></table>>];
    bb15__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb16__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb17__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_28 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_27 = move _35<br/>StorageDead(_35)<br/>_26 = &amp;_27<br/>_51 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;(*_26)<br/></td></tr><tr><td align="left">_40 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb18__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb20__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_57 = discriminant(_28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_50 = deref_copy (*_40)<br/>_39 = &amp;(*_50)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_38 = AggregatorAccountData::new_from_bytes(move _39)</td></tr></table>>];
    bb22__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;Result&lt;&amp;AggregatorAccountData, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb23__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_42 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb24__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_37 as Continue).0: &amp;switchboard_v2::AggregatorAccountData)<br/>_36 = _46<br/>StorageDead(_46)<br/>_53 = discriminant(_37)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_47)<br/>_47 = ()<br/>_0 = Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Ok(move _47)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb25__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_45)<br/>_45 = move _43<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb26__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_55 = discriminant(_37)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb27__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">return</td></tr></table>>];
    bb30__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">30 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb31__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">31 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb32__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left" balign="left">_59 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_88 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">33 (cleanup)</td></tr><tr><td align="left" balign="left">_60 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_88 -> bb1__0_88 [label="return"];
    bb1__0_88 -> bb3__0_88 [label="0"];
    bb1__0_88 -> bb2__0_88 [label="otherwise"];
    bb2__0_88 -> bb29__0_88 [label=""];
    bb3__0_88 -> bb4__0_88 [label="return"];
    bb4__0_88 -> bb5__0_88 [label="return"];
    bb5__0_88 -> bb13__0_88 [label="0"];
    bb5__0_88 -> bb6__0_88 [label="otherwise"];
    bb6__0_88 -> bb7__0_88 [label="return"];
    bb7__0_88 -> bb8__0_88 [label="return"];
    bb8__0_88 -> bb12__0_88 [label="0"];
    bb8__0_88 -> bb9__0_88 [label="otherwise"];
    bb9__0_88 -> bb10__0_88 [label="return"];
    bb10__0_88 -> bb11__0_88 [label="return"];
    bb11__0_88 -> bb29__0_88 [label=""];
    bb12__0_88 -> bb14__0_88 [label=""];
    bb13__0_88 -> bb14__0_88 [label=""];
    bb14__0_88 -> bb15__0_88 [label="return"];
    bb15__0_88 -> bb16__0_88 [label="return"];
    bb15__0_88 -> bb31__0_88 [label="unwind"];
    bb16__0_88 -> bb17__0_88 [label="0"];
    bb16__0_88 -> bb19__0_88 [label="1"];
    bb16__0_88 -> bb18__0_88 [label="otherwise"];
    bb17__0_88 -> bb21__0_88 [label="return"];
    bb17__0_88 -> bb30__0_88 [label="unwind"];
    bb19__0_88 -> bb20__0_88 [label="return"];
    bb19__0_88 -> bb33__0_88 [label="unwind"];
    bb20__0_88 -> bb28__0_88 [label=""];
    bb21__0_88 -> bb22__0_88 [label="return"];
    bb21__0_88 -> bb30__0_88 [label="unwind"];
    bb22__0_88 -> bb23__0_88 [label="return"];
    bb22__0_88 -> bb30__0_88 [label="unwind"];
    bb23__0_88 -> bb24__0_88 [label="0"];
    bb23__0_88 -> bb25__0_88 [label="1"];
    bb23__0_88 -> bb18__0_88 [label="otherwise"];
    bb24__0_88 -> bb27__0_88 [label="return"];
    bb24__0_88 -> bb31__0_88 [label="unwind"];
    bb25__0_88 -> bb26__0_88 [label="return"];
    bb25__0_88 -> bb32__0_88 [label="unwind"];
    bb26__0_88 -> bb28__0_88 [label="return"];
    bb26__0_88 -> bb31__0_88 [label="unwind"];
    bb27__0_88 -> bb29__0_88 [label=""];
    bb28__0_88 -> bb29__0_88 [label=""];
    bb30__0_88 -> bb31__0_88 [label="return"];
    bb32__0_88 -> bb30__0_88 [label=""];
    bb33__0_88 -> bb31__0_88 [label=""];
}
