digraph Mir_0_81 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_switchboard_price(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _7: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _10: solend_sdk::error::LendingError;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _14: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _15: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _16: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _20: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _21: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _25: ();<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _28: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _29: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _30: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _31: bool;<br align="left"/>let mut _32: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _33: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _34: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _35: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _39: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _40: solend_sdk::error::LendingError;<br align="left"/>let mut _41: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _42: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>debug switchboard_feed_info =&gt; _1;<br align="left"/>debug clock =&gt; _2;<br align="left"/>>;
    bb0__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_42 = deref_copy ((*_1).0: &amp;anchor_lang::prelude::Pubkey)<br/>_5 = &amp;(*_42)<br/>StorageLive(_6)<br/>_41 = const _<br/>_6 = &amp;(*_41)<br/></td></tr><tr><td align="left">_4 = &lt;Pubkey as PartialEq&gt;::eq(move _5, move _6)</td></tr></table>>];
    bb1__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb2__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = NullOracleConfig<br/></td></tr><tr><td align="left">_9 = &lt;LendingError as Into&lt;anchor_lang::prelude::ProgramError&gt;&gt;::into(move _10)</td></tr></table>>];
    bb3__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_0 = Result::&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;::Err(move _9)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = switchboard_v2_mainnet::id()</td></tr></table>>];
    bb5__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_15 = &amp;_16<br/>_14 = &amp;_15<br/></td></tr><tr><td align="left">_12 = &lt;&amp;Pubkey as PartialEq&gt;::eq(move _13, move _14)</td></tr></table>>];
    bb6__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb7__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/></td></tr><tr><td align="left">_21 = switchboard_v2_devnet::id()</td></tr></table>>];
    bb9__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_20 = &amp;_21<br/>_19 = &amp;_20<br/></td></tr><tr><td align="left">_17 = &lt;&amp;Pubkey as PartialEq&gt;::eq(move _18, move _19)</td></tr></table>>];
    bb10__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb11__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_23)<br/>_23 = &amp;(*_1)<br/>StorageLive(_24)<br/>_24 = &amp;(*_2)<br/></td></tr><tr><td align="left">_0 = get_switchboard_price_v2(move _23, move _24, const true)</td></tr></table>>];
    bb12__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_11 = const ()<br/>StorageDead(_17)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/></td></tr><tr><td align="left">_30 = switchboard_on_demand_devnet::id()</td></tr></table>>];
    bb14__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_29 = &amp;_30<br/>_28 = &amp;_29<br/></td></tr><tr><td align="left">_26 = &lt;&amp;Pubkey as PartialEq&gt;::eq(move _27, move _28)</td></tr></table>>];
    bb15__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb16__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/></td></tr><tr><td align="left">_35 = switchboard_on_demand_mainnet::id()</td></tr></table>>];
    bb18__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_34 = &amp;_35<br/>_33 = &amp;_34<br/></td></tr><tr><td align="left">_31 = &lt;&amp;Pubkey as PartialEq&gt;::eq(move _32, move _33)</td></tr></table>>];
    bb19__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb20__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_37)<br/>_37 = &amp;(*_1)<br/>StorageLive(_38)<br/>_38 = &amp;(*_2)<br/></td></tr><tr><td align="left">_0 = get_switchboard_price_on_demand(move _37, move _38, const true)</td></tr></table>>];
    bb21__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>_25 = const ()<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = NullOracleConfig<br/></td></tr><tr><td align="left">_39 = &lt;LendingError as Into&lt;anchor_lang::prelude::ProgramError&gt;&gt;::into(move _40)</td></tr></table>>];
    bb23__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_0 = Result::&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;::Err(move _39)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_81 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_81 -> bb1__0_81 [label="return"];
    bb1__0_81 -> bb4__0_81 [label="0"];
    bb1__0_81 -> bb2__0_81 [label="otherwise"];
    bb2__0_81 -> bb3__0_81 [label="return"];
    bb3__0_81 -> bb24__0_81 [label=""];
    bb4__0_81 -> bb5__0_81 [label="return"];
    bb5__0_81 -> bb6__0_81 [label="return"];
    bb6__0_81 -> bb8__0_81 [label="0"];
    bb6__0_81 -> bb7__0_81 [label="otherwise"];
    bb7__0_81 -> bb11__0_81 [label=""];
    bb8__0_81 -> bb9__0_81 [label="return"];
    bb9__0_81 -> bb10__0_81 [label="return"];
    bb10__0_81 -> bb13__0_81 [label="0"];
    bb10__0_81 -> bb11__0_81 [label="otherwise"];
    bb11__0_81 -> bb12__0_81 [label="return"];
    bb12__0_81 -> bb24__0_81 [label=""];
    bb13__0_81 -> bb14__0_81 [label="return"];
    bb14__0_81 -> bb15__0_81 [label="return"];
    bb15__0_81 -> bb17__0_81 [label="0"];
    bb15__0_81 -> bb16__0_81 [label="otherwise"];
    bb16__0_81 -> bb20__0_81 [label=""];
    bb17__0_81 -> bb18__0_81 [label="return"];
    bb18__0_81 -> bb19__0_81 [label="return"];
    bb19__0_81 -> bb22__0_81 [label="0"];
    bb19__0_81 -> bb20__0_81 [label="otherwise"];
    bb20__0_81 -> bb21__0_81 [label="return"];
    bb21__0_81 -> bb24__0_81 [label=""];
    bb22__0_81 -> bb23__0_81 [label="return"];
    bb23__0_81 -> bb24__0_81 [label=""];
}
