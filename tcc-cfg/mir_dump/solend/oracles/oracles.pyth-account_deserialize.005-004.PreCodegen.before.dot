digraph Mir_0_45 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn account_deserialize(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;T/#0, anchor_lang::prelude::ProgramError&gt;<br align="left"/>let _2: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _3: &amp;ReErased [u8];<br align="left"/>let _4: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _5: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _6: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _7: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _8: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _9: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let _10: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let _13: &amp;ReErased [u8];<br align="left"/>let mut _14: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _15: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _16: T/#0;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, T/#0&gt;;<br align="left"/>let mut _18: std::result::Result&lt;T/#0, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _19: std::result::Result&lt;T/#0, anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _21: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _22: Closure(DefId(0:47 ~ oracles[bf2a]::pyth::account_deserialize::{closure#0}), [T/#0, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; solend_sdk::error::LendingError, []), (&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)]);<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _28: T/#0;<br align="left"/>let mut _29: T/#0;<br align="left"/>let mut _30: &amp;ReErased mut [u8];<br align="left"/>let mut _31: isize;<br align="left"/>let mut _32: isize;<br align="left"/>let mut _33: isize;<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: isize;<br align="left"/>debug account =&gt; _1;<br align="left"/>debug data =&gt; _2;<br align="left"/>debug data =&gt; _12;<br align="left"/>debug user =&gt; _16;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_1)<br/></td></tr><tr><td align="left">_10 = &lt;AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _11)</td></tr></table>>];
    bb1__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_9 = &amp;(_10.2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_8 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _9)</td></tr></table>>];
    bb2__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_7 = &amp;(*_8)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_6 = RefCell::&lt;&amp;mut [u8]&gt;::borrow(move _7)</td></tr></table>>];
    bb3__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_5 = &amp;_6<br/></td></tr><tr><td align="left">_4 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _5)</td></tr></table>>];
    bb4__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_30 = deref_copy (*_4)<br/>_3 = &amp;(*_30)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_2 = &lt;[u8] as ToOwned&gt;::to_owned(move _3)</td></tr></table>>];
    bb5__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb6__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb7__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;_2<br/>_14 = &amp;(*_15)<br/></td></tr><tr><td align="left">_13 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _14)</td></tr></table>>];
    bb8__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_12 = &amp;(*_13)<br/>StorageDead(_14)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;mut _12<br/>_20 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_19 = &lt;T as AccountDeserialize&gt;::try_deserialize(move _20)</td></tr></table>>];
    bb9__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;(*_1)<br/>_22 = {closure@token-lending\oracles\src\pyth.rs:166:57: 166:60} { account: move _23 }<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_18 = Result::&lt;T, anchor_lang::error::Error&gt;::map_err::&lt;LendingError, {closure@token-lending\oracles\src\pyth.rs:166:57: 166:60}&gt;(move _19, move _22)</td></tr></table>>];
    bb10__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;Result&lt;T, LendingError&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb11__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb12__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_17 as Continue).0: T)<br/>_16 = move _28<br/>StorageDead(_28)<br/>_33 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageLive(_29)<br/>_29 = move _16<br/>_0 = Result::&lt;T, anchor_lang::prelude::ProgramError&gt;::Ok(move _29)<br/>StorageDead(_29)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb13__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb14__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;T, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb15__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_31 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb16__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb19__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb20__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb21__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb22__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb23__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb24__0_45 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left" balign="left">_35 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_45 -> bb1__0_45 [label="return"];
    bb1__0_45 -> bb2__0_45 [label="return"];
    bb1__0_45 -> bb22__0_45 [label="unwind"];
    bb2__0_45 -> bb3__0_45 [label="return"];
    bb2__0_45 -> bb22__0_45 [label="unwind"];
    bb3__0_45 -> bb4__0_45 [label="return"];
    bb3__0_45 -> bb21__0_45 [label="unwind"];
    bb4__0_45 -> bb5__0_45 [label="return"];
    bb4__0_45 -> bb21__0_45 [label="unwind"];
    bb5__0_45 -> bb6__0_45 [label="return"];
    bb5__0_45 -> bb19__0_45 [label="unwind"];
    bb6__0_45 -> bb7__0_45 [label="return"];
    bb6__0_45 -> bb20__0_45 [label="unwind"];
    bb7__0_45 -> bb8__0_45 [label="return"];
    bb7__0_45 -> bb20__0_45 [label="unwind"];
    bb8__0_45 -> bb9__0_45 [label="return"];
    bb8__0_45 -> bb20__0_45 [label="unwind"];
    bb9__0_45 -> bb10__0_45 [label="return"];
    bb9__0_45 -> bb20__0_45 [label="unwind"];
    bb10__0_45 -> bb11__0_45 [label="return"];
    bb10__0_45 -> bb20__0_45 [label="unwind"];
    bb11__0_45 -> bb12__0_45 [label="0"];
    bb11__0_45 -> bb14__0_45 [label="1"];
    bb11__0_45 -> bb13__0_45 [label="otherwise"];
    bb12__0_45 -> bb16__0_45 [label="return"];
    bb12__0_45 -> bb23__0_45 [label="unwind"];
    bb14__0_45 -> bb15__0_45 [label="return"];
    bb14__0_45 -> bb24__0_45 [label="unwind"];
    bb15__0_45 -> bb17__0_45 [label="return"];
    bb15__0_45 -> bb23__0_45 [label="unwind"];
    bb16__0_45 -> bb18__0_45 [label=""];
    bb17__0_45 -> bb18__0_45 [label=""];
    bb19__0_45 -> bb20__0_45 [label="return"];
    bb20__0_45 -> bb23__0_45 [label="return"];
    bb21__0_45 -> bb22__0_45 [label="return"];
    bb22__0_45 -> bb23__0_45 [label="return"];
    bb24__0_45 -> bb20__0_45 [label=""];
}
