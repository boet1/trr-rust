digraph Mir_0_55 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn pyth_pull_price_to_decimal(_1: &amp;ReErased pyth_solana_receiver_sdk::price_update::Price) -&gt; std::result::Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;<br align="left"/>let _2: u64;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _4: std::result::Result&lt;u64, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: Closure(DefId(0:56 ~ oracles[bf2a]::pyth::pyth_pull_price_to_decimal::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; solend_sdk::error::LendingError, []), ()]);<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _12: u64;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: i32;<br align="left"/>let _15: u32;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, u32&gt;;<br align="left"/>let mut _17: std::result::Result&lt;u32, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _18: std::result::Result&lt;u32, std::num::TryFromIntError&gt;;<br align="left"/>let mut _19: i32;<br align="left"/>let mut _20: Closure(DefId(0:57 ~ oracles[bf2a]::pyth::pyth_pull_price_to_decimal::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; solend_sdk::error::LendingError, []), ()]);<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _25: u32;<br align="left"/>let _26: u64;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u64, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _29: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _30: u32;<br align="left"/>let mut _31: solend_sdk::error::LendingError;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _36: u64;<br align="left"/>let mut _37: solend_sdk::math::Decimal;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: u64;<br align="left"/>let _40: u32;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, u32&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u32, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u32, std::num::TryFromIntError&gt;;<br align="left"/>let mut _44: i32;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, i32&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i32, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _47: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _48: i32;<br align="left"/>let mut _49: solend_sdk::error::LendingError;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _54: i32;<br align="left"/>let mut _55: Closure(DefId(0:58 ~ oracles[bf2a]::pyth::pyth_pull_price_to_decimal::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((std::num::TryFromIntError,)) -&gt; solend_sdk::error::LendingError, []), ()]);<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _60: u32;<br align="left"/>let _61: u64;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _63: std::result::Result&lt;u64, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _64: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _65: u32;<br align="left"/>let mut _66: solend_sdk::error::LendingError;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _71: u64;<br align="left"/>let mut _72: solend_sdk::math::Decimal;<br align="left"/>let mut _73: u64;<br align="left"/>let mut _74: u64;<br align="left"/>debug pyth_price =&gt; _1;<br align="left"/>debug price =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug exponent =&gt; _15;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug zeros =&gt; _26;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug exponent =&gt; _40;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug decimals =&gt; _61;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>>;
    bb0__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).0: i64)<br/></td></tr><tr><td align="left">_5 = &lt;i64 as TryInto&lt;u64&gt;&gt;::try_into(move _6)</td></tr></table>>];
    bb1__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = {closure@token-lending\oracles\src\pyth.rs:260:58: 260:61}<br/></td></tr><tr><td align="left">_4 = Result::&lt;u64, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@token-lending\oracles\src\pyth.rs:260:58: 260:61}&gt;(move _5, move _7)</td></tr></table>>];
    bb2__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb3__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_8 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb4__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_3 as Continue).0: u64)<br/>_2 = _12<br/>StorageDead(_12)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = ((*_1).2: i32)<br/>_13 = Ge(move _14, const 0_i32)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb5__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb7__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = ((*_1).2: i32)<br/></td></tr><tr><td align="left">_18 = &lt;i32 as TryInto&lt;u32&gt;&gt;::try_into(move _19)</td></tr></table>>];
    bb9__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = ((*_1).2: i32)<br/></td></tr><tr><td align="left">_47 = __core::num::&lt;impl i32&gt;::checked_abs(move _48)</td></tr></table>>];
    bb10__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = {closure@token-lending\oracles\src\pyth.rs:269:22: 269:25}<br/></td></tr><tr><td align="left">_17 = Result::&lt;u32, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@token-lending\oracles\src\pyth.rs:269:22: 269:25}&gt;(move _18, move _20)</td></tr></table>>];
    bb11__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;Result&lt;u32, LendingError&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb12__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb13__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_16 as Continue).0: u32)<br/>_15 = _25<br/>StorageDead(_25)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _15<br/></td></tr><tr><td align="left">_29 = __core::num::&lt;impl u64&gt;::checked_pow(const 10_u64, move _30)</td></tr></table>>];
    bb14__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_24)<br/>_24 = move _22<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb15__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = MathOverflow<br/></td></tr><tr><td align="left">_28 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _29, move _31)</td></tr></table>>];
    bb17__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb18__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_32 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb19__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_27 as Continue).0: u64)<br/>_26 = _36<br/>StorageDead(_36)<br/>StorageDead(_27)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _2<br/></td></tr><tr><td align="left">_37 = &lt;solend_sdk::math::Decimal as From&lt;u64&gt;&gt;::from(move _38)</td></tr></table>>];
    bb20__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_35)<br/>_35 = move _33<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb21__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_39)<br/>_39 = _26<br/></td></tr><tr><td align="left">_0 = &lt;solend_sdk::math::Decimal as TryMul&lt;u64&gt;&gt;::try_mul(move _37, move _39)</td></tr></table>>];
    bb23__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_26)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_49)<br/>_49 = MathOverflow<br/></td></tr><tr><td align="left">_46 = Option::&lt;i32&gt;::ok_or::&lt;LendingError&gt;(move _47, move _49)</td></tr></table>>];
    bb25__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;Result&lt;i32, LendingError&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb26__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_50 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb27__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_45 as Continue).0: i32)<br/>_44 = _54<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_43 = &lt;i32 as TryInto&lt;u32&gt;&gt;::try_into(move _44)</td></tr></table>>];
    bb28__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_53)<br/>_53 = move _51<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb29__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_55)<br/>_55 = {closure@token-lending\oracles\src\pyth.rs:280:22: 280:25}<br/></td></tr><tr><td align="left">_42 = Result::&lt;u32, TryFromIntError&gt;::map_err::&lt;LendingError, {closure@token-lending\oracles\src\pyth.rs:280:22: 280:25}&gt;(move _43, move _55)</td></tr></table>>];
    bb31__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;Result&lt;u32, LendingError&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb32__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_56 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb33__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_41 as Continue).0: u32)<br/>_40 = _60<br/>StorageDead(_60)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _40<br/></td></tr><tr><td align="left">_64 = __core::num::&lt;impl u64&gt;::checked_pow(const 10_u64, move _65)</td></tr></table>>];
    bb34__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = move ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_59)<br/>_59 = move _57<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb35__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageLive(_66)<br/>_66 = MathOverflow<br/></td></tr><tr><td align="left">_63 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _64, move _66)</td></tr></table>>];
    bb37__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb38__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_67 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb39__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_62 as Continue).0: u64)<br/>_61 = _71<br/>StorageDead(_71)<br/>StorageDead(_62)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = _2<br/></td></tr><tr><td align="left">_72 = &lt;solend_sdk::math::Decimal as From&lt;u64&gt;&gt;::from(move _73)</td></tr></table>>];
    bb40__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = move ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_70)<br/>_70 = move _68<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb41__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageLive(_74)<br/>_74 = _61<br/></td></tr><tr><td align="left">_0 = &lt;solend_sdk::math::Decimal as TryDiv&lt;u64&gt;&gt;::try_div(move _72, move _74)</td></tr></table>>];
    bb43__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_61)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_55 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_55 -> bb1__0_55 [label="return"];
    bb1__0_55 -> bb2__0_55 [label="return"];
    bb2__0_55 -> bb3__0_55 [label="return"];
    bb3__0_55 -> bb4__0_55 [label="0"];
    bb3__0_55 -> bb6__0_55 [label="1"];
    bb3__0_55 -> bb5__0_55 [label="otherwise"];
    bb4__0_55 -> bb9__0_55 [label="0"];
    bb4__0_55 -> bb8__0_55 [label="otherwise"];
    bb6__0_55 -> bb7__0_55 [label="return"];
    bb7__0_55 -> bb49__0_55 [label=""];
    bb8__0_55 -> bb10__0_55 [label="return"];
    bb9__0_55 -> bb24__0_55 [label="return"];
    bb10__0_55 -> bb11__0_55 [label="return"];
    bb11__0_55 -> bb12__0_55 [label="return"];
    bb12__0_55 -> bb13__0_55 [label="0"];
    bb12__0_55 -> bb14__0_55 [label="1"];
    bb12__0_55 -> bb5__0_55 [label="otherwise"];
    bb13__0_55 -> bb16__0_55 [label="return"];
    bb14__0_55 -> bb15__0_55 [label="return"];
    bb15__0_55 -> bb47__0_55 [label=""];
    bb16__0_55 -> bb17__0_55 [label="return"];
    bb17__0_55 -> bb18__0_55 [label="return"];
    bb18__0_55 -> bb19__0_55 [label="0"];
    bb18__0_55 -> bb20__0_55 [label="1"];
    bb18__0_55 -> bb5__0_55 [label="otherwise"];
    bb19__0_55 -> bb22__0_55 [label="return"];
    bb20__0_55 -> bb21__0_55 [label="return"];
    bb21__0_55 -> bb47__0_55 [label=""];
    bb22__0_55 -> bb23__0_55 [label="return"];
    bb23__0_55 -> bb44__0_55 [label=""];
    bb24__0_55 -> bb25__0_55 [label="return"];
    bb25__0_55 -> bb26__0_55 [label="return"];
    bb26__0_55 -> bb27__0_55 [label="0"];
    bb26__0_55 -> bb28__0_55 [label="1"];
    bb26__0_55 -> bb5__0_55 [label="otherwise"];
    bb27__0_55 -> bb30__0_55 [label="return"];
    bb28__0_55 -> bb29__0_55 [label="return"];
    bb29__0_55 -> bb45__0_55 [label=""];
    bb30__0_55 -> bb31__0_55 [label="return"];
    bb31__0_55 -> bb32__0_55 [label="return"];
    bb32__0_55 -> bb33__0_55 [label="0"];
    bb32__0_55 -> bb34__0_55 [label="1"];
    bb32__0_55 -> bb5__0_55 [label="otherwise"];
    bb33__0_55 -> bb36__0_55 [label="return"];
    bb34__0_55 -> bb35__0_55 [label="return"];
    bb35__0_55 -> bb45__0_55 [label=""];
    bb36__0_55 -> bb37__0_55 [label="return"];
    bb37__0_55 -> bb38__0_55 [label="return"];
    bb38__0_55 -> bb39__0_55 [label="0"];
    bb38__0_55 -> bb40__0_55 [label="1"];
    bb38__0_55 -> bb5__0_55 [label="otherwise"];
    bb39__0_55 -> bb42__0_55 [label="return"];
    bb40__0_55 -> bb41__0_55 [label="return"];
    bb41__0_55 -> bb46__0_55 [label=""];
    bb42__0_55 -> bb43__0_55 [label="return"];
    bb43__0_55 -> bb44__0_55 [label=""];
    bb44__0_55 -> bb50__0_55 [label=""];
    bb45__0_55 -> bb46__0_55 [label=""];
    bb46__0_55 -> bb48__0_55 [label=""];
    bb47__0_55 -> bb48__0_55 [label=""];
    bb48__0_55 -> bb49__0_55 [label=""];
    bb49__0_55 -> bb50__0_55 [label=""];
}
