// MIR for `get_pyth_price::{closure#1}` after PreCodegen

fn get_pyth_price::{closure#1}(_1: {closure@token-lending\oracles\src\pyth.rs:123:21: 123:23}) -> LendingError {
    let mut _0: solend_sdk::error::LendingError;
    let _2: ();
    let mut _3: &str;
    let _4: &str;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = const "Pyth oracle price is too stale!";
        _3 = &(*_4);
        _2 = solana_program::log::sol_log(move _3) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_3);
        StorageDead(_4);
        StorageDead(_2);
        _0 = InvalidOracleConfig;
        return;
    }
}
