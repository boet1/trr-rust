digraph Mir_0_114 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_single_price(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Clock) -&gt; std::result::Result&lt;(solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt;<br align="left"/>let mut _3: OracleType;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, OracleType&gt;;<br align="left"/>let mut _5: std::result::Result&lt;OracleType, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _11: OracleType;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: (solend_sdk::math::Decimal, solend_sdk::math::Decimal);<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, (solend_sdk::math::Decimal, solend_sdk::math::Decimal)&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(solend_sdk::math::Decimal, solend_sdk::math::Decimal), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _22: (solend_sdk::math::Decimal, solend_sdk::math::Decimal);<br align="left"/>let mut _23: (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;);<br align="left"/>let mut _24: solend_sdk::math::Decimal;<br align="left"/>let mut _25: std::option::Option&lt;solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _26: solend_sdk::math::Decimal;<br align="left"/>let _27: (solend_sdk::math::Decimal, solend_sdk::math::Decimal);<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, (solend_sdk::math::Decimal, solend_sdk::math::Decimal)&gt;;<br align="left"/>let mut _29: std::result::Result&lt;(solend_sdk::math::Decimal, solend_sdk::math::Decimal), anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _36: (solend_sdk::math::Decimal, solend_sdk::math::Decimal);<br align="left"/>let mut _37: (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;);<br align="left"/>let mut _38: solend_sdk::math::Decimal;<br align="left"/>let mut _39: std::option::Option&lt;solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _40: solend_sdk::math::Decimal;<br align="left"/>let _41: solend_sdk::math::Decimal;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _43: std::result::Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _45: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _50: solend_sdk::math::Decimal;<br align="left"/>let mut _51: (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;);<br align="left"/>let mut _52: solend_sdk::math::Decimal;<br align="left"/>let mut _53: std::option::Option&lt;solend_sdk::math::Decimal&gt;;<br align="left"/>let _54: solend_sdk::math::Decimal;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _56: std::result::Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _57: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _63: solend_sdk::math::Decimal;<br align="left"/>let mut _64: (solend_sdk::math::Decimal, std::option::Option&lt;solend_sdk::math::Decimal&gt;);<br align="left"/>let mut _65: solend_sdk::math::Decimal;<br align="left"/>let mut _66: std::option::Option&lt;solend_sdk::math::Decimal&gt;;<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: bool;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>let mut _72: isize;<br align="left"/>let mut _73: isize;<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>debug oracle_account_info =&gt; _1;<br align="left"/>debug clock =&gt; _2;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug price =&gt; _13;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug price =&gt; _27;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug price =&gt; _41;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug price =&gt; _54;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>>;
    bb0__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_68 = const false<br/>_67 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/></td></tr><tr><td align="left">_5 = get_oracle_type(move _6)</td></tr></table>>];
    bb1__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Result&lt;OracleType, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_67 = const true<br/>_68 = const true<br/>StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_4 as Continue).0: OracleType)<br/>_3 = move _11<br/>StorageDead(_11)<br/>_12 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb4__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_1)<br/>StorageLive(_58)<br/>_58 = &amp;(*_2)<br/></td></tr><tr><td align="left">_56 = get_switchboard_price(move _57, move _58)</td></tr></table>>];
    bb8__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_1)<br/>StorageLive(_17)<br/>_17 = &amp;(*_2)<br/></td></tr><tr><td align="left">_15 = get_pyth_price(move _16, move _17)</td></tr></table>>];
    bb9__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;Result&lt;(solend_sdk::math::Decimal, solend_sdk::math::Decimal), anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb10__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_18 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb11__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_14 as Continue).0: (solend_sdk::math::Decimal, solend_sdk::math::Decimal))<br/>_13 = _22<br/>StorageDead(_22)<br/>_69 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = (_13.0: solend_sdk::math::Decimal)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = (_13.1: solend_sdk::math::Decimal)<br/>_25 = Option::&lt;solend_sdk::math::Decimal&gt;::Some(move _26)<br/>StorageDead(_26)<br/>_23 = (move _24, move _25)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>_0 = Result::&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt;::Ok(move _23)<br/>StorageDead(_23)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_21)<br/>_21 = move _19<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb13__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>_85 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;(*_1)<br/>StorageLive(_31)<br/>_31 = &amp;(*_2)<br/></td></tr><tr><td align="left">_29 = get_pyth_pull_price(move _30, move _31)</td></tr></table>>];
    bb15__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;Result&lt;(solend_sdk::math::Decimal, solend_sdk::math::Decimal), anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb16__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_32 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb17__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_28 as Continue).0: (solend_sdk::math::Decimal, solend_sdk::math::Decimal))<br/>_27 = _36<br/>StorageDead(_36)<br/>_71 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = (_27.0: solend_sdk::math::Decimal)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = (_27.1: solend_sdk::math::Decimal)<br/>_39 = Option::&lt;solend_sdk::math::Decimal&gt;::Some(move _40)<br/>StorageDead(_40)<br/>_37 = (move _38, move _39)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>_0 = Result::&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt;::Ok(move _37)<br/>StorageDead(_37)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_35)<br/>_35 = move _33<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb19__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>_83 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;(*_1)<br/>StorageLive(_45)<br/>_45 = &amp;(*_2)<br/></td></tr><tr><td align="left">_43 = get_switchboard_price(move _44, move _45)</td></tr></table>>];
    bb21__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb22__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_46 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb23__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_42 as Continue).0: solend_sdk::math::Decimal)<br/>_41 = _50<br/>StorageDead(_50)<br/>_73 = discriminant(_42)<br/>StorageDead(_42)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _41<br/>StorageLive(_53)<br/>_53 = Option::&lt;solend_sdk::math::Decimal&gt;::None<br/>_51 = (move _52, move _53)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>_0 = Result::&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt;::Ok(move _51)<br/>StorageDead(_51)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb25__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_81 = discriminant(_42)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb27__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb28__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Continue).0: solend_sdk::math::Decimal)<br/>_54 = _63<br/>StorageDead(_63)<br/>_75 = discriminant(_55)<br/>StorageDead(_55)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _54<br/>StorageLive(_66)<br/>_66 = Option::&lt;solend_sdk::math::Decimal&gt;::None<br/>_64 = (move _65, move _66)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>_0 = Result::&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt;::Ok(move _64)<br/>StorageDead(_64)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = move ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_62)<br/>_62 = move _60<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(solend_sdk::math::Decimal, Option&lt;solend_sdk::math::Decimal&gt;), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb30__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>_79 = discriminant(_55)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left">return</td></tr></table>>];
    bb32__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">32 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb33__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_77 = discriminant(_4)<br/>_67 = const false<br/>_68 = const false<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_87 = discriminant(_4)<br/>_67 = const false<br/>_68 = const false<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left" balign="left">_89 = discriminant(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left" balign="left">_90 = discriminant(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left" balign="left">_91 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left" balign="left">_92 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left" balign="left">_93 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_114 -> bb1__0_114 [label="return"];
    bb1__0_114 -> bb2__0_114 [label="return"];
    bb1__0_114 -> bb32__0_114 [label="unwind"];
    bb2__0_114 -> bb3__0_114 [label="0"];
    bb2__0_114 -> bb5__0_114 [label="1"];
    bb2__0_114 -> bb4__0_114 [label="otherwise"];
    bb3__0_114 -> bb8__0_114 [label="0"];
    bb3__0_114 -> bb20__0_114 [label="1"];
    bb3__0_114 -> bb14__0_114 [label="2"];
    bb3__0_114 -> bb7__0_114 [label="3"];
    bb3__0_114 -> bb4__0_114 [label="otherwise"];
    bb5__0_114 -> bb6__0_114 [label="return"];
    bb5__0_114 -> bb39__0_114 [label="unwind"];
    bb6__0_114 -> bb34__0_114 [label=""];
    bb7__0_114 -> bb26__0_114 [label="return"];
    bb7__0_114 -> bb39__0_114 [label="unwind"];
    bb8__0_114 -> bb9__0_114 [label="return"];
    bb8__0_114 -> bb39__0_114 [label="unwind"];
    bb9__0_114 -> bb10__0_114 [label="return"];
    bb9__0_114 -> bb39__0_114 [label="unwind"];
    bb10__0_114 -> bb11__0_114 [label="0"];
    bb10__0_114 -> bb12__0_114 [label="1"];
    bb10__0_114 -> bb4__0_114 [label="otherwise"];
    bb11__0_114 -> bb33__0_114 [label=""];
    bb12__0_114 -> bb13__0_114 [label="return"];
    bb12__0_114 -> bb38__0_114 [label="unwind"];
    bb13__0_114 -> bb34__0_114 [label=""];
    bb14__0_114 -> bb15__0_114 [label="return"];
    bb14__0_114 -> bb39__0_114 [label="unwind"];
    bb15__0_114 -> bb16__0_114 [label="return"];
    bb15__0_114 -> bb39__0_114 [label="unwind"];
    bb16__0_114 -> bb17__0_114 [label="0"];
    bb16__0_114 -> bb18__0_114 [label="1"];
    bb16__0_114 -> bb4__0_114 [label="otherwise"];
    bb17__0_114 -> bb33__0_114 [label=""];
    bb18__0_114 -> bb19__0_114 [label="return"];
    bb18__0_114 -> bb37__0_114 [label="unwind"];
    bb19__0_114 -> bb34__0_114 [label=""];
    bb20__0_114 -> bb21__0_114 [label="return"];
    bb20__0_114 -> bb39__0_114 [label="unwind"];
    bb21__0_114 -> bb22__0_114 [label="return"];
    bb21__0_114 -> bb39__0_114 [label="unwind"];
    bb22__0_114 -> bb23__0_114 [label="0"];
    bb22__0_114 -> bb24__0_114 [label="1"];
    bb22__0_114 -> bb4__0_114 [label="otherwise"];
    bb23__0_114 -> bb33__0_114 [label=""];
    bb24__0_114 -> bb25__0_114 [label="return"];
    bb24__0_114 -> bb36__0_114 [label="unwind"];
    bb25__0_114 -> bb34__0_114 [label=""];
    bb26__0_114 -> bb27__0_114 [label="return"];
    bb26__0_114 -> bb39__0_114 [label="unwind"];
    bb27__0_114 -> bb28__0_114 [label="0"];
    bb27__0_114 -> bb29__0_114 [label="1"];
    bb27__0_114 -> bb4__0_114 [label="otherwise"];
    bb28__0_114 -> bb33__0_114 [label=""];
    bb29__0_114 -> bb30__0_114 [label="return"];
    bb29__0_114 -> bb35__0_114 [label="unwind"];
    bb30__0_114 -> bb34__0_114 [label=""];
    bb33__0_114 -> bb31__0_114 [label=""];
    bb34__0_114 -> bb31__0_114 [label=""];
    bb35__0_114 -> bb39__0_114 [label=""];
    bb36__0_114 -> bb39__0_114 [label=""];
    bb37__0_114 -> bb39__0_114 [label=""];
    bb38__0_114 -> bb39__0_114 [label=""];
    bb39__0_114 -> bb32__0_114 [label=""];
}
