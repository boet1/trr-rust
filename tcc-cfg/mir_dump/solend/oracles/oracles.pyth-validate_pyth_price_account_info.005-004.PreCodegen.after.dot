digraph Mir_0_33 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn validate_pyth_price_account_info(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _6: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: !;<br align="left"/>let _8: ();<br align="left"/>let mut _9: &amp;ReErased str;<br align="left"/>let _10: &amp;ReErased str;<br align="left"/>let mut _11: anchor_lang::prelude::ProgramError;<br align="left"/>let _12: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _13: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _16: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _22: &amp;ReErased pyth_sdk_solana::state::PriceAccount;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, &amp;ReErased pyth_sdk_solana::state::PriceAccount&gt;;<br align="left"/>let mut _24: std::result::Result&lt;&amp;ReErased pyth_sdk_solana::state::PriceAccount, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _25: std::result::Result&lt;&amp;ReErased pyth_sdk_solana::state::PriceAccount, pyth_sdk_solana::PythError&gt;;<br align="left"/>let mut _26: &amp;ReErased [u8];<br align="left"/>let _27: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _28: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _29: Closure(DefId(0:34 ~ oracles[bf2a]::pyth::validate_pyth_price_account_info::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((pyth_sdk_solana::PythError,)) -&gt; solend_sdk::error::LendingError, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _34: &amp;ReErased pyth_sdk_solana::state::PriceAccount;<br align="left"/>let mut _35: ();<br align="left"/>let mut _36: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _37: &amp;ReErased mut [u8];<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>debug pyth_price_info =&gt; _1;<br align="left"/>debug data =&gt; _12;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>>;
    bb0__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_36 = deref_copy ((*_1).3: &amp;anchor_lang::prelude::Pubkey)<br/>_4 = &amp;(*_36)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = pyth_mainnet::id()</td></tr></table>>];
    bb1__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_5 = &amp;_6<br/></td></tr><tr><td align="left">_3 = &lt;Pubkey as PartialEq&gt;::ne(move _4, move _5)</td></tr></table>>];
    bb2__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb3__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = const &quot;pyth price account is not owned by pyth program&quot;<br/>_9 = &amp;(*_10)<br/></td></tr><tr><td align="left">_8 = solana_program::log::sol_log(move _9)</td></tr></table>>];
    bb4__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageLive(_11)<br/>_11 = anchor_lang::prelude::ProgramError::IncorrectProgramId<br/>_0 = Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Err(move _11)<br/>StorageDead(_11)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>_2 = const ()<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_1)<br/></td></tr><tr><td align="left">_15 = AccountInfo::&lt;'_&gt;::try_borrow_data(move _16)</td></tr></table>>];
    bb6__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb7__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb8__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_14 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_13 = move _21<br/>StorageDead(_21)<br/>_12 = &amp;_13<br/>_38 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_12)<br/></td></tr><tr><td align="left">_27 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb9__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_40 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_37 = deref_copy (*_27)<br/>_26 = &amp;(*_37)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = load_price_account(move _26)</td></tr></table>>];
    bb13__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_29)<br/>_29 = {closure@token-lending\oracles\src\pyth.rs:43:62: 43:65}<br/></td></tr><tr><td align="left">_24 = Result::&lt;&amp;PriceAccount, PythError&gt;::map_err::&lt;LendingError, {closure@token-lending\oracles\src\pyth.rs:43:62: 43:65}&gt;(move _25, move _29)</td></tr></table>>];
    bb14__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;Result&lt;&amp;PriceAccount, LendingError&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb15__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_30 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb16__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_23 as Continue).0: &amp;pyth_sdk_solana::state::PriceAccount)<br/>_22 = _34<br/>StorageDead(_34)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_35)<br/>_35 = ()<br/>_0 = Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Ok(move _35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb17__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;(), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb18__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb19__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">return</td></tr></table>>];
    bb22__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb23__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb24__0_33 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left" balign="left">_42 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_33 -> bb1__0_33 [label="return"];
    bb1__0_33 -> bb2__0_33 [label="return"];
    bb2__0_33 -> bb5__0_33 [label="0"];
    bb2__0_33 -> bb3__0_33 [label="otherwise"];
    bb3__0_33 -> bb4__0_33 [label="return"];
    bb4__0_33 -> bb21__0_33 [label=""];
    bb5__0_33 -> bb6__0_33 [label="return"];
    bb6__0_33 -> bb7__0_33 [label="return"];
    bb6__0_33 -> bb23__0_33 [label="unwind"];
    bb7__0_33 -> bb8__0_33 [label="0"];
    bb7__0_33 -> bb10__0_33 [label="1"];
    bb7__0_33 -> bb9__0_33 [label="otherwise"];
    bb8__0_33 -> bb12__0_33 [label="return"];
    bb8__0_33 -> bb22__0_33 [label="unwind"];
    bb10__0_33 -> bb11__0_33 [label="return"];
    bb10__0_33 -> bb24__0_33 [label="unwind"];
    bb11__0_33 -> bb20__0_33 [label=""];
    bb12__0_33 -> bb13__0_33 [label="return"];
    bb12__0_33 -> bb22__0_33 [label="unwind"];
    bb13__0_33 -> bb14__0_33 [label="return"];
    bb13__0_33 -> bb22__0_33 [label="unwind"];
    bb14__0_33 -> bb15__0_33 [label="return"];
    bb14__0_33 -> bb22__0_33 [label="unwind"];
    bb15__0_33 -> bb16__0_33 [label="0"];
    bb15__0_33 -> bb17__0_33 [label="1"];
    bb15__0_33 -> bb9__0_33 [label="otherwise"];
    bb16__0_33 -> bb19__0_33 [label="return"];
    bb16__0_33 -> bb23__0_33 [label="unwind"];
    bb17__0_33 -> bb18__0_33 [label="return"];
    bb17__0_33 -> bb22__0_33 [label="unwind"];
    bb18__0_33 -> bb20__0_33 [label="return"];
    bb18__0_33 -> bb23__0_33 [label="unwind"];
    bb19__0_33 -> bb21__0_33 [label=""];
    bb20__0_33 -> bb21__0_33 [label=""];
    bb22__0_33 -> bb23__0_33 [label="return"];
    bb24__0_33 -> bb23__0_33 [label=""];
}
