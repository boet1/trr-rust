digraph Mir_0_85 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_switchboard_price_v2(_1: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Clock, _3: bool) -&gt; std::result::Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;<br align="left"/>let _4: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _5: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _13: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _14: &amp;ReErased switchboard_v2::AggregatorAccountData;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, &amp;ReErased switchboard_v2::AggregatorAccountData&gt;;<br align="left"/>let mut _16: std::result::Result&lt;&amp;ReErased switchboard_v2::AggregatorAccountData, anchor_lang::error::Error&gt;;<br align="left"/>let mut _17: &amp;ReErased [u8];<br align="left"/>let _18: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _19: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _24: &amp;ReErased switchboard_v2::AggregatorAccountData;<br align="left"/>let _25: u64;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;, u64&gt;;<br align="left"/>let mut _27: std::result::Result&lt;u64, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _28: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: solend_sdk::error::LendingError;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;;<br align="left"/>let _36: u64;<br align="left"/>let _37: ();<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: !;<br align="left"/>let _42: ();<br align="left"/>let mut _43: &amp;ReErased str;<br align="left"/>let _44: &amp;ReErased str;<br align="left"/>let mut _45: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _46: solend_sdk::error::LendingError;<br align="left"/>let _47: switchboard_v2::SwitchboardDecimal;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, switchboard_v2::SwitchboardDecimal&gt;;<br align="left"/>let mut _49: std::result::Result&lt;switchboard_v2::SwitchboardDecimal, anchor_lang::error::Error&gt;;<br align="left"/>let mut _50: &amp;ReErased switchboard_v2::AggregatorAccountData;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _55: switchboard_v2::SwitchboardDecimal;<br align="left"/>let _56: ();<br align="left"/>let mut _57: bool;<br align="left"/>let mut _58: i128;<br align="left"/>let mut _59: !;<br align="left"/>let _60: ();<br align="left"/>let mut _61: &amp;ReErased str;<br align="left"/>let _62: &amp;ReErased str;<br align="left"/>let mut _63: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _64: solend_sdk::error::LendingError;<br align="left"/>let _65: solend_sdk::math::Decimal;<br align="left"/>let mut _66: u128;<br align="left"/>let mut _67: i128;<br align="left"/>let _68: solend_sdk::math::Decimal;<br align="left"/>let mut _69: u128;<br align="left"/>let mut _70: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _71: u32;<br align="left"/>let mut _72: solend_sdk::math::Decimal;<br align="left"/>let mut _73: solend_sdk::math::Decimal;<br align="left"/>let mut _74: &amp;ReErased mut [u8];<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>debug switchboard_feed_info =&gt; _1;<br align="left"/>debug clock =&gt; _2;<br align="left"/>debug check_staleness =&gt; _3;<br align="left"/>debug data =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug feed =&gt; _14;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug slots_elapsed =&gt; _25;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug price_switchboard_desc =&gt; _47;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug price =&gt; _65;<br align="left"/>debug exp =&gt; _68;<br align="left"/>>;
    bb0__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;(*_1)<br/></td></tr><tr><td align="left">_7 = AccountInfo::&lt;'_&gt;::try_borrow_data(move _8)</td></tr></table>>];
    bb1__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_6 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_5 = move _13<br/>StorageDead(_13)<br/>_4 = &amp;_5<br/>_75 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_4)<br/></td></tr><tr><td align="left">_18 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _19)</td></tr></table>>];
    bb4__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_85 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_74 = deref_copy (*_18)<br/>_17 = &amp;(*_74)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_16 = AggregatorAccountData::new_from_bytes(move _17)</td></tr></table>>];
    bb8__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;Result&lt;&amp;AggregatorAccountData, anchor_lang::error::Error&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_15 as Continue).0: &amp;switchboard_v2::AggregatorAccountData)<br/>_14 = _24<br/>StorageDead(_24)<br/>_77 = discriminant(_15)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_2).0: u64)<br/>StorageLive(_30)<br/>_30 = (((*_14).16: switchboard_v2::AggregatorRound).3: u64)<br/></td></tr><tr><td align="left">_28 = __core::num::&lt;impl u64&gt;::checked_sub(move _29, move _30)</td></tr></table>>];
    bb11__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_83 = discriminant(_15)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = MathOverflow<br/></td></tr><tr><td align="left">_27 = Option::&lt;u64&gt;::ok_or::&lt;LendingError&gt;(move _28, move _31)</td></tr></table>>];
    bb14__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;Result&lt;u64, LendingError&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb15__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_32 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb16__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_26 as Continue).0: u64)<br/>_25 = _36<br/>StorageDead(_36)<br/>StorageDead(_26)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _3<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb17__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, solend_sdk::error::LendingError&gt;)<br/>StorageLive(_35)<br/>_35 = move _33<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, LendingError&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb18__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _25<br/>_39 = Ge(move _40, const _)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb20__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = const &quot;Switchboard oracle price is stale&quot;<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = solana_program::log::sol_log(move _43)</td></tr></table>>];
    bb21__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = InvalidOracleConfig<br/></td></tr><tr><td align="left">_45 = &lt;LendingError as Into&lt;anchor_lang::prelude::ProgramError&gt;&gt;::into(move _46)</td></tr></table>>];
    bb22__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_0 = Result::&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;::Err(move _45)<br/>StorageDead(_45)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_37 = const ()<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;(*_14)<br/></td></tr><tr><td align="left">_49 = AggregatorAccountData::get_result(move _50)</td></tr></table>>];
    bb25__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;Result&lt;switchboard_v2::SwitchboardDecimal, anchor_lang::error::Error&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb26__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_51 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb27__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_48 as Continue).0: switchboard_v2::SwitchboardDecimal)<br/>_47 = _55<br/>StorageDead(_55)<br/>_79 = discriminant(_48)<br/>StorageDead(_48)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = (_47.0: i128)<br/>_57 = Lt(move _58, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb28__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = move ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_54)<br/>_54 = move _52<br/></td></tr><tr><td align="left">_0 = &lt;Result&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb29__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>_81 = discriminant(_48)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = const &quot;Switchboard oracle price is negative which is not allowed&quot;<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = solana_program::log::sol_log(move _61)</td></tr></table>>];
    bb31__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = InvalidOracleConfig<br/></td></tr><tr><td align="left">_63 = &lt;LendingError as Into&lt;anchor_lang::prelude::ProgramError&gt;&gt;::into(move _64)</td></tr></table>>];
    bb32__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_0 = Result::&lt;solend_sdk::math::Decimal, anchor_lang::prelude::ProgramError&gt;::Err(move _63)<br/>StorageDead(_63)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = const ()<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = (_47.0: i128)<br/>_66 = move _67 as u128 (IntToInt)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;solend_sdk::math::Decimal as From&lt;u128&gt;&gt;::from(move _66)</td></tr></table>>];
    bb34__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = (_47.1: u32)<br/></td></tr><tr><td align="left">_70 = __core::num::&lt;impl u128&gt;::checked_pow(const 10_u128, move _71)</td></tr></table>>];
    bb35__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = Option::&lt;u128&gt;::unwrap(move _70)</td></tr></table>>];
    bb36__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;solend_sdk::math::Decimal as From&lt;u128&gt;&gt;::from(move _69)</td></tr></table>>];
    bb37__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageLive(_72)<br/>_72 = _65<br/>StorageLive(_73)<br/>_73 = _68<br/></td></tr><tr><td align="left">_0 = &lt;solend_sdk::math::Decimal as TryDiv&lt;solend_sdk::math::Decimal&gt;&gt;::try_div(move _72, move _73)</td></tr></table>>];
    bb38__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_47)<br/>StorageDead(_25)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb39__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb43__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">return</td></tr></table>>];
    bb45__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb46__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb47__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left" balign="left">_87 = discriminant(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_88 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_85 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left" balign="left">_89 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_85 -> bb1__0_85 [label="return"];
    bb1__0_85 -> bb2__0_85 [label="return"];
    bb1__0_85 -> bb46__0_85 [label="unwind"];
    bb2__0_85 -> bb3__0_85 [label="0"];
    bb2__0_85 -> bb5__0_85 [label="1"];
    bb2__0_85 -> bb4__0_85 [label="otherwise"];
    bb3__0_85 -> bb7__0_85 [label="return"];
    bb3__0_85 -> bb45__0_85 [label="unwind"];
    bb5__0_85 -> bb6__0_85 [label="return"];
    bb5__0_85 -> bb49__0_85 [label="unwind"];
    bb6__0_85 -> bb43__0_85 [label=""];
    bb7__0_85 -> bb8__0_85 [label="return"];
    bb7__0_85 -> bb45__0_85 [label="unwind"];
    bb8__0_85 -> bb9__0_85 [label="return"];
    bb8__0_85 -> bb45__0_85 [label="unwind"];
    bb9__0_85 -> bb10__0_85 [label="0"];
    bb9__0_85 -> bb11__0_85 [label="1"];
    bb9__0_85 -> bb4__0_85 [label="otherwise"];
    bb10__0_85 -> bb13__0_85 [label="return"];
    bb10__0_85 -> bb45__0_85 [label="unwind"];
    bb11__0_85 -> bb12__0_85 [label="return"];
    bb11__0_85 -> bb48__0_85 [label="unwind"];
    bb12__0_85 -> bb42__0_85 [label=""];
    bb13__0_85 -> bb14__0_85 [label="return"];
    bb13__0_85 -> bb45__0_85 [label="unwind"];
    bb14__0_85 -> bb15__0_85 [label="return"];
    bb14__0_85 -> bb45__0_85 [label="unwind"];
    bb15__0_85 -> bb16__0_85 [label="0"];
    bb15__0_85 -> bb17__0_85 [label="1"];
    bb15__0_85 -> bb4__0_85 [label="otherwise"];
    bb16__0_85 -> bb24__0_85 [label="0"];
    bb16__0_85 -> bb19__0_85 [label="otherwise"];
    bb17__0_85 -> bb18__0_85 [label="return"];
    bb17__0_85 -> bb45__0_85 [label="unwind"];
    bb18__0_85 -> bb41__0_85 [label=""];
    bb19__0_85 -> bb23__0_85 [label="0"];
    bb19__0_85 -> bb20__0_85 [label="otherwise"];
    bb20__0_85 -> bb21__0_85 [label="return"];
    bb20__0_85 -> bb45__0_85 [label="unwind"];
    bb21__0_85 -> bb22__0_85 [label="return"];
    bb21__0_85 -> bb45__0_85 [label="unwind"];
    bb22__0_85 -> bb41__0_85 [label=""];
    bb23__0_85 -> bb24__0_85 [label=""];
    bb24__0_85 -> bb25__0_85 [label="return"];
    bb24__0_85 -> bb45__0_85 [label="unwind"];
    bb25__0_85 -> bb26__0_85 [label="return"];
    bb25__0_85 -> bb45__0_85 [label="unwind"];
    bb26__0_85 -> bb27__0_85 [label="0"];
    bb26__0_85 -> bb28__0_85 [label="1"];
    bb26__0_85 -> bb4__0_85 [label="otherwise"];
    bb27__0_85 -> bb33__0_85 [label="0"];
    bb27__0_85 -> bb30__0_85 [label="otherwise"];
    bb28__0_85 -> bb29__0_85 [label="return"];
    bb28__0_85 -> bb47__0_85 [label="unwind"];
    bb29__0_85 -> bb40__0_85 [label=""];
    bb30__0_85 -> bb31__0_85 [label="return"];
    bb30__0_85 -> bb45__0_85 [label="unwind"];
    bb31__0_85 -> bb32__0_85 [label="return"];
    bb31__0_85 -> bb45__0_85 [label="unwind"];
    bb32__0_85 -> bb40__0_85 [label=""];
    bb33__0_85 -> bb34__0_85 [label="return"];
    bb33__0_85 -> bb45__0_85 [label="unwind"];
    bb34__0_85 -> bb35__0_85 [label="return"];
    bb34__0_85 -> bb45__0_85 [label="unwind"];
    bb35__0_85 -> bb36__0_85 [label="return"];
    bb35__0_85 -> bb45__0_85 [label="unwind"];
    bb36__0_85 -> bb37__0_85 [label="return"];
    bb36__0_85 -> bb45__0_85 [label="unwind"];
    bb37__0_85 -> bb38__0_85 [label="return"];
    bb37__0_85 -> bb45__0_85 [label="unwind"];
    bb38__0_85 -> bb39__0_85 [label="return"];
    bb38__0_85 -> bb46__0_85 [label="unwind"];
    bb39__0_85 -> bb44__0_85 [label=""];
    bb40__0_85 -> bb41__0_85 [label=""];
    bb41__0_85 -> bb42__0_85 [label=""];
    bb42__0_85 -> bb43__0_85 [label="return"];
    bb42__0_85 -> bb46__0_85 [label="unwind"];
    bb43__0_85 -> bb44__0_85 [label=""];
    bb45__0_85 -> bb46__0_85 [label="return"];
    bb47__0_85 -> bb45__0_85 [label=""];
    bb48__0_85 -> bb45__0_85 [label=""];
    bb49__0_85 -> bb46__0_85 [label=""];
}
