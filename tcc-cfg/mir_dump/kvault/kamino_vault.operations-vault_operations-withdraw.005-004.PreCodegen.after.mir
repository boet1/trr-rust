// MIR for `operations::vault_operations::withdraw` after PreCodegen

fn operations::vault_operations::withdraw(_1: &mut state::VaultState, _2: Option<&anchor_lang::prelude::Pubkey>, _3: Option<&kamino_lending::Reserve>, _4: impl Iterator<Item = T>, _5: u64, _6: u64, _7: u64, _8: Option<u64>) -> std::result::Result<effects::WithdrawEffects, anchor_lang::error::Error> {
    debug vault => _1;
    debug reserve_address_to_withdraw_from => _2;
    debug reserve_state_to_withdraw_from => _3;
    debug reserves_iter => _4;
    debug current_timestamp => _5;
    debug current_slot => _6;
    debug number_of_shares => _7;
    debug reserve_ctokens_owned => _8;
    let mut _0: std::result::Result<operations::effects::WithdrawEffects, anchor_lang::error::Error>;
    let _9: ();
    let mut _10: bool;
    let mut _11: u64;
    let mut _12: !;
    let mut _13: anchor_lang::error::Error;
    let mut _14: anchor_lang::error::AnchorError;
    let mut _15: std::string::String;
    let mut _16: &KaminoVaultError;
    let _17: KaminoVaultError;
    let mut _18: u32;
    let mut _19: KaminoVaultError;
    let mut _20: std::string::String;
    let mut _21: &KaminoVaultError;
    let _22: KaminoVaultError;
    let mut _23: std::option::Option<anchor_lang::error::ErrorOrigin>;
    let mut _24: anchor_lang::error::ErrorOrigin;
    let mut _25: anchor_lang::error::Source;
    let mut _26: std::option::Option<anchor_lang::error::ComparedValues>;
    let _27: operations::vault_operations::common::Holdings;
    let mut _28: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, operations::vault_operations::common::Holdings>;
    let mut _29: std::result::Result<operations::vault_operations::common::Holdings, anchor_lang::error::Error>;
    let mut _30: &state::VaultState;
    let mut _31: impl Iterator<Item = T>;
    let mut _32: u64;
    let mut _33: isize;
    let _34: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _35: !;
    let mut _36: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let _37: operations::vault_operations::common::Holdings;
    let _38: ();
    let mut _39: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>>;
    let mut _40: std::result::Result<(), anchor_lang::error::Error>;
    let mut _41: &mut state::VaultState;
    let mut _42: &operations::vault_operations::common::Invested;
    let _43: &operations::vault_operations::common::Invested;
    let mut _44: u64;
    let mut _45: isize;
    let mut _47: !;
    let mut _48: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _51: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _52: std::result::Result<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>;
    let mut _53: &state::VaultState;
    let mut _54: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _55: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _56: isize;
    let mut _58: !;
    let mut _59: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let _61: ();
    let mut _62: bool;
    let mut _63: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _64: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _65: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _66: !;
    let mut _67: anchor_lang::error::Error;
    let mut _68: anchor_lang::error::AnchorError;
    let mut _69: std::string::String;
    let mut _70: &KaminoVaultError;
    let _71: KaminoVaultError;
    let mut _72: u32;
    let mut _73: KaminoVaultError;
    let mut _74: std::string::String;
    let mut _75: &KaminoVaultError;
    let _76: KaminoVaultError;
    let mut _77: std::option::Option<anchor_lang::error::ErrorOrigin>;
    let mut _78: anchor_lang::error::ErrorOrigin;
    let mut _79: anchor_lang::error::Source;
    let mut _80: std::option::Option<anchor_lang::error::ComparedValues>;
    let mut _83: u64;
    let mut _84: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _85: u64;
    let mut _87: u64;
    let mut _88: u64;
    let mut _93: (fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, u64, u64, u64);
    let mut _94: isize;
    let mut _97: &operations::vault_operations::common::Invested;
    let mut _98: &anchor_lang::prelude::Pubkey;
    let mut _100: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _101: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _102: u64;
    let mut _103: u64;
    let mut _104: u64;
    let mut _105: (u64, bool);
    let mut _106: bool;
    let mut _107: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _108: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _109: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _110: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _112: &kamino_lending::Reserve;
    let _113: &kamino_lending::Reserve;
    let mut _114: std::option::Option<&kamino_lending::Reserve>;
    let mut _116: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _117: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _118: &kamino_lending::CollateralExchangeRate;
    let mut _119: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _120: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _122: std::option::Option<u64>;
    let mut _124: u64;
    let mut _125: u64;
    let mut _127: &kamino_lending::CollateralExchangeRate;
    let mut _128: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _129: u64;
    let mut _131: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _133: bool;
    let mut _134: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _135: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _136: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _137: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _138: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _139: bool;
    let mut _140: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _141: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _142: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _143: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _144: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _145: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _146: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _147: u64;
    let mut _148: u64;
    let mut _149: u64;
    let mut _151: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _153: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _154: u64;
    let mut _155: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _157: u64;
    let mut _158: u64;
    let mut _159: (u64, bool);
    let mut _161: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _162: u64;
    let mut _163: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _164: u64;
    let mut _166: u64;
    let mut _167: u64;
    let mut _168: (u64, bool);
    let _169: ();
    let mut _170: bool;
    let mut _171: u64;
    let mut _172: !;
    let mut _173: anchor_lang::error::Error;
    let mut _174: anchor_lang::error::AnchorError;
    let mut _175: std::string::String;
    let mut _176: &KaminoVaultError;
    let _177: KaminoVaultError;
    let mut _178: u32;
    let mut _179: KaminoVaultError;
    let mut _180: std::string::String;
    let mut _181: &KaminoVaultError;
    let _182: KaminoVaultError;
    let mut _183: std::option::Option<anchor_lang::error::ErrorOrigin>;
    let mut _184: anchor_lang::error::ErrorOrigin;
    let mut _185: anchor_lang::error::Source;
    let mut _186: std::option::Option<anchor_lang::error::ComparedValues>;
    let _187: ();
    let mut _188: usize;
    let mut _189: &str;
    let _190: &str;
    let mut _191: bool;
    let mut _192: bool;
    let mut _193: bool;
    let mut _194: bool;
    let mut _195: bool;
    let mut _196: bool;
    let _199: ();
    let mut _200: std::result::Result<(), std::fmt::Error>;
    let mut _201: &mut arrform::ArrForm<150>;
    let mut _202: std::fmt::Arguments<'_>;
    let mut _203: &[&str];
    let mut _204: &[&str; 1];
    let _205: &[&str; 1];
    let _206: [&str; 1];
    let mut _207: &[core::fmt::rt::Argument<'_>];
    let mut _208: &[core::fmt::rt::Argument<'_>; 1];
    let _209: &[core::fmt::rt::Argument<'_>; 1];
    let _210: [core::fmt::rt::Argument<'_>; 1];
    let mut _211: core::fmt::rt::Argument<'_>;
    let mut _212: &u64;
    let _213: &u64;
    let mut _214: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _215: &mut arrform::ArrForm<150>;
    let _216: ();
    let mut _217: &str;
    let _218: &str;
    let mut _219: &std::string::String;
    let _220: &std::string::String;
    let _221: std::string::String;
    let mut _223: std::fmt::Arguments<'_>;
    let mut _224: &[&str];
    let mut _225: &[&str; 1];
    let _226: &[&str; 1];
    let _227: [&str; 1];
    let mut _228: &[core::fmt::rt::Argument<'_>];
    let mut _229: &[core::fmt::rt::Argument<'_>; 1];
    let _230: &[core::fmt::rt::Argument<'_>; 1];
    let _231: [core::fmt::rt::Argument<'_>; 1];
    let mut _232: core::fmt::rt::Argument<'_>;
    let mut _233: &&str;
    let _234: &&str;
    let _235: &str;
    let mut _236: &arrform::ArrForm<150>;
    let _239: ();
    let mut _240: std::result::Result<(), std::fmt::Error>;
    let mut _241: &mut arrform::ArrForm<300>;
    let mut _242: std::fmt::Arguments<'_>;
    let mut _243: &[&str];
    let mut _244: &[&str; 1];
    let _245: &[&str; 1];
    let _246: [&str; 1];
    let mut _247: &[core::fmt::rt::Argument<'_>];
    let mut _248: &[core::fmt::rt::Argument<'_>; 1];
    let _249: &[core::fmt::rt::Argument<'_>; 1];
    let _250: [core::fmt::rt::Argument<'_>; 1];
    let mut _251: core::fmt::rt::Argument<'_>;
    let mut _252: &u64;
    let _253: &u64;
    let mut _254: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _255: &mut arrform::ArrForm<300>;
    let _256: ();
    let mut _257: &str;
    let _258: &str;
    let mut _259: &std::string::String;
    let _260: &std::string::String;
    let _261: std::string::String;
    let mut _263: std::fmt::Arguments<'_>;
    let mut _264: &[&str];
    let mut _265: &[&str; 1];
    let _266: &[&str; 1];
    let _267: [&str; 1];
    let mut _268: &[core::fmt::rt::Argument<'_>];
    let mut _269: &[core::fmt::rt::Argument<'_>; 1];
    let _270: &[core::fmt::rt::Argument<'_>; 1];
    let _271: [core::fmt::rt::Argument<'_>; 1];
    let mut _272: core::fmt::rt::Argument<'_>;
    let mut _273: &&str;
    let _274: &&str;
    let _275: &str;
    let mut _276: &arrform::ArrForm<300>;
    let _279: ();
    let mut _280: std::result::Result<(), std::fmt::Error>;
    let mut _281: &mut arrform::ArrForm<600>;
    let mut _282: std::fmt::Arguments<'_>;
    let mut _283: &[&str];
    let mut _284: &[&str; 1];
    let _285: &[&str; 1];
    let _286: [&str; 1];
    let mut _287: &[core::fmt::rt::Argument<'_>];
    let mut _288: &[core::fmt::rt::Argument<'_>; 1];
    let _289: &[core::fmt::rt::Argument<'_>; 1];
    let _290: [core::fmt::rt::Argument<'_>; 1];
    let mut _291: core::fmt::rt::Argument<'_>;
    let mut _292: &u64;
    let _293: &u64;
    let mut _294: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _295: &mut arrform::ArrForm<600>;
    let _296: ();
    let mut _297: &str;
    let _298: &str;
    let mut _299: &std::string::String;
    let _300: &std::string::String;
    let _301: std::string::String;
    let mut _303: std::fmt::Arguments<'_>;
    let mut _304: &[&str];
    let mut _305: &[&str; 1];
    let _306: &[&str; 1];
    let _307: [&str; 1];
    let mut _308: &[core::fmt::rt::Argument<'_>];
    let mut _309: &[core::fmt::rt::Argument<'_>; 1];
    let _310: &[core::fmt::rt::Argument<'_>; 1];
    let _311: [core::fmt::rt::Argument<'_>; 1];
    let mut _312: core::fmt::rt::Argument<'_>;
    let mut _313: &&str;
    let _314: &&str;
    let _315: &str;
    let mut _316: &arrform::ArrForm<600>;
    let _319: ();
    let mut _320: std::result::Result<(), std::fmt::Error>;
    let mut _321: &mut arrform::ArrForm<1200>;
    let mut _322: std::fmt::Arguments<'_>;
    let mut _323: &[&str];
    let mut _324: &[&str; 1];
    let _325: &[&str; 1];
    let _326: [&str; 1];
    let mut _327: &[core::fmt::rt::Argument<'_>];
    let mut _328: &[core::fmt::rt::Argument<'_>; 1];
    let _329: &[core::fmt::rt::Argument<'_>; 1];
    let _330: [core::fmt::rt::Argument<'_>; 1];
    let mut _331: core::fmt::rt::Argument<'_>;
    let mut _332: &u64;
    let _333: &u64;
    let mut _334: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _335: &mut arrform::ArrForm<1200>;
    let _336: ();
    let mut _337: &str;
    let _338: &str;
    let mut _339: &std::string::String;
    let _340: &std::string::String;
    let _341: std::string::String;
    let mut _343: std::fmt::Arguments<'_>;
    let mut _344: &[&str];
    let mut _345: &[&str; 1];
    let _346: &[&str; 1];
    let _347: [&str; 1];
    let mut _348: &[core::fmt::rt::Argument<'_>];
    let mut _349: &[core::fmt::rt::Argument<'_>; 1];
    let _350: &[core::fmt::rt::Argument<'_>; 1];
    let _351: [core::fmt::rt::Argument<'_>; 1];
    let mut _352: core::fmt::rt::Argument<'_>;
    let mut _353: &&str;
    let _354: &&str;
    let _355: &str;
    let mut _356: &arrform::ArrForm<1200>;
    let _357: ();
    let mut _358: usize;
    let mut _359: &str;
    let _360: &str;
    let mut _361: bool;
    let mut _362: bool;
    let mut _363: bool;
    let mut _364: bool;
    let mut _365: bool;
    let mut _366: bool;
    let _369: ();
    let mut _370: std::result::Result<(), std::fmt::Error>;
    let mut _371: &mut arrform::ArrForm<150>;
    let mut _372: std::fmt::Arguments<'_>;
    let mut _373: &[&str];
    let mut _374: &[&str; 1];
    let _375: &[&str; 1];
    let _376: [&str; 1];
    let mut _377: &[core::fmt::rt::Argument<'_>];
    let mut _378: &[core::fmt::rt::Argument<'_>; 1];
    let _379: &[core::fmt::rt::Argument<'_>; 1];
    let _380: [core::fmt::rt::Argument<'_>; 1];
    let mut _381: core::fmt::rt::Argument<'_>;
    let mut _382: &kamino_lending::utils::FractionDisplay<'_>;
    let _383: &kamino_lending::utils::FractionDisplay<'_>;
    let _384: kamino_lending::utils::FractionDisplay<'_>;
    let mut _385: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _386: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _387: &mut arrform::ArrForm<150>;
    let _388: ();
    let mut _389: &str;
    let _390: &str;
    let mut _391: &std::string::String;
    let _392: &std::string::String;
    let _393: std::string::String;
    let mut _395: std::fmt::Arguments<'_>;
    let mut _396: &[&str];
    let mut _397: &[&str; 1];
    let _398: &[&str; 1];
    let _399: [&str; 1];
    let mut _400: &[core::fmt::rt::Argument<'_>];
    let mut _401: &[core::fmt::rt::Argument<'_>; 1];
    let _402: &[core::fmt::rt::Argument<'_>; 1];
    let _403: [core::fmt::rt::Argument<'_>; 1];
    let mut _404: core::fmt::rt::Argument<'_>;
    let mut _405: &&str;
    let _406: &&str;
    let _407: &str;
    let mut _408: &arrform::ArrForm<150>;
    let _411: ();
    let mut _412: std::result::Result<(), std::fmt::Error>;
    let mut _413: &mut arrform::ArrForm<300>;
    let mut _414: std::fmt::Arguments<'_>;
    let mut _415: &[&str];
    let mut _416: &[&str; 1];
    let _417: &[&str; 1];
    let _418: [&str; 1];
    let mut _419: &[core::fmt::rt::Argument<'_>];
    let mut _420: &[core::fmt::rt::Argument<'_>; 1];
    let _421: &[core::fmt::rt::Argument<'_>; 1];
    let _422: [core::fmt::rt::Argument<'_>; 1];
    let mut _423: core::fmt::rt::Argument<'_>;
    let mut _424: &kamino_lending::utils::FractionDisplay<'_>;
    let _425: &kamino_lending::utils::FractionDisplay<'_>;
    let _426: kamino_lending::utils::FractionDisplay<'_>;
    let mut _427: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _428: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _429: &mut arrform::ArrForm<300>;
    let _430: ();
    let mut _431: &str;
    let _432: &str;
    let mut _433: &std::string::String;
    let _434: &std::string::String;
    let _435: std::string::String;
    let mut _437: std::fmt::Arguments<'_>;
    let mut _438: &[&str];
    let mut _439: &[&str; 1];
    let _440: &[&str; 1];
    let _441: [&str; 1];
    let mut _442: &[core::fmt::rt::Argument<'_>];
    let mut _443: &[core::fmt::rt::Argument<'_>; 1];
    let _444: &[core::fmt::rt::Argument<'_>; 1];
    let _445: [core::fmt::rt::Argument<'_>; 1];
    let mut _446: core::fmt::rt::Argument<'_>;
    let mut _447: &&str;
    let _448: &&str;
    let _449: &str;
    let mut _450: &arrform::ArrForm<300>;
    let _453: ();
    let mut _454: std::result::Result<(), std::fmt::Error>;
    let mut _455: &mut arrform::ArrForm<600>;
    let mut _456: std::fmt::Arguments<'_>;
    let mut _457: &[&str];
    let mut _458: &[&str; 1];
    let _459: &[&str; 1];
    let _460: [&str; 1];
    let mut _461: &[core::fmt::rt::Argument<'_>];
    let mut _462: &[core::fmt::rt::Argument<'_>; 1];
    let _463: &[core::fmt::rt::Argument<'_>; 1];
    let _464: [core::fmt::rt::Argument<'_>; 1];
    let mut _465: core::fmt::rt::Argument<'_>;
    let mut _466: &kamino_lending::utils::FractionDisplay<'_>;
    let _467: &kamino_lending::utils::FractionDisplay<'_>;
    let _468: kamino_lending::utils::FractionDisplay<'_>;
    let mut _469: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _470: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _471: &mut arrform::ArrForm<600>;
    let _472: ();
    let mut _473: &str;
    let _474: &str;
    let mut _475: &std::string::String;
    let _476: &std::string::String;
    let _477: std::string::String;
    let mut _479: std::fmt::Arguments<'_>;
    let mut _480: &[&str];
    let mut _481: &[&str; 1];
    let _482: &[&str; 1];
    let _483: [&str; 1];
    let mut _484: &[core::fmt::rt::Argument<'_>];
    let mut _485: &[core::fmt::rt::Argument<'_>; 1];
    let _486: &[core::fmt::rt::Argument<'_>; 1];
    let _487: [core::fmt::rt::Argument<'_>; 1];
    let mut _488: core::fmt::rt::Argument<'_>;
    let mut _489: &&str;
    let _490: &&str;
    let _491: &str;
    let mut _492: &arrform::ArrForm<600>;
    let _495: ();
    let mut _496: std::result::Result<(), std::fmt::Error>;
    let mut _497: &mut arrform::ArrForm<1200>;
    let mut _498: std::fmt::Arguments<'_>;
    let mut _499: &[&str];
    let mut _500: &[&str; 1];
    let _501: &[&str; 1];
    let _502: [&str; 1];
    let mut _503: &[core::fmt::rt::Argument<'_>];
    let mut _504: &[core::fmt::rt::Argument<'_>; 1];
    let _505: &[core::fmt::rt::Argument<'_>; 1];
    let _506: [core::fmt::rt::Argument<'_>; 1];
    let mut _507: core::fmt::rt::Argument<'_>;
    let mut _508: &kamino_lending::utils::FractionDisplay<'_>;
    let _509: &kamino_lending::utils::FractionDisplay<'_>;
    let _510: kamino_lending::utils::FractionDisplay<'_>;
    let mut _511: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _512: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _513: &mut arrform::ArrForm<1200>;
    let _514: ();
    let mut _515: &str;
    let _516: &str;
    let mut _517: &std::string::String;
    let _518: &std::string::String;
    let _519: std::string::String;
    let mut _521: std::fmt::Arguments<'_>;
    let mut _522: &[&str];
    let mut _523: &[&str; 1];
    let _524: &[&str; 1];
    let _525: [&str; 1];
    let mut _526: &[core::fmt::rt::Argument<'_>];
    let mut _527: &[core::fmt::rt::Argument<'_>; 1];
    let _528: &[core::fmt::rt::Argument<'_>; 1];
    let _529: [core::fmt::rt::Argument<'_>; 1];
    let mut _530: core::fmt::rt::Argument<'_>;
    let mut _531: &&str;
    let _532: &&str;
    let _533: &str;
    let mut _534: &arrform::ArrForm<1200>;
    let _535: ();
    let mut _536: usize;
    let mut _537: &str;
    let _538: &str;
    let mut _539: bool;
    let mut _540: bool;
    let mut _541: bool;
    let mut _542: bool;
    let mut _543: bool;
    let mut _544: bool;
    let _547: ();
    let mut _548: std::result::Result<(), std::fmt::Error>;
    let mut _549: &mut arrform::ArrForm<150>;
    let mut _550: std::fmt::Arguments<'_>;
    let mut _551: &[&str];
    let mut _552: &[&str; 1];
    let _553: &[&str; 1];
    let _554: [&str; 1];
    let mut _555: &[core::fmt::rt::Argument<'_>];
    let mut _556: &[core::fmt::rt::Argument<'_>; 1];
    let _557: &[core::fmt::rt::Argument<'_>; 1];
    let _558: [core::fmt::rt::Argument<'_>; 1];
    let mut _559: core::fmt::rt::Argument<'_>;
    let mut _560: &u64;
    let _561: &u64;
    let mut _562: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _563: &mut arrform::ArrForm<150>;
    let _564: ();
    let mut _565: &str;
    let _566: &str;
    let mut _567: &std::string::String;
    let _568: &std::string::String;
    let _569: std::string::String;
    let mut _571: std::fmt::Arguments<'_>;
    let mut _572: &[&str];
    let mut _573: &[&str; 1];
    let _574: &[&str; 1];
    let _575: [&str; 1];
    let mut _576: &[core::fmt::rt::Argument<'_>];
    let mut _577: &[core::fmt::rt::Argument<'_>; 1];
    let _578: &[core::fmt::rt::Argument<'_>; 1];
    let _579: [core::fmt::rt::Argument<'_>; 1];
    let mut _580: core::fmt::rt::Argument<'_>;
    let mut _581: &&str;
    let _582: &&str;
    let _583: &str;
    let mut _584: &arrform::ArrForm<150>;
    let _587: ();
    let mut _588: std::result::Result<(), std::fmt::Error>;
    let mut _589: &mut arrform::ArrForm<300>;
    let mut _590: std::fmt::Arguments<'_>;
    let mut _591: &[&str];
    let mut _592: &[&str; 1];
    let _593: &[&str; 1];
    let _594: [&str; 1];
    let mut _595: &[core::fmt::rt::Argument<'_>];
    let mut _596: &[core::fmt::rt::Argument<'_>; 1];
    let _597: &[core::fmt::rt::Argument<'_>; 1];
    let _598: [core::fmt::rt::Argument<'_>; 1];
    let mut _599: core::fmt::rt::Argument<'_>;
    let mut _600: &u64;
    let _601: &u64;
    let mut _602: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _603: &mut arrform::ArrForm<300>;
    let _604: ();
    let mut _605: &str;
    let _606: &str;
    let mut _607: &std::string::String;
    let _608: &std::string::String;
    let _609: std::string::String;
    let mut _611: std::fmt::Arguments<'_>;
    let mut _612: &[&str];
    let mut _613: &[&str; 1];
    let _614: &[&str; 1];
    let _615: [&str; 1];
    let mut _616: &[core::fmt::rt::Argument<'_>];
    let mut _617: &[core::fmt::rt::Argument<'_>; 1];
    let _618: &[core::fmt::rt::Argument<'_>; 1];
    let _619: [core::fmt::rt::Argument<'_>; 1];
    let mut _620: core::fmt::rt::Argument<'_>;
    let mut _621: &&str;
    let _622: &&str;
    let _623: &str;
    let mut _624: &arrform::ArrForm<300>;
    let _627: ();
    let mut _628: std::result::Result<(), std::fmt::Error>;
    let mut _629: &mut arrform::ArrForm<600>;
    let mut _630: std::fmt::Arguments<'_>;
    let mut _631: &[&str];
    let mut _632: &[&str; 1];
    let _633: &[&str; 1];
    let _634: [&str; 1];
    let mut _635: &[core::fmt::rt::Argument<'_>];
    let mut _636: &[core::fmt::rt::Argument<'_>; 1];
    let _637: &[core::fmt::rt::Argument<'_>; 1];
    let _638: [core::fmt::rt::Argument<'_>; 1];
    let mut _639: core::fmt::rt::Argument<'_>;
    let mut _640: &u64;
    let _641: &u64;
    let mut _642: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _643: &mut arrform::ArrForm<600>;
    let _644: ();
    let mut _645: &str;
    let _646: &str;
    let mut _647: &std::string::String;
    let _648: &std::string::String;
    let _649: std::string::String;
    let mut _651: std::fmt::Arguments<'_>;
    let mut _652: &[&str];
    let mut _653: &[&str; 1];
    let _654: &[&str; 1];
    let _655: [&str; 1];
    let mut _656: &[core::fmt::rt::Argument<'_>];
    let mut _657: &[core::fmt::rt::Argument<'_>; 1];
    let _658: &[core::fmt::rt::Argument<'_>; 1];
    let _659: [core::fmt::rt::Argument<'_>; 1];
    let mut _660: core::fmt::rt::Argument<'_>;
    let mut _661: &&str;
    let _662: &&str;
    let _663: &str;
    let mut _664: &arrform::ArrForm<600>;
    let _667: ();
    let mut _668: std::result::Result<(), std::fmt::Error>;
    let mut _669: &mut arrform::ArrForm<1200>;
    let mut _670: std::fmt::Arguments<'_>;
    let mut _671: &[&str];
    let mut _672: &[&str; 1];
    let _673: &[&str; 1];
    let _674: [&str; 1];
    let mut _675: &[core::fmt::rt::Argument<'_>];
    let mut _676: &[core::fmt::rt::Argument<'_>; 1];
    let _677: &[core::fmt::rt::Argument<'_>; 1];
    let _678: [core::fmt::rt::Argument<'_>; 1];
    let mut _679: core::fmt::rt::Argument<'_>;
    let mut _680: &u64;
    let _681: &u64;
    let mut _682: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _683: &mut arrform::ArrForm<1200>;
    let _684: ();
    let mut _685: &str;
    let _686: &str;
    let mut _687: &std::string::String;
    let _688: &std::string::String;
    let _689: std::string::String;
    let mut _691: std::fmt::Arguments<'_>;
    let mut _692: &[&str];
    let mut _693: &[&str; 1];
    let _694: &[&str; 1];
    let _695: [&str; 1];
    let mut _696: &[core::fmt::rt::Argument<'_>];
    let mut _697: &[core::fmt::rt::Argument<'_>; 1];
    let _698: &[core::fmt::rt::Argument<'_>; 1];
    let _699: [core::fmt::rt::Argument<'_>; 1];
    let mut _700: core::fmt::rt::Argument<'_>;
    let mut _701: &&str;
    let _702: &&str;
    let _703: &str;
    let mut _704: &arrform::ArrForm<1200>;
    let _705: ();
    let mut _706: usize;
    let mut _707: &str;
    let _708: &str;
    let mut _709: bool;
    let mut _710: bool;
    let mut _711: bool;
    let mut _712: bool;
    let mut _713: bool;
    let mut _714: bool;
    let _717: ();
    let mut _718: std::result::Result<(), std::fmt::Error>;
    let mut _719: &mut arrform::ArrForm<150>;
    let mut _720: std::fmt::Arguments<'_>;
    let mut _721: &[&str];
    let mut _722: &[&str; 1];
    let _723: &[&str; 1];
    let _724: [&str; 1];
    let mut _725: &[core::fmt::rt::Argument<'_>];
    let mut _726: &[core::fmt::rt::Argument<'_>; 1];
    let _727: &[core::fmt::rt::Argument<'_>; 1];
    let _728: [core::fmt::rt::Argument<'_>; 1];
    let mut _729: core::fmt::rt::Argument<'_>;
    let mut _730: &u64;
    let _731: &u64;
    let mut _732: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _733: &mut arrform::ArrForm<150>;
    let _734: ();
    let mut _735: &str;
    let _736: &str;
    let mut _737: &std::string::String;
    let _738: &std::string::String;
    let _739: std::string::String;
    let mut _741: std::fmt::Arguments<'_>;
    let mut _742: &[&str];
    let mut _743: &[&str; 1];
    let _744: &[&str; 1];
    let _745: [&str; 1];
    let mut _746: &[core::fmt::rt::Argument<'_>];
    let mut _747: &[core::fmt::rt::Argument<'_>; 1];
    let _748: &[core::fmt::rt::Argument<'_>; 1];
    let _749: [core::fmt::rt::Argument<'_>; 1];
    let mut _750: core::fmt::rt::Argument<'_>;
    let mut _751: &&str;
    let _752: &&str;
    let _753: &str;
    let mut _754: &arrform::ArrForm<150>;
    let _757: ();
    let mut _758: std::result::Result<(), std::fmt::Error>;
    let mut _759: &mut arrform::ArrForm<300>;
    let mut _760: std::fmt::Arguments<'_>;
    let mut _761: &[&str];
    let mut _762: &[&str; 1];
    let _763: &[&str; 1];
    let _764: [&str; 1];
    let mut _765: &[core::fmt::rt::Argument<'_>];
    let mut _766: &[core::fmt::rt::Argument<'_>; 1];
    let _767: &[core::fmt::rt::Argument<'_>; 1];
    let _768: [core::fmt::rt::Argument<'_>; 1];
    let mut _769: core::fmt::rt::Argument<'_>;
    let mut _770: &u64;
    let _771: &u64;
    let mut _772: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _773: &mut arrform::ArrForm<300>;
    let _774: ();
    let mut _775: &str;
    let _776: &str;
    let mut _777: &std::string::String;
    let _778: &std::string::String;
    let _779: std::string::String;
    let mut _781: std::fmt::Arguments<'_>;
    let mut _782: &[&str];
    let mut _783: &[&str; 1];
    let _784: &[&str; 1];
    let _785: [&str; 1];
    let mut _786: &[core::fmt::rt::Argument<'_>];
    let mut _787: &[core::fmt::rt::Argument<'_>; 1];
    let _788: &[core::fmt::rt::Argument<'_>; 1];
    let _789: [core::fmt::rt::Argument<'_>; 1];
    let mut _790: core::fmt::rt::Argument<'_>;
    let mut _791: &&str;
    let _792: &&str;
    let _793: &str;
    let mut _794: &arrform::ArrForm<300>;
    let _797: ();
    let mut _798: std::result::Result<(), std::fmt::Error>;
    let mut _799: &mut arrform::ArrForm<600>;
    let mut _800: std::fmt::Arguments<'_>;
    let mut _801: &[&str];
    let mut _802: &[&str; 1];
    let _803: &[&str; 1];
    let _804: [&str; 1];
    let mut _805: &[core::fmt::rt::Argument<'_>];
    let mut _806: &[core::fmt::rt::Argument<'_>; 1];
    let _807: &[core::fmt::rt::Argument<'_>; 1];
    let _808: [core::fmt::rt::Argument<'_>; 1];
    let mut _809: core::fmt::rt::Argument<'_>;
    let mut _810: &u64;
    let _811: &u64;
    let mut _812: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _813: &mut arrform::ArrForm<600>;
    let _814: ();
    let mut _815: &str;
    let _816: &str;
    let mut _817: &std::string::String;
    let _818: &std::string::String;
    let _819: std::string::String;
    let mut _821: std::fmt::Arguments<'_>;
    let mut _822: &[&str];
    let mut _823: &[&str; 1];
    let _824: &[&str; 1];
    let _825: [&str; 1];
    let mut _826: &[core::fmt::rt::Argument<'_>];
    let mut _827: &[core::fmt::rt::Argument<'_>; 1];
    let _828: &[core::fmt::rt::Argument<'_>; 1];
    let _829: [core::fmt::rt::Argument<'_>; 1];
    let mut _830: core::fmt::rt::Argument<'_>;
    let mut _831: &&str;
    let _832: &&str;
    let _833: &str;
    let mut _834: &arrform::ArrForm<600>;
    let _837: ();
    let mut _838: std::result::Result<(), std::fmt::Error>;
    let mut _839: &mut arrform::ArrForm<1200>;
    let mut _840: std::fmt::Arguments<'_>;
    let mut _841: &[&str];
    let mut _842: &[&str; 1];
    let _843: &[&str; 1];
    let _844: [&str; 1];
    let mut _845: &[core::fmt::rt::Argument<'_>];
    let mut _846: &[core::fmt::rt::Argument<'_>; 1];
    let _847: &[core::fmt::rt::Argument<'_>; 1];
    let _848: [core::fmt::rt::Argument<'_>; 1];
    let mut _849: core::fmt::rt::Argument<'_>;
    let mut _850: &u64;
    let _851: &u64;
    let mut _852: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _853: &mut arrform::ArrForm<1200>;
    let _854: ();
    let mut _855: &str;
    let _856: &str;
    let mut _857: &std::string::String;
    let _858: &std::string::String;
    let _859: std::string::String;
    let mut _861: std::fmt::Arguments<'_>;
    let mut _862: &[&str];
    let mut _863: &[&str; 1];
    let _864: &[&str; 1];
    let _865: [&str; 1];
    let mut _866: &[core::fmt::rt::Argument<'_>];
    let mut _867: &[core::fmt::rt::Argument<'_>; 1];
    let _868: &[core::fmt::rt::Argument<'_>; 1];
    let _869: [core::fmt::rt::Argument<'_>; 1];
    let mut _870: core::fmt::rt::Argument<'_>;
    let mut _871: &&str;
    let _872: &&str;
    let _873: &str;
    let mut _874: &arrform::ArrForm<1200>;
    let _875: ();
    let mut _876: usize;
    let mut _877: &str;
    let _878: &str;
    let mut _879: bool;
    let mut _880: bool;
    let mut _881: bool;
    let mut _882: bool;
    let mut _883: bool;
    let mut _884: bool;
    let _887: ();
    let mut _888: std::result::Result<(), std::fmt::Error>;
    let mut _889: &mut arrform::ArrForm<150>;
    let mut _890: std::fmt::Arguments<'_>;
    let mut _891: &[&str];
    let mut _892: &[&str; 1];
    let _893: &[&str; 1];
    let _894: [&str; 1];
    let mut _895: &[core::fmt::rt::Argument<'_>];
    let mut _896: &[core::fmt::rt::Argument<'_>; 1];
    let _897: &[core::fmt::rt::Argument<'_>; 1];
    let _898: [core::fmt::rt::Argument<'_>; 1];
    let mut _899: core::fmt::rt::Argument<'_>;
    let mut _900: &u64;
    let _901: &u64;
    let mut _902: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _903: &mut arrform::ArrForm<150>;
    let _904: ();
    let mut _905: &str;
    let _906: &str;
    let mut _907: &std::string::String;
    let _908: &std::string::String;
    let _909: std::string::String;
    let mut _911: std::fmt::Arguments<'_>;
    let mut _912: &[&str];
    let mut _913: &[&str; 1];
    let _914: &[&str; 1];
    let _915: [&str; 1];
    let mut _916: &[core::fmt::rt::Argument<'_>];
    let mut _917: &[core::fmt::rt::Argument<'_>; 1];
    let _918: &[core::fmt::rt::Argument<'_>; 1];
    let _919: [core::fmt::rt::Argument<'_>; 1];
    let mut _920: core::fmt::rt::Argument<'_>;
    let mut _921: &&str;
    let _922: &&str;
    let _923: &str;
    let mut _924: &arrform::ArrForm<150>;
    let _927: ();
    let mut _928: std::result::Result<(), std::fmt::Error>;
    let mut _929: &mut arrform::ArrForm<300>;
    let mut _930: std::fmt::Arguments<'_>;
    let mut _931: &[&str];
    let mut _932: &[&str; 1];
    let _933: &[&str; 1];
    let _934: [&str; 1];
    let mut _935: &[core::fmt::rt::Argument<'_>];
    let mut _936: &[core::fmt::rt::Argument<'_>; 1];
    let _937: &[core::fmt::rt::Argument<'_>; 1];
    let _938: [core::fmt::rt::Argument<'_>; 1];
    let mut _939: core::fmt::rt::Argument<'_>;
    let mut _940: &u64;
    let _941: &u64;
    let mut _942: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _943: &mut arrform::ArrForm<300>;
    let _944: ();
    let mut _945: &str;
    let _946: &str;
    let mut _947: &std::string::String;
    let _948: &std::string::String;
    let _949: std::string::String;
    let mut _951: std::fmt::Arguments<'_>;
    let mut _952: &[&str];
    let mut _953: &[&str; 1];
    let _954: &[&str; 1];
    let _955: [&str; 1];
    let mut _956: &[core::fmt::rt::Argument<'_>];
    let mut _957: &[core::fmt::rt::Argument<'_>; 1];
    let _958: &[core::fmt::rt::Argument<'_>; 1];
    let _959: [core::fmt::rt::Argument<'_>; 1];
    let mut _960: core::fmt::rt::Argument<'_>;
    let mut _961: &&str;
    let _962: &&str;
    let _963: &str;
    let mut _964: &arrform::ArrForm<300>;
    let _967: ();
    let mut _968: std::result::Result<(), std::fmt::Error>;
    let mut _969: &mut arrform::ArrForm<600>;
    let mut _970: std::fmt::Arguments<'_>;
    let mut _971: &[&str];
    let mut _972: &[&str; 1];
    let _973: &[&str; 1];
    let _974: [&str; 1];
    let mut _975: &[core::fmt::rt::Argument<'_>];
    let mut _976: &[core::fmt::rt::Argument<'_>; 1];
    let _977: &[core::fmt::rt::Argument<'_>; 1];
    let _978: [core::fmt::rt::Argument<'_>; 1];
    let mut _979: core::fmt::rt::Argument<'_>;
    let mut _980: &u64;
    let _981: &u64;
    let mut _982: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _983: &mut arrform::ArrForm<600>;
    let _984: ();
    let mut _985: &str;
    let _986: &str;
    let mut _987: &std::string::String;
    let _988: &std::string::String;
    let _989: std::string::String;
    let mut _991: std::fmt::Arguments<'_>;
    let mut _992: &[&str];
    let mut _993: &[&str; 1];
    let _994: &[&str; 1];
    let _995: [&str; 1];
    let mut _996: &[core::fmt::rt::Argument<'_>];
    let mut _997: &[core::fmt::rt::Argument<'_>; 1];
    let _998: &[core::fmt::rt::Argument<'_>; 1];
    let _999: [core::fmt::rt::Argument<'_>; 1];
    let mut _1000: core::fmt::rt::Argument<'_>;
    let mut _1001: &&str;
    let _1002: &&str;
    let _1003: &str;
    let mut _1004: &arrform::ArrForm<600>;
    let _1007: ();
    let mut _1008: std::result::Result<(), std::fmt::Error>;
    let mut _1009: &mut arrform::ArrForm<1200>;
    let mut _1010: std::fmt::Arguments<'_>;
    let mut _1011: &[&str];
    let mut _1012: &[&str; 1];
    let _1013: &[&str; 1];
    let _1014: [&str; 1];
    let mut _1015: &[core::fmt::rt::Argument<'_>];
    let mut _1016: &[core::fmt::rt::Argument<'_>; 1];
    let _1017: &[core::fmt::rt::Argument<'_>; 1];
    let _1018: [core::fmt::rt::Argument<'_>; 1];
    let mut _1019: core::fmt::rt::Argument<'_>;
    let mut _1020: &u64;
    let _1021: &u64;
    let mut _1022: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1023: &mut arrform::ArrForm<1200>;
    let _1024: ();
    let mut _1025: &str;
    let _1026: &str;
    let mut _1027: &std::string::String;
    let _1028: &std::string::String;
    let _1029: std::string::String;
    let mut _1031: std::fmt::Arguments<'_>;
    let mut _1032: &[&str];
    let mut _1033: &[&str; 1];
    let _1034: &[&str; 1];
    let _1035: [&str; 1];
    let mut _1036: &[core::fmt::rt::Argument<'_>];
    let mut _1037: &[core::fmt::rt::Argument<'_>; 1];
    let _1038: &[core::fmt::rt::Argument<'_>; 1];
    let _1039: [core::fmt::rt::Argument<'_>; 1];
    let mut _1040: core::fmt::rt::Argument<'_>;
    let mut _1041: &&str;
    let _1042: &&str;
    let _1043: &str;
    let mut _1044: &arrform::ArrForm<1200>;
    let _1045: ();
    let mut _1046: usize;
    let mut _1047: &str;
    let _1048: &str;
    let mut _1049: bool;
    let mut _1050: bool;
    let mut _1051: bool;
    let mut _1052: bool;
    let mut _1053: bool;
    let mut _1054: bool;
    let _1057: ();
    let mut _1058: std::result::Result<(), std::fmt::Error>;
    let mut _1059: &mut arrform::ArrForm<150>;
    let mut _1060: std::fmt::Arguments<'_>;
    let mut _1061: &[&str];
    let mut _1062: &[&str; 1];
    let _1063: &[&str; 1];
    let _1064: [&str; 1];
    let mut _1065: &[core::fmt::rt::Argument<'_>];
    let mut _1066: &[core::fmt::rt::Argument<'_>; 1];
    let _1067: &[core::fmt::rt::Argument<'_>; 1];
    let _1068: [core::fmt::rt::Argument<'_>; 1];
    let mut _1069: core::fmt::rt::Argument<'_>;
    let mut _1070: &u64;
    let _1071: &u64;
    let mut _1072: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1073: &mut arrform::ArrForm<150>;
    let _1074: ();
    let mut _1075: &str;
    let _1076: &str;
    let mut _1077: &std::string::String;
    let _1078: &std::string::String;
    let _1079: std::string::String;
    let mut _1081: std::fmt::Arguments<'_>;
    let mut _1082: &[&str];
    let mut _1083: &[&str; 1];
    let _1084: &[&str; 1];
    let _1085: [&str; 1];
    let mut _1086: &[core::fmt::rt::Argument<'_>];
    let mut _1087: &[core::fmt::rt::Argument<'_>; 1];
    let _1088: &[core::fmt::rt::Argument<'_>; 1];
    let _1089: [core::fmt::rt::Argument<'_>; 1];
    let mut _1090: core::fmt::rt::Argument<'_>;
    let mut _1091: &&str;
    let _1092: &&str;
    let _1093: &str;
    let mut _1094: &arrform::ArrForm<150>;
    let _1097: ();
    let mut _1098: std::result::Result<(), std::fmt::Error>;
    let mut _1099: &mut arrform::ArrForm<300>;
    let mut _1100: std::fmt::Arguments<'_>;
    let mut _1101: &[&str];
    let mut _1102: &[&str; 1];
    let _1103: &[&str; 1];
    let _1104: [&str; 1];
    let mut _1105: &[core::fmt::rt::Argument<'_>];
    let mut _1106: &[core::fmt::rt::Argument<'_>; 1];
    let _1107: &[core::fmt::rt::Argument<'_>; 1];
    let _1108: [core::fmt::rt::Argument<'_>; 1];
    let mut _1109: core::fmt::rt::Argument<'_>;
    let mut _1110: &u64;
    let _1111: &u64;
    let mut _1112: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1113: &mut arrform::ArrForm<300>;
    let _1114: ();
    let mut _1115: &str;
    let _1116: &str;
    let mut _1117: &std::string::String;
    let _1118: &std::string::String;
    let _1119: std::string::String;
    let mut _1121: std::fmt::Arguments<'_>;
    let mut _1122: &[&str];
    let mut _1123: &[&str; 1];
    let _1124: &[&str; 1];
    let _1125: [&str; 1];
    let mut _1126: &[core::fmt::rt::Argument<'_>];
    let mut _1127: &[core::fmt::rt::Argument<'_>; 1];
    let _1128: &[core::fmt::rt::Argument<'_>; 1];
    let _1129: [core::fmt::rt::Argument<'_>; 1];
    let mut _1130: core::fmt::rt::Argument<'_>;
    let mut _1131: &&str;
    let _1132: &&str;
    let _1133: &str;
    let mut _1134: &arrform::ArrForm<300>;
    let _1137: ();
    let mut _1138: std::result::Result<(), std::fmt::Error>;
    let mut _1139: &mut arrform::ArrForm<600>;
    let mut _1140: std::fmt::Arguments<'_>;
    let mut _1141: &[&str];
    let mut _1142: &[&str; 1];
    let _1143: &[&str; 1];
    let _1144: [&str; 1];
    let mut _1145: &[core::fmt::rt::Argument<'_>];
    let mut _1146: &[core::fmt::rt::Argument<'_>; 1];
    let _1147: &[core::fmt::rt::Argument<'_>; 1];
    let _1148: [core::fmt::rt::Argument<'_>; 1];
    let mut _1149: core::fmt::rt::Argument<'_>;
    let mut _1150: &u64;
    let _1151: &u64;
    let mut _1152: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1153: &mut arrform::ArrForm<600>;
    let _1154: ();
    let mut _1155: &str;
    let _1156: &str;
    let mut _1157: &std::string::String;
    let _1158: &std::string::String;
    let _1159: std::string::String;
    let mut _1161: std::fmt::Arguments<'_>;
    let mut _1162: &[&str];
    let mut _1163: &[&str; 1];
    let _1164: &[&str; 1];
    let _1165: [&str; 1];
    let mut _1166: &[core::fmt::rt::Argument<'_>];
    let mut _1167: &[core::fmt::rt::Argument<'_>; 1];
    let _1168: &[core::fmt::rt::Argument<'_>; 1];
    let _1169: [core::fmt::rt::Argument<'_>; 1];
    let mut _1170: core::fmt::rt::Argument<'_>;
    let mut _1171: &&str;
    let _1172: &&str;
    let _1173: &str;
    let mut _1174: &arrform::ArrForm<600>;
    let _1177: ();
    let mut _1178: std::result::Result<(), std::fmt::Error>;
    let mut _1179: &mut arrform::ArrForm<1200>;
    let mut _1180: std::fmt::Arguments<'_>;
    let mut _1181: &[&str];
    let mut _1182: &[&str; 1];
    let _1183: &[&str; 1];
    let _1184: [&str; 1];
    let mut _1185: &[core::fmt::rt::Argument<'_>];
    let mut _1186: &[core::fmt::rt::Argument<'_>; 1];
    let _1187: &[core::fmt::rt::Argument<'_>; 1];
    let _1188: [core::fmt::rt::Argument<'_>; 1];
    let mut _1189: core::fmt::rt::Argument<'_>;
    let mut _1190: &u64;
    let _1191: &u64;
    let mut _1192: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1193: &mut arrform::ArrForm<1200>;
    let _1194: ();
    let mut _1195: &str;
    let _1196: &str;
    let mut _1197: &std::string::String;
    let _1198: &std::string::String;
    let _1199: std::string::String;
    let mut _1201: std::fmt::Arguments<'_>;
    let mut _1202: &[&str];
    let mut _1203: &[&str; 1];
    let _1204: &[&str; 1];
    let _1205: [&str; 1];
    let mut _1206: &[core::fmt::rt::Argument<'_>];
    let mut _1207: &[core::fmt::rt::Argument<'_>; 1];
    let _1208: &[core::fmt::rt::Argument<'_>; 1];
    let _1209: [core::fmt::rt::Argument<'_>; 1];
    let mut _1210: core::fmt::rt::Argument<'_>;
    let mut _1211: &&str;
    let _1212: &&str;
    let _1213: &str;
    let mut _1214: &arrform::ArrForm<1200>;
    let _1215: ();
    let mut _1216: usize;
    let mut _1217: &str;
    let _1218: &str;
    let mut _1219: bool;
    let mut _1220: bool;
    let mut _1221: bool;
    let mut _1222: bool;
    let mut _1223: bool;
    let mut _1224: bool;
    let _1227: ();
    let mut _1228: std::result::Result<(), std::fmt::Error>;
    let mut _1229: &mut arrform::ArrForm<150>;
    let mut _1230: std::fmt::Arguments<'_>;
    let mut _1231: &[&str];
    let mut _1232: &[&str; 1];
    let _1233: &[&str; 1];
    let _1234: [&str; 1];
    let mut _1235: &[core::fmt::rt::Argument<'_>];
    let mut _1236: &[core::fmt::rt::Argument<'_>; 1];
    let _1237: &[core::fmt::rt::Argument<'_>; 1];
    let _1238: [core::fmt::rt::Argument<'_>; 1];
    let mut _1239: core::fmt::rt::Argument<'_>;
    let mut _1240: &u64;
    let _1241: &u64;
    let mut _1242: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1243: &mut arrform::ArrForm<150>;
    let _1244: ();
    let mut _1245: &str;
    let _1246: &str;
    let mut _1247: &std::string::String;
    let _1248: &std::string::String;
    let _1249: std::string::String;
    let mut _1251: std::fmt::Arguments<'_>;
    let mut _1252: &[&str];
    let mut _1253: &[&str; 1];
    let _1254: &[&str; 1];
    let _1255: [&str; 1];
    let mut _1256: &[core::fmt::rt::Argument<'_>];
    let mut _1257: &[core::fmt::rt::Argument<'_>; 1];
    let _1258: &[core::fmt::rt::Argument<'_>; 1];
    let _1259: [core::fmt::rt::Argument<'_>; 1];
    let mut _1260: core::fmt::rt::Argument<'_>;
    let mut _1261: &&str;
    let _1262: &&str;
    let _1263: &str;
    let mut _1264: &arrform::ArrForm<150>;
    let _1267: ();
    let mut _1268: std::result::Result<(), std::fmt::Error>;
    let mut _1269: &mut arrform::ArrForm<300>;
    let mut _1270: std::fmt::Arguments<'_>;
    let mut _1271: &[&str];
    let mut _1272: &[&str; 1];
    let _1273: &[&str; 1];
    let _1274: [&str; 1];
    let mut _1275: &[core::fmt::rt::Argument<'_>];
    let mut _1276: &[core::fmt::rt::Argument<'_>; 1];
    let _1277: &[core::fmt::rt::Argument<'_>; 1];
    let _1278: [core::fmt::rt::Argument<'_>; 1];
    let mut _1279: core::fmt::rt::Argument<'_>;
    let mut _1280: &u64;
    let _1281: &u64;
    let mut _1282: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1283: &mut arrform::ArrForm<300>;
    let _1284: ();
    let mut _1285: &str;
    let _1286: &str;
    let mut _1287: &std::string::String;
    let _1288: &std::string::String;
    let _1289: std::string::String;
    let mut _1291: std::fmt::Arguments<'_>;
    let mut _1292: &[&str];
    let mut _1293: &[&str; 1];
    let _1294: &[&str; 1];
    let _1295: [&str; 1];
    let mut _1296: &[core::fmt::rt::Argument<'_>];
    let mut _1297: &[core::fmt::rt::Argument<'_>; 1];
    let _1298: &[core::fmt::rt::Argument<'_>; 1];
    let _1299: [core::fmt::rt::Argument<'_>; 1];
    let mut _1300: core::fmt::rt::Argument<'_>;
    let mut _1301: &&str;
    let _1302: &&str;
    let _1303: &str;
    let mut _1304: &arrform::ArrForm<300>;
    let _1307: ();
    let mut _1308: std::result::Result<(), std::fmt::Error>;
    let mut _1309: &mut arrform::ArrForm<600>;
    let mut _1310: std::fmt::Arguments<'_>;
    let mut _1311: &[&str];
    let mut _1312: &[&str; 1];
    let _1313: &[&str; 1];
    let _1314: [&str; 1];
    let mut _1315: &[core::fmt::rt::Argument<'_>];
    let mut _1316: &[core::fmt::rt::Argument<'_>; 1];
    let _1317: &[core::fmt::rt::Argument<'_>; 1];
    let _1318: [core::fmt::rt::Argument<'_>; 1];
    let mut _1319: core::fmt::rt::Argument<'_>;
    let mut _1320: &u64;
    let _1321: &u64;
    let mut _1322: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1323: &mut arrform::ArrForm<600>;
    let _1324: ();
    let mut _1325: &str;
    let _1326: &str;
    let mut _1327: &std::string::String;
    let _1328: &std::string::String;
    let _1329: std::string::String;
    let mut _1331: std::fmt::Arguments<'_>;
    let mut _1332: &[&str];
    let mut _1333: &[&str; 1];
    let _1334: &[&str; 1];
    let _1335: [&str; 1];
    let mut _1336: &[core::fmt::rt::Argument<'_>];
    let mut _1337: &[core::fmt::rt::Argument<'_>; 1];
    let _1338: &[core::fmt::rt::Argument<'_>; 1];
    let _1339: [core::fmt::rt::Argument<'_>; 1];
    let mut _1340: core::fmt::rt::Argument<'_>;
    let mut _1341: &&str;
    let _1342: &&str;
    let _1343: &str;
    let mut _1344: &arrform::ArrForm<600>;
    let _1347: ();
    let mut _1348: std::result::Result<(), std::fmt::Error>;
    let mut _1349: &mut arrform::ArrForm<1200>;
    let mut _1350: std::fmt::Arguments<'_>;
    let mut _1351: &[&str];
    let mut _1352: &[&str; 1];
    let _1353: &[&str; 1];
    let _1354: [&str; 1];
    let mut _1355: &[core::fmt::rt::Argument<'_>];
    let mut _1356: &[core::fmt::rt::Argument<'_>; 1];
    let _1357: &[core::fmt::rt::Argument<'_>; 1];
    let _1358: [core::fmt::rt::Argument<'_>; 1];
    let mut _1359: core::fmt::rt::Argument<'_>;
    let mut _1360: &u64;
    let _1361: &u64;
    let mut _1362: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1363: &mut arrform::ArrForm<1200>;
    let _1364: ();
    let mut _1365: &str;
    let _1366: &str;
    let mut _1367: &std::string::String;
    let _1368: &std::string::String;
    let _1369: std::string::String;
    let mut _1371: std::fmt::Arguments<'_>;
    let mut _1372: &[&str];
    let mut _1373: &[&str; 1];
    let _1374: &[&str; 1];
    let _1375: [&str; 1];
    let mut _1376: &[core::fmt::rt::Argument<'_>];
    let mut _1377: &[core::fmt::rt::Argument<'_>; 1];
    let _1378: &[core::fmt::rt::Argument<'_>; 1];
    let _1379: [core::fmt::rt::Argument<'_>; 1];
    let mut _1380: core::fmt::rt::Argument<'_>;
    let mut _1381: &&str;
    let _1382: &&str;
    let _1383: &str;
    let mut _1384: &arrform::ArrForm<1200>;
    let _1385: ();
    let mut _1386: usize;
    let mut _1387: &str;
    let _1388: &str;
    let mut _1389: bool;
    let mut _1390: bool;
    let mut _1391: bool;
    let mut _1392: bool;
    let mut _1393: bool;
    let mut _1394: bool;
    let _1397: ();
    let mut _1398: std::result::Result<(), std::fmt::Error>;
    let mut _1399: &mut arrform::ArrForm<150>;
    let mut _1400: std::fmt::Arguments<'_>;
    let mut _1401: &[&str];
    let mut _1402: &[&str; 1];
    let _1403: &[&str; 1];
    let _1404: [&str; 1];
    let mut _1405: &[core::fmt::rt::Argument<'_>];
    let mut _1406: &[core::fmt::rt::Argument<'_>; 1];
    let _1407: &[core::fmt::rt::Argument<'_>; 1];
    let _1408: [core::fmt::rt::Argument<'_>; 1];
    let mut _1409: core::fmt::rt::Argument<'_>;
    let mut _1410: &u64;
    let _1411: &u64;
    let mut _1412: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1413: &mut arrform::ArrForm<150>;
    let _1414: ();
    let mut _1415: &str;
    let _1416: &str;
    let mut _1417: &std::string::String;
    let _1418: &std::string::String;
    let _1419: std::string::String;
    let mut _1421: std::fmt::Arguments<'_>;
    let mut _1422: &[&str];
    let mut _1423: &[&str; 1];
    let _1424: &[&str; 1];
    let _1425: [&str; 1];
    let mut _1426: &[core::fmt::rt::Argument<'_>];
    let mut _1427: &[core::fmt::rt::Argument<'_>; 1];
    let _1428: &[core::fmt::rt::Argument<'_>; 1];
    let _1429: [core::fmt::rt::Argument<'_>; 1];
    let mut _1430: core::fmt::rt::Argument<'_>;
    let mut _1431: &&str;
    let _1432: &&str;
    let _1433: &str;
    let mut _1434: &arrform::ArrForm<150>;
    let _1437: ();
    let mut _1438: std::result::Result<(), std::fmt::Error>;
    let mut _1439: &mut arrform::ArrForm<300>;
    let mut _1440: std::fmt::Arguments<'_>;
    let mut _1441: &[&str];
    let mut _1442: &[&str; 1];
    let _1443: &[&str; 1];
    let _1444: [&str; 1];
    let mut _1445: &[core::fmt::rt::Argument<'_>];
    let mut _1446: &[core::fmt::rt::Argument<'_>; 1];
    let _1447: &[core::fmt::rt::Argument<'_>; 1];
    let _1448: [core::fmt::rt::Argument<'_>; 1];
    let mut _1449: core::fmt::rt::Argument<'_>;
    let mut _1450: &u64;
    let _1451: &u64;
    let mut _1452: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1453: &mut arrform::ArrForm<300>;
    let _1454: ();
    let mut _1455: &str;
    let _1456: &str;
    let mut _1457: &std::string::String;
    let _1458: &std::string::String;
    let _1459: std::string::String;
    let mut _1461: std::fmt::Arguments<'_>;
    let mut _1462: &[&str];
    let mut _1463: &[&str; 1];
    let _1464: &[&str; 1];
    let _1465: [&str; 1];
    let mut _1466: &[core::fmt::rt::Argument<'_>];
    let mut _1467: &[core::fmt::rt::Argument<'_>; 1];
    let _1468: &[core::fmt::rt::Argument<'_>; 1];
    let _1469: [core::fmt::rt::Argument<'_>; 1];
    let mut _1470: core::fmt::rt::Argument<'_>;
    let mut _1471: &&str;
    let _1472: &&str;
    let _1473: &str;
    let mut _1474: &arrform::ArrForm<300>;
    let _1477: ();
    let mut _1478: std::result::Result<(), std::fmt::Error>;
    let mut _1479: &mut arrform::ArrForm<600>;
    let mut _1480: std::fmt::Arguments<'_>;
    let mut _1481: &[&str];
    let mut _1482: &[&str; 1];
    let _1483: &[&str; 1];
    let _1484: [&str; 1];
    let mut _1485: &[core::fmt::rt::Argument<'_>];
    let mut _1486: &[core::fmt::rt::Argument<'_>; 1];
    let _1487: &[core::fmt::rt::Argument<'_>; 1];
    let _1488: [core::fmt::rt::Argument<'_>; 1];
    let mut _1489: core::fmt::rt::Argument<'_>;
    let mut _1490: &u64;
    let _1491: &u64;
    let mut _1492: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1493: &mut arrform::ArrForm<600>;
    let _1494: ();
    let mut _1495: &str;
    let _1496: &str;
    let mut _1497: &std::string::String;
    let _1498: &std::string::String;
    let _1499: std::string::String;
    let mut _1501: std::fmt::Arguments<'_>;
    let mut _1502: &[&str];
    let mut _1503: &[&str; 1];
    let _1504: &[&str; 1];
    let _1505: [&str; 1];
    let mut _1506: &[core::fmt::rt::Argument<'_>];
    let mut _1507: &[core::fmt::rt::Argument<'_>; 1];
    let _1508: &[core::fmt::rt::Argument<'_>; 1];
    let _1509: [core::fmt::rt::Argument<'_>; 1];
    let mut _1510: core::fmt::rt::Argument<'_>;
    let mut _1511: &&str;
    let _1512: &&str;
    let _1513: &str;
    let mut _1514: &arrform::ArrForm<600>;
    let _1517: ();
    let mut _1518: std::result::Result<(), std::fmt::Error>;
    let mut _1519: &mut arrform::ArrForm<1200>;
    let mut _1520: std::fmt::Arguments<'_>;
    let mut _1521: &[&str];
    let mut _1522: &[&str; 1];
    let _1523: &[&str; 1];
    let _1524: [&str; 1];
    let mut _1525: &[core::fmt::rt::Argument<'_>];
    let mut _1526: &[core::fmt::rt::Argument<'_>; 1];
    let _1527: &[core::fmt::rt::Argument<'_>; 1];
    let _1528: [core::fmt::rt::Argument<'_>; 1];
    let mut _1529: core::fmt::rt::Argument<'_>;
    let mut _1530: &u64;
    let _1531: &u64;
    let mut _1532: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _1533: &mut arrform::ArrForm<1200>;
    let _1534: ();
    let mut _1535: &str;
    let _1536: &str;
    let mut _1537: &std::string::String;
    let _1538: &std::string::String;
    let _1539: std::string::String;
    let mut _1541: std::fmt::Arguments<'_>;
    let mut _1542: &[&str];
    let mut _1543: &[&str; 1];
    let _1544: &[&str; 1];
    let _1545: [&str; 1];
    let mut _1546: &[core::fmt::rt::Argument<'_>];
    let mut _1547: &[core::fmt::rt::Argument<'_>; 1];
    let _1548: &[core::fmt::rt::Argument<'_>; 1];
    let _1549: [core::fmt::rt::Argument<'_>; 1];
    let mut _1550: core::fmt::rt::Argument<'_>;
    let mut _1551: &&str;
    let _1552: &&str;
    let _1553: &str;
    let mut _1554: &arrform::ArrForm<1200>;
    let _1555: ();
    let mut _1556: bool;
    let mut _1557: u64;
    let mut _1558: u64;
    let mut _1559: u64;
    let mut _1560: (u64, bool);
    let mut _1561: u64;
    let mut _1562: !;
    let mut _1563: anchor_lang::error::Error;
    let mut _1564: anchor_lang::error::AnchorError;
    let mut _1565: std::string::String;
    let mut _1566: &KaminoVaultError;
    let _1567: KaminoVaultError;
    let mut _1568: u32;
    let mut _1569: KaminoVaultError;
    let mut _1570: std::string::String;
    let mut _1571: &KaminoVaultError;
    let _1572: KaminoVaultError;
    let mut _1573: std::option::Option<anchor_lang::error::ErrorOrigin>;
    let mut _1574: anchor_lang::error::ErrorOrigin;
    let mut _1575: anchor_lang::error::Source;
    let mut _1576: std::option::Option<anchor_lang::error::ComparedValues>;
    let _1577: ();
    let mut _1578: isize;
    let mut _1580: bool;
    let mut _1581: &state::VaultState;
    let mut _1582: anchor_lang::prelude::Pubkey;
    let mut _1583: !;
    let mut _1584: anchor_lang::error::Error;
    let mut _1585: anchor_lang::error::AnchorError;
    let mut _1586: std::string::String;
    let mut _1587: &KaminoVaultError;
    let _1588: KaminoVaultError;
    let mut _1589: u32;
    let mut _1590: KaminoVaultError;
    let mut _1591: std::string::String;
    let mut _1592: &KaminoVaultError;
    let _1593: KaminoVaultError;
    let mut _1594: std::option::Option<anchor_lang::error::ErrorOrigin>;
    let mut _1595: anchor_lang::error::ErrorOrigin;
    let mut _1596: anchor_lang::error::Source;
    let mut _1597: std::option::Option<anchor_lang::error::ComparedValues>;
    let _1598: ();
    let mut _1599: &mut state::VaultState;
    let mut _1600: u64;
    let mut _1601: u64;
    let _1602: ();
    let mut _1603: &mut state::VaultState;
    let mut _1604: u64;
    let _1605: ();
    let mut _1606: isize;
    let _1608: ();
    let mut _1609: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>>;
    let mut _1610: std::result::Result<(), anchor_lang::error::Error>;
    let mut _1611: &mut state::VaultState;
    let mut _1612: u64;
    let mut _1613: &anchor_lang::prelude::Pubkey;
    let mut _1614: isize;
    let mut _1616: !;
    let mut _1617: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let _1619: ();
    let mut _1620: &mut state::VaultState;
    let mut _1621: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _1622: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _1623: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _1624: operations::effects::WithdrawEffects;
    let mut _1625: u64;
    let mut _1626: u64;
    let mut _1627: u64;
    let mut _1628: u64;
    let mut _1629: u64;
    let mut _1705: &KaminoVaultError;
    let mut _1706: &KaminoVaultError;
    let mut _1707: bool;
    let mut _1708: isize;
    let mut _1709: isize;
    let mut _1710: isize;
    let mut _1711: isize;
    let mut _1712: isize;
    let mut _1713: isize;
    let mut _1714: isize;
    let mut _1715: isize;
    let mut _1716: isize;
    let mut _1717: isize;
    let mut _1718: isize;
    let mut _1719: isize;
    let mut _1720: isize;
    let mut _1721: isize;
    let mut _1722: isize;
    let mut _1723: isize;
    let mut _1724: isize;
    let mut _1725: isize;
    let mut _1726: isize;
    let mut _1727: isize;
    scope 1 {
        debug holdings => _27;
        let _46: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
        let _49: ();
        let _50: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
        let _57: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
        let _60: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
        scope 6 {
            debug residual => _46;
            scope 7 {
            }
        }
        scope 8 {
            debug val => _49;
            scope 9 {
            }
        }
        scope 10 {
            debug current_vault_aum => _50;
            let _81: u64;
            let mut _1702: &KaminoVaultError;
            let mut _1703: &KaminoVaultError;
            let mut _1704: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
            scope 15 {
                debug total_shares_supply => _81;
                let _82: u64;
                scope 16 {
                    debug total_for_user => _82;
                    let _86: u64;
                    scope 17 {
                        debug available_to_send_to_user => _86;
                        let _89: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                        let _90: u64;
                        let _91: u64;
                        let _92: u64;
                        scope 18 {
                            debug invested_liquidity_to_send_to_user_f => _89;
                            debug invested_liquidity_to_disinvest => _90;
                            debug invested_to_disinvest_ctokens => _91;
                            debug liquidity_rounding_error => _92;
                            let _150: u64;
                            scope 29 {
                                debug invested_liquidity_to_send_to_user => _150;
                                let _152: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                scope 30 {
                                    debug theoretical_amount_to_send_to_user_f => _152;
                                    let _156: u64;
                                    scope 31 {
                                        debug actual_invested_liquidity_to_send_to_user => _156;
                                        let _160: u64;
                                        scope 32 {
                                            debug shares_to_burn => _160;
                                            let _165: u64;
                                            scope 33 {
                                                debug disinvested_amount_left_in_vault => _165;
                                                let _197: arrform::ArrForm<150>;
                                                let mut _198: arrform::ArrForm<150>;
                                                let _237: arrform::ArrForm<300>;
                                                let mut _238: arrform::ArrForm<300>;
                                                let _277: arrform::ArrForm<600>;
                                                let mut _278: arrform::ArrForm<600>;
                                                let _317: arrform::ArrForm<1200>;
                                                let mut _318: arrform::ArrForm<1200>;
                                                let _367: arrform::ArrForm<150>;
                                                let mut _368: arrform::ArrForm<150>;
                                                let _409: arrform::ArrForm<300>;
                                                let mut _410: arrform::ArrForm<300>;
                                                let _451: arrform::ArrForm<600>;
                                                let mut _452: arrform::ArrForm<600>;
                                                let _493: arrform::ArrForm<1200>;
                                                let mut _494: arrform::ArrForm<1200>;
                                                let _545: arrform::ArrForm<150>;
                                                let mut _546: arrform::ArrForm<150>;
                                                let _585: arrform::ArrForm<300>;
                                                let mut _586: arrform::ArrForm<300>;
                                                let _625: arrform::ArrForm<600>;
                                                let mut _626: arrform::ArrForm<600>;
                                                let _665: arrform::ArrForm<1200>;
                                                let mut _666: arrform::ArrForm<1200>;
                                                let _715: arrform::ArrForm<150>;
                                                let mut _716: arrform::ArrForm<150>;
                                                let _755: arrform::ArrForm<300>;
                                                let mut _756: arrform::ArrForm<300>;
                                                let _795: arrform::ArrForm<600>;
                                                let mut _796: arrform::ArrForm<600>;
                                                let _835: arrform::ArrForm<1200>;
                                                let mut _836: arrform::ArrForm<1200>;
                                                let _885: arrform::ArrForm<150>;
                                                let mut _886: arrform::ArrForm<150>;
                                                let _925: arrform::ArrForm<300>;
                                                let mut _926: arrform::ArrForm<300>;
                                                let _965: arrform::ArrForm<600>;
                                                let mut _966: arrform::ArrForm<600>;
                                                let _1005: arrform::ArrForm<1200>;
                                                let mut _1006: arrform::ArrForm<1200>;
                                                let _1055: arrform::ArrForm<150>;
                                                let mut _1056: arrform::ArrForm<150>;
                                                let _1095: arrform::ArrForm<300>;
                                                let mut _1096: arrform::ArrForm<300>;
                                                let _1135: arrform::ArrForm<600>;
                                                let mut _1136: arrform::ArrForm<600>;
                                                let _1175: arrform::ArrForm<1200>;
                                                let mut _1176: arrform::ArrForm<1200>;
                                                let _1225: arrform::ArrForm<150>;
                                                let mut _1226: arrform::ArrForm<150>;
                                                let _1265: arrform::ArrForm<300>;
                                                let mut _1266: arrform::ArrForm<300>;
                                                let _1305: arrform::ArrForm<600>;
                                                let mut _1306: arrform::ArrForm<600>;
                                                let _1345: arrform::ArrForm<1200>;
                                                let mut _1346: arrform::ArrForm<1200>;
                                                let _1395: arrform::ArrForm<150>;
                                                let mut _1396: arrform::ArrForm<150>;
                                                let _1435: arrform::ArrForm<300>;
                                                let mut _1436: arrform::ArrForm<300>;
                                                let _1475: arrform::ArrForm<600>;
                                                let mut _1476: arrform::ArrForm<600>;
                                                let _1515: arrform::ArrForm<1200>;
                                                let mut _1516: arrform::ArrForm<1200>;
                                                let mut _1630: &KaminoVaultError;
                                                let mut _1631: &KaminoVaultError;
                                                let mut _1632: &KaminoVaultError;
                                                let mut _1633: &KaminoVaultError;
                                                scope 34 {
                                                    debug formatted => _197;
                                                    let _222: std::string::String;
                                                    let mut _1698: &[&str; 1];
                                                    scope 36 {
                                                        debug res => _222;
                                                    }
                                                }
                                                scope 35 {
                                                    debug af => _198;
                                                    let mut _1699: &[&str; 1];
                                                }
                                                scope 37 {
                                                    debug formatted => _237;
                                                    let _262: std::string::String;
                                                    let mut _1696: &[&str; 1];
                                                    scope 39 {
                                                        debug res => _262;
                                                    }
                                                }
                                                scope 38 {
                                                    debug af => _238;
                                                    let mut _1697: &[&str; 1];
                                                }
                                                scope 40 {
                                                    debug formatted => _277;
                                                    let _302: std::string::String;
                                                    let mut _1694: &[&str; 1];
                                                    scope 42 {
                                                        debug res => _302;
                                                    }
                                                }
                                                scope 41 {
                                                    debug af => _278;
                                                    let mut _1695: &[&str; 1];
                                                }
                                                scope 43 {
                                                    debug formatted => _317;
                                                    let _342: std::string::String;
                                                    let mut _1692: &[&str; 1];
                                                    scope 45 {
                                                        debug res => _342;
                                                    }
                                                }
                                                scope 44 {
                                                    debug af => _318;
                                                    let mut _1693: &[&str; 1];
                                                }
                                                scope 46 {
                                                    debug formatted => _367;
                                                    let _394: std::string::String;
                                                    let mut _1690: &[&str; 1];
                                                    scope 48 {
                                                        debug res => _394;
                                                    }
                                                }
                                                scope 47 {
                                                    debug af => _368;
                                                    let mut _1691: &[&str; 1];
                                                }
                                                scope 49 {
                                                    debug formatted => _409;
                                                    let _436: std::string::String;
                                                    let mut _1688: &[&str; 1];
                                                    scope 51 {
                                                        debug res => _436;
                                                    }
                                                }
                                                scope 50 {
                                                    debug af => _410;
                                                    let mut _1689: &[&str; 1];
                                                }
                                                scope 52 {
                                                    debug formatted => _451;
                                                    let _478: std::string::String;
                                                    let mut _1686: &[&str; 1];
                                                    scope 54 {
                                                        debug res => _478;
                                                    }
                                                }
                                                scope 53 {
                                                    debug af => _452;
                                                    let mut _1687: &[&str; 1];
                                                }
                                                scope 55 {
                                                    debug formatted => _493;
                                                    let _520: std::string::String;
                                                    let mut _1684: &[&str; 1];
                                                    scope 57 {
                                                        debug res => _520;
                                                    }
                                                }
                                                scope 56 {
                                                    debug af => _494;
                                                    let mut _1685: &[&str; 1];
                                                }
                                                scope 58 {
                                                    debug formatted => _545;
                                                    let _570: std::string::String;
                                                    let mut _1682: &[&str; 1];
                                                    scope 60 {
                                                        debug res => _570;
                                                    }
                                                }
                                                scope 59 {
                                                    debug af => _546;
                                                    let mut _1683: &[&str; 1];
                                                }
                                                scope 61 {
                                                    debug formatted => _585;
                                                    let _610: std::string::String;
                                                    let mut _1680: &[&str; 1];
                                                    scope 63 {
                                                        debug res => _610;
                                                    }
                                                }
                                                scope 62 {
                                                    debug af => _586;
                                                    let mut _1681: &[&str; 1];
                                                }
                                                scope 64 {
                                                    debug formatted => _625;
                                                    let _650: std::string::String;
                                                    let mut _1678: &[&str; 1];
                                                    scope 66 {
                                                        debug res => _650;
                                                    }
                                                }
                                                scope 65 {
                                                    debug af => _626;
                                                    let mut _1679: &[&str; 1];
                                                }
                                                scope 67 {
                                                    debug formatted => _665;
                                                    let _690: std::string::String;
                                                    let mut _1676: &[&str; 1];
                                                    scope 69 {
                                                        debug res => _690;
                                                    }
                                                }
                                                scope 68 {
                                                    debug af => _666;
                                                    let mut _1677: &[&str; 1];
                                                }
                                                scope 70 {
                                                    debug formatted => _715;
                                                    let _740: std::string::String;
                                                    let mut _1674: &[&str; 1];
                                                    scope 72 {
                                                        debug res => _740;
                                                    }
                                                }
                                                scope 71 {
                                                    debug af => _716;
                                                    let mut _1675: &[&str; 1];
                                                }
                                                scope 73 {
                                                    debug formatted => _755;
                                                    let _780: std::string::String;
                                                    let mut _1672: &[&str; 1];
                                                    scope 75 {
                                                        debug res => _780;
                                                    }
                                                }
                                                scope 74 {
                                                    debug af => _756;
                                                    let mut _1673: &[&str; 1];
                                                }
                                                scope 76 {
                                                    debug formatted => _795;
                                                    let _820: std::string::String;
                                                    let mut _1670: &[&str; 1];
                                                    scope 78 {
                                                        debug res => _820;
                                                    }
                                                }
                                                scope 77 {
                                                    debug af => _796;
                                                    let mut _1671: &[&str; 1];
                                                }
                                                scope 79 {
                                                    debug formatted => _835;
                                                    let _860: std::string::String;
                                                    let mut _1668: &[&str; 1];
                                                    scope 81 {
                                                        debug res => _860;
                                                    }
                                                }
                                                scope 80 {
                                                    debug af => _836;
                                                    let mut _1669: &[&str; 1];
                                                }
                                                scope 82 {
                                                    debug formatted => _885;
                                                    let _910: std::string::String;
                                                    let mut _1666: &[&str; 1];
                                                    scope 84 {
                                                        debug res => _910;
                                                    }
                                                }
                                                scope 83 {
                                                    debug af => _886;
                                                    let mut _1667: &[&str; 1];
                                                }
                                                scope 85 {
                                                    debug formatted => _925;
                                                    let _950: std::string::String;
                                                    let mut _1664: &[&str; 1];
                                                    scope 87 {
                                                        debug res => _950;
                                                    }
                                                }
                                                scope 86 {
                                                    debug af => _926;
                                                    let mut _1665: &[&str; 1];
                                                }
                                                scope 88 {
                                                    debug formatted => _965;
                                                    let _990: std::string::String;
                                                    let mut _1662: &[&str; 1];
                                                    scope 90 {
                                                        debug res => _990;
                                                    }
                                                }
                                                scope 89 {
                                                    debug af => _966;
                                                    let mut _1663: &[&str; 1];
                                                }
                                                scope 91 {
                                                    debug formatted => _1005;
                                                    let _1030: std::string::String;
                                                    let mut _1660: &[&str; 1];
                                                    scope 93 {
                                                        debug res => _1030;
                                                    }
                                                }
                                                scope 92 {
                                                    debug af => _1006;
                                                    let mut _1661: &[&str; 1];
                                                }
                                                scope 94 {
                                                    debug formatted => _1055;
                                                    let _1080: std::string::String;
                                                    let mut _1658: &[&str; 1];
                                                    scope 96 {
                                                        debug res => _1080;
                                                    }
                                                }
                                                scope 95 {
                                                    debug af => _1056;
                                                    let mut _1659: &[&str; 1];
                                                }
                                                scope 97 {
                                                    debug formatted => _1095;
                                                    let _1120: std::string::String;
                                                    let mut _1656: &[&str; 1];
                                                    scope 99 {
                                                        debug res => _1120;
                                                    }
                                                }
                                                scope 98 {
                                                    debug af => _1096;
                                                    let mut _1657: &[&str; 1];
                                                }
                                                scope 100 {
                                                    debug formatted => _1135;
                                                    let _1160: std::string::String;
                                                    let mut _1654: &[&str; 1];
                                                    scope 102 {
                                                        debug res => _1160;
                                                    }
                                                }
                                                scope 101 {
                                                    debug af => _1136;
                                                    let mut _1655: &[&str; 1];
                                                }
                                                scope 103 {
                                                    debug formatted => _1175;
                                                    let _1200: std::string::String;
                                                    let mut _1652: &[&str; 1];
                                                    scope 105 {
                                                        debug res => _1200;
                                                    }
                                                }
                                                scope 104 {
                                                    debug af => _1176;
                                                    let mut _1653: &[&str; 1];
                                                }
                                                scope 106 {
                                                    debug formatted => _1225;
                                                    let _1250: std::string::String;
                                                    let mut _1650: &[&str; 1];
                                                    scope 108 {
                                                        debug res => _1250;
                                                    }
                                                }
                                                scope 107 {
                                                    debug af => _1226;
                                                    let mut _1651: &[&str; 1];
                                                }
                                                scope 109 {
                                                    debug formatted => _1265;
                                                    let _1290: std::string::String;
                                                    let mut _1648: &[&str; 1];
                                                    scope 111 {
                                                        debug res => _1290;
                                                    }
                                                }
                                                scope 110 {
                                                    debug af => _1266;
                                                    let mut _1649: &[&str; 1];
                                                }
                                                scope 112 {
                                                    debug formatted => _1305;
                                                    let _1330: std::string::String;
                                                    let mut _1646: &[&str; 1];
                                                    scope 114 {
                                                        debug res => _1330;
                                                    }
                                                }
                                                scope 113 {
                                                    debug af => _1306;
                                                    let mut _1647: &[&str; 1];
                                                }
                                                scope 115 {
                                                    debug formatted => _1345;
                                                    let _1370: std::string::String;
                                                    let mut _1644: &[&str; 1];
                                                    scope 117 {
                                                        debug res => _1370;
                                                    }
                                                }
                                                scope 116 {
                                                    debug af => _1346;
                                                    let mut _1645: &[&str; 1];
                                                }
                                                scope 118 {
                                                    debug formatted => _1395;
                                                    let _1420: std::string::String;
                                                    let mut _1642: &[&str; 1];
                                                    scope 120 {
                                                        debug res => _1420;
                                                    }
                                                }
                                                scope 119 {
                                                    debug af => _1396;
                                                    let mut _1643: &[&str; 1];
                                                }
                                                scope 121 {
                                                    debug formatted => _1435;
                                                    let _1460: std::string::String;
                                                    let mut _1640: &[&str; 1];
                                                    scope 123 {
                                                        debug res => _1460;
                                                    }
                                                }
                                                scope 122 {
                                                    debug af => _1436;
                                                    let mut _1641: &[&str; 1];
                                                }
                                                scope 124 {
                                                    debug formatted => _1475;
                                                    let _1500: std::string::String;
                                                    let mut _1638: &[&str; 1];
                                                    scope 126 {
                                                        debug res => _1500;
                                                    }
                                                }
                                                scope 125 {
                                                    debug af => _1476;
                                                    let mut _1639: &[&str; 1];
                                                }
                                                scope 127 {
                                                    debug formatted => _1515;
                                                    let _1540: std::string::String;
                                                    let mut _1636: &[&str; 1];
                                                    scope 129 {
                                                        debug res => _1540;
                                                    }
                                                }
                                                scope 128 {
                                                    debug af => _1516;
                                                    let mut _1637: &[&str; 1];
                                                }
                                                scope 130 {
                                                    debug reserve_address => _1579;
                                                    let _1579: &anchor_lang::prelude::Pubkey;
                                                    let mut _1634: &KaminoVaultError;
                                                    let mut _1635: &KaminoVaultError;
                                                }
                                                scope 131 {
                                                    debug reserve_address => _1607;
                                                    let _1607: &anchor_lang::prelude::Pubkey;
                                                    let _1615: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                                                    let _1618: ();
                                                    scope 132 {
                                                        debug residual => _1615;
                                                        scope 133 {
                                                        }
                                                    }
                                                    scope 134 {
                                                        debug val => _1618;
                                                        scope 135 {
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        scope 19 {
                            debug reserve_address => _95;
                            let _95: &anchor_lang::prelude::Pubkey;
                            let _96: &operations::vault_operations::common::InvestedReserve;
                            scope 20 {
                                debug invested_in_reserve => _96;
                                let _99: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                scope 21 {
                                    debug invested_liquidity_to_send_to_user_f => _99;
                                    let _111: kamino_lending::CollateralExchangeRate;
                                    let mut _1701: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                    scope 22 {
                                        debug exchange_rate => _111;
                                        let _115: u64;
                                        scope 23 {
                                            debug invested_to_disinvest_ctokens => _115;
                                            let _121: u64;
                                            scope 24 {
                                                debug max_ctokens_to_disinvest => _121;
                                                let _123: u64;
                                                scope 25 {
                                                    debug invested_to_disinvest_ctokens => _123;
                                                    let _126: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                                    scope 26 {
                                                        debug invested_liquidity_to_disinvest_f => _126;
                                                        let _130: u64;
                                                        scope 27 {
                                                            debug invested_liquidity_to_disinvest => _130;
                                                            let _132: u64;
                                                            let mut _1700: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                                            scope 28 {
                                                                debug liquidity_rounding_error => _132;
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        scope 11 {
            debug residual => _57;
            scope 12 {
            }
        }
        scope 13 {
            debug val => _60;
            scope 14 {
            }
        }
    }
    scope 2 {
        debug residual => _34;
        scope 3 {
        }
    }
    scope 4 {
        debug val => _37;
        scope 5 {
        }
    }

    bb0: {
        _1707 = const false;
        _1707 = const true;
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _7;
        _10 = Gt(move _11, const 0_u64);
        switchInt(move _10) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_11);
        _9 = const ();
        StorageDead(_10);
        StorageDead(_9);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &(*_1);
        StorageLive(_31);
        _1707 = const false;
        _31 = move _4;
        StorageLive(_32);
        _32 = _6;
        _29 = holdings::<'_, T, impl Iterator<Item = T>>(move _30, move _31, move _32) -> [return: bb7, unwind: bb633];
    }

    bb2: {
        StorageDead(_11);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _1706 = const _;
        _16 = &(*_1706);
        _15 = KaminoVaultError::name(move _16) -> [return: bb3, unwind: bb633];
    }

    bb3: {
        StorageDead(_16);
        StorageLive(_18);
        StorageLive(_19);
        _19 = KaminoVaultError::CannotWithdrawZeroShares;
        _18 = <KaminoVaultError as Into<u32>>::into(move _19) -> [return: bb4, unwind: bb624];
    }

    bb4: {
        StorageDead(_19);
        StorageLive(_20);
        StorageLive(_21);
        _1705 = const _;
        _21 = &(*_1705);
        _20 = <KaminoVaultError as ToString>::to_string(move _21) -> [return: bb5, unwind: bb624];
    }

    bb5: {
        StorageDead(_21);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = anchor_lang::error::Source { filename: const "programs\\kvault\\src\\operations\\vault_operations.rs", line: const 126_u32 };
        _24 = anchor_lang::error::ErrorOrigin::Source(move _25);
        StorageDead(_25);
        _23 = Option::<ErrorOrigin>::Some(move _24);
        StorageDead(_24);
        StorageLive(_26);
        _26 = Option::<ComparedValues>::None;
        _14 = anchor_lang::error::AnchorError { error_name: move _15, error_code_number: move _18, error_msg: move _20, error_origin: move _23, compared_values: move _26 };
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_20);
        StorageDead(_18);
        StorageDead(_15);
        _13 = <anchor_lang::error::Error as From<anchor_lang::error::AnchorError>>::from(move _14) -> [return: bb6, unwind: bb633];
    }

    bb6: {
        StorageDead(_14);
        _0 = std::result::Result::<effects::WithdrawEffects, anchor_lang::error::Error>::Err(move _13);
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_9);
        goto -> bb627;
    }

    bb7: {
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_30);
        _28 = <std::result::Result<Holdings, anchor_lang::error::Error> as Try>::branch(move _29) -> [return: bb8, unwind: bb633];
    }

    bb8: {
        StorageDead(_29);
        _33 = discriminant(_28);
        switchInt(move _33) -> [0: bb9, 1: bb11, otherwise: bb10];
    }

    bb9: {
        StorageLive(_37);
        _37 = move ((_28 as Continue).0: operations::vault_operations::common::Holdings);
        _27 = move _37;
        StorageDead(_37);
        _1708 = discriminant(_28);
        StorageDead(_28);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        _41 = &mut (*_1);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &(_27.1: operations::vault_operations::common::Invested);
        _42 = &(*_43);
        StorageLive(_44);
        _44 = _5;
        _40 = charge_fees(move _41, move _42, move _44) -> [return: bb13, unwind: bb623];
    }

    bb10: {
        unreachable;
    }

    bb11: {
        StorageLive(_34);
        _34 = move ((_28 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_36);
        _36 = move _34;
        _0 = <std::result::Result<effects::WithdrawEffects, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _36) -> [return: bb12, unwind: bb631];
    }

    bb12: {
        StorageDead(_36);
        StorageDead(_34);
        _1722 = discriminant(_28);
        StorageDead(_28);
        goto -> bb585;
    }

    bb13: {
        StorageDead(_44);
        StorageDead(_42);
        StorageDead(_41);
        _39 = <std::result::Result<(), anchor_lang::error::Error> as Try>::branch(move _40) -> [return: bb14, unwind: bb623];
    }

    bb14: {
        StorageDead(_40);
        _45 = discriminant(_39);
        switchInt(move _45) -> [0: bb15, 1: bb16, otherwise: bb10];
    }

    bb15: {
        StorageLive(_49);
        _49 = ((_39 as Continue).0: ());
        _38 = _49;
        StorageDead(_49);
        _1710 = discriminant(_39);
        StorageDead(_43);
        StorageDead(_39);
        StorageDead(_38);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        _53 = &(*_1);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &((_27.1: operations::vault_operations::common::Invested).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _54 = &(*_55);
        _52 = state::VaultState::compute_aum(move _53, move _54) -> [return: bb18, unwind: bb623];
    }

    bb16: {
        StorageLive(_46);
        _46 = move ((_39 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_48);
        _48 = move _46;
        _0 = <std::result::Result<effects::WithdrawEffects, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _48) -> [return: bb17, unwind: bb630];
    }

    bb17: {
        StorageDead(_48);
        StorageDead(_46);
        _1720 = discriminant(_39);
        StorageDead(_43);
        StorageDead(_39);
        StorageDead(_38);
        goto -> bb584;
    }

    bb18: {
        StorageDead(_54);
        StorageDead(_53);
        _51 = <std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error> as Try>::branch(move _52) -> [return: bb19, unwind: bb623];
    }

    bb19: {
        StorageDead(_52);
        _56 = discriminant(_51);
        switchInt(move _56) -> [0: bb20, 1: bb21, otherwise: bb10];
    }

    bb20: {
        StorageLive(_60);
        _60 = ((_51 as Continue).0: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _50 = _60;
        StorageDead(_60);
        _1712 = discriminant(_51);
        StorageDead(_55);
        StorageDead(_51);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        _63 = &_50;
        StorageLive(_64);
        _1704 = const _;
        _64 = &(*_1704);
        _62 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::gt(move _63, move _64) -> [return: bb23, unwind: bb623];
    }

    bb21: {
        StorageLive(_57);
        _57 = move ((_51 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_59);
        _59 = move _57;
        _0 = <std::result::Result<effects::WithdrawEffects, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _59) -> [return: bb22, unwind: bb629];
    }

    bb22: {
        StorageDead(_59);
        StorageDead(_57);
        _1718 = discriminant(_51);
        StorageDead(_55);
        StorageDead(_51);
        goto -> bb583;
    }

    bb23: {
        switchInt(move _62) -> [0: bb25, otherwise: bb24];
    }

    bb24: {
        StorageDead(_64);
        StorageDead(_63);
        _61 = const ();
        StorageDead(_62);
        StorageDead(_61);
        StorageLive(_81);
        _81 = ((*_1).10: u64);
        StorageLive(_82);
        StorageLive(_83);
        _83 = _81;
        StorageLive(_84);
        _84 = _50;
        StorageLive(_85);
        _85 = _7;
        _82 = compute_user_total_received_on_withdraw(move _83, move _84, move _85) -> [return: bb30, unwind: bb623];
    }

    bb25: {
        StorageDead(_64);
        StorageDead(_63);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        _1703 = const _;
        _70 = &(*_1703);
        _69 = KaminoVaultError::name(move _70) -> [return: bb26, unwind: bb623];
    }

    bb26: {
        StorageDead(_70);
        StorageLive(_72);
        StorageLive(_73);
        _73 = KaminoVaultError::VaultAUMZero;
        _72 = <KaminoVaultError as Into<u32>>::into(move _73) -> [return: bb27, unwind: bb622];
    }

    bb27: {
        StorageDead(_73);
        StorageLive(_74);
        StorageLive(_75);
        _1702 = const _;
        _75 = &(*_1702);
        _74 = <KaminoVaultError as ToString>::to_string(move _75) -> [return: bb28, unwind: bb622];
    }

    bb28: {
        StorageDead(_75);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        _79 = anchor_lang::error::Source { filename: const "programs\\kvault\\src\\operations\\vault_operations.rs", line: const 139_u32 };
        _78 = anchor_lang::error::ErrorOrigin::Source(move _79);
        StorageDead(_79);
        _77 = Option::<ErrorOrigin>::Some(move _78);
        StorageDead(_78);
        StorageLive(_80);
        _80 = Option::<ComparedValues>::None;
        _68 = anchor_lang::error::AnchorError { error_name: move _69, error_code_number: move _72, error_msg: move _74, error_origin: move _77, compared_values: move _80 };
        StorageDead(_80);
        StorageDead(_77);
        StorageDead(_74);
        StorageDead(_72);
        StorageDead(_69);
        _67 = <anchor_lang::error::Error as From<anchor_lang::error::AnchorError>>::from(move _68) -> [return: bb29, unwind: bb623];
    }

    bb29: {
        StorageDead(_68);
        _0 = std::result::Result::<effects::WithdrawEffects, anchor_lang::error::Error>::Err(move _67);
        StorageDead(_67);
        StorageDead(_62);
        StorageDead(_61);
        goto -> bb583;
    }

    bb30: {
        StorageDead(_85);
        StorageDead(_84);
        StorageDead(_83);
        StorageLive(_86);
        StorageLive(_87);
        _87 = (_27.0: u64);
        StorageLive(_88);
        _88 = _82;
        _86 = <u64 as Ord>::min(move _87, move _88) -> [return: bb31, unwind: bb623];
    }

    bb31: {
        StorageDead(_88);
        StorageDead(_87);
        StorageLive(_93);
        _94 = discriminant(_2);
        switchInt(move _94) -> [1: bb32, otherwise: bb62];
    }

    bb32: {
        StorageLive(_95);
        _95 = ((_2 as Some).0: &anchor_lang::prelude::Pubkey);
        StorageLive(_96);
        StorageLive(_97);
        _97 = &(_27.1: operations::vault_operations::common::Invested);
        StorageLive(_98);
        _98 = &(*_95);
        _96 = Invested::in_reserve(move _97, move _98) -> [return: bb33, unwind: bb623];
    }

    bb33: {
        StorageDead(_98);
        StorageDead(_97);
        StorageLive(_99);
        StorageLive(_100);
        _100 = ((*_96).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        StorageLive(_101);
        StorageLive(_102);
        StorageLive(_103);
        _103 = _82;
        StorageLive(_104);
        _104 = _86;
        _105 = CheckedSub(_103, _104);
        assert(!move (_105.1: bool), "attempt to compute `{} - {}`, which would overflow", move _103, move _104) -> [success: bb34, unwind: bb623];
    }

    bb34: {
        _102 = move (_105.0: u64);
        StorageDead(_104);
        StorageDead(_103);
        _101 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as From<u64>>::from(move _102) -> [return: bb35, unwind: bb623];
    }

    bb35: {
        StorageDead(_102);
        _99 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Ord>::min(move _100, move _101) -> [return: bb36, unwind: bb623];
    }

    bb36: {
        StorageDead(_101);
        StorageDead(_100);
        StorageLive(_106);
        StorageLive(_107);
        _107 = &_99;
        StorageLive(_108);
        StorageLive(_109);
        _1701 = const _;
        _109 = &(*_1701);
        _108 = &(*_109);
        _106 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialEq>::eq(move _107, move _108) -> [return: bb37, unwind: bb623];
    }

    bb37: {
        switchInt(move _106) -> [0: bb39, otherwise: bb38];
    }

    bb38: {
        StorageDead(_109);
        StorageDead(_108);
        StorageDead(_107);
        _93 = (const _, const 0_u64, const 0_u64, const 0_u64);
        goto -> bb61;
    }

    bb39: {
        StorageDead(_109);
        StorageDead(_108);
        StorageDead(_107);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        _114 = _3;
        _113 = Option::<&kamino_lending::Reserve>::unwrap(move _114) -> [return: bb40, unwind: bb623];
    }

    bb40: {
        _112 = &(*_113);
        StorageDead(_114);
        _111 = kamino_lending::Reserve::collateral_exchange_rate(move _112) -> [return: bb41, unwind: bb623];
    }

    bb41: {
        StorageDead(_112);
        StorageDead(_113);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        _118 = &_111;
        StorageLive(_119);
        StorageLive(_120);
        _120 = _99;
        _119 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::floor(move _120) -> [return: bb42, unwind: bb623];
    }

    bb42: {
        StorageDead(_120);
        _117 = CollateralExchangeRate::fraction_liquidity_to_collateral_ceil(move _118, move _119) -> [return: bb43, unwind: bb623];
    }

    bb43: {
        _116 = &_117;
        StorageDead(_119);
        StorageDead(_118);
        _115 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_ceil::<u64>(move _116) -> [return: bb44, unwind: bb623];
    }

    bb44: {
        StorageDead(_116);
        StorageDead(_117);
        StorageLive(_121);
        StorageLive(_122);
        _122 = _8;
        _121 = Option::<u64>::unwrap_or(move _122, const 0_u64) -> [return: bb45, unwind: bb623];
    }

    bb45: {
        StorageDead(_122);
        StorageLive(_123);
        StorageLive(_124);
        _124 = _115;
        StorageLive(_125);
        _125 = _121;
        _123 = <u64 as Ord>::min(move _124, move _125) -> [return: bb46, unwind: bb623];
    }

    bb46: {
        StorageDead(_125);
        StorageDead(_124);
        StorageLive(_126);
        StorageLive(_127);
        _127 = &_111;
        StorageLive(_128);
        StorageLive(_129);
        _129 = _123;
        _128 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::from_num::<u64>(move _129) -> [return: bb47, unwind: bb623];
    }

    bb47: {
        StorageDead(_129);
        _126 = CollateralExchangeRate::fraction_collateral_to_liquidity(move _127, move _128) -> [return: bb48, unwind: bb623];
    }

    bb48: {
        StorageDead(_128);
        StorageDead(_127);
        StorageLive(_130);
        StorageLive(_131);
        _131 = &_126;
        _130 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_floor::<u64>(move _131) -> [return: bb49, unwind: bb623];
    }

    bb49: {
        StorageDead(_131);
        StorageLive(_132);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        _136 = _126;
        _135 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::frac(move _136) -> [return: bb50, unwind: bb623];
    }

    bb50: {
        _134 = &_135;
        StorageDead(_136);
        StorageLive(_137);
        _1700 = const _;
        _137 = &(*_1700);
        _133 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::gt(move _134, move _137) -> [return: bb51, unwind: bb623];
    }

    bb51: {
        switchInt(move _133) -> [0: bb58, otherwise: bb52];
    }

    bb52: {
        StorageDead(_137);
        StorageDead(_135);
        StorageDead(_134);
        StorageLive(_139);
        StorageLive(_140);
        StorageLive(_141);
        StorageLive(_142);
        _142 = _126;
        _141 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::frac(move _142) -> [return: bb53, unwind: bb623];
    }

    bb53: {
        _140 = &_141;
        StorageDead(_142);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        _145 = _99;
        _144 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::frac(move _145) -> [return: bb54, unwind: bb623];
    }

    bb54: {
        _143 = &_144;
        StorageDead(_145);
        _139 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::gt(move _140, move _143) -> [return: bb55, unwind: bb623];
    }

    bb55: {
        switchInt(move _139) -> [0: bb57, otherwise: bb56];
    }

    bb56: {
        StorageDead(_144);
        StorageDead(_143);
        StorageDead(_141);
        StorageDead(_140);
        _132 = const 1_u64;
        goto -> bb60;
    }

    bb57: {
        StorageDead(_144);
        StorageDead(_143);
        StorageDead(_141);
        StorageDead(_140);
        goto -> bb59;
    }

    bb58: {
        StorageDead(_137);
        StorageDead(_135);
        StorageDead(_134);
        goto -> bb59;
    }

    bb59: {
        _132 = const 0_u64;
        goto -> bb60;
    }

    bb60: {
        StorageDead(_139);
        StorageDead(_133);
        StorageLive(_146);
        _146 = _99;
        StorageLive(_147);
        _147 = _130;
        StorageLive(_148);
        _148 = _123;
        StorageLive(_149);
        _149 = _132;
        _93 = (move _146, move _147, move _148, move _149);
        StorageDead(_149);
        StorageDead(_148);
        StorageDead(_147);
        StorageDead(_146);
        StorageDead(_132);
        StorageDead(_130);
        StorageDead(_126);
        StorageDead(_123);
        StorageDead(_121);
        StorageDead(_115);
        StorageDead(_111);
        goto -> bb61;
    }

    bb61: {
        StorageDead(_106);
        StorageDead(_99);
        StorageDead(_96);
        StorageDead(_95);
        goto -> bb63;
    }

    bb62: {
        _93 = (const _, const 0_u64, const 0_u64, const 0_u64);
        goto -> bb63;
    }

    bb63: {
        StorageLive(_89);
        _89 = (_93.0: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        StorageLive(_90);
        _90 = (_93.1: u64);
        StorageLive(_91);
        _91 = (_93.2: u64);
        StorageLive(_92);
        _92 = (_93.3: u64);
        StorageDead(_93);
        StorageLive(_150);
        StorageLive(_151);
        _151 = &_89;
        _150 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_floor::<u64>(move _151) -> [return: bb64, unwind: bb623];
    }

    bb64: {
        StorageDead(_151);
        StorageLive(_152);
        StorageLive(_153);
        StorageLive(_154);
        _154 = _86;
        _153 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as From<u64>>::from(move _154) -> [return: bb65, unwind: bb623];
    }

    bb65: {
        StorageDead(_154);
        StorageLive(_155);
        _155 = _89;
        _152 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Add>::add(move _153, move _155) -> [return: bb66, unwind: bb623];
    }

    bb66: {
        StorageDead(_155);
        StorageDead(_153);
        StorageLive(_156);
        StorageLive(_157);
        _157 = _150;
        StorageLive(_158);
        _158 = _92;
        _159 = CheckedSub(_157, _158);
        assert(!move (_159.1: bool), "attempt to compute `{} - {}`, which would overflow", move _157, move _158) -> [success: bb67, unwind: bb623];
    }

    bb67: {
        _156 = move (_159.0: u64);
        StorageDead(_158);
        StorageDead(_157);
        StorageLive(_160);
        StorageLive(_161);
        _161 = _152;
        StorageLive(_162);
        _162 = _81;
        StorageLive(_163);
        _163 = _50;
        StorageLive(_164);
        _164 = _7;
        _160 = calculate_shares_to_burn(move _161, move _162, move _163, move _164) -> [return: bb68, unwind: bb623];
    }

    bb68: {
        StorageDead(_164);
        StorageDead(_163);
        StorageDead(_162);
        StorageDead(_161);
        StorageLive(_165);
        StorageLive(_166);
        _166 = _90;
        StorageLive(_167);
        _167 = _156;
        _168 = CheckedSub(_166, _167);
        assert(!move (_168.1: bool), "attempt to compute `{} - {}`, which would overflow", move _166, move _167) -> [success: bb69, unwind: bb623];
    }

    bb69: {
        _165 = move (_168.0: u64);
        StorageDead(_167);
        StorageDead(_166);
        StorageLive(_169);
        StorageLive(_170);
        StorageLive(_171);
        _171 = _160;
        _170 = Eq(move _171, const 0_u64);
        switchInt(move _170) -> [0: bb75, otherwise: bb70];
    }

    bb70: {
        StorageDead(_171);
        StorageLive(_173);
        StorageLive(_174);
        StorageLive(_175);
        StorageLive(_176);
        _1631 = const _;
        _176 = &(*_1631);
        _175 = KaminoVaultError::name(move _176) -> [return: bb71, unwind: bb623];
    }

    bb71: {
        StorageDead(_176);
        StorageLive(_178);
        StorageLive(_179);
        _179 = KaminoVaultError::WithdrawResultsInZeroShares;
        _178 = <KaminoVaultError as Into<u32>>::into(move _179) -> [return: bb72, unwind: bb621];
    }

    bb72: {
        StorageDead(_179);
        StorageLive(_180);
        StorageLive(_181);
        _1630 = const _;
        _181 = &(*_1630);
        _180 = <KaminoVaultError as ToString>::to_string(move _181) -> [return: bb73, unwind: bb621];
    }

    bb73: {
        StorageDead(_181);
        StorageLive(_183);
        StorageLive(_184);
        StorageLive(_185);
        _185 = anchor_lang::error::Source { filename: const "programs\\kvault\\src\\operations\\vault_operations.rs", line: const 232_u32 };
        _184 = anchor_lang::error::ErrorOrigin::Source(move _185);
        StorageDead(_185);
        _183 = Option::<ErrorOrigin>::Some(move _184);
        StorageDead(_184);
        StorageLive(_186);
        _186 = Option::<ComparedValues>::None;
        _174 = anchor_lang::error::AnchorError { error_name: move _175, error_code_number: move _178, error_msg: move _180, error_origin: move _183, compared_values: move _186 };
        StorageDead(_186);
        StorageDead(_183);
        StorageDead(_180);
        StorageDead(_178);
        StorageDead(_175);
        _173 = <anchor_lang::error::Error as From<anchor_lang::error::AnchorError>>::from(move _174) -> [return: bb74, unwind: bb623];
    }

    bb74: {
        StorageDead(_174);
        _0 = std::result::Result::<effects::WithdrawEffects, anchor_lang::error::Error>::Err(move _173);
        StorageDead(_173);
        StorageDead(_170);
        StorageDead(_169);
        goto -> bb582;
    }

    bb75: {
        StorageDead(_171);
        _169 = const ();
        StorageDead(_170);
        StorageDead(_169);
        StorageLive(_187);
        StorageLive(_188);
        StorageLive(_189);
        StorageLive(_190);
        _190 = const "Available {}";
        _189 = &(*_190);
        _188 = core::str::<impl str>::len(move _189) -> [return: bb76, unwind: bb623];
    }

    bb76: {
        StorageDead(_189);
        _195 = Le(const 0_usize, _188);
        switchInt(move _195) -> [0: bb78, otherwise: bb77];
    }

    bb77: {
        _196 = Le(_188, const 50_usize);
        switchInt(move _196) -> [0: bb78, otherwise: bb83];
    }

    bb78: {
        _193 = Le(const 51_usize, _188);
        switchInt(move _193) -> [0: bb80, otherwise: bb79];
    }

    bb79: {
        _194 = Le(_188, const 100_usize);
        switchInt(move _194) -> [0: bb80, otherwise: bb96];
    }

    bb80: {
        _191 = Le(const 101_usize, _188);
        switchInt(move _191) -> [0: bb82, otherwise: bb81];
    }

    bb81: {
        _192 = Le(_188, const 200_usize);
        switchInt(move _192) -> [0: bb82, otherwise: bb109];
    }

    bb82: {
        StorageLive(_317);
        StorageLive(_318);
        _318 = ArrForm::<1200>::new() -> [return: bb122, unwind: bb623];
    }

    bb83: {
        StorageLive(_197);
        StorageLive(_198);
        _198 = ArrForm::<150>::new() -> [return: bb84, unwind: bb623];
    }

    bb84: {
        StorageLive(_199);
        StorageLive(_200);
        StorageLive(_201);
        _201 = &mut _198;
        StorageLive(_202);
        StorageLive(_203);
        StorageLive(_204);
        StorageLive(_205);
        _1699 = const _;
        _205 = &(*_1699);
        _204 = &(*_205);
        _203 = move _204 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_204);
        StorageLive(_207);
        StorageLive(_208);
        StorageLive(_209);
        StorageLive(_210);
        StorageLive(_211);
        StorageLive(_212);
        StorageLive(_213);
        _213 = &(_27.0: u64);
        _212 = &(*_213);
        _211 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _212) -> [return: bb85, unwind: bb623];
    }

    bb85: {
        StorageDead(_212);
        _210 = [move _211];
        StorageDead(_211);
        _209 = &_210;
        _208 = &(*_209);
        _207 = move _208 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_208);
        _202 = Arguments::<'_>::new_v1(move _203, move _207) -> [return: bb86, unwind: bb623];
    }

    bb86: {
        StorageDead(_207);
        StorageDead(_203);
        _200 = ArrForm::<150>::format(move _201, move _202) -> [return: bb87, unwind: bb623];
    }

    bb87: {
        StorageDead(_202);
        StorageDead(_201);
        StorageLive(_214);
        StorageLive(_215);
        _215 = &mut _198;
        _214 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _215 };
        StorageDead(_215);
        _199 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _200, move _214) -> [return: bb88, unwind: bb623];
    }

    bb88: {
        StorageDead(_214);
        StorageDead(_200);
        StorageDead(_213);
        StorageDead(_210);
        StorageDead(_209);
        StorageDead(_205);
        StorageDead(_199);
        _197 = move _198;
        StorageDead(_198);
        StorageLive(_216);
        StorageLive(_217);
        StorageLive(_218);
        StorageLive(_219);
        StorageLive(_220);
        StorageLive(_221);
        StorageLive(_222);
        StorageLive(_223);
        StorageLive(_224);
        StorageLive(_225);
        StorageLive(_226);
        _1698 = const _;
        _226 = &(*_1698);
        _225 = &(*_226);
        _224 = move _225 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_225);
        StorageLive(_228);
        StorageLive(_229);
        StorageLive(_230);
        StorageLive(_231);
        StorageLive(_232);
        StorageLive(_233);
        StorageLive(_234);
        StorageLive(_235);
        StorageLive(_236);
        _236 = &_197;
        _235 = ArrForm::<150>::as_str(move _236) -> [return: bb89, unwind: bb623];
    }

    bb89: {
        StorageDead(_236);
        _234 = &_235;
        _233 = &(*_234);
        _232 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _233) -> [return: bb90, unwind: bb623];
    }

    bb90: {
        StorageDead(_233);
        _231 = [move _232];
        StorageDead(_232);
        _230 = &_231;
        _229 = &(*_230);
        _228 = move _229 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_229);
        _223 = Arguments::<'_>::new_v1(move _224, move _228) -> [return: bb91, unwind: bb623];
    }

    bb91: {
        StorageDead(_228);
        StorageDead(_224);
        _222 = format(move _223) -> [return: bb92, unwind: bb623];
    }

    bb92: {
        StorageDead(_223);
        StorageDead(_235);
        StorageDead(_234);
        StorageDead(_231);
        StorageDead(_230);
        StorageDead(_226);
        _221 = move _222;
        StorageDead(_222);
        _220 = &_221;
        _219 = &(*_220);
        _218 = <String as Deref>::deref(move _219) -> [return: bb93, unwind: bb620];
    }

    bb93: {
        _217 = &(*_218);
        StorageDead(_219);
        _216 = solana_program::log::sol_log(move _217) -> [return: bb94, unwind: bb620];
    }

    bb94: {
        StorageDead(_217);
        drop(_221) -> [return: bb95, unwind: bb623];
    }

    bb95: {
        StorageDead(_221);
        StorageDead(_220);
        StorageDead(_218);
        StorageDead(_216);
        _187 = const ();
        StorageDead(_197);
        goto -> bb134;
    }

    bb96: {
        StorageLive(_237);
        StorageLive(_238);
        _238 = ArrForm::<300>::new() -> [return: bb97, unwind: bb623];
    }

    bb97: {
        StorageLive(_239);
        StorageLive(_240);
        StorageLive(_241);
        _241 = &mut _238;
        StorageLive(_242);
        StorageLive(_243);
        StorageLive(_244);
        StorageLive(_245);
        _1697 = const _;
        _245 = &(*_1697);
        _244 = &(*_245);
        _243 = move _244 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_244);
        StorageLive(_247);
        StorageLive(_248);
        StorageLive(_249);
        StorageLive(_250);
        StorageLive(_251);
        StorageLive(_252);
        StorageLive(_253);
        _253 = &(_27.0: u64);
        _252 = &(*_253);
        _251 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _252) -> [return: bb98, unwind: bb623];
    }

    bb98: {
        StorageDead(_252);
        _250 = [move _251];
        StorageDead(_251);
        _249 = &_250;
        _248 = &(*_249);
        _247 = move _248 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_248);
        _242 = Arguments::<'_>::new_v1(move _243, move _247) -> [return: bb99, unwind: bb623];
    }

    bb99: {
        StorageDead(_247);
        StorageDead(_243);
        _240 = ArrForm::<300>::format(move _241, move _242) -> [return: bb100, unwind: bb623];
    }

    bb100: {
        StorageDead(_242);
        StorageDead(_241);
        StorageLive(_254);
        StorageLive(_255);
        _255 = &mut _238;
        _254 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _255 };
        StorageDead(_255);
        _239 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _240, move _254) -> [return: bb101, unwind: bb623];
    }

    bb101: {
        StorageDead(_254);
        StorageDead(_240);
        StorageDead(_253);
        StorageDead(_250);
        StorageDead(_249);
        StorageDead(_245);
        StorageDead(_239);
        _237 = move _238;
        StorageDead(_238);
        StorageLive(_256);
        StorageLive(_257);
        StorageLive(_258);
        StorageLive(_259);
        StorageLive(_260);
        StorageLive(_261);
        StorageLive(_262);
        StorageLive(_263);
        StorageLive(_264);
        StorageLive(_265);
        StorageLive(_266);
        _1696 = const _;
        _266 = &(*_1696);
        _265 = &(*_266);
        _264 = move _265 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_265);
        StorageLive(_268);
        StorageLive(_269);
        StorageLive(_270);
        StorageLive(_271);
        StorageLive(_272);
        StorageLive(_273);
        StorageLive(_274);
        StorageLive(_275);
        StorageLive(_276);
        _276 = &_237;
        _275 = ArrForm::<300>::as_str(move _276) -> [return: bb102, unwind: bb623];
    }

    bb102: {
        StorageDead(_276);
        _274 = &_275;
        _273 = &(*_274);
        _272 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _273) -> [return: bb103, unwind: bb623];
    }

    bb103: {
        StorageDead(_273);
        _271 = [move _272];
        StorageDead(_272);
        _270 = &_271;
        _269 = &(*_270);
        _268 = move _269 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_269);
        _263 = Arguments::<'_>::new_v1(move _264, move _268) -> [return: bb104, unwind: bb623];
    }

    bb104: {
        StorageDead(_268);
        StorageDead(_264);
        _262 = format(move _263) -> [return: bb105, unwind: bb623];
    }

    bb105: {
        StorageDead(_263);
        StorageDead(_275);
        StorageDead(_274);
        StorageDead(_271);
        StorageDead(_270);
        StorageDead(_266);
        _261 = move _262;
        StorageDead(_262);
        _260 = &_261;
        _259 = &(*_260);
        _258 = <String as Deref>::deref(move _259) -> [return: bb106, unwind: bb619];
    }

    bb106: {
        _257 = &(*_258);
        StorageDead(_259);
        _256 = solana_program::log::sol_log(move _257) -> [return: bb107, unwind: bb619];
    }

    bb107: {
        StorageDead(_257);
        drop(_261) -> [return: bb108, unwind: bb623];
    }

    bb108: {
        StorageDead(_261);
        StorageDead(_260);
        StorageDead(_258);
        StorageDead(_256);
        _187 = const ();
        StorageDead(_237);
        goto -> bb134;
    }

    bb109: {
        StorageLive(_277);
        StorageLive(_278);
        _278 = ArrForm::<600>::new() -> [return: bb110, unwind: bb623];
    }

    bb110: {
        StorageLive(_279);
        StorageLive(_280);
        StorageLive(_281);
        _281 = &mut _278;
        StorageLive(_282);
        StorageLive(_283);
        StorageLive(_284);
        StorageLive(_285);
        _1695 = const _;
        _285 = &(*_1695);
        _284 = &(*_285);
        _283 = move _284 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_284);
        StorageLive(_287);
        StorageLive(_288);
        StorageLive(_289);
        StorageLive(_290);
        StorageLive(_291);
        StorageLive(_292);
        StorageLive(_293);
        _293 = &(_27.0: u64);
        _292 = &(*_293);
        _291 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _292) -> [return: bb111, unwind: bb623];
    }

    bb111: {
        StorageDead(_292);
        _290 = [move _291];
        StorageDead(_291);
        _289 = &_290;
        _288 = &(*_289);
        _287 = move _288 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_288);
        _282 = Arguments::<'_>::new_v1(move _283, move _287) -> [return: bb112, unwind: bb623];
    }

    bb112: {
        StorageDead(_287);
        StorageDead(_283);
        _280 = ArrForm::<600>::format(move _281, move _282) -> [return: bb113, unwind: bb623];
    }

    bb113: {
        StorageDead(_282);
        StorageDead(_281);
        StorageLive(_294);
        StorageLive(_295);
        _295 = &mut _278;
        _294 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _295 };
        StorageDead(_295);
        _279 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _280, move _294) -> [return: bb114, unwind: bb623];
    }

    bb114: {
        StorageDead(_294);
        StorageDead(_280);
        StorageDead(_293);
        StorageDead(_290);
        StorageDead(_289);
        StorageDead(_285);
        StorageDead(_279);
        _277 = move _278;
        StorageDead(_278);
        StorageLive(_296);
        StorageLive(_297);
        StorageLive(_298);
        StorageLive(_299);
        StorageLive(_300);
        StorageLive(_301);
        StorageLive(_302);
        StorageLive(_303);
        StorageLive(_304);
        StorageLive(_305);
        StorageLive(_306);
        _1694 = const _;
        _306 = &(*_1694);
        _305 = &(*_306);
        _304 = move _305 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_305);
        StorageLive(_308);
        StorageLive(_309);
        StorageLive(_310);
        StorageLive(_311);
        StorageLive(_312);
        StorageLive(_313);
        StorageLive(_314);
        StorageLive(_315);
        StorageLive(_316);
        _316 = &_277;
        _315 = ArrForm::<600>::as_str(move _316) -> [return: bb115, unwind: bb623];
    }

    bb115: {
        StorageDead(_316);
        _314 = &_315;
        _313 = &(*_314);
        _312 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _313) -> [return: bb116, unwind: bb623];
    }

    bb116: {
        StorageDead(_313);
        _311 = [move _312];
        StorageDead(_312);
        _310 = &_311;
        _309 = &(*_310);
        _308 = move _309 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_309);
        _303 = Arguments::<'_>::new_v1(move _304, move _308) -> [return: bb117, unwind: bb623];
    }

    bb117: {
        StorageDead(_308);
        StorageDead(_304);
        _302 = format(move _303) -> [return: bb118, unwind: bb623];
    }

    bb118: {
        StorageDead(_303);
        StorageDead(_315);
        StorageDead(_314);
        StorageDead(_311);
        StorageDead(_310);
        StorageDead(_306);
        _301 = move _302;
        StorageDead(_302);
        _300 = &_301;
        _299 = &(*_300);
        _298 = <String as Deref>::deref(move _299) -> [return: bb119, unwind: bb618];
    }

    bb119: {
        _297 = &(*_298);
        StorageDead(_299);
        _296 = solana_program::log::sol_log(move _297) -> [return: bb120, unwind: bb618];
    }

    bb120: {
        StorageDead(_297);
        drop(_301) -> [return: bb121, unwind: bb623];
    }

    bb121: {
        StorageDead(_301);
        StorageDead(_300);
        StorageDead(_298);
        StorageDead(_296);
        _187 = const ();
        StorageDead(_277);
        goto -> bb134;
    }

    bb122: {
        StorageLive(_319);
        StorageLive(_320);
        StorageLive(_321);
        _321 = &mut _318;
        StorageLive(_322);
        StorageLive(_323);
        StorageLive(_324);
        StorageLive(_325);
        _1693 = const _;
        _325 = &(*_1693);
        _324 = &(*_325);
        _323 = move _324 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_324);
        StorageLive(_327);
        StorageLive(_328);
        StorageLive(_329);
        StorageLive(_330);
        StorageLive(_331);
        StorageLive(_332);
        StorageLive(_333);
        _333 = &(_27.0: u64);
        _332 = &(*_333);
        _331 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _332) -> [return: bb123, unwind: bb623];
    }

    bb123: {
        StorageDead(_332);
        _330 = [move _331];
        StorageDead(_331);
        _329 = &_330;
        _328 = &(*_329);
        _327 = move _328 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_328);
        _322 = Arguments::<'_>::new_v1(move _323, move _327) -> [return: bb124, unwind: bb623];
    }

    bb124: {
        StorageDead(_327);
        StorageDead(_323);
        _320 = ArrForm::<1200>::format(move _321, move _322) -> [return: bb125, unwind: bb623];
    }

    bb125: {
        StorageDead(_322);
        StorageDead(_321);
        StorageLive(_334);
        StorageLive(_335);
        _335 = &mut _318;
        _334 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _335 };
        StorageDead(_335);
        _319 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _320, move _334) -> [return: bb126, unwind: bb623];
    }

    bb126: {
        StorageDead(_334);
        StorageDead(_320);
        StorageDead(_333);
        StorageDead(_330);
        StorageDead(_329);
        StorageDead(_325);
        StorageDead(_319);
        _317 = move _318;
        StorageDead(_318);
        StorageLive(_336);
        StorageLive(_337);
        StorageLive(_338);
        StorageLive(_339);
        StorageLive(_340);
        StorageLive(_341);
        StorageLive(_342);
        StorageLive(_343);
        StorageLive(_344);
        StorageLive(_345);
        StorageLive(_346);
        _1692 = const _;
        _346 = &(*_1692);
        _345 = &(*_346);
        _344 = move _345 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_345);
        StorageLive(_348);
        StorageLive(_349);
        StorageLive(_350);
        StorageLive(_351);
        StorageLive(_352);
        StorageLive(_353);
        StorageLive(_354);
        StorageLive(_355);
        StorageLive(_356);
        _356 = &_317;
        _355 = ArrForm::<1200>::as_str(move _356) -> [return: bb127, unwind: bb623];
    }

    bb127: {
        StorageDead(_356);
        _354 = &_355;
        _353 = &(*_354);
        _352 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _353) -> [return: bb128, unwind: bb623];
    }

    bb128: {
        StorageDead(_353);
        _351 = [move _352];
        StorageDead(_352);
        _350 = &_351;
        _349 = &(*_350);
        _348 = move _349 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_349);
        _343 = Arguments::<'_>::new_v1(move _344, move _348) -> [return: bb129, unwind: bb623];
    }

    bb129: {
        StorageDead(_348);
        StorageDead(_344);
        _342 = format(move _343) -> [return: bb130, unwind: bb623];
    }

    bb130: {
        StorageDead(_343);
        StorageDead(_355);
        StorageDead(_354);
        StorageDead(_351);
        StorageDead(_350);
        StorageDead(_346);
        _341 = move _342;
        StorageDead(_342);
        _340 = &_341;
        _339 = &(*_340);
        _338 = <String as Deref>::deref(move _339) -> [return: bb131, unwind: bb617];
    }

    bb131: {
        _337 = &(*_338);
        StorageDead(_339);
        _336 = solana_program::log::sol_log(move _337) -> [return: bb132, unwind: bb617];
    }

    bb132: {
        StorageDead(_337);
        drop(_341) -> [return: bb133, unwind: bb623];
    }

    bb133: {
        StorageDead(_341);
        StorageDead(_340);
        StorageDead(_338);
        StorageDead(_336);
        _187 = const ();
        StorageDead(_317);
        goto -> bb134;
    }

    bb134: {
        StorageDead(_190);
        StorageDead(_188);
        StorageDead(_187);
        StorageLive(_357);
        StorageLive(_358);
        StorageLive(_359);
        StorageLive(_360);
        _360 = const "Total invested {:?}";
        _359 = &(*_360);
        _358 = core::str::<impl str>::len(move _359) -> [return: bb135, unwind: bb623];
    }

    bb135: {
        StorageDead(_359);
        _365 = Le(const 0_usize, _358);
        switchInt(move _365) -> [0: bb137, otherwise: bb136];
    }

    bb136: {
        _366 = Le(_358, const 50_usize);
        switchInt(move _366) -> [0: bb137, otherwise: bb142];
    }

    bb137: {
        _363 = Le(const 51_usize, _358);
        switchInt(move _363) -> [0: bb139, otherwise: bb138];
    }

    bb138: {
        _364 = Le(_358, const 100_usize);
        switchInt(move _364) -> [0: bb139, otherwise: bb156];
    }

    bb139: {
        _361 = Le(const 101_usize, _358);
        switchInt(move _361) -> [0: bb141, otherwise: bb140];
    }

    bb140: {
        _362 = Le(_358, const 200_usize);
        switchInt(move _362) -> [0: bb141, otherwise: bb170];
    }

    bb141: {
        StorageLive(_493);
        StorageLive(_494);
        _494 = ArrForm::<1200>::new() -> [return: bb184, unwind: bb623];
    }

    bb142: {
        StorageLive(_367);
        StorageLive(_368);
        _368 = ArrForm::<150>::new() -> [return: bb143, unwind: bb623];
    }

    bb143: {
        StorageLive(_369);
        StorageLive(_370);
        StorageLive(_371);
        _371 = &mut _368;
        StorageLive(_372);
        StorageLive(_373);
        StorageLive(_374);
        StorageLive(_375);
        _1691 = const _;
        _375 = &(*_1691);
        _374 = &(*_375);
        _373 = move _374 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_374);
        StorageLive(_377);
        StorageLive(_378);
        StorageLive(_379);
        StorageLive(_380);
        StorageLive(_381);
        StorageLive(_382);
        StorageLive(_383);
        StorageLive(_384);
        StorageLive(_385);
        _385 = &((_27.1: operations::vault_operations::common::Invested).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _384 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _385) -> [return: bb144, unwind: bb623];
    }

    bb144: {
        StorageDead(_385);
        _383 = &_384;
        _382 = &(*_383);
        _381 = core::fmt::rt::Argument::<'_>::new_debug::<FractionDisplay<'_>>(move _382) -> [return: bb145, unwind: bb623];
    }

    bb145: {
        StorageDead(_382);
        _380 = [move _381];
        StorageDead(_381);
        _379 = &_380;
        _378 = &(*_379);
        _377 = move _378 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_378);
        _372 = Arguments::<'_>::new_v1(move _373, move _377) -> [return: bb146, unwind: bb623];
    }

    bb146: {
        StorageDead(_377);
        StorageDead(_373);
        _370 = ArrForm::<150>::format(move _371, move _372) -> [return: bb147, unwind: bb623];
    }

    bb147: {
        StorageDead(_372);
        StorageDead(_371);
        StorageLive(_386);
        StorageLive(_387);
        _387 = &mut _368;
        _386 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _387 };
        StorageDead(_387);
        _369 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _370, move _386) -> [return: bb148, unwind: bb623];
    }

    bb148: {
        StorageDead(_386);
        StorageDead(_370);
        StorageDead(_384);
        StorageDead(_383);
        StorageDead(_380);
        StorageDead(_379);
        StorageDead(_375);
        StorageDead(_369);
        _367 = move _368;
        StorageDead(_368);
        StorageLive(_388);
        StorageLive(_389);
        StorageLive(_390);
        StorageLive(_391);
        StorageLive(_392);
        StorageLive(_393);
        StorageLive(_394);
        StorageLive(_395);
        StorageLive(_396);
        StorageLive(_397);
        StorageLive(_398);
        _1690 = const _;
        _398 = &(*_1690);
        _397 = &(*_398);
        _396 = move _397 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_397);
        StorageLive(_400);
        StorageLive(_401);
        StorageLive(_402);
        StorageLive(_403);
        StorageLive(_404);
        StorageLive(_405);
        StorageLive(_406);
        StorageLive(_407);
        StorageLive(_408);
        _408 = &_367;
        _407 = ArrForm::<150>::as_str(move _408) -> [return: bb149, unwind: bb623];
    }

    bb149: {
        StorageDead(_408);
        _406 = &_407;
        _405 = &(*_406);
        _404 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _405) -> [return: bb150, unwind: bb623];
    }

    bb150: {
        StorageDead(_405);
        _403 = [move _404];
        StorageDead(_404);
        _402 = &_403;
        _401 = &(*_402);
        _400 = move _401 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_401);
        _395 = Arguments::<'_>::new_v1(move _396, move _400) -> [return: bb151, unwind: bb623];
    }

    bb151: {
        StorageDead(_400);
        StorageDead(_396);
        _394 = format(move _395) -> [return: bb152, unwind: bb623];
    }

    bb152: {
        StorageDead(_395);
        StorageDead(_407);
        StorageDead(_406);
        StorageDead(_403);
        StorageDead(_402);
        StorageDead(_398);
        _393 = move _394;
        StorageDead(_394);
        _392 = &_393;
        _391 = &(*_392);
        _390 = <String as Deref>::deref(move _391) -> [return: bb153, unwind: bb616];
    }

    bb153: {
        _389 = &(*_390);
        StorageDead(_391);
        _388 = solana_program::log::sol_log(move _389) -> [return: bb154, unwind: bb616];
    }

    bb154: {
        StorageDead(_389);
        drop(_393) -> [return: bb155, unwind: bb623];
    }

    bb155: {
        StorageDead(_393);
        StorageDead(_392);
        StorageDead(_390);
        StorageDead(_388);
        _357 = const ();
        StorageDead(_367);
        goto -> bb197;
    }

    bb156: {
        StorageLive(_409);
        StorageLive(_410);
        _410 = ArrForm::<300>::new() -> [return: bb157, unwind: bb623];
    }

    bb157: {
        StorageLive(_411);
        StorageLive(_412);
        StorageLive(_413);
        _413 = &mut _410;
        StorageLive(_414);
        StorageLive(_415);
        StorageLive(_416);
        StorageLive(_417);
        _1689 = const _;
        _417 = &(*_1689);
        _416 = &(*_417);
        _415 = move _416 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_416);
        StorageLive(_419);
        StorageLive(_420);
        StorageLive(_421);
        StorageLive(_422);
        StorageLive(_423);
        StorageLive(_424);
        StorageLive(_425);
        StorageLive(_426);
        StorageLive(_427);
        _427 = &((_27.1: operations::vault_operations::common::Invested).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _426 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _427) -> [return: bb158, unwind: bb623];
    }

    bb158: {
        StorageDead(_427);
        _425 = &_426;
        _424 = &(*_425);
        _423 = core::fmt::rt::Argument::<'_>::new_debug::<FractionDisplay<'_>>(move _424) -> [return: bb159, unwind: bb623];
    }

    bb159: {
        StorageDead(_424);
        _422 = [move _423];
        StorageDead(_423);
        _421 = &_422;
        _420 = &(*_421);
        _419 = move _420 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_420);
        _414 = Arguments::<'_>::new_v1(move _415, move _419) -> [return: bb160, unwind: bb623];
    }

    bb160: {
        StorageDead(_419);
        StorageDead(_415);
        _412 = ArrForm::<300>::format(move _413, move _414) -> [return: bb161, unwind: bb623];
    }

    bb161: {
        StorageDead(_414);
        StorageDead(_413);
        StorageLive(_428);
        StorageLive(_429);
        _429 = &mut _410;
        _428 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _429 };
        StorageDead(_429);
        _411 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _412, move _428) -> [return: bb162, unwind: bb623];
    }

    bb162: {
        StorageDead(_428);
        StorageDead(_412);
        StorageDead(_426);
        StorageDead(_425);
        StorageDead(_422);
        StorageDead(_421);
        StorageDead(_417);
        StorageDead(_411);
        _409 = move _410;
        StorageDead(_410);
        StorageLive(_430);
        StorageLive(_431);
        StorageLive(_432);
        StorageLive(_433);
        StorageLive(_434);
        StorageLive(_435);
        StorageLive(_436);
        StorageLive(_437);
        StorageLive(_438);
        StorageLive(_439);
        StorageLive(_440);
        _1688 = const _;
        _440 = &(*_1688);
        _439 = &(*_440);
        _438 = move _439 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_439);
        StorageLive(_442);
        StorageLive(_443);
        StorageLive(_444);
        StorageLive(_445);
        StorageLive(_446);
        StorageLive(_447);
        StorageLive(_448);
        StorageLive(_449);
        StorageLive(_450);
        _450 = &_409;
        _449 = ArrForm::<300>::as_str(move _450) -> [return: bb163, unwind: bb623];
    }

    bb163: {
        StorageDead(_450);
        _448 = &_449;
        _447 = &(*_448);
        _446 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _447) -> [return: bb164, unwind: bb623];
    }

    bb164: {
        StorageDead(_447);
        _445 = [move _446];
        StorageDead(_446);
        _444 = &_445;
        _443 = &(*_444);
        _442 = move _443 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_443);
        _437 = Arguments::<'_>::new_v1(move _438, move _442) -> [return: bb165, unwind: bb623];
    }

    bb165: {
        StorageDead(_442);
        StorageDead(_438);
        _436 = format(move _437) -> [return: bb166, unwind: bb623];
    }

    bb166: {
        StorageDead(_437);
        StorageDead(_449);
        StorageDead(_448);
        StorageDead(_445);
        StorageDead(_444);
        StorageDead(_440);
        _435 = move _436;
        StorageDead(_436);
        _434 = &_435;
        _433 = &(*_434);
        _432 = <String as Deref>::deref(move _433) -> [return: bb167, unwind: bb615];
    }

    bb167: {
        _431 = &(*_432);
        StorageDead(_433);
        _430 = solana_program::log::sol_log(move _431) -> [return: bb168, unwind: bb615];
    }

    bb168: {
        StorageDead(_431);
        drop(_435) -> [return: bb169, unwind: bb623];
    }

    bb169: {
        StorageDead(_435);
        StorageDead(_434);
        StorageDead(_432);
        StorageDead(_430);
        _357 = const ();
        StorageDead(_409);
        goto -> bb197;
    }

    bb170: {
        StorageLive(_451);
        StorageLive(_452);
        _452 = ArrForm::<600>::new() -> [return: bb171, unwind: bb623];
    }

    bb171: {
        StorageLive(_453);
        StorageLive(_454);
        StorageLive(_455);
        _455 = &mut _452;
        StorageLive(_456);
        StorageLive(_457);
        StorageLive(_458);
        StorageLive(_459);
        _1687 = const _;
        _459 = &(*_1687);
        _458 = &(*_459);
        _457 = move _458 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_458);
        StorageLive(_461);
        StorageLive(_462);
        StorageLive(_463);
        StorageLive(_464);
        StorageLive(_465);
        StorageLive(_466);
        StorageLive(_467);
        StorageLive(_468);
        StorageLive(_469);
        _469 = &((_27.1: operations::vault_operations::common::Invested).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _468 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _469) -> [return: bb172, unwind: bb623];
    }

    bb172: {
        StorageDead(_469);
        _467 = &_468;
        _466 = &(*_467);
        _465 = core::fmt::rt::Argument::<'_>::new_debug::<FractionDisplay<'_>>(move _466) -> [return: bb173, unwind: bb623];
    }

    bb173: {
        StorageDead(_466);
        _464 = [move _465];
        StorageDead(_465);
        _463 = &_464;
        _462 = &(*_463);
        _461 = move _462 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_462);
        _456 = Arguments::<'_>::new_v1(move _457, move _461) -> [return: bb174, unwind: bb623];
    }

    bb174: {
        StorageDead(_461);
        StorageDead(_457);
        _454 = ArrForm::<600>::format(move _455, move _456) -> [return: bb175, unwind: bb623];
    }

    bb175: {
        StorageDead(_456);
        StorageDead(_455);
        StorageLive(_470);
        StorageLive(_471);
        _471 = &mut _452;
        _470 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _471 };
        StorageDead(_471);
        _453 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _454, move _470) -> [return: bb176, unwind: bb623];
    }

    bb176: {
        StorageDead(_470);
        StorageDead(_454);
        StorageDead(_468);
        StorageDead(_467);
        StorageDead(_464);
        StorageDead(_463);
        StorageDead(_459);
        StorageDead(_453);
        _451 = move _452;
        StorageDead(_452);
        StorageLive(_472);
        StorageLive(_473);
        StorageLive(_474);
        StorageLive(_475);
        StorageLive(_476);
        StorageLive(_477);
        StorageLive(_478);
        StorageLive(_479);
        StorageLive(_480);
        StorageLive(_481);
        StorageLive(_482);
        _1686 = const _;
        _482 = &(*_1686);
        _481 = &(*_482);
        _480 = move _481 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_481);
        StorageLive(_484);
        StorageLive(_485);
        StorageLive(_486);
        StorageLive(_487);
        StorageLive(_488);
        StorageLive(_489);
        StorageLive(_490);
        StorageLive(_491);
        StorageLive(_492);
        _492 = &_451;
        _491 = ArrForm::<600>::as_str(move _492) -> [return: bb177, unwind: bb623];
    }

    bb177: {
        StorageDead(_492);
        _490 = &_491;
        _489 = &(*_490);
        _488 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _489) -> [return: bb178, unwind: bb623];
    }

    bb178: {
        StorageDead(_489);
        _487 = [move _488];
        StorageDead(_488);
        _486 = &_487;
        _485 = &(*_486);
        _484 = move _485 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_485);
        _479 = Arguments::<'_>::new_v1(move _480, move _484) -> [return: bb179, unwind: bb623];
    }

    bb179: {
        StorageDead(_484);
        StorageDead(_480);
        _478 = format(move _479) -> [return: bb180, unwind: bb623];
    }

    bb180: {
        StorageDead(_479);
        StorageDead(_491);
        StorageDead(_490);
        StorageDead(_487);
        StorageDead(_486);
        StorageDead(_482);
        _477 = move _478;
        StorageDead(_478);
        _476 = &_477;
        _475 = &(*_476);
        _474 = <String as Deref>::deref(move _475) -> [return: bb181, unwind: bb614];
    }

    bb181: {
        _473 = &(*_474);
        StorageDead(_475);
        _472 = solana_program::log::sol_log(move _473) -> [return: bb182, unwind: bb614];
    }

    bb182: {
        StorageDead(_473);
        drop(_477) -> [return: bb183, unwind: bb623];
    }

    bb183: {
        StorageDead(_477);
        StorageDead(_476);
        StorageDead(_474);
        StorageDead(_472);
        _357 = const ();
        StorageDead(_451);
        goto -> bb197;
    }

    bb184: {
        StorageLive(_495);
        StorageLive(_496);
        StorageLive(_497);
        _497 = &mut _494;
        StorageLive(_498);
        StorageLive(_499);
        StorageLive(_500);
        StorageLive(_501);
        _1685 = const _;
        _501 = &(*_1685);
        _500 = &(*_501);
        _499 = move _500 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_500);
        StorageLive(_503);
        StorageLive(_504);
        StorageLive(_505);
        StorageLive(_506);
        StorageLive(_507);
        StorageLive(_508);
        StorageLive(_509);
        StorageLive(_510);
        StorageLive(_511);
        _511 = &((_27.1: operations::vault_operations::common::Invested).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _510 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _511) -> [return: bb185, unwind: bb623];
    }

    bb185: {
        StorageDead(_511);
        _509 = &_510;
        _508 = &(*_509);
        _507 = core::fmt::rt::Argument::<'_>::new_debug::<FractionDisplay<'_>>(move _508) -> [return: bb186, unwind: bb623];
    }

    bb186: {
        StorageDead(_508);
        _506 = [move _507];
        StorageDead(_507);
        _505 = &_506;
        _504 = &(*_505);
        _503 = move _504 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_504);
        _498 = Arguments::<'_>::new_v1(move _499, move _503) -> [return: bb187, unwind: bb623];
    }

    bb187: {
        StorageDead(_503);
        StorageDead(_499);
        _496 = ArrForm::<1200>::format(move _497, move _498) -> [return: bb188, unwind: bb623];
    }

    bb188: {
        StorageDead(_498);
        StorageDead(_497);
        StorageLive(_512);
        StorageLive(_513);
        _513 = &mut _494;
        _512 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _513 };
        StorageDead(_513);
        _495 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _496, move _512) -> [return: bb189, unwind: bb623];
    }

    bb189: {
        StorageDead(_512);
        StorageDead(_496);
        StorageDead(_510);
        StorageDead(_509);
        StorageDead(_506);
        StorageDead(_505);
        StorageDead(_501);
        StorageDead(_495);
        _493 = move _494;
        StorageDead(_494);
        StorageLive(_514);
        StorageLive(_515);
        StorageLive(_516);
        StorageLive(_517);
        StorageLive(_518);
        StorageLive(_519);
        StorageLive(_520);
        StorageLive(_521);
        StorageLive(_522);
        StorageLive(_523);
        StorageLive(_524);
        _1684 = const _;
        _524 = &(*_1684);
        _523 = &(*_524);
        _522 = move _523 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_523);
        StorageLive(_526);
        StorageLive(_527);
        StorageLive(_528);
        StorageLive(_529);
        StorageLive(_530);
        StorageLive(_531);
        StorageLive(_532);
        StorageLive(_533);
        StorageLive(_534);
        _534 = &_493;
        _533 = ArrForm::<1200>::as_str(move _534) -> [return: bb190, unwind: bb623];
    }

    bb190: {
        StorageDead(_534);
        _532 = &_533;
        _531 = &(*_532);
        _530 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _531) -> [return: bb191, unwind: bb623];
    }

    bb191: {
        StorageDead(_531);
        _529 = [move _530];
        StorageDead(_530);
        _528 = &_529;
        _527 = &(*_528);
        _526 = move _527 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_527);
        _521 = Arguments::<'_>::new_v1(move _522, move _526) -> [return: bb192, unwind: bb623];
    }

    bb192: {
        StorageDead(_526);
        StorageDead(_522);
        _520 = format(move _521) -> [return: bb193, unwind: bb623];
    }

    bb193: {
        StorageDead(_521);
        StorageDead(_533);
        StorageDead(_532);
        StorageDead(_529);
        StorageDead(_528);
        StorageDead(_524);
        _519 = move _520;
        StorageDead(_520);
        _518 = &_519;
        _517 = &(*_518);
        _516 = <String as Deref>::deref(move _517) -> [return: bb194, unwind: bb613];
    }

    bb194: {
        _515 = &(*_516);
        StorageDead(_517);
        _514 = solana_program::log::sol_log(move _515) -> [return: bb195, unwind: bb613];
    }

    bb195: {
        StorageDead(_515);
        drop(_519) -> [return: bb196, unwind: bb623];
    }

    bb196: {
        StorageDead(_519);
        StorageDead(_518);
        StorageDead(_516);
        StorageDead(_514);
        _357 = const ();
        StorageDead(_493);
        goto -> bb197;
    }

    bb197: {
        StorageDead(_360);
        StorageDead(_358);
        StorageDead(_357);
        StorageLive(_535);
        StorageLive(_536);
        StorageLive(_537);
        StorageLive(_538);
        _538 = const "Available to send to user {}";
        _537 = &(*_538);
        _536 = core::str::<impl str>::len(move _537) -> [return: bb198, unwind: bb623];
    }

    bb198: {
        StorageDead(_537);
        _543 = Le(const 0_usize, _536);
        switchInt(move _543) -> [0: bb200, otherwise: bb199];
    }

    bb199: {
        _544 = Le(_536, const 50_usize);
        switchInt(move _544) -> [0: bb200, otherwise: bb205];
    }

    bb200: {
        _541 = Le(const 51_usize, _536);
        switchInt(move _541) -> [0: bb202, otherwise: bb201];
    }

    bb201: {
        _542 = Le(_536, const 100_usize);
        switchInt(move _542) -> [0: bb202, otherwise: bb218];
    }

    bb202: {
        _539 = Le(const 101_usize, _536);
        switchInt(move _539) -> [0: bb204, otherwise: bb203];
    }

    bb203: {
        _540 = Le(_536, const 200_usize);
        switchInt(move _540) -> [0: bb204, otherwise: bb231];
    }

    bb204: {
        StorageLive(_665);
        StorageLive(_666);
        _666 = ArrForm::<1200>::new() -> [return: bb244, unwind: bb623];
    }

    bb205: {
        StorageLive(_545);
        StorageLive(_546);
        _546 = ArrForm::<150>::new() -> [return: bb206, unwind: bb623];
    }

    bb206: {
        StorageLive(_547);
        StorageLive(_548);
        StorageLive(_549);
        _549 = &mut _546;
        StorageLive(_550);
        StorageLive(_551);
        StorageLive(_552);
        StorageLive(_553);
        _1683 = const _;
        _553 = &(*_1683);
        _552 = &(*_553);
        _551 = move _552 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_552);
        StorageLive(_555);
        StorageLive(_556);
        StorageLive(_557);
        StorageLive(_558);
        StorageLive(_559);
        StorageLive(_560);
        StorageLive(_561);
        _561 = &_86;
        _560 = &(*_561);
        _559 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _560) -> [return: bb207, unwind: bb623];
    }

    bb207: {
        StorageDead(_560);
        _558 = [move _559];
        StorageDead(_559);
        _557 = &_558;
        _556 = &(*_557);
        _555 = move _556 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_556);
        _550 = Arguments::<'_>::new_v1(move _551, move _555) -> [return: bb208, unwind: bb623];
    }

    bb208: {
        StorageDead(_555);
        StorageDead(_551);
        _548 = ArrForm::<150>::format(move _549, move _550) -> [return: bb209, unwind: bb623];
    }

    bb209: {
        StorageDead(_550);
        StorageDead(_549);
        StorageLive(_562);
        StorageLive(_563);
        _563 = &mut _546;
        _562 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _563 };
        StorageDead(_563);
        _547 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _548, move _562) -> [return: bb210, unwind: bb623];
    }

    bb210: {
        StorageDead(_562);
        StorageDead(_548);
        StorageDead(_561);
        StorageDead(_558);
        StorageDead(_557);
        StorageDead(_553);
        StorageDead(_547);
        _545 = move _546;
        StorageDead(_546);
        StorageLive(_564);
        StorageLive(_565);
        StorageLive(_566);
        StorageLive(_567);
        StorageLive(_568);
        StorageLive(_569);
        StorageLive(_570);
        StorageLive(_571);
        StorageLive(_572);
        StorageLive(_573);
        StorageLive(_574);
        _1682 = const _;
        _574 = &(*_1682);
        _573 = &(*_574);
        _572 = move _573 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_573);
        StorageLive(_576);
        StorageLive(_577);
        StorageLive(_578);
        StorageLive(_579);
        StorageLive(_580);
        StorageLive(_581);
        StorageLive(_582);
        StorageLive(_583);
        StorageLive(_584);
        _584 = &_545;
        _583 = ArrForm::<150>::as_str(move _584) -> [return: bb211, unwind: bb623];
    }

    bb211: {
        StorageDead(_584);
        _582 = &_583;
        _581 = &(*_582);
        _580 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _581) -> [return: bb212, unwind: bb623];
    }

    bb212: {
        StorageDead(_581);
        _579 = [move _580];
        StorageDead(_580);
        _578 = &_579;
        _577 = &(*_578);
        _576 = move _577 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_577);
        _571 = Arguments::<'_>::new_v1(move _572, move _576) -> [return: bb213, unwind: bb623];
    }

    bb213: {
        StorageDead(_576);
        StorageDead(_572);
        _570 = format(move _571) -> [return: bb214, unwind: bb623];
    }

    bb214: {
        StorageDead(_571);
        StorageDead(_583);
        StorageDead(_582);
        StorageDead(_579);
        StorageDead(_578);
        StorageDead(_574);
        _569 = move _570;
        StorageDead(_570);
        _568 = &_569;
        _567 = &(*_568);
        _566 = <String as Deref>::deref(move _567) -> [return: bb215, unwind: bb612];
    }

    bb215: {
        _565 = &(*_566);
        StorageDead(_567);
        _564 = solana_program::log::sol_log(move _565) -> [return: bb216, unwind: bb612];
    }

    bb216: {
        StorageDead(_565);
        drop(_569) -> [return: bb217, unwind: bb623];
    }

    bb217: {
        StorageDead(_569);
        StorageDead(_568);
        StorageDead(_566);
        StorageDead(_564);
        _535 = const ();
        StorageDead(_545);
        goto -> bb256;
    }

    bb218: {
        StorageLive(_585);
        StorageLive(_586);
        _586 = ArrForm::<300>::new() -> [return: bb219, unwind: bb623];
    }

    bb219: {
        StorageLive(_587);
        StorageLive(_588);
        StorageLive(_589);
        _589 = &mut _586;
        StorageLive(_590);
        StorageLive(_591);
        StorageLive(_592);
        StorageLive(_593);
        _1681 = const _;
        _593 = &(*_1681);
        _592 = &(*_593);
        _591 = move _592 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_592);
        StorageLive(_595);
        StorageLive(_596);
        StorageLive(_597);
        StorageLive(_598);
        StorageLive(_599);
        StorageLive(_600);
        StorageLive(_601);
        _601 = &_86;
        _600 = &(*_601);
        _599 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _600) -> [return: bb220, unwind: bb623];
    }

    bb220: {
        StorageDead(_600);
        _598 = [move _599];
        StorageDead(_599);
        _597 = &_598;
        _596 = &(*_597);
        _595 = move _596 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_596);
        _590 = Arguments::<'_>::new_v1(move _591, move _595) -> [return: bb221, unwind: bb623];
    }

    bb221: {
        StorageDead(_595);
        StorageDead(_591);
        _588 = ArrForm::<300>::format(move _589, move _590) -> [return: bb222, unwind: bb623];
    }

    bb222: {
        StorageDead(_590);
        StorageDead(_589);
        StorageLive(_602);
        StorageLive(_603);
        _603 = &mut _586;
        _602 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _603 };
        StorageDead(_603);
        _587 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _588, move _602) -> [return: bb223, unwind: bb623];
    }

    bb223: {
        StorageDead(_602);
        StorageDead(_588);
        StorageDead(_601);
        StorageDead(_598);
        StorageDead(_597);
        StorageDead(_593);
        StorageDead(_587);
        _585 = move _586;
        StorageDead(_586);
        StorageLive(_604);
        StorageLive(_605);
        StorageLive(_606);
        StorageLive(_607);
        StorageLive(_608);
        StorageLive(_609);
        StorageLive(_610);
        StorageLive(_611);
        StorageLive(_612);
        StorageLive(_613);
        StorageLive(_614);
        _1680 = const _;
        _614 = &(*_1680);
        _613 = &(*_614);
        _612 = move _613 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_613);
        StorageLive(_616);
        StorageLive(_617);
        StorageLive(_618);
        StorageLive(_619);
        StorageLive(_620);
        StorageLive(_621);
        StorageLive(_622);
        StorageLive(_623);
        StorageLive(_624);
        _624 = &_585;
        _623 = ArrForm::<300>::as_str(move _624) -> [return: bb224, unwind: bb623];
    }

    bb224: {
        StorageDead(_624);
        _622 = &_623;
        _621 = &(*_622);
        _620 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _621) -> [return: bb225, unwind: bb623];
    }

    bb225: {
        StorageDead(_621);
        _619 = [move _620];
        StorageDead(_620);
        _618 = &_619;
        _617 = &(*_618);
        _616 = move _617 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_617);
        _611 = Arguments::<'_>::new_v1(move _612, move _616) -> [return: bb226, unwind: bb623];
    }

    bb226: {
        StorageDead(_616);
        StorageDead(_612);
        _610 = format(move _611) -> [return: bb227, unwind: bb623];
    }

    bb227: {
        StorageDead(_611);
        StorageDead(_623);
        StorageDead(_622);
        StorageDead(_619);
        StorageDead(_618);
        StorageDead(_614);
        _609 = move _610;
        StorageDead(_610);
        _608 = &_609;
        _607 = &(*_608);
        _606 = <String as Deref>::deref(move _607) -> [return: bb228, unwind: bb611];
    }

    bb228: {
        _605 = &(*_606);
        StorageDead(_607);
        _604 = solana_program::log::sol_log(move _605) -> [return: bb229, unwind: bb611];
    }

    bb229: {
        StorageDead(_605);
        drop(_609) -> [return: bb230, unwind: bb623];
    }

    bb230: {
        StorageDead(_609);
        StorageDead(_608);
        StorageDead(_606);
        StorageDead(_604);
        _535 = const ();
        StorageDead(_585);
        goto -> bb256;
    }

    bb231: {
        StorageLive(_625);
        StorageLive(_626);
        _626 = ArrForm::<600>::new() -> [return: bb232, unwind: bb623];
    }

    bb232: {
        StorageLive(_627);
        StorageLive(_628);
        StorageLive(_629);
        _629 = &mut _626;
        StorageLive(_630);
        StorageLive(_631);
        StorageLive(_632);
        StorageLive(_633);
        _1679 = const _;
        _633 = &(*_1679);
        _632 = &(*_633);
        _631 = move _632 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_632);
        StorageLive(_635);
        StorageLive(_636);
        StorageLive(_637);
        StorageLive(_638);
        StorageLive(_639);
        StorageLive(_640);
        StorageLive(_641);
        _641 = &_86;
        _640 = &(*_641);
        _639 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _640) -> [return: bb233, unwind: bb623];
    }

    bb233: {
        StorageDead(_640);
        _638 = [move _639];
        StorageDead(_639);
        _637 = &_638;
        _636 = &(*_637);
        _635 = move _636 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_636);
        _630 = Arguments::<'_>::new_v1(move _631, move _635) -> [return: bb234, unwind: bb623];
    }

    bb234: {
        StorageDead(_635);
        StorageDead(_631);
        _628 = ArrForm::<600>::format(move _629, move _630) -> [return: bb235, unwind: bb623];
    }

    bb235: {
        StorageDead(_630);
        StorageDead(_629);
        StorageLive(_642);
        StorageLive(_643);
        _643 = &mut _626;
        _642 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _643 };
        StorageDead(_643);
        _627 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _628, move _642) -> [return: bb236, unwind: bb623];
    }

    bb236: {
        StorageDead(_642);
        StorageDead(_628);
        StorageDead(_641);
        StorageDead(_638);
        StorageDead(_637);
        StorageDead(_633);
        StorageDead(_627);
        _625 = move _626;
        StorageDead(_626);
        StorageLive(_644);
        StorageLive(_645);
        StorageLive(_646);
        StorageLive(_647);
        StorageLive(_648);
        StorageLive(_649);
        StorageLive(_650);
        StorageLive(_651);
        StorageLive(_652);
        StorageLive(_653);
        StorageLive(_654);
        _1678 = const _;
        _654 = &(*_1678);
        _653 = &(*_654);
        _652 = move _653 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_653);
        StorageLive(_656);
        StorageLive(_657);
        StorageLive(_658);
        StorageLive(_659);
        StorageLive(_660);
        StorageLive(_661);
        StorageLive(_662);
        StorageLive(_663);
        StorageLive(_664);
        _664 = &_625;
        _663 = ArrForm::<600>::as_str(move _664) -> [return: bb237, unwind: bb623];
    }

    bb237: {
        StorageDead(_664);
        _662 = &_663;
        _661 = &(*_662);
        _660 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _661) -> [return: bb238, unwind: bb623];
    }

    bb238: {
        StorageDead(_661);
        _659 = [move _660];
        StorageDead(_660);
        _658 = &_659;
        _657 = &(*_658);
        _656 = move _657 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_657);
        _651 = Arguments::<'_>::new_v1(move _652, move _656) -> [return: bb239, unwind: bb623];
    }

    bb239: {
        StorageDead(_656);
        StorageDead(_652);
        _650 = format(move _651) -> [return: bb240, unwind: bb623];
    }

    bb240: {
        StorageDead(_651);
        StorageDead(_663);
        StorageDead(_662);
        StorageDead(_659);
        StorageDead(_658);
        StorageDead(_654);
        _649 = move _650;
        StorageDead(_650);
        _648 = &_649;
        _647 = &(*_648);
        _646 = <String as Deref>::deref(move _647) -> [return: bb241, unwind: bb610];
    }

    bb241: {
        _645 = &(*_646);
        StorageDead(_647);
        _644 = solana_program::log::sol_log(move _645) -> [return: bb242, unwind: bb610];
    }

    bb242: {
        StorageDead(_645);
        drop(_649) -> [return: bb243, unwind: bb623];
    }

    bb243: {
        StorageDead(_649);
        StorageDead(_648);
        StorageDead(_646);
        StorageDead(_644);
        _535 = const ();
        StorageDead(_625);
        goto -> bb256;
    }

    bb244: {
        StorageLive(_667);
        StorageLive(_668);
        StorageLive(_669);
        _669 = &mut _666;
        StorageLive(_670);
        StorageLive(_671);
        StorageLive(_672);
        StorageLive(_673);
        _1677 = const _;
        _673 = &(*_1677);
        _672 = &(*_673);
        _671 = move _672 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_672);
        StorageLive(_675);
        StorageLive(_676);
        StorageLive(_677);
        StorageLive(_678);
        StorageLive(_679);
        StorageLive(_680);
        StorageLive(_681);
        _681 = &_86;
        _680 = &(*_681);
        _679 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _680) -> [return: bb245, unwind: bb623];
    }

    bb245: {
        StorageDead(_680);
        _678 = [move _679];
        StorageDead(_679);
        _677 = &_678;
        _676 = &(*_677);
        _675 = move _676 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_676);
        _670 = Arguments::<'_>::new_v1(move _671, move _675) -> [return: bb246, unwind: bb623];
    }

    bb246: {
        StorageDead(_675);
        StorageDead(_671);
        _668 = ArrForm::<1200>::format(move _669, move _670) -> [return: bb247, unwind: bb623];
    }

    bb247: {
        StorageDead(_670);
        StorageDead(_669);
        StorageLive(_682);
        StorageLive(_683);
        _683 = &mut _666;
        _682 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _683 };
        StorageDead(_683);
        _667 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _668, move _682) -> [return: bb248, unwind: bb623];
    }

    bb248: {
        StorageDead(_682);
        StorageDead(_668);
        StorageDead(_681);
        StorageDead(_678);
        StorageDead(_677);
        StorageDead(_673);
        StorageDead(_667);
        _665 = move _666;
        StorageDead(_666);
        StorageLive(_684);
        StorageLive(_685);
        StorageLive(_686);
        StorageLive(_687);
        StorageLive(_688);
        StorageLive(_689);
        StorageLive(_690);
        StorageLive(_691);
        StorageLive(_692);
        StorageLive(_693);
        StorageLive(_694);
        _1676 = const _;
        _694 = &(*_1676);
        _693 = &(*_694);
        _692 = move _693 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_693);
        StorageLive(_696);
        StorageLive(_697);
        StorageLive(_698);
        StorageLive(_699);
        StorageLive(_700);
        StorageLive(_701);
        StorageLive(_702);
        StorageLive(_703);
        StorageLive(_704);
        _704 = &_665;
        _703 = ArrForm::<1200>::as_str(move _704) -> [return: bb249, unwind: bb623];
    }

    bb249: {
        StorageDead(_704);
        _702 = &_703;
        _701 = &(*_702);
        _700 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _701) -> [return: bb250, unwind: bb623];
    }

    bb250: {
        StorageDead(_701);
        _699 = [move _700];
        StorageDead(_700);
        _698 = &_699;
        _697 = &(*_698);
        _696 = move _697 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_697);
        _691 = Arguments::<'_>::new_v1(move _692, move _696) -> [return: bb251, unwind: bb623];
    }

    bb251: {
        StorageDead(_696);
        StorageDead(_692);
        _690 = format(move _691) -> [return: bb252, unwind: bb623];
    }

    bb252: {
        StorageDead(_691);
        StorageDead(_703);
        StorageDead(_702);
        StorageDead(_699);
        StorageDead(_698);
        StorageDead(_694);
        _689 = move _690;
        StorageDead(_690);
        _688 = &_689;
        _687 = &(*_688);
        _686 = <String as Deref>::deref(move _687) -> [return: bb253, unwind: bb609];
    }

    bb253: {
        _685 = &(*_686);
        StorageDead(_687);
        _684 = solana_program::log::sol_log(move _685) -> [return: bb254, unwind: bb609];
    }

    bb254: {
        StorageDead(_685);
        drop(_689) -> [return: bb255, unwind: bb623];
    }

    bb255: {
        StorageDead(_689);
        StorageDead(_688);
        StorageDead(_686);
        StorageDead(_684);
        _535 = const ();
        StorageDead(_665);
        goto -> bb256;
    }

    bb256: {
        StorageDead(_538);
        StorageDead(_536);
        StorageDead(_535);
        StorageLive(_705);
        StorageLive(_706);
        StorageLive(_707);
        StorageLive(_708);
        _708 = const "Shares to burn {}";
        _707 = &(*_708);
        _706 = core::str::<impl str>::len(move _707) -> [return: bb257, unwind: bb623];
    }

    bb257: {
        StorageDead(_707);
        _713 = Le(const 0_usize, _706);
        switchInt(move _713) -> [0: bb259, otherwise: bb258];
    }

    bb258: {
        _714 = Le(_706, const 50_usize);
        switchInt(move _714) -> [0: bb259, otherwise: bb264];
    }

    bb259: {
        _711 = Le(const 51_usize, _706);
        switchInt(move _711) -> [0: bb261, otherwise: bb260];
    }

    bb260: {
        _712 = Le(_706, const 100_usize);
        switchInt(move _712) -> [0: bb261, otherwise: bb277];
    }

    bb261: {
        _709 = Le(const 101_usize, _706);
        switchInt(move _709) -> [0: bb263, otherwise: bb262];
    }

    bb262: {
        _710 = Le(_706, const 200_usize);
        switchInt(move _710) -> [0: bb263, otherwise: bb290];
    }

    bb263: {
        StorageLive(_835);
        StorageLive(_836);
        _836 = ArrForm::<1200>::new() -> [return: bb303, unwind: bb623];
    }

    bb264: {
        StorageLive(_715);
        StorageLive(_716);
        _716 = ArrForm::<150>::new() -> [return: bb265, unwind: bb623];
    }

    bb265: {
        StorageLive(_717);
        StorageLive(_718);
        StorageLive(_719);
        _719 = &mut _716;
        StorageLive(_720);
        StorageLive(_721);
        StorageLive(_722);
        StorageLive(_723);
        _1675 = const _;
        _723 = &(*_1675);
        _722 = &(*_723);
        _721 = move _722 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_722);
        StorageLive(_725);
        StorageLive(_726);
        StorageLive(_727);
        StorageLive(_728);
        StorageLive(_729);
        StorageLive(_730);
        StorageLive(_731);
        _731 = &_160;
        _730 = &(*_731);
        _729 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _730) -> [return: bb266, unwind: bb623];
    }

    bb266: {
        StorageDead(_730);
        _728 = [move _729];
        StorageDead(_729);
        _727 = &_728;
        _726 = &(*_727);
        _725 = move _726 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_726);
        _720 = Arguments::<'_>::new_v1(move _721, move _725) -> [return: bb267, unwind: bb623];
    }

    bb267: {
        StorageDead(_725);
        StorageDead(_721);
        _718 = ArrForm::<150>::format(move _719, move _720) -> [return: bb268, unwind: bb623];
    }

    bb268: {
        StorageDead(_720);
        StorageDead(_719);
        StorageLive(_732);
        StorageLive(_733);
        _733 = &mut _716;
        _732 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _733 };
        StorageDead(_733);
        _717 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _718, move _732) -> [return: bb269, unwind: bb623];
    }

    bb269: {
        StorageDead(_732);
        StorageDead(_718);
        StorageDead(_731);
        StorageDead(_728);
        StorageDead(_727);
        StorageDead(_723);
        StorageDead(_717);
        _715 = move _716;
        StorageDead(_716);
        StorageLive(_734);
        StorageLive(_735);
        StorageLive(_736);
        StorageLive(_737);
        StorageLive(_738);
        StorageLive(_739);
        StorageLive(_740);
        StorageLive(_741);
        StorageLive(_742);
        StorageLive(_743);
        StorageLive(_744);
        _1674 = const _;
        _744 = &(*_1674);
        _743 = &(*_744);
        _742 = move _743 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_743);
        StorageLive(_746);
        StorageLive(_747);
        StorageLive(_748);
        StorageLive(_749);
        StorageLive(_750);
        StorageLive(_751);
        StorageLive(_752);
        StorageLive(_753);
        StorageLive(_754);
        _754 = &_715;
        _753 = ArrForm::<150>::as_str(move _754) -> [return: bb270, unwind: bb623];
    }

    bb270: {
        StorageDead(_754);
        _752 = &_753;
        _751 = &(*_752);
        _750 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _751) -> [return: bb271, unwind: bb623];
    }

    bb271: {
        StorageDead(_751);
        _749 = [move _750];
        StorageDead(_750);
        _748 = &_749;
        _747 = &(*_748);
        _746 = move _747 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_747);
        _741 = Arguments::<'_>::new_v1(move _742, move _746) -> [return: bb272, unwind: bb623];
    }

    bb272: {
        StorageDead(_746);
        StorageDead(_742);
        _740 = format(move _741) -> [return: bb273, unwind: bb623];
    }

    bb273: {
        StorageDead(_741);
        StorageDead(_753);
        StorageDead(_752);
        StorageDead(_749);
        StorageDead(_748);
        StorageDead(_744);
        _739 = move _740;
        StorageDead(_740);
        _738 = &_739;
        _737 = &(*_738);
        _736 = <String as Deref>::deref(move _737) -> [return: bb274, unwind: bb608];
    }

    bb274: {
        _735 = &(*_736);
        StorageDead(_737);
        _734 = solana_program::log::sol_log(move _735) -> [return: bb275, unwind: bb608];
    }

    bb275: {
        StorageDead(_735);
        drop(_739) -> [return: bb276, unwind: bb623];
    }

    bb276: {
        StorageDead(_739);
        StorageDead(_738);
        StorageDead(_736);
        StorageDead(_734);
        _705 = const ();
        StorageDead(_715);
        goto -> bb315;
    }

    bb277: {
        StorageLive(_755);
        StorageLive(_756);
        _756 = ArrForm::<300>::new() -> [return: bb278, unwind: bb623];
    }

    bb278: {
        StorageLive(_757);
        StorageLive(_758);
        StorageLive(_759);
        _759 = &mut _756;
        StorageLive(_760);
        StorageLive(_761);
        StorageLive(_762);
        StorageLive(_763);
        _1673 = const _;
        _763 = &(*_1673);
        _762 = &(*_763);
        _761 = move _762 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_762);
        StorageLive(_765);
        StorageLive(_766);
        StorageLive(_767);
        StorageLive(_768);
        StorageLive(_769);
        StorageLive(_770);
        StorageLive(_771);
        _771 = &_160;
        _770 = &(*_771);
        _769 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _770) -> [return: bb279, unwind: bb623];
    }

    bb279: {
        StorageDead(_770);
        _768 = [move _769];
        StorageDead(_769);
        _767 = &_768;
        _766 = &(*_767);
        _765 = move _766 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_766);
        _760 = Arguments::<'_>::new_v1(move _761, move _765) -> [return: bb280, unwind: bb623];
    }

    bb280: {
        StorageDead(_765);
        StorageDead(_761);
        _758 = ArrForm::<300>::format(move _759, move _760) -> [return: bb281, unwind: bb623];
    }

    bb281: {
        StorageDead(_760);
        StorageDead(_759);
        StorageLive(_772);
        StorageLive(_773);
        _773 = &mut _756;
        _772 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _773 };
        StorageDead(_773);
        _757 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _758, move _772) -> [return: bb282, unwind: bb623];
    }

    bb282: {
        StorageDead(_772);
        StorageDead(_758);
        StorageDead(_771);
        StorageDead(_768);
        StorageDead(_767);
        StorageDead(_763);
        StorageDead(_757);
        _755 = move _756;
        StorageDead(_756);
        StorageLive(_774);
        StorageLive(_775);
        StorageLive(_776);
        StorageLive(_777);
        StorageLive(_778);
        StorageLive(_779);
        StorageLive(_780);
        StorageLive(_781);
        StorageLive(_782);
        StorageLive(_783);
        StorageLive(_784);
        _1672 = const _;
        _784 = &(*_1672);
        _783 = &(*_784);
        _782 = move _783 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_783);
        StorageLive(_786);
        StorageLive(_787);
        StorageLive(_788);
        StorageLive(_789);
        StorageLive(_790);
        StorageLive(_791);
        StorageLive(_792);
        StorageLive(_793);
        StorageLive(_794);
        _794 = &_755;
        _793 = ArrForm::<300>::as_str(move _794) -> [return: bb283, unwind: bb623];
    }

    bb283: {
        StorageDead(_794);
        _792 = &_793;
        _791 = &(*_792);
        _790 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _791) -> [return: bb284, unwind: bb623];
    }

    bb284: {
        StorageDead(_791);
        _789 = [move _790];
        StorageDead(_790);
        _788 = &_789;
        _787 = &(*_788);
        _786 = move _787 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_787);
        _781 = Arguments::<'_>::new_v1(move _782, move _786) -> [return: bb285, unwind: bb623];
    }

    bb285: {
        StorageDead(_786);
        StorageDead(_782);
        _780 = format(move _781) -> [return: bb286, unwind: bb623];
    }

    bb286: {
        StorageDead(_781);
        StorageDead(_793);
        StorageDead(_792);
        StorageDead(_789);
        StorageDead(_788);
        StorageDead(_784);
        _779 = move _780;
        StorageDead(_780);
        _778 = &_779;
        _777 = &(*_778);
        _776 = <String as Deref>::deref(move _777) -> [return: bb287, unwind: bb607];
    }

    bb287: {
        _775 = &(*_776);
        StorageDead(_777);
        _774 = solana_program::log::sol_log(move _775) -> [return: bb288, unwind: bb607];
    }

    bb288: {
        StorageDead(_775);
        drop(_779) -> [return: bb289, unwind: bb623];
    }

    bb289: {
        StorageDead(_779);
        StorageDead(_778);
        StorageDead(_776);
        StorageDead(_774);
        _705 = const ();
        StorageDead(_755);
        goto -> bb315;
    }

    bb290: {
        StorageLive(_795);
        StorageLive(_796);
        _796 = ArrForm::<600>::new() -> [return: bb291, unwind: bb623];
    }

    bb291: {
        StorageLive(_797);
        StorageLive(_798);
        StorageLive(_799);
        _799 = &mut _796;
        StorageLive(_800);
        StorageLive(_801);
        StorageLive(_802);
        StorageLive(_803);
        _1671 = const _;
        _803 = &(*_1671);
        _802 = &(*_803);
        _801 = move _802 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_802);
        StorageLive(_805);
        StorageLive(_806);
        StorageLive(_807);
        StorageLive(_808);
        StorageLive(_809);
        StorageLive(_810);
        StorageLive(_811);
        _811 = &_160;
        _810 = &(*_811);
        _809 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _810) -> [return: bb292, unwind: bb623];
    }

    bb292: {
        StorageDead(_810);
        _808 = [move _809];
        StorageDead(_809);
        _807 = &_808;
        _806 = &(*_807);
        _805 = move _806 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_806);
        _800 = Arguments::<'_>::new_v1(move _801, move _805) -> [return: bb293, unwind: bb623];
    }

    bb293: {
        StorageDead(_805);
        StorageDead(_801);
        _798 = ArrForm::<600>::format(move _799, move _800) -> [return: bb294, unwind: bb623];
    }

    bb294: {
        StorageDead(_800);
        StorageDead(_799);
        StorageLive(_812);
        StorageLive(_813);
        _813 = &mut _796;
        _812 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _813 };
        StorageDead(_813);
        _797 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _798, move _812) -> [return: bb295, unwind: bb623];
    }

    bb295: {
        StorageDead(_812);
        StorageDead(_798);
        StorageDead(_811);
        StorageDead(_808);
        StorageDead(_807);
        StorageDead(_803);
        StorageDead(_797);
        _795 = move _796;
        StorageDead(_796);
        StorageLive(_814);
        StorageLive(_815);
        StorageLive(_816);
        StorageLive(_817);
        StorageLive(_818);
        StorageLive(_819);
        StorageLive(_820);
        StorageLive(_821);
        StorageLive(_822);
        StorageLive(_823);
        StorageLive(_824);
        _1670 = const _;
        _824 = &(*_1670);
        _823 = &(*_824);
        _822 = move _823 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_823);
        StorageLive(_826);
        StorageLive(_827);
        StorageLive(_828);
        StorageLive(_829);
        StorageLive(_830);
        StorageLive(_831);
        StorageLive(_832);
        StorageLive(_833);
        StorageLive(_834);
        _834 = &_795;
        _833 = ArrForm::<600>::as_str(move _834) -> [return: bb296, unwind: bb623];
    }

    bb296: {
        StorageDead(_834);
        _832 = &_833;
        _831 = &(*_832);
        _830 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _831) -> [return: bb297, unwind: bb623];
    }

    bb297: {
        StorageDead(_831);
        _829 = [move _830];
        StorageDead(_830);
        _828 = &_829;
        _827 = &(*_828);
        _826 = move _827 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_827);
        _821 = Arguments::<'_>::new_v1(move _822, move _826) -> [return: bb298, unwind: bb623];
    }

    bb298: {
        StorageDead(_826);
        StorageDead(_822);
        _820 = format(move _821) -> [return: bb299, unwind: bb623];
    }

    bb299: {
        StorageDead(_821);
        StorageDead(_833);
        StorageDead(_832);
        StorageDead(_829);
        StorageDead(_828);
        StorageDead(_824);
        _819 = move _820;
        StorageDead(_820);
        _818 = &_819;
        _817 = &(*_818);
        _816 = <String as Deref>::deref(move _817) -> [return: bb300, unwind: bb606];
    }

    bb300: {
        _815 = &(*_816);
        StorageDead(_817);
        _814 = solana_program::log::sol_log(move _815) -> [return: bb301, unwind: bb606];
    }

    bb301: {
        StorageDead(_815);
        drop(_819) -> [return: bb302, unwind: bb623];
    }

    bb302: {
        StorageDead(_819);
        StorageDead(_818);
        StorageDead(_816);
        StorageDead(_814);
        _705 = const ();
        StorageDead(_795);
        goto -> bb315;
    }

    bb303: {
        StorageLive(_837);
        StorageLive(_838);
        StorageLive(_839);
        _839 = &mut _836;
        StorageLive(_840);
        StorageLive(_841);
        StorageLive(_842);
        StorageLive(_843);
        _1669 = const _;
        _843 = &(*_1669);
        _842 = &(*_843);
        _841 = move _842 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_842);
        StorageLive(_845);
        StorageLive(_846);
        StorageLive(_847);
        StorageLive(_848);
        StorageLive(_849);
        StorageLive(_850);
        StorageLive(_851);
        _851 = &_160;
        _850 = &(*_851);
        _849 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _850) -> [return: bb304, unwind: bb623];
    }

    bb304: {
        StorageDead(_850);
        _848 = [move _849];
        StorageDead(_849);
        _847 = &_848;
        _846 = &(*_847);
        _845 = move _846 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_846);
        _840 = Arguments::<'_>::new_v1(move _841, move _845) -> [return: bb305, unwind: bb623];
    }

    bb305: {
        StorageDead(_845);
        StorageDead(_841);
        _838 = ArrForm::<1200>::format(move _839, move _840) -> [return: bb306, unwind: bb623];
    }

    bb306: {
        StorageDead(_840);
        StorageDead(_839);
        StorageLive(_852);
        StorageLive(_853);
        _853 = &mut _836;
        _852 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _853 };
        StorageDead(_853);
        _837 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _838, move _852) -> [return: bb307, unwind: bb623];
    }

    bb307: {
        StorageDead(_852);
        StorageDead(_838);
        StorageDead(_851);
        StorageDead(_848);
        StorageDead(_847);
        StorageDead(_843);
        StorageDead(_837);
        _835 = move _836;
        StorageDead(_836);
        StorageLive(_854);
        StorageLive(_855);
        StorageLive(_856);
        StorageLive(_857);
        StorageLive(_858);
        StorageLive(_859);
        StorageLive(_860);
        StorageLive(_861);
        StorageLive(_862);
        StorageLive(_863);
        StorageLive(_864);
        _1668 = const _;
        _864 = &(*_1668);
        _863 = &(*_864);
        _862 = move _863 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_863);
        StorageLive(_866);
        StorageLive(_867);
        StorageLive(_868);
        StorageLive(_869);
        StorageLive(_870);
        StorageLive(_871);
        StorageLive(_872);
        StorageLive(_873);
        StorageLive(_874);
        _874 = &_835;
        _873 = ArrForm::<1200>::as_str(move _874) -> [return: bb308, unwind: bb623];
    }

    bb308: {
        StorageDead(_874);
        _872 = &_873;
        _871 = &(*_872);
        _870 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _871) -> [return: bb309, unwind: bb623];
    }

    bb309: {
        StorageDead(_871);
        _869 = [move _870];
        StorageDead(_870);
        _868 = &_869;
        _867 = &(*_868);
        _866 = move _867 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_867);
        _861 = Arguments::<'_>::new_v1(move _862, move _866) -> [return: bb310, unwind: bb623];
    }

    bb310: {
        StorageDead(_866);
        StorageDead(_862);
        _860 = format(move _861) -> [return: bb311, unwind: bb623];
    }

    bb311: {
        StorageDead(_861);
        StorageDead(_873);
        StorageDead(_872);
        StorageDead(_869);
        StorageDead(_868);
        StorageDead(_864);
        _859 = move _860;
        StorageDead(_860);
        _858 = &_859;
        _857 = &(*_858);
        _856 = <String as Deref>::deref(move _857) -> [return: bb312, unwind: bb605];
    }

    bb312: {
        _855 = &(*_856);
        StorageDead(_857);
        _854 = solana_program::log::sol_log(move _855) -> [return: bb313, unwind: bb605];
    }

    bb313: {
        StorageDead(_855);
        drop(_859) -> [return: bb314, unwind: bb623];
    }

    bb314: {
        StorageDead(_859);
        StorageDead(_858);
        StorageDead(_856);
        StorageDead(_854);
        _705 = const ();
        StorageDead(_835);
        goto -> bb315;
    }

    bb315: {
        StorageDead(_708);
        StorageDead(_706);
        StorageDead(_705);
        StorageLive(_875);
        StorageLive(_876);
        StorageLive(_877);
        StorageLive(_878);
        _878 = const "Disinvest liq {}";
        _877 = &(*_878);
        _876 = core::str::<impl str>::len(move _877) -> [return: bb316, unwind: bb623];
    }

    bb316: {
        StorageDead(_877);
        _883 = Le(const 0_usize, _876);
        switchInt(move _883) -> [0: bb318, otherwise: bb317];
    }

    bb317: {
        _884 = Le(_876, const 50_usize);
        switchInt(move _884) -> [0: bb318, otherwise: bb323];
    }

    bb318: {
        _881 = Le(const 51_usize, _876);
        switchInt(move _881) -> [0: bb320, otherwise: bb319];
    }

    bb319: {
        _882 = Le(_876, const 100_usize);
        switchInt(move _882) -> [0: bb320, otherwise: bb336];
    }

    bb320: {
        _879 = Le(const 101_usize, _876);
        switchInt(move _879) -> [0: bb322, otherwise: bb321];
    }

    bb321: {
        _880 = Le(_876, const 200_usize);
        switchInt(move _880) -> [0: bb322, otherwise: bb349];
    }

    bb322: {
        StorageLive(_1005);
        StorageLive(_1006);
        _1006 = ArrForm::<1200>::new() -> [return: bb362, unwind: bb623];
    }

    bb323: {
        StorageLive(_885);
        StorageLive(_886);
        _886 = ArrForm::<150>::new() -> [return: bb324, unwind: bb623];
    }

    bb324: {
        StorageLive(_887);
        StorageLive(_888);
        StorageLive(_889);
        _889 = &mut _886;
        StorageLive(_890);
        StorageLive(_891);
        StorageLive(_892);
        StorageLive(_893);
        _1667 = const _;
        _893 = &(*_1667);
        _892 = &(*_893);
        _891 = move _892 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_892);
        StorageLive(_895);
        StorageLive(_896);
        StorageLive(_897);
        StorageLive(_898);
        StorageLive(_899);
        StorageLive(_900);
        StorageLive(_901);
        _901 = &_150;
        _900 = &(*_901);
        _899 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _900) -> [return: bb325, unwind: bb623];
    }

    bb325: {
        StorageDead(_900);
        _898 = [move _899];
        StorageDead(_899);
        _897 = &_898;
        _896 = &(*_897);
        _895 = move _896 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_896);
        _890 = Arguments::<'_>::new_v1(move _891, move _895) -> [return: bb326, unwind: bb623];
    }

    bb326: {
        StorageDead(_895);
        StorageDead(_891);
        _888 = ArrForm::<150>::format(move _889, move _890) -> [return: bb327, unwind: bb623];
    }

    bb327: {
        StorageDead(_890);
        StorageDead(_889);
        StorageLive(_902);
        StorageLive(_903);
        _903 = &mut _886;
        _902 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _903 };
        StorageDead(_903);
        _887 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _888, move _902) -> [return: bb328, unwind: bb623];
    }

    bb328: {
        StorageDead(_902);
        StorageDead(_888);
        StorageDead(_901);
        StorageDead(_898);
        StorageDead(_897);
        StorageDead(_893);
        StorageDead(_887);
        _885 = move _886;
        StorageDead(_886);
        StorageLive(_904);
        StorageLive(_905);
        StorageLive(_906);
        StorageLive(_907);
        StorageLive(_908);
        StorageLive(_909);
        StorageLive(_910);
        StorageLive(_911);
        StorageLive(_912);
        StorageLive(_913);
        StorageLive(_914);
        _1666 = const _;
        _914 = &(*_1666);
        _913 = &(*_914);
        _912 = move _913 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_913);
        StorageLive(_916);
        StorageLive(_917);
        StorageLive(_918);
        StorageLive(_919);
        StorageLive(_920);
        StorageLive(_921);
        StorageLive(_922);
        StorageLive(_923);
        StorageLive(_924);
        _924 = &_885;
        _923 = ArrForm::<150>::as_str(move _924) -> [return: bb329, unwind: bb623];
    }

    bb329: {
        StorageDead(_924);
        _922 = &_923;
        _921 = &(*_922);
        _920 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _921) -> [return: bb330, unwind: bb623];
    }

    bb330: {
        StorageDead(_921);
        _919 = [move _920];
        StorageDead(_920);
        _918 = &_919;
        _917 = &(*_918);
        _916 = move _917 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_917);
        _911 = Arguments::<'_>::new_v1(move _912, move _916) -> [return: bb331, unwind: bb623];
    }

    bb331: {
        StorageDead(_916);
        StorageDead(_912);
        _910 = format(move _911) -> [return: bb332, unwind: bb623];
    }

    bb332: {
        StorageDead(_911);
        StorageDead(_923);
        StorageDead(_922);
        StorageDead(_919);
        StorageDead(_918);
        StorageDead(_914);
        _909 = move _910;
        StorageDead(_910);
        _908 = &_909;
        _907 = &(*_908);
        _906 = <String as Deref>::deref(move _907) -> [return: bb333, unwind: bb604];
    }

    bb333: {
        _905 = &(*_906);
        StorageDead(_907);
        _904 = solana_program::log::sol_log(move _905) -> [return: bb334, unwind: bb604];
    }

    bb334: {
        StorageDead(_905);
        drop(_909) -> [return: bb335, unwind: bb623];
    }

    bb335: {
        StorageDead(_909);
        StorageDead(_908);
        StorageDead(_906);
        StorageDead(_904);
        _875 = const ();
        StorageDead(_885);
        goto -> bb374;
    }

    bb336: {
        StorageLive(_925);
        StorageLive(_926);
        _926 = ArrForm::<300>::new() -> [return: bb337, unwind: bb623];
    }

    bb337: {
        StorageLive(_927);
        StorageLive(_928);
        StorageLive(_929);
        _929 = &mut _926;
        StorageLive(_930);
        StorageLive(_931);
        StorageLive(_932);
        StorageLive(_933);
        _1665 = const _;
        _933 = &(*_1665);
        _932 = &(*_933);
        _931 = move _932 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_932);
        StorageLive(_935);
        StorageLive(_936);
        StorageLive(_937);
        StorageLive(_938);
        StorageLive(_939);
        StorageLive(_940);
        StorageLive(_941);
        _941 = &_150;
        _940 = &(*_941);
        _939 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _940) -> [return: bb338, unwind: bb623];
    }

    bb338: {
        StorageDead(_940);
        _938 = [move _939];
        StorageDead(_939);
        _937 = &_938;
        _936 = &(*_937);
        _935 = move _936 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_936);
        _930 = Arguments::<'_>::new_v1(move _931, move _935) -> [return: bb339, unwind: bb623];
    }

    bb339: {
        StorageDead(_935);
        StorageDead(_931);
        _928 = ArrForm::<300>::format(move _929, move _930) -> [return: bb340, unwind: bb623];
    }

    bb340: {
        StorageDead(_930);
        StorageDead(_929);
        StorageLive(_942);
        StorageLive(_943);
        _943 = &mut _926;
        _942 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _943 };
        StorageDead(_943);
        _927 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _928, move _942) -> [return: bb341, unwind: bb623];
    }

    bb341: {
        StorageDead(_942);
        StorageDead(_928);
        StorageDead(_941);
        StorageDead(_938);
        StorageDead(_937);
        StorageDead(_933);
        StorageDead(_927);
        _925 = move _926;
        StorageDead(_926);
        StorageLive(_944);
        StorageLive(_945);
        StorageLive(_946);
        StorageLive(_947);
        StorageLive(_948);
        StorageLive(_949);
        StorageLive(_950);
        StorageLive(_951);
        StorageLive(_952);
        StorageLive(_953);
        StorageLive(_954);
        _1664 = const _;
        _954 = &(*_1664);
        _953 = &(*_954);
        _952 = move _953 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_953);
        StorageLive(_956);
        StorageLive(_957);
        StorageLive(_958);
        StorageLive(_959);
        StorageLive(_960);
        StorageLive(_961);
        StorageLive(_962);
        StorageLive(_963);
        StorageLive(_964);
        _964 = &_925;
        _963 = ArrForm::<300>::as_str(move _964) -> [return: bb342, unwind: bb623];
    }

    bb342: {
        StorageDead(_964);
        _962 = &_963;
        _961 = &(*_962);
        _960 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _961) -> [return: bb343, unwind: bb623];
    }

    bb343: {
        StorageDead(_961);
        _959 = [move _960];
        StorageDead(_960);
        _958 = &_959;
        _957 = &(*_958);
        _956 = move _957 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_957);
        _951 = Arguments::<'_>::new_v1(move _952, move _956) -> [return: bb344, unwind: bb623];
    }

    bb344: {
        StorageDead(_956);
        StorageDead(_952);
        _950 = format(move _951) -> [return: bb345, unwind: bb623];
    }

    bb345: {
        StorageDead(_951);
        StorageDead(_963);
        StorageDead(_962);
        StorageDead(_959);
        StorageDead(_958);
        StorageDead(_954);
        _949 = move _950;
        StorageDead(_950);
        _948 = &_949;
        _947 = &(*_948);
        _946 = <String as Deref>::deref(move _947) -> [return: bb346, unwind: bb603];
    }

    bb346: {
        _945 = &(*_946);
        StorageDead(_947);
        _944 = solana_program::log::sol_log(move _945) -> [return: bb347, unwind: bb603];
    }

    bb347: {
        StorageDead(_945);
        drop(_949) -> [return: bb348, unwind: bb623];
    }

    bb348: {
        StorageDead(_949);
        StorageDead(_948);
        StorageDead(_946);
        StorageDead(_944);
        _875 = const ();
        StorageDead(_925);
        goto -> bb374;
    }

    bb349: {
        StorageLive(_965);
        StorageLive(_966);
        _966 = ArrForm::<600>::new() -> [return: bb350, unwind: bb623];
    }

    bb350: {
        StorageLive(_967);
        StorageLive(_968);
        StorageLive(_969);
        _969 = &mut _966;
        StorageLive(_970);
        StorageLive(_971);
        StorageLive(_972);
        StorageLive(_973);
        _1663 = const _;
        _973 = &(*_1663);
        _972 = &(*_973);
        _971 = move _972 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_972);
        StorageLive(_975);
        StorageLive(_976);
        StorageLive(_977);
        StorageLive(_978);
        StorageLive(_979);
        StorageLive(_980);
        StorageLive(_981);
        _981 = &_150;
        _980 = &(*_981);
        _979 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _980) -> [return: bb351, unwind: bb623];
    }

    bb351: {
        StorageDead(_980);
        _978 = [move _979];
        StorageDead(_979);
        _977 = &_978;
        _976 = &(*_977);
        _975 = move _976 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_976);
        _970 = Arguments::<'_>::new_v1(move _971, move _975) -> [return: bb352, unwind: bb623];
    }

    bb352: {
        StorageDead(_975);
        StorageDead(_971);
        _968 = ArrForm::<600>::format(move _969, move _970) -> [return: bb353, unwind: bb623];
    }

    bb353: {
        StorageDead(_970);
        StorageDead(_969);
        StorageLive(_982);
        StorageLive(_983);
        _983 = &mut _966;
        _982 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _983 };
        StorageDead(_983);
        _967 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _968, move _982) -> [return: bb354, unwind: bb623];
    }

    bb354: {
        StorageDead(_982);
        StorageDead(_968);
        StorageDead(_981);
        StorageDead(_978);
        StorageDead(_977);
        StorageDead(_973);
        StorageDead(_967);
        _965 = move _966;
        StorageDead(_966);
        StorageLive(_984);
        StorageLive(_985);
        StorageLive(_986);
        StorageLive(_987);
        StorageLive(_988);
        StorageLive(_989);
        StorageLive(_990);
        StorageLive(_991);
        StorageLive(_992);
        StorageLive(_993);
        StorageLive(_994);
        _1662 = const _;
        _994 = &(*_1662);
        _993 = &(*_994);
        _992 = move _993 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_993);
        StorageLive(_996);
        StorageLive(_997);
        StorageLive(_998);
        StorageLive(_999);
        StorageLive(_1000);
        StorageLive(_1001);
        StorageLive(_1002);
        StorageLive(_1003);
        StorageLive(_1004);
        _1004 = &_965;
        _1003 = ArrForm::<600>::as_str(move _1004) -> [return: bb355, unwind: bb623];
    }

    bb355: {
        StorageDead(_1004);
        _1002 = &_1003;
        _1001 = &(*_1002);
        _1000 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1001) -> [return: bb356, unwind: bb623];
    }

    bb356: {
        StorageDead(_1001);
        _999 = [move _1000];
        StorageDead(_1000);
        _998 = &_999;
        _997 = &(*_998);
        _996 = move _997 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_997);
        _991 = Arguments::<'_>::new_v1(move _992, move _996) -> [return: bb357, unwind: bb623];
    }

    bb357: {
        StorageDead(_996);
        StorageDead(_992);
        _990 = format(move _991) -> [return: bb358, unwind: bb623];
    }

    bb358: {
        StorageDead(_991);
        StorageDead(_1003);
        StorageDead(_1002);
        StorageDead(_999);
        StorageDead(_998);
        StorageDead(_994);
        _989 = move _990;
        StorageDead(_990);
        _988 = &_989;
        _987 = &(*_988);
        _986 = <String as Deref>::deref(move _987) -> [return: bb359, unwind: bb602];
    }

    bb359: {
        _985 = &(*_986);
        StorageDead(_987);
        _984 = solana_program::log::sol_log(move _985) -> [return: bb360, unwind: bb602];
    }

    bb360: {
        StorageDead(_985);
        drop(_989) -> [return: bb361, unwind: bb623];
    }

    bb361: {
        StorageDead(_989);
        StorageDead(_988);
        StorageDead(_986);
        StorageDead(_984);
        _875 = const ();
        StorageDead(_965);
        goto -> bb374;
    }

    bb362: {
        StorageLive(_1007);
        StorageLive(_1008);
        StorageLive(_1009);
        _1009 = &mut _1006;
        StorageLive(_1010);
        StorageLive(_1011);
        StorageLive(_1012);
        StorageLive(_1013);
        _1661 = const _;
        _1013 = &(*_1661);
        _1012 = &(*_1013);
        _1011 = move _1012 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1012);
        StorageLive(_1015);
        StorageLive(_1016);
        StorageLive(_1017);
        StorageLive(_1018);
        StorageLive(_1019);
        StorageLive(_1020);
        StorageLive(_1021);
        _1021 = &_150;
        _1020 = &(*_1021);
        _1019 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1020) -> [return: bb363, unwind: bb623];
    }

    bb363: {
        StorageDead(_1020);
        _1018 = [move _1019];
        StorageDead(_1019);
        _1017 = &_1018;
        _1016 = &(*_1017);
        _1015 = move _1016 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1016);
        _1010 = Arguments::<'_>::new_v1(move _1011, move _1015) -> [return: bb364, unwind: bb623];
    }

    bb364: {
        StorageDead(_1015);
        StorageDead(_1011);
        _1008 = ArrForm::<1200>::format(move _1009, move _1010) -> [return: bb365, unwind: bb623];
    }

    bb365: {
        StorageDead(_1010);
        StorageDead(_1009);
        StorageLive(_1022);
        StorageLive(_1023);
        _1023 = &mut _1006;
        _1022 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1023 };
        StorageDead(_1023);
        _1007 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1008, move _1022) -> [return: bb366, unwind: bb623];
    }

    bb366: {
        StorageDead(_1022);
        StorageDead(_1008);
        StorageDead(_1021);
        StorageDead(_1018);
        StorageDead(_1017);
        StorageDead(_1013);
        StorageDead(_1007);
        _1005 = move _1006;
        StorageDead(_1006);
        StorageLive(_1024);
        StorageLive(_1025);
        StorageLive(_1026);
        StorageLive(_1027);
        StorageLive(_1028);
        StorageLive(_1029);
        StorageLive(_1030);
        StorageLive(_1031);
        StorageLive(_1032);
        StorageLive(_1033);
        StorageLive(_1034);
        _1660 = const _;
        _1034 = &(*_1660);
        _1033 = &(*_1034);
        _1032 = move _1033 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1033);
        StorageLive(_1036);
        StorageLive(_1037);
        StorageLive(_1038);
        StorageLive(_1039);
        StorageLive(_1040);
        StorageLive(_1041);
        StorageLive(_1042);
        StorageLive(_1043);
        StorageLive(_1044);
        _1044 = &_1005;
        _1043 = ArrForm::<1200>::as_str(move _1044) -> [return: bb367, unwind: bb623];
    }

    bb367: {
        StorageDead(_1044);
        _1042 = &_1043;
        _1041 = &(*_1042);
        _1040 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1041) -> [return: bb368, unwind: bb623];
    }

    bb368: {
        StorageDead(_1041);
        _1039 = [move _1040];
        StorageDead(_1040);
        _1038 = &_1039;
        _1037 = &(*_1038);
        _1036 = move _1037 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1037);
        _1031 = Arguments::<'_>::new_v1(move _1032, move _1036) -> [return: bb369, unwind: bb623];
    }

    bb369: {
        StorageDead(_1036);
        StorageDead(_1032);
        _1030 = format(move _1031) -> [return: bb370, unwind: bb623];
    }

    bb370: {
        StorageDead(_1031);
        StorageDead(_1043);
        StorageDead(_1042);
        StorageDead(_1039);
        StorageDead(_1038);
        StorageDead(_1034);
        _1029 = move _1030;
        StorageDead(_1030);
        _1028 = &_1029;
        _1027 = &(*_1028);
        _1026 = <String as Deref>::deref(move _1027) -> [return: bb371, unwind: bb601];
    }

    bb371: {
        _1025 = &(*_1026);
        StorageDead(_1027);
        _1024 = solana_program::log::sol_log(move _1025) -> [return: bb372, unwind: bb601];
    }

    bb372: {
        StorageDead(_1025);
        drop(_1029) -> [return: bb373, unwind: bb623];
    }

    bb373: {
        StorageDead(_1029);
        StorageDead(_1028);
        StorageDead(_1026);
        StorageDead(_1024);
        _875 = const ();
        StorageDead(_1005);
        goto -> bb374;
    }

    bb374: {
        StorageDead(_878);
        StorageDead(_876);
        StorageDead(_875);
        StorageLive(_1045);
        StorageLive(_1046);
        StorageLive(_1047);
        StorageLive(_1048);
        _1048 = const "Actual invested liq {}";
        _1047 = &(*_1048);
        _1046 = core::str::<impl str>::len(move _1047) -> [return: bb375, unwind: bb623];
    }

    bb375: {
        StorageDead(_1047);
        _1053 = Le(const 0_usize, _1046);
        switchInt(move _1053) -> [0: bb377, otherwise: bb376];
    }

    bb376: {
        _1054 = Le(_1046, const 50_usize);
        switchInt(move _1054) -> [0: bb377, otherwise: bb382];
    }

    bb377: {
        _1051 = Le(const 51_usize, _1046);
        switchInt(move _1051) -> [0: bb379, otherwise: bb378];
    }

    bb378: {
        _1052 = Le(_1046, const 100_usize);
        switchInt(move _1052) -> [0: bb379, otherwise: bb395];
    }

    bb379: {
        _1049 = Le(const 101_usize, _1046);
        switchInt(move _1049) -> [0: bb381, otherwise: bb380];
    }

    bb380: {
        _1050 = Le(_1046, const 200_usize);
        switchInt(move _1050) -> [0: bb381, otherwise: bb408];
    }

    bb381: {
        StorageLive(_1175);
        StorageLive(_1176);
        _1176 = ArrForm::<1200>::new() -> [return: bb421, unwind: bb623];
    }

    bb382: {
        StorageLive(_1055);
        StorageLive(_1056);
        _1056 = ArrForm::<150>::new() -> [return: bb383, unwind: bb623];
    }

    bb383: {
        StorageLive(_1057);
        StorageLive(_1058);
        StorageLive(_1059);
        _1059 = &mut _1056;
        StorageLive(_1060);
        StorageLive(_1061);
        StorageLive(_1062);
        StorageLive(_1063);
        _1659 = const _;
        _1063 = &(*_1659);
        _1062 = &(*_1063);
        _1061 = move _1062 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1062);
        StorageLive(_1065);
        StorageLive(_1066);
        StorageLive(_1067);
        StorageLive(_1068);
        StorageLive(_1069);
        StorageLive(_1070);
        StorageLive(_1071);
        _1071 = &_156;
        _1070 = &(*_1071);
        _1069 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1070) -> [return: bb384, unwind: bb623];
    }

    bb384: {
        StorageDead(_1070);
        _1068 = [move _1069];
        StorageDead(_1069);
        _1067 = &_1068;
        _1066 = &(*_1067);
        _1065 = move _1066 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1066);
        _1060 = Arguments::<'_>::new_v1(move _1061, move _1065) -> [return: bb385, unwind: bb623];
    }

    bb385: {
        StorageDead(_1065);
        StorageDead(_1061);
        _1058 = ArrForm::<150>::format(move _1059, move _1060) -> [return: bb386, unwind: bb623];
    }

    bb386: {
        StorageDead(_1060);
        StorageDead(_1059);
        StorageLive(_1072);
        StorageLive(_1073);
        _1073 = &mut _1056;
        _1072 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1073 };
        StorageDead(_1073);
        _1057 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1058, move _1072) -> [return: bb387, unwind: bb623];
    }

    bb387: {
        StorageDead(_1072);
        StorageDead(_1058);
        StorageDead(_1071);
        StorageDead(_1068);
        StorageDead(_1067);
        StorageDead(_1063);
        StorageDead(_1057);
        _1055 = move _1056;
        StorageDead(_1056);
        StorageLive(_1074);
        StorageLive(_1075);
        StorageLive(_1076);
        StorageLive(_1077);
        StorageLive(_1078);
        StorageLive(_1079);
        StorageLive(_1080);
        StorageLive(_1081);
        StorageLive(_1082);
        StorageLive(_1083);
        StorageLive(_1084);
        _1658 = const _;
        _1084 = &(*_1658);
        _1083 = &(*_1084);
        _1082 = move _1083 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1083);
        StorageLive(_1086);
        StorageLive(_1087);
        StorageLive(_1088);
        StorageLive(_1089);
        StorageLive(_1090);
        StorageLive(_1091);
        StorageLive(_1092);
        StorageLive(_1093);
        StorageLive(_1094);
        _1094 = &_1055;
        _1093 = ArrForm::<150>::as_str(move _1094) -> [return: bb388, unwind: bb623];
    }

    bb388: {
        StorageDead(_1094);
        _1092 = &_1093;
        _1091 = &(*_1092);
        _1090 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1091) -> [return: bb389, unwind: bb623];
    }

    bb389: {
        StorageDead(_1091);
        _1089 = [move _1090];
        StorageDead(_1090);
        _1088 = &_1089;
        _1087 = &(*_1088);
        _1086 = move _1087 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1087);
        _1081 = Arguments::<'_>::new_v1(move _1082, move _1086) -> [return: bb390, unwind: bb623];
    }

    bb390: {
        StorageDead(_1086);
        StorageDead(_1082);
        _1080 = format(move _1081) -> [return: bb391, unwind: bb623];
    }

    bb391: {
        StorageDead(_1081);
        StorageDead(_1093);
        StorageDead(_1092);
        StorageDead(_1089);
        StorageDead(_1088);
        StorageDead(_1084);
        _1079 = move _1080;
        StorageDead(_1080);
        _1078 = &_1079;
        _1077 = &(*_1078);
        _1076 = <String as Deref>::deref(move _1077) -> [return: bb392, unwind: bb600];
    }

    bb392: {
        _1075 = &(*_1076);
        StorageDead(_1077);
        _1074 = solana_program::log::sol_log(move _1075) -> [return: bb393, unwind: bb600];
    }

    bb393: {
        StorageDead(_1075);
        drop(_1079) -> [return: bb394, unwind: bb623];
    }

    bb394: {
        StorageDead(_1079);
        StorageDead(_1078);
        StorageDead(_1076);
        StorageDead(_1074);
        _1045 = const ();
        StorageDead(_1055);
        goto -> bb433;
    }

    bb395: {
        StorageLive(_1095);
        StorageLive(_1096);
        _1096 = ArrForm::<300>::new() -> [return: bb396, unwind: bb623];
    }

    bb396: {
        StorageLive(_1097);
        StorageLive(_1098);
        StorageLive(_1099);
        _1099 = &mut _1096;
        StorageLive(_1100);
        StorageLive(_1101);
        StorageLive(_1102);
        StorageLive(_1103);
        _1657 = const _;
        _1103 = &(*_1657);
        _1102 = &(*_1103);
        _1101 = move _1102 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1102);
        StorageLive(_1105);
        StorageLive(_1106);
        StorageLive(_1107);
        StorageLive(_1108);
        StorageLive(_1109);
        StorageLive(_1110);
        StorageLive(_1111);
        _1111 = &_156;
        _1110 = &(*_1111);
        _1109 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1110) -> [return: bb397, unwind: bb623];
    }

    bb397: {
        StorageDead(_1110);
        _1108 = [move _1109];
        StorageDead(_1109);
        _1107 = &_1108;
        _1106 = &(*_1107);
        _1105 = move _1106 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1106);
        _1100 = Arguments::<'_>::new_v1(move _1101, move _1105) -> [return: bb398, unwind: bb623];
    }

    bb398: {
        StorageDead(_1105);
        StorageDead(_1101);
        _1098 = ArrForm::<300>::format(move _1099, move _1100) -> [return: bb399, unwind: bb623];
    }

    bb399: {
        StorageDead(_1100);
        StorageDead(_1099);
        StorageLive(_1112);
        StorageLive(_1113);
        _1113 = &mut _1096;
        _1112 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1113 };
        StorageDead(_1113);
        _1097 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1098, move _1112) -> [return: bb400, unwind: bb623];
    }

    bb400: {
        StorageDead(_1112);
        StorageDead(_1098);
        StorageDead(_1111);
        StorageDead(_1108);
        StorageDead(_1107);
        StorageDead(_1103);
        StorageDead(_1097);
        _1095 = move _1096;
        StorageDead(_1096);
        StorageLive(_1114);
        StorageLive(_1115);
        StorageLive(_1116);
        StorageLive(_1117);
        StorageLive(_1118);
        StorageLive(_1119);
        StorageLive(_1120);
        StorageLive(_1121);
        StorageLive(_1122);
        StorageLive(_1123);
        StorageLive(_1124);
        _1656 = const _;
        _1124 = &(*_1656);
        _1123 = &(*_1124);
        _1122 = move _1123 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1123);
        StorageLive(_1126);
        StorageLive(_1127);
        StorageLive(_1128);
        StorageLive(_1129);
        StorageLive(_1130);
        StorageLive(_1131);
        StorageLive(_1132);
        StorageLive(_1133);
        StorageLive(_1134);
        _1134 = &_1095;
        _1133 = ArrForm::<300>::as_str(move _1134) -> [return: bb401, unwind: bb623];
    }

    bb401: {
        StorageDead(_1134);
        _1132 = &_1133;
        _1131 = &(*_1132);
        _1130 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1131) -> [return: bb402, unwind: bb623];
    }

    bb402: {
        StorageDead(_1131);
        _1129 = [move _1130];
        StorageDead(_1130);
        _1128 = &_1129;
        _1127 = &(*_1128);
        _1126 = move _1127 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1127);
        _1121 = Arguments::<'_>::new_v1(move _1122, move _1126) -> [return: bb403, unwind: bb623];
    }

    bb403: {
        StorageDead(_1126);
        StorageDead(_1122);
        _1120 = format(move _1121) -> [return: bb404, unwind: bb623];
    }

    bb404: {
        StorageDead(_1121);
        StorageDead(_1133);
        StorageDead(_1132);
        StorageDead(_1129);
        StorageDead(_1128);
        StorageDead(_1124);
        _1119 = move _1120;
        StorageDead(_1120);
        _1118 = &_1119;
        _1117 = &(*_1118);
        _1116 = <String as Deref>::deref(move _1117) -> [return: bb405, unwind: bb599];
    }

    bb405: {
        _1115 = &(*_1116);
        StorageDead(_1117);
        _1114 = solana_program::log::sol_log(move _1115) -> [return: bb406, unwind: bb599];
    }

    bb406: {
        StorageDead(_1115);
        drop(_1119) -> [return: bb407, unwind: bb623];
    }

    bb407: {
        StorageDead(_1119);
        StorageDead(_1118);
        StorageDead(_1116);
        StorageDead(_1114);
        _1045 = const ();
        StorageDead(_1095);
        goto -> bb433;
    }

    bb408: {
        StorageLive(_1135);
        StorageLive(_1136);
        _1136 = ArrForm::<600>::new() -> [return: bb409, unwind: bb623];
    }

    bb409: {
        StorageLive(_1137);
        StorageLive(_1138);
        StorageLive(_1139);
        _1139 = &mut _1136;
        StorageLive(_1140);
        StorageLive(_1141);
        StorageLive(_1142);
        StorageLive(_1143);
        _1655 = const _;
        _1143 = &(*_1655);
        _1142 = &(*_1143);
        _1141 = move _1142 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1142);
        StorageLive(_1145);
        StorageLive(_1146);
        StorageLive(_1147);
        StorageLive(_1148);
        StorageLive(_1149);
        StorageLive(_1150);
        StorageLive(_1151);
        _1151 = &_156;
        _1150 = &(*_1151);
        _1149 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1150) -> [return: bb410, unwind: bb623];
    }

    bb410: {
        StorageDead(_1150);
        _1148 = [move _1149];
        StorageDead(_1149);
        _1147 = &_1148;
        _1146 = &(*_1147);
        _1145 = move _1146 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1146);
        _1140 = Arguments::<'_>::new_v1(move _1141, move _1145) -> [return: bb411, unwind: bb623];
    }

    bb411: {
        StorageDead(_1145);
        StorageDead(_1141);
        _1138 = ArrForm::<600>::format(move _1139, move _1140) -> [return: bb412, unwind: bb623];
    }

    bb412: {
        StorageDead(_1140);
        StorageDead(_1139);
        StorageLive(_1152);
        StorageLive(_1153);
        _1153 = &mut _1136;
        _1152 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1153 };
        StorageDead(_1153);
        _1137 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1138, move _1152) -> [return: bb413, unwind: bb623];
    }

    bb413: {
        StorageDead(_1152);
        StorageDead(_1138);
        StorageDead(_1151);
        StorageDead(_1148);
        StorageDead(_1147);
        StorageDead(_1143);
        StorageDead(_1137);
        _1135 = move _1136;
        StorageDead(_1136);
        StorageLive(_1154);
        StorageLive(_1155);
        StorageLive(_1156);
        StorageLive(_1157);
        StorageLive(_1158);
        StorageLive(_1159);
        StorageLive(_1160);
        StorageLive(_1161);
        StorageLive(_1162);
        StorageLive(_1163);
        StorageLive(_1164);
        _1654 = const _;
        _1164 = &(*_1654);
        _1163 = &(*_1164);
        _1162 = move _1163 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1163);
        StorageLive(_1166);
        StorageLive(_1167);
        StorageLive(_1168);
        StorageLive(_1169);
        StorageLive(_1170);
        StorageLive(_1171);
        StorageLive(_1172);
        StorageLive(_1173);
        StorageLive(_1174);
        _1174 = &_1135;
        _1173 = ArrForm::<600>::as_str(move _1174) -> [return: bb414, unwind: bb623];
    }

    bb414: {
        StorageDead(_1174);
        _1172 = &_1173;
        _1171 = &(*_1172);
        _1170 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1171) -> [return: bb415, unwind: bb623];
    }

    bb415: {
        StorageDead(_1171);
        _1169 = [move _1170];
        StorageDead(_1170);
        _1168 = &_1169;
        _1167 = &(*_1168);
        _1166 = move _1167 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1167);
        _1161 = Arguments::<'_>::new_v1(move _1162, move _1166) -> [return: bb416, unwind: bb623];
    }

    bb416: {
        StorageDead(_1166);
        StorageDead(_1162);
        _1160 = format(move _1161) -> [return: bb417, unwind: bb623];
    }

    bb417: {
        StorageDead(_1161);
        StorageDead(_1173);
        StorageDead(_1172);
        StorageDead(_1169);
        StorageDead(_1168);
        StorageDead(_1164);
        _1159 = move _1160;
        StorageDead(_1160);
        _1158 = &_1159;
        _1157 = &(*_1158);
        _1156 = <String as Deref>::deref(move _1157) -> [return: bb418, unwind: bb598];
    }

    bb418: {
        _1155 = &(*_1156);
        StorageDead(_1157);
        _1154 = solana_program::log::sol_log(move _1155) -> [return: bb419, unwind: bb598];
    }

    bb419: {
        StorageDead(_1155);
        drop(_1159) -> [return: bb420, unwind: bb623];
    }

    bb420: {
        StorageDead(_1159);
        StorageDead(_1158);
        StorageDead(_1156);
        StorageDead(_1154);
        _1045 = const ();
        StorageDead(_1135);
        goto -> bb433;
    }

    bb421: {
        StorageLive(_1177);
        StorageLive(_1178);
        StorageLive(_1179);
        _1179 = &mut _1176;
        StorageLive(_1180);
        StorageLive(_1181);
        StorageLive(_1182);
        StorageLive(_1183);
        _1653 = const _;
        _1183 = &(*_1653);
        _1182 = &(*_1183);
        _1181 = move _1182 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1182);
        StorageLive(_1185);
        StorageLive(_1186);
        StorageLive(_1187);
        StorageLive(_1188);
        StorageLive(_1189);
        StorageLive(_1190);
        StorageLive(_1191);
        _1191 = &_156;
        _1190 = &(*_1191);
        _1189 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1190) -> [return: bb422, unwind: bb623];
    }

    bb422: {
        StorageDead(_1190);
        _1188 = [move _1189];
        StorageDead(_1189);
        _1187 = &_1188;
        _1186 = &(*_1187);
        _1185 = move _1186 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1186);
        _1180 = Arguments::<'_>::new_v1(move _1181, move _1185) -> [return: bb423, unwind: bb623];
    }

    bb423: {
        StorageDead(_1185);
        StorageDead(_1181);
        _1178 = ArrForm::<1200>::format(move _1179, move _1180) -> [return: bb424, unwind: bb623];
    }

    bb424: {
        StorageDead(_1180);
        StorageDead(_1179);
        StorageLive(_1192);
        StorageLive(_1193);
        _1193 = &mut _1176;
        _1192 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1193 };
        StorageDead(_1193);
        _1177 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1178, move _1192) -> [return: bb425, unwind: bb623];
    }

    bb425: {
        StorageDead(_1192);
        StorageDead(_1178);
        StorageDead(_1191);
        StorageDead(_1188);
        StorageDead(_1187);
        StorageDead(_1183);
        StorageDead(_1177);
        _1175 = move _1176;
        StorageDead(_1176);
        StorageLive(_1194);
        StorageLive(_1195);
        StorageLive(_1196);
        StorageLive(_1197);
        StorageLive(_1198);
        StorageLive(_1199);
        StorageLive(_1200);
        StorageLive(_1201);
        StorageLive(_1202);
        StorageLive(_1203);
        StorageLive(_1204);
        _1652 = const _;
        _1204 = &(*_1652);
        _1203 = &(*_1204);
        _1202 = move _1203 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1203);
        StorageLive(_1206);
        StorageLive(_1207);
        StorageLive(_1208);
        StorageLive(_1209);
        StorageLive(_1210);
        StorageLive(_1211);
        StorageLive(_1212);
        StorageLive(_1213);
        StorageLive(_1214);
        _1214 = &_1175;
        _1213 = ArrForm::<1200>::as_str(move _1214) -> [return: bb426, unwind: bb623];
    }

    bb426: {
        StorageDead(_1214);
        _1212 = &_1213;
        _1211 = &(*_1212);
        _1210 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1211) -> [return: bb427, unwind: bb623];
    }

    bb427: {
        StorageDead(_1211);
        _1209 = [move _1210];
        StorageDead(_1210);
        _1208 = &_1209;
        _1207 = &(*_1208);
        _1206 = move _1207 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1207);
        _1201 = Arguments::<'_>::new_v1(move _1202, move _1206) -> [return: bb428, unwind: bb623];
    }

    bb428: {
        StorageDead(_1206);
        StorageDead(_1202);
        _1200 = format(move _1201) -> [return: bb429, unwind: bb623];
    }

    bb429: {
        StorageDead(_1201);
        StorageDead(_1213);
        StorageDead(_1212);
        StorageDead(_1209);
        StorageDead(_1208);
        StorageDead(_1204);
        _1199 = move _1200;
        StorageDead(_1200);
        _1198 = &_1199;
        _1197 = &(*_1198);
        _1196 = <String as Deref>::deref(move _1197) -> [return: bb430, unwind: bb597];
    }

    bb430: {
        _1195 = &(*_1196);
        StorageDead(_1197);
        _1194 = solana_program::log::sol_log(move _1195) -> [return: bb431, unwind: bb597];
    }

    bb431: {
        StorageDead(_1195);
        drop(_1199) -> [return: bb432, unwind: bb623];
    }

    bb432: {
        StorageDead(_1199);
        StorageDead(_1198);
        StorageDead(_1196);
        StorageDead(_1194);
        _1045 = const ();
        StorageDead(_1175);
        goto -> bb433;
    }

    bb433: {
        StorageDead(_1048);
        StorageDead(_1046);
        StorageDead(_1045);
        StorageLive(_1215);
        StorageLive(_1216);
        StorageLive(_1217);
        StorageLive(_1218);
        _1218 = const "Expected c tokens {}";
        _1217 = &(*_1218);
        _1216 = core::str::<impl str>::len(move _1217) -> [return: bb434, unwind: bb623];
    }

    bb434: {
        StorageDead(_1217);
        _1223 = Le(const 0_usize, _1216);
        switchInt(move _1223) -> [0: bb436, otherwise: bb435];
    }

    bb435: {
        _1224 = Le(_1216, const 50_usize);
        switchInt(move _1224) -> [0: bb436, otherwise: bb441];
    }

    bb436: {
        _1221 = Le(const 51_usize, _1216);
        switchInt(move _1221) -> [0: bb438, otherwise: bb437];
    }

    bb437: {
        _1222 = Le(_1216, const 100_usize);
        switchInt(move _1222) -> [0: bb438, otherwise: bb454];
    }

    bb438: {
        _1219 = Le(const 101_usize, _1216);
        switchInt(move _1219) -> [0: bb440, otherwise: bb439];
    }

    bb439: {
        _1220 = Le(_1216, const 200_usize);
        switchInt(move _1220) -> [0: bb440, otherwise: bb467];
    }

    bb440: {
        StorageLive(_1345);
        StorageLive(_1346);
        _1346 = ArrForm::<1200>::new() -> [return: bb480, unwind: bb623];
    }

    bb441: {
        StorageLive(_1225);
        StorageLive(_1226);
        _1226 = ArrForm::<150>::new() -> [return: bb442, unwind: bb623];
    }

    bb442: {
        StorageLive(_1227);
        StorageLive(_1228);
        StorageLive(_1229);
        _1229 = &mut _1226;
        StorageLive(_1230);
        StorageLive(_1231);
        StorageLive(_1232);
        StorageLive(_1233);
        _1651 = const _;
        _1233 = &(*_1651);
        _1232 = &(*_1233);
        _1231 = move _1232 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1232);
        StorageLive(_1235);
        StorageLive(_1236);
        StorageLive(_1237);
        StorageLive(_1238);
        StorageLive(_1239);
        StorageLive(_1240);
        StorageLive(_1241);
        _1241 = &_91;
        _1240 = &(*_1241);
        _1239 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1240) -> [return: bb443, unwind: bb623];
    }

    bb443: {
        StorageDead(_1240);
        _1238 = [move _1239];
        StorageDead(_1239);
        _1237 = &_1238;
        _1236 = &(*_1237);
        _1235 = move _1236 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1236);
        _1230 = Arguments::<'_>::new_v1(move _1231, move _1235) -> [return: bb444, unwind: bb623];
    }

    bb444: {
        StorageDead(_1235);
        StorageDead(_1231);
        _1228 = ArrForm::<150>::format(move _1229, move _1230) -> [return: bb445, unwind: bb623];
    }

    bb445: {
        StorageDead(_1230);
        StorageDead(_1229);
        StorageLive(_1242);
        StorageLive(_1243);
        _1243 = &mut _1226;
        _1242 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1243 };
        StorageDead(_1243);
        _1227 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1228, move _1242) -> [return: bb446, unwind: bb623];
    }

    bb446: {
        StorageDead(_1242);
        StorageDead(_1228);
        StorageDead(_1241);
        StorageDead(_1238);
        StorageDead(_1237);
        StorageDead(_1233);
        StorageDead(_1227);
        _1225 = move _1226;
        StorageDead(_1226);
        StorageLive(_1244);
        StorageLive(_1245);
        StorageLive(_1246);
        StorageLive(_1247);
        StorageLive(_1248);
        StorageLive(_1249);
        StorageLive(_1250);
        StorageLive(_1251);
        StorageLive(_1252);
        StorageLive(_1253);
        StorageLive(_1254);
        _1650 = const _;
        _1254 = &(*_1650);
        _1253 = &(*_1254);
        _1252 = move _1253 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1253);
        StorageLive(_1256);
        StorageLive(_1257);
        StorageLive(_1258);
        StorageLive(_1259);
        StorageLive(_1260);
        StorageLive(_1261);
        StorageLive(_1262);
        StorageLive(_1263);
        StorageLive(_1264);
        _1264 = &_1225;
        _1263 = ArrForm::<150>::as_str(move _1264) -> [return: bb447, unwind: bb623];
    }

    bb447: {
        StorageDead(_1264);
        _1262 = &_1263;
        _1261 = &(*_1262);
        _1260 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1261) -> [return: bb448, unwind: bb623];
    }

    bb448: {
        StorageDead(_1261);
        _1259 = [move _1260];
        StorageDead(_1260);
        _1258 = &_1259;
        _1257 = &(*_1258);
        _1256 = move _1257 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1257);
        _1251 = Arguments::<'_>::new_v1(move _1252, move _1256) -> [return: bb449, unwind: bb623];
    }

    bb449: {
        StorageDead(_1256);
        StorageDead(_1252);
        _1250 = format(move _1251) -> [return: bb450, unwind: bb623];
    }

    bb450: {
        StorageDead(_1251);
        StorageDead(_1263);
        StorageDead(_1262);
        StorageDead(_1259);
        StorageDead(_1258);
        StorageDead(_1254);
        _1249 = move _1250;
        StorageDead(_1250);
        _1248 = &_1249;
        _1247 = &(*_1248);
        _1246 = <String as Deref>::deref(move _1247) -> [return: bb451, unwind: bb596];
    }

    bb451: {
        _1245 = &(*_1246);
        StorageDead(_1247);
        _1244 = solana_program::log::sol_log(move _1245) -> [return: bb452, unwind: bb596];
    }

    bb452: {
        StorageDead(_1245);
        drop(_1249) -> [return: bb453, unwind: bb623];
    }

    bb453: {
        StorageDead(_1249);
        StorageDead(_1248);
        StorageDead(_1246);
        StorageDead(_1244);
        _1215 = const ();
        StorageDead(_1225);
        goto -> bb492;
    }

    bb454: {
        StorageLive(_1265);
        StorageLive(_1266);
        _1266 = ArrForm::<300>::new() -> [return: bb455, unwind: bb623];
    }

    bb455: {
        StorageLive(_1267);
        StorageLive(_1268);
        StorageLive(_1269);
        _1269 = &mut _1266;
        StorageLive(_1270);
        StorageLive(_1271);
        StorageLive(_1272);
        StorageLive(_1273);
        _1649 = const _;
        _1273 = &(*_1649);
        _1272 = &(*_1273);
        _1271 = move _1272 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1272);
        StorageLive(_1275);
        StorageLive(_1276);
        StorageLive(_1277);
        StorageLive(_1278);
        StorageLive(_1279);
        StorageLive(_1280);
        StorageLive(_1281);
        _1281 = &_91;
        _1280 = &(*_1281);
        _1279 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1280) -> [return: bb456, unwind: bb623];
    }

    bb456: {
        StorageDead(_1280);
        _1278 = [move _1279];
        StorageDead(_1279);
        _1277 = &_1278;
        _1276 = &(*_1277);
        _1275 = move _1276 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1276);
        _1270 = Arguments::<'_>::new_v1(move _1271, move _1275) -> [return: bb457, unwind: bb623];
    }

    bb457: {
        StorageDead(_1275);
        StorageDead(_1271);
        _1268 = ArrForm::<300>::format(move _1269, move _1270) -> [return: bb458, unwind: bb623];
    }

    bb458: {
        StorageDead(_1270);
        StorageDead(_1269);
        StorageLive(_1282);
        StorageLive(_1283);
        _1283 = &mut _1266;
        _1282 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1283 };
        StorageDead(_1283);
        _1267 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1268, move _1282) -> [return: bb459, unwind: bb623];
    }

    bb459: {
        StorageDead(_1282);
        StorageDead(_1268);
        StorageDead(_1281);
        StorageDead(_1278);
        StorageDead(_1277);
        StorageDead(_1273);
        StorageDead(_1267);
        _1265 = move _1266;
        StorageDead(_1266);
        StorageLive(_1284);
        StorageLive(_1285);
        StorageLive(_1286);
        StorageLive(_1287);
        StorageLive(_1288);
        StorageLive(_1289);
        StorageLive(_1290);
        StorageLive(_1291);
        StorageLive(_1292);
        StorageLive(_1293);
        StorageLive(_1294);
        _1648 = const _;
        _1294 = &(*_1648);
        _1293 = &(*_1294);
        _1292 = move _1293 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1293);
        StorageLive(_1296);
        StorageLive(_1297);
        StorageLive(_1298);
        StorageLive(_1299);
        StorageLive(_1300);
        StorageLive(_1301);
        StorageLive(_1302);
        StorageLive(_1303);
        StorageLive(_1304);
        _1304 = &_1265;
        _1303 = ArrForm::<300>::as_str(move _1304) -> [return: bb460, unwind: bb623];
    }

    bb460: {
        StorageDead(_1304);
        _1302 = &_1303;
        _1301 = &(*_1302);
        _1300 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1301) -> [return: bb461, unwind: bb623];
    }

    bb461: {
        StorageDead(_1301);
        _1299 = [move _1300];
        StorageDead(_1300);
        _1298 = &_1299;
        _1297 = &(*_1298);
        _1296 = move _1297 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1297);
        _1291 = Arguments::<'_>::new_v1(move _1292, move _1296) -> [return: bb462, unwind: bb623];
    }

    bb462: {
        StorageDead(_1296);
        StorageDead(_1292);
        _1290 = format(move _1291) -> [return: bb463, unwind: bb623];
    }

    bb463: {
        StorageDead(_1291);
        StorageDead(_1303);
        StorageDead(_1302);
        StorageDead(_1299);
        StorageDead(_1298);
        StorageDead(_1294);
        _1289 = move _1290;
        StorageDead(_1290);
        _1288 = &_1289;
        _1287 = &(*_1288);
        _1286 = <String as Deref>::deref(move _1287) -> [return: bb464, unwind: bb595];
    }

    bb464: {
        _1285 = &(*_1286);
        StorageDead(_1287);
        _1284 = solana_program::log::sol_log(move _1285) -> [return: bb465, unwind: bb595];
    }

    bb465: {
        StorageDead(_1285);
        drop(_1289) -> [return: bb466, unwind: bb623];
    }

    bb466: {
        StorageDead(_1289);
        StorageDead(_1288);
        StorageDead(_1286);
        StorageDead(_1284);
        _1215 = const ();
        StorageDead(_1265);
        goto -> bb492;
    }

    bb467: {
        StorageLive(_1305);
        StorageLive(_1306);
        _1306 = ArrForm::<600>::new() -> [return: bb468, unwind: bb623];
    }

    bb468: {
        StorageLive(_1307);
        StorageLive(_1308);
        StorageLive(_1309);
        _1309 = &mut _1306;
        StorageLive(_1310);
        StorageLive(_1311);
        StorageLive(_1312);
        StorageLive(_1313);
        _1647 = const _;
        _1313 = &(*_1647);
        _1312 = &(*_1313);
        _1311 = move _1312 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1312);
        StorageLive(_1315);
        StorageLive(_1316);
        StorageLive(_1317);
        StorageLive(_1318);
        StorageLive(_1319);
        StorageLive(_1320);
        StorageLive(_1321);
        _1321 = &_91;
        _1320 = &(*_1321);
        _1319 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1320) -> [return: bb469, unwind: bb623];
    }

    bb469: {
        StorageDead(_1320);
        _1318 = [move _1319];
        StorageDead(_1319);
        _1317 = &_1318;
        _1316 = &(*_1317);
        _1315 = move _1316 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1316);
        _1310 = Arguments::<'_>::new_v1(move _1311, move _1315) -> [return: bb470, unwind: bb623];
    }

    bb470: {
        StorageDead(_1315);
        StorageDead(_1311);
        _1308 = ArrForm::<600>::format(move _1309, move _1310) -> [return: bb471, unwind: bb623];
    }

    bb471: {
        StorageDead(_1310);
        StorageDead(_1309);
        StorageLive(_1322);
        StorageLive(_1323);
        _1323 = &mut _1306;
        _1322 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1323 };
        StorageDead(_1323);
        _1307 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1308, move _1322) -> [return: bb472, unwind: bb623];
    }

    bb472: {
        StorageDead(_1322);
        StorageDead(_1308);
        StorageDead(_1321);
        StorageDead(_1318);
        StorageDead(_1317);
        StorageDead(_1313);
        StorageDead(_1307);
        _1305 = move _1306;
        StorageDead(_1306);
        StorageLive(_1324);
        StorageLive(_1325);
        StorageLive(_1326);
        StorageLive(_1327);
        StorageLive(_1328);
        StorageLive(_1329);
        StorageLive(_1330);
        StorageLive(_1331);
        StorageLive(_1332);
        StorageLive(_1333);
        StorageLive(_1334);
        _1646 = const _;
        _1334 = &(*_1646);
        _1333 = &(*_1334);
        _1332 = move _1333 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1333);
        StorageLive(_1336);
        StorageLive(_1337);
        StorageLive(_1338);
        StorageLive(_1339);
        StorageLive(_1340);
        StorageLive(_1341);
        StorageLive(_1342);
        StorageLive(_1343);
        StorageLive(_1344);
        _1344 = &_1305;
        _1343 = ArrForm::<600>::as_str(move _1344) -> [return: bb473, unwind: bb623];
    }

    bb473: {
        StorageDead(_1344);
        _1342 = &_1343;
        _1341 = &(*_1342);
        _1340 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1341) -> [return: bb474, unwind: bb623];
    }

    bb474: {
        StorageDead(_1341);
        _1339 = [move _1340];
        StorageDead(_1340);
        _1338 = &_1339;
        _1337 = &(*_1338);
        _1336 = move _1337 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1337);
        _1331 = Arguments::<'_>::new_v1(move _1332, move _1336) -> [return: bb475, unwind: bb623];
    }

    bb475: {
        StorageDead(_1336);
        StorageDead(_1332);
        _1330 = format(move _1331) -> [return: bb476, unwind: bb623];
    }

    bb476: {
        StorageDead(_1331);
        StorageDead(_1343);
        StorageDead(_1342);
        StorageDead(_1339);
        StorageDead(_1338);
        StorageDead(_1334);
        _1329 = move _1330;
        StorageDead(_1330);
        _1328 = &_1329;
        _1327 = &(*_1328);
        _1326 = <String as Deref>::deref(move _1327) -> [return: bb477, unwind: bb594];
    }

    bb477: {
        _1325 = &(*_1326);
        StorageDead(_1327);
        _1324 = solana_program::log::sol_log(move _1325) -> [return: bb478, unwind: bb594];
    }

    bb478: {
        StorageDead(_1325);
        drop(_1329) -> [return: bb479, unwind: bb623];
    }

    bb479: {
        StorageDead(_1329);
        StorageDead(_1328);
        StorageDead(_1326);
        StorageDead(_1324);
        _1215 = const ();
        StorageDead(_1305);
        goto -> bb492;
    }

    bb480: {
        StorageLive(_1347);
        StorageLive(_1348);
        StorageLive(_1349);
        _1349 = &mut _1346;
        StorageLive(_1350);
        StorageLive(_1351);
        StorageLive(_1352);
        StorageLive(_1353);
        _1645 = const _;
        _1353 = &(*_1645);
        _1352 = &(*_1353);
        _1351 = move _1352 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1352);
        StorageLive(_1355);
        StorageLive(_1356);
        StorageLive(_1357);
        StorageLive(_1358);
        StorageLive(_1359);
        StorageLive(_1360);
        StorageLive(_1361);
        _1361 = &_91;
        _1360 = &(*_1361);
        _1359 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1360) -> [return: bb481, unwind: bb623];
    }

    bb481: {
        StorageDead(_1360);
        _1358 = [move _1359];
        StorageDead(_1359);
        _1357 = &_1358;
        _1356 = &(*_1357);
        _1355 = move _1356 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1356);
        _1350 = Arguments::<'_>::new_v1(move _1351, move _1355) -> [return: bb482, unwind: bb623];
    }

    bb482: {
        StorageDead(_1355);
        StorageDead(_1351);
        _1348 = ArrForm::<1200>::format(move _1349, move _1350) -> [return: bb483, unwind: bb623];
    }

    bb483: {
        StorageDead(_1350);
        StorageDead(_1349);
        StorageLive(_1362);
        StorageLive(_1363);
        _1363 = &mut _1346;
        _1362 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1363 };
        StorageDead(_1363);
        _1347 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1348, move _1362) -> [return: bb484, unwind: bb623];
    }

    bb484: {
        StorageDead(_1362);
        StorageDead(_1348);
        StorageDead(_1361);
        StorageDead(_1358);
        StorageDead(_1357);
        StorageDead(_1353);
        StorageDead(_1347);
        _1345 = move _1346;
        StorageDead(_1346);
        StorageLive(_1364);
        StorageLive(_1365);
        StorageLive(_1366);
        StorageLive(_1367);
        StorageLive(_1368);
        StorageLive(_1369);
        StorageLive(_1370);
        StorageLive(_1371);
        StorageLive(_1372);
        StorageLive(_1373);
        StorageLive(_1374);
        _1644 = const _;
        _1374 = &(*_1644);
        _1373 = &(*_1374);
        _1372 = move _1373 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1373);
        StorageLive(_1376);
        StorageLive(_1377);
        StorageLive(_1378);
        StorageLive(_1379);
        StorageLive(_1380);
        StorageLive(_1381);
        StorageLive(_1382);
        StorageLive(_1383);
        StorageLive(_1384);
        _1384 = &_1345;
        _1383 = ArrForm::<1200>::as_str(move _1384) -> [return: bb485, unwind: bb623];
    }

    bb485: {
        StorageDead(_1384);
        _1382 = &_1383;
        _1381 = &(*_1382);
        _1380 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1381) -> [return: bb486, unwind: bb623];
    }

    bb486: {
        StorageDead(_1381);
        _1379 = [move _1380];
        StorageDead(_1380);
        _1378 = &_1379;
        _1377 = &(*_1378);
        _1376 = move _1377 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1377);
        _1371 = Arguments::<'_>::new_v1(move _1372, move _1376) -> [return: bb487, unwind: bb623];
    }

    bb487: {
        StorageDead(_1376);
        StorageDead(_1372);
        _1370 = format(move _1371) -> [return: bb488, unwind: bb623];
    }

    bb488: {
        StorageDead(_1371);
        StorageDead(_1383);
        StorageDead(_1382);
        StorageDead(_1379);
        StorageDead(_1378);
        StorageDead(_1374);
        _1369 = move _1370;
        StorageDead(_1370);
        _1368 = &_1369;
        _1367 = &(*_1368);
        _1366 = <String as Deref>::deref(move _1367) -> [return: bb489, unwind: bb593];
    }

    bb489: {
        _1365 = &(*_1366);
        StorageDead(_1367);
        _1364 = solana_program::log::sol_log(move _1365) -> [return: bb490, unwind: bb593];
    }

    bb490: {
        StorageDead(_1365);
        drop(_1369) -> [return: bb491, unwind: bb623];
    }

    bb491: {
        StorageDead(_1369);
        StorageDead(_1368);
        StorageDead(_1366);
        StorageDead(_1364);
        _1215 = const ();
        StorageDead(_1345);
        goto -> bb492;
    }

    bb492: {
        StorageDead(_1218);
        StorageDead(_1216);
        StorageDead(_1215);
        StorageLive(_1385);
        StorageLive(_1386);
        StorageLive(_1387);
        StorageLive(_1388);
        _1388 = const "Expected liq {}";
        _1387 = &(*_1388);
        _1386 = core::str::<impl str>::len(move _1387) -> [return: bb493, unwind: bb623];
    }

    bb493: {
        StorageDead(_1387);
        _1393 = Le(const 0_usize, _1386);
        switchInt(move _1393) -> [0: bb495, otherwise: bb494];
    }

    bb494: {
        _1394 = Le(_1386, const 50_usize);
        switchInt(move _1394) -> [0: bb495, otherwise: bb500];
    }

    bb495: {
        _1391 = Le(const 51_usize, _1386);
        switchInt(move _1391) -> [0: bb497, otherwise: bb496];
    }

    bb496: {
        _1392 = Le(_1386, const 100_usize);
        switchInt(move _1392) -> [0: bb497, otherwise: bb513];
    }

    bb497: {
        _1389 = Le(const 101_usize, _1386);
        switchInt(move _1389) -> [0: bb499, otherwise: bb498];
    }

    bb498: {
        _1390 = Le(_1386, const 200_usize);
        switchInt(move _1390) -> [0: bb499, otherwise: bb526];
    }

    bb499: {
        StorageLive(_1515);
        StorageLive(_1516);
        _1516 = ArrForm::<1200>::new() -> [return: bb539, unwind: bb623];
    }

    bb500: {
        StorageLive(_1395);
        StorageLive(_1396);
        _1396 = ArrForm::<150>::new() -> [return: bb501, unwind: bb623];
    }

    bb501: {
        StorageLive(_1397);
        StorageLive(_1398);
        StorageLive(_1399);
        _1399 = &mut _1396;
        StorageLive(_1400);
        StorageLive(_1401);
        StorageLive(_1402);
        StorageLive(_1403);
        _1643 = const _;
        _1403 = &(*_1643);
        _1402 = &(*_1403);
        _1401 = move _1402 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1402);
        StorageLive(_1405);
        StorageLive(_1406);
        StorageLive(_1407);
        StorageLive(_1408);
        StorageLive(_1409);
        StorageLive(_1410);
        StorageLive(_1411);
        _1411 = &_90;
        _1410 = &(*_1411);
        _1409 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1410) -> [return: bb502, unwind: bb623];
    }

    bb502: {
        StorageDead(_1410);
        _1408 = [move _1409];
        StorageDead(_1409);
        _1407 = &_1408;
        _1406 = &(*_1407);
        _1405 = move _1406 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1406);
        _1400 = Arguments::<'_>::new_v1(move _1401, move _1405) -> [return: bb503, unwind: bb623];
    }

    bb503: {
        StorageDead(_1405);
        StorageDead(_1401);
        _1398 = ArrForm::<150>::format(move _1399, move _1400) -> [return: bb504, unwind: bb623];
    }

    bb504: {
        StorageDead(_1400);
        StorageDead(_1399);
        StorageLive(_1412);
        StorageLive(_1413);
        _1413 = &mut _1396;
        _1412 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1413 };
        StorageDead(_1413);
        _1397 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1398, move _1412) -> [return: bb505, unwind: bb623];
    }

    bb505: {
        StorageDead(_1412);
        StorageDead(_1398);
        StorageDead(_1411);
        StorageDead(_1408);
        StorageDead(_1407);
        StorageDead(_1403);
        StorageDead(_1397);
        _1395 = move _1396;
        StorageDead(_1396);
        StorageLive(_1414);
        StorageLive(_1415);
        StorageLive(_1416);
        StorageLive(_1417);
        StorageLive(_1418);
        StorageLive(_1419);
        StorageLive(_1420);
        StorageLive(_1421);
        StorageLive(_1422);
        StorageLive(_1423);
        StorageLive(_1424);
        _1642 = const _;
        _1424 = &(*_1642);
        _1423 = &(*_1424);
        _1422 = move _1423 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1423);
        StorageLive(_1426);
        StorageLive(_1427);
        StorageLive(_1428);
        StorageLive(_1429);
        StorageLive(_1430);
        StorageLive(_1431);
        StorageLive(_1432);
        StorageLive(_1433);
        StorageLive(_1434);
        _1434 = &_1395;
        _1433 = ArrForm::<150>::as_str(move _1434) -> [return: bb506, unwind: bb623];
    }

    bb506: {
        StorageDead(_1434);
        _1432 = &_1433;
        _1431 = &(*_1432);
        _1430 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1431) -> [return: bb507, unwind: bb623];
    }

    bb507: {
        StorageDead(_1431);
        _1429 = [move _1430];
        StorageDead(_1430);
        _1428 = &_1429;
        _1427 = &(*_1428);
        _1426 = move _1427 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1427);
        _1421 = Arguments::<'_>::new_v1(move _1422, move _1426) -> [return: bb508, unwind: bb623];
    }

    bb508: {
        StorageDead(_1426);
        StorageDead(_1422);
        _1420 = format(move _1421) -> [return: bb509, unwind: bb623];
    }

    bb509: {
        StorageDead(_1421);
        StorageDead(_1433);
        StorageDead(_1432);
        StorageDead(_1429);
        StorageDead(_1428);
        StorageDead(_1424);
        _1419 = move _1420;
        StorageDead(_1420);
        _1418 = &_1419;
        _1417 = &(*_1418);
        _1416 = <String as Deref>::deref(move _1417) -> [return: bb510, unwind: bb592];
    }

    bb510: {
        _1415 = &(*_1416);
        StorageDead(_1417);
        _1414 = solana_program::log::sol_log(move _1415) -> [return: bb511, unwind: bb592];
    }

    bb511: {
        StorageDead(_1415);
        drop(_1419) -> [return: bb512, unwind: bb623];
    }

    bb512: {
        StorageDead(_1419);
        StorageDead(_1418);
        StorageDead(_1416);
        StorageDead(_1414);
        _1385 = const ();
        StorageDead(_1395);
        goto -> bb551;
    }

    bb513: {
        StorageLive(_1435);
        StorageLive(_1436);
        _1436 = ArrForm::<300>::new() -> [return: bb514, unwind: bb623];
    }

    bb514: {
        StorageLive(_1437);
        StorageLive(_1438);
        StorageLive(_1439);
        _1439 = &mut _1436;
        StorageLive(_1440);
        StorageLive(_1441);
        StorageLive(_1442);
        StorageLive(_1443);
        _1641 = const _;
        _1443 = &(*_1641);
        _1442 = &(*_1443);
        _1441 = move _1442 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1442);
        StorageLive(_1445);
        StorageLive(_1446);
        StorageLive(_1447);
        StorageLive(_1448);
        StorageLive(_1449);
        StorageLive(_1450);
        StorageLive(_1451);
        _1451 = &_90;
        _1450 = &(*_1451);
        _1449 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1450) -> [return: bb515, unwind: bb623];
    }

    bb515: {
        StorageDead(_1450);
        _1448 = [move _1449];
        StorageDead(_1449);
        _1447 = &_1448;
        _1446 = &(*_1447);
        _1445 = move _1446 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1446);
        _1440 = Arguments::<'_>::new_v1(move _1441, move _1445) -> [return: bb516, unwind: bb623];
    }

    bb516: {
        StorageDead(_1445);
        StorageDead(_1441);
        _1438 = ArrForm::<300>::format(move _1439, move _1440) -> [return: bb517, unwind: bb623];
    }

    bb517: {
        StorageDead(_1440);
        StorageDead(_1439);
        StorageLive(_1452);
        StorageLive(_1453);
        _1453 = &mut _1436;
        _1452 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1453 };
        StorageDead(_1453);
        _1437 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1438, move _1452) -> [return: bb518, unwind: bb623];
    }

    bb518: {
        StorageDead(_1452);
        StorageDead(_1438);
        StorageDead(_1451);
        StorageDead(_1448);
        StorageDead(_1447);
        StorageDead(_1443);
        StorageDead(_1437);
        _1435 = move _1436;
        StorageDead(_1436);
        StorageLive(_1454);
        StorageLive(_1455);
        StorageLive(_1456);
        StorageLive(_1457);
        StorageLive(_1458);
        StorageLive(_1459);
        StorageLive(_1460);
        StorageLive(_1461);
        StorageLive(_1462);
        StorageLive(_1463);
        StorageLive(_1464);
        _1640 = const _;
        _1464 = &(*_1640);
        _1463 = &(*_1464);
        _1462 = move _1463 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1463);
        StorageLive(_1466);
        StorageLive(_1467);
        StorageLive(_1468);
        StorageLive(_1469);
        StorageLive(_1470);
        StorageLive(_1471);
        StorageLive(_1472);
        StorageLive(_1473);
        StorageLive(_1474);
        _1474 = &_1435;
        _1473 = ArrForm::<300>::as_str(move _1474) -> [return: bb519, unwind: bb623];
    }

    bb519: {
        StorageDead(_1474);
        _1472 = &_1473;
        _1471 = &(*_1472);
        _1470 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1471) -> [return: bb520, unwind: bb623];
    }

    bb520: {
        StorageDead(_1471);
        _1469 = [move _1470];
        StorageDead(_1470);
        _1468 = &_1469;
        _1467 = &(*_1468);
        _1466 = move _1467 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1467);
        _1461 = Arguments::<'_>::new_v1(move _1462, move _1466) -> [return: bb521, unwind: bb623];
    }

    bb521: {
        StorageDead(_1466);
        StorageDead(_1462);
        _1460 = format(move _1461) -> [return: bb522, unwind: bb623];
    }

    bb522: {
        StorageDead(_1461);
        StorageDead(_1473);
        StorageDead(_1472);
        StorageDead(_1469);
        StorageDead(_1468);
        StorageDead(_1464);
        _1459 = move _1460;
        StorageDead(_1460);
        _1458 = &_1459;
        _1457 = &(*_1458);
        _1456 = <String as Deref>::deref(move _1457) -> [return: bb523, unwind: bb591];
    }

    bb523: {
        _1455 = &(*_1456);
        StorageDead(_1457);
        _1454 = solana_program::log::sol_log(move _1455) -> [return: bb524, unwind: bb591];
    }

    bb524: {
        StorageDead(_1455);
        drop(_1459) -> [return: bb525, unwind: bb623];
    }

    bb525: {
        StorageDead(_1459);
        StorageDead(_1458);
        StorageDead(_1456);
        StorageDead(_1454);
        _1385 = const ();
        StorageDead(_1435);
        goto -> bb551;
    }

    bb526: {
        StorageLive(_1475);
        StorageLive(_1476);
        _1476 = ArrForm::<600>::new() -> [return: bb527, unwind: bb623];
    }

    bb527: {
        StorageLive(_1477);
        StorageLive(_1478);
        StorageLive(_1479);
        _1479 = &mut _1476;
        StorageLive(_1480);
        StorageLive(_1481);
        StorageLive(_1482);
        StorageLive(_1483);
        _1639 = const _;
        _1483 = &(*_1639);
        _1482 = &(*_1483);
        _1481 = move _1482 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1482);
        StorageLive(_1485);
        StorageLive(_1486);
        StorageLive(_1487);
        StorageLive(_1488);
        StorageLive(_1489);
        StorageLive(_1490);
        StorageLive(_1491);
        _1491 = &_90;
        _1490 = &(*_1491);
        _1489 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1490) -> [return: bb528, unwind: bb623];
    }

    bb528: {
        StorageDead(_1490);
        _1488 = [move _1489];
        StorageDead(_1489);
        _1487 = &_1488;
        _1486 = &(*_1487);
        _1485 = move _1486 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1486);
        _1480 = Arguments::<'_>::new_v1(move _1481, move _1485) -> [return: bb529, unwind: bb623];
    }

    bb529: {
        StorageDead(_1485);
        StorageDead(_1481);
        _1478 = ArrForm::<600>::format(move _1479, move _1480) -> [return: bb530, unwind: bb623];
    }

    bb530: {
        StorageDead(_1480);
        StorageDead(_1479);
        StorageLive(_1492);
        StorageLive(_1493);
        _1493 = &mut _1476;
        _1492 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1493 };
        StorageDead(_1493);
        _1477 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1478, move _1492) -> [return: bb531, unwind: bb623];
    }

    bb531: {
        StorageDead(_1492);
        StorageDead(_1478);
        StorageDead(_1491);
        StorageDead(_1488);
        StorageDead(_1487);
        StorageDead(_1483);
        StorageDead(_1477);
        _1475 = move _1476;
        StorageDead(_1476);
        StorageLive(_1494);
        StorageLive(_1495);
        StorageLive(_1496);
        StorageLive(_1497);
        StorageLive(_1498);
        StorageLive(_1499);
        StorageLive(_1500);
        StorageLive(_1501);
        StorageLive(_1502);
        StorageLive(_1503);
        StorageLive(_1504);
        _1638 = const _;
        _1504 = &(*_1638);
        _1503 = &(*_1504);
        _1502 = move _1503 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1503);
        StorageLive(_1506);
        StorageLive(_1507);
        StorageLive(_1508);
        StorageLive(_1509);
        StorageLive(_1510);
        StorageLive(_1511);
        StorageLive(_1512);
        StorageLive(_1513);
        StorageLive(_1514);
        _1514 = &_1475;
        _1513 = ArrForm::<600>::as_str(move _1514) -> [return: bb532, unwind: bb623];
    }

    bb532: {
        StorageDead(_1514);
        _1512 = &_1513;
        _1511 = &(*_1512);
        _1510 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1511) -> [return: bb533, unwind: bb623];
    }

    bb533: {
        StorageDead(_1511);
        _1509 = [move _1510];
        StorageDead(_1510);
        _1508 = &_1509;
        _1507 = &(*_1508);
        _1506 = move _1507 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1507);
        _1501 = Arguments::<'_>::new_v1(move _1502, move _1506) -> [return: bb534, unwind: bb623];
    }

    bb534: {
        StorageDead(_1506);
        StorageDead(_1502);
        _1500 = format(move _1501) -> [return: bb535, unwind: bb623];
    }

    bb535: {
        StorageDead(_1501);
        StorageDead(_1513);
        StorageDead(_1512);
        StorageDead(_1509);
        StorageDead(_1508);
        StorageDead(_1504);
        _1499 = move _1500;
        StorageDead(_1500);
        _1498 = &_1499;
        _1497 = &(*_1498);
        _1496 = <String as Deref>::deref(move _1497) -> [return: bb536, unwind: bb590];
    }

    bb536: {
        _1495 = &(*_1496);
        StorageDead(_1497);
        _1494 = solana_program::log::sol_log(move _1495) -> [return: bb537, unwind: bb590];
    }

    bb537: {
        StorageDead(_1495);
        drop(_1499) -> [return: bb538, unwind: bb623];
    }

    bb538: {
        StorageDead(_1499);
        StorageDead(_1498);
        StorageDead(_1496);
        StorageDead(_1494);
        _1385 = const ();
        StorageDead(_1475);
        goto -> bb551;
    }

    bb539: {
        StorageLive(_1517);
        StorageLive(_1518);
        StorageLive(_1519);
        _1519 = &mut _1516;
        StorageLive(_1520);
        StorageLive(_1521);
        StorageLive(_1522);
        StorageLive(_1523);
        _1637 = const _;
        _1523 = &(*_1637);
        _1522 = &(*_1523);
        _1521 = move _1522 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1522);
        StorageLive(_1525);
        StorageLive(_1526);
        StorageLive(_1527);
        StorageLive(_1528);
        StorageLive(_1529);
        StorageLive(_1530);
        StorageLive(_1531);
        _1531 = &_90;
        _1530 = &(*_1531);
        _1529 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _1530) -> [return: bb540, unwind: bb623];
    }

    bb540: {
        StorageDead(_1530);
        _1528 = [move _1529];
        StorageDead(_1529);
        _1527 = &_1528;
        _1526 = &(*_1527);
        _1525 = move _1526 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1526);
        _1520 = Arguments::<'_>::new_v1(move _1521, move _1525) -> [return: bb541, unwind: bb623];
    }

    bb541: {
        StorageDead(_1525);
        StorageDead(_1521);
        _1518 = ArrForm::<1200>::format(move _1519, move _1520) -> [return: bb542, unwind: bb623];
    }

    bb542: {
        StorageDead(_1520);
        StorageDead(_1519);
        StorageLive(_1532);
        StorageLive(_1533);
        _1533 = &mut _1516;
        _1532 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _1533 };
        StorageDead(_1533);
        _1517 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _1518, move _1532) -> [return: bb543, unwind: bb623];
    }

    bb543: {
        StorageDead(_1532);
        StorageDead(_1518);
        StorageDead(_1531);
        StorageDead(_1528);
        StorageDead(_1527);
        StorageDead(_1523);
        StorageDead(_1517);
        _1515 = move _1516;
        StorageDead(_1516);
        StorageLive(_1534);
        StorageLive(_1535);
        StorageLive(_1536);
        StorageLive(_1537);
        StorageLive(_1538);
        StorageLive(_1539);
        StorageLive(_1540);
        StorageLive(_1541);
        StorageLive(_1542);
        StorageLive(_1543);
        StorageLive(_1544);
        _1636 = const _;
        _1544 = &(*_1636);
        _1543 = &(*_1544);
        _1542 = move _1543 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_1543);
        StorageLive(_1546);
        StorageLive(_1547);
        StorageLive(_1548);
        StorageLive(_1549);
        StorageLive(_1550);
        StorageLive(_1551);
        StorageLive(_1552);
        StorageLive(_1553);
        StorageLive(_1554);
        _1554 = &_1515;
        _1553 = ArrForm::<1200>::as_str(move _1554) -> [return: bb544, unwind: bb623];
    }

    bb544: {
        StorageDead(_1554);
        _1552 = &_1553;
        _1551 = &(*_1552);
        _1550 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _1551) -> [return: bb545, unwind: bb623];
    }

    bb545: {
        StorageDead(_1551);
        _1549 = [move _1550];
        StorageDead(_1550);
        _1548 = &_1549;
        _1547 = &(*_1548);
        _1546 = move _1547 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_1547);
        _1541 = Arguments::<'_>::new_v1(move _1542, move _1546) -> [return: bb546, unwind: bb623];
    }

    bb546: {
        StorageDead(_1546);
        StorageDead(_1542);
        _1540 = format(move _1541) -> [return: bb547, unwind: bb623];
    }

    bb547: {
        StorageDead(_1541);
        StorageDead(_1553);
        StorageDead(_1552);
        StorageDead(_1549);
        StorageDead(_1548);
        StorageDead(_1544);
        _1539 = move _1540;
        StorageDead(_1540);
        _1538 = &_1539;
        _1537 = &(*_1538);
        _1536 = <String as Deref>::deref(move _1537) -> [return: bb548, unwind: bb589];
    }

    bb548: {
        _1535 = &(*_1536);
        StorageDead(_1537);
        _1534 = solana_program::log::sol_log(move _1535) -> [return: bb549, unwind: bb589];
    }

    bb549: {
        StorageDead(_1535);
        drop(_1539) -> [return: bb550, unwind: bb623];
    }

    bb550: {
        StorageDead(_1539);
        StorageDead(_1538);
        StorageDead(_1536);
        StorageDead(_1534);
        _1385 = const ();
        StorageDead(_1515);
        goto -> bb551;
    }

    bb551: {
        StorageDead(_1388);
        StorageDead(_1386);
        StorageDead(_1385);
        StorageLive(_1555);
        StorageLive(_1556);
        StorageLive(_1557);
        StorageLive(_1558);
        _1558 = _86;
        StorageLive(_1559);
        _1559 = _150;
        _1560 = CheckedAdd(_1558, _1559);
        assert(!move (_1560.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1558, move _1559) -> [success: bb552, unwind: bb623];
    }

    bb552: {
        _1557 = move (_1560.0: u64);
        StorageDead(_1559);
        StorageDead(_1558);
        StorageLive(_1561);
        _1561 = ((*_1).21: u64);
        _1556 = Le(move _1557, move _1561);
        switchInt(move _1556) -> [0: bb558, otherwise: bb553];
    }

    bb553: {
        StorageDead(_1561);
        StorageDead(_1557);
        StorageLive(_1563);
        StorageLive(_1564);
        StorageLive(_1565);
        StorageLive(_1566);
        _1633 = const _;
        _1566 = &(*_1633);
        _1565 = KaminoVaultError::name(move _1566) -> [return: bb554, unwind: bb623];
    }

    bb554: {
        StorageDead(_1566);
        StorageLive(_1568);
        StorageLive(_1569);
        _1569 = KaminoVaultError::WithdrawAmountBelowMinimum;
        _1568 = <KaminoVaultError as Into<u32>>::into(move _1569) -> [return: bb555, unwind: bb588];
    }

    bb555: {
        StorageDead(_1569);
        StorageLive(_1570);
        StorageLive(_1571);
        _1632 = const _;
        _1571 = &(*_1632);
        _1570 = <KaminoVaultError as ToString>::to_string(move _1571) -> [return: bb556, unwind: bb588];
    }

    bb556: {
        StorageDead(_1571);
        StorageLive(_1573);
        StorageLive(_1574);
        StorageLive(_1575);
        _1575 = anchor_lang::error::Source { filename: const "programs\\kvault\\src\\operations\\vault_operations.rs", line: const 248_u32 };
        _1574 = anchor_lang::error::ErrorOrigin::Source(move _1575);
        StorageDead(_1575);
        _1573 = Option::<ErrorOrigin>::Some(move _1574);
        StorageDead(_1574);
        StorageLive(_1576);
        _1576 = Option::<ComparedValues>::None;
        _1564 = anchor_lang::error::AnchorError { error_name: move _1565, error_code_number: move _1568, error_msg: move _1570, error_origin: move _1573, compared_values: move _1576 };
        StorageDead(_1576);
        StorageDead(_1573);
        StorageDead(_1570);
        StorageDead(_1568);
        StorageDead(_1565);
        _1563 = <anchor_lang::error::Error as From<anchor_lang::error::AnchorError>>::from(move _1564) -> [return: bb557, unwind: bb623];
    }

    bb557: {
        StorageDead(_1564);
        _0 = std::result::Result::<effects::WithdrawEffects, anchor_lang::error::Error>::Err(move _1563);
        StorageDead(_1563);
        StorageDead(_1556);
        StorageDead(_1555);
        goto -> bb582;
    }

    bb558: {
        StorageDead(_1561);
        StorageDead(_1557);
        _1555 = const ();
        StorageDead(_1556);
        StorageDead(_1555);
        StorageLive(_1577);
        _1578 = discriminant(_2);
        switchInt(move _1578) -> [1: bb560, otherwise: bb559];
    }

    bb559: {
        _1577 = const ();
        goto -> bb568;
    }

    bb560: {
        StorageLive(_1579);
        _1579 = ((_2 as Some).0: &anchor_lang::prelude::Pubkey);
        StorageLive(_1580);
        StorageLive(_1581);
        _1581 = &(*_1);
        StorageLive(_1582);
        _1582 = (*_1579);
        _1580 = state::VaultState::is_allocated_to_reserve(move _1581, move _1582) -> [return: bb561, unwind: bb623];
    }

    bb561: {
        switchInt(move _1580) -> [0: bb563, otherwise: bb562];
    }

    bb562: {
        StorageDead(_1582);
        StorageDead(_1581);
        _1577 = const ();
        StorageDead(_1580);
        StorageDead(_1579);
        goto -> bb568;
    }

    bb563: {
        StorageDead(_1582);
        StorageDead(_1581);
        StorageLive(_1584);
        StorageLive(_1585);
        StorageLive(_1586);
        StorageLive(_1587);
        _1635 = const _;
        _1587 = &(*_1635);
        _1586 = KaminoVaultError::name(move _1587) -> [return: bb564, unwind: bb623];
    }

    bb564: {
        StorageDead(_1587);
        StorageLive(_1589);
        StorageLive(_1590);
        _1590 = KaminoVaultError::ReserveNotPartOfAllocations;
        _1589 = <KaminoVaultError as Into<u32>>::into(move _1590) -> [return: bb565, unwind: bb587];
    }

    bb565: {
        StorageDead(_1590);
        StorageLive(_1591);
        StorageLive(_1592);
        _1634 = const _;
        _1592 = &(*_1634);
        _1591 = <KaminoVaultError as ToString>::to_string(move _1592) -> [return: bb566, unwind: bb587];
    }

    bb566: {
        StorageDead(_1592);
        StorageLive(_1594);
        StorageLive(_1595);
        StorageLive(_1596);
        _1596 = anchor_lang::error::Source { filename: const "programs\\kvault\\src\\operations\\vault_operations.rs", line: const 253_u32 };
        _1595 = anchor_lang::error::ErrorOrigin::Source(move _1596);
        StorageDead(_1596);
        _1594 = Option::<ErrorOrigin>::Some(move _1595);
        StorageDead(_1595);
        StorageLive(_1597);
        _1597 = Option::<ComparedValues>::None;
        _1585 = anchor_lang::error::AnchorError { error_name: move _1586, error_code_number: move _1589, error_msg: move _1591, error_origin: move _1594, compared_values: move _1597 };
        StorageDead(_1597);
        StorageDead(_1594);
        StorageDead(_1591);
        StorageDead(_1589);
        StorageDead(_1586);
        _1584 = <anchor_lang::error::Error as From<anchor_lang::error::AnchorError>>::from(move _1585) -> [return: bb567, unwind: bb623];
    }

    bb567: {
        StorageDead(_1585);
        _0 = std::result::Result::<effects::WithdrawEffects, anchor_lang::error::Error>::Err(move _1584);
        StorageDead(_1584);
        StorageDead(_1580);
        StorageDead(_1579);
        StorageDead(_1577);
        goto -> bb582;
    }

    bb568: {
        StorageDead(_1577);
        StorageLive(_1598);
        StorageLive(_1599);
        _1599 = &mut (*_1);
        StorageLive(_1600);
        _1600 = _86;
        StorageLive(_1601);
        _1601 = _160;
        _1598 = withdraw_from_accounting(move _1599, move _1600, move _1601) -> [return: bb569, unwind: bb623];
    }

    bb569: {
        StorageDead(_1601);
        StorageDead(_1600);
        StorageDead(_1599);
        StorageDead(_1598);
        StorageLive(_1602);
        StorageLive(_1603);
        _1603 = &mut (*_1);
        StorageLive(_1604);
        _1604 = _165;
        _1602 = deposit_into_vault(move _1603, move _1604) -> [return: bb570, unwind: bb623];
    }

    bb570: {
        StorageDead(_1604);
        StorageDead(_1603);
        StorageDead(_1602);
        StorageLive(_1605);
        _1606 = discriminant(_2);
        switchInt(move _1606) -> [1: bb571, otherwise: bb577];
    }

    bb571: {
        StorageLive(_1607);
        _1607 = ((_2 as Some).0: &anchor_lang::prelude::Pubkey);
        StorageLive(_1608);
        StorageLive(_1609);
        StorageLive(_1610);
        StorageLive(_1611);
        _1611 = &mut (*_1);
        StorageLive(_1612);
        _1612 = _91;
        StorageLive(_1613);
        _1613 = &(*_1607);
        _1610 = withdraw_from_vault_allocation(move _1611, move _1612, move _1613) -> [return: bb572, unwind: bb623];
    }

    bb572: {
        StorageDead(_1613);
        StorageDead(_1612);
        StorageDead(_1611);
        _1609 = <std::result::Result<(), anchor_lang::error::Error> as Try>::branch(move _1610) -> [return: bb573, unwind: bb623];
    }

    bb573: {
        StorageDead(_1610);
        _1614 = discriminant(_1609);
        switchInt(move _1614) -> [0: bb574, 1: bb575, otherwise: bb10];
    }

    bb574: {
        StorageLive(_1618);
        _1618 = ((_1609 as Continue).0: ());
        _1608 = _1618;
        StorageDead(_1618);
        _1714 = discriminant(_1609);
        StorageDead(_1609);
        StorageDead(_1608);
        _1605 = const ();
        StorageDead(_1607);
        goto -> bb578;
    }

    bb575: {
        StorageLive(_1615);
        _1615 = move ((_1609 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_1617);
        _1617 = move _1615;
        _0 = <std::result::Result<effects::WithdrawEffects, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _1617) -> [return: bb576, unwind: bb628];
    }

    bb576: {
        StorageDead(_1617);
        StorageDead(_1615);
        _1716 = discriminant(_1609);
        StorageDead(_1609);
        StorageDead(_1608);
        StorageDead(_1607);
        StorageDead(_1605);
        goto -> bb582;
    }

    bb577: {
        _1605 = const ();
        goto -> bb578;
    }

    bb578: {
        StorageDead(_1605);
        StorageLive(_1619);
        StorageLive(_1620);
        _1620 = &mut (*_1);
        StorageLive(_1621);
        StorageLive(_1622);
        _1622 = _50;
        StorageLive(_1623);
        _1623 = _152;
        _1621 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Sub>::sub(move _1622, move _1623) -> [return: bb579, unwind: bb623];
    }

    bb579: {
        StorageDead(_1623);
        StorageDead(_1622);
        _1619 = update_prev_aum(move _1620, move _1621) -> [return: bb580, unwind: bb623];
    }

    bb580: {
        StorageDead(_1621);
        StorageDead(_1620);
        StorageDead(_1619);
        StorageLive(_1624);
        StorageLive(_1625);
        _1625 = _160;
        StorageLive(_1626);
        _1626 = _86;
        StorageLive(_1627);
        _1627 = _91;
        StorageLive(_1628);
        _1628 = _156;
        StorageLive(_1629);
        _1629 = _90;
        _1624 = effects::WithdrawEffects { shares_to_burn: move _1625, available_to_send_to_user: move _1626, invested_to_disinvest_ctokens: move _1627, invested_liquidity_to_send_to_user: move _1628, invested_liquidity_to_disinvest: move _1629 };
        StorageDead(_1629);
        StorageDead(_1628);
        StorageDead(_1627);
        StorageDead(_1626);
        StorageDead(_1625);
        _0 = std::result::Result::<effects::WithdrawEffects, anchor_lang::error::Error>::Ok(move _1624);
        StorageDead(_1624);
        StorageDead(_165);
        StorageDead(_160);
        StorageDead(_156);
        StorageDead(_152);
        StorageDead(_150);
        StorageDead(_92);
        StorageDead(_91);
        StorageDead(_90);
        StorageDead(_89);
        StorageDead(_86);
        StorageDead(_82);
        StorageDead(_81);
        StorageDead(_50);
        drop(_27) -> [return: bb581, unwind: bb633];
    }

    bb581: {
        StorageDead(_27);
        goto -> bb586;
    }

    bb582: {
        StorageDead(_165);
        StorageDead(_160);
        StorageDead(_156);
        StorageDead(_152);
        StorageDead(_150);
        StorageDead(_92);
        StorageDead(_91);
        StorageDead(_90);
        StorageDead(_89);
        StorageDead(_86);
        StorageDead(_82);
        StorageDead(_81);
        goto -> bb583;
    }

    bb583: {
        StorageDead(_50);
        goto -> bb584;
    }

    bb584: {
        drop(_27) -> [return: bb585, unwind: bb633];
    }

    bb585: {
        StorageDead(_27);
        goto -> bb627;
    }

    bb586: {
        return;
    }

    bb587 (cleanup): {
        drop(_1586) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb588 (cleanup): {
        drop(_1565) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb589 (cleanup): {
        drop(_1539) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb590 (cleanup): {
        drop(_1499) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb591 (cleanup): {
        drop(_1459) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb592 (cleanup): {
        drop(_1419) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb593 (cleanup): {
        drop(_1369) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb594 (cleanup): {
        drop(_1329) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb595 (cleanup): {
        drop(_1289) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb596 (cleanup): {
        drop(_1249) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb597 (cleanup): {
        drop(_1199) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb598 (cleanup): {
        drop(_1159) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb599 (cleanup): {
        drop(_1119) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb600 (cleanup): {
        drop(_1079) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb601 (cleanup): {
        drop(_1029) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb602 (cleanup): {
        drop(_989) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb603 (cleanup): {
        drop(_949) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb604 (cleanup): {
        drop(_909) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb605 (cleanup): {
        drop(_859) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb606 (cleanup): {
        drop(_819) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb607 (cleanup): {
        drop(_779) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb608 (cleanup): {
        drop(_739) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb609 (cleanup): {
        drop(_689) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb610 (cleanup): {
        drop(_649) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb611 (cleanup): {
        drop(_609) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb612 (cleanup): {
        drop(_569) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb613 (cleanup): {
        drop(_519) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb614 (cleanup): {
        drop(_477) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb615 (cleanup): {
        drop(_435) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb616 (cleanup): {
        drop(_393) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb617 (cleanup): {
        drop(_341) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb618 (cleanup): {
        drop(_301) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb619 (cleanup): {
        drop(_261) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb620 (cleanup): {
        drop(_221) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb621 (cleanup): {
        drop(_175) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb622 (cleanup): {
        drop(_69) -> [return: bb623, unwind terminate(cleanup)];
    }

    bb623 (cleanup): {
        drop(_27) -> [return: bb633, unwind terminate(cleanup)];
    }

    bb624 (cleanup): {
        drop(_15) -> [return: bb633, unwind terminate(cleanup)];
    }

    bb625 (cleanup): {
        resume;
    }

    bb626: {
        drop(_4) -> [return: bb586, unwind: bb625];
    }

    bb627: {
        switchInt(_1707) -> [0: bb586, otherwise: bb626];
    }

    bb628 (cleanup): {
        _1724 = discriminant(_1609);
        goto -> bb623;
    }

    bb629 (cleanup): {
        _1725 = discriminant(_51);
        goto -> bb623;
    }

    bb630 (cleanup): {
        _1726 = discriminant(_39);
        goto -> bb623;
    }

    bb631 (cleanup): {
        _1727 = discriminant(_28);
        goto -> bb633;
    }

    bb632 (cleanup): {
        drop(_4) -> [return: bb625, unwind terminate(cleanup)];
    }

    bb633 (cleanup): {
        switchInt(_1707) -> [0: bb625, otherwise: bb632];
    }
}
