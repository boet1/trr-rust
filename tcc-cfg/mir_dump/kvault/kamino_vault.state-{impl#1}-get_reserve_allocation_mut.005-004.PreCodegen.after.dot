digraph Mir_0_499 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::VaultState::get_reserve_allocation_mut(_1: &amp;ReErased mut state::VaultState, _2: usize) -&gt; std::result::Result&lt;&amp;ReErased mut state::VaultAllocation, anchor_lang::error::Error&gt;<br align="left"/>let mut _3: std::option::Option&lt;&amp;ReErased mut state::VaultAllocation&gt;;<br align="left"/>let mut _4: &amp;ReErased mut [state::VaultAllocation];<br align="left"/>let mut _5: &amp;ReErased mut [state::VaultAllocation; 25_usize];<br align="left"/>let mut _6: usize;<br align="left"/>let mut _7: anchor_lang::error::Error;<br align="left"/>let mut _8: anchor_lang::error::AnchorError;<br align="left"/>let mut _9: std::string::String;<br align="left"/>let mut _10: &amp;ReErased KaminoVaultError;<br align="left"/>let _11: KaminoVaultError;<br align="left"/>let mut _12: u32;<br align="left"/>let mut _13: KaminoVaultError;<br align="left"/>let mut _14: std::string::String;<br align="left"/>let mut _15: &amp;ReErased KaminoVaultError;<br align="left"/>let _16: KaminoVaultError;<br align="left"/>let mut _17: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _18: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _19: anchor_lang::error::Source;<br align="left"/>let mut _20: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _21: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _22: &amp;ReErased KaminoVaultError;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug idx =&gt; _2;<br align="left"/>>;
    bb0__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;mut ((*_1).18: [state::VaultAllocation; 25])<br/>_4 = move _5 as &amp;mut [state::VaultAllocation] (PointerCoercion(Unsize))<br/>StorageDead(_5)<br/>StorageLive(_6)<br/>_6 = _2<br/></td></tr><tr><td align="left">_3 = core::slice::&lt;impl [VaultAllocation]&gt;::get_mut::&lt;usize&gt;(move _4, move _6)</td></tr></table>>];
    bb1__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_22 = const _<br/>_10 = &amp;(*_22)<br/></td></tr><tr><td align="left">_9 = KaminoVaultError::name(move _10)</td></tr></table>>];
    bb2__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = KaminoVaultError::OutOfRangeOfReserveIndex<br/></td></tr><tr><td align="left">_12 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _13)</td></tr></table>>];
    bb3__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_21 = const _<br/>_15 = &amp;(*_21)<br/></td></tr><tr><td align="left">_14 = &lt;KaminoVaultError as ToString&gt;::to_string(move _15)</td></tr></table>>];
    bb4__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\state.rs&quot;, line: const 225_u32 }<br/>_18 = anchor_lang::error::ErrorOrigin::Source(move _19)<br/>StorageDead(_19)<br/>_17 = Option::&lt;ErrorOrigin&gt;::Some(move _18)<br/>StorageDead(_18)<br/>StorageLive(_20)<br/>_20 = Option::&lt;ComparedValues&gt;::None<br/>_8 = anchor_lang::error::AnchorError { error_name: move _9, error_code_number: move _12, error_msg: move _14, error_origin: move _17, compared_values: move _20 }<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _8)</td></tr></table>>];
    bb5__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_0 = Option::&lt;&amp;mut VaultAllocation&gt;::ok_or::&lt;anchor_lang::error::Error&gt;(move _3, move _7)</td></tr></table>>];
    bb6__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb7__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">7 (cleanup)</td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb8__0_499 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">8 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_499 -> bb1__0_499 [label="return"];
    bb1__0_499 -> bb2__0_499 [label="return"];
    bb2__0_499 -> bb3__0_499 [label="return"];
    bb2__0_499 -> bb7__0_499 [label="unwind"];
    bb3__0_499 -> bb4__0_499 [label="return"];
    bb3__0_499 -> bb7__0_499 [label="unwind"];
    bb4__0_499 -> bb5__0_499 [label="return"];
    bb4__0_499 -> bb8__0_499 [label="unwind"];
    bb5__0_499 -> bb6__0_499 [label="return"];
    bb5__0_499 -> bb8__0_499 [label="unwind"];
    bb7__0_499 -> bb8__0_499 [label="return"];
}
