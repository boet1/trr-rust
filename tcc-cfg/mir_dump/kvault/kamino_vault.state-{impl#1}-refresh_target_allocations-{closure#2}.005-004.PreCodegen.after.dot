digraph Mir_0_509 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::VaultState::refresh_target_allocations::{closure#2}(_1: &amp;ReErased mut Closure(DefId(0:509 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()]), _2: &amp;ReErased ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)) -&gt; bool<br align="left"/>let _3: &amp;ReErased &amp;ReErased mut state::VaultAllocation;<br align="left"/>let _4: &amp;ReErased &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _9: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _10: &amp;ReErased u64;<br align="left"/>let mut _11: &amp;ReErased mut state::VaultAllocation;<br align="left"/>let mut _12: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _13: &amp;ReErased mut state::VaultAllocation;<br align="left"/>debug allocation =&gt; _3;<br align="left"/>debug token_target_allocation =&gt; _4;<br align="left"/>>;
    bb0__0_509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = &amp;(((*_2).0: (&amp;mut state::VaultAllocation, &amp;operations::vault_operations::common::InvestedReserve)).0: &amp;mut state::VaultAllocation)<br/>StorageLive(_4)<br/>_4 = &amp;((*_2).1: &amp;mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_11 = deref_copy (*_3)<br/>_6 = &amp;((*_11).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/></td></tr><tr><td align="left">_8 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb1__0_509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_7 = &amp;_8<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _6, move _7)</td></tr></table>>];
    bb2__0_509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb3__0_509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_9)<br/>_12 = deref_copy (*_4)<br/>_9 = &amp;(*_12)<br/>StorageLive(_10)<br/>_13 = deref_copy (*_3)<br/>_10 = &amp;((*_13).3: u64)<br/></td></tr><tr><td align="left">_0 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;u64&gt;&gt;::lt(move _9, move _10)</td></tr></table>>];
    bb4__0_509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>_0 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_509 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_509 -> bb1__0_509 [label="return"];
    bb1__0_509 -> bb2__0_509 [label="return"];
    bb2__0_509 -> bb4__0_509 [label="0"];
    bb2__0_509 -> bb3__0_509 [label="otherwise"];
    bb3__0_509 -> bb5__0_509 [label="return"];
    bb4__0_509 -> bb6__0_509 [label=""];
    bb5__0_509 -> bb6__0_509 [label=""];
}
