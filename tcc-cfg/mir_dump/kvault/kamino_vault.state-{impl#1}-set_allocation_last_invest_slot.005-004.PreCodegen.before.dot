digraph Mir_0_512 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::VaultState::set_allocation_last_invest_slot(_1: &amp;ReErased mut state::VaultState, _2: &amp;ReErased anchor_lang::prelude::Pubkey, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _5: &amp;ReErased state::VaultState;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: usize;<br align="left"/>let _9: ();<br align="left"/>let mut _10: &amp;ReErased mut state::VaultAllocation;<br align="left"/>let _11: usize;<br align="left"/>let mut _12: usize;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: ();<br align="left"/>let mut _16: anchor_lang::error::Error;<br align="left"/>let mut _17: anchor_lang::error::AnchorError;<br align="left"/>let mut _18: std::string::String;<br align="left"/>let mut _19: &amp;ReErased KaminoVaultError;<br align="left"/>let _20: KaminoVaultError;<br align="left"/>let mut _21: u32;<br align="left"/>let mut _22: KaminoVaultError;<br align="left"/>let mut _23: std::string::String;<br align="left"/>let mut _24: &amp;ReErased KaminoVaultError;<br align="left"/>let _25: KaminoVaultError;<br align="left"/>let mut _26: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _27: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _28: anchor_lang::error::Source;<br align="left"/>let mut _29: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _30: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _31: &amp;ReErased KaminoVaultError;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug reserve =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug idx =&gt; _4;<br align="left"/>debug idx =&gt; _8;<br align="left"/>>;
    bb0__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;(*_1)<br/>StorageLive(_6)<br/>_6 = &amp;(*_2)<br/></td></tr><tr><td align="left">_4 = state::VaultState::get_reserve_idx_in_allocation(move _5, move _6)</td></tr></table>>];
    bb1__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb2__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_31 = const _<br/>_19 = &amp;(*_31)<br/></td></tr><tr><td align="left">_18 = KaminoVaultError::name(move _19)</td></tr></table>>];
    bb3__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_4 as Some).0: usize)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _8<br/>_12 = Len(((*_1).18: [state::VaultAllocation; 25]))<br/>_13 = Lt(_11, _12)<br/></td></tr><tr><td align="left">assert(move _13, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _12, _11)</td></tr></table>>];
    bb5__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_10 = &amp;mut ((*_1).18: [state::VaultAllocation; 25])[_11]<br/>StorageLive(_14)<br/>_14 = _3<br/></td></tr><tr><td align="left">_9 = VaultAllocation::set_last_invest_slot(move _10, move _14)</td></tr></table>>];
    bb6__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_15)<br/>_15 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _15)<br/>StorageDead(_15)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = KaminoVaultError::ReserveNotPartOfAllocations<br/></td></tr><tr><td align="left">_21 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _22)</td></tr></table>>];
    bb8__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_30 = const _<br/>_24 = &amp;(*_30)<br/></td></tr><tr><td align="left">_23 = &lt;KaminoVaultError as ToString&gt;::to_string(move _24)</td></tr></table>>];
    bb9__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\state.rs&quot;, line: const 413_u32 }<br/>_27 = anchor_lang::error::ErrorOrigin::Source(move _28)<br/>StorageDead(_28)<br/>_26 = Option::&lt;ErrorOrigin&gt;::Some(move _27)<br/>StorageDead(_27)<br/>StorageLive(_29)<br/>_29 = Option::&lt;ComparedValues&gt;::None<br/>_17 = anchor_lang::error::AnchorError { error_name: move _18, error_code_number: move _21, error_msg: move _23, error_origin: move _26, compared_values: move _29 }<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _17)</td></tr></table>>];
    bb10__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb13__0_512 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_512 -> bb1__0_512 [label="return"];
    bb1__0_512 -> bb2__0_512 [label="0"];
    bb1__0_512 -> bb4__0_512 [label="1"];
    bb1__0_512 -> bb3__0_512 [label="otherwise"];
    bb2__0_512 -> bb7__0_512 [label="return"];
    bb4__0_512 -> bb5__0_512 [label="success"];
    bb5__0_512 -> bb6__0_512 [label="return"];
    bb6__0_512 -> bb11__0_512 [label=""];
    bb7__0_512 -> bb8__0_512 [label="return"];
    bb7__0_512 -> bb12__0_512 [label="unwind"];
    bb8__0_512 -> bb9__0_512 [label="return"];
    bb8__0_512 -> bb12__0_512 [label="unwind"];
    bb9__0_512 -> bb10__0_512 [label="return"];
    bb9__0_512 -> bb13__0_512 [label="unwind"];
    bb10__0_512 -> bb11__0_512 [label=""];
    bb12__0_512 -> bb13__0_512 [label="return"];
}
