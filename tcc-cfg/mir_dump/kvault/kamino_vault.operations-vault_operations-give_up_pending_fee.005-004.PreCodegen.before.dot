digraph Mir_0_400 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn give_up_pending_fee(_1: &amp;ReErased mut state::VaultState, _2: impl Iterator&lt;Item = T&gt;/#2, _3: u64, _4: u64, _5: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _6: operations::vault_operations::common::Holdings;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, operations::vault_operations::common::Holdings&gt;;<br align="left"/>let mut _8: std::result::Result&lt;operations::vault_operations::common::Holdings, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased state::VaultState;<br align="left"/>let mut _10: impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _16: operations::vault_operations::common::Holdings;<br align="left"/>let _17: ();<br align="left"/>let mut _18: &amp;ReErased str;<br align="left"/>let _19: &amp;ReErased str;<br align="left"/>let mut _20: &amp;ReErased std::string::String;<br align="left"/>let _21: &amp;ReErased std::string::String;<br align="left"/>let _22: std::string::String;<br align="left"/>let _23: std::string::String;<br align="left"/>let mut _24: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _26: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _27: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _28: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _32: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _33: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased operations::vault_operations::common::Holdings;<br align="left"/>let _35: &amp;ReErased operations::vault_operations::common::Holdings;<br align="left"/>let _36: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let _37: ();<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _39: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _41: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _47: ();<br align="left"/>let _48: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _49: u64;<br align="left"/>let _50: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _51: &amp;ReErased state::VaultState;<br align="left"/>let _52: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _53: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _54: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _55: ();<br align="left"/>let mut _56: &amp;ReErased str;<br align="left"/>let _57: &amp;ReErased str;<br align="left"/>let mut _58: &amp;ReErased std::string::String;<br align="left"/>let _59: &amp;ReErased std::string::String;<br align="left"/>let _60: std::string::String;<br align="left"/>let _61: std::string::String;<br align="left"/>let mut _62: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _64: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _65: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _66: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _67: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _68: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _70: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _71: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _73: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _74: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _76: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _78: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _79: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _81: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _82: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _83: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _84: ();<br align="left"/>let mut _85: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _86: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _87: u64;<br align="left"/>let _88: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _89: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _90: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _91: ();<br align="left"/>let mut _92: &amp;ReErased str;<br align="left"/>let _93: &amp;ReErased str;<br align="left"/>let mut _94: &amp;ReErased std::string::String;<br align="left"/>let _95: &amp;ReErased std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let mut _98: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _101: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _102: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _106: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _107: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _109: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _110: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _112: ();<br align="left"/>let mut _113: &amp;ReErased str;<br align="left"/>let _114: &amp;ReErased str;<br align="left"/>let mut _115: &amp;ReErased std::string::String;<br align="left"/>let _116: &amp;ReErased std::string::String;<br align="left"/>let _117: std::string::String;<br align="left"/>let _118: std::string::String;<br align="left"/>let mut _119: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _120: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _122: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _123: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _124: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _126: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _127: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _128: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _129: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _130: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _131: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _133: ();<br align="left"/>let mut _134: &amp;ReErased str;<br align="left"/>let _135: &amp;ReErased str;<br align="left"/>let mut _136: &amp;ReErased std::string::String;<br align="left"/>let _137: &amp;ReErased std::string::String;<br align="left"/>let _138: std::string::String;<br align="left"/>let _139: std::string::String;<br align="left"/>let mut _140: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _143: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _144: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _146: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _147: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _148: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _149: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _151: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _152: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _153: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _154: ();<br align="left"/>let mut _155: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _156: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _157: ();<br align="left"/>let mut _158: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _159: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _160: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _161: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _162: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>debug vault =&gt; _1;<br align="left"/>debug reserves_iter =&gt; _2;<br align="left"/>debug current_slot =&gt; _3;<br align="left"/>debug current_timestamp =&gt; _4;<br align="left"/>debug max_amount_to_give_up =&gt; _5;<br align="left"/>debug holdings =&gt; _6;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug res =&gt; _23;<br align="left"/>debug invested =&gt; _36;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug amount =&gt; _48;<br align="left"/>debug pending_fees =&gt; _50;<br align="left"/>debug amount_to_give_up =&gt; _52;<br align="left"/>debug res =&gt; _61;<br align="left"/>debug new_pending_fees =&gt; _81;<br align="left"/>debug prev_aum =&gt; _88;<br align="left"/>debug res =&gt; _97;<br align="left"/>debug res =&gt; _118;<br align="left"/>debug res =&gt; _139;<br align="left"/>>;
    bb0__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>_10 = move _2<br/>StorageLive(_11)<br/>_11 = _3<br/></td></tr><tr><td align="left">_8 = holdings::&lt;'_, T, impl Iterator&lt;Item = T&gt;&gt;(move _9, move _10, move _11)</td></tr></table>>];
    bb1__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;Holdings, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_7 as Continue).0: operations::vault_operations::common::Holdings)<br/>_6 = move _16<br/>StorageDead(_16)<br/>_163 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_162 = const _<br/>_27 = &amp;(*_162)<br/>_26 = &amp;(*_27)<br/>_25 = move _26 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_26)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;_6<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;Holdings&gt;(move _34)</td></tr></table>>];
    bb4__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_15)<br/>_15 = move _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>_169 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = [move _33]<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_24 = Arguments::&lt;'_&gt;::new_v1(move _25, move _29)</td></tr></table>>];
    bb8__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = format(move _24)</td></tr></table>>];
    bb9__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>_22 = move _23<br/>StorageDead(_23)<br/>_21 = &amp;_22<br/>_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_19 = &lt;String as Deref&gt;::deref(move _20)</td></tr></table>>];
    bb10__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_18 = &amp;(*_19)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_17 = solana_program::log::sol_log(move _18)</td></tr></table>>];
    bb11__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb12__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageLive(_36)<br/>_36 = &amp;(_6.1: operations::vault_operations::common::Invested)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_1)<br/>StorageLive(_41)<br/>_41 = &amp;(*_36)<br/>StorageLive(_42)<br/>_42 = _4<br/></td></tr><tr><td align="left">_39 = charge_fees(move _40, move _41, move _42)</td></tr></table>>];
    bb13__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb14__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_43 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb15__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_38 as Continue).0: ())<br/>_37 = _47<br/>StorageDead(_47)<br/>_165 = discriminant(_38)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = _5<br/></td></tr><tr><td align="left">_48 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _49)</td></tr></table>>];
    bb16__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_46)<br/>_46 = move _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb17__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>_167 = discriminant(_38)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb18__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;(*_1)<br/></td></tr><tr><td align="left">_50 = state::VaultState::get_pending_fees(move _51)</td></tr></table>>];
    bb19__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _48<br/>StorageLive(_54)<br/>_54 = _50<br/></td></tr><tr><td align="left">_52 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _53, move _54)</td></tr></table>>];
    bb20__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_161 = const _<br/>_65 = &amp;(*_161)<br/>_64 = &amp;(*_65)<br/>_63 = move _64 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;_52<br/></td></tr><tr><td align="left">_74 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _75)</td></tr></table>>];
    bb21__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_73 = &amp;_74<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _72)</td></tr></table>>];
    bb22__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_50<br/></td></tr><tr><td align="left">_79 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _80)</td></tr></table>>];
    bb23__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = &amp;_79<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _77)</td></tr></table>>];
    bb24__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_70 = [move _71, move _76]<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>_69 = &amp;_70<br/>_68 = &amp;(*_69)<br/>_67 = move _68 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_62 = Arguments::&lt;'_&gt;::new_v1(move _63, move _67)</td></tr></table>>];
    bb25__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = format(move _62)</td></tr></table>>];
    bb26__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>_60 = move _61<br/>StorageDead(_61)<br/>_59 = &amp;_60<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = &lt;String as Deref&gt;::deref(move _58)</td></tr></table>>];
    bb27__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_56 = &amp;(*_57)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_55 = solana_program::log::sol_log(move _56)</td></tr></table>>];
    bb28__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb29__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _50<br/>StorageLive(_83)<br/>_83 = _52<br/></td></tr><tr><td align="left">_81 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _82, move _83)</td></tr></table>>];
    bb30__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;mut (*_1)<br/>StorageLive(_86)<br/>_86 = _81<br/></td></tr><tr><td align="left">_84 = update_pending_fees(move _85, move _86)</td></tr></table>>];
    bb31__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_87)<br/>_87 = _4<br/>((*_1).15: u64) = move _87<br/>StorageDead(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = (_6.2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_90)<br/>_90 = _81<br/></td></tr><tr><td align="left">_88 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::saturating_sub(move _89, move _90)</td></tr></table>>];
    bb32__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_160 = const _<br/>_101 = &amp;(*_160)<br/>_100 = &amp;(*_101)<br/>_99 = move _100 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_100)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(_6.2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/></td></tr><tr><td align="left">_110 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _111)</td></tr></table>>];
    bb33__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _108)</td></tr></table>>];
    bb34__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_106 = [move _107]<br/>StorageDead(_107)<br/>_105 = &amp;_106<br/>_104 = &amp;(*_105)<br/>_103 = move _104 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_98 = Arguments::&lt;'_&gt;::new_v1(move _99, move _103)</td></tr></table>>];
    bb35__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = format(move _98)</td></tr></table>>];
    bb36__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>_96 = move _97<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = &lt;String as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb37__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = solana_program::log::sol_log(move _92)</td></tr></table>>];
    bb38__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb39__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_159 = const _<br/>_122 = &amp;(*_159)<br/>_121 = &amp;(*_122)<br/>_120 = move _121 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_121)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = &amp;_81<br/></td></tr><tr><td align="left">_131 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _132)</td></tr></table>>];
    bb40__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/></td></tr><tr><td align="left">_128 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _129)</td></tr></table>>];
    bb41__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_127 = [move _128]<br/>StorageDead(_128)<br/>_126 = &amp;_127<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_119 = Arguments::&lt;'_&gt;::new_v1(move _120, move _124)</td></tr></table>>];
    bb42__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = format(move _119)</td></tr></table>>];
    bb43__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_122)<br/>_117 = move _118<br/>StorageDead(_118)<br/>_116 = &amp;_117<br/>_115 = &amp;(*_116)<br/></td></tr><tr><td align="left">_114 = &lt;String as Deref&gt;::deref(move _115)</td></tr></table>>];
    bb44__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_113 = &amp;(*_114)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_112 = solana_program::log::sol_log(move _113)</td></tr></table>>];
    bb45__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/></td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb46__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_112)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_158 = const _<br/>_143 = &amp;(*_158)<br/>_142 = &amp;(*_143)<br/>_141 = move _142 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_142)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_88<br/></td></tr><tr><td align="left">_152 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _153)</td></tr></table>>];
    bb47__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_151 = &amp;_152<br/>_150 = &amp;(*_151)<br/></td></tr><tr><td align="left">_149 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _150)</td></tr></table>>];
    bb48__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_148 = [move _149]<br/>StorageDead(_149)<br/>_147 = &amp;_148<br/>_146 = &amp;(*_147)<br/>_145 = move _146 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_140 = Arguments::&lt;'_&gt;::new_v1(move _141, move _145)</td></tr></table>>];
    bb49__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = format(move _140)</td></tr></table>>];
    bb50__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_143)<br/>_138 = move _139<br/>StorageDead(_139)<br/>_137 = &amp;_138<br/>_136 = &amp;(*_137)<br/></td></tr><tr><td align="left">_135 = &lt;String as Deref&gt;::deref(move _136)</td></tr></table>>];
    bb51__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_134 = &amp;(*_135)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_133 = solana_program::log::sol_log(move _134)</td></tr></table>>];
    bb52__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_138)</td></tr></table>>];
    bb53__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;mut (*_1)<br/>StorageLive(_156)<br/>_156 = _88<br/></td></tr><tr><td align="left">_154 = update_prev_aum(move _155, move _156)</td></tr></table>>];
    bb54__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageLive(_157)<br/>_157 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _157)<br/>StorageDead(_157)<br/>StorageDead(_88)<br/>StorageDead(_81)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb55__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left">return</td></tr></table>>];
    bb58__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">drop(_138)</td></tr></table>>];
    bb59__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb60__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb61__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb62__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb63__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb64__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb65__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left" balign="left">_171 = discriminant(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_400 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_172 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_400 -> bb1__0_400 [label="return"];
    bb0__0_400 -> bb64__0_400 [label="unwind"];
    bb1__0_400 -> bb2__0_400 [label="return"];
    bb1__0_400 -> bb64__0_400 [label="unwind"];
    bb2__0_400 -> bb3__0_400 [label="0"];
    bb2__0_400 -> bb5__0_400 [label="1"];
    bb2__0_400 -> bb4__0_400 [label="otherwise"];
    bb3__0_400 -> bb7__0_400 [label="return"];
    bb3__0_400 -> bb63__0_400 [label="unwind"];
    bb5__0_400 -> bb6__0_400 [label="return"];
    bb5__0_400 -> bb66__0_400 [label="unwind"];
    bb6__0_400 -> bb56__0_400 [label=""];
    bb7__0_400 -> bb8__0_400 [label="return"];
    bb7__0_400 -> bb63__0_400 [label="unwind"];
    bb8__0_400 -> bb9__0_400 [label="return"];
    bb8__0_400 -> bb63__0_400 [label="unwind"];
    bb9__0_400 -> bb10__0_400 [label="return"];
    bb9__0_400 -> bb62__0_400 [label="unwind"];
    bb10__0_400 -> bb11__0_400 [label="return"];
    bb10__0_400 -> bb62__0_400 [label="unwind"];
    bb11__0_400 -> bb12__0_400 [label="return"];
    bb11__0_400 -> bb63__0_400 [label="unwind"];
    bb12__0_400 -> bb13__0_400 [label="return"];
    bb12__0_400 -> bb63__0_400 [label="unwind"];
    bb13__0_400 -> bb14__0_400 [label="return"];
    bb13__0_400 -> bb63__0_400 [label="unwind"];
    bb14__0_400 -> bb15__0_400 [label="0"];
    bb14__0_400 -> bb16__0_400 [label="1"];
    bb14__0_400 -> bb4__0_400 [label="otherwise"];
    bb15__0_400 -> bb18__0_400 [label="return"];
    bb15__0_400 -> bb63__0_400 [label="unwind"];
    bb16__0_400 -> bb17__0_400 [label="return"];
    bb16__0_400 -> bb65__0_400 [label="unwind"];
    bb17__0_400 -> bb56__0_400 [label="return"];
    bb17__0_400 -> bb64__0_400 [label="unwind"];
    bb18__0_400 -> bb19__0_400 [label="return"];
    bb18__0_400 -> bb63__0_400 [label="unwind"];
    bb19__0_400 -> bb20__0_400 [label="return"];
    bb19__0_400 -> bb63__0_400 [label="unwind"];
    bb20__0_400 -> bb21__0_400 [label="return"];
    bb20__0_400 -> bb63__0_400 [label="unwind"];
    bb21__0_400 -> bb22__0_400 [label="return"];
    bb21__0_400 -> bb63__0_400 [label="unwind"];
    bb22__0_400 -> bb23__0_400 [label="return"];
    bb22__0_400 -> bb63__0_400 [label="unwind"];
    bb23__0_400 -> bb24__0_400 [label="return"];
    bb23__0_400 -> bb63__0_400 [label="unwind"];
    bb24__0_400 -> bb25__0_400 [label="return"];
    bb24__0_400 -> bb63__0_400 [label="unwind"];
    bb25__0_400 -> bb26__0_400 [label="return"];
    bb25__0_400 -> bb63__0_400 [label="unwind"];
    bb26__0_400 -> bb27__0_400 [label="return"];
    bb26__0_400 -> bb61__0_400 [label="unwind"];
    bb27__0_400 -> bb28__0_400 [label="return"];
    bb27__0_400 -> bb61__0_400 [label="unwind"];
    bb28__0_400 -> bb29__0_400 [label="return"];
    bb28__0_400 -> bb63__0_400 [label="unwind"];
    bb29__0_400 -> bb30__0_400 [label="return"];
    bb29__0_400 -> bb63__0_400 [label="unwind"];
    bb30__0_400 -> bb31__0_400 [label="return"];
    bb30__0_400 -> bb63__0_400 [label="unwind"];
    bb31__0_400 -> bb32__0_400 [label="return"];
    bb31__0_400 -> bb63__0_400 [label="unwind"];
    bb32__0_400 -> bb33__0_400 [label="return"];
    bb32__0_400 -> bb63__0_400 [label="unwind"];
    bb33__0_400 -> bb34__0_400 [label="return"];
    bb33__0_400 -> bb63__0_400 [label="unwind"];
    bb34__0_400 -> bb35__0_400 [label="return"];
    bb34__0_400 -> bb63__0_400 [label="unwind"];
    bb35__0_400 -> bb36__0_400 [label="return"];
    bb35__0_400 -> bb63__0_400 [label="unwind"];
    bb36__0_400 -> bb37__0_400 [label="return"];
    bb36__0_400 -> bb60__0_400 [label="unwind"];
    bb37__0_400 -> bb38__0_400 [label="return"];
    bb37__0_400 -> bb60__0_400 [label="unwind"];
    bb38__0_400 -> bb39__0_400 [label="return"];
    bb38__0_400 -> bb63__0_400 [label="unwind"];
    bb39__0_400 -> bb40__0_400 [label="return"];
    bb39__0_400 -> bb63__0_400 [label="unwind"];
    bb40__0_400 -> bb41__0_400 [label="return"];
    bb40__0_400 -> bb63__0_400 [label="unwind"];
    bb41__0_400 -> bb42__0_400 [label="return"];
    bb41__0_400 -> bb63__0_400 [label="unwind"];
    bb42__0_400 -> bb43__0_400 [label="return"];
    bb42__0_400 -> bb63__0_400 [label="unwind"];
    bb43__0_400 -> bb44__0_400 [label="return"];
    bb43__0_400 -> bb59__0_400 [label="unwind"];
    bb44__0_400 -> bb45__0_400 [label="return"];
    bb44__0_400 -> bb59__0_400 [label="unwind"];
    bb45__0_400 -> bb46__0_400 [label="return"];
    bb45__0_400 -> bb63__0_400 [label="unwind"];
    bb46__0_400 -> bb47__0_400 [label="return"];
    bb46__0_400 -> bb63__0_400 [label="unwind"];
    bb47__0_400 -> bb48__0_400 [label="return"];
    bb47__0_400 -> bb63__0_400 [label="unwind"];
    bb48__0_400 -> bb49__0_400 [label="return"];
    bb48__0_400 -> bb63__0_400 [label="unwind"];
    bb49__0_400 -> bb50__0_400 [label="return"];
    bb49__0_400 -> bb63__0_400 [label="unwind"];
    bb50__0_400 -> bb51__0_400 [label="return"];
    bb50__0_400 -> bb58__0_400 [label="unwind"];
    bb51__0_400 -> bb52__0_400 [label="return"];
    bb51__0_400 -> bb58__0_400 [label="unwind"];
    bb52__0_400 -> bb53__0_400 [label="return"];
    bb52__0_400 -> bb63__0_400 [label="unwind"];
    bb53__0_400 -> bb54__0_400 [label="return"];
    bb53__0_400 -> bb63__0_400 [label="unwind"];
    bb54__0_400 -> bb55__0_400 [label="return"];
    bb54__0_400 -> bb64__0_400 [label="unwind"];
    bb55__0_400 -> bb57__0_400 [label=""];
    bb56__0_400 -> bb57__0_400 [label=""];
    bb58__0_400 -> bb63__0_400 [label="return"];
    bb59__0_400 -> bb63__0_400 [label="return"];
    bb60__0_400 -> bb63__0_400 [label="return"];
    bb61__0_400 -> bb63__0_400 [label="return"];
    bb62__0_400 -> bb63__0_400 [label="return"];
    bb63__0_400 -> bb64__0_400 [label="return"];
    bb65__0_400 -> bb63__0_400 [label=""];
    bb66__0_400 -> bb64__0_400 [label=""];
}
