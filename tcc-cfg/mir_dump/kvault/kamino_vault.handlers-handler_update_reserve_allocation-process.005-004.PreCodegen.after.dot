digraph Mir_0_166 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_update_reserve_allocation::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;ReErased&gt;&gt;, _2: u64, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _5: std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::VaultState&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::VaultState&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _14: &amp;ReErased std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let _15: std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _23: std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let _24: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let _26: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _27: &amp;ReErased state::VaultState;<br align="left"/>let _28: &amp;ReErased state::VaultState;<br align="left"/>let mut _29: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _31: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _32: bool;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _34: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _37: &amp;ReErased state::VaultState;<br align="left"/>let mut _38: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _39: bool;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _41: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _42: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _44: &amp;ReErased state::VaultState;<br align="left"/>let mut _45: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _46: ();<br align="left"/>let mut _47: isize;<br align="left"/>let _48: ();<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: anchor_lang::error::Error;<br align="left"/>let mut _53: anchor_lang::error::AnchorError;<br align="left"/>let mut _54: std::string::String;<br align="left"/>let mut _55: &amp;ReErased KaminoVaultError;<br align="left"/>let _56: KaminoVaultError;<br align="left"/>let mut _57: u32;<br align="left"/>let mut _58: KaminoVaultError;<br align="left"/>let mut _59: std::string::String;<br align="left"/>let mut _60: &amp;ReErased KaminoVaultError;<br align="left"/>let _61: KaminoVaultError;<br align="left"/>let mut _62: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _63: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _64: anchor_lang::error::Source;<br align="left"/>let mut _65: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _66: ();<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: anchor_lang::error::Error;<br align="left"/>let mut _70: anchor_lang::error::AnchorError;<br align="left"/>let mut _71: std::string::String;<br align="left"/>let mut _72: &amp;ReErased KaminoVaultError;<br align="left"/>let _73: KaminoVaultError;<br align="left"/>let mut _74: u32;<br align="left"/>let mut _75: KaminoVaultError;<br align="left"/>let mut _76: std::string::String;<br align="left"/>let mut _77: &amp;ReErased KaminoVaultError;<br align="left"/>let _78: KaminoVaultError;<br align="left"/>let mut _79: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _80: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _81: anchor_lang::error::Source;<br align="left"/>let mut _82: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _83: u8;<br align="left"/>let _84: ();<br align="left"/>let _85: ();<br align="left"/>let _86: ();<br align="left"/>let mut _87: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _88: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _90: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _91: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _92: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _93: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _95: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _96: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _97: &amp;ReErased &amp;ReErased str;<br align="left"/>let _98: &amp;ReErased &amp;ReErased str;<br align="left"/>let _99: &amp;ReErased str;<br align="left"/>let mut _100: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let _101: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let mut _102: &amp;ReErased std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _103: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _104: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _105: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _106: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _107: &amp;ReErased u64;<br align="left"/>let _108: &amp;ReErased u64;<br align="left"/>let mut _109: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased u64;<br align="left"/>let _111: &amp;ReErased u64;<br align="left"/>let _112: ();<br align="left"/>let mut _113: bool;<br align="left"/>let mut _114: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _115: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let mut _116: &amp;ReErased std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _117: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _118: &amp;ReErased state::VaultState;<br align="left"/>let mut _119: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _120: !;<br align="left"/>let mut _121: anchor_lang::error::Error;<br align="left"/>let mut _122: anchor_lang::error::Error;<br align="left"/>let mut _123: anchor_lang::error::AnchorError;<br align="left"/>let mut _124: std::string::String;<br align="left"/>let mut _125: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _126: anchor_lang::error::ErrorCode;<br align="left"/>let mut _127: u32;<br align="left"/>let mut _128: anchor_lang::error::ErrorCode;<br align="left"/>let mut _129: std::string::String;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _131: anchor_lang::error::ErrorCode;<br align="left"/>let mut _132: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _133: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _134: anchor_lang::error::Source;<br align="left"/>let mut _135: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _136: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _137: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _138: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let mut _139: &amp;ReErased std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _140: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _141: &amp;ReErased state::VaultState;<br align="left"/>let mut _142: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _143: ();<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _145: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _146: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _147: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _148: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _149: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _150: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _151: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _152: u64;<br align="left"/>let mut _153: u8;<br align="left"/>let mut _154: u64;<br align="left"/>let mut _155: u64;<br align="left"/>let mut _156: isize;<br align="left"/>let _157: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _158: !;<br align="left"/>let mut _159: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _160: ();<br align="left"/>let mut _161: ();<br align="left"/>let mut _162: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _163: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _164: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _165: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _166: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _167: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _168: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _169: &amp;ReErased mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;ReErased&gt;;<br align="left"/>let mut _170: &amp;ReErased mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;ReErased&gt;;<br align="left"/>let mut _171: &amp;ReErased mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;ReErased&gt;;<br align="left"/>let mut _175: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _176: bool;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug target_allocation_weight =&gt; _2;<br align="left"/>debug allocation_cap =&gt; _3;<br align="left"/>debug vault =&gt; _4;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug reserve =&gt; _14;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug reserve_key =&gt; _24;<br align="left"/>debug idx =&gt; _26;<br align="left"/>debug is_vault_admin =&gt; _32;<br align="left"/>debug is_allocation_admin =&gt; _39;<br align="left"/>debug ctoken_vault_bump =&gt; _83;<br align="left"/>debug residual =&gt; _157;<br align="left"/>debug val =&gt; _160;<br align="left"/>>;
    bb0__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_176 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_169 = deref_copy (_1.1: &amp;mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;'_&gt;)<br/>_8 = &amp;((*_169).1: anchor_lang::prelude::AccountLoader&lt;'_, state::VaultState&gt;)<br/></td></tr><tr><td align="left">_7 = anchor_lang::prelude::AccountLoader::&lt;'_, state::VaultState&gt;::load_mut(move _8)</td></tr></table>>];
    bb1__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;RefMut&lt;'_, state::VaultState&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_9 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_6 as Continue).0: std::cell::RefMut&lt;'_, state::VaultState&gt;)<br/>_5 = move _13<br/>StorageDead(_13)<br/>_4 = &amp;mut _5<br/>_177 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_170 = deref_copy (_1.1: &amp;mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;'_&gt;)<br/>_18 = &amp;((*_170).4: anchor_lang::prelude::AccountLoader&lt;'_, kamino_lending::Reserve&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, kamino_lending::Reserve&gt;::load(move _18)</td></tr></table>>];
    bb4__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_187 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;Ref&lt;'_, kamino_lending::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_16 as Continue).0: std::cell::Ref&lt;'_, kamino_lending::Reserve&gt;)<br/>_15 = move _23<br/>StorageDead(_23)<br/>_14 = &amp;_15<br/>_179 = discriminant(_16)<br/>StorageDead(_16)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_171 = deref_copy (_1.1: &amp;mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;'_&gt;)<br/>_25 = &amp;((*_171).4: anchor_lang::prelude::AccountLoader&lt;'_, kamino_lending::Reserve&gt;)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, kamino_lending::Reserve&gt; as anchor_lang::Key&gt;::key(move _25)</td></tr></table>>];
    bb10__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_185 = discriminant(_16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;(*_4)<br/></td></tr><tr><td align="left">_28 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _29)</td></tr></table>>];
    bb13__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_27 = &amp;(*_28)<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_24<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_26 = state::VaultState::get_reserve_idx_in_allocation(move _27, move _30)</td></tr></table>>];
    bb14__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_172 = deref_copy (_1.1: &amp;mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;'_&gt;)<br/>_35 = &amp;((*_172).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_34 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _35)</td></tr></table>>];
    bb15__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_33 = &amp;_34<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_4)<br/></td></tr><tr><td align="left">_37 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _38)</td></tr></table>>];
    bb16__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_36 = &amp;((*_37).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _33, move _36)</td></tr></table>>];
    bb17__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_173 = deref_copy (_1.1: &amp;mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;'_&gt;)<br/>_42 = &amp;((*_173).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_41 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _42)</td></tr></table>>];
    bb18__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_40 = &amp;_41<br/>StorageDead(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;(*_4)<br/></td></tr><tr><td align="left">_44 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb19__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = &amp;((*_44).34: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _40, move _43)</td></tr></table>>];
    bb20__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageLive(_46)<br/>_47 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb21__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = _32<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb22__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = _39<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb23__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = _32<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb24__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_168 = const _<br/>_55 = &amp;(*_168)<br/></td></tr><tr><td align="left">_54 = KaminoVaultError::name(move _55)</td></tr></table>>];
    bb25__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = KaminoVaultError::WrongAdminOrAllocationAdmin<br/></td></tr><tr><td align="left">_57 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _58)</td></tr></table>>];
    bb26__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_167 = const _<br/>_60 = &amp;(*_167)<br/></td></tr><tr><td align="left">_59 = &lt;KaminoVaultError as ToString&gt;::to_string(move _60)</td></tr></table>>];
    bb27__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\handlers\\handler_update_reserve_allocation.rs&quot;, line: const 26_u32 }<br/>_63 = anchor_lang::error::ErrorOrigin::Source(move _64)<br/>StorageDead(_64)<br/>_62 = Option::&lt;ErrorOrigin&gt;::Some(move _63)<br/>StorageDead(_63)<br/>StorageLive(_65)<br/>_65 = Option::&lt;ComparedValues&gt;::None<br/>_53 = anchor_lang::error::AnchorError { error_name: move _54, error_code_number: move _57, error_msg: move _59, error_origin: move _62, compared_values: move _65 }<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _53)</td></tr></table>>];
    bb28__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _52)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_48 = const ()<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>_46 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_166 = const _<br/>_72 = &amp;(*_166)<br/></td></tr><tr><td align="left">_71 = KaminoVaultError::name(move _72)</td></tr></table>>];
    bb31__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = KaminoVaultError::WrongAdminOrAllocationAdmin<br/></td></tr><tr><td align="left">_74 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _75)</td></tr></table>>];
    bb32__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_165 = const _<br/>_77 = &amp;(*_165)<br/></td></tr><tr><td align="left">_76 = &lt;KaminoVaultError as ToString&gt;::to_string(move _77)</td></tr></table>>];
    bb33__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\handlers\\handler_update_reserve_allocation.rs&quot;, line: const 32_u32 }<br/>_80 = anchor_lang::error::ErrorOrigin::Source(move _81)<br/>StorageDead(_81)<br/>_79 = Option::&lt;ErrorOrigin&gt;::Some(move _80)<br/>StorageDead(_80)<br/>StorageLive(_82)<br/>_82 = Option::&lt;ComparedValues&gt;::None<br/>_70 = anchor_lang::error::AnchorError { error_name: move _71, error_code_number: move _74, error_msg: move _76, error_origin: move _79, compared_values: move _82 }<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _70)</td></tr></table>>];
    bb34__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _69)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_66 = const ()<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>_46 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_83)<br/>_83 = ((_1.3: handlers::handler_update_reserve_allocation::UpdateReserveAllocationBumps).0: u8)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_164 = const _<br/>_90 = &amp;(*_164)<br/>_89 = &amp;(*_90)<br/>_88 = move _89 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_89)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;(*_14)<br/></td></tr><tr><td align="left">_101 = &lt;Ref&lt;'_, kamino_lending::Reserve&gt; as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb37__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_100 = &amp;(*_101)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_99 = kamino_lending::Reserve::token_symbol(move _100)</td></tr></table>>];
    bb38__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_98 = &amp;_99<br/>_97 = &amp;(*_98)<br/></td></tr><tr><td align="left">_96 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;&amp;str&gt;(move _97)</td></tr></table>>];
    bb39__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;_24<br/>_104 = &amp;(*_105)<br/></td></tr><tr><td align="left">_103 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _104)</td></tr></table>>];
    bb40__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_2<br/>_107 = &amp;(*_108)<br/></td></tr><tr><td align="left">_106 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _107)</td></tr></table>>];
    bb41__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;_3<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _110)</td></tr></table>>];
    bb42__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_95 = [move _96, move _103, move _106, move _109]<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_96)<br/>_94 = &amp;_95<br/>_93 = &amp;(*_94)<br/>_92 = move _93 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_87 = Arguments::&lt;'_&gt;::new_v1(move _88, move _92)</td></tr></table>>];
    bb43__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = _print(move _87)</td></tr></table>>];
    bb44__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>_85 = const ()<br/>StorageDead(_85)<br/>_84 = const ()<br/>StorageDead(_84)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = &amp;(*_14)<br/></td></tr><tr><td align="left">_115 = &lt;Ref&lt;'_, kamino_lending::Reserve&gt; as Deref&gt;::deref(move _116)</td></tr></table>>];
    bb45__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_114 = &amp;(((*_115).5: kamino_lending::ReserveLiquidity).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;(*_4)<br/></td></tr><tr><td align="left">_118 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _119)</td></tr></table>>];
    bb46__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_117 = &amp;((*_118).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_113 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _114, move _117)</td></tr></table>>];
    bb47__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb48__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_163 = const _<br/>_125 = &amp;(*_163)<br/></td></tr><tr><td align="left">_124 = anchor_lang::error::ErrorCode::name(move _125)</td></tr></table>>];
    bb49__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = RequireEqViolated<br/></td></tr><tr><td align="left">_127 = &lt;anchor_lang::error::ErrorCode as Into&lt;u32&gt;&gt;::into(move _128)</td></tr></table>>];
    bb50__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_162 = const _<br/>_130 = &amp;(*_162)<br/></td></tr><tr><td align="left">_129 = &lt;anchor_lang::error::ErrorCode as ToString&gt;::to_string(move _130)</td></tr></table>>];
    bb51__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\handlers\\handler_update_reserve_allocation.rs&quot;, line: const 44_u32 }<br/>_133 = anchor_lang::error::ErrorOrigin::Source(move _134)<br/>StorageDead(_134)<br/>_132 = Option::&lt;ErrorOrigin&gt;::Some(move _133)<br/>StorageDead(_133)<br/>StorageLive(_135)<br/>_135 = Option::&lt;ComparedValues&gt;::None<br/>_123 = anchor_lang::error::AnchorError { error_name: move _124, error_code_number: move _127, error_msg: move _129, error_origin: move _132, compared_values: move _135 }<br/>StorageDead(_135)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _123)</td></tr></table>>];
    bb52__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_176 = const true<br/>StorageDead(_123)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;(*_14)<br/></td></tr><tr><td align="left">_138 = &lt;Ref&lt;'_, kamino_lending::Reserve&gt; as Deref&gt;::deref(move _139)</td></tr></table>>];
    bb53__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>_137 = (((*_138).5: kamino_lending::ReserveLiquidity).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;(*_4)<br/></td></tr><tr><td align="left">_141 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _142)</td></tr></table>>];
    bb54__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = ((*_141).3: anchor_lang::prelude::Pubkey)<br/>_136 = (move _137, move _140)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>_176 = const false<br/></td></tr><tr><td align="left">_121 = anchor_lang::error::Error::with_values::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey&gt;(move _122, move _136)</td></tr></table>>];
    bb55__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_176 = const false<br/>StorageDead(_122)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _121)<br/>StorageDead(_121)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>_112 = const ()<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;mut (*_4)<br/></td></tr><tr><td align="left">_147 = &lt;RefMut&lt;'_, state::VaultState&gt; as DerefMut&gt;::deref_mut(move _148)</td></tr></table>>];
    bb57__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_146 = &amp;mut (*_147)<br/>StorageDead(_148)<br/>StorageLive(_149)<br/>_149 = _24<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_174 = deref_copy (_1.1: &amp;mut handlers::handler_update_reserve_allocation::UpdateReserveAllocation&lt;'_&gt;)<br/>_175 = deref_copy ((*_174).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_192 = (((_175.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_151 = &amp;(*_192)<br/></td></tr><tr><td align="left">_150 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _151)</td></tr></table>>];
    bb58__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = _83<br/></td></tr><tr><td align="left">_152 = &lt;u64 as From&lt;u8&gt;&gt;::from(move _153)</td></tr></table>>];
    bb59__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageLive(_154)<br/>_154 = _2<br/>StorageLive(_155)<br/>_155 = _3<br/></td></tr><tr><td align="left">_145 = state::VaultState::upsert_reserve_allocation(move _146, move _149, move _150, move _152, move _154, move _155)</td></tr></table>>];
    bb60__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb61__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_156 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb62__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_144 as Continue).0: ())<br/>_143 = _160<br/>StorageDead(_160)<br/>_181 = discriminant(_144)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageLive(_161)<br/>_161 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _161)<br/>StorageDead(_161)<br/>StorageDead(_83)<br/>StorageDead(_39)<br/>StorageDead(_32)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb63__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = move ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_159)<br/>_159 = move _157<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _159)</td></tr></table>>];
    bb64__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_157)<br/>_183 = discriminant(_144)<br/>StorageDead(_147)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb66__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_32)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb70__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb71__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left">return</td></tr></table>>];
    bb73__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb74__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">74 (cleanup)</td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb75__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">75 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb76__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">76 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb77__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">77 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb78__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">78 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb79__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">79 (cleanup)</td></tr><tr><td align="left" balign="left">_189 = discriminant(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">80 (cleanup)</td></tr><tr><td align="left">drop(_122)</td></tr></table>>];
    bb81__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">switchInt(_176)</td></tr></table>>];
    bb82__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left" balign="left">_190 = discriminant(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_166 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left" balign="left">_191 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_166 -> bb1__0_166 [label="return"];
    bb1__0_166 -> bb2__0_166 [label="return"];
    bb1__0_166 -> bb78__0_166 [label="unwind"];
    bb2__0_166 -> bb3__0_166 [label="0"];
    bb2__0_166 -> bb5__0_166 [label="1"];
    bb2__0_166 -> bb4__0_166 [label="otherwise"];
    bb3__0_166 -> bb7__0_166 [label="return"];
    bb3__0_166 -> bb77__0_166 [label="unwind"];
    bb5__0_166 -> bb6__0_166 [label="return"];
    bb5__0_166 -> bb83__0_166 [label="unwind"];
    bb6__0_166 -> bb71__0_166 [label=""];
    bb7__0_166 -> bb8__0_166 [label="return"];
    bb7__0_166 -> bb77__0_166 [label="unwind"];
    bb8__0_166 -> bb9__0_166 [label="0"];
    bb8__0_166 -> bb10__0_166 [label="1"];
    bb8__0_166 -> bb4__0_166 [label="otherwise"];
    bb9__0_166 -> bb12__0_166 [label="return"];
    bb9__0_166 -> bb76__0_166 [label="unwind"];
    bb10__0_166 -> bb11__0_166 [label="return"];
    bb10__0_166 -> bb82__0_166 [label="unwind"];
    bb11__0_166 -> bb70__0_166 [label=""];
    bb12__0_166 -> bb13__0_166 [label="return"];
    bb12__0_166 -> bb76__0_166 [label="unwind"];
    bb13__0_166 -> bb14__0_166 [label="return"];
    bb13__0_166 -> bb76__0_166 [label="unwind"];
    bb14__0_166 -> bb15__0_166 [label="return"];
    bb14__0_166 -> bb76__0_166 [label="unwind"];
    bb15__0_166 -> bb16__0_166 [label="return"];
    bb15__0_166 -> bb76__0_166 [label="unwind"];
    bb16__0_166 -> bb17__0_166 [label="return"];
    bb16__0_166 -> bb76__0_166 [label="unwind"];
    bb17__0_166 -> bb18__0_166 [label="return"];
    bb17__0_166 -> bb76__0_166 [label="unwind"];
    bb18__0_166 -> bb19__0_166 [label="return"];
    bb18__0_166 -> bb76__0_166 [label="unwind"];
    bb19__0_166 -> bb20__0_166 [label="return"];
    bb19__0_166 -> bb76__0_166 [label="unwind"];
    bb20__0_166 -> bb21__0_166 [label="0"];
    bb20__0_166 -> bb22__0_166 [label="1"];
    bb20__0_166 -> bb4__0_166 [label="otherwise"];
    bb21__0_166 -> bb30__0_166 [label="0"];
    bb21__0_166 -> bb35__0_166 [label="otherwise"];
    bb22__0_166 -> bb23__0_166 [label="0"];
    bb22__0_166 -> bb29__0_166 [label="otherwise"];
    bb23__0_166 -> bb24__0_166 [label="0"];
    bb23__0_166 -> bb29__0_166 [label="otherwise"];
    bb24__0_166 -> bb25__0_166 [label="return"];
    bb24__0_166 -> bb76__0_166 [label="unwind"];
    bb25__0_166 -> bb26__0_166 [label="return"];
    bb25__0_166 -> bb75__0_166 [label="unwind"];
    bb26__0_166 -> bb27__0_166 [label="return"];
    bb26__0_166 -> bb75__0_166 [label="unwind"];
    bb27__0_166 -> bb28__0_166 [label="return"];
    bb27__0_166 -> bb76__0_166 [label="unwind"];
    bb28__0_166 -> bb68__0_166 [label=""];
    bb29__0_166 -> bb36__0_166 [label=""];
    bb30__0_166 -> bb31__0_166 [label="return"];
    bb30__0_166 -> bb76__0_166 [label="unwind"];
    bb31__0_166 -> bb32__0_166 [label="return"];
    bb31__0_166 -> bb74__0_166 [label="unwind"];
    bb32__0_166 -> bb33__0_166 [label="return"];
    bb32__0_166 -> bb74__0_166 [label="unwind"];
    bb33__0_166 -> bb34__0_166 [label="return"];
    bb33__0_166 -> bb76__0_166 [label="unwind"];
    bb34__0_166 -> bb68__0_166 [label=""];
    bb35__0_166 -> bb36__0_166 [label=""];
    bb36__0_166 -> bb37__0_166 [label="return"];
    bb36__0_166 -> bb76__0_166 [label="unwind"];
    bb37__0_166 -> bb38__0_166 [label="return"];
    bb37__0_166 -> bb76__0_166 [label="unwind"];
    bb38__0_166 -> bb39__0_166 [label="return"];
    bb38__0_166 -> bb76__0_166 [label="unwind"];
    bb39__0_166 -> bb40__0_166 [label="return"];
    bb39__0_166 -> bb76__0_166 [label="unwind"];
    bb40__0_166 -> bb41__0_166 [label="return"];
    bb40__0_166 -> bb76__0_166 [label="unwind"];
    bb41__0_166 -> bb42__0_166 [label="return"];
    bb41__0_166 -> bb76__0_166 [label="unwind"];
    bb42__0_166 -> bb43__0_166 [label="return"];
    bb42__0_166 -> bb76__0_166 [label="unwind"];
    bb43__0_166 -> bb44__0_166 [label="return"];
    bb43__0_166 -> bb76__0_166 [label="unwind"];
    bb44__0_166 -> bb45__0_166 [label="return"];
    bb44__0_166 -> bb76__0_166 [label="unwind"];
    bb45__0_166 -> bb46__0_166 [label="return"];
    bb45__0_166 -> bb76__0_166 [label="unwind"];
    bb46__0_166 -> bb47__0_166 [label="return"];
    bb46__0_166 -> bb76__0_166 [label="unwind"];
    bb47__0_166 -> bb56__0_166 [label="0"];
    bb47__0_166 -> bb48__0_166 [label="otherwise"];
    bb48__0_166 -> bb49__0_166 [label="return"];
    bb48__0_166 -> bb76__0_166 [label="unwind"];
    bb49__0_166 -> bb50__0_166 [label="return"];
    bb49__0_166 -> bb73__0_166 [label="unwind"];
    bb50__0_166 -> bb51__0_166 [label="return"];
    bb50__0_166 -> bb73__0_166 [label="unwind"];
    bb51__0_166 -> bb52__0_166 [label="return"];
    bb51__0_166 -> bb76__0_166 [label="unwind"];
    bb52__0_166 -> bb53__0_166 [label="return"];
    bb52__0_166 -> bb81__0_166 [label="unwind"];
    bb53__0_166 -> bb54__0_166 [label="return"];
    bb53__0_166 -> bb81__0_166 [label="unwind"];
    bb54__0_166 -> bb55__0_166 [label="return"];
    bb54__0_166 -> bb81__0_166 [label="unwind"];
    bb55__0_166 -> bb67__0_166 [label=""];
    bb56__0_166 -> bb57__0_166 [label="return"];
    bb56__0_166 -> bb76__0_166 [label="unwind"];
    bb57__0_166 -> bb58__0_166 [label="return"];
    bb57__0_166 -> bb76__0_166 [label="unwind"];
    bb58__0_166 -> bb59__0_166 [label="return"];
    bb58__0_166 -> bb76__0_166 [label="unwind"];
    bb59__0_166 -> bb60__0_166 [label="return"];
    bb59__0_166 -> bb76__0_166 [label="unwind"];
    bb60__0_166 -> bb61__0_166 [label="return"];
    bb60__0_166 -> bb76__0_166 [label="unwind"];
    bb61__0_166 -> bb62__0_166 [label="0"];
    bb61__0_166 -> bb63__0_166 [label="1"];
    bb61__0_166 -> bb4__0_166 [label="otherwise"];
    bb62__0_166 -> bb65__0_166 [label="return"];
    bb62__0_166 -> bb77__0_166 [label="unwind"];
    bb63__0_166 -> bb64__0_166 [label="return"];
    bb63__0_166 -> bb79__0_166 [label="unwind"];
    bb64__0_166 -> bb67__0_166 [label=""];
    bb65__0_166 -> bb66__0_166 [label="return"];
    bb65__0_166 -> bb78__0_166 [label="unwind"];
    bb66__0_166 -> bb72__0_166 [label=""];
    bb67__0_166 -> bb69__0_166 [label=""];
    bb68__0_166 -> bb69__0_166 [label=""];
    bb69__0_166 -> bb70__0_166 [label="return"];
    bb69__0_166 -> bb77__0_166 [label="unwind"];
    bb70__0_166 -> bb71__0_166 [label="return"];
    bb70__0_166 -> bb78__0_166 [label="unwind"];
    bb71__0_166 -> bb72__0_166 [label=""];
    bb73__0_166 -> bb76__0_166 [label="return"];
    bb74__0_166 -> bb76__0_166 [label="return"];
    bb75__0_166 -> bb76__0_166 [label="return"];
    bb76__0_166 -> bb77__0_166 [label="return"];
    bb77__0_166 -> bb78__0_166 [label="return"];
    bb79__0_166 -> bb76__0_166 [label=""];
    bb80__0_166 -> bb76__0_166 [label="return"];
    bb81__0_166 -> bb76__0_166 [label="0"];
    bb81__0_166 -> bb80__0_166 [label="otherwise"];
    bb82__0_166 -> bb77__0_166 [label=""];
    bb83__0_166 -> bb78__0_166 [label=""];
}
