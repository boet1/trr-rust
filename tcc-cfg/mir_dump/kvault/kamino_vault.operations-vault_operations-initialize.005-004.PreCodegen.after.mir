// MIR for `operations::vault_operations::initialize` after PreCodegen

fn operations::vault_operations::initialize(_1: &mut state::VaultState, _2: u8, _3: u8, _4: u64) -> std::result::Result<(), anchor_lang::error::Error> {
    debug vault => _1;
    debug token_decimals => _2;
    debug shares_decimals => _3;
    debug current_timestamp => _4;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _5: ();
    let _6: ();
    let _7: ();
    let mut _8: std::fmt::Arguments<'_>;
    let mut _9: &[&str];
    let mut _10: &[&str; 3];
    let _11: &[&str; 3];
    let _12: [&str; 3];
    let mut _13: &[core::fmt::rt::Argument<'_>];
    let mut _14: &[core::fmt::rt::Argument<'_>; 2];
    let _15: &[core::fmt::rt::Argument<'_>; 2];
    let _16: [core::fmt::rt::Argument<'_>; 2];
    let mut _17: core::fmt::rt::Argument<'_>;
    let mut _18: &u8;
    let _19: &u8;
    let mut _20: core::fmt::rt::Argument<'_>;
    let mut _21: &u8;
    let _22: &u8;
    let mut _23: u8;
    let mut _24: u8;
    let mut _25: u64;
    let mut _26: &state::VaultState;
    let mut _27: &[&str; 3];

    bb0: {
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _27 = const _;
        _11 = &(*_27);
        _10 = &(*_11);
        _9 = move _10 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_10);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &_2;
        _18 = &(*_19);
        _17 = core::fmt::rt::Argument::<'_>::new_display::<u8>(move _18) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_18);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &_3;
        _21 = &(*_22);
        _20 = core::fmt::rt::Argument::<'_>::new_display::<u8>(move _21) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_21);
        _16 = [move _17, move _20];
        StorageDead(_20);
        StorageDead(_17);
        _15 = &_16;
        _14 = &(*_15);
        _13 = move _14 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_14);
        _8 = Arguments::<'_>::new_v1(move _9, move _13) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_13);
        StorageDead(_9);
        _7 = _print(move _8) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_8);
        StorageDead(_22);
        StorageDead(_19);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_11);
        StorageDead(_7);
        _6 = const ();
        StorageDead(_6);
        _5 = const ();
        StorageDead(_5);
        StorageLive(_23);
        _23 = _2;
        ((*_1).4: u64) = move _23 as u64 (IntToInt);
        StorageDead(_23);
        StorageLive(_24);
        _24 = _3;
        ((*_1).8: u64) = move _24 as u64 (IntToInt);
        StorageDead(_24);
        ((*_1).9: u64) = const 0_u64;
        ((*_1).10: u64) = const 0_u64;
        StorageLive(_25);
        _25 = _4;
        ((*_1).32: u64) = move _25;
        StorageDead(_25);
        StorageLive(_26);
        _26 = &(*_1);
        _0 = state::VaultState::validate(move _26) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_26);
        return;
    }
}
