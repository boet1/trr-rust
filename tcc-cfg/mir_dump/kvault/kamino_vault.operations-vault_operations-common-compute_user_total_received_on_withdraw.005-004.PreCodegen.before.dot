digraph Mir_0_431 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn compute_user_total_received_on_withdraw(_1: u64, _2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, _3: u64) -&gt; u64<br align="left"/>let _4: u64;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: u64;<br align="left"/>let mut _8: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _9: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _10: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _11: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: u64;<br align="left"/>let _14: ();<br align="left"/>let _15: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _16: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _17: ();<br align="left"/>let mut _18: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _19: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _20: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _21: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _22: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _23: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _24: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _27: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _28: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _29: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _30: &amp;ReErased u64;<br align="left"/>let _31: &amp;ReErased u64;<br align="left"/>let mut _32: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _34: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _35: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _37: Closure(DefId(0:2119 ~ kamino_vault[b3c4]::operations::vault_operations::common::compute_user_total_received_on_withdraw::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;,)]);<br align="left"/>let mut _38: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _39: ();<br align="left"/>let mut _40: &amp;ReErased str;<br align="left"/>let _41: &amp;ReErased str;<br align="left"/>let mut _42: &amp;ReErased std::string::String;<br align="left"/>let _43: &amp;ReErased std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let _45: std::string::String;<br align="left"/>let mut _46: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _48: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _49: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _50: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _53: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _54: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _55: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _56: &amp;ReErased &amp;ReErased str;<br align="left"/>let _57: &amp;ReErased &amp;ReErased str;<br align="left"/>let _58: &amp;ReErased str;<br align="left"/>let mut _59: &amp;ReErased arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _61: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug shares_issued =&gt; _1;<br align="left"/>debug vault_total_holdings =&gt; _2;<br align="left"/>debug shares_to_withdraw =&gt; _3;<br align="left"/>debug total_for_user =&gt; _4;<br align="left"/>debug formatted =&gt; _15;<br align="left"/>debug af =&gt; _16;<br align="left"/>debug res =&gt; _45;<br align="left"/>>;
    bb0__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/>StorageLive(_7)<br/>_7 = _3<br/>_5 = Eq(move _6, move _7)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = &amp;_2<br/></td></tr><tr><td align="left">_4 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _8)</td></tr></table>>];
    bb2__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;_2<br/>StorageLive(_12)<br/>_12 = _3<br/>StorageLive(_13)<br/>_13 = _1<br/></td></tr><tr><td align="left">_10 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::full_mul_int_ratio::&lt;u64, u64&gt;(move _11, move _12, move _13)</td></tr></table>>];
    bb4__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_9 = &amp;_10<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_4 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _9)</td></tr></table>>];
    bb5__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = ArrForm::&lt;150&gt;::new()</td></tr></table>>];
    bb7__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut _16<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_61 = const _<br/>_23 = &amp;(*_61)<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_4<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _30)</td></tr></table>>];
    bb8__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = &amp;_2<br/></td></tr><tr><td align="left">_35 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _36)</td></tr></table>>];
    bb9__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _33)</td></tr></table>>];
    bb10__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_28 = [move _29, move _32]<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/>_25 = move _26 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_20 = Arguments::&lt;'_&gt;::new_v1(move _21, move _25)</td></tr></table>>];
    bb11__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_18 = ArrForm::&lt;150&gt;::format(move _19, move _20)</td></tr></table>>];
    bb12__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;mut _16<br/>_37 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _38 }<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _18, move _37)</td></tr></table>>];
    bb13__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_18)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>_15 = move _16<br/>StorageDead(_16)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_60 = const _<br/>_49 = &amp;(*_60)<br/>_48 = &amp;(*_49)<br/>_47 = move _48 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_15<br/></td></tr><tr><td align="left">_58 = ArrForm::&lt;150&gt;::as_str(move _59)</td></tr></table>>];
    bb14__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_57 = &amp;_58<br/>_56 = &amp;(*_57)<br/></td></tr><tr><td align="left">_55 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _56)</td></tr></table>>];
    bb15__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_54 = [move _55]<br/>StorageDead(_55)<br/>_53 = &amp;_54<br/>_52 = &amp;(*_53)<br/>_51 = move _52 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_46 = Arguments::&lt;'_&gt;::new_v1(move _47, move _51)</td></tr></table>>];
    bb16__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = format(move _46)</td></tr></table>>];
    bb17__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/>_44 = move _45<br/>StorageDead(_45)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = &lt;String as Deref&gt;::deref(move _42)</td></tr></table>>];
    bb18__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_40 = &amp;(*_41)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_39 = solana_program::log::sol_log(move _40)</td></tr></table>>];
    bb19__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb20__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>_14 = const ()<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>_0 = _4<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb22__0_431 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_431 -> bb3__0_431 [label="0"];
    bb0__0_431 -> bb1__0_431 [label="otherwise"];
    bb1__0_431 -> bb2__0_431 [label="return"];
    bb2__0_431 -> bb6__0_431 [label=""];
    bb3__0_431 -> bb4__0_431 [label="return"];
    bb4__0_431 -> bb5__0_431 [label="return"];
    bb5__0_431 -> bb6__0_431 [label=""];
    bb6__0_431 -> bb7__0_431 [label="return"];
    bb7__0_431 -> bb8__0_431 [label="return"];
    bb8__0_431 -> bb9__0_431 [label="return"];
    bb9__0_431 -> bb10__0_431 [label="return"];
    bb10__0_431 -> bb11__0_431 [label="return"];
    bb11__0_431 -> bb12__0_431 [label="return"];
    bb12__0_431 -> bb13__0_431 [label="return"];
    bb13__0_431 -> bb14__0_431 [label="return"];
    bb14__0_431 -> bb15__0_431 [label="return"];
    bb15__0_431 -> bb16__0_431 [label="return"];
    bb16__0_431 -> bb17__0_431 [label="return"];
    bb17__0_431 -> bb18__0_431 [label="return"];
    bb17__0_431 -> bb21__0_431 [label="unwind"];
    bb18__0_431 -> bb19__0_431 [label="return"];
    bb18__0_431 -> bb21__0_431 [label="unwind"];
    bb19__0_431 -> bb20__0_431 [label="return"];
    bb19__0_431 -> bb22__0_431 [label="unwind"];
    bb21__0_431 -> bb22__0_431 [label="return"];
}
