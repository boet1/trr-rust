// MIR for `operations::vault_operations::common::<impl at programs\kvault\src\operations\vault_operations.rs:878:5: 878:33>::fmt` after PreCodegen

fn operations::vault_operations::common::<impl at programs\kvault\src\operations\vault_operations.rs:878:5: 878:33>::fmt(_1: &Invested, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: std::vec::Vec<operations::vault_operations::common::InvestedReserve>;
    let mut _4: std::iter::Cloned<std::iter::Filter<std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>, {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}>>;
    let mut _5: std::iter::Filter<std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>, {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}>;
    let mut _6: std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>;
    let mut _7: &[operations::vault_operations::common::InvestedReserve];
    let mut _8: &[operations::vault_operations::common::InvestedReserve; 25];
    let mut _9: {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28};
    let mut _10: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _11: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _12: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _13: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _14: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _15: std::fmt::DebugStruct<'_, '_>;
    let mut _16: &mut std::fmt::Formatter<'_>;
    let mut _17: &str;
    let _18: &str;
    let mut _19: &str;
    let _20: &str;
    let mut _21: &dyn std::fmt::Debug;
    let mut _22: &kamino_lending::utils::FractionDisplay<'_>;
    let _23: &kamino_lending::utils::FractionDisplay<'_>;
    let _24: kamino_lending::utils::FractionDisplay<'_>;
    let mut _25: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _26: &str;
    let _27: &str;
    let mut _28: &dyn std::fmt::Debug;
    let mut _29: &std::vec::Vec<operations::vault_operations::common::InvestedReserve>;
    let _30: &std::vec::Vec<operations::vault_operations::common::InvestedReserve>;
    let mut _31: std::boxed::Box<[operations::vault_operations::common::InvestedReserve; 25]>;
    let mut _32: *const [operations::vault_operations::common::InvestedReserve; 25];
    scope 1 {
        debug allocations_filtered => _3;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _31 = deref_copy ((*_1).0: std::boxed::Box<[operations::vault_operations::common::InvestedReserve; 25]>);
        _32 = (((_31.0: std::ptr::Unique<[operations::vault_operations::common::InvestedReserve; 25]>).0: std::ptr::NonNull<[operations::vault_operations::common::InvestedReserve; 25]>).0: *const [operations::vault_operations::common::InvestedReserve; 25]);
        _8 = &(*_32);
        _7 = move _8 as &[operations::vault_operations::common::InvestedReserve] (PointerCoercion(Unsize));
        StorageDead(_8);
        _6 = core::slice::<impl [InvestedReserve]>::iter(move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageLive(_9);
        _9 = {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28};
        _5 = <std::slice::Iter<'_, InvestedReserve> as Iterator>::filter::<{closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}>(move _6, move _9) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_9);
        StorageDead(_6);
        _4 = <Filter<std::slice::Iter<'_, InvestedReserve>, {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}> as Iterator>::cloned::<'_, InvestedReserve>(move _5) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_5);
        _3 = <Cloned<Filter<std::slice::Iter<'_, InvestedReserve>, {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}>> as Iterator>::collect::<Vec<InvestedReserve>>(move _4) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_4);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &mut (*_2);
        StorageLive(_17);
        StorageLive(_18);
        _18 = const "";
        _17 = &(*_18);
        _15 = Formatter::<'_>::debug_struct(move _16, move _17) -> [return: bb5, unwind: bb11];
    }

    bb5: {
        _14 = &mut _15;
        StorageDead(_17);
        StorageDead(_16);
        StorageLive(_19);
        StorageLive(_20);
        _20 = const "total";
        _19 = &(*_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &((*_1).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _24 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _25) -> [return: bb6, unwind: bb11];
    }

    bb6: {
        StorageDead(_25);
        _23 = &_24;
        _22 = &(*_23);
        _21 = move _22 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_22);
        _13 = DebugStruct::<'_, '_>::field(move _14, move _19, move _21) -> [return: bb7, unwind: bb11];
    }

    bb7: {
        _12 = &mut (*_13);
        StorageDead(_21);
        StorageDead(_19);
        StorageDead(_14);
        StorageLive(_26);
        StorageLive(_27);
        _27 = const "allocations";
        _26 = &(*_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &_3;
        _29 = &(*_30);
        _28 = move _29 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_29);
        _11 = DebugStruct::<'_, '_>::field(move _12, move _26, move _28) -> [return: bb8, unwind: bb11];
    }

    bb8: {
        _10 = &mut (*_11);
        StorageDead(_28);
        StorageDead(_26);
        StorageDead(_12);
        _0 = DebugStruct::<'_, '_>::finish(move _10) -> [return: bb9, unwind: bb11];
    }

    bb9: {
        StorageDead(_10);
        drop(_3) -> [return: bb10, unwind: bb12];
    }

    bb10: {
        StorageDead(_3);
        StorageDead(_30);
        StorageDead(_27);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_20);
        StorageDead(_18);
        StorageDead(_15);
        StorageDead(_13);
        StorageDead(_11);
        return;
    }

    bb11 (cleanup): {
        drop(_3) -> [return: bb12, unwind terminate(cleanup)];
    }

    bb12 (cleanup): {
        resume;
    }
}
