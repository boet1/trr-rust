digraph Mir_0_2992 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;impl From&lt;KaminoVaultError&gt; for u32&gt;::from(_1: KaminoVaultError) -&gt; u32<br align="left"/>let mut _2: u32;<br align="left"/>let _3: KaminoVaultError;<br align="left"/>let mut _4: u32;<br align="left"/>let mut _5: u32;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: bool;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: (u32, bool);<br align="left"/>debug e =&gt; _1;<br align="left"/>>;
    bb0__0_2992 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = _1<br/>_4 = discriminant(_3)<br/>_5 = _4 as u32 (IntToInt)<br/>_6 = Ge(_5, const 1000_u32)<br/>_7 = Le(_5, const 1048_u32)<br/>_8 = BitAnd(move _6, move _7)<br/>assume(move _8)<br/>_2 = move _4 as u32 (IntToInt)<br/>StorageDead(_3)<br/>_9 = CheckedAdd(_2, const _)<br/></td></tr><tr><td align="left">assert(!move (_9.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _2, const _)</td></tr></table>>];
    bb1__0_2992 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_0 = move (_9.0: u32)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2992 -> bb1__0_2992 [label="success"];
}
