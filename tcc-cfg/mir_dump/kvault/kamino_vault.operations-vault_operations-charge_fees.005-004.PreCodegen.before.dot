digraph Mir_0_406 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn charge_fees(_1: &amp;ReErased mut state::VaultState, _2: &amp;ReErased operations::vault_operations::common::Invested, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: ();<br align="left"/>let _10: u64;<br align="left"/>let mut _11: u64;<br align="left"/>let mut _12: u64;<br align="left"/>let _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _14: std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased state::VaultState;<br align="left"/>let mut _16: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _17: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _18: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _19: &amp;ReErased state::VaultState;<br align="left"/>let _20: ();<br align="left"/>let _21: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _22: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _26: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _28: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _29: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _30: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _32: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _34: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _35: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _36: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _37: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _38: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _42: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _43: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _45: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased u64;<br align="left"/>let _47: &amp;ReErased u64;<br align="left"/>let mut _48: Closure(DefId(0:2110 ~ kamino_vault[b3c4]::operations::vault_operations::charge_fees::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;,)]);<br align="left"/>let mut _49: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _50: ();<br align="left"/>let mut _51: &amp;ReErased str;<br align="left"/>let _52: &amp;ReErased str;<br align="left"/>let mut _53: &amp;ReErased std::string::String;<br align="left"/>let _54: &amp;ReErased std::string::String;<br align="left"/>let _55: std::string::String;<br align="left"/>let _56: std::string::String;<br align="left"/>let mut _57: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _59: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _60: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _61: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _62: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _63: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _64: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _65: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _66: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased &amp;ReErased str;<br align="left"/>let _68: &amp;ReErased &amp;ReErased str;<br align="left"/>let _69: &amp;ReErased str;<br align="left"/>let mut _70: &amp;ReErased arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _71: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: u64;<br align="left"/>let _74: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _75: u64;<br align="left"/>let _76: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _77: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _78: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: u128;<br align="left"/>let mut _82: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _83: &amp;ReErased f64;<br align="left"/>let _84: f64;<br align="left"/>let _85: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _86: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _87: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _88: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _89: ();<br align="left"/>let _90: arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let mut _91: arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let _92: ();<br align="left"/>let mut _93: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _94: &amp;ReErased mut arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let mut _95: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _98: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _99: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _100: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _101: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _102: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _103: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _104: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _105: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _106: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _107: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _109: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _111: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _112: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _114: Closure(DefId(0:2113 ~ kamino_vault[b3c4]::operations::vault_operations::charge_fees::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;250_usize&gt;,)]);<br align="left"/>let mut _115: &amp;ReErased mut arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let _116: ();<br align="left"/>let mut _117: &amp;ReErased str;<br align="left"/>let _118: &amp;ReErased str;<br align="left"/>let mut _119: &amp;ReErased std::string::String;<br align="left"/>let _120: &amp;ReErased std::string::String;<br align="left"/>let _121: std::string::String;<br align="left"/>let _122: std::string::String;<br align="left"/>let mut _123: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _125: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _126: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _127: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _128: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _129: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _130: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _131: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _132: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased &amp;ReErased str;<br align="left"/>let _134: &amp;ReErased &amp;ReErased str;<br align="left"/>let _135: &amp;ReErased str;<br align="left"/>let mut _136: &amp;ReErased arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let _137: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _138: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _139: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _140: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _141: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _142: u64;<br align="left"/>let mut _143: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _144: ();<br align="left"/>let _145: arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let mut _146: arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let _147: ();<br align="left"/>let mut _148: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _149: &amp;ReErased mut arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let mut _150: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _152: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _153: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _154: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _155: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _156: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _157: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _158: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _159: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _161: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _162: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _164: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _165: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _166: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _167: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _168: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _169: Closure(DefId(0:2116 ~ kamino_vault[b3c4]::operations::vault_operations::charge_fees::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;250_usize&gt;,)]);<br align="left"/>let mut _170: &amp;ReErased mut arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let _171: ();<br align="left"/>let mut _172: &amp;ReErased str;<br align="left"/>let _173: &amp;ReErased str;<br align="left"/>let mut _174: &amp;ReErased std::string::String;<br align="left"/>let _175: &amp;ReErased std::string::String;<br align="left"/>let _176: std::string::String;<br align="left"/>let _177: std::string::String;<br align="left"/>let mut _178: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _179: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _180: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _181: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _182: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _183: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _184: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _185: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _186: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _187: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _188: &amp;ReErased &amp;ReErased str;<br align="left"/>let _189: &amp;ReErased &amp;ReErased str;<br align="left"/>let _190: &amp;ReErased str;<br align="left"/>let mut _191: &amp;ReErased arrform::ArrForm&lt;250_usize&gt;;<br align="left"/>let _192: ();<br align="left"/>let mut _193: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _194: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _195: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _196: &amp;ReErased state::VaultState;<br align="left"/>let mut _197: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _198: ();<br align="left"/>let mut _199: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _200: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _201: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _202: &amp;ReErased state::VaultState;<br align="left"/>let mut _203: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _204: ();<br align="left"/>let mut _205: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _206: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _207: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _208: &amp;ReErased state::VaultState;<br align="left"/>let mut _209: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _210: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _211: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _212: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _213: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _214: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _215: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _216: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _217: &amp;ReErased state::VaultState;<br align="left"/>let mut _218: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _219: ();<br align="left"/>let mut _220: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _221: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _222: ();<br align="left"/>let mut _223: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _224: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _225: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _226: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _227: u64;<br align="left"/>let mut _228: ();<br align="left"/>let mut _229: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _230: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _231: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _232: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _233: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _234: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>debug vault =&gt; _1;<br align="left"/>debug invested =&gt; _2;<br align="left"/>debug timestamp =&gt; _3;<br align="left"/>debug seconds_passed =&gt; _10;<br align="left"/>debug new_aum =&gt; _13;<br align="left"/>debug prev_aum =&gt; _18;<br align="left"/>debug formatted =&gt; _21;<br align="left"/>debug af =&gt; _22;<br align="left"/>debug res =&gt; _56;<br align="left"/>debug mgmt_charge =&gt; _71;<br align="left"/>debug mgmt_fee_yearly =&gt; _74;<br align="left"/>debug mgmt_fee =&gt; _76;<br align="left"/>debug mgmt_charge =&gt; _85;<br align="left"/>debug formatted =&gt; _90;<br align="left"/>debug af =&gt; _91;<br align="left"/>debug res =&gt; _122;<br align="left"/>debug earned_interest =&gt; _137;<br align="left"/>debug perf_charge =&gt; _140;<br align="left"/>debug formatted =&gt; _145;<br align="left"/>debug af =&gt; _146;<br align="left"/>debug res =&gt; _177;<br align="left"/>debug new_fees =&gt; _210;<br align="left"/>debug pending_fees =&gt; _215;<br align="left"/>>;
    bb0__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).15: u64)<br/>_5 = Eq(move _6, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = _3<br/>((*_1).15: u64) = move _8<br/>StorageDead(_8)<br/>StorageLive(_9)<br/>_9 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _9)<br/>StorageDead(_9)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _3<br/>StorageLive(_12)<br/>_12 = ((*_1).15: u64)<br/></td></tr><tr><td align="left">_10 = core::num::&lt;impl u64&gt;::saturating_sub(move _11, move _12)</td></tr></table>>];
    bb3__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_1)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;((*_2).1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_16 = &amp;(*_17)<br/></td></tr><tr><td align="left">_14 = state::VaultState::compute_aum(move _15, move _16)</td></tr></table>>];
    bb4__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = std::result::Result::&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;::unwrap_or(move _14, const _)</td></tr></table>>];
    bb5__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;(*_1)<br/></td></tr><tr><td align="left">_18 = state::VaultState::get_prev_aum(move _19)</td></tr></table>>];
    bb6__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/></td></tr><tr><td align="left">_22 = ArrForm::&lt;300&gt;::new()</td></tr></table>>];
    bb7__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;mut _22<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_234 = const _<br/>_29 = &amp;(*_234)<br/>_28 = &amp;(*_29)<br/>_27 = move _28 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_28)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;_18<br/></td></tr><tr><td align="left">_38 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _39)</td></tr></table>>];
    bb8__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _36)</td></tr></table>>];
    bb9__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = &amp;_13<br/></td></tr><tr><td align="left">_43 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _44)</td></tr></table>>];
    bb10__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _41)</td></tr></table>>];
    bb11__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_10<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _46)</td></tr></table>>];
    bb12__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_34 = [move _35, move _40, move _45]<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/>_31 = move _32 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_26 = Arguments::&lt;'_&gt;::new_v1(move _27, move _31)</td></tr></table>>];
    bb13__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_24 = ArrForm::&lt;300&gt;::format(move _25, move _26)</td></tr></table>>];
    bb14__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;mut _22<br/>_48 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _49 }<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _24, move _48)</td></tr></table>>];
    bb15__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_24)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_29)<br/>StorageDead(_23)<br/>_21 = move _22<br/>StorageDead(_22)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_233 = const _<br/>_60 = &amp;(*_233)<br/>_59 = &amp;(*_60)<br/>_58 = move _59 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_59)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_21<br/></td></tr><tr><td align="left">_69 = ArrForm::&lt;300&gt;::as_str(move _70)</td></tr></table>>];
    bb16__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_68 = &amp;_69<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _67)</td></tr></table>>];
    bb17__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_65 = [move _66]<br/>StorageDead(_66)<br/>_64 = &amp;_65<br/>_63 = &amp;(*_64)<br/>_62 = move _63 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_57 = Arguments::&lt;'_&gt;::new_v1(move _58, move _62)</td></tr></table>>];
    bb18__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = format(move _57)</td></tr></table>>];
    bb19__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>_55 = move _56<br/>StorageDead(_56)<br/>_54 = &amp;_55<br/>_53 = &amp;(*_54)<br/></td></tr><tr><td align="left">_52 = &lt;String as Deref&gt;::deref(move _53)</td></tr></table>>];
    bb20__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_51 = &amp;(*_52)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_50 = solana_program::log::sol_log(move _51)</td></tr></table>>];
    bb21__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb22__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>_20 = const ()<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = _10<br/>_72 = Eq(move _73, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb23__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_71 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = ((*_1).14: u64)<br/></td></tr><tr><td align="left">_74 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::from_bps::&lt;u64&gt;(move _75)</td></tr></table>>];
    bb25__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _74<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _10<br/></td></tr><tr><td align="left">_79 = &lt;u128 as From&lt;u64&gt;&gt;::from(move _80)</td></tr></table>>];
    bb26__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_77 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Mul&lt;u128&gt;&gt;::mul(move _78, move _79)</td></tr></table>>];
    bb27__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/></td></tr><tr><td align="left">_84 = std::f64::&lt;impl f64&gt;::ceil(const _)</td></tr></table>>];
    bb28__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_83 = &amp;_84<br/></td></tr><tr><td align="left">_82 = &lt;f64 as ToPrimitive&gt;::to_u128(move _83)</td></tr></table>>];
    bb29__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = Option::&lt;u128&gt;::unwrap(move _82)</td></tr></table>>];
    bb30__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_76 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Div&lt;u128&gt;&gt;::div(move _77, move _81)</td></tr></table>>];
    bb31__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_77)<br/>StorageDead(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _18<br/></td></tr><tr><td align="left">_86 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::from(move _87)</td></tr></table>>];
    bb32__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_88)<br/>_88 = _76<br/></td></tr><tr><td align="left">_85 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Mul&gt;::mul(move _86, move _88)</td></tr></table>>];
    bb33__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/></td></tr><tr><td align="left">_91 = ArrForm::&lt;250&gt;::new()</td></tr></table>>];
    bb34__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;mut _91<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_232 = const _<br/>_98 = &amp;(*_232)<br/>_97 = &amp;(*_98)<br/>_96 = move _97 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_97)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_85<br/></td></tr><tr><td align="left">_107 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _108)</td></tr></table>>];
    bb35__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_106 = &amp;_107<br/>_105 = &amp;(*_106)<br/></td></tr><tr><td align="left">_104 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _105)</td></tr></table>>];
    bb36__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_76<br/></td></tr><tr><td align="left">_112 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _113)</td></tr></table>>];
    bb37__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_111 = &amp;_112<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_109 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _110)</td></tr></table>>];
    bb38__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_103 = [move _104, move _109]<br/>StorageDead(_109)<br/>StorageDead(_104)<br/>_102 = &amp;_103<br/>_101 = &amp;(*_102)<br/>_100 = move _101 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_95 = Arguments::&lt;'_&gt;::new_v1(move _96, move _100)</td></tr></table>>];
    bb39__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_93 = ArrForm::&lt;250&gt;::format(move _94, move _95)</td></tr></table>>];
    bb40__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;mut _91<br/>_114 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _115 }<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_92 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _93, move _114)</td></tr></table>>];
    bb41__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_93)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_98)<br/>StorageDead(_92)<br/>_90 = move _91<br/>StorageDead(_91)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_231 = const _<br/>_126 = &amp;(*_231)<br/>_125 = &amp;(*_126)<br/>_124 = move _125 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;_90<br/></td></tr><tr><td align="left">_135 = ArrForm::&lt;250&gt;::as_str(move _136)</td></tr></table>>];
    bb42__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_134 = &amp;_135<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _133)</td></tr></table>>];
    bb43__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = [move _132]<br/>StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/>_128 = move _129 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_123 = Arguments::&lt;'_&gt;::new_v1(move _124, move _128)</td></tr></table>>];
    bb44__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = format(move _123)</td></tr></table>>];
    bb45__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_126)<br/>_121 = move _122<br/>StorageDead(_122)<br/>_120 = &amp;_121<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_118 = &lt;String as Deref&gt;::deref(move _119)</td></tr></table>>];
    bb46__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_117 = &amp;(*_118)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_116 = solana_program::log::sol_log(move _117)</td></tr></table>>];
    bb47__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb48__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_116)<br/>_89 = const ()<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>_71 = _85<br/>StorageDead(_85)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = _13<br/>StorageLive(_139)<br/>_139 = _18<br/></td></tr><tr><td align="left">_137 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::saturating_sub(move _138, move _139)</td></tr></table>>];
    bb50__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = ((*_1).13: u64)<br/></td></tr><tr><td align="left">_141 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::from_bps::&lt;u64&gt;(move _142)</td></tr></table>>];
    bb51__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageLive(_143)<br/>_143 = _137<br/></td></tr><tr><td align="left">_140 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Mul&gt;::mul(move _141, move _143)</td></tr></table>>];
    bb52__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/></td></tr><tr><td align="left">_146 = ArrForm::&lt;250&gt;::new()</td></tr></table>>];
    bb53__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;mut _146<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_230 = const _<br/>_153 = &amp;(*_230)<br/>_152 = &amp;(*_153)<br/>_151 = move _152 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_152)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;_140<br/></td></tr><tr><td align="left">_162 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _163)</td></tr></table>>];
    bb54__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_161 = &amp;_162<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_159 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _160)</td></tr></table>>];
    bb55__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;_137<br/></td></tr><tr><td align="left">_167 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _168)</td></tr></table>>];
    bb56__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_166 = &amp;_167<br/>_165 = &amp;(*_166)<br/></td></tr><tr><td align="left">_164 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _165)</td></tr></table>>];
    bb57__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>_158 = [move _159, move _164]<br/>StorageDead(_164)<br/>StorageDead(_159)<br/>_157 = &amp;_158<br/>_156 = &amp;(*_157)<br/>_155 = move _156 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">_150 = Arguments::&lt;'_&gt;::new_v1(move _151, move _155)</td></tr></table>>];
    bb58__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">_148 = ArrForm::&lt;250&gt;::format(move _149, move _150)</td></tr></table>>];
    bb59__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_149)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;mut _146<br/>_169 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _170 }<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_147 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _148, move _169)</td></tr></table>>];
    bb60__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_148)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_153)<br/>StorageDead(_147)<br/>_145 = move _146<br/>StorageDead(_146)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_229 = const _<br/>_181 = &amp;(*_229)<br/>_180 = &amp;(*_181)<br/>_179 = move _180 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_180)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_145<br/></td></tr><tr><td align="left">_190 = ArrForm::&lt;250&gt;::as_str(move _191)</td></tr></table>>];
    bb61__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_189 = &amp;_190<br/>_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_187 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _188)</td></tr></table>>];
    bb62__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_186 = [move _187]<br/>StorageDead(_187)<br/>_185 = &amp;_186<br/>_184 = &amp;(*_185)<br/>_183 = move _184 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_178 = Arguments::&lt;'_&gt;::new_v1(move _179, move _183)</td></tr></table>>];
    bb63__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = format(move _178)</td></tr></table>>];
    bb64__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_181)<br/>_176 = move _177<br/>StorageDead(_177)<br/>_175 = &amp;_176<br/>_174 = &amp;(*_175)<br/></td></tr><tr><td align="left">_173 = &lt;String as Deref&gt;::deref(move _174)</td></tr></table>>];
    bb65__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_172 = &amp;(*_173)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">_171 = solana_program::log::sol_log(move _172)</td></tr></table>>];
    bb66__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">drop(_176)</td></tr></table>>];
    bb67__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/>_144 = const ()<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = &amp;mut (*_1)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = &amp;(*_1)<br/></td></tr><tr><td align="left">_195 = state::VaultState::get_cumulative_mgmt_fees(move _196)</td></tr></table>>];
    bb68__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageLive(_197)<br/>_197 = _71<br/></td></tr><tr><td align="left">_194 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::saturating_add(move _195, move _197)</td></tr></table>>];
    bb69__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">_192 = state::VaultState::set_cumulative_mgmt_fees(move _193, move _194)</td></tr></table>>];
    bb70__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;mut (*_1)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = &amp;(*_1)<br/></td></tr><tr><td align="left">_201 = state::VaultState::get_cumulative_perf_fees(move _202)</td></tr></table>>];
    bb71__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageLive(_203)<br/>_203 = _140<br/></td></tr><tr><td align="left">_200 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::saturating_add(move _201, move _203)</td></tr></table>>];
    bb72__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">_198 = state::VaultState::set_cumulative_perf_fees(move _199, move _200)</td></tr></table>>];
    bb73__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = &amp;mut (*_1)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = &amp;(*_1)<br/></td></tr><tr><td align="left">_207 = state::VaultState::get_cumulative_earned_interest(move _208)</td></tr></table>>];
    bb74__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageLive(_209)<br/>_209 = _137<br/></td></tr><tr><td align="left">_206 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::saturating_add(move _207, move _209)</td></tr></table>>];
    bb75__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_204 = state::VaultState::set_cumulative_earned_interest(move _205, move _206)</td></tr></table>>];
    bb76__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = _71<br/>StorageLive(_213)<br/>_213 = _140<br/></td></tr><tr><td align="left">_211 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _212, move _213)</td></tr></table>>];
    bb77__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_212)<br/>StorageLive(_214)<br/>_214 = _13<br/></td></tr><tr><td align="left">_210 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _211, move _214)</td></tr></table>>];
    bb78__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_211)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;(*_1)<br/></td></tr><tr><td align="left">_216 = state::VaultState::get_pending_fees(move _217)</td></tr></table>>];
    bb79__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageLive(_218)<br/>_218 = _210<br/></td></tr><tr><td align="left">_215 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _216, move _218)</td></tr></table>>];
    bb80__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_220 = &amp;mut (*_1)<br/>StorageLive(_221)<br/>_221 = _215<br/></td></tr><tr><td align="left">_219 = state::VaultState::set_pending_fees(move _220, move _221)</td></tr></table>>];
    bb81__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = &amp;mut (*_1)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = _13<br/>StorageLive(_226)<br/>_226 = _210<br/></td></tr><tr><td align="left">_224 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _225, move _226)</td></tr></table>>];
    bb82__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">_222 = update_prev_aum(move _223, move _224)</td></tr></table>>];
    bb83__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageLive(_227)<br/>_227 = _3<br/>((*_1).15: u64) = move _227<br/>StorageDead(_227)<br/>StorageLive(_228)<br/>_228 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _228)<br/>StorageDead(_228)<br/>StorageDead(_215)<br/>StorageDead(_210)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_71)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left">return</td></tr></table>>];
    bb85__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left">drop(_176)</td></tr></table>>];
    bb86__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">86 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb87__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">drop(_55)</td></tr></table>>];
    bb88__0_406 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_406 -> bb2__0_406 [label="0"];
    bb0__0_406 -> bb1__0_406 [label="otherwise"];
    bb1__0_406 -> bb84__0_406 [label=""];
    bb2__0_406 -> bb3__0_406 [label="return"];
    bb3__0_406 -> bb4__0_406 [label="return"];
    bb4__0_406 -> bb5__0_406 [label="return"];
    bb4__0_406 -> bb88__0_406 [label="unwind"];
    bb5__0_406 -> bb6__0_406 [label="return"];
    bb6__0_406 -> bb7__0_406 [label="return"];
    bb7__0_406 -> bb8__0_406 [label="return"];
    bb8__0_406 -> bb9__0_406 [label="return"];
    bb9__0_406 -> bb10__0_406 [label="return"];
    bb10__0_406 -> bb11__0_406 [label="return"];
    bb11__0_406 -> bb12__0_406 [label="return"];
    bb12__0_406 -> bb13__0_406 [label="return"];
    bb13__0_406 -> bb14__0_406 [label="return"];
    bb14__0_406 -> bb15__0_406 [label="return"];
    bb15__0_406 -> bb16__0_406 [label="return"];
    bb16__0_406 -> bb17__0_406 [label="return"];
    bb17__0_406 -> bb18__0_406 [label="return"];
    bb18__0_406 -> bb19__0_406 [label="return"];
    bb19__0_406 -> bb20__0_406 [label="return"];
    bb19__0_406 -> bb87__0_406 [label="unwind"];
    bb20__0_406 -> bb21__0_406 [label="return"];
    bb20__0_406 -> bb87__0_406 [label="unwind"];
    bb21__0_406 -> bb22__0_406 [label="return"];
    bb21__0_406 -> bb88__0_406 [label="unwind"];
    bb22__0_406 -> bb24__0_406 [label="0"];
    bb22__0_406 -> bb23__0_406 [label="otherwise"];
    bb23__0_406 -> bb49__0_406 [label=""];
    bb24__0_406 -> bb25__0_406 [label="return"];
    bb25__0_406 -> bb26__0_406 [label="return"];
    bb26__0_406 -> bb27__0_406 [label="return"];
    bb27__0_406 -> bb28__0_406 [label="return"];
    bb28__0_406 -> bb29__0_406 [label="return"];
    bb29__0_406 -> bb30__0_406 [label="return"];
    bb30__0_406 -> bb31__0_406 [label="return"];
    bb31__0_406 -> bb32__0_406 [label="return"];
    bb32__0_406 -> bb33__0_406 [label="return"];
    bb33__0_406 -> bb34__0_406 [label="return"];
    bb34__0_406 -> bb35__0_406 [label="return"];
    bb35__0_406 -> bb36__0_406 [label="return"];
    bb36__0_406 -> bb37__0_406 [label="return"];
    bb37__0_406 -> bb38__0_406 [label="return"];
    bb38__0_406 -> bb39__0_406 [label="return"];
    bb39__0_406 -> bb40__0_406 [label="return"];
    bb40__0_406 -> bb41__0_406 [label="return"];
    bb41__0_406 -> bb42__0_406 [label="return"];
    bb42__0_406 -> bb43__0_406 [label="return"];
    bb43__0_406 -> bb44__0_406 [label="return"];
    bb44__0_406 -> bb45__0_406 [label="return"];
    bb45__0_406 -> bb46__0_406 [label="return"];
    bb45__0_406 -> bb86__0_406 [label="unwind"];
    bb46__0_406 -> bb47__0_406 [label="return"];
    bb46__0_406 -> bb86__0_406 [label="unwind"];
    bb47__0_406 -> bb48__0_406 [label="return"];
    bb47__0_406 -> bb88__0_406 [label="unwind"];
    bb48__0_406 -> bb49__0_406 [label=""];
    bb49__0_406 -> bb50__0_406 [label="return"];
    bb50__0_406 -> bb51__0_406 [label="return"];
    bb51__0_406 -> bb52__0_406 [label="return"];
    bb52__0_406 -> bb53__0_406 [label="return"];
    bb53__0_406 -> bb54__0_406 [label="return"];
    bb54__0_406 -> bb55__0_406 [label="return"];
    bb55__0_406 -> bb56__0_406 [label="return"];
    bb56__0_406 -> bb57__0_406 [label="return"];
    bb57__0_406 -> bb58__0_406 [label="return"];
    bb58__0_406 -> bb59__0_406 [label="return"];
    bb59__0_406 -> bb60__0_406 [label="return"];
    bb60__0_406 -> bb61__0_406 [label="return"];
    bb61__0_406 -> bb62__0_406 [label="return"];
    bb62__0_406 -> bb63__0_406 [label="return"];
    bb63__0_406 -> bb64__0_406 [label="return"];
    bb64__0_406 -> bb65__0_406 [label="return"];
    bb64__0_406 -> bb85__0_406 [label="unwind"];
    bb65__0_406 -> bb66__0_406 [label="return"];
    bb65__0_406 -> bb85__0_406 [label="unwind"];
    bb66__0_406 -> bb67__0_406 [label="return"];
    bb66__0_406 -> bb88__0_406 [label="unwind"];
    bb67__0_406 -> bb68__0_406 [label="return"];
    bb68__0_406 -> bb69__0_406 [label="return"];
    bb69__0_406 -> bb70__0_406 [label="return"];
    bb70__0_406 -> bb71__0_406 [label="return"];
    bb71__0_406 -> bb72__0_406 [label="return"];
    bb72__0_406 -> bb73__0_406 [label="return"];
    bb73__0_406 -> bb74__0_406 [label="return"];
    bb74__0_406 -> bb75__0_406 [label="return"];
    bb75__0_406 -> bb76__0_406 [label="return"];
    bb76__0_406 -> bb77__0_406 [label="return"];
    bb77__0_406 -> bb78__0_406 [label="return"];
    bb78__0_406 -> bb79__0_406 [label="return"];
    bb79__0_406 -> bb80__0_406 [label="return"];
    bb80__0_406 -> bb81__0_406 [label="return"];
    bb81__0_406 -> bb82__0_406 [label="return"];
    bb82__0_406 -> bb83__0_406 [label="return"];
    bb83__0_406 -> bb84__0_406 [label=""];
    bb85__0_406 -> bb88__0_406 [label="return"];
    bb86__0_406 -> bb88__0_406 [label="return"];
    bb87__0_406 -> bb88__0_406 [label="return"];
}
