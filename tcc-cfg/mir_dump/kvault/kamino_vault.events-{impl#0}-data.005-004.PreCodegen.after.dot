digraph Mir_0_635 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;DepositUserAtaBalanceEvent as anchor_lang::Event&gt;::data(_1: &amp;ReErased events::DepositUserAtaBalanceEvent) -&gt; std::vec::Vec&lt;u8, std::alloc::Global&gt;<br align="left"/>let mut _2: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _3: &amp;ReErased [u8];<br align="left"/>let mut _4: &amp;ReErased [u8; 8_usize];<br align="left"/>let _5: [u8; 8_usize];<br align="left"/>let _6: ();<br align="left"/>let mut _7: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _8: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _9: &amp;ReErased mut std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _10: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _11: std::result::Result&lt;std::vec::Vec&lt;u8, std::alloc::Global&gt;, std::io::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased events::DepositUserAtaBalanceEvent;<br align="left"/>let mut _13: &amp;ReErased [u8; 8_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug d =&gt; _2;<br align="left"/>>;
    bb0__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>_13 = const _<br/>_4 = &amp;(*_13)<br/>_3 = move _4 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">_2 = std::slice::&lt;impl [u8]&gt;::to_vec(move _3)</td></tr></table>>];
    bb1__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;mut _2<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_1)<br/></td></tr><tr><td align="left">_11 = &lt;DepositUserAtaBalanceEvent as BorshSerialize&gt;::try_to_vec(move _12)</td></tr></table>>];
    bb2__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = std::result::Result::&lt;Vec&lt;u8&gt;, std::io::Error&gt;::unwrap(move _11)</td></tr></table>>];
    bb3__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_9 = &amp;mut _10<br/>_8 = &amp;mut (*_9)<br/></td></tr><tr><td align="left">_6 = Vec::&lt;u8&gt;::append(move _7, move _8)</td></tr></table>>];
    bb4__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb5__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>_0 = move _2<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb6__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">6 (cleanup)</td></tr><tr><td align="left">drop(_10)</td></tr></table>>];
    bb7__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">7 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb8__0_635 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">8 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_635 -> bb1__0_635 [label="return"];
    bb1__0_635 -> bb2__0_635 [label="return"];
    bb1__0_635 -> bb7__0_635 [label="unwind"];
    bb2__0_635 -> bb3__0_635 [label="return"];
    bb2__0_635 -> bb7__0_635 [label="unwind"];
    bb3__0_635 -> bb4__0_635 [label="return"];
    bb3__0_635 -> bb6__0_635 [label="unwind"];
    bb4__0_635 -> bb5__0_635 [label="return"];
    bb4__0_635 -> bb7__0_635 [label="unwind"];
    bb6__0_635 -> bb7__0_635 [label="return"];
    bb7__0_635 -> bb8__0_635 [label="return"];
}
