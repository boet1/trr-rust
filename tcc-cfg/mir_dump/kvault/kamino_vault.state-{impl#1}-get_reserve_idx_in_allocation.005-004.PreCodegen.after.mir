// MIR for `state::<impl at programs\kvault\src\state.rs:82:1: 82:16>::get_reserve_idx_in_allocation` after PreCodegen

fn state::<impl at programs\kvault\src\state.rs:82:1: 82:16>::get_reserve_idx_in_allocation(_1: &state::VaultState, _2: &anchor_lang::prelude::Pubkey) -> Option<usize> {
    debug self => _1;
    debug reserve => _2;
    let mut _0: std::option::Option<usize>;
    let mut _3: &mut std::slice::Iter<'_, state::VaultAllocation>;
    let mut _4: std::slice::Iter<'_, state::VaultAllocation>;
    let mut _5: &[state::VaultAllocation];
    let mut _6: &[state::VaultAllocation; 25];
    let mut _7: {closure@programs\kvault\src\state.rs:219:23: 219:26};
    let mut _8: &anchor_lang::prelude::Pubkey;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &((*_1).18: [state::VaultAllocation; 25]);
        _5 = move _6 as &[state::VaultAllocation] (PointerCoercion(Unsize));
        StorageDead(_6);
        _4 = core::slice::<impl [VaultAllocation]>::iter(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        _3 = &mut _4;
        StorageDead(_5);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &(*_2);
        _7 = {closure@programs\kvault\src\state.rs:219:23: 219:26} { reserve: move _8 };
        StorageDead(_8);
        _0 = <std::slice::Iter<'_, VaultAllocation> as Iterator>::position::<{closure@programs\kvault\src\state.rs:219:23: 219:26}>(move _3, move _7) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_7);
        StorageDead(_3);
        StorageDead(_4);
        return;
    }
}
