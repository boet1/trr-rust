// MIR for `compute_user_total_received_on_withdraw` after PreCodegen

fn compute_user_total_received_on_withdraw(_1: u64, _2: FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, _3: u64) -> u64 {
    debug shares_issued => _1;
    debug vault_total_holdings => _2;
    debug shares_to_withdraw => _3;
    let mut _0: u64;
    let _4: u64;
    let mut _5: bool;
    let mut _6: u64;
    let mut _7: u64;
    let mut _8: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _9: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _10: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _11: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _12: u64;
    let mut _13: u64;
    let _14: ();
    let _17: ();
    let mut _18: std::result::Result<(), std::fmt::Error>;
    let mut _19: &mut arrform::ArrForm<150>;
    let mut _20: std::fmt::Arguments<'_>;
    let mut _21: &[&str];
    let mut _22: &[&str; 2];
    let _23: &[&str; 2];
    let _24: [&str; 2];
    let mut _25: &[core::fmt::rt::Argument<'_>];
    let mut _26: &[core::fmt::rt::Argument<'_>; 2];
    let _27: &[core::fmt::rt::Argument<'_>; 2];
    let _28: [core::fmt::rt::Argument<'_>; 2];
    let mut _29: core::fmt::rt::Argument<'_>;
    let mut _30: &u64;
    let _31: &u64;
    let mut _32: core::fmt::rt::Argument<'_>;
    let mut _33: &kamino_lending::utils::FractionDisplay<'_>;
    let _34: &kamino_lending::utils::FractionDisplay<'_>;
    let _35: kamino_lending::utils::FractionDisplay<'_>;
    let mut _36: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _37: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _38: &mut arrform::ArrForm<150>;
    let _39: ();
    let mut _40: &str;
    let _41: &str;
    let mut _42: &std::string::String;
    let _43: &std::string::String;
    let _44: std::string::String;
    let mut _46: std::fmt::Arguments<'_>;
    let mut _47: &[&str];
    let mut _48: &[&str; 1];
    let _49: &[&str; 1];
    let _50: [&str; 1];
    let mut _51: &[core::fmt::rt::Argument<'_>];
    let mut _52: &[core::fmt::rt::Argument<'_>; 1];
    let _53: &[core::fmt::rt::Argument<'_>; 1];
    let _54: [core::fmt::rt::Argument<'_>; 1];
    let mut _55: core::fmt::rt::Argument<'_>;
    let mut _56: &&str;
    let _57: &&str;
    let _58: &str;
    let mut _59: &arrform::ArrForm<150>;
    scope 1 {
        debug total_for_user => _4;
        let _15: arrform::ArrForm<150>;
        let mut _16: arrform::ArrForm<150>;
        scope 2 {
            debug formatted => _15;
            let _45: std::string::String;
            let mut _60: &[&str; 1];
            scope 4 {
                debug res => _45;
            }
        }
        scope 3 {
            debug af => _16;
            let mut _61: &[&str; 2];
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = _1;
        StorageLive(_7);
        _7 = _3;
        _5 = Eq(move _6, move _7);
        switchInt(move _5) -> [0: bb3, otherwise: bb1];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_8);
        _8 = &_2;
        _4 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_floor::<u64>(move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_8);
        goto -> bb6;
    }

    bb3: {
        StorageDead(_7);
        StorageDead(_6);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &_2;
        StorageLive(_12);
        _12 = _3;
        StorageLive(_13);
        _13 = _1;
        _10 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::full_mul_int_ratio::<u64, u64>(move _11, move _12, move _13) -> [return: bb4, unwind continue];
    }

    bb4: {
        _9 = &_10;
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        _4 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_floor::<u64>(move _9) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_9);
        StorageDead(_10);
        goto -> bb6;
    }

    bb6: {
        StorageDead(_5);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = ArrForm::<150>::new() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &mut _16;
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        _61 = const _;
        _23 = &(*_61);
        _22 = &(*_23);
        _21 = move _22 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_22);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &_4;
        _30 = &(*_31);
        _29 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _30) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_30);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        _36 = &_2;
        _35 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _36) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_36);
        _34 = &_35;
        _33 = &(*_34);
        _32 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _33) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_33);
        _28 = [move _29, move _32];
        StorageDead(_32);
        StorageDead(_29);
        _27 = &_28;
        _26 = &(*_27);
        _25 = move _26 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_26);
        _20 = Arguments::<'_>::new_v1(move _21, move _25) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_25);
        StorageDead(_21);
        _18 = ArrForm::<150>::format(move _19, move _20) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_37);
        StorageLive(_38);
        _38 = &mut _16;
        _37 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _38 };
        StorageDead(_38);
        _17 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _18, move _37) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_37);
        StorageDead(_18);
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_31);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_23);
        StorageDead(_17);
        _15 = move _16;
        StorageDead(_16);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        _60 = const _;
        _49 = &(*_60);
        _48 = &(*_49);
        _47 = move _48 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_48);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        _59 = &_15;
        _58 = ArrForm::<150>::as_str(move _59) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_59);
        _57 = &_58;
        _56 = &(*_57);
        _55 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _56) -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageDead(_56);
        _54 = [move _55];
        StorageDead(_55);
        _53 = &_54;
        _52 = &(*_53);
        _51 = move _52 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_52);
        _46 = Arguments::<'_>::new_v1(move _47, move _51) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_51);
        StorageDead(_47);
        _45 = format(move _46) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_46);
        StorageDead(_58);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_53);
        StorageDead(_49);
        _44 = move _45;
        StorageDead(_45);
        _43 = &_44;
        _42 = &(*_43);
        _41 = <String as Deref>::deref(move _42) -> [return: bb18, unwind: bb21];
    }

    bb18: {
        _40 = &(*_41);
        StorageDead(_42);
        _39 = solana_program::log::sol_log(move _40) -> [return: bb19, unwind: bb21];
    }

    bb19: {
        StorageDead(_40);
        drop(_44) -> [return: bb20, unwind: bb22];
    }

    bb20: {
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_41);
        StorageDead(_39);
        _14 = const ();
        StorageDead(_15);
        StorageDead(_14);
        _0 = _4;
        StorageDead(_4);
        return;
    }

    bb21 (cleanup): {
        drop(_44) -> [return: bb22, unwind terminate(cleanup)];
    }

    bb22 (cleanup): {
        resume;
    }
}
