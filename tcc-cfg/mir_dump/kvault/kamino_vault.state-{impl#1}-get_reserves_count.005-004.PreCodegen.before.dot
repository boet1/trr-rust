digraph Mir_0_480 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::VaultState::get_reserves_count(_1: &amp;ReErased state::VaultState) -&gt; usize<br align="left"/>let mut _2: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, Closure(DefId(0:481 ~ kamino_vault[b3c4]::state::{impl#1}::get_reserves_count::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::VaultAllocation,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _3: std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;;<br align="left"/>let mut _4: &amp;ReErased [state::VaultAllocation];<br align="left"/>let mut _5: &amp;ReErased [state::VaultAllocation; 25_usize];<br align="left"/>let mut _6: Closure(DefId(0:481 ~ kamino_vault[b3c4]::state::{impl#1}::get_reserves_count::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::VaultAllocation,)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_480 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;((*_1).18: [state::VaultAllocation; 25])<br/>_4 = move _5 as &amp;[state::VaultAllocation] (PointerCoercion(Unsize))<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = core::slice::&lt;impl [VaultAllocation]&gt;::iter(move _4)</td></tr></table>>];
    bb1__0_480 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_6)<br/>_6 = {closure@programs\kvault\src\state.rs:102:21: 102:24}<br/></td></tr><tr><td align="left">_2 = &lt;std::slice::Iter&lt;'_, VaultAllocation&gt; as Iterator&gt;::filter::&lt;{closure@programs\kvault\src\state.rs:102:21: 102:24}&gt;(move _3, move _6)</td></tr></table>>];
    bb2__0_480 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">_0 = &lt;Filter&lt;std::slice::Iter&lt;'_, VaultAllocation&gt;, {closure@programs\kvault\src\state.rs:102:21: 102:24}&gt; as Iterator&gt;::count(move _2)</td></tr></table>>];
    bb3__0_480 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_480 -> bb1__0_480 [label="return"];
    bb1__0_480 -> bb2__0_480 [label="return"];
    bb2__0_480 -> bb3__0_480 [label="return"];
}
