// MIR for `charge_fees` after PreCodegen

fn charge_fees(_1: &mut state::VaultState, _2: &Invested, _3: u64) -> std::result::Result<(), anchor_lang::error::Error> {
    debug vault => _1;
    debug invested => _2;
    debug timestamp => _3;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _4: ();
    let mut _5: bool;
    let mut _6: u64;
    let mut _7: !;
    let mut _8: u64;
    let mut _9: ();
    let _10: u64;
    let mut _11: u64;
    let mut _12: u64;
    let mut _14: std::result::Result<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>;
    let mut _15: &state::VaultState;
    let mut _16: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _17: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _19: &state::VaultState;
    let _20: ();
    let _23: ();
    let mut _24: std::result::Result<(), std::fmt::Error>;
    let mut _25: &mut arrform::ArrForm<300>;
    let mut _26: std::fmt::Arguments<'_>;
    let mut _27: &[&str];
    let mut _28: &[&str; 3];
    let _29: &[&str; 3];
    let _30: [&str; 3];
    let mut _31: &[core::fmt::rt::Argument<'_>];
    let mut _32: &[core::fmt::rt::Argument<'_>; 3];
    let _33: &[core::fmt::rt::Argument<'_>; 3];
    let _34: [core::fmt::rt::Argument<'_>; 3];
    let mut _35: core::fmt::rt::Argument<'_>;
    let mut _36: &kamino_lending::utils::FractionDisplay<'_>;
    let _37: &kamino_lending::utils::FractionDisplay<'_>;
    let _38: kamino_lending::utils::FractionDisplay<'_>;
    let mut _39: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _40: core::fmt::rt::Argument<'_>;
    let mut _41: &kamino_lending::utils::FractionDisplay<'_>;
    let _42: &kamino_lending::utils::FractionDisplay<'_>;
    let _43: kamino_lending::utils::FractionDisplay<'_>;
    let mut _44: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _45: core::fmt::rt::Argument<'_>;
    let mut _46: &u64;
    let _47: &u64;
    let mut _48: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _49: &mut arrform::ArrForm<300>;
    let _50: ();
    let mut _51: &str;
    let _52: &str;
    let mut _53: &std::string::String;
    let _54: &std::string::String;
    let _55: std::string::String;
    let mut _57: std::fmt::Arguments<'_>;
    let mut _58: &[&str];
    let mut _59: &[&str; 1];
    let _60: &[&str; 1];
    let _61: [&str; 1];
    let mut _62: &[core::fmt::rt::Argument<'_>];
    let mut _63: &[core::fmt::rt::Argument<'_>; 1];
    let _64: &[core::fmt::rt::Argument<'_>; 1];
    let _65: [core::fmt::rt::Argument<'_>; 1];
    let mut _66: core::fmt::rt::Argument<'_>;
    let mut _67: &&str;
    let _68: &&str;
    let _69: &str;
    let mut _70: &arrform::ArrForm<300>;
    let mut _72: bool;
    let mut _73: u64;
    let mut _75: u64;
    let mut _77: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _78: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _79: u128;
    let mut _80: u64;
    let mut _81: u128;
    let mut _82: std::option::Option<u128>;
    let mut _83: &f64;
    let _84: f64;
    let mut _86: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _87: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _88: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _89: ();
    let _92: ();
    let mut _93: std::result::Result<(), std::fmt::Error>;
    let mut _94: &mut arrform::ArrForm<250>;
    let mut _95: std::fmt::Arguments<'_>;
    let mut _96: &[&str];
    let mut _97: &[&str; 2];
    let _98: &[&str; 2];
    let _99: [&str; 2];
    let mut _100: &[core::fmt::rt::Argument<'_>];
    let mut _101: &[core::fmt::rt::Argument<'_>; 2];
    let _102: &[core::fmt::rt::Argument<'_>; 2];
    let _103: [core::fmt::rt::Argument<'_>; 2];
    let mut _104: core::fmt::rt::Argument<'_>;
    let mut _105: &kamino_lending::utils::FractionDisplay<'_>;
    let _106: &kamino_lending::utils::FractionDisplay<'_>;
    let _107: kamino_lending::utils::FractionDisplay<'_>;
    let mut _108: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _109: core::fmt::rt::Argument<'_>;
    let mut _110: &kamino_lending::utils::FractionDisplay<'_>;
    let _111: &kamino_lending::utils::FractionDisplay<'_>;
    let _112: kamino_lending::utils::FractionDisplay<'_>;
    let mut _113: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _114: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _115: &mut arrform::ArrForm<250>;
    let _116: ();
    let mut _117: &str;
    let _118: &str;
    let mut _119: &std::string::String;
    let _120: &std::string::String;
    let _121: std::string::String;
    let mut _123: std::fmt::Arguments<'_>;
    let mut _124: &[&str];
    let mut _125: &[&str; 1];
    let _126: &[&str; 1];
    let _127: [&str; 1];
    let mut _128: &[core::fmt::rt::Argument<'_>];
    let mut _129: &[core::fmt::rt::Argument<'_>; 1];
    let _130: &[core::fmt::rt::Argument<'_>; 1];
    let _131: [core::fmt::rt::Argument<'_>; 1];
    let mut _132: core::fmt::rt::Argument<'_>;
    let mut _133: &&str;
    let _134: &&str;
    let _135: &str;
    let mut _136: &arrform::ArrForm<250>;
    let mut _138: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _139: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _141: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _142: u64;
    let mut _143: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _144: ();
    let _147: ();
    let mut _148: std::result::Result<(), std::fmt::Error>;
    let mut _149: &mut arrform::ArrForm<250>;
    let mut _150: std::fmt::Arguments<'_>;
    let mut _151: &[&str];
    let mut _152: &[&str; 2];
    let _153: &[&str; 2];
    let _154: [&str; 2];
    let mut _155: &[core::fmt::rt::Argument<'_>];
    let mut _156: &[core::fmt::rt::Argument<'_>; 2];
    let _157: &[core::fmt::rt::Argument<'_>; 2];
    let _158: [core::fmt::rt::Argument<'_>; 2];
    let mut _159: core::fmt::rt::Argument<'_>;
    let mut _160: &kamino_lending::utils::FractionDisplay<'_>;
    let _161: &kamino_lending::utils::FractionDisplay<'_>;
    let _162: kamino_lending::utils::FractionDisplay<'_>;
    let mut _163: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _164: core::fmt::rt::Argument<'_>;
    let mut _165: &kamino_lending::utils::FractionDisplay<'_>;
    let _166: &kamino_lending::utils::FractionDisplay<'_>;
    let _167: kamino_lending::utils::FractionDisplay<'_>;
    let mut _168: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _169: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _170: &mut arrform::ArrForm<250>;
    let _171: ();
    let mut _172: &str;
    let _173: &str;
    let mut _174: &std::string::String;
    let _175: &std::string::String;
    let _176: std::string::String;
    let mut _178: std::fmt::Arguments<'_>;
    let mut _179: &[&str];
    let mut _180: &[&str; 1];
    let _181: &[&str; 1];
    let _182: [&str; 1];
    let mut _183: &[core::fmt::rt::Argument<'_>];
    let mut _184: &[core::fmt::rt::Argument<'_>; 1];
    let _185: &[core::fmt::rt::Argument<'_>; 1];
    let _186: [core::fmt::rt::Argument<'_>; 1];
    let mut _187: core::fmt::rt::Argument<'_>;
    let mut _188: &&str;
    let _189: &&str;
    let _190: &str;
    let mut _191: &arrform::ArrForm<250>;
    let _192: ();
    let mut _193: &mut state::VaultState;
    let mut _194: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _195: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _196: &state::VaultState;
    let mut _197: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _198: ();
    let mut _199: &mut state::VaultState;
    let mut _200: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _201: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _202: &state::VaultState;
    let mut _203: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _204: ();
    let mut _205: &mut state::VaultState;
    let mut _206: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _207: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _208: &state::VaultState;
    let mut _209: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _211: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _212: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _213: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _214: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _216: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _217: &state::VaultState;
    let mut _218: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _219: ();
    let mut _220: &mut state::VaultState;
    let mut _221: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _222: ();
    let mut _223: &mut state::VaultState;
    let mut _224: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _225: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _226: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _227: u64;
    let mut _228: ();
    scope 1 {
        debug seconds_passed => _10;
        let _13: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
        scope 2 {
            debug new_aum => _13;
            let _18: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
            scope 3 {
                debug prev_aum => _18;
                let _21: arrform::ArrForm<300>;
                let mut _22: arrform::ArrForm<300>;
                let _71: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                let _74: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                scope 4 {
                    debug formatted => _21;
                    let _56: std::string::String;
                    let mut _233: &[&str; 1];
                    scope 6 {
                        debug res => _56;
                    }
                }
                scope 5 {
                    debug af => _22;
                    let mut _234: &[&str; 3];
                }
                scope 7 {
                    debug mgmt_charge => _71;
                    let _137: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                    scope 14 {
                        debug earned_interest => _137;
                        let _140: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                        scope 15 {
                            debug perf_charge => _140;
                            let _145: arrform::ArrForm<250>;
                            let mut _146: arrform::ArrForm<250>;
                            let _210: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                            scope 16 {
                                debug formatted => _145;
                                let _177: std::string::String;
                                let mut _229: &[&str; 1];
                                scope 18 {
                                    debug res => _177;
                                }
                            }
                            scope 17 {
                                debug af => _146;
                                let mut _230: &[&str; 2];
                            }
                            scope 19 {
                                debug new_fees => _210;
                                let _215: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                scope 20 {
                                    debug pending_fees => _215;
                                }
                            }
                        }
                    }
                }
                scope 8 {
                    debug mgmt_fee_yearly => _74;
                    let _76: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                    scope 9 {
                        debug mgmt_fee => _76;
                        let _85: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                        scope 10 {
                            debug mgmt_charge => _85;
                            let _90: arrform::ArrForm<250>;
                            let mut _91: arrform::ArrForm<250>;
                            scope 11 {
                                debug formatted => _90;
                                let _122: std::string::String;
                                let mut _231: &[&str; 1];
                                scope 13 {
                                    debug res => _122;
                                }
                            }
                            scope 12 {
                                debug af => _91;
                                let mut _232: &[&str; 2];
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = ((*_1).15: u64);
        _5 = Eq(move _6, const 0_u64);
        switchInt(move _5) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_6);
        StorageLive(_8);
        _8 = _3;
        ((*_1).15: u64) = move _8;
        StorageDead(_8);
        StorageLive(_9);
        _9 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _9);
        StorageDead(_9);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb84;
    }

    bb2: {
        StorageDead(_6);
        _4 = const ();
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_10);
        StorageLive(_11);
        _11 = _3;
        StorageLive(_12);
        _12 = ((*_1).15: u64);
        _10 = core::num::<impl u64>::saturating_sub(move _11, move _12) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_12);
        StorageDead(_11);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &(*_1);
        StorageLive(_16);
        StorageLive(_17);
        _17 = &((*_2).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _16 = &(*_17);
        _14 = state::VaultState::compute_aum(move _15, move _16) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_16);
        StorageDead(_15);
        _13 = std::result::Result::<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>::unwrap_or(move _14, const _) -> [return: bb5, unwind: bb88];
    }

    bb5: {
        StorageDead(_14);
        StorageDead(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &(*_1);
        _18 = state::VaultState::get_prev_aum(move _19) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = ArrForm::<300>::new() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &mut _22;
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _234 = const _;
        _29 = &(*_234);
        _28 = &(*_29);
        _27 = move _28 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_28);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &_18;
        _38 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _39) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_39);
        _37 = &_38;
        _36 = &(*_37);
        _35 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _36) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_36);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = &_13;
        _43 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _44) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_44);
        _42 = &_43;
        _41 = &(*_42);
        _40 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _41) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_41);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = &_10;
        _46 = &(*_47);
        _45 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _46) -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageDead(_46);
        _34 = [move _35, move _40, move _45];
        StorageDead(_45);
        StorageDead(_40);
        StorageDead(_35);
        _33 = &_34;
        _32 = &(*_33);
        _31 = move _32 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_32);
        _26 = Arguments::<'_>::new_v1(move _27, move _31) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_31);
        StorageDead(_27);
        _24 = ArrForm::<300>::format(move _25, move _26) -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageDead(_26);
        StorageDead(_25);
        StorageLive(_48);
        StorageLive(_49);
        _49 = &mut _22;
        _48 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _49 };
        StorageDead(_49);
        _23 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _24, move _48) -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageDead(_48);
        StorageDead(_24);
        StorageDead(_47);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_29);
        StorageDead(_23);
        _21 = move _22;
        StorageDead(_22);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        _233 = const _;
        _60 = &(*_233);
        _59 = &(*_60);
        _58 = move _59 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_59);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        _70 = &_21;
        _69 = ArrForm::<300>::as_str(move _70) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_70);
        _68 = &_69;
        _67 = &(*_68);
        _66 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _67) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_67);
        _65 = [move _66];
        StorageDead(_66);
        _64 = &_65;
        _63 = &(*_64);
        _62 = move _63 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_63);
        _57 = Arguments::<'_>::new_v1(move _58, move _62) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_62);
        StorageDead(_58);
        _56 = format(move _57) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_57);
        StorageDead(_69);
        StorageDead(_68);
        StorageDead(_65);
        StorageDead(_64);
        StorageDead(_60);
        _55 = move _56;
        StorageDead(_56);
        _54 = &_55;
        _53 = &(*_54);
        _52 = <String as Deref>::deref(move _53) -> [return: bb20, unwind: bb87];
    }

    bb20: {
        _51 = &(*_52);
        StorageDead(_53);
        _50 = solana_program::log::sol_log(move _51) -> [return: bb21, unwind: bb87];
    }

    bb21: {
        StorageDead(_51);
        drop(_55) -> [return: bb22, unwind: bb88];
    }

    bb22: {
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_52);
        StorageDead(_50);
        _20 = const ();
        StorageDead(_21);
        StorageDead(_20);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        _73 = _10;
        _72 = Eq(move _73, const 0_u64);
        switchInt(move _72) -> [0: bb24, otherwise: bb23];
    }

    bb23: {
        StorageDead(_73);
        _71 = const _;
        goto -> bb49;
    }

    bb24: {
        StorageDead(_73);
        StorageLive(_74);
        StorageLive(_75);
        _75 = ((*_1).14: u64);
        _74 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::from_bps::<u64>(move _75) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        _78 = _74;
        StorageLive(_79);
        StorageLive(_80);
        _80 = _10;
        _79 = <u128 as From<u64>>::from(move _80) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_80);
        _77 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Mul<u128>>::mul(move _78, move _79) -> [return: bb27, unwind continue];
    }

    bb27: {
        StorageDead(_79);
        StorageDead(_78);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        _84 = std::f64::<impl f64>::ceil(const _) -> [return: bb28, unwind continue];
    }

    bb28: {
        _83 = &_84;
        _82 = <f64 as ToPrimitive>::to_u128(move _83) -> [return: bb29, unwind continue];
    }

    bb29: {
        StorageDead(_83);
        _81 = Option::<u128>::unwrap(move _82) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_82);
        _76 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Div<u128>>::div(move _77, move _81) -> [return: bb31, unwind continue];
    }

    bb31: {
        StorageDead(_81);
        StorageDead(_77);
        StorageDead(_84);
        StorageLive(_85);
        StorageLive(_86);
        StorageLive(_87);
        _87 = _18;
        _86 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as From<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>::from(move _87) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_87);
        StorageLive(_88);
        _88 = _76;
        _85 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Mul>::mul(move _86, move _88) -> [return: bb33, unwind continue];
    }

    bb33: {
        StorageDead(_88);
        StorageDead(_86);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        _91 = ArrForm::<250>::new() -> [return: bb34, unwind continue];
    }

    bb34: {
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        _94 = &mut _91;
        StorageLive(_95);
        StorageLive(_96);
        StorageLive(_97);
        StorageLive(_98);
        _232 = const _;
        _98 = &(*_232);
        _97 = &(*_98);
        _96 = move _97 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_97);
        StorageLive(_100);
        StorageLive(_101);
        StorageLive(_102);
        StorageLive(_103);
        StorageLive(_104);
        StorageLive(_105);
        StorageLive(_106);
        StorageLive(_107);
        StorageLive(_108);
        _108 = &_85;
        _107 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _108) -> [return: bb35, unwind continue];
    }

    bb35: {
        StorageDead(_108);
        _106 = &_107;
        _105 = &(*_106);
        _104 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _105) -> [return: bb36, unwind continue];
    }

    bb36: {
        StorageDead(_105);
        StorageLive(_109);
        StorageLive(_110);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        _113 = &_76;
        _112 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _113) -> [return: bb37, unwind continue];
    }

    bb37: {
        StorageDead(_113);
        _111 = &_112;
        _110 = &(*_111);
        _109 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _110) -> [return: bb38, unwind continue];
    }

    bb38: {
        StorageDead(_110);
        _103 = [move _104, move _109];
        StorageDead(_109);
        StorageDead(_104);
        _102 = &_103;
        _101 = &(*_102);
        _100 = move _101 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_101);
        _95 = Arguments::<'_>::new_v1(move _96, move _100) -> [return: bb39, unwind continue];
    }

    bb39: {
        StorageDead(_100);
        StorageDead(_96);
        _93 = ArrForm::<250>::format(move _94, move _95) -> [return: bb40, unwind continue];
    }

    bb40: {
        StorageDead(_95);
        StorageDead(_94);
        StorageLive(_114);
        StorageLive(_115);
        _115 = &mut _91;
        _114 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _115 };
        StorageDead(_115);
        _92 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _93, move _114) -> [return: bb41, unwind continue];
    }

    bb41: {
        StorageDead(_114);
        StorageDead(_93);
        StorageDead(_112);
        StorageDead(_111);
        StorageDead(_107);
        StorageDead(_106);
        StorageDead(_103);
        StorageDead(_102);
        StorageDead(_98);
        StorageDead(_92);
        _90 = move _91;
        StorageDead(_91);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        StorageLive(_119);
        StorageLive(_120);
        StorageLive(_121);
        StorageLive(_122);
        StorageLive(_123);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        _231 = const _;
        _126 = &(*_231);
        _125 = &(*_126);
        _124 = move _125 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_125);
        StorageLive(_128);
        StorageLive(_129);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        _136 = &_90;
        _135 = ArrForm::<250>::as_str(move _136) -> [return: bb42, unwind continue];
    }

    bb42: {
        StorageDead(_136);
        _134 = &_135;
        _133 = &(*_134);
        _132 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _133) -> [return: bb43, unwind continue];
    }

    bb43: {
        StorageDead(_133);
        _131 = [move _132];
        StorageDead(_132);
        _130 = &_131;
        _129 = &(*_130);
        _128 = move _129 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_129);
        _123 = Arguments::<'_>::new_v1(move _124, move _128) -> [return: bb44, unwind continue];
    }

    bb44: {
        StorageDead(_128);
        StorageDead(_124);
        _122 = format(move _123) -> [return: bb45, unwind continue];
    }

    bb45: {
        StorageDead(_123);
        StorageDead(_135);
        StorageDead(_134);
        StorageDead(_131);
        StorageDead(_130);
        StorageDead(_126);
        _121 = move _122;
        StorageDead(_122);
        _120 = &_121;
        _119 = &(*_120);
        _118 = <String as Deref>::deref(move _119) -> [return: bb46, unwind: bb86];
    }

    bb46: {
        _117 = &(*_118);
        StorageDead(_119);
        _116 = solana_program::log::sol_log(move _117) -> [return: bb47, unwind: bb86];
    }

    bb47: {
        StorageDead(_117);
        drop(_121) -> [return: bb48, unwind: bb88];
    }

    bb48: {
        StorageDead(_121);
        StorageDead(_120);
        StorageDead(_118);
        StorageDead(_116);
        _89 = const ();
        StorageDead(_90);
        StorageDead(_89);
        _71 = _85;
        StorageDead(_85);
        StorageDead(_76);
        StorageDead(_74);
        goto -> bb49;
    }

    bb49: {
        StorageDead(_72);
        StorageLive(_137);
        StorageLive(_138);
        _138 = _13;
        StorageLive(_139);
        _139 = _18;
        _137 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::saturating_sub(move _138, move _139) -> [return: bb50, unwind continue];
    }

    bb50: {
        StorageDead(_139);
        StorageDead(_138);
        StorageLive(_140);
        StorageLive(_141);
        StorageLive(_142);
        _142 = ((*_1).13: u64);
        _141 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::from_bps::<u64>(move _142) -> [return: bb51, unwind continue];
    }

    bb51: {
        StorageDead(_142);
        StorageLive(_143);
        _143 = _137;
        _140 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Mul>::mul(move _141, move _143) -> [return: bb52, unwind continue];
    }

    bb52: {
        StorageDead(_143);
        StorageDead(_141);
        StorageLive(_144);
        StorageLive(_145);
        StorageLive(_146);
        _146 = ArrForm::<250>::new() -> [return: bb53, unwind continue];
    }

    bb53: {
        StorageLive(_147);
        StorageLive(_148);
        StorageLive(_149);
        _149 = &mut _146;
        StorageLive(_150);
        StorageLive(_151);
        StorageLive(_152);
        StorageLive(_153);
        _230 = const _;
        _153 = &(*_230);
        _152 = &(*_153);
        _151 = move _152 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_152);
        StorageLive(_155);
        StorageLive(_156);
        StorageLive(_157);
        StorageLive(_158);
        StorageLive(_159);
        StorageLive(_160);
        StorageLive(_161);
        StorageLive(_162);
        StorageLive(_163);
        _163 = &_140;
        _162 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _163) -> [return: bb54, unwind continue];
    }

    bb54: {
        StorageDead(_163);
        _161 = &_162;
        _160 = &(*_161);
        _159 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _160) -> [return: bb55, unwind continue];
    }

    bb55: {
        StorageDead(_160);
        StorageLive(_164);
        StorageLive(_165);
        StorageLive(_166);
        StorageLive(_167);
        StorageLive(_168);
        _168 = &_137;
        _167 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _168) -> [return: bb56, unwind continue];
    }

    bb56: {
        StorageDead(_168);
        _166 = &_167;
        _165 = &(*_166);
        _164 = core::fmt::rt::Argument::<'_>::new_display::<FractionDisplay<'_>>(move _165) -> [return: bb57, unwind continue];
    }

    bb57: {
        StorageDead(_165);
        _158 = [move _159, move _164];
        StorageDead(_164);
        StorageDead(_159);
        _157 = &_158;
        _156 = &(*_157);
        _155 = move _156 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_156);
        _150 = Arguments::<'_>::new_v1(move _151, move _155) -> [return: bb58, unwind continue];
    }

    bb58: {
        StorageDead(_155);
        StorageDead(_151);
        _148 = ArrForm::<250>::format(move _149, move _150) -> [return: bb59, unwind continue];
    }

    bb59: {
        StorageDead(_150);
        StorageDead(_149);
        StorageLive(_169);
        StorageLive(_170);
        _170 = &mut _146;
        _169 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _170 };
        StorageDead(_170);
        _147 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _148, move _169) -> [return: bb60, unwind continue];
    }

    bb60: {
        StorageDead(_169);
        StorageDead(_148);
        StorageDead(_167);
        StorageDead(_166);
        StorageDead(_162);
        StorageDead(_161);
        StorageDead(_158);
        StorageDead(_157);
        StorageDead(_153);
        StorageDead(_147);
        _145 = move _146;
        StorageDead(_146);
        StorageLive(_171);
        StorageLive(_172);
        StorageLive(_173);
        StorageLive(_174);
        StorageLive(_175);
        StorageLive(_176);
        StorageLive(_177);
        StorageLive(_178);
        StorageLive(_179);
        StorageLive(_180);
        StorageLive(_181);
        _229 = const _;
        _181 = &(*_229);
        _180 = &(*_181);
        _179 = move _180 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_180);
        StorageLive(_183);
        StorageLive(_184);
        StorageLive(_185);
        StorageLive(_186);
        StorageLive(_187);
        StorageLive(_188);
        StorageLive(_189);
        StorageLive(_190);
        StorageLive(_191);
        _191 = &_145;
        _190 = ArrForm::<250>::as_str(move _191) -> [return: bb61, unwind continue];
    }

    bb61: {
        StorageDead(_191);
        _189 = &_190;
        _188 = &(*_189);
        _187 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _188) -> [return: bb62, unwind continue];
    }

    bb62: {
        StorageDead(_188);
        _186 = [move _187];
        StorageDead(_187);
        _185 = &_186;
        _184 = &(*_185);
        _183 = move _184 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_184);
        _178 = Arguments::<'_>::new_v1(move _179, move _183) -> [return: bb63, unwind continue];
    }

    bb63: {
        StorageDead(_183);
        StorageDead(_179);
        _177 = format(move _178) -> [return: bb64, unwind continue];
    }

    bb64: {
        StorageDead(_178);
        StorageDead(_190);
        StorageDead(_189);
        StorageDead(_186);
        StorageDead(_185);
        StorageDead(_181);
        _176 = move _177;
        StorageDead(_177);
        _175 = &_176;
        _174 = &(*_175);
        _173 = <String as Deref>::deref(move _174) -> [return: bb65, unwind: bb85];
    }

    bb65: {
        _172 = &(*_173);
        StorageDead(_174);
        _171 = solana_program::log::sol_log(move _172) -> [return: bb66, unwind: bb85];
    }

    bb66: {
        StorageDead(_172);
        drop(_176) -> [return: bb67, unwind: bb88];
    }

    bb67: {
        StorageDead(_176);
        StorageDead(_175);
        StorageDead(_173);
        StorageDead(_171);
        _144 = const ();
        StorageDead(_145);
        StorageDead(_144);
        StorageLive(_192);
        StorageLive(_193);
        _193 = &mut (*_1);
        StorageLive(_194);
        StorageLive(_195);
        StorageLive(_196);
        _196 = &(*_1);
        _195 = state::VaultState::get_cumulative_mgmt_fees(move _196) -> [return: bb68, unwind continue];
    }

    bb68: {
        StorageDead(_196);
        StorageLive(_197);
        _197 = _71;
        _194 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::saturating_add(move _195, move _197) -> [return: bb69, unwind continue];
    }

    bb69: {
        StorageDead(_197);
        StorageDead(_195);
        _192 = state::VaultState::set_cumulative_mgmt_fees(move _193, move _194) -> [return: bb70, unwind continue];
    }

    bb70: {
        StorageDead(_194);
        StorageDead(_193);
        StorageDead(_192);
        StorageLive(_198);
        StorageLive(_199);
        _199 = &mut (*_1);
        StorageLive(_200);
        StorageLive(_201);
        StorageLive(_202);
        _202 = &(*_1);
        _201 = state::VaultState::get_cumulative_perf_fees(move _202) -> [return: bb71, unwind continue];
    }

    bb71: {
        StorageDead(_202);
        StorageLive(_203);
        _203 = _140;
        _200 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::saturating_add(move _201, move _203) -> [return: bb72, unwind continue];
    }

    bb72: {
        StorageDead(_203);
        StorageDead(_201);
        _198 = state::VaultState::set_cumulative_perf_fees(move _199, move _200) -> [return: bb73, unwind continue];
    }

    bb73: {
        StorageDead(_200);
        StorageDead(_199);
        StorageDead(_198);
        StorageLive(_204);
        StorageLive(_205);
        _205 = &mut (*_1);
        StorageLive(_206);
        StorageLive(_207);
        StorageLive(_208);
        _208 = &(*_1);
        _207 = state::VaultState::get_cumulative_earned_interest(move _208) -> [return: bb74, unwind continue];
    }

    bb74: {
        StorageDead(_208);
        StorageLive(_209);
        _209 = _137;
        _206 = FixedU128::<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>::saturating_add(move _207, move _209) -> [return: bb75, unwind continue];
    }

    bb75: {
        StorageDead(_209);
        StorageDead(_207);
        _204 = state::VaultState::set_cumulative_earned_interest(move _205, move _206) -> [return: bb76, unwind continue];
    }

    bb76: {
        StorageDead(_206);
        StorageDead(_205);
        StorageDead(_204);
        StorageLive(_210);
        StorageLive(_211);
        StorageLive(_212);
        _212 = _71;
        StorageLive(_213);
        _213 = _140;
        _211 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Add>::add(move _212, move _213) -> [return: bb77, unwind continue];
    }

    bb77: {
        StorageDead(_213);
        StorageDead(_212);
        StorageLive(_214);
        _214 = _13;
        _210 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Ord>::min(move _211, move _214) -> [return: bb78, unwind continue];
    }

    bb78: {
        StorageDead(_214);
        StorageDead(_211);
        StorageLive(_215);
        StorageLive(_216);
        StorageLive(_217);
        _217 = &(*_1);
        _216 = state::VaultState::get_pending_fees(move _217) -> [return: bb79, unwind continue];
    }

    bb79: {
        StorageDead(_217);
        StorageLive(_218);
        _218 = _210;
        _215 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Add>::add(move _216, move _218) -> [return: bb80, unwind continue];
    }

    bb80: {
        StorageDead(_218);
        StorageDead(_216);
        StorageLive(_219);
        StorageLive(_220);
        _220 = &mut (*_1);
        StorageLive(_221);
        _221 = _215;
        _219 = state::VaultState::set_pending_fees(move _220, move _221) -> [return: bb81, unwind continue];
    }

    bb81: {
        StorageDead(_221);
        StorageDead(_220);
        StorageDead(_219);
        StorageLive(_222);
        StorageLive(_223);
        _223 = &mut (*_1);
        StorageLive(_224);
        StorageLive(_225);
        _225 = _13;
        StorageLive(_226);
        _226 = _210;
        _224 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Sub>::sub(move _225, move _226) -> [return: bb82, unwind continue];
    }

    bb82: {
        StorageDead(_226);
        StorageDead(_225);
        _222 = update_prev_aum(move _223, move _224) -> [return: bb83, unwind continue];
    }

    bb83: {
        StorageDead(_224);
        StorageDead(_223);
        StorageDead(_222);
        StorageLive(_227);
        _227 = _3;
        ((*_1).15: u64) = move _227;
        StorageDead(_227);
        StorageLive(_228);
        _228 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _228);
        StorageDead(_228);
        StorageDead(_215);
        StorageDead(_210);
        StorageDead(_140);
        StorageDead(_137);
        StorageDead(_71);
        StorageDead(_18);
        StorageDead(_13);
        StorageDead(_10);
        goto -> bb84;
    }

    bb84: {
        return;
    }

    bb85 (cleanup): {
        drop(_176) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb86 (cleanup): {
        drop(_121) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb87 (cleanup): {
        drop(_55) -> [return: bb88, unwind terminate(cleanup)];
    }

    bb88 (cleanup): {
        resume;
    }
}
