digraph Mir_0_443 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;Holdings as std::fmt::Debug&gt;::fmt(_1: &amp;ReErased operations::vault_operations::common::Holdings, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let mut _3: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _4: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _5: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _7: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _8: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _10: std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased str;<br align="left"/>let _13: &amp;ReErased str;<br align="left"/>let mut _14: &amp;ReErased str;<br align="left"/>let _15: &amp;ReErased str;<br align="left"/>let mut _16: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _17: &amp;ReErased u64;<br align="left"/>let _18: &amp;ReErased u64;<br align="left"/>let mut _19: &amp;ReErased str;<br align="left"/>let _20: &amp;ReErased str;<br align="left"/>let mut _21: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _22: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let _23: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _24: &amp;ReErased str;<br align="left"/>let _25: &amp;ReErased str;<br align="left"/>let mut _26: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _27: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _28: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _29: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _30: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>>;
    bb0__0_443 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = const &quot;Holdings&quot;<br/>_12 = &amp;(*_13)<br/></td></tr><tr><td align="left">_10 = Formatter::&lt;'_&gt;::debug_struct(move _11, move _12)</td></tr></table>>];
    bb1__0_443 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_9 = &amp;mut _10<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = const &quot;available&quot;<br/>_14 = &amp;(*_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;((*_1).0: u64)<br/>_17 = &amp;(*_18)<br/>_16 = move _17 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_8 = DebugStruct::&lt;'_, '_&gt;::field(move _9, move _14, move _16)</td></tr></table>>];
    bb2__0_443 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_7 = &amp;mut (*_8)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = const &quot;invested&quot;<br/>_19 = &amp;(*_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;((*_1).1: operations::vault_operations::common::Invested)<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_6 = DebugStruct::&lt;'_, '_&gt;::field(move _7, move _19, move _21)</td></tr></table>>];
    bb3__0_443 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_5 = &amp;mut (*_6)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_7)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = const &quot;total_sum&quot;<br/>_24 = &amp;(*_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;((*_1).2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/></td></tr><tr><td align="left">_29 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _30)</td></tr></table>>];
    bb4__0_443 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/>_26 = move _27 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_4 = DebugStruct::&lt;'_, '_&gt;::field(move _5, move _24, move _26)</td></tr></table>>];
    bb5__0_443 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_3 = &amp;mut (*_4)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_0 = DebugStruct::&lt;'_, '_&gt;::finish(move _3)</td></tr></table>>];
    bb6__0_443 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_443 -> bb1__0_443 [label="return"];
    bb1__0_443 -> bb2__0_443 [label="return"];
    bb2__0_443 -> bb3__0_443 [label="return"];
    bb3__0_443 -> bb4__0_443 [label="return"];
    bb4__0_443 -> bb5__0_443 [label="return"];
    bb5__0_443 -> bb6__0_443 [label="return"];
}
