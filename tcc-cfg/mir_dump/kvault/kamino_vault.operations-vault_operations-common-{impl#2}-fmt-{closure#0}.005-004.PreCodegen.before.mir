// MIR for `operations::vault_operations::common::<impl at programs\kvault\src\operations\vault_operations.rs:878:5: 878:33>::fmt::{closure#0}` before PreCodegen

fn operations::vault_operations::common::<impl at programs\kvault\src\operations\vault_operations.rs:878:5: 878:33>::fmt::{closure#0}(_1: &mut {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}, _2: &&InvestedReserve) -> bool {
    debug i => _2;
    let mut _0: bool;
    let mut _3: &anchor_lang::prelude::Pubkey;
    let mut _4: &anchor_lang::prelude::Pubkey;
    let _5: anchor_lang::prelude::Pubkey;
    let mut _6: &operations::vault_operations::common::InvestedReserve;

    bb0: {
        StorageLive(_3);
        _6 = deref_copy (*_2);
        _3 = &((*_6).0: anchor_lang::prelude::Pubkey);
        StorageLive(_4);
        StorageLive(_5);
        _5 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        _4 = &_5;
        _0 = <anchor_lang::prelude::Pubkey as PartialEq>::ne(move _3, move _4) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
