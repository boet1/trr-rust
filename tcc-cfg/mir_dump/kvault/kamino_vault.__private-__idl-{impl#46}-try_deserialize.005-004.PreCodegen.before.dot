digraph Mir_0_3556 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;__idl::IdlAccount as anchor_lang::AccountDeserialize&gt;::try_deserialize(_1: &amp;ReErased mut &amp;ReErased [u8]) -&gt; std::result::Result&lt;__private::__idl::IdlAccount, anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: bool;<br align="left"/>let mut _4: usize;<br align="left"/>let mut _5: &amp;ReErased [u8];<br align="left"/>let mut _6: usize;<br align="left"/>let mut _7: &amp;ReErased [i32];<br align="left"/>let mut _8: &amp;ReErased [i32; 8_usize];<br align="left"/>let _9: [i32; 8_usize];<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: anchor_lang::error::Error;<br align="left"/>let mut _12: anchor_lang::error::ErrorCode;<br align="left"/>let _13: &amp;ReErased [u8];<br align="left"/>let _14: &amp;ReErased [u8];<br align="left"/>let mut _15: &amp;ReErased [u8];<br align="left"/>let mut _16: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let _17: ();<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _20: &amp;ReErased [u8; 8_usize];<br align="left"/>let _21: [u8; 8_usize];<br align="left"/>let mut _22: &amp;ReErased &amp;ReErased [u8];<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: anchor_lang::error::Error;<br align="left"/>let mut _25: anchor_lang::error::Error;<br align="left"/>let mut _26: anchor_lang::error::AnchorError;<br align="left"/>let mut _27: std::string::String;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _29: anchor_lang::error::ErrorCode;<br align="left"/>let mut _30: u32;<br align="left"/>let mut _31: anchor_lang::error::ErrorCode;<br align="left"/>let mut _32: std::string::String;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _34: anchor_lang::error::ErrorCode;<br align="left"/>let mut _35: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _36: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _37: anchor_lang::error::Source;<br align="left"/>let mut _38: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _39: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _40: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _41: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _42: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _43: &amp;ReErased [i32; 8_usize];<br align="left"/>let mut _44: &amp;ReErased [u8];<br align="left"/>let mut _45: &amp;ReErased [u8];<br align="left"/>debug buf =&gt; _1;<br align="left"/>debug given_disc =&gt; _13;<br align="left"/>>;
    bb0__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_44 = deref_copy (*_1)<br/>_5 = &amp;(*_44)<br/></td></tr><tr><td align="left">_4 = core::slice::&lt;impl [u8]&gt;::len(move _5)</td></tr></table>>];
    bb1__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_43 = const _<br/>_8 = &amp;(*_43)<br/>_7 = move _8 as &amp;[i32] (PointerCoercion(Unsize))<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = core::slice::&lt;impl [i32]&gt;::len(move _7)</td></tr></table>>];
    bb2__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_3 = Lt(move _4, move _6)<br/></td></tr><tr><td align="left">switchInt(move _3)</td></tr></table>>];
    bb3__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = AccountDiscriminatorNotFound<br/></td></tr><tr><td align="left">_11 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _12)</td></tr></table>>];
    bb4__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_0 = std::result::Result::&lt;__idl::IdlAccount, anchor_lang::error::Error&gt;::Err(move _11)<br/>StorageDead(_11)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>_2 = const ()<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_45 = deref_copy (*_1)<br/>_15 = &amp;(*_45)<br/>StorageLive(_16)<br/>_16 = RangeTo::&lt;usize&gt; { end: const 8_usize }<br/></td></tr><tr><td align="left">_14 = &lt;[u8] as Index&lt;RangeTo&lt;usize&gt;&gt;&gt;::index(move _15, move _16)</td></tr></table>>];
    bb6__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>_13 = &amp;(*_14)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_42 = const _<br/>_19 = &amp;(*_42)<br/>StorageLive(_22)<br/>_22 = &amp;_13<br/></td></tr><tr><td align="left">_18 = &lt;&amp;[u8; 8] as PartialEq&lt;&amp;[u8]&gt;&gt;::ne(move _19, move _22)</td></tr></table>>];
    bb7__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb8__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_41 = const _<br/>_28 = &amp;(*_41)<br/></td></tr><tr><td align="left">_27 = anchor_lang::error::ErrorCode::name(move _28)</td></tr></table>>];
    bb9__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = AccountDiscriminatorMismatch<br/></td></tr><tr><td align="left">_30 = &lt;anchor_lang::error::ErrorCode as Into&lt;u32&gt;&gt;::into(move _31)</td></tr></table>>];
    bb10__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_40 = const _<br/>_33 = &amp;(*_40)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::error::ErrorCode as ToString&gt;::to_string(move _33)</td></tr></table>>];
    bb11__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\lib.rs&quot;, line: const 32_u32 }<br/>_36 = anchor_lang::error::ErrorOrigin::Source(move _37)<br/>StorageDead(_37)<br/>_35 = Option::&lt;ErrorOrigin&gt;::Some(move _36)<br/>StorageDead(_36)<br/>StorageLive(_38)<br/>_38 = Option::&lt;ComparedValues&gt;::None<br/>_26 = anchor_lang::error::AnchorError { error_name: move _27, error_code_number: move _30, error_msg: move _32, error_origin: move _35, compared_values: move _38 }<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _26)</td></tr></table>>];
    bb12__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _25, const &quot;IdlAccount&quot;)</td></tr></table>>];
    bb13__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_0 = std::result::Result::&lt;__idl::IdlAccount, anchor_lang::error::Error&gt;::Err(move _24)<br/>StorageDead(_24)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/>_17 = const ()<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_39)<br/>_39 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_0 = &lt;__idl::IdlAccount as anchor_lang::AccountDeserialize&gt;::try_deserialize_unchecked(move _39)</td></tr></table>>];
    bb15__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">return</td></tr></table>>];
    bb17__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb18__0_3556 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3556 -> bb1__0_3556 [label="return"];
    bb1__0_3556 -> bb2__0_3556 [label="return"];
    bb2__0_3556 -> bb5__0_3556 [label="0"];
    bb2__0_3556 -> bb3__0_3556 [label="otherwise"];
    bb3__0_3556 -> bb4__0_3556 [label="return"];
    bb4__0_3556 -> bb16__0_3556 [label=""];
    bb5__0_3556 -> bb6__0_3556 [label="return"];
    bb6__0_3556 -> bb7__0_3556 [label="return"];
    bb7__0_3556 -> bb14__0_3556 [label="0"];
    bb7__0_3556 -> bb8__0_3556 [label="otherwise"];
    bb8__0_3556 -> bb9__0_3556 [label="return"];
    bb9__0_3556 -> bb10__0_3556 [label="return"];
    bb9__0_3556 -> bb17__0_3556 [label="unwind"];
    bb10__0_3556 -> bb11__0_3556 [label="return"];
    bb10__0_3556 -> bb17__0_3556 [label="unwind"];
    bb11__0_3556 -> bb12__0_3556 [label="return"];
    bb11__0_3556 -> bb18__0_3556 [label="unwind"];
    bb12__0_3556 -> bb13__0_3556 [label="return"];
    bb12__0_3556 -> bb18__0_3556 [label="unwind"];
    bb13__0_3556 -> bb16__0_3556 [label=""];
    bb14__0_3556 -> bb15__0_3556 [label="return"];
    bb15__0_3556 -> bb16__0_3556 [label=""];
    bb17__0_3556 -> bb18__0_3556 [label="return"];
}
