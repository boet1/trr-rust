digraph Mir_0_418 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn amounts_invested(_1: &amp;ReErased state::VaultState, _2: impl Iterator&lt;Item = T&gt;/#2, _3: u64) -&gt; std::result::Result&lt;operations::vault_operations::common::Invested, anchor_lang::error::Error&gt;<br align="left"/>let mut _4: operations::vault_operations::common::Invested;<br align="left"/>let mut _5: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::iter::Zip&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, std::slice::IterMut&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;;<br align="left"/>let mut _8: std::iter::Zip&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, std::slice::IterMut&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;;<br align="left"/>let mut _9: std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;;<br align="left"/>let mut _10: &amp;ReErased [state::VaultAllocation];<br align="left"/>let mut _11: &amp;ReErased [state::VaultAllocation; 25_usize];<br align="left"/>let mut _12: std::slice::IterMut&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;;<br align="left"/>let mut _13: &amp;ReErased mut [operations::vault_operations::common::InvestedReserve];<br align="left"/>let mut _14: &amp;ReErased mut [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>let mut _15: std::iter::Zip&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, std::slice::IterMut&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;;<br align="left"/>let mut _16: ();<br align="left"/>let _17: ();<br align="left"/>let mut _18: std::option::Option&lt;(&amp;ReErased state::VaultAllocation, &amp;ReErased mut operations::vault_operations::common::InvestedReserve)&gt;;<br align="left"/>let mut _19: &amp;ReErased mut std::iter::Zip&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, std::slice::IterMut&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;;<br align="left"/>let mut _20: &amp;ReErased mut std::iter::Zip&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, std::slice::IterMut&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;;<br align="left"/>let mut _21: isize;<br align="left"/>let mut _22: !;<br align="left"/>let _23: &amp;ReErased state::VaultAllocation;<br align="left"/>let _24: &amp;ReErased mut operations::vault_operations::common::InvestedReserve;<br align="left"/>let _25: ();<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _29: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: anchor_lang::error::Error;<br align="left"/>let mut _33: anchor_lang::error::AnchorError;<br align="left"/>let mut _34: std::string::String;<br align="left"/>let mut _35: &amp;ReErased KaminoVaultError;<br align="left"/>let _36: KaminoVaultError;<br align="left"/>let mut _37: u32;<br align="left"/>let mut _38: KaminoVaultError;<br align="left"/>let mut _39: std::string::String;<br align="left"/>let mut _40: &amp;ReErased KaminoVaultError;<br align="left"/>let _41: KaminoVaultError;<br align="left"/>let mut _42: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _43: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _44: anchor_lang::error::Source;<br align="left"/>let mut _45: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _46: T/#1;<br align="left"/>let mut _47: std::option::Option&lt;T/#1&gt;;<br align="left"/>let mut _48: &amp;ReErased mut impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _51: &amp;ReErased T/#1;<br align="left"/>let _52: std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;&gt;;<br align="left"/>let mut _54: std::result::Result&lt;std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: std::result::Result&lt;std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _56: &amp;ReErased T/#1;<br align="left"/>let mut _57: Closure(DefId(0:421 ~ kamino_vault[b3c4]::operations::vault_operations::common::amounts_invested::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _62: std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let _63: ();<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _66: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: anchor_lang::error::Error;<br align="left"/>let mut _69: anchor_lang::error::AnchorError;<br align="left"/>let mut _70: std::string::String;<br align="left"/>let mut _71: &amp;ReErased KaminoVaultError;<br align="left"/>let _72: KaminoVaultError;<br align="left"/>let mut _73: u32;<br align="left"/>let mut _74: KaminoVaultError;<br align="left"/>let mut _75: std::string::String;<br align="left"/>let mut _76: &amp;ReErased KaminoVaultError;<br align="left"/>let _77: KaminoVaultError;<br align="left"/>let mut _78: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _79: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _80: anchor_lang::error::Source;<br align="left"/>let mut _81: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _82: ();<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _85: &amp;ReErased kamino_lending::LastUpdate;<br align="left"/>let _86: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let mut _87: &amp;ReErased std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _88: u64;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: anchor_lang::error::Error;<br align="left"/>let mut _91: anchor_lang::error::AnchorError;<br align="left"/>let mut _92: std::string::String;<br align="left"/>let mut _93: &amp;ReErased KaminoVaultError;<br align="left"/>let _94: KaminoVaultError;<br align="left"/>let mut _95: u32;<br align="left"/>let mut _96: KaminoVaultError;<br align="left"/>let mut _97: std::string::String;<br align="left"/>let mut _98: &amp;ReErased KaminoVaultError;<br align="left"/>let _99: KaminoVaultError;<br align="left"/>let mut _100: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _101: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _102: anchor_lang::error::Source;<br align="left"/>let mut _103: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _104: u64;<br align="left"/>let _105: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _106: &amp;ReErased kamino_lending::CollateralExchangeRate;<br align="left"/>let _107: kamino_lending::CollateralExchangeRate;<br align="left"/>let mut _108: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let _109: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let mut _110: &amp;ReErased std::cell::Ref&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _111: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _112: u64;<br align="left"/>let mut _113: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _114: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _115: u64;<br align="left"/>let mut _116: u64;<br align="left"/>let _117: ();<br align="left"/>let mut _118: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _119: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _120: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _121: operations::vault_operations::common::Invested;<br align="left"/>let mut _122: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _123: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _124: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _125: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _126: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _127: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _128: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25_usize], std::alloc::Global&gt;;<br align="left"/>let mut _129: bool;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: *const [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>debug vault =&gt; _1;<br align="left"/>debug reserves_iter =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug invested =&gt; _4;<br align="left"/>debug total =&gt; _5;<br align="left"/>debug iter =&gt; _15;<br align="left"/>debug allocation_state =&gt; _23;<br align="left"/>debug computed_invested_allocation =&gt; _24;<br align="left"/>debug reserve =&gt; _46;<br align="left"/>debug reserve_key =&gt; _50;<br align="left"/>debug reserve =&gt; _52;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug ctoken_amount =&gt; _104;<br align="left"/>debug liquidity_amount =&gt; _105;<br align="left"/>>;
    bb0__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_129 = const false<br/>StorageLive(_4)<br/></td></tr><tr><td align="left">_4 = &lt;Invested as Default&gt;::default()</td></tr></table>>];
    bb1__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_5 = const _<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).18: [state::VaultAllocation; 25])<br/>_10 = move _11 as &amp;[state::VaultAllocation] (PointerCoercion(Unsize))<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = core::slice::&lt;impl [VaultAllocation]&gt;::iter(move _10)</td></tr></table>>];
    bb2__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_128 = deref_copy (_4.0: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;)<br/>_137 = (((_128.0: std::ptr::Unique&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: std::ptr::NonNull&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: *const [operations::vault_operations::common::InvestedReserve; 25])<br/>_14 = &amp;mut (*_137)<br/>_13 = move _14 as &amp;mut [operations::vault_operations::common::InvestedReserve] (PointerCoercion(Unsize))<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = core::slice::&lt;impl [InvestedReserve]&gt;::iter_mut(move _13)</td></tr></table>>];
    bb3__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">_8 = &lt;std::slice::Iter&lt;'_, VaultAllocation&gt; as Iterator&gt;::zip::&lt;std::slice::IterMut&lt;'_, InvestedReserve&gt;&gt;(move _9, move _12)</td></tr></table>>];
    bb4__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;Zip&lt;std::slice::Iter&lt;'_, VaultAllocation&gt;, std::slice::IterMut&lt;'_, InvestedReserve&gt;&gt; as IntoIterator&gt;::into_iter(move _8)</td></tr></table>>];
    bb5__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_15)<br/>_15 = move _7<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;mut _15<br/>_19 = &amp;mut (*_20)<br/></td></tr><tr><td align="left">_18 = &lt;Zip&lt;std::slice::Iter&lt;'_, VaultAllocation&gt;, std::slice::IterMut&lt;'_, InvestedReserve&gt;&gt; as Iterator&gt;::next(move _19)</td></tr></table>>];
    bb7__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_21 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb8__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = (((_18 as Some).0: (&amp;state::VaultAllocation, &amp;mut operations::vault_operations::common::InvestedReserve)).0: &amp;state::VaultAllocation)<br/>StorageLive(_24)<br/>_24 = move (((_18 as Some).0: (&amp;state::VaultAllocation, &amp;mut operations::vault_operations::common::InvestedReserve)).1: &amp;mut operations::vault_operations::common::InvestedReserve)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;((*_23).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/></td></tr><tr><td align="left">_29 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb9__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_6 = const ()<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_120)<br/>_120 = _5<br/>(_4.1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) = move _120<br/>StorageDead(_120)<br/>StorageLive(_121)<br/>_121 = move _4<br/>_0 = std::result::Result::&lt;Invested, anchor_lang::error::Error&gt;::Ok(move _121)<br/>StorageDead(_121)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb11__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_28 = &amp;_29<br/></td></tr><tr><td align="left">_26 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _27, move _28)</td></tr></table>>];
    bb12__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb13__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>_25 = const ()<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;mut _2<br/></td></tr><tr><td align="left">_47 = &lt;impl Iterator&lt;Item = T&gt; as Iterator&gt;::next(move _48)</td></tr></table>>];
    bb15__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = KaminoVaultError::ReserveNotProvidedInTheAccounts<br/></td></tr><tr><td align="left">_37 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _38)</td></tr></table>>];
    bb16__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_122 = const _<br/>_40 = &amp;(*_122)<br/></td></tr><tr><td align="left">_39 = &lt;KaminoVaultError as ToString&gt;::to_string(move _40)</td></tr></table>>];
    bb17__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\operations\\vault_operations.rs&quot;, line: const 646_u32 }<br/>_43 = anchor_lang::error::ErrorOrigin::Source(move _44)<br/>StorageDead(_44)<br/>_42 = Option::&lt;ErrorOrigin&gt;::Some(move _43)<br/>StorageDead(_43)<br/>StorageLive(_45)<br/>_45 = Option::&lt;ComparedValues&gt;::None<br/>_33 = anchor_lang::error::AnchorError { error_name: move _34, error_code_number: move _37, error_msg: move _39, error_origin: move _42, compared_values: move _45 }<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _33)</td></tr></table>>];
    bb18__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_0 = std::result::Result::&lt;Invested, anchor_lang::error::Error&gt;::Err(move _32)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_49 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb20__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_129 = const true<br/>_46 = move ((_47 as Some).0: T)<br/>_130 = discriminant(_47)<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_46<br/></td></tr><tr><td align="left">_50 = &lt;T as AnyAccountLoader&lt;'_, kamino_lending::Reserve&gt;&gt;::get_pubkey(move _51)</td></tr></table>>];
    bb21__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">drop(_47)</td></tr></table>>];
    bb22__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_129 = const false<br/>StorageDead(_46)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_123 = const _<br/>_35 = &amp;(*_123)<br/></td></tr><tr><td align="left">_34 = KaminoVaultError::name(move _35)</td></tr></table>>];
    bb23__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_46<br/></td></tr><tr><td align="left">_55 = &lt;T as AnyAccountLoader&lt;'_, kamino_lending::Reserve&gt;&gt;::get(move _56)</td></tr></table>>];
    bb24__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageLive(_57)<br/>_57 = {closure@programs\kvault\src\operations\vault_operations.rs:652:26: 652:29}<br/></td></tr><tr><td align="left">_54 = std::result::Result::&lt;Ref&lt;'_, kamino_lending::Reserve&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\operations\vault_operations.rs:652:26: 652:29}&gt;(move _55, move _57)</td></tr></table>>];
    bb25__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;Ref&lt;'_, kamino_lending::Reserve&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb26__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_58 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb27__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_53 as Continue).0: std::cell::Ref&lt;'_, kamino_lending::Reserve&gt;)<br/>_52 = move _62<br/>StorageDead(_62)<br/>_132 = discriminant(_53)<br/>StorageDead(_53)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = &amp;_50<br/>StorageLive(_66)<br/>_66 = &amp;((*_23).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_64 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _65, move _66)</td></tr></table>>];
    bb28__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = move ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_61)<br/>_61 = move _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Invested, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb29__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>_134 = discriminant(_53)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb31__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_125 = const _<br/>_71 = &amp;(*_125)<br/></td></tr><tr><td align="left">_70 = KaminoVaultError::name(move _71)</td></tr></table>>];
    bb32__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = KaminoVaultError::ReserveAccountAndKeyMismatch<br/></td></tr><tr><td align="left">_73 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _74)</td></tr></table>>];
    bb33__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_124 = const _<br/>_76 = &amp;(*_124)<br/></td></tr><tr><td align="left">_75 = &lt;KaminoVaultError as ToString&gt;::to_string(move _76)</td></tr></table>>];
    bb34__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\operations\\vault_operations.rs&quot;, line: const 655_u32 }<br/>_79 = anchor_lang::error::ErrorOrigin::Source(move _80)<br/>StorageDead(_80)<br/>_78 = Option::&lt;ErrorOrigin&gt;::Some(move _79)<br/>StorageDead(_79)<br/>StorageLive(_81)<br/>_81 = Option::&lt;ComparedValues&gt;::None<br/>_69 = anchor_lang::error::AnchorError { error_name: move _70, error_code_number: move _73, error_msg: move _75, error_origin: move _78, compared_values: move _81 }<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _69)</td></tr></table>>];
    bb35__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_0 = std::result::Result::&lt;Invested, anchor_lang::error::Error&gt;::Err(move _68)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>_63 = const ()<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;_52<br/></td></tr><tr><td align="left">_86 = &lt;Ref&lt;'_, kamino_lending::Reserve&gt; as Deref&gt;::deref(move _87)</td></tr></table>>];
    bb37__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_85 = &amp;((*_86).1: kamino_lending::LastUpdate)<br/>StorageLive(_88)<br/>_88 = _3<br/></td></tr><tr><td align="left">_84 = LastUpdate::is_stale(move _85, move _88, const _)</td></tr></table>>];
    bb38__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = std::result::Result::&lt;bool, anchor_lang::error::Error&gt;::unwrap(move _84)</td></tr></table>>];
    bb39__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb40__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_127 = const _<br/>_93 = &amp;(*_127)<br/></td></tr><tr><td align="left">_92 = KaminoVaultError::name(move _93)</td></tr></table>>];
    bb41__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = KaminoVaultError::ReserveIsStale<br/></td></tr><tr><td align="left">_95 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _96)</td></tr></table>>];
    bb42__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_126 = const _<br/>_98 = &amp;(*_126)<br/></td></tr><tr><td align="left">_97 = &lt;KaminoVaultError as ToString&gt;::to_string(move _98)</td></tr></table>>];
    bb43__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\operations\\vault_operations.rs&quot;, line: const 663_u32 }<br/>_101 = anchor_lang::error::ErrorOrigin::Source(move _102)<br/>StorageDead(_102)<br/>_100 = Option::&lt;ErrorOrigin&gt;::Some(move _101)<br/>StorageDead(_101)<br/>StorageLive(_103)<br/>_103 = Option::&lt;ComparedValues&gt;::None<br/>_91 = anchor_lang::error::AnchorError { error_name: move _92, error_code_number: move _95, error_msg: move _97, error_origin: move _100, compared_values: move _103 }<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _91)</td></tr></table>>];
    bb44__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_0 = std::result::Result::&lt;Invested, anchor_lang::error::Error&gt;::Err(move _90)<br/>StorageDead(_90)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>_82 = const ()<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_104)<br/>_104 = ((*_23).6: u64)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_52<br/></td></tr><tr><td align="left">_109 = &lt;Ref&lt;'_, kamino_lending::Reserve&gt; as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb46__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_108 = &amp;(*_109)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_107 = kamino_lending::Reserve::collateral_exchange_rate(move _108)</td></tr></table>>];
    bb47__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_106 = &amp;_107<br/>StorageDead(_108)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = _104<br/></td></tr><tr><td align="left">_111 = &lt;u64 as Into&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::into(move _112)</td></tr></table>>];
    bb48__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">_105 = CollateralExchangeRate::fraction_collateral_to_liquidity(move _106, move _111)</td></tr></table>>];
    bb49__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_106)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageLive(_113)<br/>_113 = ((*_23).0: anchor_lang::prelude::Pubkey)<br/>((*_24).0: anchor_lang::prelude::Pubkey) = move _113<br/>StorageDead(_113)<br/>StorageLive(_114)<br/>_114 = _105<br/>((*_24).1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;) = move _114<br/>StorageDead(_114)<br/>StorageLive(_115)<br/>_115 = _104<br/>((*_24).2: u64) = move _115<br/>StorageDead(_115)<br/>StorageLive(_116)<br/>_116 = ((*_23).2: u64)<br/>((*_24).3: u64) = move _116<br/>StorageDead(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;mut _5<br/>StorageLive(_119)<br/>_119 = _105<br/></td></tr><tr><td align="left">_117 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as AddAssign&gt;::add_assign(move _118, move _119)</td></tr></table>>];
    bb50__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>_17 = const ()<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb51__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb52__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_129 = const false<br/>StorageDead(_46)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb54__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb55__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_129 = const false<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb57__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb58__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">return</td></tr></table>>];
    bb59__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_92)</td></tr></table>>];
    bb60__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb61__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_52)</td></tr></table>>];
    bb62__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb63__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb64__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb65__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb66__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_136 = discriminant(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb68__0_418 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">switchInt(_129)</td></tr></table>>];
    bb0__0_418 -> bb1__0_418 [label="return"];
    bb0__0_418 -> bb64__0_418 [label="unwind"];
    bb1__0_418 -> bb2__0_418 [label="return"];
    bb1__0_418 -> bb63__0_418 [label="unwind"];
    bb2__0_418 -> bb3__0_418 [label="return"];
    bb2__0_418 -> bb63__0_418 [label="unwind"];
    bb3__0_418 -> bb4__0_418 [label="return"];
    bb3__0_418 -> bb63__0_418 [label="unwind"];
    bb4__0_418 -> bb5__0_418 [label="return"];
    bb4__0_418 -> bb63__0_418 [label="unwind"];
    bb5__0_418 -> bb6__0_418 [label=""];
    bb6__0_418 -> bb7__0_418 [label="return"];
    bb6__0_418 -> bb63__0_418 [label="unwind"];
    bb7__0_418 -> bb10__0_418 [label="0"];
    bb7__0_418 -> bb8__0_418 [label="1"];
    bb7__0_418 -> bb9__0_418 [label="otherwise"];
    bb8__0_418 -> bb11__0_418 [label="return"];
    bb8__0_418 -> bb63__0_418 [label="unwind"];
    bb10__0_418 -> bb58__0_418 [label="return"];
    bb10__0_418 -> bb65__0_418 [label="unwind"];
    bb11__0_418 -> bb12__0_418 [label="return"];
    bb11__0_418 -> bb63__0_418 [label="unwind"];
    bb12__0_418 -> bb14__0_418 [label="0"];
    bb12__0_418 -> bb13__0_418 [label="otherwise"];
    bb13__0_418 -> bb6__0_418 [label=""];
    bb14__0_418 -> bb19__0_418 [label="return"];
    bb14__0_418 -> bb63__0_418 [label="unwind"];
    bb15__0_418 -> bb16__0_418 [label="return"];
    bb15__0_418 -> bb62__0_418 [label="unwind"];
    bb16__0_418 -> bb17__0_418 [label="return"];
    bb16__0_418 -> bb62__0_418 [label="unwind"];
    bb17__0_418 -> bb18__0_418 [label="return"];
    bb17__0_418 -> bb63__0_418 [label="unwind"];
    bb18__0_418 -> bb56__0_418 [label=""];
    bb19__0_418 -> bb20__0_418 [label="1"];
    bb19__0_418 -> bb21__0_418 [label="otherwise"];
    bb20__0_418 -> bb23__0_418 [label="return"];
    bb20__0_418 -> bb68__0_418 [label="unwind"];
    bb21__0_418 -> bb22__0_418 [label="return"];
    bb21__0_418 -> bb68__0_418 [label="unwind"];
    bb22__0_418 -> bb15__0_418 [label="return"];
    bb22__0_418 -> bb63__0_418 [label="unwind"];
    bb23__0_418 -> bb24__0_418 [label="return"];
    bb23__0_418 -> bb68__0_418 [label="unwind"];
    bb24__0_418 -> bb25__0_418 [label="return"];
    bb24__0_418 -> bb68__0_418 [label="unwind"];
    bb25__0_418 -> bb26__0_418 [label="return"];
    bb25__0_418 -> bb68__0_418 [label="unwind"];
    bb26__0_418 -> bb27__0_418 [label="0"];
    bb26__0_418 -> bb28__0_418 [label="1"];
    bb26__0_418 -> bb9__0_418 [label="otherwise"];
    bb27__0_418 -> bb30__0_418 [label="return"];
    bb27__0_418 -> bb61__0_418 [label="unwind"];
    bb28__0_418 -> bb29__0_418 [label="return"];
    bb28__0_418 -> bb66__0_418 [label="unwind"];
    bb29__0_418 -> bb54__0_418 [label=""];
    bb30__0_418 -> bb36__0_418 [label="0"];
    bb30__0_418 -> bb31__0_418 [label="otherwise"];
    bb31__0_418 -> bb32__0_418 [label="return"];
    bb31__0_418 -> bb61__0_418 [label="unwind"];
    bb32__0_418 -> bb33__0_418 [label="return"];
    bb32__0_418 -> bb60__0_418 [label="unwind"];
    bb33__0_418 -> bb34__0_418 [label="return"];
    bb33__0_418 -> bb60__0_418 [label="unwind"];
    bb34__0_418 -> bb35__0_418 [label="return"];
    bb34__0_418 -> bb61__0_418 [label="unwind"];
    bb35__0_418 -> bb53__0_418 [label=""];
    bb36__0_418 -> bb37__0_418 [label="return"];
    bb36__0_418 -> bb61__0_418 [label="unwind"];
    bb37__0_418 -> bb38__0_418 [label="return"];
    bb37__0_418 -> bb61__0_418 [label="unwind"];
    bb38__0_418 -> bb39__0_418 [label="return"];
    bb38__0_418 -> bb61__0_418 [label="unwind"];
    bb39__0_418 -> bb45__0_418 [label="0"];
    bb39__0_418 -> bb40__0_418 [label="otherwise"];
    bb40__0_418 -> bb41__0_418 [label="return"];
    bb40__0_418 -> bb61__0_418 [label="unwind"];
    bb41__0_418 -> bb42__0_418 [label="return"];
    bb41__0_418 -> bb59__0_418 [label="unwind"];
    bb42__0_418 -> bb43__0_418 [label="return"];
    bb42__0_418 -> bb59__0_418 [label="unwind"];
    bb43__0_418 -> bb44__0_418 [label="return"];
    bb43__0_418 -> bb61__0_418 [label="unwind"];
    bb44__0_418 -> bb53__0_418 [label=""];
    bb45__0_418 -> bb46__0_418 [label="return"];
    bb45__0_418 -> bb61__0_418 [label="unwind"];
    bb46__0_418 -> bb47__0_418 [label="return"];
    bb46__0_418 -> bb61__0_418 [label="unwind"];
    bb47__0_418 -> bb48__0_418 [label="return"];
    bb47__0_418 -> bb61__0_418 [label="unwind"];
    bb48__0_418 -> bb49__0_418 [label="return"];
    bb48__0_418 -> bb61__0_418 [label="unwind"];
    bb49__0_418 -> bb50__0_418 [label="return"];
    bb49__0_418 -> bb61__0_418 [label="unwind"];
    bb50__0_418 -> bb51__0_418 [label="return"];
    bb50__0_418 -> bb68__0_418 [label="unwind"];
    bb51__0_418 -> bb52__0_418 [label="return"];
    bb51__0_418 -> bb63__0_418 [label="unwind"];
    bb52__0_418 -> bb6__0_418 [label=""];
    bb53__0_418 -> bb54__0_418 [label="return"];
    bb53__0_418 -> bb68__0_418 [label="unwind"];
    bb54__0_418 -> bb55__0_418 [label="return"];
    bb54__0_418 -> bb63__0_418 [label="unwind"];
    bb55__0_418 -> bb56__0_418 [label=""];
    bb56__0_418 -> bb57__0_418 [label="return"];
    bb56__0_418 -> bb64__0_418 [label="unwind"];
    bb57__0_418 -> bb58__0_418 [label="return"];
    bb57__0_418 -> bb65__0_418 [label="unwind"];
    bb59__0_418 -> bb61__0_418 [label="return"];
    bb60__0_418 -> bb61__0_418 [label="return"];
    bb61__0_418 -> bb68__0_418 [label="return"];
    bb62__0_418 -> bb63__0_418 [label="return"];
    bb63__0_418 -> bb64__0_418 [label="return"];
    bb64__0_418 -> bb65__0_418 [label="return"];
    bb66__0_418 -> bb68__0_418 [label=""];
    bb67__0_418 -> bb63__0_418 [label="return"];
    bb68__0_418 -> bb63__0_418 [label="0"];
    bb68__0_418 -> bb67__0_418 [label="otherwise"];
}
