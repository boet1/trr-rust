// MIR for `operations::vault_operations::common::<impl at programs\kvault\src\operations\vault_operations.rs:843:5: 843:28>::fmt` before PreCodegen

fn operations::vault_operations::common::<impl at programs\kvault\src\operations\vault_operations.rs:843:5: 843:28>::fmt(_1: &Holdings, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _4: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _5: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _6: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _7: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _8: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _9: &mut std::fmt::DebugStruct<'_, '_>;
    let mut _10: std::fmt::DebugStruct<'_, '_>;
    let mut _11: &mut std::fmt::Formatter<'_>;
    let mut _12: &str;
    let _13: &str;
    let mut _14: &str;
    let _15: &str;
    let mut _16: &dyn std::fmt::Debug;
    let mut _17: &u64;
    let _18: &u64;
    let mut _19: &str;
    let _20: &str;
    let mut _21: &dyn std::fmt::Debug;
    let mut _22: &operations::vault_operations::common::Invested;
    let _23: &operations::vault_operations::common::Invested;
    let mut _24: &str;
    let _25: &str;
    let mut _26: &dyn std::fmt::Debug;
    let mut _27: &kamino_lending::utils::FractionDisplay<'_>;
    let _28: &kamino_lending::utils::FractionDisplay<'_>;
    let _29: kamino_lending::utils::FractionDisplay<'_>;
    let mut _30: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &mut (*_2);
        StorageLive(_12);
        StorageLive(_13);
        _13 = const "Holdings";
        _12 = &(*_13);
        _10 = Formatter::<'_>::debug_struct(move _11, move _12) -> [return: bb1, unwind continue];
    }

    bb1: {
        _9 = &mut _10;
        StorageDead(_12);
        StorageDead(_11);
        StorageLive(_14);
        StorageLive(_15);
        _15 = const "available";
        _14 = &(*_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        _18 = &((*_1).0: u64);
        _17 = &(*_18);
        _16 = move _17 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_17);
        _8 = DebugStruct::<'_, '_>::field(move _9, move _14, move _16) -> [return: bb2, unwind continue];
    }

    bb2: {
        _7 = &mut (*_8);
        StorageDead(_16);
        StorageDead(_14);
        StorageDead(_9);
        StorageLive(_19);
        StorageLive(_20);
        _20 = const "invested";
        _19 = &(*_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        _23 = &((*_1).1: operations::vault_operations::common::Invested);
        _22 = &(*_23);
        _21 = move _22 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_22);
        _6 = DebugStruct::<'_, '_>::field(move _7, move _19, move _21) -> [return: bb3, unwind continue];
    }

    bb3: {
        _5 = &mut (*_6);
        StorageDead(_21);
        StorageDead(_19);
        StorageDead(_7);
        StorageLive(_24);
        StorageLive(_25);
        _25 = const "total_sum";
        _24 = &(*_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &((*_1).2: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _29 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_display(move _30) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_30);
        _28 = &_29;
        _27 = &(*_28);
        _26 = move _27 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_27);
        _4 = DebugStruct::<'_, '_>::field(move _5, move _24, move _26) -> [return: bb5, unwind continue];
    }

    bb5: {
        _3 = &mut (*_4);
        StorageDead(_26);
        StorageDead(_24);
        StorageDead(_5);
        _0 = DebugStruct::<'_, '_>::finish(move _3) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_3);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_23);
        StorageDead(_20);
        StorageDead(_18);
        StorageDead(_15);
        StorageDead(_13);
        StorageDead(_10);
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_4);
        return;
    }
}
