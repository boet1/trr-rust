// MIR for `state::<impl at programs\kvault\src\state.rs:82:1: 82:16>::refresh_target_allocations::{closure#3}` after PreCodegen

fn state::<impl at programs\kvault\src\state.rs:82:1: 82:16>::refresh_target_allocations::{closure#3}(_1: &mut {closure@programs\kvault\src\state.rs:373:21: 373:38}, _2: &(&mut VaultAllocation, &FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)) -> bool {
    let mut _0: bool;
    let _3: &&mut state::VaultAllocation;
    let mut _4: &anchor_lang::prelude::Pubkey;
    let mut _5: &anchor_lang::prelude::Pubkey;
    let _6: anchor_lang::prelude::Pubkey;
    let mut _7: &mut state::VaultAllocation;
    scope 1 {
        debug allocation => _3;
    }

    bb0: {
        StorageLive(_3);
        _3 = &((*_2).0: &mut state::VaultAllocation);
        StorageLive(_4);
        _7 = deref_copy (*_3);
        _4 = &((*_7).0: anchor_lang::prelude::Pubkey);
        StorageLive(_5);
        StorageLive(_6);
        _6 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        _5 = &_6;
        _0 = <anchor_lang::prelude::Pubkey as PartialEq>::ne(move _4, move _5) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
