digraph Mir_0_2020 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn operations::vault_operations::withdraw::{closure#16}(_1: Closure(DefId(0:2020 ~ kamino_vault[b3c4]::operations::vault_operations::withdraw::{closure#16}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;,)]), _2: std::fmt::Error) -&gt; ()<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _6: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _7: &amp;ReErased str;<br align="left"/>let _8: &amp;ReErased str;<br align="left"/>let mut _9: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>debug af =&gt; (*(_1.0: &amp;mut arrform::ArrForm&lt;150&gt;));<br align="left"/>>;
    bb0__0_2020 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_9 = deref_copy (_1.0: &amp;mut arrform::ArrForm&lt;150&gt;)<br/>_6 = &amp;mut (*_9)<br/>_5 = &amp;mut (*_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = const &quot;Buffer overflow&quot;<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_4 = &lt;ArrForm&lt;150&gt; as std::fmt::Write&gt;::write_str(move _5, move _7)</td></tr></table>>];
    bb1__0_2020 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap(move _4)</td></tr></table>>];
    bb2__0_2020 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>_0 = const ()<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2020 -> bb1__0_2020 [label="return"];
    bb1__0_2020 -> bb2__0_2020 [label="return"];
}
