digraph Mir_0_447 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;Invested as std::fmt::Debug&gt;::fmt(_1: &amp;ReErased operations::vault_operations::common::Invested, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let _3: std::vec::Vec&lt;operations::vault_operations::common::InvestedReserve, std::alloc::Global&gt;;<br align="left"/>let mut _4: std::iter::Cloned&lt;std::iter::Filter&lt;std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;, Closure(DefId(0:448 ~ kamino_vault[b3c4]::operations::vault_operations::common::{impl#2}::fmt::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased operations::vault_operations::common::InvestedReserve,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;&gt;;<br align="left"/>let mut _5: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;, Closure(DefId(0:448 ~ kamino_vault[b3c4]::operations::vault_operations::common::{impl#2}::fmt::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased operations::vault_operations::common::InvestedReserve,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _6: std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;;<br align="left"/>let mut _7: &amp;ReErased [operations::vault_operations::common::InvestedReserve];<br align="left"/>let mut _8: &amp;ReErased [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>let mut _9: Closure(DefId(0:448 ~ kamino_vault[b3c4]::operations::vault_operations::common::{impl#2}::fmt::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased operations::vault_operations::common::InvestedReserve,)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _10: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _12: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _13: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _15: std::fmt::DebugStruct&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _16: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _17: &amp;ReErased str;<br align="left"/>let _18: &amp;ReErased str;<br align="left"/>let mut _19: &amp;ReErased str;<br align="left"/>let _20: &amp;ReErased str;<br align="left"/>let mut _21: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _22: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _23: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _24: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _26: &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _29: &amp;ReErased std::vec::Vec&lt;operations::vault_operations::common::InvestedReserve, std::alloc::Global&gt;;<br align="left"/>let _30: &amp;ReErased std::vec::Vec&lt;operations::vault_operations::common::InvestedReserve, std::alloc::Global&gt;;<br align="left"/>let mut _31: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25_usize], std::alloc::Global&gt;;<br align="left"/>let mut _32: *const [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug allocations_filtered =&gt; _3;<br align="left"/>>;
    bb0__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_31 = deref_copy ((*_1).0: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;)<br/>_32 = (((_31.0: std::ptr::Unique&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: std::ptr::NonNull&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: *const [operations::vault_operations::common::InvestedReserve; 25])<br/>_8 = &amp;(*_32)<br/>_7 = move _8 as &amp;[operations::vault_operations::common::InvestedReserve] (PointerCoercion(Unsize))<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = core::slice::&lt;impl [InvestedReserve]&gt;::iter(move _7)</td></tr></table>>];
    bb1__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}<br/></td></tr><tr><td align="left">_5 = &lt;std::slice::Iter&lt;'_, InvestedReserve&gt; as Iterator&gt;::filter::&lt;{closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}&gt;(move _6, move _9)</td></tr></table>>];
    bb2__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;Filter&lt;std::slice::Iter&lt;'_, InvestedReserve&gt;, {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}&gt; as Iterator&gt;::cloned::&lt;'_, InvestedReserve&gt;(move _5)</td></tr></table>>];
    bb3__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;Cloned&lt;Filter&lt;std::slice::Iter&lt;'_, InvestedReserve&gt;, {closure@programs\kvault\src\operations\vault_operations.rs:883:25: 883:28}&gt;&gt; as Iterator&gt;::collect::&lt;Vec&lt;InvestedReserve&gt;&gt;(move _4)</td></tr></table>>];
    bb4__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;mut (*_2)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = const &quot;&quot;<br/>_17 = &amp;(*_18)<br/></td></tr><tr><td align="left">_15 = Formatter::&lt;'_&gt;::debug_struct(move _16, move _17)</td></tr></table>>];
    bb5__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_14 = &amp;mut _15<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = const &quot;total&quot;<br/>_19 = &amp;(*_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;((*_1).1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/></td></tr><tr><td align="left">_24 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _25)</td></tr></table>>];
    bb6__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_23 = &amp;_24<br/>_22 = &amp;(*_23)<br/>_21 = move _22 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_13 = DebugStruct::&lt;'_, '_&gt;::field(move _14, move _19, move _21)</td></tr></table>>];
    bb7__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_12 = &amp;mut (*_13)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = const &quot;allocations&quot;<br/>_26 = &amp;(*_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_3<br/>_29 = &amp;(*_30)<br/>_28 = move _29 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_11 = DebugStruct::&lt;'_, '_&gt;::field(move _12, move _26, move _28)</td></tr></table>>];
    bb8__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_10 = &amp;mut (*_11)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_0 = DebugStruct::&lt;'_, '_&gt;::finish(move _10)</td></tr></table>>];
    bb9__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb10__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb11__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb12__0_447 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_447 -> bb1__0_447 [label="return"];
    bb1__0_447 -> bb2__0_447 [label="return"];
    bb2__0_447 -> bb3__0_447 [label="return"];
    bb3__0_447 -> bb4__0_447 [label="return"];
    bb4__0_447 -> bb5__0_447 [label="return"];
    bb4__0_447 -> bb11__0_447 [label="unwind"];
    bb5__0_447 -> bb6__0_447 [label="return"];
    bb5__0_447 -> bb11__0_447 [label="unwind"];
    bb6__0_447 -> bb7__0_447 [label="return"];
    bb6__0_447 -> bb11__0_447 [label="unwind"];
    bb7__0_447 -> bb8__0_447 [label="return"];
    bb7__0_447 -> bb11__0_447 [label="unwind"];
    bb8__0_447 -> bb9__0_447 [label="return"];
    bb8__0_447 -> bb11__0_447 [label="unwind"];
    bb9__0_447 -> bb10__0_447 [label="return"];
    bb9__0_447 -> bb12__0_447 [label="unwind"];
    bb11__0_447 -> bb12__0_447 [label="return"];
}
