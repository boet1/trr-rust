digraph Mir_0_397 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn operations::vault_operations::withdraw_pending_fees(_1: &amp;ReErased mut state::VaultState, _2: &amp;ReErased anchor_lang::prelude::Pubkey, _3: &amp;ReErased kamino_lending::Reserve, _4: impl Iterator&lt;Item = T&gt;/#2, _5: u64, _6: u64) -&gt; std::result::Result&lt;operations::effects::WithdrawPendingFeesEffects, anchor_lang::error::Error&gt;<br align="left"/>let _7: operations::vault_operations::common::Invested;<br align="left"/>let _8: u64;<br align="left"/>let _9: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _10: operations::vault_operations::common::Holdings;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, operations::vault_operations::common::Holdings&gt;;<br align="left"/>let mut _12: std::result::Result&lt;operations::vault_operations::common::Holdings, anchor_lang::error::Error&gt;;<br align="left"/>let mut _13: &amp;ReErased state::VaultState;<br align="left"/>let mut _14: impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: operations::vault_operations::common::Holdings;<br align="left"/>let _21: ();<br align="left"/>let mut _22: &amp;ReErased str;<br align="left"/>let _23: &amp;ReErased str;<br align="left"/>let mut _24: &amp;ReErased std::string::String;<br align="left"/>let _25: &amp;ReErased std::string::String;<br align="left"/>let _26: std::string::String;<br align="left"/>let _27: std::string::String;<br align="left"/>let mut _28: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _30: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _31: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _32: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _33: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _34: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _35: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _36: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _37: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let _39: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _41: &amp;ReErased u64;<br align="left"/>let _42: &amp;ReErased u64;<br align="left"/>let mut _43: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _45: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _46: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _47: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _48: ();<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _50: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _51: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _52: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let _53: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _59: ();<br align="left"/>let _60: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _61: u128;<br align="left"/>let _62: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _63: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _64: u64;<br align="left"/>let mut _65: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _66: u64;<br align="left"/>let mut _67: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _68: &amp;ReErased operations::vault_operations::common::InvestedReserve;<br align="left"/>let mut _69: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _71: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _72: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _73: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _74: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _75: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _76: u64;<br align="left"/>let mut _77: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _78: kamino_lending::CollateralExchangeRate;<br align="left"/>let mut _79: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let _80: u64;<br align="left"/>let mut _81: &amp;ReErased kamino_lending::CollateralExchangeRate;<br align="left"/>let mut _82: u64;<br align="left"/>let _83: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _84: &amp;ReErased kamino_lending::CollateralExchangeRate;<br align="left"/>let mut _85: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _86: u64;<br align="left"/>let _87: u64;<br align="left"/>let mut _88: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _89: u64;<br align="left"/>let mut _90: bool;<br align="left"/>let mut _91: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _92: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _93: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _94: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _95: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _96: u64;<br align="left"/>let mut _97: u64;<br align="left"/>let mut _98: u64;<br align="left"/>let mut _99: (u64, bool);<br align="left"/>let _100: u64;<br align="left"/>let mut _101: u64;<br align="left"/>let mut _102: u64;<br align="left"/>let mut _103: (u64, bool);<br align="left"/>let _104: ();<br align="left"/>let mut _105: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _106: u64;<br align="left"/>let _107: ();<br align="left"/>let mut _108: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _109: u64;<br align="left"/>let _110: ();<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _112: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _113: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _114: u64;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _120: ();<br align="left"/>let _121: ();<br align="left"/>let mut _122: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _123: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _124: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _125: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _126: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _127: u64;<br align="left"/>let mut _128: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: operations::effects::WithdrawPendingFeesEffects;<br align="left"/>let mut _131: u64;<br align="left"/>let mut _132: u64;<br align="left"/>let mut _133: u64;<br align="left"/>let mut _134: u64;<br align="left"/>let mut _135: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _136: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>debug vault =&gt; _1;<br align="left"/>debug reserve_address_to_withdraw_from =&gt; _2;<br align="left"/>debug reserve_state_to_withdraw_from =&gt; _3;<br align="left"/>debug reserves_iter =&gt; _4;<br align="left"/>debug current_slot =&gt; _5;<br align="left"/>debug current_timestamp =&gt; _6;<br align="left"/>debug invested =&gt; _7;<br align="left"/>debug available =&gt; _8;<br align="left"/>debug total_sum =&gt; _9;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug res =&gt; _27;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug total_fees =&gt; _60;<br align="left"/>debug available_to_send_to_user_f =&gt; _62;<br align="left"/>debug available_to_send_to_user =&gt; _66;<br align="left"/>debug invested_in_reserve =&gt; _68;<br align="left"/>debug invested_liquidity_to_send_to_user_f =&gt; _71;<br align="left"/>debug invested_liquidity_to_send_to_user =&gt; _76;<br align="left"/>debug exchange_rate =&gt; _78;<br align="left"/>debug invested_to_disinvest_ctokens =&gt; _80;<br align="left"/>debug invested_liquidity_to_disinvest_f =&gt; _83;<br align="left"/>debug invested_liquidity_to_disinvest =&gt; _87;<br align="left"/>debug liquidity_rounding_error =&gt; _89;<br align="left"/>debug actual_invested_liquidity_to_send_to_user =&gt; _96;<br align="left"/>debug disinvested_amount_left_in_vault =&gt; _100;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>>;
    bb0__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_1)<br/>StorageLive(_14)<br/>_14 = move _4<br/>StorageLive(_15)<br/>_15 = _5<br/></td></tr><tr><td align="left">_12 = holdings::&lt;'_, T, impl Iterator&lt;Item = T&gt;&gt;(move _13, move _14, move _15)</td></tr></table>>];
    bb1__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;Holdings, anchor_lang::error::Error&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb2__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_16 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb3__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_11 as Continue).0: operations::vault_operations::common::Holdings)<br/>_10 = move _20<br/>StorageDead(_20)<br/>StorageLive(_7)<br/>_7 = move (_10.1: operations::vault_operations::common::Invested)<br/>StorageLive(_8)<br/>_8 = (_10.0: u64)<br/>StorageLive(_9)<br/>_9 = (_10.2: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_137 = discriminant(_11)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_136 = const _<br/>_31 = &amp;(*_136)<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;_7<br/>_38 = &amp;(*_39)<br/></td></tr><tr><td align="left">_37 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;Invested&gt;(move _38)</td></tr></table>>];
    bb4__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;WithdrawPendingFeesEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb6__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_147 = discriminant(_11)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;_8<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;u64&gt;(move _41)</td></tr></table>>];
    bb8__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_9<br/></td></tr><tr><td align="left">_46 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _47)</td></tr></table>>];
    bb9__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _44)</td></tr></table>>];
    bb10__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_36 = [move _37, move _40, move _43]<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>_35 = &amp;_36<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_28 = Arguments::&lt;'_&gt;::new_v1(move _29, move _33)</td></tr></table>>];
    bb11__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = format(move _28)</td></tr></table>>];
    bb12__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/>_26 = move _27<br/>StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/></td></tr><tr><td align="left">_23 = &lt;String as Deref&gt;::deref(move _24)</td></tr></table>>];
    bb13__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_22 = &amp;(*_23)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_21 = solana_program::log::sol_log(move _22)</td></tr></table>>];
    bb14__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb15__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;mut (*_1)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_7<br/>_52 = &amp;(*_53)<br/>StorageLive(_54)<br/>_54 = _6<br/></td></tr><tr><td align="left">_50 = charge_fees(move _51, move _52, move _54)</td></tr></table>>];
    bb16__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb17__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_55 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb18__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_49 as Continue).0: ())<br/>_48 = _59<br/>StorageDead(_59)<br/>_139 = discriminant(_49)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = ((*_1).17: u128)<br/></td></tr><tr><td align="left">_60 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::from_bits(move _61)</td></tr></table>>];
    bb19__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_58)<br/>_58 = move _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;WithdrawPendingFeesEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb20__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>_145 = discriminant(_49)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _8<br/></td></tr><tr><td align="left">_63 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _64)</td></tr></table>>];
    bb22__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = _60<br/></td></tr><tr><td align="left">_62 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _63, move _65)</td></tr></table>>];
    bb23__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_62<br/></td></tr><tr><td align="left">_66 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _67)</td></tr></table>>];
    bb24__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_7<br/>StorageLive(_70)<br/>_70 = &amp;(*_2)<br/></td></tr><tr><td align="left">_68 = Invested::in_reserve(move _69, move _70)</td></tr></table>>];
    bb25__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = ((*_68).1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _60<br/>StorageLive(_75)<br/>_75 = _62<br/></td></tr><tr><td align="left">_73 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _74, move _75)</td></tr></table>>];
    bb26__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_71 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _72, move _73)</td></tr></table>>];
    bb27__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_77 = &amp;_71<br/></td></tr><tr><td align="left">_76 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _77)</td></tr></table>>];
    bb28__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = &amp;(*_3)<br/></td></tr><tr><td align="left">_78 = kamino_lending::Reserve::collateral_exchange_rate(move _79)</td></tr></table>>];
    bb29__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;_78<br/>StorageLive(_82)<br/>_82 = _76<br/></td></tr><tr><td align="left">_80 = CollateralExchangeRate::liquidity_to_collateral_ceil(move _81, move _82)</td></tr></table>>];
    bb30__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;_78<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _80<br/></td></tr><tr><td align="left">_85 = &lt;u64 as Into&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::into(move _86)</td></tr></table>>];
    bb31__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_83 = CollateralExchangeRate::fraction_collateral_to_liquidity(move _84, move _85)</td></tr></table>>];
    bb32__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_83<br/></td></tr><tr><td align="left">_87 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _88)</td></tr></table>>];
    bb33__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = _83<br/></td></tr><tr><td align="left">_92 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::frac(move _93)</td></tr></table>>];
    bb34__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_91 = &amp;_92<br/>StorageDead(_93)<br/>StorageLive(_94)<br/>_135 = const _<br/>_94 = &amp;(*_135)<br/></td></tr><tr><td align="left">_90 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _91, move _94)</td></tr></table>>];
    bb35__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb36__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>_89 = const 1_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>_89 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _76<br/>StorageLive(_98)<br/>_98 = _89<br/>_99 = CheckedSub(_97, _98)<br/></td></tr><tr><td align="left">assert(!move (_99.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _97, move _98)</td></tr></table>>];
    bb39__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_96 = move (_99.0: u64)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _87<br/>StorageLive(_102)<br/>_102 = _96<br/>_103 = CheckedSub(_101, _102)<br/></td></tr><tr><td align="left">assert(!move (_103.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _101, move _102)</td></tr></table>>];
    bb40__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_100 = move (_103.0: u64)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = &amp;mut (*_1)<br/>StorageLive(_106)<br/>_106 = _66<br/></td></tr><tr><td align="left">_104 = withdraw_from_vault(move _105, move _106)</td></tr></table>>];
    bb41__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;mut (*_1)<br/>StorageLive(_109)<br/>_109 = _100<br/></td></tr><tr><td align="left">_107 = deposit_into_vault(move _108, move _109)</td></tr></table>>];
    bb42__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;mut (*_1)<br/>StorageLive(_114)<br/>_114 = _80<br/>StorageLive(_115)<br/>_115 = &amp;(*_2)<br/></td></tr><tr><td align="left">_112 = withdraw_from_vault_allocation(move _113, move _114, move _115)</td></tr></table>>];
    bb43__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb44__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_116 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb45__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_111 as Continue).0: ())<br/>_110 = _120<br/>StorageDead(_120)<br/>_141 = discriminant(_111)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;mut (*_1)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = _60<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = _66<br/></td></tr><tr><td align="left">_126 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _127)</td></tr></table>>];
    bb46__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = move ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_119)<br/>_119 = move _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;WithdrawPendingFeesEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb47__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>_143 = discriminant(_111)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_100)<br/>StorageDead(_96)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">_124 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _125, move _126)</td></tr></table>>];
    bb49__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = _76<br/></td></tr><tr><td align="left">_128 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _129)</td></tr></table>>];
    bb50__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/></td></tr><tr><td align="left">_123 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _124, move _128)</td></tr></table>>];
    bb51__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_121 = update_pending_fees(move _122, move _123)</td></tr></table>>];
    bb52__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = _66<br/>StorageLive(_132)<br/>_132 = _80<br/>StorageLive(_133)<br/>_133 = _96<br/>StorageLive(_134)<br/>_134 = _87<br/>_130 = WithdrawPendingFeesEffects { available_to_send_to_user: move _131, invested_to_disinvest_ctokens: move _132, invested_liquidity_to_send_to_user: move _133, invested_liquidity_to_disinvest: move _134 }<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>_0 = std::result::Result::&lt;WithdrawPendingFeesEffects, anchor_lang::error::Error&gt;::Ok(move _130)<br/>StorageDead(_130)<br/>StorageDead(_100)<br/>StorageDead(_96)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageDead(_71)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb53__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb55__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">return</td></tr></table>>];
    bb57__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb58__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb59__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb60__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left" balign="left">_149 = discriminant(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left" balign="left">_150 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_397 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left" balign="left">_152 = discriminant(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_397 -> bb1__0_397 [label="return"];
    bb0__0_397 -> bb59__0_397 [label="unwind"];
    bb1__0_397 -> bb2__0_397 [label="return"];
    bb1__0_397 -> bb59__0_397 [label="unwind"];
    bb2__0_397 -> bb3__0_397 [label="0"];
    bb2__0_397 -> bb5__0_397 [label="1"];
    bb2__0_397 -> bb4__0_397 [label="otherwise"];
    bb3__0_397 -> bb7__0_397 [label="return"];
    bb3__0_397 -> bb58__0_397 [label="unwind"];
    bb5__0_397 -> bb6__0_397 [label="return"];
    bb5__0_397 -> bb62__0_397 [label="unwind"];
    bb6__0_397 -> bb56__0_397 [label=""];
    bb7__0_397 -> bb8__0_397 [label="return"];
    bb7__0_397 -> bb58__0_397 [label="unwind"];
    bb8__0_397 -> bb9__0_397 [label="return"];
    bb8__0_397 -> bb58__0_397 [label="unwind"];
    bb9__0_397 -> bb10__0_397 [label="return"];
    bb9__0_397 -> bb58__0_397 [label="unwind"];
    bb10__0_397 -> bb11__0_397 [label="return"];
    bb10__0_397 -> bb58__0_397 [label="unwind"];
    bb11__0_397 -> bb12__0_397 [label="return"];
    bb11__0_397 -> bb58__0_397 [label="unwind"];
    bb12__0_397 -> bb13__0_397 [label="return"];
    bb12__0_397 -> bb57__0_397 [label="unwind"];
    bb13__0_397 -> bb14__0_397 [label="return"];
    bb13__0_397 -> bb57__0_397 [label="unwind"];
    bb14__0_397 -> bb15__0_397 [label="return"];
    bb14__0_397 -> bb58__0_397 [label="unwind"];
    bb15__0_397 -> bb16__0_397 [label="return"];
    bb15__0_397 -> bb58__0_397 [label="unwind"];
    bb16__0_397 -> bb17__0_397 [label="return"];
    bb16__0_397 -> bb58__0_397 [label="unwind"];
    bb17__0_397 -> bb18__0_397 [label="0"];
    bb17__0_397 -> bb19__0_397 [label="1"];
    bb17__0_397 -> bb4__0_397 [label="otherwise"];
    bb18__0_397 -> bb21__0_397 [label="return"];
    bb18__0_397 -> bb58__0_397 [label="unwind"];
    bb19__0_397 -> bb20__0_397 [label="return"];
    bb19__0_397 -> bb61__0_397 [label="unwind"];
    bb20__0_397 -> bb54__0_397 [label=""];
    bb21__0_397 -> bb22__0_397 [label="return"];
    bb21__0_397 -> bb58__0_397 [label="unwind"];
    bb22__0_397 -> bb23__0_397 [label="return"];
    bb22__0_397 -> bb58__0_397 [label="unwind"];
    bb23__0_397 -> bb24__0_397 [label="return"];
    bb23__0_397 -> bb58__0_397 [label="unwind"];
    bb24__0_397 -> bb25__0_397 [label="return"];
    bb24__0_397 -> bb58__0_397 [label="unwind"];
    bb25__0_397 -> bb26__0_397 [label="return"];
    bb25__0_397 -> bb58__0_397 [label="unwind"];
    bb26__0_397 -> bb27__0_397 [label="return"];
    bb26__0_397 -> bb58__0_397 [label="unwind"];
    bb27__0_397 -> bb28__0_397 [label="return"];
    bb27__0_397 -> bb58__0_397 [label="unwind"];
    bb28__0_397 -> bb29__0_397 [label="return"];
    bb28__0_397 -> bb58__0_397 [label="unwind"];
    bb29__0_397 -> bb30__0_397 [label="return"];
    bb29__0_397 -> bb58__0_397 [label="unwind"];
    bb30__0_397 -> bb31__0_397 [label="return"];
    bb30__0_397 -> bb58__0_397 [label="unwind"];
    bb31__0_397 -> bb32__0_397 [label="return"];
    bb31__0_397 -> bb58__0_397 [label="unwind"];
    bb32__0_397 -> bb33__0_397 [label="return"];
    bb32__0_397 -> bb58__0_397 [label="unwind"];
    bb33__0_397 -> bb34__0_397 [label="return"];
    bb33__0_397 -> bb58__0_397 [label="unwind"];
    bb34__0_397 -> bb35__0_397 [label="return"];
    bb34__0_397 -> bb58__0_397 [label="unwind"];
    bb35__0_397 -> bb37__0_397 [label="0"];
    bb35__0_397 -> bb36__0_397 [label="otherwise"];
    bb36__0_397 -> bb38__0_397 [label=""];
    bb37__0_397 -> bb38__0_397 [label=""];
    bb38__0_397 -> bb39__0_397 [label="success"];
    bb38__0_397 -> bb58__0_397 [label="unwind"];
    bb39__0_397 -> bb40__0_397 [label="success"];
    bb39__0_397 -> bb58__0_397 [label="unwind"];
    bb40__0_397 -> bb41__0_397 [label="return"];
    bb40__0_397 -> bb58__0_397 [label="unwind"];
    bb41__0_397 -> bb42__0_397 [label="return"];
    bb41__0_397 -> bb58__0_397 [label="unwind"];
    bb42__0_397 -> bb43__0_397 [label="return"];
    bb42__0_397 -> bb58__0_397 [label="unwind"];
    bb43__0_397 -> bb44__0_397 [label="return"];
    bb43__0_397 -> bb58__0_397 [label="unwind"];
    bb44__0_397 -> bb45__0_397 [label="0"];
    bb44__0_397 -> bb46__0_397 [label="1"];
    bb44__0_397 -> bb4__0_397 [label="otherwise"];
    bb45__0_397 -> bb48__0_397 [label="return"];
    bb45__0_397 -> bb58__0_397 [label="unwind"];
    bb46__0_397 -> bb47__0_397 [label="return"];
    bb46__0_397 -> bb60__0_397 [label="unwind"];
    bb47__0_397 -> bb54__0_397 [label=""];
    bb48__0_397 -> bb49__0_397 [label="return"];
    bb48__0_397 -> bb58__0_397 [label="unwind"];
    bb49__0_397 -> bb50__0_397 [label="return"];
    bb49__0_397 -> bb58__0_397 [label="unwind"];
    bb50__0_397 -> bb51__0_397 [label="return"];
    bb50__0_397 -> bb58__0_397 [label="unwind"];
    bb51__0_397 -> bb52__0_397 [label="return"];
    bb51__0_397 -> bb58__0_397 [label="unwind"];
    bb52__0_397 -> bb53__0_397 [label="return"];
    bb52__0_397 -> bb59__0_397 [label="unwind"];
    bb53__0_397 -> bb56__0_397 [label=""];
    bb54__0_397 -> bb55__0_397 [label="return"];
    bb54__0_397 -> bb59__0_397 [label="unwind"];
    bb55__0_397 -> bb56__0_397 [label=""];
    bb57__0_397 -> bb58__0_397 [label="return"];
    bb58__0_397 -> bb59__0_397 [label="return"];
    bb60__0_397 -> bb58__0_397 [label=""];
    bb61__0_397 -> bb58__0_397 [label=""];
    bb62__0_397 -> bb59__0_397 [label=""];
}
