digraph Mir_0_450 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Invested::in_reserve(_1: &amp;ReErased operations::vault_operations::common::Invested, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; &amp;ReErased operations::vault_operations::common::InvestedReserve<br align="left"/>let _3: &amp;ReErased operations::vault_operations::common::InvestedReserve;<br align="left"/>let mut _4: std::result::Result&lt;&amp;ReErased operations::vault_operations::common::InvestedReserve, anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: std::option::Option&lt;&amp;ReErased operations::vault_operations::common::InvestedReserve&gt;;<br align="left"/>let mut _6: &amp;ReErased mut std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;;<br align="left"/>let mut _7: std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;;<br align="left"/>let mut _8: &amp;ReErased [operations::vault_operations::common::InvestedReserve];<br align="left"/>let mut _9: &amp;ReErased [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>let mut _10: Closure(DefId(0:451 ~ kamino_vault[b3c4]::operations::vault_operations::common::{impl#3}::in_reserve::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased operations::vault_operations::common::InvestedReserve,)) -&gt; bool, [Region(BrAnon)]), (&amp;ReErased anchor_lang::prelude::Pubkey,)]);<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _12: anchor_lang::error::Error;<br align="left"/>let mut _13: anchor_lang::error::AnchorError;<br align="left"/>let mut _14: std::string::String;<br align="left"/>let mut _15: &amp;ReErased KaminoVaultError;<br align="left"/>let _16: KaminoVaultError;<br align="left"/>let mut _17: u32;<br align="left"/>let mut _18: KaminoVaultError;<br align="left"/>let mut _19: std::string::String;<br align="left"/>let mut _20: &amp;ReErased KaminoVaultError;<br align="left"/>let _21: KaminoVaultError;<br align="left"/>let mut _22: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _23: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _24: anchor_lang::error::Source;<br align="left"/>let mut _25: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _26: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _27: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _28: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25_usize], std::alloc::Global&gt;;<br align="left"/>let mut _29: *const [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug reserve =&gt; _2;<br align="left"/>>;
    bb0__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_28 = deref_copy ((*_1).0: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;)<br/>_29 = (((_28.0: std::ptr::Unique&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: std::ptr::NonNull&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: *const [operations::vault_operations::common::InvestedReserve; 25])<br/>_9 = &amp;(*_29)<br/>_8 = move _9 as &amp;[operations::vault_operations::common::InvestedReserve] (PointerCoercion(Unsize))<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = core::slice::&lt;impl [InvestedReserve]&gt;::iter(move _8)</td></tr></table>>];
    bb1__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_6 = &amp;mut _7<br/>StorageDead(_8)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_2)<br/>_10 = {closure@programs\kvault\src\operations\vault_operations.rs:898:23: 898:26} { reserve: move _11 }<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_5 = &lt;std::slice::Iter&lt;'_, InvestedReserve&gt; as Iterator&gt;::find::&lt;{closure@programs\kvault\src\operations\vault_operations.rs:898:23: 898:26}&gt;(move _6, move _10)</td></tr></table>>];
    bb2__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_27 = const _<br/>_15 = &amp;(*_27)<br/></td></tr><tr><td align="left">_14 = KaminoVaultError::name(move _15)</td></tr></table>>];
    bb3__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = KaminoVaultError::ReserveNotPartOfAllocations<br/></td></tr><tr><td align="left">_17 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _18)</td></tr></table>>];
    bb4__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_26 = const _<br/>_20 = &amp;(*_26)<br/></td></tr><tr><td align="left">_19 = &lt;KaminoVaultError as ToString&gt;::to_string(move _20)</td></tr></table>>];
    bb5__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\operations\\vault_operations.rs&quot;, line: const 899_u32 }<br/>_23 = anchor_lang::error::ErrorOrigin::Source(move _24)<br/>StorageDead(_24)<br/>_22 = Option::&lt;ErrorOrigin&gt;::Some(move _23)<br/>StorageDead(_23)<br/>StorageLive(_25)<br/>_25 = Option::&lt;ComparedValues&gt;::None<br/>_13 = anchor_lang::error::AnchorError { error_name: move _14, error_code_number: move _17, error_msg: move _19, error_origin: move _22, compared_values: move _25 }<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _13)</td></tr></table>>];
    bb6__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">_4 = Option::&lt;&amp;InvestedReserve&gt;::ok_or::&lt;anchor_lang::error::Error&gt;(move _5, move _12)</td></tr></table>>];
    bb7__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = std::result::Result::&lt;&amp;InvestedReserve, anchor_lang::error::Error&gt;::unwrap(move _4)</td></tr></table>>];
    bb8__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_0 = &amp;(*_3)<br/>StorageDead(_4)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb9__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">9 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb10__0_450 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">10 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_450 -> bb1__0_450 [label="return"];
    bb1__0_450 -> bb2__0_450 [label="return"];
    bb2__0_450 -> bb3__0_450 [label="return"];
    bb3__0_450 -> bb4__0_450 [label="return"];
    bb3__0_450 -> bb9__0_450 [label="unwind"];
    bb4__0_450 -> bb5__0_450 [label="return"];
    bb4__0_450 -> bb9__0_450 [label="unwind"];
    bb5__0_450 -> bb6__0_450 [label="return"];
    bb5__0_450 -> bb10__0_450 [label="unwind"];
    bb6__0_450 -> bb7__0_450 [label="return"];
    bb6__0_450 -> bb10__0_450 [label="unwind"];
    bb7__0_450 -> bb8__0_450 [label="return"];
    bb7__0_450 -> bb10__0_450 [label="unwind"];
    bb9__0_450 -> bb10__0_450 [label="return"];
}
