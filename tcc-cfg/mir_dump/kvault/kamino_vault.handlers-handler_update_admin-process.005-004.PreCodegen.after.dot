digraph Mir_0_140 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_update_admin::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_update_admin::UpdateAdmin&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _3: std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::VaultState&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::VaultState&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _12: ();<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: &amp;ReErased std::string::String;<br align="left"/>let _16: &amp;ReErased std::string::String;<br align="left"/>let _17: std::string::String;<br align="left"/>let _18: std::string::String;<br align="left"/>let mut _19: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _21: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _22: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _23: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _26: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _27: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _28: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _30: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _31: &amp;ReErased state::VaultState;<br align="left"/>let mut _32: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _33: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _35: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _36: &amp;ReErased state::VaultState;<br align="left"/>let mut _37: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _38: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _39: &amp;ReErased state::VaultState;<br align="left"/>let mut _40: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _41: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _42: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _43: ();<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _45: &amp;ReErased mut handlers::handler_update_admin::UpdateAdmin&lt;ReErased&gt;;<br align="left"/>let mut _46: isize;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: isize;<br align="left"/>let mut _49: isize;<br align="left"/>let mut _50: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug vault =&gt; _2;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug res =&gt; _18;<br align="left"/>>;
    bb0__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_45 = deref_copy (_1.1: &amp;mut handlers::handler_update_admin::UpdateAdmin&lt;'_&gt;)<br/>_6 = &amp;((*_45).1: anchor_lang::prelude::AccountLoader&lt;'_, state::VaultState&gt;)<br/></td></tr><tr><td align="left">_5 = anchor_lang::prelude::AccountLoader::&lt;'_, state::VaultState&gt;::load_mut(move _6)</td></tr></table>>];
    bb1__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;RefMut&lt;'_, state::VaultState&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_4 as Continue).0: std::cell::RefMut&lt;'_, state::VaultState&gt;)<br/>_3 = move _11<br/>StorageDead(_11)<br/>_2 = &amp;mut _3<br/>_46 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_44 = const _<br/>_22 = &amp;(*_44)<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;(*_2)<br/></td></tr><tr><td align="left">_31 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb4__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_48 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = &amp;((*_31).0: anchor_lang::prelude::Pubkey)<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _29)</td></tr></table>>];
    bb8__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;(*_2)<br/></td></tr><tr><td align="left">_36 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _37)</td></tr></table>>];
    bb9__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_35 = &amp;((*_36).25: anchor_lang::prelude::Pubkey)<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _34)</td></tr></table>>];
    bb10__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_27 = [move _28, move _33]<br/>StorageDead(_33)<br/>StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_19 = Arguments::&lt;'_&gt;::new_v1(move _20, move _24)</td></tr></table>>];
    bb11__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = format(move _19)</td></tr></table>>];
    bb12__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>_17 = move _18<br/>StorageDead(_18)<br/>_16 = &amp;_17<br/>_15 = &amp;(*_16)<br/></td></tr><tr><td align="left">_14 = &lt;String as Deref&gt;::deref(move _15)</td></tr></table>>];
    bb13__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_13 = &amp;(*_14)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_12 = solana_program::log::sol_log(move _13)</td></tr></table>>];
    bb14__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb15__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_2)<br/></td></tr><tr><td align="left">_39 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _40)</td></tr></table>>];
    bb16__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_38 = ((*_39).25: anchor_lang::prelude::Pubkey)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_41 = &lt;RefMut&lt;'_, state::VaultState&gt; as DerefMut&gt;::deref_mut(move _42)</td></tr></table>>];
    bb17__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>((*_41).0: anchor_lang::prelude::Pubkey) = move _38<br/>StorageDead(_38)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageLive(_43)<br/>_43 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _43)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb18__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb20__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb21__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb22__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb23__0_140 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left" balign="left">_50 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_140 -> bb1__0_140 [label="return"];
    bb1__0_140 -> bb2__0_140 [label="return"];
    bb1__0_140 -> bb22__0_140 [label="unwind"];
    bb2__0_140 -> bb3__0_140 [label="0"];
    bb2__0_140 -> bb5__0_140 [label="1"];
    bb2__0_140 -> bb4__0_140 [label="otherwise"];
    bb3__0_140 -> bb7__0_140 [label="return"];
    bb3__0_140 -> bb21__0_140 [label="unwind"];
    bb5__0_140 -> bb6__0_140 [label="return"];
    bb5__0_140 -> bb23__0_140 [label="unwind"];
    bb6__0_140 -> bb19__0_140 [label=""];
    bb7__0_140 -> bb8__0_140 [label="return"];
    bb7__0_140 -> bb21__0_140 [label="unwind"];
    bb8__0_140 -> bb9__0_140 [label="return"];
    bb8__0_140 -> bb21__0_140 [label="unwind"];
    bb9__0_140 -> bb10__0_140 [label="return"];
    bb9__0_140 -> bb21__0_140 [label="unwind"];
    bb10__0_140 -> bb11__0_140 [label="return"];
    bb10__0_140 -> bb21__0_140 [label="unwind"];
    bb11__0_140 -> bb12__0_140 [label="return"];
    bb11__0_140 -> bb21__0_140 [label="unwind"];
    bb12__0_140 -> bb13__0_140 [label="return"];
    bb12__0_140 -> bb20__0_140 [label="unwind"];
    bb13__0_140 -> bb14__0_140 [label="return"];
    bb13__0_140 -> bb20__0_140 [label="unwind"];
    bb14__0_140 -> bb15__0_140 [label="return"];
    bb14__0_140 -> bb21__0_140 [label="unwind"];
    bb15__0_140 -> bb16__0_140 [label="return"];
    bb15__0_140 -> bb21__0_140 [label="unwind"];
    bb16__0_140 -> bb17__0_140 [label="return"];
    bb16__0_140 -> bb21__0_140 [label="unwind"];
    bb17__0_140 -> bb18__0_140 [label="return"];
    bb17__0_140 -> bb22__0_140 [label="unwind"];
    bb18__0_140 -> bb19__0_140 [label=""];
    bb20__0_140 -> bb21__0_140 [label="return"];
    bb21__0_140 -> bb22__0_140 [label="return"];
    bb23__0_140 -> bb22__0_140 [label=""];
}
