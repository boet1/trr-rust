digraph Mir_0_607 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn utils::token_ops::shares::mint(_1: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _3: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _4: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _5: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _6: u64, _7: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _8: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _9: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _10: &amp;ReErased [u8];<br align="left"/>let mut _11: &amp;ReErased [u8];<br align="left"/>let mut _12: &amp;ReErased [u8; 9_usize];<br align="left"/>let _13: &amp;ReErased [u8; 9_usize];<br align="left"/>let mut _14: &amp;ReErased [u8];<br align="left"/>let _15: &amp;ReErased [u8];<br align="left"/>let mut _16: &amp;ReErased [u8];<br align="left"/>let _17: &amp;ReErased [u8];<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _19: &amp;ReErased [u8];<br align="left"/>let mut _20: &amp;ReErased [u8; 1_usize];<br align="left"/>let _21: &amp;ReErased [u8; 1_usize];<br align="left"/>let _22: [u8; 1_usize];<br align="left"/>let mut _23: u8;<br align="left"/>let mut _24: u64;<br align="left"/>let _25: ();<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _27: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _28: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_spl::token::MintTo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _29: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _30: anchor_spl::token::MintTo&lt;ReErased&gt;;<br align="left"/>let mut _31: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _32: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _33: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _36: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _37: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _39: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _45: ();<br align="left"/>let mut _46: ();<br align="left"/>let mut _47: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _48: bool;<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>debug token_program =&gt; _1;<br align="left"/>debug shares_mint =&gt; _2;<br align="left"/>debug vault_state =&gt; _3;<br align="left"/>debug base_vault_authority =&gt; _4;<br align="left"/>debug user_shares_ata =&gt; _5;<br align="left"/>debug base_vault_authority_bump =&gt; _6;<br align="left"/>debug shares_to_mint =&gt; _7;<br align="left"/>debug signer_seeds =&gt; _8;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>>;
    bb0__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_51 = const false<br/>_50 = const false<br/>_49 = const false<br/>_48 = const false<br/>_51 = const true<br/>_50 = const true<br/>_49 = const true<br/>_48 = const true<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = const _<br/>_12 = &amp;(*_13)<br/>_11 = move _12 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_12)<br/>_10 = _11<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_47 = deref_copy (_3.0: &amp;anchor_lang::prelude::Pubkey)<br/>_18 = &amp;(*_47)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _18)</td></tr></table>>];
    bb1__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_16 = &amp;(*_17)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_15 = &lt;[u8] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _16)</td></tr></table>>];
    bb2__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_14 = &amp;(*_15)<br/>StorageDead(_16)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _6<br/>_23 = move _24 as u8 (IntToInt)<br/>StorageDead(_24)<br/>_22 = [move _23]<br/>StorageDead(_23)<br/>_21 = &amp;_22<br/>_20 = &amp;(*_21)<br/>_19 = move _20 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_20)<br/>_9 = [move _10, move _14, move _19]<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>_8 = &amp;_9<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_51 = const false<br/>_29 = move _1<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_50 = const false<br/>_31 = move _2<br/>StorageLive(_32)<br/>_48 = const false<br/>_32 = move _5<br/>StorageLive(_33)<br/>_49 = const false<br/>_33 = move _4<br/>_30 = anchor_spl::token::MintTo::&lt;'_&gt; { mint: move _31, to: move _32, authority: move _33 }<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_8)<br/>_38 = move _39 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/>_37 = [move _38]<br/>StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/>_34 = move _35 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_28 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_spl::token::MintTo&lt;'_&gt;&gt;::new_with_signer(move _29, move _30, move _34)</td></tr></table>>];
    bb3__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_40)<br/>_40 = _7<br/></td></tr><tr><td align="left">_27 = anchor_spl::token::mint_to(move _28, move _40)</td></tr></table>>];
    bb4__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb5__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_41 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb6__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_26 as Continue).0: ())<br/>_25 = _45<br/>StorageDead(_45)<br/>_52 = discriminant(_26)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_46)<br/>_46 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _46)<br/>StorageDead(_46)<br/>StorageDead(_22)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb7__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = move ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_44)<br/>_44 = move _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb9__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>_54 = discriminant(_26)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb10__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">return</td></tr></table>>];
    bb11__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">11 (cleanup)</td></tr><tr><td align="left">switchInt(_49)</td></tr></table>>];
    bb12__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb13__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">switchInt(_51)</td></tr></table>>];
    bb14__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb15__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left" balign="left">_56 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb17__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">switchInt(_48)</td></tr></table>>];
    bb18__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb19__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb20__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">switchInt(_50)</td></tr></table>>];
    bb21__0_607 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb0__0_607 -> bb1__0_607 [label="return"];
    bb0__0_607 -> bb17__0_607 [label="unwind"];
    bb1__0_607 -> bb2__0_607 [label="return"];
    bb1__0_607 -> bb17__0_607 [label="unwind"];
    bb2__0_607 -> bb3__0_607 [label="return"];
    bb2__0_607 -> bb17__0_607 [label="unwind"];
    bb3__0_607 -> bb4__0_607 [label="return"];
    bb3__0_607 -> bb17__0_607 [label="unwind"];
    bb4__0_607 -> bb5__0_607 [label="return"];
    bb4__0_607 -> bb17__0_607 [label="unwind"];
    bb5__0_607 -> bb6__0_607 [label="0"];
    bb5__0_607 -> bb8__0_607 [label="1"];
    bb5__0_607 -> bb7__0_607 [label="otherwise"];
    bb6__0_607 -> bb10__0_607 [label="return"];
    bb6__0_607 -> bb20__0_607 [label="unwind"];
    bb8__0_607 -> bb9__0_607 [label="return"];
    bb8__0_607 -> bb15__0_607 [label="unwind"];
    bb9__0_607 -> bb10__0_607 [label="return"];
    bb9__0_607 -> bb20__0_607 [label="unwind"];
    bb11__0_607 -> bb12__0_607 [label="0"];
    bb11__0_607 -> bb18__0_607 [label="otherwise"];
    bb12__0_607 -> bb20__0_607 [label="return"];
    bb13__0_607 -> bb14__0_607 [label="0"];
    bb13__0_607 -> bb21__0_607 [label="otherwise"];
    bb15__0_607 -> bb17__0_607 [label=""];
    bb16__0_607 -> bb11__0_607 [label="return"];
    bb17__0_607 -> bb11__0_607 [label="0"];
    bb17__0_607 -> bb16__0_607 [label="otherwise"];
    bb18__0_607 -> bb12__0_607 [label="return"];
    bb19__0_607 -> bb13__0_607 [label="return"];
    bb20__0_607 -> bb13__0_607 [label="0"];
    bb20__0_607 -> bb19__0_607 [label="otherwise"];
    bb21__0_607 -> bb14__0_607 [label="return"];
}
