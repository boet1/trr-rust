digraph Mir_0_505 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::VaultState::refresh_target_allocations(_1: &amp;ReErased mut state::VaultState, _2: &amp;ReErased operations::vault_operations::common::Invested) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased state::VaultState;<br align="left"/>let mut _7: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _8: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _14: u64;<br align="left"/>let mut _15: std::iter::Map&lt;std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, Closure(DefId(0:506 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::VaultAllocation,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;, Closure(DefId(0:507 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::VaultAllocation,)) -&gt; u64, []), ()])&gt;;<br align="left"/>let mut _16: std::iter::Filter&lt;std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;, Closure(DefId(0:506 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::VaultAllocation,)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _17: std::slice::Iter&lt;ReErased, state::VaultAllocation&gt;;<br align="left"/>let mut _18: &amp;ReErased [state::VaultAllocation];<br align="left"/>let mut _19: &amp;ReErased [state::VaultAllocation; 25_usize];<br align="left"/>let mut _20: Closure(DefId(0:506 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) &amp;ReErased state::VaultAllocation,)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _21: Closure(DefId(0:507 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#1}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::VaultAllocation,)) -&gt; u64, []), ()]);<br align="left"/>let mut _22: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _23: [fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;; 25_usize];<br align="left"/>let _24: ();<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: u64;<br align="left"/>let _27: u64;<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: u64;<br align="left"/>let _30: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _31: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: u64;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: (u64, bool);<br align="left"/>let _37: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _38: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _39: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _40: u64;<br align="left"/>let _41: ();<br align="left"/>let mut _42: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _43: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _44: u64;<br align="left"/>let _45: ();<br align="left"/>let mut _46: ();<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _49: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _50: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: u64;<br align="left"/>let _53: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _54: u64;<br align="left"/>let mut _55: bool;<br align="left"/>let _56: ();<br align="left"/>let mut _57: std::iter::Filter&lt;std::iter::Zip&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;, std::slice::IterMut&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:509 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _58: std::iter::Filter&lt;std::iter::Zip&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;, std::slice::IterMut&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:509 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _59: std::iter::Zip&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;, std::slice::IterMut&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;;<br align="left"/>let mut _60: std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;;<br align="left"/>let mut _61: std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;;<br align="left"/>let mut _62: &amp;ReErased mut [state::VaultAllocation];<br align="left"/>let mut _63: &amp;ReErased mut [state::VaultAllocation; 25_usize];<br align="left"/>let mut _64: std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;;<br align="left"/>let mut _65: &amp;ReErased [operations::vault_operations::common::InvestedReserve];<br align="left"/>let mut _66: &amp;ReErased [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>let mut _67: std::slice::IterMut&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;;<br align="left"/>let mut _68: &amp;ReErased mut [fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;];<br align="left"/>let mut _69: &amp;ReErased mut [fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;; 25_usize];<br align="left"/>let mut _70: Closure(DefId(0:509 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _71: std::iter::Filter&lt;std::iter::Zip&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;, std::slice::IterMut&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:509 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: std::option::Option&lt;((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)&gt;;<br align="left"/>let mut _74: &amp;ReErased mut std::iter::Filter&lt;std::iter::Zip&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;, std::slice::IterMut&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:509 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _75: &amp;ReErased mut std::iter::Filter&lt;std::iter::Zip&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, operations::vault_operations::common::InvestedReserve&gt;&gt;, std::slice::IterMut&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:509 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#2}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) ((&amp;ReErased mut state::VaultAllocation, &amp;ReErased operations::vault_operations::common::InvestedReserve), &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: !;<br align="left"/>let _78: &amp;ReErased mut state::VaultAllocation;<br align="left"/>let _79: &amp;ReErased operations::vault_operations::common::InvestedReserve;<br align="left"/>let _80: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _81: ();<br align="left"/>let mut _82: bool;<br align="left"/>let mut _83: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _84: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: anchor_lang::error::Error;<br align="left"/>let mut _87: anchor_lang::error::AnchorError;<br align="left"/>let mut _88: std::string::String;<br align="left"/>let mut _89: &amp;ReErased KaminoVaultError;<br align="left"/>let _90: KaminoVaultError;<br align="left"/>let mut _91: u32;<br align="left"/>let mut _92: KaminoVaultError;<br align="left"/>let mut _93: std::string::String;<br align="left"/>let mut _94: &amp;ReErased KaminoVaultError;<br align="left"/>let _95: KaminoVaultError;<br align="left"/>let mut _96: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _97: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _98: anchor_lang::error::Source;<br align="left"/>let mut _99: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _100: u64;<br align="left"/>let _101: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _102: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _103: u64;<br align="left"/>let mut _104: u64;<br align="left"/>let _105: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _106: bool;<br align="left"/>let mut _107: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _108: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _109: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _110: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _111: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _112: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _113: u64;<br align="left"/>let mut _114: u64;<br align="left"/>let mut _115: (u64, bool);<br align="left"/>let mut _116: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _117: u64;<br align="left"/>let mut _118: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _119: ();<br align="left"/>let mut _120: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _121: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _122: ();<br align="left"/>let mut _123: &amp;ReErased mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _124: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _125: bool;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: !;<br align="left"/>let _128: ();<br align="left"/>let mut _129: !;<br align="left"/>let _130: ();<br align="left"/>let mut _131: std::iter::Filter&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:510 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#3}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (&amp;ReErased mut state::VaultAllocation, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _132: std::iter::Filter&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:510 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#3}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (&amp;ReErased mut state::VaultAllocation, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _133: std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;;<br align="left"/>let mut _134: std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;;<br align="left"/>let mut _135: &amp;ReErased mut [state::VaultAllocation];<br align="left"/>let mut _136: &amp;ReErased mut [state::VaultAllocation; 25_usize];<br align="left"/>let mut _137: std::slice::Iter&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;;<br align="left"/>let mut _138: &amp;ReErased [fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;];<br align="left"/>let mut _139: &amp;ReErased [fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;; 25_usize];<br align="left"/>let mut _140: Closure(DefId(0:510 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#3}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (&amp;ReErased mut state::VaultAllocation, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()]);<br align="left"/>let mut _141: std::iter::Filter&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:510 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#3}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (&amp;ReErased mut state::VaultAllocation, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let _142: ();<br align="left"/>let mut _143: std::option::Option&lt;(&amp;ReErased mut state::VaultAllocation, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)&gt;;<br align="left"/>let mut _144: &amp;ReErased mut std::iter::Filter&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:510 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#3}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (&amp;ReErased mut state::VaultAllocation, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _145: &amp;ReErased mut std::iter::Filter&lt;std::iter::Zip&lt;std::slice::IterMut&lt;ReErased, state::VaultAllocation&gt;, std::slice::Iter&lt;ReErased, fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, Closure(DefId(0:510 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#3}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) (&amp;ReErased mut state::VaultAllocation, &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;),)) -&gt; bool, [Region(BrAnon)]), ()])&gt;;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: !;<br align="left"/>let _148: &amp;ReErased mut state::VaultAllocation;<br align="left"/>let _149: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _150: ();<br align="left"/>let mut _151: &amp;ReErased mut state::VaultAllocation;<br align="left"/>let mut _152: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _153: bool;<br align="left"/>let mut _154: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _155: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _156: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _157: u64;<br align="left"/>let _158: ();<br align="left"/>let _159: arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let mut _160: arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let _161: ();<br align="left"/>let mut _162: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _163: &amp;ReErased mut arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let mut _164: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _165: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _166: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _167: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _168: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _170: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _171: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _172: [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let mut _173: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _175: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _176: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _177: &amp;ReErased u64;<br align="left"/>let _178: &amp;ReErased u64;<br align="left"/>let mut _179: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _180: &amp;ReErased u64;<br align="left"/>let _181: &amp;ReErased u64;<br align="left"/>let mut _182: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _183: &amp;ReErased u64;<br align="left"/>let _184: &amp;ReErased u64;<br align="left"/>let _185: u64;<br align="left"/>let mut _186: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _187: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _188: &amp;ReErased u64;<br align="left"/>let _189: &amp;ReErased u64;<br align="left"/>let _190: u64;<br align="left"/>let mut _191: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _192: Closure(DefId(0:2606 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#4}), [i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;186_usize&gt;,)]);<br align="left"/>let mut _193: &amp;ReErased mut arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let _194: ();<br align="left"/>let mut _195: &amp;ReErased str;<br align="left"/>let _196: &amp;ReErased str;<br align="left"/>let mut _197: &amp;ReErased std::string::String;<br align="left"/>let _198: &amp;ReErased std::string::String;<br align="left"/>let _199: std::string::String;<br align="left"/>let _200: std::string::String;<br align="left"/>let mut _201: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _202: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _203: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _204: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _205: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _206: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _207: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _208: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _209: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _210: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _211: &amp;ReErased &amp;ReErased str;<br align="left"/>let _212: &amp;ReErased &amp;ReErased str;<br align="left"/>let _213: &amp;ReErased str;<br align="left"/>let mut _214: &amp;ReErased arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let _215: ();<br align="left"/>let _216: arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let mut _217: arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let _218: ();<br align="left"/>let mut _219: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _220: &amp;ReErased mut arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let mut _221: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _222: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _223: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _224: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let _225: [&amp;ReErased str; 5_usize];<br align="left"/>let mut _226: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _227: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _228: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let _229: [core::fmt::rt::Argument&lt;ReErased&gt;; 5_usize];<br align="left"/>let mut _230: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _231: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _232: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _233: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _234: &amp;ReErased u64;<br align="left"/>let _235: &amp;ReErased u64;<br align="left"/>let mut _236: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _237: &amp;ReErased u64;<br align="left"/>let _238: &amp;ReErased u64;<br align="left"/>let mut _239: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _240: &amp;ReErased u64;<br align="left"/>let _241: &amp;ReErased u64;<br align="left"/>let mut _242: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _243: &amp;ReErased u64;<br align="left"/>let _244: &amp;ReErased u64;<br align="left"/>let _245: u64;<br align="left"/>let mut _246: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _247: Closure(DefId(0:2609 ~ kamino_vault[b3c4]::state::{impl#1}::refresh_target_allocations::{closure#5}), [i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;186_usize&gt;,)]);<br align="left"/>let mut _248: &amp;ReErased mut arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let _249: ();<br align="left"/>let mut _250: &amp;ReErased str;<br align="left"/>let _251: &amp;ReErased str;<br align="left"/>let mut _252: &amp;ReErased std::string::String;<br align="left"/>let _253: &amp;ReErased std::string::String;<br align="left"/>let _254: std::string::String;<br align="left"/>let _255: std::string::String;<br align="left"/>let mut _256: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _257: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _258: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _259: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _260: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _261: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _262: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _263: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _264: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _265: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _266: &amp;ReErased &amp;ReErased str;<br align="left"/>let _267: &amp;ReErased &amp;ReErased str;<br align="left"/>let _268: &amp;ReErased str;<br align="left"/>let mut _269: &amp;ReErased arrform::ArrForm&lt;186_usize&gt;;<br align="left"/>let mut _270: ();<br align="left"/>let mut _271: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _272: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _273: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _274: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _275: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str; 5_usize];<br align="left"/>let mut _277: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _278: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25_usize], std::alloc::Global&gt;;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: isize;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: *const [operations::vault_operations::common::InvestedReserve; 25_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug invested =&gt; _2;<br align="left"/>debug total_tokens =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug total_weight =&gt; _14;<br align="left"/>debug remaining_tokens_to_allocate =&gt; _22;<br align="left"/>debug token_target_allocations =&gt; _23;<br align="left"/>debug unallocated_cap =&gt; _27;<br align="left"/>debug unallocated_target =&gt; _30;<br align="left"/>debug unallocated_tokens_target =&gt; _37;<br align="left"/>debug remaining_weight_to_allocate =&gt; _44;<br align="left"/>debug loop_total_tokens =&gt; _53;<br align="left"/>debug loop_weight =&gt; _54;<br align="left"/>debug a_cap_was_reached =&gt; _55;<br align="left"/>debug iter =&gt; _71;<br align="left"/>debug allocation =&gt; _78;<br align="left"/>debug invested =&gt; _79;<br align="left"/>debug token_target_allocation =&gt; _80;<br align="left"/>debug reserve_weight =&gt; _100;<br align="left"/>debug reserve_target_ideal =&gt; _101;<br align="left"/>debug reserve_target_capped =&gt; _105;<br align="left"/>debug iter =&gt; _141;<br align="left"/>debug allocation =&gt; _148;<br align="left"/>debug token_target_allocation =&gt; _149;<br align="left"/>debug formatted =&gt; _159;<br align="left"/>debug af =&gt; _160;<br align="left"/>debug res =&gt; _200;<br align="left"/>debug formatted =&gt; _216;<br align="left"/>debug af =&gt; _217;<br align="left"/>debug res =&gt; _255;<br align="left"/>>;
    bb0__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_2).1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_5 = state::VaultState::compute_aum(move _6, move _7)</td></tr></table>>];
    bb1__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_9 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_4 as Continue).0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>_3 = _13<br/>StorageDead(_13)<br/>_279 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;((*_1).18: [state::VaultAllocation; 25])<br/>_18 = move _19 as &amp;[state::VaultAllocation] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = core::slice::&lt;impl [VaultAllocation]&gt;::iter(move _18)</td></tr></table>>];
    bb4__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_281 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_20)<br/>_20 = {closure@programs\kvault\src\state.rs:298:21: 298:24}<br/></td></tr><tr><td align="left">_16 = &lt;std::slice::Iter&lt;'_, VaultAllocation&gt; as Iterator&gt;::filter::&lt;{closure@programs\kvault\src\state.rs:298:21: 298:24}&gt;(move _17, move _20)</td></tr></table>>];
    bb8__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_17)<br/>StorageLive(_21)<br/>_21 = {closure@programs\kvault\src\state.rs:299:18: 299:21}<br/></td></tr><tr><td align="left">_15 = &lt;Filter&lt;std::slice::Iter&lt;'_, VaultAllocation&gt;, {closure@programs\kvault\src\state.rs:298:21: 298:24}&gt; as Iterator&gt;::map::&lt;u64, {closure@programs\kvault\src\state.rs:299:18: 299:21}&gt;(move _16, move _21)</td></tr></table>>];
    bb9__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;Map&lt;Filter&lt;std::slice::Iter&lt;'_, VaultAllocation&gt;, {closure@programs\kvault\src\state.rs:298:21: 298:24}&gt;, {closure@programs\kvault\src\state.rs:299:18: 299:21}&gt; as Iterator&gt;::sum::&lt;u64&gt;(move _15)</td></tr></table>>];
    bb10__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_22)<br/>_22 = _3<br/>StorageLive(_23)<br/>_23 = [const _; 25]<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = ((*_1).12: u64)<br/>_25 = Gt(move _26, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb11__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = ((*_1).33: u64)<br/>_28 = Eq(move _29, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb12__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_27 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_27 = ((*_1).33: u64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_3<br/>StorageLive(_32)<br/>_32 = ((*_1).12: u64)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _14<br/>StorageLive(_35)<br/>_35 = ((*_1).12: u64)<br/>_36 = CheckedAdd(_34, _35)<br/></td></tr><tr><td align="left">assert(!move (_36.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _34, move _35)</td></tr></table>>];
    bb15__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_33 = move (_36.0: u64)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_30 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::mul_int_ratio::&lt;u64, u64&gt;(move _31, move _32, move _33)</td></tr></table>>];
    bb16__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _30<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _27<br/></td></tr><tr><td align="left">_39 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _40)</td></tr></table>>];
    bb17__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_37 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _38, move _39)</td></tr></table>>];
    bb18__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;mut _22<br/>StorageLive(_43)<br/>_43 = _37<br/></td></tr><tr><td align="left">_41 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as SubAssign&gt;::sub_assign(move _42, move _43)</td></tr></table>>];
    bb19__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>_24 = const ()<br/>StorageDead(_37)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_24 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_44)<br/>_44 = _14<br/>StorageLive(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;_22<br/>StorageLive(_49)<br/>_277 = const _<br/>_49 = &amp;(*_277)<br/></td></tr><tr><td align="left">_47 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _48, move _49)</td></tr></table>>];
    bb23__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb24__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _44<br/>_51 = Gt(move _52, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb25__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageLive(_53)<br/>_53 = _22<br/>StorageLive(_54)<br/>_54 = _44<br/>StorageLive(_55)<br/>_55 = const false<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;mut ((*_1).18: [state::VaultAllocation; 25])<br/>_62 = move _63 as &amp;mut [state::VaultAllocation] (PointerCoercion(Unsize))<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = core::slice::&lt;impl [VaultAllocation]&gt;::iter_mut(move _62)</td></tr></table>>];
    bb26__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_278 = deref_copy ((*_2).0: std::boxed::Box&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;)<br/>_284 = (((_278.0: std::ptr::Unique&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: std::ptr::NonNull&lt;[operations::vault_operations::common::InvestedReserve; 25]&gt;).0: *const [operations::vault_operations::common::InvestedReserve; 25])<br/>_66 = &amp;(*_284)<br/>_65 = move _66 as &amp;[operations::vault_operations::common::InvestedReserve] (PointerCoercion(Unsize))<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = core::slice::&lt;impl [InvestedReserve]&gt;::iter(move _65)</td></tr></table>>];
    bb27__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_60 = &lt;std::slice::IterMut&lt;'_, VaultAllocation&gt; as Iterator&gt;::zip::&lt;std::slice::Iter&lt;'_, InvestedReserve&gt;&gt;(move _61, move _64)</td></tr></table>>];
    bb28__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_61)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;mut _23<br/>_68 = move _69 as &amp;mut [fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = core::slice::&lt;impl [FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;]&gt;::iter_mut(move _68)</td></tr></table>>];
    bb29__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_59 = &lt;Zip&lt;std::slice::IterMut&lt;'_, VaultAllocation&gt;, std::slice::Iter&lt;'_, InvestedReserve&gt;&gt; as Iterator&gt;::zip::&lt;std::slice::IterMut&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;(move _60, move _67)</td></tr></table>>];
    bb30__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_60)<br/>StorageLive(_70)<br/>_70 = {closure@programs\kvault\src\state.rs:334:25: 334:69}<br/></td></tr><tr><td align="left">_58 = &lt;Zip&lt;Zip&lt;std::slice::IterMut&lt;'_, VaultAllocation&gt;, std::slice::Iter&lt;'_, InvestedReserve&gt;&gt;, std::slice::IterMut&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt; as Iterator&gt;::filter::&lt;{closure@programs\kvault\src\state.rs:334:25: 334:69}&gt;(move _59, move _70)</td></tr></table>>];
    bb31__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;Filter&lt;Zip&lt;Zip&lt;std::slice::IterMut&lt;'_, VaultAllocation&gt;, std::slice::Iter&lt;'_, InvestedReserve&gt;&gt;, std::slice::IterMut&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, {closure@programs\kvault\src\state.rs:334:25: 334:69}&gt; as IntoIterator&gt;::into_iter(move _58)</td></tr></table>>];
    bb32__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_71)<br/>_71 = move _57<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;mut _71<br/>_74 = &amp;mut (*_75)<br/></td></tr><tr><td align="left">_73 = &lt;Filter&lt;Zip&lt;Zip&lt;std::slice::IterMut&lt;'_, VaultAllocation&gt;, std::slice::Iter&lt;'_, InvestedReserve&gt;&gt;, std::slice::IterMut&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, {closure@programs\kvault\src\state.rs:334:25: 334:69}&gt; as Iterator&gt;::next(move _74)</td></tr></table>>];
    bb34__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_76 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb35__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = move ((((_73 as Some).0: ((&amp;mut state::VaultAllocation, &amp;operations::vault_operations::common::InvestedReserve), &amp;mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)).0: (&amp;mut state::VaultAllocation, &amp;operations::vault_operations::common::InvestedReserve)).0: &amp;mut state::VaultAllocation)<br/>StorageLive(_79)<br/>_79 = ((((_73 as Some).0: ((&amp;mut state::VaultAllocation, &amp;operations::vault_operations::common::InvestedReserve), &amp;mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)).0: (&amp;mut state::VaultAllocation, &amp;operations::vault_operations::common::InvestedReserve)).1: &amp;operations::vault_operations::common::InvestedReserve)<br/>StorageLive(_80)<br/>_80 = move (((_73 as Some).0: ((&amp;mut state::VaultAllocation, &amp;operations::vault_operations::common::InvestedReserve), &amp;mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)).1: &amp;mut fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;((*_78).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_84)<br/>_84 = &amp;((*_79).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_82 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _83, move _84)</td></tr></table>>];
    bb36__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_56 = const ()<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_125)<br/>_125 = _55<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb37__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb38__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_272 = const _<br/>_89 = &amp;(*_272)<br/></td></tr><tr><td align="left">_88 = KaminoVaultError::name(move _89)</td></tr></table>>];
    bb39__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = KaminoVaultError::ReserveNotPartOfAllocations<br/></td></tr><tr><td align="left">_91 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _92)</td></tr></table>>];
    bb40__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_271 = const _<br/>_94 = &amp;(*_271)<br/></td></tr><tr><td align="left">_93 = &lt;KaminoVaultError as ToString&gt;::to_string(move _94)</td></tr></table>>];
    bb41__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\state.rs&quot;, line: const 340_u32 }<br/>_97 = anchor_lang::error::ErrorOrigin::Source(move _98)<br/>StorageDead(_98)<br/>_96 = Option::&lt;ErrorOrigin&gt;::Some(move _97)<br/>StorageDead(_97)<br/>StorageLive(_99)<br/>_99 = Option::&lt;ComparedValues&gt;::None<br/>_87 = anchor_lang::error::AnchorError { error_name: move _88, error_code_number: move _91, error_msg: move _93, error_origin: move _96, compared_values: move _99 }<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _87)</td></tr></table>>];
    bb42__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _86)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>_81 = const ()<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_100)<br/>_100 = ((*_78).2: u64)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_53<br/>StorageLive(_103)<br/>_103 = _100<br/>StorageLive(_104)<br/>_104 = _54<br/></td></tr><tr><td align="left">_101 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::mul_int_ratio::&lt;u64, u64&gt;(move _102, move _103, move _104)</td></tr></table>>];
    bb44__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = _101<br/>StorageLive(_110)<br/>_110 = (*_80)<br/></td></tr><tr><td align="left">_108 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Add&gt;::add(move _109, move _110)</td></tr></table>>];
    bb45__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_107 = &amp;_108<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = ((*_78).3: u64)<br/></td></tr><tr><td align="left">_112 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _113)</td></tr></table>>];
    bb46__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_111 = &amp;_112<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_106 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::ge(move _107, move _111)</td></tr></table>>];
    bb47__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb48__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>_55 = const true<br/>StorageLive(_114)<br/>_114 = _100<br/>_115 = CheckedSub(_44, _114)<br/></td></tr><tr><td align="left">assert(!move (_115.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, _44, move _114)</td></tr></table>>];
    bb49__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_44 = move (_115.0: u64)<br/>StorageDead(_114)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = ((*_78).3: u64)<br/></td></tr><tr><td align="left">_116 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _117)</td></tr></table>>];
    bb50__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageLive(_118)<br/>_118 = (*_80)<br/></td></tr><tr><td align="left">_105 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _116, move _118)</td></tr></table>>];
    bb51__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>_105 = _101<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;mut _22<br/>StorageLive(_121)<br/>_121 = _105<br/></td></tr><tr><td align="left">_119 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as SubAssign&gt;::sub_assign(move _120, move _121)</td></tr></table>>];
    bb54__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;mut (*_80)<br/>StorageLive(_124)<br/>_124 = _105<br/></td></tr><tr><td align="left">_122 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as AddAssign&gt;::add_assign(move _123, move _124)</td></tr></table>>];
    bb55__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>_72 = const ()<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>_46 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_46 = const ()<br/>StorageDead(_125)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_45 = const ()<br/>StorageDead(_125)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_45 = const ()<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;mut ((*_1).18: [state::VaultAllocation; 25])<br/>_135 = move _136 as &amp;mut [state::VaultAllocation] (PointerCoercion(Unsize))<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = core::slice::&lt;impl [VaultAllocation]&gt;::iter_mut(move _135)</td></tr></table>>];
    bb62__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_23<br/>_138 = move _139 as &amp;[fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = core::slice::&lt;impl [FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;]&gt;::iter(move _138)</td></tr></table>>];
    bb63__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">_133 = &lt;std::slice::IterMut&lt;'_, VaultAllocation&gt; as Iterator&gt;::zip::&lt;std::slice::Iter&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;(move _134, move _137)</td></tr></table>>];
    bb64__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_134)<br/>StorageLive(_140)<br/>_140 = {closure@programs\kvault\src\state.rs:373:21: 373:38}<br/></td></tr><tr><td align="left">_132 = &lt;Zip&lt;std::slice::IterMut&lt;'_, VaultAllocation&gt;, std::slice::Iter&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt; as Iterator&gt;::filter::&lt;{closure@programs\kvault\src\state.rs:373:21: 373:38}&gt;(move _133, move _140)</td></tr></table>>];
    bb65__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;Filter&lt;Zip&lt;std::slice::IterMut&lt;'_, VaultAllocation&gt;, std::slice::Iter&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, {closure@programs\kvault\src\state.rs:373:21: 373:38}&gt; as IntoIterator&gt;::into_iter(move _132)</td></tr></table>>];
    bb66__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageLive(_141)<br/>_141 = move _131<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;mut _141<br/>_144 = &amp;mut (*_145)<br/></td></tr><tr><td align="left">_143 = &lt;Filter&lt;Zip&lt;std::slice::IterMut&lt;'_, VaultAllocation&gt;, std::slice::Iter&lt;'_, FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;, {closure@programs\kvault\src\state.rs:373:21: 373:38}&gt; as Iterator&gt;::next(move _144)</td></tr></table>>];
    bb68__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_146 = discriminant(_143)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb69__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_148)<br/>_148 = move (((_143 as Some).0: (&amp;mut state::VaultAllocation, &amp;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)).0: &amp;mut state::VaultAllocation)<br/>StorageLive(_149)<br/>_149 = (((_143 as Some).0: (&amp;mut state::VaultAllocation, &amp;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)).1: &amp;fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;mut (*_148)<br/>StorageLive(_152)<br/>_152 = (*_149)<br/></td></tr><tr><td align="left">_150 = VaultAllocation::set_token_target_allocation(move _151, move _152)</td></tr></table>>];
    bb70__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_130 = const ()<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageLive(_270)<br/>_270 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _270)<br/>StorageDead(_270)<br/>StorageDead(_44)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageDead(_150)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = &amp;(*_149)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = ((*_148).3: u64)<br/></td></tr><tr><td align="left">_156 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _157)</td></tr></table>>];
    bb72__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_155 = &amp;_156<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_153 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::lt(move _154, move _155)</td></tr></table>>];
    bb73__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left">switchInt(move _153)</td></tr></table>>];
    bb74__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/></td></tr><tr><td align="left">_160 = ArrForm::&lt;186&gt;::new()</td></tr></table>>];
    bb75__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;mut _160<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_274 = const _<br/>_167 = &amp;(*_274)<br/>_166 = &amp;(*_167)<br/>_165 = move _166 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_166)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;((*_148).0: anchor_lang::prelude::Pubkey)<br/>_174 = &amp;(*_175)<br/></td></tr><tr><td align="left">_173 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _174)</td></tr></table>>];
    bb76__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = &amp;((*_148).2: u64)<br/>_177 = &amp;(*_178)<br/></td></tr><tr><td align="left">_176 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _177)</td></tr></table>>];
    bb77__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;_14<br/>_180 = &amp;(*_181)<br/></td></tr><tr><td align="left">_179 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _180)</td></tr></table>>];
    bb78__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;(*_149)<br/></td></tr><tr><td align="left">_185 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _186)</td></tr></table>>];
    bb79__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_184 = &amp;_185<br/>_183 = &amp;(*_184)<br/></td></tr><tr><td align="left">_182 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _183)</td></tr></table>>];
    bb80__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_3<br/></td></tr><tr><td align="left">_190 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _191)</td></tr></table>>];
    bb81__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_189 = &amp;_190<br/>_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_187 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _188)</td></tr></table>>];
    bb82__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_172 = [move _173, move _176, move _179, move _182, move _187]<br/>StorageDead(_187)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_173)<br/>_171 = &amp;_172<br/>_170 = &amp;(*_171)<br/>_169 = move _170 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">_164 = Arguments::&lt;'_&gt;::new_v1(move _165, move _169)</td></tr></table>>];
    bb83__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_162 = ArrForm::&lt;186&gt;::format(move _163, move _164)</td></tr></table>>];
    bb84__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_163)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = &amp;mut _160<br/>_192 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _193 }<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_161 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _162, move _192)</td></tr></table>>];
    bb85__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_162)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageDead(_167)<br/>StorageDead(_161)<br/>_159 = move _160<br/>StorageDead(_160)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_273 = const _<br/>_204 = &amp;(*_273)<br/>_203 = &amp;(*_204)<br/>_202 = move _203 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_203)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_159<br/></td></tr><tr><td align="left">_213 = ArrForm::&lt;186&gt;::as_str(move _214)</td></tr></table>>];
    bb86__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_212 = &amp;_213<br/>_211 = &amp;(*_212)<br/></td></tr><tr><td align="left">_210 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _211)</td></tr></table>>];
    bb87__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_209 = [move _210]<br/>StorageDead(_210)<br/>_208 = &amp;_209<br/>_207 = &amp;(*_208)<br/>_206 = move _207 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_201 = Arguments::&lt;'_&gt;::new_v1(move _202, move _206)</td></tr></table>>];
    bb88__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = format(move _201)</td></tr></table>>];
    bb89__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_204)<br/>_199 = move _200<br/>StorageDead(_200)<br/>_198 = &amp;_199<br/>_197 = &amp;(*_198)<br/></td></tr><tr><td align="left">_196 = &lt;String as Deref&gt;::deref(move _197)</td></tr></table>>];
    bb90__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_195 = &amp;(*_196)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_194 = solana_program::log::sol_log(move _195)</td></tr></table>>];
    bb91__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb92__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>_158 = const ()<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>_142 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/></td></tr><tr><td align="left">_217 = ArrForm::&lt;186&gt;::new()</td></tr></table>>];
    bb94__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_220 = &amp;mut _217<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_276 = const _<br/>_224 = &amp;(*_276)<br/>_223 = &amp;(*_224)<br/>_222 = move _223 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_223)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = &amp;((*_148).0: anchor_lang::prelude::Pubkey)<br/>_231 = &amp;(*_232)<br/></td></tr><tr><td align="left">_230 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _231)</td></tr></table>>];
    bb95__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;((*_148).2: u64)<br/>_234 = &amp;(*_235)<br/></td></tr><tr><td align="left">_233 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _234)</td></tr></table>>];
    bb96__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = &amp;_14<br/>_237 = &amp;(*_238)<br/></td></tr><tr><td align="left">_236 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _237)</td></tr></table>>];
    bb97__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;((*_148).3: u64)<br/>_240 = &amp;(*_241)<br/></td></tr><tr><td align="left">_239 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _240)</td></tr></table>>];
    bb98__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = &amp;_3<br/></td></tr><tr><td align="left">_245 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _246)</td></tr></table>>];
    bb99__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_244 = &amp;_245<br/>_243 = &amp;(*_244)<br/></td></tr><tr><td align="left">_242 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _243)</td></tr></table>>];
    bb100__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>_229 = [move _230, move _233, move _236, move _239, move _242]<br/>StorageDead(_242)<br/>StorageDead(_239)<br/>StorageDead(_236)<br/>StorageDead(_233)<br/>StorageDead(_230)<br/>_228 = &amp;_229<br/>_227 = &amp;(*_228)<br/>_226 = move _227 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_221 = Arguments::&lt;'_&gt;::new_v1(move _222, move _226)</td></tr></table>>];
    bb101__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_219 = ArrForm::&lt;186&gt;::format(move _220, move _221)</td></tr></table>>];
    bb102__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_220)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;mut _217<br/>_247 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _248 }<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">_218 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _219, move _247)</td></tr></table>>];
    bb103__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_219)<br/>StorageDead(_245)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_224)<br/>StorageDead(_218)<br/>_216 = move _217<br/>StorageDead(_217)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_275 = const _<br/>_259 = &amp;(*_275)<br/>_258 = &amp;(*_259)<br/>_257 = move _258 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_258)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = &amp;_216<br/></td></tr><tr><td align="left">_268 = ArrForm::&lt;186&gt;::as_str(move _269)</td></tr></table>>];
    bb104__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>_267 = &amp;_268<br/>_266 = &amp;(*_267)<br/></td></tr><tr><td align="left">_265 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _266)</td></tr></table>>];
    bb105__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>_264 = [move _265]<br/>StorageDead(_265)<br/>_263 = &amp;_264<br/>_262 = &amp;(*_263)<br/>_261 = move _262 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">_256 = Arguments::&lt;'_&gt;::new_v1(move _257, move _261)</td></tr></table>>];
    bb106__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_255 = format(move _256)</td></tr></table>>];
    bb107__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_268)<br/>StorageDead(_267)<br/>StorageDead(_264)<br/>StorageDead(_263)<br/>StorageDead(_259)<br/>_254 = move _255<br/>StorageDead(_255)<br/>_253 = &amp;_254<br/>_252 = &amp;(*_253)<br/></td></tr><tr><td align="left">_251 = &lt;String as Deref&gt;::deref(move _252)</td></tr></table>>];
    bb108__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_250 = &amp;(*_251)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_249 = solana_program::log::sol_log(move _250)</td></tr></table>>];
    bb109__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/></td></tr><tr><td align="left">drop(_254)</td></tr></table>>];
    bb110__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_249)<br/>_215 = const ()<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>_142 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>_46 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left">return</td></tr></table>>];
    bb114__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">114 (cleanup)</td></tr><tr><td align="left">drop(_254)</td></tr></table>>];
    bb115__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">115 (cleanup)</td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb116__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">116 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb117__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">117 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb118__0_505 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">118 (cleanup)</td></tr><tr><td align="left" balign="left">_283 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_505 -> bb1__0_505 [label="return"];
    bb1__0_505 -> bb2__0_505 [label="return"];
    bb1__0_505 -> bb117__0_505 [label="unwind"];
    bb2__0_505 -> bb3__0_505 [label="0"];
    bb2__0_505 -> bb5__0_505 [label="1"];
    bb2__0_505 -> bb4__0_505 [label="otherwise"];
    bb3__0_505 -> bb7__0_505 [label="return"];
    bb5__0_505 -> bb6__0_505 [label="return"];
    bb5__0_505 -> bb118__0_505 [label="unwind"];
    bb6__0_505 -> bb112__0_505 [label=""];
    bb7__0_505 -> bb8__0_505 [label="return"];
    bb8__0_505 -> bb9__0_505 [label="return"];
    bb9__0_505 -> bb10__0_505 [label="return"];
    bb10__0_505 -> bb20__0_505 [label="0"];
    bb10__0_505 -> bb11__0_505 [label="otherwise"];
    bb11__0_505 -> bb13__0_505 [label="0"];
    bb11__0_505 -> bb12__0_505 [label="otherwise"];
    bb12__0_505 -> bb14__0_505 [label=""];
    bb13__0_505 -> bb14__0_505 [label=""];
    bb14__0_505 -> bb15__0_505 [label="success"];
    bb15__0_505 -> bb16__0_505 [label="return"];
    bb16__0_505 -> bb17__0_505 [label="return"];
    bb17__0_505 -> bb18__0_505 [label="return"];
    bb18__0_505 -> bb19__0_505 [label="return"];
    bb19__0_505 -> bb21__0_505 [label=""];
    bb20__0_505 -> bb21__0_505 [label=""];
    bb21__0_505 -> bb22__0_505 [label=""];
    bb22__0_505 -> bb23__0_505 [label="return"];
    bb23__0_505 -> bb59__0_505 [label="0"];
    bb23__0_505 -> bb24__0_505 [label="otherwise"];
    bb24__0_505 -> bb58__0_505 [label="0"];
    bb24__0_505 -> bb25__0_505 [label="otherwise"];
    bb25__0_505 -> bb26__0_505 [label="return"];
    bb26__0_505 -> bb27__0_505 [label="return"];
    bb27__0_505 -> bb28__0_505 [label="return"];
    bb28__0_505 -> bb29__0_505 [label="return"];
    bb29__0_505 -> bb30__0_505 [label="return"];
    bb30__0_505 -> bb31__0_505 [label="return"];
    bb31__0_505 -> bb32__0_505 [label="return"];
    bb32__0_505 -> bb33__0_505 [label=""];
    bb33__0_505 -> bb34__0_505 [label="return"];
    bb34__0_505 -> bb36__0_505 [label="0"];
    bb34__0_505 -> bb35__0_505 [label="1"];
    bb34__0_505 -> bb4__0_505 [label="otherwise"];
    bb35__0_505 -> bb37__0_505 [label="return"];
    bb36__0_505 -> bb57__0_505 [label="0"];
    bb36__0_505 -> bb56__0_505 [label="otherwise"];
    bb37__0_505 -> bb43__0_505 [label="0"];
    bb37__0_505 -> bb38__0_505 [label="otherwise"];
    bb38__0_505 -> bb39__0_505 [label="return"];
    bb39__0_505 -> bb40__0_505 [label="return"];
    bb39__0_505 -> bb116__0_505 [label="unwind"];
    bb40__0_505 -> bb41__0_505 [label="return"];
    bb40__0_505 -> bb116__0_505 [label="unwind"];
    bb41__0_505 -> bb42__0_505 [label="return"];
    bb41__0_505 -> bb117__0_505 [label="unwind"];
    bb42__0_505 -> bb112__0_505 [label=""];
    bb43__0_505 -> bb44__0_505 [label="return"];
    bb44__0_505 -> bb45__0_505 [label="return"];
    bb45__0_505 -> bb46__0_505 [label="return"];
    bb46__0_505 -> bb47__0_505 [label="return"];
    bb47__0_505 -> bb52__0_505 [label="0"];
    bb47__0_505 -> bb48__0_505 [label="otherwise"];
    bb48__0_505 -> bb49__0_505 [label="success"];
    bb49__0_505 -> bb50__0_505 [label="return"];
    bb50__0_505 -> bb51__0_505 [label="return"];
    bb51__0_505 -> bb53__0_505 [label=""];
    bb52__0_505 -> bb53__0_505 [label=""];
    bb53__0_505 -> bb54__0_505 [label="return"];
    bb54__0_505 -> bb55__0_505 [label="return"];
    bb55__0_505 -> bb33__0_505 [label=""];
    bb56__0_505 -> bb22__0_505 [label=""];
    bb57__0_505 -> bb61__0_505 [label=""];
    bb58__0_505 -> bb60__0_505 [label=""];
    bb59__0_505 -> bb60__0_505 [label=""];
    bb60__0_505 -> bb61__0_505 [label=""];
    bb61__0_505 -> bb62__0_505 [label="return"];
    bb62__0_505 -> bb63__0_505 [label="return"];
    bb63__0_505 -> bb64__0_505 [label="return"];
    bb64__0_505 -> bb65__0_505 [label="return"];
    bb65__0_505 -> bb66__0_505 [label="return"];
    bb66__0_505 -> bb67__0_505 [label=""];
    bb67__0_505 -> bb68__0_505 [label="return"];
    bb68__0_505 -> bb70__0_505 [label="0"];
    bb68__0_505 -> bb69__0_505 [label="1"];
    bb68__0_505 -> bb4__0_505 [label="otherwise"];
    bb69__0_505 -> bb71__0_505 [label="return"];
    bb70__0_505 -> bb113__0_505 [label=""];
    bb71__0_505 -> bb72__0_505 [label="return"];
    bb72__0_505 -> bb73__0_505 [label="return"];
    bb73__0_505 -> bb93__0_505 [label="0"];
    bb73__0_505 -> bb74__0_505 [label="otherwise"];
    bb74__0_505 -> bb75__0_505 [label="return"];
    bb75__0_505 -> bb76__0_505 [label="return"];
    bb76__0_505 -> bb77__0_505 [label="return"];
    bb77__0_505 -> bb78__0_505 [label="return"];
    bb78__0_505 -> bb79__0_505 [label="return"];
    bb79__0_505 -> bb80__0_505 [label="return"];
    bb80__0_505 -> bb81__0_505 [label="return"];
    bb81__0_505 -> bb82__0_505 [label="return"];
    bb82__0_505 -> bb83__0_505 [label="return"];
    bb83__0_505 -> bb84__0_505 [label="return"];
    bb84__0_505 -> bb85__0_505 [label="return"];
    bb85__0_505 -> bb86__0_505 [label="return"];
    bb86__0_505 -> bb87__0_505 [label="return"];
    bb87__0_505 -> bb88__0_505 [label="return"];
    bb88__0_505 -> bb89__0_505 [label="return"];
    bb89__0_505 -> bb90__0_505 [label="return"];
    bb89__0_505 -> bb115__0_505 [label="unwind"];
    bb90__0_505 -> bb91__0_505 [label="return"];
    bb90__0_505 -> bb115__0_505 [label="unwind"];
    bb91__0_505 -> bb92__0_505 [label="return"];
    bb91__0_505 -> bb117__0_505 [label="unwind"];
    bb92__0_505 -> bb111__0_505 [label=""];
    bb93__0_505 -> bb94__0_505 [label="return"];
    bb94__0_505 -> bb95__0_505 [label="return"];
    bb95__0_505 -> bb96__0_505 [label="return"];
    bb96__0_505 -> bb97__0_505 [label="return"];
    bb97__0_505 -> bb98__0_505 [label="return"];
    bb98__0_505 -> bb99__0_505 [label="return"];
    bb99__0_505 -> bb100__0_505 [label="return"];
    bb100__0_505 -> bb101__0_505 [label="return"];
    bb101__0_505 -> bb102__0_505 [label="return"];
    bb102__0_505 -> bb103__0_505 [label="return"];
    bb103__0_505 -> bb104__0_505 [label="return"];
    bb104__0_505 -> bb105__0_505 [label="return"];
    bb105__0_505 -> bb106__0_505 [label="return"];
    bb106__0_505 -> bb107__0_505 [label="return"];
    bb107__0_505 -> bb108__0_505 [label="return"];
    bb107__0_505 -> bb114__0_505 [label="unwind"];
    bb108__0_505 -> bb109__0_505 [label="return"];
    bb108__0_505 -> bb114__0_505 [label="unwind"];
    bb109__0_505 -> bb110__0_505 [label="return"];
    bb109__0_505 -> bb117__0_505 [label="unwind"];
    bb110__0_505 -> bb111__0_505 [label=""];
    bb111__0_505 -> bb67__0_505 [label=""];
    bb112__0_505 -> bb113__0_505 [label=""];
    bb114__0_505 -> bb117__0_505 [label="return"];
    bb115__0_505 -> bb117__0_505 [label="return"];
    bb116__0_505 -> bb117__0_505 [label="return"];
    bb118__0_505 -> bb117__0_505 [label=""];
}
