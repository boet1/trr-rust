digraph Mir_0_52 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn handlers::handler_give_up_pending_fees::process(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, handlers::handler_give_up_pending_fees::GiveUpPendingFees&lt;ReErased&gt;&gt;, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _3: utils::cpi_mem::CpiMemoryLender&lt;ReErased&gt;;<br align="left"/>let mut _4: std::vec::Vec&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _5: &amp;ReErased handlers::handler_give_up_pending_fees::GiveUpPendingFees&lt;ReErased&gt;;<br align="left"/>let mut _6: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _7: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _8: std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::VaultState&gt;&gt;;<br align="left"/>let mut _10: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::VaultState&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _16: std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _17: anchor_lang::prelude::Clock;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _19: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _24: anchor_lang::prelude::Clock;<br align="left"/>let _25: usize;<br align="left"/>let mut _26: &amp;ReErased state::VaultState;<br align="left"/>let _27: &amp;ReErased state::VaultState;<br align="left"/>let mut _28: &amp;ReErased std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _29: ();<br align="left"/>let _30: ();<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _32: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased mut utils::cpi_mem::CpiMemoryLender&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased mut utils::cpi_mem::CpiMemoryLender&lt;ReErased&gt;;<br align="left"/>let mut _35: std::iter::Take&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _36: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _37: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _38: usize;<br align="left"/>let mut _39: usize;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _44: ();<br align="left"/>let _45: std::iter::Map&lt;std::iter::Take&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, Closure(DefId(0:54 ~ kamino_vault[b3c4]::handlers::handler_give_up_pending_fees::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; kamino_lending::utils::FatAccountLoader&lt;ReErased, kamino_lending::Reserve&gt;, []), ()])&gt;;<br align="left"/>let mut _46: std::iter::Take&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _47: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _48: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _49: usize;<br align="left"/>let mut _50: Closure(DefId(0:54 ~ kamino_vault[b3c4]::handlers::handler_give_up_pending_fees::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; kamino_lending::utils::FatAccountLoader&lt;ReErased, kamino_lending::Reserve&gt;, []), ()]);<br align="left"/>let _51: ();<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _53: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _55: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _56: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _57: std::iter::Map&lt;std::iter::Take&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, Closure(DefId(0:54 ~ kamino_vault[b3c4]::handlers::handler_give_up_pending_fees::process::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;,)) -&gt; kamino_lending::utils::FatAccountLoader&lt;ReErased, kamino_lending::Reserve&gt;, []), ()])&gt;;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: u64;<br align="left"/>let mut _60: std::result::Result&lt;u64, std::num::TryFromIntError&gt;;<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _67: ();<br align="left"/>let mut _68: ();<br align="left"/>let mut _69: &amp;ReErased mut handlers::handler_give_up_pending_fees::GiveUpPendingFees&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased mut handlers::handler_give_up_pending_fees::GiveUpPendingFees&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _73: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _74: isize;<br align="left"/>let mut _75: isize;<br align="left"/>let mut _76: isize;<br align="left"/>let mut _77: isize;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug max_amount_to_give_up =&gt; _2;<br align="left"/>debug cpi_mem =&gt; _3;<br align="left"/>debug vault_state =&gt; _7;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug clock =&gt; _17;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug reserves_count =&gt; _25;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug reserves_iter =&gt; _45;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>>;
    bb0__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_69 = deref_copy (_1.1: &amp;mut handlers::handler_give_up_pending_fees::GiveUpPendingFees&lt;'_&gt;)<br/>_5 = &amp;(*_69)<br/></td></tr><tr><td align="left">_4 = &lt;handlers::handler_give_up_pending_fees::GiveUpPendingFees&lt;'_&gt; as anchor_lang::ToAccountInfos&lt;'_&gt;&gt;::to_account_infos(move _5)</td></tr></table>>];
    bb1__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_6)<br/>_70 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_6 = &amp;(*_70)<br/></td></tr><tr><td align="left">_3 = cpi_mem::CpiMemoryLender::&lt;'_&gt;::build_cpi_memory_lender(move _4, move _6)</td></tr></table>>];
    bb2__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_71 = deref_copy (_1.1: &amp;mut handlers::handler_give_up_pending_fees::GiveUpPendingFees&lt;'_&gt;)<br/>_11 = &amp;((*_71).1: anchor_lang::prelude::AccountLoader&lt;'_, state::VaultState&gt;)<br/></td></tr><tr><td align="left">_10 = anchor_lang::prelude::AccountLoader::&lt;'_, state::VaultState&gt;::load_mut(move _11)</td></tr></table>>];
    bb3__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;RefMut&lt;'_, state::VaultState&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb4__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_12 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb5__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_9 as Continue).0: std::cell::RefMut&lt;'_, state::VaultState&gt;)<br/>_8 = move _16<br/>StorageDead(_16)<br/>_7 = &amp;mut _8<br/>_74 = discriminant(_9)<br/>StorageDead(_9)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb6__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = move ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_15)<br/>_15 = move _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb8__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>_88 = discriminant(_9)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb10__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_20 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb11__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_18 as Continue).0: anchor_lang::prelude::Clock)<br/>_17 = move _24<br/>StorageDead(_24)<br/>_76 = discriminant(_18)<br/>StorageDead(_18)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_7)<br/></td></tr><tr><td align="left">_27 = &lt;RefMut&lt;'_, state::VaultState&gt; as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb12__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_23)<br/>_23 = move _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb13__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_86 = discriminant(_18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = state::VaultState::get_reserves_count(move _26)</td></tr></table>>];
    bb15__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;mut _3<br/>_33 = &amp;mut (*_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_72 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_37 = &amp;(*_72)<br/></td></tr><tr><td align="left">_36 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _37)</td></tr></table>>];
    bb16__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_38)<br/>_38 = _25<br/></td></tr><tr><td align="left">_35 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::take(move _36, move _38)</td></tr></table>>];
    bb17__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>_39 = _25<br/></td></tr><tr><td align="left">_32 = cpi_refresh_reserves::&lt;'_, '_, std::iter::Take&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;(move _33, move _35, move _39)</td></tr></table>>];
    bb18__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb19__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_40 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb20__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_31 as Continue).0: ())<br/>_30 = _44<br/>StorageDead(_44)<br/>_78 = discriminant(_31)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>_29 = const ()<br/>StorageDead(_29)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_73 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_48 = &amp;(*_73)<br/></td></tr><tr><td align="left">_47 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _48)</td></tr></table>>];
    bb21__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = move ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_43)<br/>_43 = move _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb22__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_84 = discriminant(_31)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_49)<br/>_49 = _25<br/></td></tr><tr><td align="left">_46 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::take(move _47, move _49)</td></tr></table>>];
    bb24__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>_50 = {closure@programs\kvault\src\handlers\handler_give_up_pending_fees.rs:36:14: 36:28}<br/></td></tr><tr><td align="left">_45 = &lt;std::iter::Take&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::map::&lt;kamino_lending::utils::FatAccountLoader&lt;'_, kamino_lending::Reserve&gt;, {closure@programs\kvault\src\handlers\handler_give_up_pending_fees.rs:36:14: 36:28}&gt;(move _46, move _50)</td></tr></table>>];
    bb25__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_7)<br/></td></tr><tr><td align="left">_55 = &lt;RefMut&lt;'_, state::VaultState&gt; as DerefMut&gt;::deref_mut(move _56)</td></tr></table>>];
    bb26__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_54 = &amp;mut (*_55)<br/>StorageDead(_56)<br/>StorageLive(_57)<br/>_57 = move _45<br/>StorageLive(_58)<br/>_58 = (_17.0: u64)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = (_17.4: i64)<br/></td></tr><tr><td align="left">_60 = &lt;u64 as std::convert::TryFrom&lt;i64&gt;&gt;::try_from(move _61)</td></tr></table>>];
    bb27__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = std::result::Result::&lt;u64, TryFromIntError&gt;::unwrap(move _60)</td></tr></table>>];
    bb28__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageLive(_62)<br/>_62 = _2<br/></td></tr><tr><td align="left">_53 = give_up_pending_fee::&lt;'_, kamino_lending::utils::FatAccountLoader&lt;'_, kamino_lending::Reserve&gt;, Map&lt;std::iter::Take&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;, {closure@programs\kvault\src\handlers\handler_give_up_pending_fees.rs:36:14: 36:28}&gt;&gt;(move _54, move _57, move _58, move _59, move _62)</td></tr></table>>];
    bb29__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb30__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_63 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb31__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_52 as Continue).0: ())<br/>_51 = _67<br/>StorageDead(_67)<br/>_80 = discriminant(_52)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_68)<br/>_68 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _68)<br/>StorageDead(_68)<br/>StorageDead(_45)<br/>StorageDead(_25)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb32__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_66)<br/>_66 = move _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb33__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>_82 = discriminant(_52)<br/>StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb35__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb38__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb39__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb41__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb42__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb43__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">43 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb44__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left" balign="left">_90 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left" balign="left">_91 = discriminant(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left" balign="left">_92 = discriminant(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_52 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left" balign="left">_93 = discriminant(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_52 -> bb1__0_52 [label="return"];
    bb1__0_52 -> bb2__0_52 [label="return"];
    bb1__0_52 -> bb43__0_52 [label="unwind"];
    bb2__0_52 -> bb3__0_52 [label="return"];
    bb2__0_52 -> bb42__0_52 [label="unwind"];
    bb3__0_52 -> bb4__0_52 [label="return"];
    bb3__0_52 -> bb42__0_52 [label="unwind"];
    bb4__0_52 -> bb5__0_52 [label="0"];
    bb4__0_52 -> bb7__0_52 [label="1"];
    bb4__0_52 -> bb6__0_52 [label="otherwise"];
    bb5__0_52 -> bb9__0_52 [label="return"];
    bb5__0_52 -> bb41__0_52 [label="unwind"];
    bb7__0_52 -> bb8__0_52 [label="return"];
    bb7__0_52 -> bb47__0_52 [label="unwind"];
    bb8__0_52 -> bb38__0_52 [label=""];
    bb9__0_52 -> bb10__0_52 [label="return"];
    bb9__0_52 -> bb41__0_52 [label="unwind"];
    bb10__0_52 -> bb11__0_52 [label="0"];
    bb10__0_52 -> bb12__0_52 [label="1"];
    bb10__0_52 -> bb6__0_52 [label="otherwise"];
    bb11__0_52 -> bb14__0_52 [label="return"];
    bb11__0_52 -> bb41__0_52 [label="unwind"];
    bb12__0_52 -> bb13__0_52 [label="return"];
    bb12__0_52 -> bb46__0_52 [label="unwind"];
    bb13__0_52 -> bb37__0_52 [label=""];
    bb14__0_52 -> bb15__0_52 [label="return"];
    bb14__0_52 -> bb41__0_52 [label="unwind"];
    bb15__0_52 -> bb16__0_52 [label="return"];
    bb15__0_52 -> bb41__0_52 [label="unwind"];
    bb16__0_52 -> bb17__0_52 [label="return"];
    bb16__0_52 -> bb41__0_52 [label="unwind"];
    bb17__0_52 -> bb18__0_52 [label="return"];
    bb17__0_52 -> bb41__0_52 [label="unwind"];
    bb18__0_52 -> bb19__0_52 [label="return"];
    bb18__0_52 -> bb41__0_52 [label="unwind"];
    bb19__0_52 -> bb20__0_52 [label="0"];
    bb19__0_52 -> bb21__0_52 [label="1"];
    bb19__0_52 -> bb6__0_52 [label="otherwise"];
    bb20__0_52 -> bb23__0_52 [label="return"];
    bb20__0_52 -> bb41__0_52 [label="unwind"];
    bb21__0_52 -> bb22__0_52 [label="return"];
    bb21__0_52 -> bb45__0_52 [label="unwind"];
    bb22__0_52 -> bb36__0_52 [label=""];
    bb23__0_52 -> bb24__0_52 [label="return"];
    bb23__0_52 -> bb41__0_52 [label="unwind"];
    bb24__0_52 -> bb25__0_52 [label="return"];
    bb24__0_52 -> bb41__0_52 [label="unwind"];
    bb25__0_52 -> bb26__0_52 [label="return"];
    bb25__0_52 -> bb41__0_52 [label="unwind"];
    bb26__0_52 -> bb27__0_52 [label="return"];
    bb26__0_52 -> bb41__0_52 [label="unwind"];
    bb27__0_52 -> bb28__0_52 [label="return"];
    bb27__0_52 -> bb41__0_52 [label="unwind"];
    bb28__0_52 -> bb29__0_52 [label="return"];
    bb28__0_52 -> bb41__0_52 [label="unwind"];
    bb29__0_52 -> bb30__0_52 [label="return"];
    bb29__0_52 -> bb41__0_52 [label="unwind"];
    bb30__0_52 -> bb31__0_52 [label="0"];
    bb30__0_52 -> bb32__0_52 [label="1"];
    bb30__0_52 -> bb6__0_52 [label="otherwise"];
    bb31__0_52 -> bb34__0_52 [label="return"];
    bb31__0_52 -> bb42__0_52 [label="unwind"];
    bb32__0_52 -> bb33__0_52 [label="return"];
    bb32__0_52 -> bb44__0_52 [label="unwind"];
    bb33__0_52 -> bb36__0_52 [label=""];
    bb34__0_52 -> bb35__0_52 [label="return"];
    bb34__0_52 -> bb43__0_52 [label="unwind"];
    bb35__0_52 -> bb40__0_52 [label=""];
    bb36__0_52 -> bb37__0_52 [label=""];
    bb37__0_52 -> bb38__0_52 [label="return"];
    bb37__0_52 -> bb42__0_52 [label="unwind"];
    bb38__0_52 -> bb39__0_52 [label="return"];
    bb38__0_52 -> bb43__0_52 [label="unwind"];
    bb39__0_52 -> bb40__0_52 [label=""];
    bb41__0_52 -> bb42__0_52 [label="return"];
    bb42__0_52 -> bb43__0_52 [label="return"];
    bb44__0_52 -> bb41__0_52 [label=""];
    bb45__0_52 -> bb41__0_52 [label=""];
    bb46__0_52 -> bb41__0_52 [label=""];
    bb47__0_52 -> bb42__0_52 [label=""];
}
