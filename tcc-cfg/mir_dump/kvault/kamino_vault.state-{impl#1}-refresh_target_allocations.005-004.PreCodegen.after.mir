// MIR for `state::<impl at programs\kvault\src\state.rs:82:1: 82:16>::refresh_target_allocations` after PreCodegen

fn state::<impl at programs\kvault\src\state.rs:82:1: 82:16>::refresh_target_allocations(_1: &mut state::VaultState, _2: &Invested) -> std::result::Result<(), anchor_lang::error::Error> {
    debug self => _1;
    debug invested => _2;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _3: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _4: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _5: std::result::Result<fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error>;
    let mut _6: &state::VaultState;
    let mut _7: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _8: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _9: isize;
    let _10: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _11: !;
    let mut _12: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let _13: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _15: std::iter::Map<std::iter::Filter<std::slice::Iter<'_, state::VaultAllocation>, {closure@programs\kvault\src\state.rs:298:21: 298:24}>, {closure@programs\kvault\src\state.rs:299:18: 299:21}>;
    let mut _16: std::iter::Filter<std::slice::Iter<'_, state::VaultAllocation>, {closure@programs\kvault\src\state.rs:298:21: 298:24}>;
    let mut _17: std::slice::Iter<'_, state::VaultAllocation>;
    let mut _18: &[state::VaultAllocation];
    let mut _19: &[state::VaultAllocation; 25];
    let mut _20: {closure@programs\kvault\src\state.rs:298:21: 298:24};
    let mut _21: {closure@programs\kvault\src\state.rs:299:18: 299:21};
    let _24: ();
    let mut _25: bool;
    let mut _26: u64;
    let mut _28: bool;
    let mut _29: u64;
    let mut _31: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _32: u64;
    let mut _33: u64;
    let mut _34: u64;
    let mut _35: u64;
    let mut _36: (u64, bool);
    let mut _38: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _39: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _40: u64;
    let _41: ();
    let mut _42: &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _43: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _45: ();
    let mut _46: ();
    let mut _47: bool;
    let mut _48: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _49: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _50: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _51: bool;
    let mut _52: u64;
    let _56: ();
    let mut _57: std::iter::Filter<std::iter::Zip<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>>, std::slice::IterMut<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:334:25: 334:69}>;
    let mut _58: std::iter::Filter<std::iter::Zip<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>>, std::slice::IterMut<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:334:25: 334:69}>;
    let mut _59: std::iter::Zip<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>>, std::slice::IterMut<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>;
    let mut _60: std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>>;
    let mut _61: std::slice::IterMut<'_, state::VaultAllocation>;
    let mut _62: &mut [state::VaultAllocation];
    let mut _63: &mut [state::VaultAllocation; 25];
    let mut _64: std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>;
    let mut _65: &[operations::vault_operations::common::InvestedReserve];
    let mut _66: &[operations::vault_operations::common::InvestedReserve; 25];
    let mut _67: std::slice::IterMut<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _68: &mut [fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>];
    let mut _69: &mut [fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>; 25];
    let mut _70: {closure@programs\kvault\src\state.rs:334:25: 334:69};
    let _72: ();
    let mut _73: std::option::Option<((&mut state::VaultAllocation, &operations::vault_operations::common::InvestedReserve), &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)>;
    let mut _74: &mut std::iter::Filter<std::iter::Zip<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>>, std::slice::IterMut<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:334:25: 334:69}>;
    let mut _75: &mut std::iter::Filter<std::iter::Zip<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>>, std::slice::IterMut<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:334:25: 334:69}>;
    let mut _76: isize;
    let mut _77: !;
    let _81: ();
    let mut _82: bool;
    let mut _83: &anchor_lang::prelude::Pubkey;
    let mut _84: &anchor_lang::prelude::Pubkey;
    let mut _85: !;
    let mut _86: anchor_lang::error::Error;
    let mut _87: anchor_lang::error::AnchorError;
    let mut _88: std::string::String;
    let mut _89: &KaminoVaultError;
    let _90: KaminoVaultError;
    let mut _91: u32;
    let mut _92: KaminoVaultError;
    let mut _93: std::string::String;
    let mut _94: &KaminoVaultError;
    let _95: KaminoVaultError;
    let mut _96: std::option::Option<anchor_lang::error::ErrorOrigin>;
    let mut _97: anchor_lang::error::ErrorOrigin;
    let mut _98: anchor_lang::error::Source;
    let mut _99: std::option::Option<anchor_lang::error::ComparedValues>;
    let mut _102: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _103: u64;
    let mut _104: u64;
    let mut _106: bool;
    let mut _107: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _108: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _109: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _110: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _111: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _112: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _113: u64;
    let mut _114: u64;
    let mut _115: (u64, bool);
    let mut _116: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _117: u64;
    let mut _118: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _119: ();
    let mut _120: &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _121: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _122: ();
    let mut _123: &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _124: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _125: bool;
    let mut _126: !;
    let mut _127: !;
    let _128: ();
    let mut _129: !;
    let _130: ();
    let mut _131: std::iter::Filter<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:373:21: 373:38}>;
    let mut _132: std::iter::Filter<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:373:21: 373:38}>;
    let mut _133: std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>;
    let mut _134: std::slice::IterMut<'_, state::VaultAllocation>;
    let mut _135: &mut [state::VaultAllocation];
    let mut _136: &mut [state::VaultAllocation; 25];
    let mut _137: std::slice::Iter<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>;
    let mut _138: &[fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>];
    let mut _139: &[fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>; 25];
    let mut _140: {closure@programs\kvault\src\state.rs:373:21: 373:38};
    let _142: ();
    let mut _143: std::option::Option<(&mut state::VaultAllocation, &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)>;
    let mut _144: &mut std::iter::Filter<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:373:21: 373:38}>;
    let mut _145: &mut std::iter::Filter<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:373:21: 373:38}>;
    let mut _146: isize;
    let mut _147: !;
    let _150: ();
    let mut _151: &mut state::VaultAllocation;
    let mut _152: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _153: bool;
    let mut _154: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _155: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let _156: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _157: u64;
    let _158: ();
    let _161: ();
    let mut _162: std::result::Result<(), std::fmt::Error>;
    let mut _163: &mut arrform::ArrForm<186>;
    let mut _164: std::fmt::Arguments<'_>;
    let mut _165: &[&str];
    let mut _166: &[&str; 5];
    let _167: &[&str; 5];
    let _168: [&str; 5];
    let mut _169: &[core::fmt::rt::Argument<'_>];
    let mut _170: &[core::fmt::rt::Argument<'_>; 5];
    let _171: &[core::fmt::rt::Argument<'_>; 5];
    let _172: [core::fmt::rt::Argument<'_>; 5];
    let mut _173: core::fmt::rt::Argument<'_>;
    let mut _174: &anchor_lang::prelude::Pubkey;
    let _175: &anchor_lang::prelude::Pubkey;
    let mut _176: core::fmt::rt::Argument<'_>;
    let mut _177: &u64;
    let _178: &u64;
    let mut _179: core::fmt::rt::Argument<'_>;
    let mut _180: &u64;
    let _181: &u64;
    let mut _182: core::fmt::rt::Argument<'_>;
    let mut _183: &u64;
    let _184: &u64;
    let _185: u64;
    let mut _186: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _187: core::fmt::rt::Argument<'_>;
    let mut _188: &u64;
    let _189: &u64;
    let _190: u64;
    let mut _191: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _192: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _193: &mut arrform::ArrForm<186>;
    let _194: ();
    let mut _195: &str;
    let _196: &str;
    let mut _197: &std::string::String;
    let _198: &std::string::String;
    let _199: std::string::String;
    let mut _201: std::fmt::Arguments<'_>;
    let mut _202: &[&str];
    let mut _203: &[&str; 1];
    let _204: &[&str; 1];
    let _205: [&str; 1];
    let mut _206: &[core::fmt::rt::Argument<'_>];
    let mut _207: &[core::fmt::rt::Argument<'_>; 1];
    let _208: &[core::fmt::rt::Argument<'_>; 1];
    let _209: [core::fmt::rt::Argument<'_>; 1];
    let mut _210: core::fmt::rt::Argument<'_>;
    let mut _211: &&str;
    let _212: &&str;
    let _213: &str;
    let mut _214: &arrform::ArrForm<186>;
    let _215: ();
    let _218: ();
    let mut _219: std::result::Result<(), std::fmt::Error>;
    let mut _220: &mut arrform::ArrForm<186>;
    let mut _221: std::fmt::Arguments<'_>;
    let mut _222: &[&str];
    let mut _223: &[&str; 5];
    let _224: &[&str; 5];
    let _225: [&str; 5];
    let mut _226: &[core::fmt::rt::Argument<'_>];
    let mut _227: &[core::fmt::rt::Argument<'_>; 5];
    let _228: &[core::fmt::rt::Argument<'_>; 5];
    let _229: [core::fmt::rt::Argument<'_>; 5];
    let mut _230: core::fmt::rt::Argument<'_>;
    let mut _231: &anchor_lang::prelude::Pubkey;
    let _232: &anchor_lang::prelude::Pubkey;
    let mut _233: core::fmt::rt::Argument<'_>;
    let mut _234: &u64;
    let _235: &u64;
    let mut _236: core::fmt::rt::Argument<'_>;
    let mut _237: &u64;
    let _238: &u64;
    let mut _239: core::fmt::rt::Argument<'_>;
    let mut _240: &u64;
    let _241: &u64;
    let mut _242: core::fmt::rt::Argument<'_>;
    let mut _243: &u64;
    let _244: &u64;
    let _245: u64;
    let mut _246: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
    let mut _247: {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61};
    let mut _248: &mut arrform::ArrForm<186>;
    let _249: ();
    let mut _250: &str;
    let _251: &str;
    let mut _252: &std::string::String;
    let _253: &std::string::String;
    let _254: std::string::String;
    let mut _256: std::fmt::Arguments<'_>;
    let mut _257: &[&str];
    let mut _258: &[&str; 1];
    let _259: &[&str; 1];
    let _260: [&str; 1];
    let mut _261: &[core::fmt::rt::Argument<'_>];
    let mut _262: &[core::fmt::rt::Argument<'_>; 1];
    let _263: &[core::fmt::rt::Argument<'_>; 1];
    let _264: [core::fmt::rt::Argument<'_>; 1];
    let mut _265: core::fmt::rt::Argument<'_>;
    let mut _266: &&str;
    let _267: &&str;
    let _268: &str;
    let mut _269: &arrform::ArrForm<186>;
    let mut _270: ();
    let mut _278: std::boxed::Box<[operations::vault_operations::common::InvestedReserve; 25]>;
    let mut _279: isize;
    let mut _280: isize;
    let mut _281: isize;
    let mut _282: isize;
    let mut _283: isize;
    let mut _284: *const [operations::vault_operations::common::InvestedReserve; 25];
    scope 1 {
        debug total_tokens => _3;
        let _14: u64;
        scope 6 {
            debug total_weight => _14;
            let mut _22: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
            scope 7 {
                debug remaining_tokens_to_allocate => _22;
                let mut _23: [fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>; 25];
                scope 8 {
                    debug token_target_allocations => _23;
                    let _27: u64;
                    let mut _44: u64;
                    scope 9 {
                        debug unallocated_cap => _27;
                        let _30: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                        scope 10 {
                            debug unallocated_target => _30;
                            let _37: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                            scope 11 {
                                debug unallocated_tokens_target => _37;
                            }
                        }
                    }
                    scope 12 {
                        debug remaining_weight_to_allocate => _44;
                        let _53: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                        let mut _141: std::iter::Filter<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:373:21: 373:38}>;
                        let mut _277: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                        scope 13 {
                            debug loop_total_tokens => _53;
                            let _54: u64;
                            scope 14 {
                                debug loop_weight => _54;
                                let mut _55: bool;
                                scope 15 {
                                    debug a_cap_was_reached => _55;
                                    let mut _71: std::iter::Filter<std::iter::Zip<std::iter::Zip<std::slice::IterMut<'_, state::VaultAllocation>, std::slice::Iter<'_, operations::vault_operations::common::InvestedReserve>>, std::slice::IterMut<'_, fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:334:25: 334:69}>;
                                    scope 16 {
                                        debug iter => _71;
                                        let _78: &mut state::VaultAllocation;
                                        let _79: &operations::vault_operations::common::InvestedReserve;
                                        let _80: &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                        scope 17 {
                                            debug allocation => _78;
                                            debug invested => _79;
                                            debug token_target_allocation => _80;
                                            let _100: u64;
                                            let mut _271: &KaminoVaultError;
                                            let mut _272: &KaminoVaultError;
                                            scope 18 {
                                                debug reserve_weight => _100;
                                                let _101: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                                scope 19 {
                                                    debug reserve_target_ideal => _101;
                                                    let _105: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                                                    scope 20 {
                                                        debug reserve_target_capped => _105;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        scope 21 {
                            debug iter => _141;
                            let _148: &mut state::VaultAllocation;
                            let _149: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>;
                            scope 22 {
                                debug allocation => _148;
                                debug token_target_allocation => _149;
                                let _159: arrform::ArrForm<186>;
                                let mut _160: arrform::ArrForm<186>;
                                let _216: arrform::ArrForm<186>;
                                let mut _217: arrform::ArrForm<186>;
                                scope 23 {
                                    debug formatted => _159;
                                    let _200: std::string::String;
                                    let mut _273: &[&str; 1];
                                    scope 25 {
                                        debug res => _200;
                                    }
                                }
                                scope 24 {
                                    debug af => _160;
                                    let mut _274: &[&str; 5];
                                }
                                scope 26 {
                                    debug formatted => _216;
                                    let _255: std::string::String;
                                    let mut _275: &[&str; 1];
                                    scope 28 {
                                        debug res => _255;
                                    }
                                }
                                scope 27 {
                                    debug af => _217;
                                    let mut _276: &[&str; 5];
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    scope 2 {
        debug residual => _10;
        scope 3 {
        }
    }
    scope 4 {
        debug val => _13;
        scope 5 {
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &(*_1);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &((*_2).1: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _7 = &(*_8);
        _5 = state::VaultState::compute_aum(move _6, move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        _4 = <std::result::Result<FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>, anchor_lang::error::Error> as Try>::branch(move _5) -> [return: bb2, unwind: bb117];
    }

    bb2: {
        StorageDead(_5);
        _9 = discriminant(_4);
        switchInt(move _9) -> [0: bb3, 1: bb5, otherwise: bb4];
    }

    bb3: {
        StorageLive(_13);
        _13 = ((_4 as Continue).0: fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        _3 = _13;
        StorageDead(_13);
        _279 = discriminant(_4);
        StorageDead(_8);
        StorageDead(_4);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &((*_1).18: [state::VaultAllocation; 25]);
        _18 = move _19 as &[state::VaultAllocation] (PointerCoercion(Unsize));
        StorageDead(_19);
        _17 = core::slice::<impl [VaultAllocation]>::iter(move _18) -> [return: bb7, unwind continue];
    }

    bb4: {
        unreachable;
    }

    bb5: {
        StorageLive(_10);
        _10 = move ((_4 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_12);
        _12 = move _10;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _12) -> [return: bb6, unwind: bb118];
    }

    bb6: {
        StorageDead(_12);
        StorageDead(_10);
        _281 = discriminant(_4);
        StorageDead(_8);
        StorageDead(_4);
        goto -> bb112;
    }

    bb7: {
        StorageDead(_18);
        StorageLive(_20);
        _20 = {closure@programs\kvault\src\state.rs:298:21: 298:24};
        _16 = <std::slice::Iter<'_, VaultAllocation> as Iterator>::filter::<{closure@programs\kvault\src\state.rs:298:21: 298:24}>(move _17, move _20) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_20);
        StorageDead(_17);
        StorageLive(_21);
        _21 = {closure@programs\kvault\src\state.rs:299:18: 299:21};
        _15 = <Filter<std::slice::Iter<'_, VaultAllocation>, {closure@programs\kvault\src\state.rs:298:21: 298:24}> as Iterator>::map::<u64, {closure@programs\kvault\src\state.rs:299:18: 299:21}>(move _16, move _21) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_21);
        StorageDead(_16);
        _14 = <Map<Filter<std::slice::Iter<'_, VaultAllocation>, {closure@programs\kvault\src\state.rs:298:21: 298:24}>, {closure@programs\kvault\src\state.rs:299:18: 299:21}> as Iterator>::sum::<u64>(move _15) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_15);
        StorageLive(_22);
        _22 = _3;
        StorageLive(_23);
        _23 = [const _; 25];
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = ((*_1).12: u64);
        _25 = Gt(move _26, const 0_u64);
        switchInt(move _25) -> [0: bb20, otherwise: bb11];
    }

    bb11: {
        StorageDead(_26);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        _29 = ((*_1).33: u64);
        _28 = Eq(move _29, const 0_u64);
        switchInt(move _28) -> [0: bb13, otherwise: bb12];
    }

    bb12: {
        StorageDead(_29);
        _27 = const _;
        goto -> bb14;
    }

    bb13: {
        StorageDead(_29);
        _27 = ((*_1).33: u64);
        goto -> bb14;
    }

    bb14: {
        StorageDead(_28);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &_3;
        StorageLive(_32);
        _32 = ((*_1).12: u64);
        StorageLive(_33);
        StorageLive(_34);
        _34 = _14;
        StorageLive(_35);
        _35 = ((*_1).12: u64);
        _36 = CheckedAdd(_34, _35);
        assert(!move (_36.1: bool), "attempt to compute `{} + {}`, which would overflow", move _34, move _35) -> [success: bb15, unwind continue];
    }

    bb15: {
        _33 = move (_36.0: u64);
        StorageDead(_35);
        StorageDead(_34);
        _30 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::mul_int_ratio::<u64, u64>(move _31, move _32, move _33) -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_31);
        StorageLive(_37);
        StorageLive(_38);
        _38 = _30;
        StorageLive(_39);
        StorageLive(_40);
        _40 = _27;
        _39 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as From<u64>>::from(move _40) -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageDead(_40);
        _37 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Ord>::min(move _38, move _39) -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageDead(_39);
        StorageDead(_38);
        StorageLive(_41);
        StorageLive(_42);
        _42 = &mut _22;
        StorageLive(_43);
        _43 = _37;
        _41 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as SubAssign>::sub_assign(move _42, move _43) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_41);
        _24 = const ();
        StorageDead(_37);
        StorageDead(_30);
        StorageDead(_27);
        goto -> bb21;
    }

    bb20: {
        StorageDead(_26);
        _24 = const ();
        goto -> bb21;
    }

    bb21: {
        StorageDead(_25);
        StorageDead(_24);
        StorageLive(_44);
        _44 = _14;
        StorageLive(_45);
        goto -> bb22;
    }

    bb22: {
        StorageLive(_47);
        StorageLive(_48);
        _48 = &_22;
        StorageLive(_49);
        _277 = const _;
        _49 = &(*_277);
        _47 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::gt(move _48, move _49) -> [return: bb23, unwind continue];
    }

    bb23: {
        switchInt(move _47) -> [0: bb59, otherwise: bb24];
    }

    bb24: {
        StorageDead(_49);
        StorageDead(_48);
        StorageLive(_51);
        StorageLive(_52);
        _52 = _44;
        _51 = Gt(move _52, const 0_u64);
        switchInt(move _51) -> [0: bb58, otherwise: bb25];
    }

    bb25: {
        StorageDead(_52);
        StorageLive(_53);
        _53 = _22;
        StorageLive(_54);
        _54 = _44;
        StorageLive(_55);
        _55 = const false;
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        _63 = &mut ((*_1).18: [state::VaultAllocation; 25]);
        _62 = move _63 as &mut [state::VaultAllocation] (PointerCoercion(Unsize));
        StorageDead(_63);
        _61 = core::slice::<impl [VaultAllocation]>::iter_mut(move _62) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_62);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        _278 = deref_copy ((*_2).0: std::boxed::Box<[operations::vault_operations::common::InvestedReserve; 25]>);
        _284 = (((_278.0: std::ptr::Unique<[operations::vault_operations::common::InvestedReserve; 25]>).0: std::ptr::NonNull<[operations::vault_operations::common::InvestedReserve; 25]>).0: *const [operations::vault_operations::common::InvestedReserve; 25]);
        _66 = &(*_284);
        _65 = move _66 as &[operations::vault_operations::common::InvestedReserve] (PointerCoercion(Unsize));
        StorageDead(_66);
        _64 = core::slice::<impl [InvestedReserve]>::iter(move _65) -> [return: bb27, unwind continue];
    }

    bb27: {
        StorageDead(_65);
        _60 = <std::slice::IterMut<'_, VaultAllocation> as Iterator>::zip::<std::slice::Iter<'_, InvestedReserve>>(move _61, move _64) -> [return: bb28, unwind continue];
    }

    bb28: {
        StorageDead(_64);
        StorageDead(_61);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        _69 = &mut _23;
        _68 = move _69 as &mut [fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>] (PointerCoercion(Unsize));
        StorageDead(_69);
        _67 = core::slice::<impl [FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>]>::iter_mut(move _68) -> [return: bb29, unwind continue];
    }

    bb29: {
        StorageDead(_68);
        _59 = <Zip<std::slice::IterMut<'_, VaultAllocation>, std::slice::Iter<'_, InvestedReserve>> as Iterator>::zip::<std::slice::IterMut<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>(move _60, move _67) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_67);
        StorageDead(_60);
        StorageLive(_70);
        _70 = {closure@programs\kvault\src\state.rs:334:25: 334:69};
        _58 = <Zip<Zip<std::slice::IterMut<'_, VaultAllocation>, std::slice::Iter<'_, InvestedReserve>>, std::slice::IterMut<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>> as Iterator>::filter::<{closure@programs\kvault\src\state.rs:334:25: 334:69}>(move _59, move _70) -> [return: bb31, unwind continue];
    }

    bb31: {
        StorageDead(_70);
        StorageDead(_59);
        _57 = <Filter<Zip<Zip<std::slice::IterMut<'_, VaultAllocation>, std::slice::Iter<'_, InvestedReserve>>, std::slice::IterMut<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:334:25: 334:69}> as IntoIterator>::into_iter(move _58) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_58);
        StorageLive(_71);
        _71 = move _57;
        goto -> bb33;
    }

    bb33: {
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        StorageLive(_75);
        _75 = &mut _71;
        _74 = &mut (*_75);
        _73 = <Filter<Zip<Zip<std::slice::IterMut<'_, VaultAllocation>, std::slice::Iter<'_, InvestedReserve>>, std::slice::IterMut<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:334:25: 334:69}> as Iterator>::next(move _74) -> [return: bb34, unwind continue];
    }

    bb34: {
        StorageDead(_74);
        _76 = discriminant(_73);
        switchInt(move _76) -> [0: bb36, 1: bb35, otherwise: bb4];
    }

    bb35: {
        StorageLive(_78);
        _78 = move ((((_73 as Some).0: ((&mut state::VaultAllocation, &operations::vault_operations::common::InvestedReserve), &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)).0: (&mut state::VaultAllocation, &operations::vault_operations::common::InvestedReserve)).0: &mut state::VaultAllocation);
        StorageLive(_79);
        _79 = ((((_73 as Some).0: ((&mut state::VaultAllocation, &operations::vault_operations::common::InvestedReserve), &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)).0: (&mut state::VaultAllocation, &operations::vault_operations::common::InvestedReserve)).1: &operations::vault_operations::common::InvestedReserve);
        StorageLive(_80);
        _80 = move (((_73 as Some).0: ((&mut state::VaultAllocation, &operations::vault_operations::common::InvestedReserve), &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)).1: &mut fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        _83 = &((*_78).0: anchor_lang::prelude::Pubkey);
        StorageLive(_84);
        _84 = &((*_79).0: anchor_lang::prelude::Pubkey);
        _82 = <anchor_lang::prelude::Pubkey as PartialEq>::ne(move _83, move _84) -> [return: bb37, unwind continue];
    }

    bb36: {
        _56 = const ();
        StorageDead(_75);
        StorageDead(_73);
        StorageDead(_72);
        StorageDead(_71);
        StorageDead(_57);
        StorageDead(_56);
        StorageLive(_125);
        _125 = _55;
        switchInt(move _125) -> [0: bb57, otherwise: bb56];
    }

    bb37: {
        switchInt(move _82) -> [0: bb43, otherwise: bb38];
    }

    bb38: {
        StorageDead(_84);
        StorageDead(_83);
        StorageLive(_86);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        _272 = const _;
        _89 = &(*_272);
        _88 = KaminoVaultError::name(move _89) -> [return: bb39, unwind continue];
    }

    bb39: {
        StorageDead(_89);
        StorageLive(_91);
        StorageLive(_92);
        _92 = KaminoVaultError::ReserveNotPartOfAllocations;
        _91 = <KaminoVaultError as Into<u32>>::into(move _92) -> [return: bb40, unwind: bb116];
    }

    bb40: {
        StorageDead(_92);
        StorageLive(_93);
        StorageLive(_94);
        _271 = const _;
        _94 = &(*_271);
        _93 = <KaminoVaultError as ToString>::to_string(move _94) -> [return: bb41, unwind: bb116];
    }

    bb41: {
        StorageDead(_94);
        StorageLive(_96);
        StorageLive(_97);
        StorageLive(_98);
        _98 = anchor_lang::error::Source { filename: const "programs\\kvault\\src\\state.rs", line: const 340_u32 };
        _97 = anchor_lang::error::ErrorOrigin::Source(move _98);
        StorageDead(_98);
        _96 = Option::<ErrorOrigin>::Some(move _97);
        StorageDead(_97);
        StorageLive(_99);
        _99 = Option::<ComparedValues>::None;
        _87 = anchor_lang::error::AnchorError { error_name: move _88, error_code_number: move _91, error_msg: move _93, error_origin: move _96, compared_values: move _99 };
        StorageDead(_99);
        StorageDead(_96);
        StorageDead(_93);
        StorageDead(_91);
        StorageDead(_88);
        _86 = <anchor_lang::error::Error as From<anchor_lang::error::AnchorError>>::from(move _87) -> [return: bb42, unwind: bb117];
    }

    bb42: {
        StorageDead(_87);
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Err(move _86);
        StorageDead(_86);
        StorageDead(_82);
        StorageDead(_81);
        StorageDead(_80);
        StorageDead(_79);
        StorageDead(_78);
        StorageDead(_75);
        StorageDead(_73);
        StorageDead(_72);
        StorageDead(_71);
        StorageDead(_57);
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_53);
        StorageDead(_51);
        StorageDead(_47);
        StorageDead(_45);
        StorageDead(_44);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_14);
        goto -> bb112;
    }

    bb43: {
        StorageDead(_84);
        StorageDead(_83);
        _81 = const ();
        StorageDead(_82);
        StorageDead(_81);
        StorageLive(_100);
        _100 = ((*_78).2: u64);
        StorageLive(_101);
        StorageLive(_102);
        _102 = &_53;
        StorageLive(_103);
        _103 = _100;
        StorageLive(_104);
        _104 = _54;
        _101 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::mul_int_ratio::<u64, u64>(move _102, move _103, move _104) -> [return: bb44, unwind continue];
    }

    bb44: {
        StorageDead(_104);
        StorageDead(_103);
        StorageDead(_102);
        StorageLive(_105);
        StorageLive(_106);
        StorageLive(_107);
        StorageLive(_108);
        StorageLive(_109);
        _109 = _101;
        StorageLive(_110);
        _110 = (*_80);
        _108 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Add>::add(move _109, move _110) -> [return: bb45, unwind continue];
    }

    bb45: {
        _107 = &_108;
        StorageDead(_110);
        StorageDead(_109);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        _113 = ((*_78).3: u64);
        _112 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as From<u64>>::from(move _113) -> [return: bb46, unwind continue];
    }

    bb46: {
        _111 = &_112;
        StorageDead(_113);
        _106 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::ge(move _107, move _111) -> [return: bb47, unwind continue];
    }

    bb47: {
        switchInt(move _106) -> [0: bb52, otherwise: bb48];
    }

    bb48: {
        StorageDead(_112);
        StorageDead(_111);
        StorageDead(_108);
        StorageDead(_107);
        _55 = const true;
        StorageLive(_114);
        _114 = _100;
        _115 = CheckedSub(_44, _114);
        assert(!move (_115.1: bool), "attempt to compute `{} - {}`, which would overflow", _44, move _114) -> [success: bb49, unwind continue];
    }

    bb49: {
        _44 = move (_115.0: u64);
        StorageDead(_114);
        StorageLive(_116);
        StorageLive(_117);
        _117 = ((*_78).3: u64);
        _116 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as From<u64>>::from(move _117) -> [return: bb50, unwind continue];
    }

    bb50: {
        StorageDead(_117);
        StorageLive(_118);
        _118 = (*_80);
        _105 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as Sub>::sub(move _116, move _118) -> [return: bb51, unwind continue];
    }

    bb51: {
        StorageDead(_118);
        StorageDead(_116);
        goto -> bb53;
    }

    bb52: {
        StorageDead(_112);
        StorageDead(_111);
        StorageDead(_108);
        StorageDead(_107);
        _105 = _101;
        goto -> bb53;
    }

    bb53: {
        StorageDead(_106);
        StorageLive(_119);
        StorageLive(_120);
        _120 = &mut _22;
        StorageLive(_121);
        _121 = _105;
        _119 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as SubAssign>::sub_assign(move _120, move _121) -> [return: bb54, unwind continue];
    }

    bb54: {
        StorageDead(_121);
        StorageDead(_120);
        StorageDead(_119);
        StorageLive(_122);
        StorageLive(_123);
        _123 = &mut (*_80);
        StorageLive(_124);
        _124 = _105;
        _122 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as AddAssign>::add_assign(move _123, move _124) -> [return: bb55, unwind continue];
    }

    bb55: {
        StorageDead(_124);
        StorageDead(_123);
        StorageDead(_122);
        _72 = const ();
        StorageDead(_105);
        StorageDead(_101);
        StorageDead(_100);
        StorageDead(_80);
        StorageDead(_79);
        StorageDead(_78);
        StorageDead(_75);
        StorageDead(_73);
        StorageDead(_72);
        _46 = const ();
        goto -> bb33;
    }

    bb56: {
        _46 = const ();
        StorageDead(_125);
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_53);
        StorageDead(_51);
        StorageDead(_47);
        goto -> bb22;
    }

    bb57: {
        _45 = const ();
        StorageDead(_125);
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_53);
        goto -> bb61;
    }

    bb58: {
        StorageDead(_52);
        goto -> bb60;
    }

    bb59: {
        StorageDead(_49);
        StorageDead(_48);
        goto -> bb60;
    }

    bb60: {
        StorageLive(_128);
        _45 = const ();
        StorageDead(_128);
        goto -> bb61;
    }

    bb61: {
        StorageDead(_51);
        StorageDead(_47);
        StorageDead(_45);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        _136 = &mut ((*_1).18: [state::VaultAllocation; 25]);
        _135 = move _136 as &mut [state::VaultAllocation] (PointerCoercion(Unsize));
        StorageDead(_136);
        _134 = core::slice::<impl [VaultAllocation]>::iter_mut(move _135) -> [return: bb62, unwind continue];
    }

    bb62: {
        StorageDead(_135);
        StorageLive(_137);
        StorageLive(_138);
        StorageLive(_139);
        _139 = &_23;
        _138 = move _139 as &[fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>] (PointerCoercion(Unsize));
        StorageDead(_139);
        _137 = core::slice::<impl [FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>]>::iter(move _138) -> [return: bb63, unwind continue];
    }

    bb63: {
        StorageDead(_138);
        _133 = <std::slice::IterMut<'_, VaultAllocation> as Iterator>::zip::<std::slice::Iter<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>(move _134, move _137) -> [return: bb64, unwind continue];
    }

    bb64: {
        StorageDead(_137);
        StorageDead(_134);
        StorageLive(_140);
        _140 = {closure@programs\kvault\src\state.rs:373:21: 373:38};
        _132 = <Zip<std::slice::IterMut<'_, VaultAllocation>, std::slice::Iter<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>> as Iterator>::filter::<{closure@programs\kvault\src\state.rs:373:21: 373:38}>(move _133, move _140) -> [return: bb65, unwind continue];
    }

    bb65: {
        StorageDead(_140);
        StorageDead(_133);
        _131 = <Filter<Zip<std::slice::IterMut<'_, VaultAllocation>, std::slice::Iter<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:373:21: 373:38}> as IntoIterator>::into_iter(move _132) -> [return: bb66, unwind continue];
    }

    bb66: {
        StorageDead(_132);
        StorageLive(_141);
        _141 = move _131;
        goto -> bb67;
    }

    bb67: {
        StorageLive(_142);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        _145 = &mut _141;
        _144 = &mut (*_145);
        _143 = <Filter<Zip<std::slice::IterMut<'_, VaultAllocation>, std::slice::Iter<'_, FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>>>, {closure@programs\kvault\src\state.rs:373:21: 373:38}> as Iterator>::next(move _144) -> [return: bb68, unwind continue];
    }

    bb68: {
        StorageDead(_144);
        _146 = discriminant(_143);
        switchInt(move _146) -> [0: bb70, 1: bb69, otherwise: bb4];
    }

    bb69: {
        StorageLive(_148);
        _148 = move (((_143 as Some).0: (&mut state::VaultAllocation, &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)).0: &mut state::VaultAllocation);
        StorageLive(_149);
        _149 = (((_143 as Some).0: (&mut state::VaultAllocation, &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>)).1: &fixed::FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>>);
        StorageLive(_150);
        StorageLive(_151);
        _151 = &mut (*_148);
        StorageLive(_152);
        _152 = (*_149);
        _150 = VaultAllocation::set_token_target_allocation(move _151, move _152) -> [return: bb71, unwind continue];
    }

    bb70: {
        _130 = const ();
        StorageDead(_145);
        StorageDead(_143);
        StorageDead(_142);
        StorageDead(_141);
        StorageDead(_131);
        StorageDead(_130);
        StorageLive(_270);
        _270 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _270);
        StorageDead(_270);
        StorageDead(_44);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_14);
        StorageDead(_3);
        goto -> bb113;
    }

    bb71: {
        StorageDead(_152);
        StorageDead(_151);
        StorageDead(_150);
        StorageLive(_153);
        StorageLive(_154);
        _154 = &(*_149);
        StorageLive(_155);
        StorageLive(_156);
        StorageLive(_157);
        _157 = ((*_148).3: u64);
        _156 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as From<u64>>::from(move _157) -> [return: bb72, unwind continue];
    }

    bb72: {
        _155 = &_156;
        StorageDead(_157);
        _153 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as PartialOrd>::lt(move _154, move _155) -> [return: bb73, unwind continue];
    }

    bb73: {
        switchInt(move _153) -> [0: bb93, otherwise: bb74];
    }

    bb74: {
        StorageDead(_156);
        StorageDead(_155);
        StorageDead(_154);
        StorageLive(_158);
        StorageLive(_159);
        StorageLive(_160);
        _160 = ArrForm::<186>::new() -> [return: bb75, unwind continue];
    }

    bb75: {
        StorageLive(_161);
        StorageLive(_162);
        StorageLive(_163);
        _163 = &mut _160;
        StorageLive(_164);
        StorageLive(_165);
        StorageLive(_166);
        StorageLive(_167);
        _274 = const _;
        _167 = &(*_274);
        _166 = &(*_167);
        _165 = move _166 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_166);
        StorageLive(_169);
        StorageLive(_170);
        StorageLive(_171);
        StorageLive(_172);
        StorageLive(_173);
        StorageLive(_174);
        StorageLive(_175);
        _175 = &((*_148).0: anchor_lang::prelude::Pubkey);
        _174 = &(*_175);
        _173 = core::fmt::rt::Argument::<'_>::new_display::<anchor_lang::prelude::Pubkey>(move _174) -> [return: bb76, unwind continue];
    }

    bb76: {
        StorageDead(_174);
        StorageLive(_176);
        StorageLive(_177);
        StorageLive(_178);
        _178 = &((*_148).2: u64);
        _177 = &(*_178);
        _176 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _177) -> [return: bb77, unwind continue];
    }

    bb77: {
        StorageDead(_177);
        StorageLive(_179);
        StorageLive(_180);
        StorageLive(_181);
        _181 = &_14;
        _180 = &(*_181);
        _179 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _180) -> [return: bb78, unwind continue];
    }

    bb78: {
        StorageDead(_180);
        StorageLive(_182);
        StorageLive(_183);
        StorageLive(_184);
        StorageLive(_185);
        StorageLive(_186);
        _186 = &(*_149);
        _185 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_floor::<u64>(move _186) -> [return: bb79, unwind continue];
    }

    bb79: {
        StorageDead(_186);
        _184 = &_185;
        _183 = &(*_184);
        _182 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _183) -> [return: bb80, unwind continue];
    }

    bb80: {
        StorageDead(_183);
        StorageLive(_187);
        StorageLive(_188);
        StorageLive(_189);
        StorageLive(_190);
        StorageLive(_191);
        _191 = &_3;
        _190 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_floor::<u64>(move _191) -> [return: bb81, unwind continue];
    }

    bb81: {
        StorageDead(_191);
        _189 = &_190;
        _188 = &(*_189);
        _187 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _188) -> [return: bb82, unwind continue];
    }

    bb82: {
        StorageDead(_188);
        _172 = [move _173, move _176, move _179, move _182, move _187];
        StorageDead(_187);
        StorageDead(_182);
        StorageDead(_179);
        StorageDead(_176);
        StorageDead(_173);
        _171 = &_172;
        _170 = &(*_171);
        _169 = move _170 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_170);
        _164 = Arguments::<'_>::new_v1(move _165, move _169) -> [return: bb83, unwind continue];
    }

    bb83: {
        StorageDead(_169);
        StorageDead(_165);
        _162 = ArrForm::<186>::format(move _163, move _164) -> [return: bb84, unwind continue];
    }

    bb84: {
        StorageDead(_164);
        StorageDead(_163);
        StorageLive(_192);
        StorageLive(_193);
        _193 = &mut _160;
        _192 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _193 };
        StorageDead(_193);
        _161 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _162, move _192) -> [return: bb85, unwind continue];
    }

    bb85: {
        StorageDead(_192);
        StorageDead(_162);
        StorageDead(_190);
        StorageDead(_189);
        StorageDead(_185);
        StorageDead(_184);
        StorageDead(_181);
        StorageDead(_178);
        StorageDead(_175);
        StorageDead(_172);
        StorageDead(_171);
        StorageDead(_167);
        StorageDead(_161);
        _159 = move _160;
        StorageDead(_160);
        StorageLive(_194);
        StorageLive(_195);
        StorageLive(_196);
        StorageLive(_197);
        StorageLive(_198);
        StorageLive(_199);
        StorageLive(_200);
        StorageLive(_201);
        StorageLive(_202);
        StorageLive(_203);
        StorageLive(_204);
        _273 = const _;
        _204 = &(*_273);
        _203 = &(*_204);
        _202 = move _203 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_203);
        StorageLive(_206);
        StorageLive(_207);
        StorageLive(_208);
        StorageLive(_209);
        StorageLive(_210);
        StorageLive(_211);
        StorageLive(_212);
        StorageLive(_213);
        StorageLive(_214);
        _214 = &_159;
        _213 = ArrForm::<186>::as_str(move _214) -> [return: bb86, unwind continue];
    }

    bb86: {
        StorageDead(_214);
        _212 = &_213;
        _211 = &(*_212);
        _210 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _211) -> [return: bb87, unwind continue];
    }

    bb87: {
        StorageDead(_211);
        _209 = [move _210];
        StorageDead(_210);
        _208 = &_209;
        _207 = &(*_208);
        _206 = move _207 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_207);
        _201 = Arguments::<'_>::new_v1(move _202, move _206) -> [return: bb88, unwind continue];
    }

    bb88: {
        StorageDead(_206);
        StorageDead(_202);
        _200 = format(move _201) -> [return: bb89, unwind continue];
    }

    bb89: {
        StorageDead(_201);
        StorageDead(_213);
        StorageDead(_212);
        StorageDead(_209);
        StorageDead(_208);
        StorageDead(_204);
        _199 = move _200;
        StorageDead(_200);
        _198 = &_199;
        _197 = &(*_198);
        _196 = <String as Deref>::deref(move _197) -> [return: bb90, unwind: bb115];
    }

    bb90: {
        _195 = &(*_196);
        StorageDead(_197);
        _194 = solana_program::log::sol_log(move _195) -> [return: bb91, unwind: bb115];
    }

    bb91: {
        StorageDead(_195);
        drop(_199) -> [return: bb92, unwind: bb117];
    }

    bb92: {
        StorageDead(_199);
        StorageDead(_198);
        StorageDead(_196);
        StorageDead(_194);
        _158 = const ();
        StorageDead(_159);
        StorageDead(_158);
        _142 = const ();
        goto -> bb111;
    }

    bb93: {
        StorageDead(_156);
        StorageDead(_155);
        StorageDead(_154);
        StorageLive(_215);
        StorageLive(_216);
        StorageLive(_217);
        _217 = ArrForm::<186>::new() -> [return: bb94, unwind continue];
    }

    bb94: {
        StorageLive(_218);
        StorageLive(_219);
        StorageLive(_220);
        _220 = &mut _217;
        StorageLive(_221);
        StorageLive(_222);
        StorageLive(_223);
        StorageLive(_224);
        _276 = const _;
        _224 = &(*_276);
        _223 = &(*_224);
        _222 = move _223 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_223);
        StorageLive(_226);
        StorageLive(_227);
        StorageLive(_228);
        StorageLive(_229);
        StorageLive(_230);
        StorageLive(_231);
        StorageLive(_232);
        _232 = &((*_148).0: anchor_lang::prelude::Pubkey);
        _231 = &(*_232);
        _230 = core::fmt::rt::Argument::<'_>::new_display::<anchor_lang::prelude::Pubkey>(move _231) -> [return: bb95, unwind continue];
    }

    bb95: {
        StorageDead(_231);
        StorageLive(_233);
        StorageLive(_234);
        StorageLive(_235);
        _235 = &((*_148).2: u64);
        _234 = &(*_235);
        _233 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _234) -> [return: bb96, unwind continue];
    }

    bb96: {
        StorageDead(_234);
        StorageLive(_236);
        StorageLive(_237);
        StorageLive(_238);
        _238 = &_14;
        _237 = &(*_238);
        _236 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _237) -> [return: bb97, unwind continue];
    }

    bb97: {
        StorageDead(_237);
        StorageLive(_239);
        StorageLive(_240);
        StorageLive(_241);
        _241 = &((*_148).3: u64);
        _240 = &(*_241);
        _239 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _240) -> [return: bb98, unwind continue];
    }

    bb98: {
        StorageDead(_240);
        StorageLive(_242);
        StorageLive(_243);
        StorageLive(_244);
        StorageLive(_245);
        StorageLive(_246);
        _246 = &_3;
        _245 = <FixedU128<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UInt<typenum::uint::UTerm, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B1>, typenum::bit::B0>, typenum::bit::B0>> as kamino_lending::utils::FractionExtra>::to_floor::<u64>(move _246) -> [return: bb99, unwind continue];
    }

    bb99: {
        StorageDead(_246);
        _244 = &_245;
        _243 = &(*_244);
        _242 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _243) -> [return: bb100, unwind continue];
    }

    bb100: {
        StorageDead(_243);
        _229 = [move _230, move _233, move _236, move _239, move _242];
        StorageDead(_242);
        StorageDead(_239);
        StorageDead(_236);
        StorageDead(_233);
        StorageDead(_230);
        _228 = &_229;
        _227 = &(*_228);
        _226 = move _227 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_227);
        _221 = Arguments::<'_>::new_v1(move _222, move _226) -> [return: bb101, unwind continue];
    }

    bb101: {
        StorageDead(_226);
        StorageDead(_222);
        _219 = ArrForm::<186>::format(move _220, move _221) -> [return: bb102, unwind continue];
    }

    bb102: {
        StorageDead(_221);
        StorageDead(_220);
        StorageLive(_247);
        StorageLive(_248);
        _248 = &mut _217;
        _247 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _248 };
        StorageDead(_248);
        _218 = std::result::Result::<(), std::fmt::Error>::unwrap_or_else::<{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}>(move _219, move _247) -> [return: bb103, unwind continue];
    }

    bb103: {
        StorageDead(_247);
        StorageDead(_219);
        StorageDead(_245);
        StorageDead(_244);
        StorageDead(_241);
        StorageDead(_238);
        StorageDead(_235);
        StorageDead(_232);
        StorageDead(_229);
        StorageDead(_228);
        StorageDead(_224);
        StorageDead(_218);
        _216 = move _217;
        StorageDead(_217);
        StorageLive(_249);
        StorageLive(_250);
        StorageLive(_251);
        StorageLive(_252);
        StorageLive(_253);
        StorageLive(_254);
        StorageLive(_255);
        StorageLive(_256);
        StorageLive(_257);
        StorageLive(_258);
        StorageLive(_259);
        _275 = const _;
        _259 = &(*_275);
        _258 = &(*_259);
        _257 = move _258 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_258);
        StorageLive(_261);
        StorageLive(_262);
        StorageLive(_263);
        StorageLive(_264);
        StorageLive(_265);
        StorageLive(_266);
        StorageLive(_267);
        StorageLive(_268);
        StorageLive(_269);
        _269 = &_216;
        _268 = ArrForm::<186>::as_str(move _269) -> [return: bb104, unwind continue];
    }

    bb104: {
        StorageDead(_269);
        _267 = &_268;
        _266 = &(*_267);
        _265 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _266) -> [return: bb105, unwind continue];
    }

    bb105: {
        StorageDead(_266);
        _264 = [move _265];
        StorageDead(_265);
        _263 = &_264;
        _262 = &(*_263);
        _261 = move _262 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_262);
        _256 = Arguments::<'_>::new_v1(move _257, move _261) -> [return: bb106, unwind continue];
    }

    bb106: {
        StorageDead(_261);
        StorageDead(_257);
        _255 = format(move _256) -> [return: bb107, unwind continue];
    }

    bb107: {
        StorageDead(_256);
        StorageDead(_268);
        StorageDead(_267);
        StorageDead(_264);
        StorageDead(_263);
        StorageDead(_259);
        _254 = move _255;
        StorageDead(_255);
        _253 = &_254;
        _252 = &(*_253);
        _251 = <String as Deref>::deref(move _252) -> [return: bb108, unwind: bb114];
    }

    bb108: {
        _250 = &(*_251);
        StorageDead(_252);
        _249 = solana_program::log::sol_log(move _250) -> [return: bb109, unwind: bb114];
    }

    bb109: {
        StorageDead(_250);
        drop(_254) -> [return: bb110, unwind: bb117];
    }

    bb110: {
        StorageDead(_254);
        StorageDead(_253);
        StorageDead(_251);
        StorageDead(_249);
        _215 = const ();
        StorageDead(_216);
        StorageDead(_215);
        _142 = const ();
        goto -> bb111;
    }

    bb111: {
        StorageDead(_153);
        StorageDead(_149);
        StorageDead(_148);
        StorageDead(_145);
        StorageDead(_143);
        StorageDead(_142);
        _46 = const ();
        goto -> bb67;
    }

    bb112: {
        StorageDead(_3);
        goto -> bb113;
    }

    bb113: {
        return;
    }

    bb114 (cleanup): {
        drop(_254) -> [return: bb117, unwind terminate(cleanup)];
    }

    bb115 (cleanup): {
        drop(_199) -> [return: bb117, unwind terminate(cleanup)];
    }

    bb116 (cleanup): {
        drop(_88) -> [return: bb117, unwind terminate(cleanup)];
    }

    bb117 (cleanup): {
        resume;
    }

    bb118 (cleanup): {
        _283 = discriminant(_4);
        goto -> bb117;
    }
}
