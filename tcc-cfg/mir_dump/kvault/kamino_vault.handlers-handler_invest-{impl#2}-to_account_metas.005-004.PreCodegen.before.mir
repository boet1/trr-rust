// MIR for `handlers::handler_invest::<impl at programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18>::to_account_metas` before PreCodegen

fn handlers::handler_invest::<impl at programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18>::to_account_metas(_1: &handlers::handler_invest::Invest<'_>, _2: Option<bool>) -> Vec<AccountMeta> {
    debug self => _1;
    debug is_signer => _2;
    let mut _0: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _3: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let _4: ();
    let mut _5: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _6: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _7: &anchor_lang::prelude::Signer<'_>;
    let mut _8: std::option::Option<bool>;
    let _9: ();
    let mut _10: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _11: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _12: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _13: std::option::Option<bool>;
    let _14: ();
    let mut _15: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _16: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _17: &anchor_lang::prelude::AccountLoader<'_, state::VaultState>;
    let mut _18: std::option::Option<bool>;
    let _19: ();
    let mut _20: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _21: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _22: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _23: std::option::Option<bool>;
    let _24: ();
    let mut _25: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _26: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _27: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _28: std::option::Option<bool>;
    let _29: ();
    let mut _30: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _31: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _32: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _33: std::option::Option<bool>;
    let _34: ();
    let mut _35: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _36: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _37: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _38: std::option::Option<bool>;
    let _39: ();
    let mut _40: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _41: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _42: &anchor_lang::prelude::AccountLoader<'_, kamino_lending::Reserve>;
    let mut _43: std::option::Option<bool>;
    let _44: ();
    let mut _45: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _46: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _47: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _48: std::option::Option<bool>;
    let _49: ();
    let mut _50: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _51: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _52: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _53: std::option::Option<bool>;
    let _54: ();
    let mut _55: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _56: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _57: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _58: std::option::Option<bool>;
    let _59: ();
    let mut _60: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _61: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _62: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _63: std::option::Option<bool>;
    let _64: ();
    let mut _65: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _66: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _67: &anchor_lang::prelude::Program<'_, kamino_lending::program::KaminoLending>;
    let mut _68: std::option::Option<bool>;
    let _69: ();
    let mut _70: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _71: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _72: &anchor_lang::prelude::Program<'_, anchor_spl::token::Token>;
    let mut _73: std::option::Option<bool>;
    let _74: ();
    let mut _75: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _76: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _77: &anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _78: std::option::Option<bool>;
    let _79: ();
    let mut _80: &mut std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _81: std::vec::Vec<anchor_lang::prelude::AccountMeta>;
    let mut _82: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _83: std::option::Option<bool>;
    scope 1 {
        debug account_metas => _3;
    }

    bb0: {
        StorageLive(_3);
        _3 = Vec::<AccountMeta>::new() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = &mut _3;
        StorageLive(_6);
        StorageLive(_7);
        _7 = &((*_1).0: anchor_lang::prelude::Signer<'_>);
        StorageLive(_8);
        _8 = Option::<bool>::None;
        _6 = <anchor_lang::prelude::Signer<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _7, move _8) -> [return: bb2, unwind: bb34];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_7);
        _4 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _5, move _6) -> [return: bb3, unwind: bb34];
    }

    bb3: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &mut _3;
        StorageLive(_11);
        StorageLive(_12);
        _12 = &((*_1).1: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        StorageLive(_13);
        _13 = Option::<bool>::None;
        _11 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::ToAccountMetas>::to_account_metas(move _12, move _13) -> [return: bb4, unwind: bb34];
    }

    bb4: {
        StorageDead(_13);
        StorageDead(_12);
        _9 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _10, move _11) -> [return: bb5, unwind: bb34];
    }

    bb5: {
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &mut _3;
        StorageLive(_16);
        StorageLive(_17);
        _17 = &((*_1).2: anchor_lang::prelude::AccountLoader<'_, state::VaultState>);
        StorageLive(_18);
        _18 = Option::<bool>::None;
        _16 = <anchor_lang::prelude::AccountLoader<'_, state::VaultState> as anchor_lang::ToAccountMetas>::to_account_metas(move _17, move _18) -> [return: bb6, unwind: bb34];
    }

    bb6: {
        StorageDead(_18);
        StorageDead(_17);
        _14 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _15, move _16) -> [return: bb7, unwind: bb34];
    }

    bb7: {
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &mut _3;
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).3: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        StorageLive(_23);
        _23 = Option::<bool>::None;
        _21 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::ToAccountMetas>::to_account_metas(move _22, move _23) -> [return: bb8, unwind: bb34];
    }

    bb8: {
        StorageDead(_23);
        StorageDead(_22);
        _19 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _20, move _21) -> [return: bb9, unwind: bb34];
    }

    bb9: {
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &mut _3;
        StorageLive(_26);
        StorageLive(_27);
        _27 = &((*_1).4: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        StorageLive(_28);
        _28 = Option::<bool>::None;
        _26 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>> as anchor_lang::ToAccountMetas>::to_account_metas(move _27, move _28) -> [return: bb10, unwind: bb34];
    }

    bb10: {
        StorageDead(_28);
        StorageDead(_27);
        _24 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _25, move _26) -> [return: bb11, unwind: bb34];
    }

    bb11: {
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageLive(_29);
        StorageLive(_30);
        _30 = &mut _3;
        StorageLive(_31);
        StorageLive(_32);
        _32 = &((*_1).5: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_33);
        _33 = Option::<bool>::None;
        _31 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _32, move _33) -> [return: bb12, unwind: bb34];
    }

    bb12: {
        StorageDead(_33);
        StorageDead(_32);
        _29 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _30, move _31) -> [return: bb13, unwind: bb34];
    }

    bb13: {
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageLive(_34);
        StorageLive(_35);
        _35 = &mut _3;
        StorageLive(_36);
        StorageLive(_37);
        _37 = &((*_1).6: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        StorageLive(_38);
        _38 = Option::<bool>::None;
        _36 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::ToAccountMetas>::to_account_metas(move _37, move _38) -> [return: bb14, unwind: bb34];
    }

    bb14: {
        StorageDead(_38);
        StorageDead(_37);
        _34 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _35, move _36) -> [return: bb15, unwind: bb34];
    }

    bb15: {
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        StorageLive(_39);
        StorageLive(_40);
        _40 = &mut _3;
        StorageLive(_41);
        StorageLive(_42);
        _42 = &((*_1).7: anchor_lang::prelude::AccountLoader<'_, kamino_lending::Reserve>);
        StorageLive(_43);
        _43 = Option::<bool>::None;
        _41 = <anchor_lang::prelude::AccountLoader<'_, kamino_lending::Reserve> as anchor_lang::ToAccountMetas>::to_account_metas(move _42, move _43) -> [return: bb16, unwind: bb34];
    }

    bb16: {
        StorageDead(_43);
        StorageDead(_42);
        _39 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _40, move _41) -> [return: bb17, unwind: bb34];
    }

    bb17: {
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_39);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &mut _3;
        StorageLive(_46);
        StorageLive(_47);
        _47 = &((*_1).8: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_48);
        _48 = Option::<bool>::None;
        _46 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _47, move _48) -> [return: bb18, unwind: bb34];
    }

    bb18: {
        StorageDead(_48);
        StorageDead(_47);
        _44 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _45, move _46) -> [return: bb19, unwind: bb34];
    }

    bb19: {
        StorageDead(_46);
        StorageDead(_45);
        StorageDead(_44);
        StorageLive(_49);
        StorageLive(_50);
        _50 = &mut _3;
        StorageLive(_51);
        StorageLive(_52);
        _52 = &((*_1).9: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_53);
        _53 = Option::<bool>::None;
        _51 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _52, move _53) -> [return: bb20, unwind: bb34];
    }

    bb20: {
        StorageDead(_53);
        StorageDead(_52);
        _49 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _50, move _51) -> [return: bb21, unwind: bb34];
    }

    bb21: {
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_49);
        StorageLive(_54);
        StorageLive(_55);
        _55 = &mut _3;
        StorageLive(_56);
        StorageLive(_57);
        _57 = &((*_1).10: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_58);
        _58 = Option::<bool>::None;
        _56 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _57, move _58) -> [return: bb22, unwind: bb34];
    }

    bb22: {
        StorageDead(_58);
        StorageDead(_57);
        _54 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _55, move _56) -> [return: bb23, unwind: bb34];
    }

    bb23: {
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_54);
        StorageLive(_59);
        StorageLive(_60);
        _60 = &mut _3;
        StorageLive(_61);
        StorageLive(_62);
        _62 = &((*_1).11: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_63);
        _63 = Option::<bool>::None;
        _61 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _62, move _63) -> [return: bb24, unwind: bb34];
    }

    bb24: {
        StorageDead(_63);
        StorageDead(_62);
        _59 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _60, move _61) -> [return: bb25, unwind: bb34];
    }

    bb25: {
        StorageDead(_61);
        StorageDead(_60);
        StorageDead(_59);
        StorageLive(_64);
        StorageLive(_65);
        _65 = &mut _3;
        StorageLive(_66);
        StorageLive(_67);
        _67 = &((*_1).12: anchor_lang::prelude::Program<'_, kamino_lending::program::KaminoLending>);
        StorageLive(_68);
        _68 = Option::<bool>::None;
        _66 = <anchor_lang::prelude::Program<'_, KaminoLending> as anchor_lang::ToAccountMetas>::to_account_metas(move _67, move _68) -> [return: bb26, unwind: bb34];
    }

    bb26: {
        StorageDead(_68);
        StorageDead(_67);
        _64 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _65, move _66) -> [return: bb27, unwind: bb34];
    }

    bb27: {
        StorageDead(_66);
        StorageDead(_65);
        StorageDead(_64);
        StorageLive(_69);
        StorageLive(_70);
        _70 = &mut _3;
        StorageLive(_71);
        StorageLive(_72);
        _72 = &((*_1).13: anchor_lang::prelude::Program<'_, anchor_spl::token::Token>);
        StorageLive(_73);
        _73 = Option::<bool>::None;
        _71 = <anchor_lang::prelude::Program<'_, Token> as anchor_lang::ToAccountMetas>::to_account_metas(move _72, move _73) -> [return: bb28, unwind: bb34];
    }

    bb28: {
        StorageDead(_73);
        StorageDead(_72);
        _69 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _70, move _71) -> [return: bb29, unwind: bb34];
    }

    bb29: {
        StorageDead(_71);
        StorageDead(_70);
        StorageDead(_69);
        StorageLive(_74);
        StorageLive(_75);
        _75 = &mut _3;
        StorageLive(_76);
        StorageLive(_77);
        _77 = &((*_1).14: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>);
        StorageLive(_78);
        _78 = Option::<bool>::None;
        _76 = <anchor_lang::prelude::Interface<'_, TokenInterface> as anchor_lang::ToAccountMetas>::to_account_metas(move _77, move _78) -> [return: bb30, unwind: bb34];
    }

    bb30: {
        StorageDead(_78);
        StorageDead(_77);
        _74 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _75, move _76) -> [return: bb31, unwind: bb34];
    }

    bb31: {
        StorageDead(_76);
        StorageDead(_75);
        StorageDead(_74);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &mut _3;
        StorageLive(_81);
        StorageLive(_82);
        _82 = &((*_1).15: anchor_lang::prelude::AccountInfo<'_>);
        StorageLive(_83);
        _83 = Option::<bool>::None;
        _81 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountMetas>::to_account_metas(move _82, move _83) -> [return: bb32, unwind: bb34];
    }

    bb32: {
        StorageDead(_83);
        StorageDead(_82);
        _79 = <Vec<AccountMeta> as Extend<AccountMeta>>::extend::<Vec<AccountMeta>>(move _80, move _81) -> [return: bb33, unwind: bb34];
    }

    bb33: {
        StorageDead(_81);
        StorageDead(_80);
        StorageDead(_79);
        _0 = move _3;
        StorageDead(_3);
        return;
    }

    bb34 (cleanup): {
        drop(_3) -> [return: bb35, unwind terminate(cleanup)];
    }

    bb35 (cleanup): {
        resume;
    }
}
