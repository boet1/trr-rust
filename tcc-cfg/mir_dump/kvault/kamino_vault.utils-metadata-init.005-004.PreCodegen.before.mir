// MIR for `init` before PreCodegen

fn init(_1: anchor_lang::prelude::AccountInfo<'_>, _2: anchor_lang::prelude::AccountInfo<'_>, _3: anchor_lang::prelude::AccountInfo<'_>, _4: anchor_lang::prelude::AccountInfo<'_>, _5: anchor_lang::prelude::AccountInfo<'_>, _6: anchor_lang::prelude::AccountInfo<'_>, _7: anchor_lang::prelude::AccountInfo<'_>, _8: anchor_lang::prelude::AccountInfo<'_>, _9: u64, _10: utils::metadata::TokenMetadata) -> std::result::Result<(), anchor_lang::error::Error> {
    debug vault_state => _1;
    debug metadata_program => _2;
    debug shares_mint => _3;
    debug shares_mint_authority => _4;
    debug shares_metadata => _5;
    debug payer => _6;
    debug system_program => _7;
    debug rent => _8;
    debug mint_authority_bump => _9;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _11: std::string::String;
    let _12: std::string::String;
    let _13: std::string::String;
    let mut _15: &anchor_lang::prelude::AccountInfo<'_>;
    let _17: [&[u8]; 3];
    let mut _18: &[u8];
    let mut _19: &[u8];
    let mut _20: &[u8; 9];
    let _21: &[u8; 9];
    let mut _22: &[u8];
    let _23: &[u8];
    let mut _24: &[u8];
    let _25: &[u8];
    let mut _26: &anchor_lang::prelude::Pubkey;
    let mut _27: &[u8];
    let mut _28: &[u8; 1];
    let _29: &[u8; 1];
    let _30: [u8; 1];
    let mut _31: u8;
    let mut _32: u64;
    let mut _34: &[&[&[u8]]; 1];
    let _35: &[&[&[u8]]; 1];
    let _36: [&[&[u8]]; 1];
    let mut _37: &[&[u8]];
    let mut _38: &[&[u8]; 3];
    let _39: ();
    let mut _40: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>>;
    let mut _41: std::result::Result<(), anchor_lang::error::Error>;
    let mut _42: anchor_lang::context::CpiContext<'_, '_, '_, '_, anchor_spl::metadata::CreateMetadataAccountsV3<'_>>;
    let mut _43: anchor_lang::prelude::AccountInfo<'_>;
    let mut _44: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _45: anchor_spl::metadata::CreateMetadataAccountsV3<'_>;
    let mut _46: anchor_lang::prelude::AccountInfo<'_>;
    let mut _47: anchor_lang::prelude::AccountInfo<'_>;
    let mut _48: anchor_lang::prelude::AccountInfo<'_>;
    let mut _49: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _50: anchor_lang::prelude::AccountInfo<'_>;
    let mut _51: anchor_lang::prelude::AccountInfo<'_>;
    let mut _52: anchor_lang::prelude::AccountInfo<'_>;
    let mut _53: anchor_lang::prelude::AccountInfo<'_>;
    let mut _54: &[&[&[u8]]];
    let mut _55: anchor_spl::metadata::mpl_token_metadata::types::DataV2;
    let mut _56: std::string::String;
    let mut _57: std::string::String;
    let mut _58: std::string::String;
    let mut _59: std::option::Option<std::vec::Vec<anchor_spl::metadata::mpl_token_metadata::types::Creator>>;
    let mut _60: std::option::Option<anchor_spl::metadata::mpl_token_metadata::types::Collection>;
    let mut _61: std::option::Option<anchor_spl::metadata::mpl_token_metadata::types::Uses>;
    let mut _62: std::option::Option<anchor_spl::metadata::mpl_token_metadata::types::CollectionDetails>;
    let mut _63: isize;
    let mut _65: !;
    let mut _66: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _68: ();
    let mut _69: bool;
    let mut _70: bool;
    let mut _71: bool;
    let mut _72: bool;
    let mut _73: bool;
    let mut _74: bool;
    let mut _75: bool;
    let mut _76: bool;
    let mut _77: bool;
    let mut _78: bool;
    let mut _79: isize;
    let mut _80: isize;
    let mut _81: isize;
    let mut _82: isize;
    let mut _83: isize;
    scope 1 {
        debug name => _11;
        debug symbol => _12;
        debug uri => _13;
        let _14: anchor_lang::prelude::Pubkey;
        scope 2 {
            debug vault_state_key => _14;
            let _16: &[&[u8]; 3];
            scope 3 {
                debug seeds => _16;
                let _33: &[&[&[u8]]];
                scope 4 {
                    debug signer_seeds => _33;
                    let _64: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                    let _67: ();
                    scope 5 {
                        debug residual => _64;
                        scope 6 {
                        }
                    }
                    scope 7 {
                        debug val => _67;
                        scope 8 {
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _78 = const false;
        _77 = const false;
        _76 = const false;
        _75 = const false;
        _74 = const false;
        _73 = const false;
        _72 = const false;
        _71 = const false;
        _70 = const false;
        _69 = const false;
        _78 = const true;
        _77 = const true;
        _76 = const true;
        _75 = const true;
        _74 = const true;
        _73 = const true;
        StorageLive(_11);
        _72 = const true;
        _11 = move (_10.0: std::string::String);
        StorageLive(_12);
        _71 = const true;
        _12 = move (_10.1: std::string::String);
        StorageLive(_13);
        _70 = const true;
        _13 = move (_10.2: std::string::String);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &_1;
        _14 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::Key>::key(move _15) -> [return: bb1, unwind: bb33];
    }

    bb1: {
        StorageDead(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        _21 = const _;
        _20 = &(*_21);
        _19 = move _20 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_20);
        _18 = _19;
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        _26 = &_14;
        _25 = <anchor_lang::prelude::Pubkey as AsRef<[u8]>>::as_ref(move _26) -> [return: bb2, unwind: bb33];
    }

    bb2: {
        _24 = &(*_25);
        StorageDead(_26);
        _23 = <[u8] as AsRef<[u8]>>::as_ref(move _24) -> [return: bb3, unwind: bb33];
    }

    bb3: {
        _22 = &(*_23);
        StorageDead(_24);
        StorageLive(_27);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        _32 = _9;
        _31 = move _32 as u8 (IntToInt);
        StorageDead(_32);
        _30 = [move _31];
        StorageDead(_31);
        _29 = &_30;
        _28 = &(*_29);
        _27 = move _28 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_28);
        _17 = [move _18, move _22, move _27];
        StorageDead(_27);
        StorageDead(_22);
        StorageDead(_18);
        _16 = &_17;
        StorageDead(_29);
        StorageDead(_25);
        StorageDead(_23);
        StorageDead(_21);
        StorageDead(_19);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = &(*_16);
        _37 = move _38 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_38);
        _36 = [move _37];
        StorageDead(_37);
        _35 = &_36;
        _34 = &(*_35);
        _33 = move _34 as &[&[&[u8]]] (PointerCoercion(Unsize));
        StorageDead(_34);
        StorageDead(_35);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = &_2;
        _43 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _44) -> [return: bb4, unwind: bb33];
    }

    bb4: {
        _69 = const true;
        StorageDead(_44);
        StorageLive(_45);
        StorageLive(_46);
        _76 = const false;
        _46 = move _5;
        StorageLive(_47);
        _78 = const false;
        _47 = move _3;
        StorageLive(_48);
        StorageLive(_49);
        _49 = &_4;
        _48 = <anchor_lang::prelude::AccountInfo<'_> as Clone>::clone(move _49) -> [return: bb5, unwind: bb16];
    }

    bb5: {
        StorageDead(_49);
        StorageLive(_50);
        _75 = const false;
        _50 = move _6;
        StorageLive(_51);
        _77 = const false;
        _51 = move _4;
        StorageLive(_52);
        _74 = const false;
        _52 = move _7;
        StorageLive(_53);
        _73 = const false;
        _53 = move _8;
        _45 = CreateMetadataAccountsV3::<'_> { metadata: move _46, mint: move _47, mint_authority: move _48, payer: move _50, update_authority: move _51, system_program: move _52, rent: move _53 };
        StorageDead(_53);
        StorageDead(_52);
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_48);
        StorageDead(_47);
        StorageDead(_46);
        StorageLive(_54);
        _54 = &(*_33);
        _69 = const false;
        _42 = anchor_lang::context::CpiContext::<'_, '_, '_, '_, CreateMetadataAccountsV3<'_>>::new_with_signer(move _43, move _45, move _54) -> [return: bb6, unwind: bb31];
    }

    bb6: {
        StorageDead(_54);
        StorageDead(_45);
        _69 = const false;
        StorageDead(_43);
        StorageLive(_55);
        StorageLive(_56);
        _72 = const false;
        _56 = move _11;
        StorageLive(_57);
        _71 = const false;
        _57 = move _12;
        StorageLive(_58);
        _70 = const false;
        _58 = move _13;
        StorageLive(_59);
        _59 = Option::<Vec<anchor_spl::metadata::mpl_token_metadata::types::Creator>>::None;
        StorageLive(_60);
        _60 = Option::<anchor_spl::metadata::mpl_token_metadata::types::Collection>::None;
        StorageLive(_61);
        _61 = Option::<Uses>::None;
        _55 = DataV2 { name: move _56, symbol: move _57, uri: move _58, seller_fee_basis_points: const 0_u16, creators: move _59, collection: move _60, uses: move _61 };
        StorageDead(_61);
        StorageDead(_60);
        StorageDead(_59);
        StorageDead(_58);
        StorageDead(_57);
        StorageDead(_56);
        StorageLive(_62);
        _62 = Option::<CollectionDetails>::None;
        _41 = create_metadata_accounts_v3(move _42, move _55, const true, const true, move _62) -> [return: bb7, unwind: bb33];
    }

    bb7: {
        StorageDead(_62);
        StorageDead(_55);
        StorageDead(_42);
        _40 = <std::result::Result<(), anchor_lang::error::Error> as Try>::branch(move _41) -> [return: bb8, unwind: bb33];
    }

    bb8: {
        StorageDead(_41);
        _63 = discriminant(_40);
        switchInt(move _63) -> [0: bb9, 1: bb11, otherwise: bb10];
    }

    bb9: {
        StorageLive(_67);
        _67 = ((_40 as Continue).0: ());
        _39 = _67;
        StorageDead(_67);
        _79 = discriminant(_40);
        StorageDead(_40);
        StorageDead(_39);
        StorageLive(_68);
        _68 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _68);
        StorageDead(_68);
        StorageDead(_36);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_14);
        _70 = const false;
        StorageDead(_13);
        _71 = const false;
        StorageDead(_12);
        _72 = const false;
        StorageDead(_11);
        drop(_2) -> [return: bb13, unwind: bb27];
    }

    bb10: {
        unreachable;
    }

    bb11: {
        StorageLive(_64);
        _64 = move ((_40 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_66);
        _66 = move _64;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _66) -> [return: bb12, unwind: bb29];
    }

    bb12: {
        StorageDead(_66);
        StorageDead(_64);
        _81 = discriminant(_40);
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_36);
        StorageDead(_33);
        StorageDead(_30);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_14);
        _70 = const false;
        StorageDead(_13);
        _71 = const false;
        StorageDead(_12);
        _72 = const false;
        StorageDead(_11);
        drop(_2) -> [return: bb14, unwind: bb27];
    }

    bb13: {
        drop(_1) -> [return: bb15, unwind: bb28];
    }

    bb14: {
        drop(_1) -> [return: bb15, unwind: bb28];
    }

    bb15: {
        return;
    }

    bb16 (cleanup): {
        drop(_47) -> [return: bb17, unwind terminate(cleanup)];
    }

    bb17 (cleanup): {
        drop(_46) -> [return: bb31, unwind terminate(cleanup)];
    }

    bb18 (cleanup): {
        switchInt(_71) -> [0: bb19, otherwise: bb34];
    }

    bb19 (cleanup): {
        switchInt(_72) -> [0: bb20, otherwise: bb35];
    }

    bb20 (cleanup): {
        switchInt(_73) -> [0: bb21, otherwise: bb36];
    }

    bb21 (cleanup): {
        switchInt(_74) -> [0: bb22, otherwise: bb37];
    }

    bb22 (cleanup): {
        switchInt(_75) -> [0: bb23, otherwise: bb38];
    }

    bb23 (cleanup): {
        switchInt(_76) -> [0: bb24, otherwise: bb39];
    }

    bb24 (cleanup): {
        switchInt(_77) -> [0: bb25, otherwise: bb40];
    }

    bb25 (cleanup): {
        switchInt(_78) -> [0: bb26, otherwise: bb41];
    }

    bb26 (cleanup): {
        drop(_2) -> [return: bb27, unwind terminate(cleanup)];
    }

    bb27 (cleanup): {
        drop(_1) -> [return: bb28, unwind terminate(cleanup)];
    }

    bb28 (cleanup): {
        resume;
    }

    bb29 (cleanup): {
        _83 = discriminant(_40);
        goto -> bb33;
    }

    bb30 (cleanup): {
        drop(_43) -> [return: bb33, unwind terminate(cleanup)];
    }

    bb31 (cleanup): {
        switchInt(_69) -> [0: bb33, otherwise: bb30];
    }

    bb32 (cleanup): {
        drop(_13) -> [return: bb18, unwind terminate(cleanup)];
    }

    bb33 (cleanup): {
        switchInt(_70) -> [0: bb18, otherwise: bb32];
    }

    bb34 (cleanup): {
        drop(_12) -> [return: bb19, unwind terminate(cleanup)];
    }

    bb35 (cleanup): {
        drop(_11) -> [return: bb20, unwind terminate(cleanup)];
    }

    bb36 (cleanup): {
        drop(_8) -> [return: bb21, unwind terminate(cleanup)];
    }

    bb37 (cleanup): {
        drop(_7) -> [return: bb22, unwind terminate(cleanup)];
    }

    bb38 (cleanup): {
        drop(_6) -> [return: bb23, unwind terminate(cleanup)];
    }

    bb39 (cleanup): {
        drop(_5) -> [return: bb24, unwind terminate(cleanup)];
    }

    bb40 (cleanup): {
        drop(_4) -> [return: bb25, unwind terminate(cleanup)];
    }

    bb41 (cleanup): {
        drop(_3) -> [return: bb26, unwind terminate(cleanup)];
    }
}
