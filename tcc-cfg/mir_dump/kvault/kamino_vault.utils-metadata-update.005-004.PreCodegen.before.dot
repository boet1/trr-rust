digraph Mir_0_594 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn utils::metadata::update(_1: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _2: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _3: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _4: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, _5: u64, _6: utils::metadata::TokenMetadata) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _7: std::string::String;<br align="left"/>let _8: std::string::String;<br align="left"/>let _9: std::string::String;<br align="left"/>let _10: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _12: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _13: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _14: &amp;ReErased [u8];<br align="left"/>let mut _15: &amp;ReErased [u8];<br align="left"/>let mut _16: &amp;ReErased [u8; 9_usize];<br align="left"/>let _17: &amp;ReErased [u8; 9_usize];<br align="left"/>let mut _18: &amp;ReErased [u8];<br align="left"/>let _19: &amp;ReErased [u8];<br align="left"/>let mut _20: &amp;ReErased [u8];<br align="left"/>let _21: &amp;ReErased [u8];<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: &amp;ReErased [u8];<br align="left"/>let mut _24: &amp;ReErased [u8; 1_usize];<br align="left"/>let _25: &amp;ReErased [u8; 1_usize];<br align="left"/>let _26: [u8; 1_usize];<br align="left"/>let mut _27: u8;<br align="left"/>let mut _28: u64;<br align="left"/>let _29: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _30: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _31: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _32: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _35: ();<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _37: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_spl::metadata::UpdateMetadataAccountsV2&lt;ReErased&gt;&gt;;<br align="left"/>let mut _39: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _40: anchor_spl::metadata::UpdateMetadataAccountsV2&lt;ReErased&gt;;<br align="left"/>let mut _41: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _42: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _44: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _45: std::option::Option&lt;anchor_spl::metadata::mpl_token_metadata::types::DataV2&gt;;<br align="left"/>let mut _46: anchor_spl::metadata::mpl_token_metadata::types::DataV2;<br align="left"/>let mut _47: std::string::String;<br align="left"/>let mut _48: std::string::String;<br align="left"/>let mut _49: std::string::String;<br align="left"/>let mut _50: std::option::Option&lt;std::vec::Vec&lt;anchor_spl::metadata::mpl_token_metadata::types::Creator, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _51: std::option::Option&lt;anchor_spl::metadata::mpl_token_metadata::types::Collection&gt;;<br align="left"/>let mut _52: std::option::Option&lt;anchor_spl::metadata::mpl_token_metadata::types::Uses&gt;;<br align="left"/>let mut _53: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _54: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _59: ();<br align="left"/>let mut _60: ();<br align="left"/>let mut _61: bool;<br align="left"/>let mut _62: bool;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: bool;<br align="left"/>let mut _66: bool;<br align="left"/>let mut _67: isize;<br align="left"/>let mut _68: isize;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: isize;<br align="left"/>let mut _71: isize;<br align="left"/>debug vault_state =&gt; _1;<br align="left"/>debug metadata_program =&gt; _2;<br align="left"/>debug shares_mint_authority =&gt; _3;<br align="left"/>debug shares_metadata =&gt; _4;<br align="left"/>debug mint_authority_bump =&gt; _5;<br align="left"/>debug name =&gt; _7;<br align="left"/>debug symbol =&gt; _8;<br align="left"/>debug uri =&gt; _9;<br align="left"/>debug vault_state_key =&gt; _10;<br align="left"/>debug seeds =&gt; _12;<br align="left"/>debug signer_seeds =&gt; _29;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>>;
    bb0__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_66 = const false<br/>_65 = const false<br/>_64 = const false<br/>_63 = const false<br/>_62 = const false<br/>_61 = const false<br/>_66 = const true<br/>_65 = const true<br/>_64 = const true<br/>StorageLive(_7)<br/>_63 = const true<br/>_7 = move (_6.0: std::string::String)<br/>StorageLive(_8)<br/>_62 = const true<br/>_8 = move (_6.1: std::string::String)<br/>StorageLive(_9)<br/>_61 = const true<br/>_9 = move (_6.2: std::string::String)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;_1<br/></td></tr><tr><td align="left">_10 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _11)</td></tr></table>>];
    bb1__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = const _<br/>_16 = &amp;(*_17)<br/>_15 = move _16 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_16)<br/>_14 = _15<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;_10<br/></td></tr><tr><td align="left">_21 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _22)</td></tr></table>>];
    bb2__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_20 = &amp;(*_21)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_19 = &lt;[u8] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _20)</td></tr></table>>];
    bb3__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_18 = &amp;(*_19)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _5<br/>_27 = move _28 as u8 (IntToInt)<br/>StorageDead(_28)<br/>_26 = [move _27]<br/>StorageDead(_27)<br/>_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/>_23 = move _24 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/>_13 = [move _14, move _18, move _23]<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>_12 = &amp;_13<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(*_12)<br/>_33 = move _34 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/>_32 = [move _33]<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/>StorageDead(_31)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_66 = const false<br/>_39 = move _2<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_64 = const false<br/>_41 = move _4<br/>StorageLive(_42)<br/>_65 = const false<br/>_42 = move _3<br/>_40 = UpdateMetadataAccountsV2::&lt;'_&gt; { metadata: move _41, update_authority: move _42 }<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageLive(_43)<br/>_43 = &amp;(*_29)<br/></td></tr><tr><td align="left">_38 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, UpdateMetadataAccountsV2&lt;'_&gt;&gt;::new_with_signer(move _39, move _40, move _43)</td></tr></table>>];
    bb4__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_44)<br/>_44 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_63 = const false<br/>_47 = move _7<br/>StorageLive(_48)<br/>_62 = const false<br/>_48 = move _8<br/>StorageLive(_49)<br/>_61 = const false<br/>_49 = move _9<br/>StorageLive(_50)<br/>_50 = Option::&lt;Vec&lt;anchor_spl::metadata::mpl_token_metadata::types::Creator&gt;&gt;::None<br/>StorageLive(_51)<br/>_51 = Option::&lt;anchor_spl::metadata::mpl_token_metadata::types::Collection&gt;::None<br/>StorageLive(_52)<br/>_52 = Option::&lt;Uses&gt;::None<br/>_46 = DataV2 { name: move _47, symbol: move _48, uri: move _49, seller_fee_basis_points: const 0_u16, creators: move _50, collection: move _51, uses: move _52 }<br/>StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>_45 = Option::&lt;DataV2&gt;::Some(move _46)<br/>StorageDead(_46)<br/>StorageLive(_53)<br/>_53 = Option::&lt;bool&gt;::None<br/>StorageLive(_54)<br/>_54 = Option::&lt;bool&gt;::None<br/></td></tr><tr><td align="left">_37 = update_metadata_accounts_v2(move _38, move _44, move _45, move _53, move _54)</td></tr></table>>];
    bb5__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb6__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_55 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb7__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_36 as Continue).0: ())<br/>_35 = _59<br/>StorageDead(_59)<br/>_67 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_60)<br/>_60 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _60)<br/>StorageDead(_60)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>_61 = const false<br/>StorageDead(_9)<br/>_62 = const false<br/>StorageDead(_8)<br/>_63 = const false<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb8__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_58)<br/>_58 = move _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb10__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>_69 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>_61 = const false<br/>StorageDead(_9)<br/>_62 = const false<br/>StorageDead(_8)<br/>_63 = const false<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb11__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">return</td></tr></table>>];
    bb12__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">12 (cleanup)</td></tr><tr><td align="left">switchInt(_62)</td></tr></table>>];
    bb13__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">13 (cleanup)</td></tr><tr><td align="left">switchInt(_63)</td></tr></table>>];
    bb14__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">14 (cleanup)</td></tr><tr><td align="left">switchInt(_64)</td></tr></table>>];
    bb15__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">15 (cleanup)</td></tr><tr><td align="left">switchInt(_65)</td></tr></table>>];
    bb16__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">switchInt(_66)</td></tr></table>>];
    bb17__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb18__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb19__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left" balign="left">_71 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">20 (cleanup)</td></tr><tr><td align="left">drop(_9)</td></tr></table>>];
    bb21__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">switchInt(_61)</td></tr></table>>];
    bb22__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_8)</td></tr></table>>];
    bb23__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb24__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb25__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb26__0_594 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb0__0_594 -> bb1__0_594 [label="return"];
    bb0__0_594 -> bb21__0_594 [label="unwind"];
    bb1__0_594 -> bb2__0_594 [label="return"];
    bb1__0_594 -> bb21__0_594 [label="unwind"];
    bb2__0_594 -> bb3__0_594 [label="return"];
    bb2__0_594 -> bb21__0_594 [label="unwind"];
    bb3__0_594 -> bb4__0_594 [label="return"];
    bb3__0_594 -> bb21__0_594 [label="unwind"];
    bb4__0_594 -> bb5__0_594 [label="return"];
    bb4__0_594 -> bb21__0_594 [label="unwind"];
    bb5__0_594 -> bb6__0_594 [label="return"];
    bb5__0_594 -> bb21__0_594 [label="unwind"];
    bb6__0_594 -> bb7__0_594 [label="0"];
    bb6__0_594 -> bb9__0_594 [label="1"];
    bb6__0_594 -> bb8__0_594 [label="otherwise"];
    bb7__0_594 -> bb11__0_594 [label="return"];
    bb7__0_594 -> bb18__0_594 [label="unwind"];
    bb9__0_594 -> bb10__0_594 [label="return"];
    bb9__0_594 -> bb19__0_594 [label="unwind"];
    bb10__0_594 -> bb11__0_594 [label="return"];
    bb10__0_594 -> bb18__0_594 [label="unwind"];
    bb12__0_594 -> bb13__0_594 [label="0"];
    bb12__0_594 -> bb22__0_594 [label="otherwise"];
    bb13__0_594 -> bb14__0_594 [label="0"];
    bb13__0_594 -> bb23__0_594 [label="otherwise"];
    bb14__0_594 -> bb15__0_594 [label="0"];
    bb14__0_594 -> bb24__0_594 [label="otherwise"];
    bb15__0_594 -> bb16__0_594 [label="0"];
    bb15__0_594 -> bb25__0_594 [label="otherwise"];
    bb16__0_594 -> bb17__0_594 [label="0"];
    bb16__0_594 -> bb26__0_594 [label="otherwise"];
    bb17__0_594 -> bb18__0_594 [label="return"];
    bb19__0_594 -> bb21__0_594 [label=""];
    bb20__0_594 -> bb12__0_594 [label="return"];
    bb21__0_594 -> bb12__0_594 [label="0"];
    bb21__0_594 -> bb20__0_594 [label="otherwise"];
    bb22__0_594 -> bb13__0_594 [label="return"];
    bb23__0_594 -> bb14__0_594 [label="return"];
    bb24__0_594 -> bb15__0_594 [label="return"];
    bb25__0_594 -> bb16__0_594 [label="return"];
    bb26__0_594 -> bb17__0_594 [label="return"];
}
