digraph Mir_0_2864 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn __event_dispatch(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _6: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _7: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _9: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _10: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _15: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: anchor_lang::error::Error;<br align="left"/>let mut _20: anchor_lang::error::Error;<br align="left"/>let mut _21: anchor_lang::error::ErrorCode;<br align="left"/>let _22: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _26: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _27: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _28: &amp;ReErased [u8];<br align="left"/>let mut _29: &amp;ReErased [u8; 17_usize];<br align="left"/>let _30: &amp;ReErased [u8; 17_usize];<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _32: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _33: ();<br align="left"/>let mut _34: bool;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _36: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _37: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: anchor_lang::error::Error;<br align="left"/>let mut _41: anchor_lang::error::Error;<br align="left"/>let mut _42: anchor_lang::error::Error;<br align="left"/>let mut _43: anchor_lang::error::ErrorCode;<br align="left"/>let mut _44: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _45: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _46: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _47: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _48: ();<br align="left"/>let mut _49: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _50: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: isize;<br align="left"/>let mut _53: isize;<br align="left"/>let mut _54: isize;<br align="left"/>let mut _55: isize;<br align="left"/>let mut _56: isize;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug accounts =&gt; _2;<br align="left"/>debug event_data =&gt; _3;<br align="left"/>debug given_event_authority =&gt; _4;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug expected_event_authority =&gt; _22;<br align="left"/>>;
    bb0__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_51 = const false<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_2)<br/></td></tr><tr><td align="left">_9 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _10)</td></tr></table>>];
    bb1__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_8 = &amp;mut _9<br/>_7 = &amp;mut (*_8)<br/></td></tr><tr><td align="left">_6 = anchor_lang::prelude::next_account_info::&lt;'_, '_, std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;(move _7)</td></tr></table>>];
    bb2__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb3__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_11 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_5 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_4 = _15<br/>StorageDead(_15)<br/>_52 = discriminant(_5)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = ((*_4).5: bool)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb5__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_54 = discriminant(_5)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = ConstraintSigner<br/></td></tr><tr><td align="left">_20 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _21)</td></tr></table>>];
    bb9__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _20, const &quot;event_authority&quot;)</td></tr></table>>];
    bb10__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _19)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_16 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_49 = const _<br/>_26 = &amp;(*_49)<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_1<br/>_50 = deref_copy (*_32)<br/>_31 = &amp;(*_50)<br/></td></tr><tr><td align="left">_23 = anchor_lang::prelude::Pubkey::find_program_address(move _24, move _31)</td></tr></table>>];
    bb12__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_24)<br/>StorageLive(_22)<br/>_22 = (_23.0: anchor_lang::prelude::Pubkey)<br/>StorageDead(_32)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;(*_4)<br/></td></tr><tr><td align="left">_36 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _37)</td></tr></table>>];
    bb13__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_35 = &amp;_36<br/>StorageDead(_37)<br/>StorageLive(_38)<br/>_38 = &amp;_22<br/></td></tr><tr><td align="left">_34 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _35, move _38)</td></tr></table>>];
    bb14__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb15__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = ConstraintSeeds<br/></td></tr><tr><td align="left">_42 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _43)</td></tr></table>>];
    bb16__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _42, const &quot;event_authority&quot;)</td></tr></table>>];
    bb17__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_51 = const true<br/>StorageDead(_42)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_4)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _46)</td></tr></table>>];
    bb18__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageLive(_47)<br/>_47 = _22<br/>_44 = (move _45, move _47)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>_51 = const false<br/></td></tr><tr><td align="left">_40 = anchor_lang::error::Error::with_pubkeys(move _41, move _44)</td></tr></table>>];
    bb19__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_51 = const false<br/>StorageDead(_41)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _40)<br/>StorageDead(_40)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>_33 = const ()<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageLive(_48)<br/>_48 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _48)<br/>StorageDead(_48)<br/>StorageDead(_22)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb23__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb24__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb25__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">switchInt(_51)</td></tr></table>>];
    bb26__0_2864 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_56 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2864 -> bb1__0_2864 [label="return"];
    bb1__0_2864 -> bb2__0_2864 [label="return"];
    bb2__0_2864 -> bb3__0_2864 [label="return"];
    bb2__0_2864 -> bb23__0_2864 [label="unwind"];
    bb3__0_2864 -> bb4__0_2864 [label="0"];
    bb3__0_2864 -> bb6__0_2864 [label="1"];
    bb3__0_2864 -> bb5__0_2864 [label="otherwise"];
    bb4__0_2864 -> bb8__0_2864 [label="0"];
    bb4__0_2864 -> bb11__0_2864 [label="otherwise"];
    bb6__0_2864 -> bb7__0_2864 [label="return"];
    bb6__0_2864 -> bb26__0_2864 [label="unwind"];
    bb7__0_2864 -> bb21__0_2864 [label=""];
    bb8__0_2864 -> bb9__0_2864 [label="return"];
    bb9__0_2864 -> bb10__0_2864 [label="return"];
    bb9__0_2864 -> bb23__0_2864 [label="unwind"];
    bb10__0_2864 -> bb21__0_2864 [label=""];
    bb11__0_2864 -> bb12__0_2864 [label="return"];
    bb12__0_2864 -> bb13__0_2864 [label="return"];
    bb13__0_2864 -> bb14__0_2864 [label="return"];
    bb14__0_2864 -> bb20__0_2864 [label="0"];
    bb14__0_2864 -> bb15__0_2864 [label="otherwise"];
    bb15__0_2864 -> bb16__0_2864 [label="return"];
    bb16__0_2864 -> bb17__0_2864 [label="return"];
    bb16__0_2864 -> bb23__0_2864 [label="unwind"];
    bb17__0_2864 -> bb18__0_2864 [label="return"];
    bb17__0_2864 -> bb25__0_2864 [label="unwind"];
    bb18__0_2864 -> bb19__0_2864 [label="return"];
    bb18__0_2864 -> bb25__0_2864 [label="unwind"];
    bb19__0_2864 -> bb21__0_2864 [label=""];
    bb20__0_2864 -> bb22__0_2864 [label=""];
    bb21__0_2864 -> bb22__0_2864 [label=""];
    bb24__0_2864 -> bb23__0_2864 [label="return"];
    bb25__0_2864 -> bb23__0_2864 [label="0"];
    bb25__0_2864 -> bb24__0_2864 [label="otherwise"];
    bb26__0_2864 -> bb23__0_2864 [label=""];
}
