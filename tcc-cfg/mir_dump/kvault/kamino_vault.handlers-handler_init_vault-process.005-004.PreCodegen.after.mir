// MIR for `handlers::handler_init_vault::process` after PreCodegen

fn handlers::handler_init_vault::process(_1: anchor_lang::context::Context<'_, '_, '_, '_, handlers::handler_init_vault::InitVault<'_>>) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let _2: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _3: std::cell::RefMut<'_, state::VaultState>;
    let mut _4: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, std::cell::RefMut<'_, state::VaultState>>;
    let mut _5: std::result::Result<std::cell::RefMut<'_, state::VaultState>, anchor_lang::error::Error>;
    let mut _6: &anchor_lang::prelude::AccountLoader<'_, state::VaultState>;
    let mut _7: isize;
    let _8: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _9: !;
    let mut _10: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let _11: std::cell::RefMut<'_, state::VaultState>;
    let mut _12: anchor_lang::prelude::Pubkey;
    let mut _13: &anchor_lang::prelude::Signer<'_>;
    let mut _14: &mut state::VaultState;
    let mut _15: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _16: anchor_lang::prelude::Pubkey;
    let mut _17: &anchor_lang::prelude::Signer<'_>;
    let mut _18: &mut state::VaultState;
    let mut _19: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _20: anchor_lang::prelude::Pubkey;
    let mut _21: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _22: &mut state::VaultState;
    let mut _23: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _24: anchor_lang::prelude::Pubkey;
    let mut _25: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _26: &mut state::VaultState;
    let mut _27: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _28: anchor_lang::prelude::Pubkey;
    let mut _29: &anchor_lang::prelude::AccountInfo<'_>;
    let _30: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _31: &anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _32: &mut state::VaultState;
    let mut _33: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _34: anchor_lang::prelude::Pubkey;
    let mut _35: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _36: &mut state::VaultState;
    let mut _37: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _38: anchor_lang::prelude::Pubkey;
    let mut _39: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _40: &mut state::VaultState;
    let mut _41: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _42: u64;
    let mut _43: u8;
    let mut _44: &mut state::VaultState;
    let mut _45: &mut std::cell::RefMut<'_, state::VaultState>;
    let _47: anchor_lang::prelude::Clock;
    let mut _48: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::prelude::ProgramError>, anchor_lang::prelude::Clock>;
    let mut _49: std::result::Result<anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError>;
    let mut _50: isize;
    let mut _52: !;
    let mut _53: std::result::Result<std::convert::Infallible, anchor_lang::prelude::ProgramError>;
    let _55: ();
    let mut _56: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>>;
    let mut _57: std::result::Result<(), anchor_lang::error::Error>;
    let mut _58: &mut state::VaultState;
    let mut _59: &mut state::VaultState;
    let mut _60: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _61: u8;
    let mut _62: &anchor_spl::token_2022::spl_token_2022::state::Mint;
    let mut _63: &anchor_spl::token_interface::Mint;
    let _64: &anchor_spl::token_interface::Mint;
    let mut _65: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _66: u8;
    let mut _67: &anchor_spl::token_2022::spl_token_2022::state::Mint;
    let mut _68: &anchor_spl::token_interface::Mint;
    let _69: &anchor_spl::token_interface::Mint;
    let mut _70: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _71: u64;
    let mut _72: std::result::Result<u64, std::num::TryFromIntError>;
    let mut _73: i64;
    let mut _74: isize;
    let mut _76: !;
    let mut _77: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _80: std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>;
    let mut _81: &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _82: {closure@programs\kvault\src\handlers\handler_init_vault.rs:40:14: 40:28};
    let mut _86: operations::effects::DepositEffects;
    let mut _87: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, operations::effects::DepositEffects>;
    let mut _88: std::result::Result<operations::effects::DepositEffects, anchor_lang::error::Error>;
    let mut _89: &mut state::VaultState;
    let mut _90: &mut state::VaultState;
    let mut _91: &mut std::cell::RefMut<'_, state::VaultState>;
    let mut _92: std::iter::Map<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>, {closure@programs\kvault\src\handlers\handler_init_vault.rs:40:14: 40:28}>;
    let mut _93: u64;
    let mut _94: u64;
    let mut _95: std::result::Result<u64, std::num::TryFromIntError>;
    let mut _96: i64;
    let mut _97: isize;
    let mut _99: !;
    let mut _100: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let _102: ();
    let mut _103: &str;
    let _104: &str;
    let mut _105: &std::string::String;
    let _106: &std::string::String;
    let _107: std::string::String;
    let mut _109: std::fmt::Arguments<'_>;
    let mut _110: &[&str];
    let mut _111: &[&str; 3];
    let _112: &[&str; 3];
    let _113: [&str; 3];
    let mut _114: &[core::fmt::rt::Argument<'_>];
    let mut _115: &[core::fmt::rt::Argument<'_>; 3];
    let _116: &[core::fmt::rt::Argument<'_>; 3];
    let _117: [core::fmt::rt::Argument<'_>; 3];
    let mut _118: core::fmt::rt::Argument<'_>;
    let mut _119: &u64;
    let _120: &u64;
    let mut _121: core::fmt::rt::Argument<'_>;
    let mut _122: &u64;
    let _123: &u64;
    let mut _124: core::fmt::rt::Argument<'_>;
    let mut _125: &u64;
    let _126: &u64;
    let _127: ();
    let mut _128: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>>;
    let mut _129: std::result::Result<(), anchor_lang::error::Error>;
    let mut _130: &utils::token_ops::tokens::UserTransferAccounts<'_>;
    let _131: &utils::token_ops::tokens::UserTransferAccounts<'_>;
    let _132: utils::token_ops::tokens::UserTransferAccounts<'_>;
    let mut _133: anchor_lang::prelude::AccountInfo<'_>;
    let mut _134: &anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _135: anchor_lang::prelude::AccountInfo<'_>;
    let mut _136: &anchor_lang::prelude::Signer<'_>;
    let mut _137: anchor_lang::prelude::AccountInfo<'_>;
    let mut _138: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _139: anchor_lang::prelude::AccountInfo<'_>;
    let mut _140: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _141: anchor_lang::prelude::AccountInfo<'_>;
    let mut _142: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _143: u64;
    let mut _144: u64;
    let mut _145: u64;
    let mut _146: (u64, bool);
    let mut _147: u8;
    let mut _148: &anchor_spl::token_2022::spl_token_2022::state::Mint;
    let mut _149: &anchor_spl::token_interface::Mint;
    let _150: &anchor_spl::token_interface::Mint;
    let mut _151: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _152: isize;
    let mut _154: !;
    let mut _155: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _157: ();
    let mut _159: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _160: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _161: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _162: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _163: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _164: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _165: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _166: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _167: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _168: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _169: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _170: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _171: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _172: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _173: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _174: &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _175: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _176: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _177: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _178: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _179: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _180: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _181: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _182: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _183: &mut handlers::handler_init_vault::InitVault<'_>;
    let mut _184: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>;
    let mut _185: isize;
    let mut _186: isize;
    let mut _187: isize;
    let mut _188: isize;
    let mut _189: isize;
    let mut _190: isize;
    let mut _191: isize;
    let mut _192: isize;
    let mut _193: isize;
    let mut _194: isize;
    let mut _195: isize;
    let mut _196: isize;
    let mut _197: isize;
    let mut _198: isize;
    let mut _199: isize;
    let mut _200: isize;
    let mut _201: isize;
    let mut _202: isize;
    let mut _203: isize;
    let mut _204: isize;
    let mut _205: isize;
    let mut _206: isize;
    let mut _207: isize;
    let mut _208: isize;
    let mut _209: isize;
    let mut _210: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _211: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _212: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _213: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _214: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _215: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _216: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _217: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    let mut _218: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>;
    scope 1 {
        debug vault => _2;
        let _46: &anchor_lang::prelude::Clock;
        let _51: std::result::Result<std::convert::Infallible, anchor_lang::prelude::ProgramError>;
        let _54: anchor_lang::prelude::Clock;
        scope 6 {
            debug clock => _46;
            let _75: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
            let _78: ();
            let _79: std::iter::Map<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>, {closure@programs\kvault\src\handlers\handler_init_vault.rs:40:14: 40:28}>;
            scope 11 {
                debug residual => _75;
                scope 12 {
                }
            }
            scope 13 {
                debug val => _78;
                scope 14 {
                }
            }
            scope 15 {
                debug reserves_iter => _79;
                let _83: u64;
                let _84: u64;
                let _85: u64;
                let _98: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                let _101: operations::effects::DepositEffects;
                scope 16 {
                    debug shares_to_mint => _83;
                    debug token_to_deposit => _84;
                    debug crank_funds_to_deposit => _85;
                    let _108: std::string::String;
                    let _153: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                    let _156: ();
                    let mut _158: &[&str; 3];
                    scope 21 {
                        debug res => _108;
                    }
                    scope 22 {
                        debug residual => _153;
                        scope 23 {
                        }
                    }
                    scope 24 {
                        debug val => _156;
                        scope 25 {
                        }
                    }
                }
                scope 17 {
                    debug residual => _98;
                    scope 18 {
                    }
                }
                scope 19 {
                    debug val => _101;
                    scope 20 {
                    }
                }
            }
        }
        scope 7 {
            debug residual => _51;
            scope 8 {
            }
        }
        scope 9 {
            debug val => _54;
            scope 10 {
            }
        }
    }
    scope 2 {
        debug residual => _8;
        scope 3 {
        }
    }
    scope 4 {
        debug val => _11;
        scope 5 {
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _159 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _6 = &((*_159).1: anchor_lang::prelude::AccountLoader<'_, state::VaultState>);
        _5 = anchor_lang::prelude::AccountLoader::<'_, state::VaultState>::load_init(move _6) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_6);
        _4 = <std::result::Result<RefMut<'_, state::VaultState>, anchor_lang::error::Error> as Try>::branch(move _5) -> [return: bb2, unwind: bb86];
    }

    bb2: {
        StorageDead(_5);
        _7 = discriminant(_4);
        switchInt(move _7) -> [0: bb3, 1: bb5, otherwise: bb4];
    }

    bb3: {
        StorageLive(_11);
        _11 = move ((_4 as Continue).0: std::cell::RefMut<'_, state::VaultState>);
        _3 = move _11;
        StorageDead(_11);
        _2 = &mut _3;
        _185 = discriminant(_4);
        StorageDead(_4);
        StorageLive(_12);
        StorageLive(_13);
        _160 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _13 = &((*_160).0: anchor_lang::prelude::Signer<'_>);
        _12 = <anchor_lang::prelude::Signer<'_> as anchor_lang::Key>::key(move _13) -> [return: bb7, unwind: bb85];
    }

    bb4: {
        unreachable;
    }

    bb5: {
        StorageLive(_8);
        _8 = move ((_4 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_10);
        _10 = move _8;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _10) -> [return: bb6, unwind: bb91];
    }

    bb6: {
        StorageDead(_10);
        StorageDead(_8);
        _203 = discriminant(_4);
        StorageDead(_4);
        goto -> bb77;
    }

    bb7: {
        StorageDead(_13);
        StorageLive(_14);
        StorageLive(_15);
        _15 = &mut (*_2);
        _14 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _15) -> [return: bb8, unwind: bb85];
    }

    bb8: {
        StorageDead(_15);
        ((*_14).0: anchor_lang::prelude::Pubkey) = move _12;
        StorageDead(_12);
        StorageDead(_14);
        StorageLive(_16);
        StorageLive(_17);
        _161 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _17 = &((*_161).0: anchor_lang::prelude::Signer<'_>);
        _16 = <anchor_lang::prelude::Signer<'_> as anchor_lang::Key>::key(move _17) -> [return: bb9, unwind: bb85];
    }

    bb9: {
        StorageDead(_17);
        StorageLive(_18);
        StorageLive(_19);
        _19 = &mut (*_2);
        _18 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _19) -> [return: bb10, unwind: bb85];
    }

    bb10: {
        StorageDead(_19);
        ((*_18).34: anchor_lang::prelude::Pubkey) = move _16;
        StorageDead(_16);
        StorageDead(_18);
        StorageLive(_20);
        StorageLive(_21);
        _162 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _163 = deref_copy ((*_162).4: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        _210 = (((_163.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>);
        _21 = &(*_210);
        _20 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as anchor_lang::Key>::key(move _21) -> [return: bb11, unwind: bb85];
    }

    bb11: {
        StorageDead(_21);
        StorageLive(_22);
        StorageLive(_23);
        _23 = &mut (*_2);
        _22 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _23) -> [return: bb12, unwind: bb85];
    }

    bb12: {
        StorageDead(_23);
        ((*_22).3: anchor_lang::prelude::Pubkey) = move _20;
        StorageDead(_20);
        StorageDead(_22);
        StorageLive(_24);
        StorageLive(_25);
        _164 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _165 = deref_copy ((*_164).3: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        _211 = (((_165.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _25 = &(*_211);
        _24 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::Key>::key(move _25) -> [return: bb13, unwind: bb85];
    }

    bb13: {
        StorageDead(_25);
        StorageLive(_26);
        StorageLive(_27);
        _27 = &mut (*_2);
        _26 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _27) -> [return: bb14, unwind: bb85];
    }

    bb14: {
        StorageDead(_27);
        ((*_26).5: anchor_lang::prelude::Pubkey) = move _24;
        StorageDead(_24);
        StorageDead(_26);
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _166 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _31 = &((*_166).9: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>);
        _30 = <anchor_lang::prelude::Interface<'_, TokenInterface> as Deref>::deref(move _31) -> [return: bb15, unwind: bb85];
    }

    bb15: {
        _29 = &(*_30);
        StorageDead(_31);
        _28 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::Key>::key(move _29) -> [return: bb16, unwind: bb85];
    }

    bb16: {
        StorageDead(_29);
        StorageLive(_32);
        StorageLive(_33);
        _33 = &mut (*_2);
        _32 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _33) -> [return: bb17, unwind: bb85];
    }

    bb17: {
        StorageDead(_33);
        ((*_32).6: anchor_lang::prelude::Pubkey) = move _28;
        StorageDead(_28);
        StorageDead(_32);
        StorageDead(_30);
        StorageLive(_34);
        StorageLive(_35);
        _167 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _35 = &((*_167).2: anchor_lang::prelude::AccountInfo<'_>);
        _34 = <anchor_lang::prelude::AccountInfo<'_> as anchor_lang::Key>::key(move _35) -> [return: bb18, unwind: bb85];
    }

    bb18: {
        StorageDead(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &mut (*_2);
        _36 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _37) -> [return: bb19, unwind: bb85];
    }

    bb19: {
        StorageDead(_37);
        ((*_36).1: anchor_lang::prelude::Pubkey) = move _34;
        StorageDead(_34);
        StorageDead(_36);
        StorageLive(_38);
        StorageLive(_39);
        _168 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _169 = deref_copy ((*_168).5: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        _212 = (((_169.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>);
        _39 = &(*_212);
        _38 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as anchor_lang::Key>::key(move _39) -> [return: bb20, unwind: bb85];
    }

    bb20: {
        StorageDead(_39);
        StorageLive(_40);
        StorageLive(_41);
        _41 = &mut (*_2);
        _40 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _41) -> [return: bb21, unwind: bb85];
    }

    bb21: {
        StorageDead(_41);
        ((*_40).7: anchor_lang::prelude::Pubkey) = move _38;
        StorageDead(_38);
        StorageDead(_40);
        StorageLive(_42);
        StorageLive(_43);
        _43 = ((_1.3: handlers::handler_init_vault::InitVaultBumps).0: u8);
        _42 = <u64 as From<u8>>::from(move _43) -> [return: bb22, unwind: bb85];
    }

    bb22: {
        StorageDead(_43);
        StorageLive(_44);
        StorageLive(_45);
        _45 = &mut (*_2);
        _44 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _45) -> [return: bb23, unwind: bb85];
    }

    bb23: {
        StorageDead(_45);
        ((*_44).2: u64) = move _42;
        StorageDead(_42);
        StorageDead(_44);
        StorageLive(_46);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = <anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar>::get() -> [return: bb24, unwind: bb85];
    }

    bb24: {
        _48 = <std::result::Result<anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError> as Try>::branch(move _49) -> [return: bb25, unwind: bb85];
    }

    bb25: {
        StorageDead(_49);
        _50 = discriminant(_48);
        switchInt(move _50) -> [0: bb26, 1: bb27, otherwise: bb4];
    }

    bb26: {
        StorageLive(_54);
        _54 = move ((_48 as Continue).0: anchor_lang::prelude::Clock);
        _47 = move _54;
        StorageDead(_54);
        _46 = &_47;
        _187 = discriminant(_48);
        StorageDead(_48);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        _60 = &mut (*_2);
        _59 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _60) -> [return: bb29, unwind: bb85];
    }

    bb27: {
        StorageLive(_51);
        _51 = move ((_48 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::prelude::ProgramError>);
        StorageLive(_53);
        _53 = move _51;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::prelude::ProgramError>>>::from_residual(move _53) -> [return: bb28, unwind: bb90];
    }

    bb28: {
        StorageDead(_53);
        StorageDead(_51);
        _201 = discriminant(_48);
        StorageDead(_48);
        goto -> bb76;
    }

    bb29: {
        _58 = &mut (*_59);
        StorageDead(_60);
        StorageLive(_61);
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        _170 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _171 = deref_copy ((*_170).4: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        _213 = (((_171.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>);
        _65 = &(*_213);
        _64 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as Deref>::deref(move _65) -> [return: bb30, unwind: bb85];
    }

    bb30: {
        _63 = &(*_64);
        _62 = <anchor_spl::token_interface::Mint as Deref>::deref(move _63) -> [return: bb31, unwind: bb85];
    }

    bb31: {
        StorageDead(_65);
        StorageDead(_63);
        _61 = ((*_62).2: u8);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        _172 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _173 = deref_copy ((*_172).5: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        _214 = (((_173.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>);
        _70 = &(*_214);
        _69 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as Deref>::deref(move _70) -> [return: bb32, unwind: bb85];
    }

    bb32: {
        _68 = &(*_69);
        _67 = <anchor_spl::token_interface::Mint as Deref>::deref(move _68) -> [return: bb33, unwind: bb85];
    }

    bb33: {
        StorageDead(_70);
        StorageDead(_68);
        _66 = ((*_67).2: u8);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        _73 = ((*_46).4: i64);
        _72 = <u64 as std::convert::TryFrom<i64>>::try_from(move _73) -> [return: bb34, unwind: bb85];
    }

    bb34: {
        StorageDead(_73);
        _71 = std::result::Result::<u64, TryFromIntError>::unwrap(move _72) -> [return: bb35, unwind: bb85];
    }

    bb35: {
        StorageDead(_72);
        _57 = operations::vault_operations::initialize(move _58, move _61, move _66, move _71) -> [return: bb36, unwind: bb85];
    }

    bb36: {
        StorageDead(_71);
        StorageDead(_66);
        StorageDead(_61);
        StorageDead(_58);
        _56 = <std::result::Result<(), anchor_lang::error::Error> as Try>::branch(move _57) -> [return: bb37, unwind: bb85];
    }

    bb37: {
        StorageDead(_57);
        _74 = discriminant(_56);
        switchInt(move _74) -> [0: bb38, 1: bb39, otherwise: bb4];
    }

    bb38: {
        StorageLive(_78);
        _78 = ((_56 as Continue).0: ());
        _55 = _78;
        StorageDead(_78);
        _189 = discriminant(_56);
        StorageDead(_69);
        StorageDead(_67);
        StorageDead(_64);
        StorageDead(_62);
        StorageDead(_59);
        StorageDead(_56);
        StorageDead(_55);
        StorageLive(_79);
        StorageLive(_80);
        StorageLive(_81);
        _174 = deref_copy (_1.2: &[anchor_lang::prelude::AccountInfo<'_>]);
        _81 = &(*_174);
        _80 = core::slice::<impl [anchor_lang::prelude::AccountInfo<'_>]>::iter(move _81) -> [return: bb41, unwind: bb85];
    }

    bb39: {
        StorageLive(_75);
        _75 = move ((_56 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_77);
        _77 = move _75;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _77) -> [return: bb40, unwind: bb89];
    }

    bb40: {
        StorageDead(_77);
        StorageDead(_75);
        _199 = discriminant(_56);
        StorageDead(_69);
        StorageDead(_67);
        StorageDead(_64);
        StorageDead(_62);
        StorageDead(_59);
        StorageDead(_56);
        StorageDead(_55);
        goto -> bb76;
    }

    bb41: {
        StorageDead(_81);
        StorageLive(_82);
        _82 = {closure@programs\kvault\src\handlers\handler_init_vault.rs:40:14: 40:28};
        _79 = <std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>> as Iterator>::map::<kamino_lending::utils::FatAccountLoader<'_, kamino_lending::Reserve>, {closure@programs\kvault\src\handlers\handler_init_vault.rs:40:14: 40:28}>(move _80, move _82) -> [return: bb42, unwind: bb85];
    }

    bb42: {
        StorageDead(_82);
        StorageDead(_80);
        StorageLive(_86);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        _91 = &mut (*_2);
        _90 = <RefMut<'_, state::VaultState> as DerefMut>::deref_mut(move _91) -> [return: bb43, unwind: bb85];
    }

    bb43: {
        _89 = &mut (*_90);
        StorageDead(_91);
        StorageLive(_92);
        _92 = move _79;
        StorageLive(_93);
        _93 = ((*_46).0: u64);
        StorageLive(_94);
        StorageLive(_95);
        StorageLive(_96);
        _96 = ((*_46).4: i64);
        _95 = <i64 as TryInto<u64>>::try_into(move _96) -> [return: bb44, unwind: bb85];
    }

    bb44: {
        StorageDead(_96);
        _94 = std::result::Result::<u64, TryFromIntError>::unwrap(move _95) -> [return: bb45, unwind: bb85];
    }

    bb45: {
        StorageDead(_95);
        _88 = operations::vault_operations::deposit::<'_, kamino_lending::utils::FatAccountLoader<'_, kamino_lending::Reserve>, Map<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>, {closure@programs\kvault\src\handlers\handler_init_vault.rs:40:14: 40:28}>>(move _89, move _92, const _, move _93, move _94) -> [return: bb46, unwind: bb85];
    }

    bb46: {
        StorageDead(_94);
        StorageDead(_93);
        StorageDead(_92);
        StorageDead(_89);
        _87 = <std::result::Result<DepositEffects, anchor_lang::error::Error> as Try>::branch(move _88) -> [return: bb47, unwind: bb85];
    }

    bb47: {
        StorageDead(_88);
        _97 = discriminant(_87);
        switchInt(move _97) -> [0: bb48, 1: bb49, otherwise: bb4];
    }

    bb48: {
        StorageLive(_101);
        _101 = move ((_87 as Continue).0: operations::effects::DepositEffects);
        _86 = move _101;
        StorageDead(_101);
        StorageLive(_83);
        _83 = (_86.0: u64);
        StorageLive(_84);
        _84 = (_86.1: u64);
        StorageLive(_85);
        _85 = (_86.2: u64);
        _191 = discriminant(_87);
        StorageDead(_90);
        StorageDead(_87);
        StorageDead(_86);
        StorageLive(_102);
        StorageLive(_103);
        StorageLive(_104);
        StorageLive(_105);
        StorageLive(_106);
        StorageLive(_107);
        StorageLive(_108);
        StorageLive(_109);
        StorageLive(_110);
        StorageLive(_111);
        StorageLive(_112);
        _158 = const _;
        _112 = &(*_158);
        _111 = &(*_112);
        _110 = move _111 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_111);
        StorageLive(_114);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        StorageLive(_119);
        StorageLive(_120);
        _120 = &_83;
        _119 = &(*_120);
        _118 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _119) -> [return: bb51, unwind: bb85];
    }

    bb49: {
        StorageLive(_98);
        _98 = move ((_87 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_100);
        _100 = move _98;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _100) -> [return: bb50, unwind: bb88];
    }

    bb50: {
        StorageDead(_100);
        StorageDead(_98);
        _197 = discriminant(_87);
        StorageDead(_90);
        StorageDead(_87);
        StorageDead(_86);
        goto -> bb75;
    }

    bb51: {
        StorageDead(_119);
        StorageLive(_121);
        StorageLive(_122);
        StorageLive(_123);
        _123 = &_84;
        _122 = &(*_123);
        _121 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _122) -> [return: bb52, unwind: bb85];
    }

    bb52: {
        StorageDead(_122);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        _126 = &_85;
        _125 = &(*_126);
        _124 = core::fmt::rt::Argument::<'_>::new_display::<u64>(move _125) -> [return: bb53, unwind: bb85];
    }

    bb53: {
        StorageDead(_125);
        _117 = [move _118, move _121, move _124];
        StorageDead(_124);
        StorageDead(_121);
        StorageDead(_118);
        _116 = &_117;
        _115 = &(*_116);
        _114 = move _115 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_115);
        _109 = Arguments::<'_>::new_v1(move _110, move _114) -> [return: bb54, unwind: bb85];
    }

    bb54: {
        StorageDead(_114);
        StorageDead(_110);
        _108 = format(move _109) -> [return: bb55, unwind: bb85];
    }

    bb55: {
        StorageDead(_109);
        StorageDead(_126);
        StorageDead(_123);
        StorageDead(_120);
        StorageDead(_117);
        StorageDead(_116);
        StorageDead(_112);
        _107 = move _108;
        StorageDead(_108);
        _106 = &_107;
        _105 = &(*_106);
        _104 = <String as Deref>::deref(move _105) -> [return: bb56, unwind: bb84];
    }

    bb56: {
        _103 = &(*_104);
        StorageDead(_105);
        _102 = solana_program::log::sol_log(move _103) -> [return: bb57, unwind: bb84];
    }

    bb57: {
        StorageDead(_103);
        drop(_107) -> [return: bb58, unwind: bb85];
    }

    bb58: {
        StorageDead(_107);
        StorageDead(_106);
        StorageDead(_104);
        StorageDead(_102);
        StorageLive(_127);
        StorageLive(_128);
        StorageLive(_129);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        StorageLive(_133);
        StorageLive(_134);
        _175 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _134 = &((*_175).9: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>);
        _133 = <anchor_lang::prelude::Interface<'_, TokenInterface> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _134) -> [return: bb59, unwind: bb85];
    }

    bb59: {
        StorageDead(_134);
        StorageLive(_135);
        StorageLive(_136);
        _176 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _136 = &((*_176).0: anchor_lang::prelude::Signer<'_>);
        _135 = <anchor_lang::prelude::Signer<'_> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _136) -> [return: bb60, unwind: bb83];
    }

    bb60: {
        StorageDead(_136);
        StorageLive(_137);
        StorageLive(_138);
        _177 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _178 = deref_copy ((*_177).6: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        _215 = (((_178.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _138 = &(*_215);
        _137 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _138) -> [return: bb61, unwind: bb82];
    }

    bb61: {
        StorageDead(_138);
        StorageLive(_139);
        StorageLive(_140);
        _179 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _180 = deref_copy ((*_179).3: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        _216 = (((_180.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _140 = &(*_216);
        _139 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _140) -> [return: bb62, unwind: bb81];
    }

    bb62: {
        StorageDead(_140);
        StorageLive(_141);
        StorageLive(_142);
        _181 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _182 = deref_copy ((*_181).4: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        _217 = (((_182.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>);
        _142 = &(*_217);
        _141 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as anchor_lang::ToAccountInfo<'_>>::to_account_info(move _142) -> [return: bb63, unwind: bb80];
    }

    bb63: {
        StorageDead(_142);
        _132 = UserTransferAccounts::<'_> { token_program: move _133, token_vault: move _139, token_ata: move _137, token_mint: move _141, user_authority: move _135 };
        StorageDead(_141);
        StorageDead(_139);
        StorageDead(_137);
        StorageDead(_135);
        StorageDead(_133);
        _131 = &_132;
        _130 = &(*_131);
        StorageLive(_143);
        StorageLive(_144);
        _144 = _84;
        StorageLive(_145);
        _145 = _85;
        _146 = CheckedAdd(_144, _145);
        assert(!move (_146.1: bool), "attempt to compute `{} + {}`, which would overflow", move _144, move _145) -> [success: bb64, unwind: bb79];
    }

    bb64: {
        _143 = move (_146.0: u64);
        StorageDead(_145);
        StorageDead(_144);
        StorageLive(_147);
        StorageLive(_148);
        StorageLive(_149);
        StorageLive(_150);
        StorageLive(_151);
        _183 = deref_copy (_1.1: &mut handlers::handler_init_vault::InitVault<'_>);
        _184 = deref_copy ((*_183).4: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>);
        _218 = (((_184.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint>);
        _151 = &(*_218);
        _150 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::Mint> as Deref>::deref(move _151) -> [return: bb65, unwind: bb79];
    }

    bb65: {
        _149 = &(*_150);
        _148 = <anchor_spl::token_interface::Mint as Deref>::deref(move _149) -> [return: bb66, unwind: bb79];
    }

    bb66: {
        StorageDead(_151);
        StorageDead(_149);
        _147 = ((*_148).2: u8);
        _129 = transfer_to_vault(move _130, move _143, move _147) -> [return: bb67, unwind: bb79];
    }

    bb67: {
        StorageDead(_147);
        StorageDead(_143);
        StorageDead(_130);
        _128 = <std::result::Result<(), anchor_lang::error::Error> as Try>::branch(move _129) -> [return: bb68, unwind: bb79];
    }

    bb68: {
        StorageDead(_129);
        _152 = discriminant(_128);
        switchInt(move _152) -> [0: bb69, 1: bb70, otherwise: bb4];
    }

    bb69: {
        StorageLive(_156);
        _156 = ((_128 as Continue).0: ());
        _127 = _156;
        StorageDead(_156);
        _193 = discriminant(_128);
        StorageDead(_150);
        StorageDead(_148);
        drop(_132) -> [return: bb72, unwind: bb85];
    }

    bb70: {
        StorageLive(_153);
        _153 = move ((_128 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_155);
        _155 = move _153;
        _0 = <std::result::Result<(), anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _155) -> [return: bb71, unwind: bb87];
    }

    bb71: {
        StorageDead(_155);
        StorageDead(_153);
        _195 = discriminant(_128);
        StorageDead(_150);
        StorageDead(_148);
        drop(_132) -> [return: bb74, unwind: bb85];
    }

    bb72: {
        StorageDead(_132);
        StorageDead(_131);
        StorageDead(_128);
        StorageDead(_127);
        StorageLive(_157);
        _157 = ();
        _0 = std::result::Result::<(), anchor_lang::error::Error>::Ok(move _157);
        StorageDead(_157);
        StorageDead(_85);
        StorageDead(_84);
        StorageDead(_83);
        StorageDead(_79);
        StorageDead(_47);
        StorageDead(_46);
        drop(_3) -> [return: bb73, unwind: bb86];
    }

    bb73: {
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb78;
    }

    bb74: {
        StorageDead(_132);
        StorageDead(_131);
        StorageDead(_128);
        StorageDead(_127);
        StorageDead(_85);
        StorageDead(_84);
        StorageDead(_83);
        goto -> bb75;
    }

    bb75: {
        StorageDead(_79);
        goto -> bb76;
    }

    bb76: {
        StorageDead(_47);
        StorageDead(_46);
        drop(_3) -> [return: bb77, unwind: bb86];
    }

    bb77: {
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb78;
    }

    bb78: {
        return;
    }

    bb79 (cleanup): {
        drop(_132) -> [return: bb85, unwind terminate(cleanup)];
    }

    bb80 (cleanup): {
        drop(_139) -> [return: bb81, unwind terminate(cleanup)];
    }

    bb81 (cleanup): {
        drop(_137) -> [return: bb82, unwind terminate(cleanup)];
    }

    bb82 (cleanup): {
        drop(_135) -> [return: bb83, unwind terminate(cleanup)];
    }

    bb83 (cleanup): {
        drop(_133) -> [return: bb85, unwind terminate(cleanup)];
    }

    bb84 (cleanup): {
        drop(_107) -> [return: bb85, unwind terminate(cleanup)];
    }

    bb85 (cleanup): {
        drop(_3) -> [return: bb86, unwind terminate(cleanup)];
    }

    bb86 (cleanup): {
        resume;
    }

    bb87 (cleanup): {
        _205 = discriminant(_128);
        goto -> bb79;
    }

    bb88 (cleanup): {
        _206 = discriminant(_87);
        goto -> bb85;
    }

    bb89 (cleanup): {
        _207 = discriminant(_56);
        goto -> bb85;
    }

    bb90 (cleanup): {
        _208 = discriminant(_48);
        goto -> bb85;
    }

    bb91 (cleanup): {
        _209 = discriminant(_4);
        goto -> bb86;
    }
}
