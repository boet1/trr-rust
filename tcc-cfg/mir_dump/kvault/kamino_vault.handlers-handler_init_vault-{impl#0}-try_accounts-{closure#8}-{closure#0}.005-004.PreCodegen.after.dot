digraph Mir_0_886 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_init_vault::InitVault&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InitVaultBumps&gt;&gt;::try_accounts::{closure#8}::{closure#0}(_1: Closure(DefId(0:886 ~ kamino_vault[b3c4]::handlers::handler_init_vault::{impl#0}::try_accounts::{closure#8}::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey,)) -&gt; bool, []), (&amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey,)]), _2: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; bool<br align="left"/>let mut _3: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _4: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _5: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>debug expected_fa =&gt; _2;<br align="left"/>debug fa =&gt; (*(_1.0: &amp;&amp;anchor_lang::prelude::Pubkey));<br align="left"/>>;
    bb0__0_886 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_5 = deref_copy (_1.0: &amp;&amp;anchor_lang::prelude::Pubkey)<br/>_3 = &amp;(*_5)<br/>StorageLive(_4)<br/>_4 = &amp;(*_2)<br/></td></tr><tr><td align="left">_0 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _3, move _4)</td></tr></table>>];
    bb1__0_886 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_886 -> bb1__0_886 [label="return"];
}
