digraph Mir_0_504 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::VaultState::remove_reserve_from_allocation(_1: &amp;ReErased mut state::VaultState, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _4: &amp;ReErased state::VaultState;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: usize;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: &amp;ReErased state::VaultAllocation;<br align="left"/>let _10: usize;<br align="left"/>let mut _11: usize;<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: state::VaultAllocation;<br align="left"/>let _14: usize;<br align="left"/>let mut _15: usize;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: ();<br align="left"/>let mut _18: anchor_lang::error::Error;<br align="left"/>let mut _19: anchor_lang::error::AnchorError;<br align="left"/>let mut _20: std::string::String;<br align="left"/>let mut _21: &amp;ReErased KaminoVaultError;<br align="left"/>let _22: KaminoVaultError;<br align="left"/>let mut _23: u32;<br align="left"/>let mut _24: KaminoVaultError;<br align="left"/>let mut _25: std::string::String;<br align="left"/>let mut _26: &amp;ReErased KaminoVaultError;<br align="left"/>let _27: KaminoVaultError;<br align="left"/>let mut _28: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _29: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _30: anchor_lang::error::Source;<br align="left"/>let mut _31: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _32: anchor_lang::error::Error;<br align="left"/>let mut _33: anchor_lang::error::AnchorError;<br align="left"/>let mut _34: std::string::String;<br align="left"/>let mut _35: &amp;ReErased KaminoVaultError;<br align="left"/>let _36: KaminoVaultError;<br align="left"/>let mut _37: u32;<br align="left"/>let mut _38: KaminoVaultError;<br align="left"/>let mut _39: std::string::String;<br align="left"/>let mut _40: &amp;ReErased KaminoVaultError;<br align="left"/>let _41: KaminoVaultError;<br align="left"/>let mut _42: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _43: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _44: anchor_lang::error::Source;<br align="left"/>let mut _45: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _46: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _47: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _48: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _49: &amp;ReErased KaminoVaultError;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug reserve =&gt; _2;<br align="left"/>debug idx =&gt; _3;<br align="left"/>debug idx =&gt; _7;<br align="left"/>>;
    bb0__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_4 = &amp;(*_1)<br/>StorageLive(_5)<br/>_5 = &amp;(*_2)<br/></td></tr><tr><td align="left">_3 = state::VaultState::get_reserve_idx_in_allocation(move _4, move _5)</td></tr></table>>];
    bb1__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb2__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_47 = const _<br/>_35 = &amp;(*_47)<br/></td></tr><tr><td align="left">_34 = KaminoVaultError::name(move _35)</td></tr></table>>];
    bb3__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = ((_3 as Some).0: usize)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _7<br/>_11 = Len(((*_1).18: [state::VaultAllocation; 25]))<br/>_12 = Lt(_10, _11)<br/></td></tr><tr><td align="left">assert(move _12, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _11, _10)</td></tr></table>>];
    bb5__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_9 = &amp;((*_1).18: [state::VaultAllocation; 25])[_10]<br/></td></tr><tr><td align="left">_8 = VaultAllocation::can_be_removed(move _9)</td></tr></table>>];
    bb6__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb7__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_13)<br/></td></tr><tr><td align="left">_13 = &lt;VaultAllocation as Default&gt;::default()</td></tr></table>>];
    bb8__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = _7<br/>_15 = Len(((*_1).18: [state::VaultAllocation; 25]))<br/>_16 = Lt(_14, _15)<br/></td></tr><tr><td align="left">assert(move _16, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _15, _14)</td></tr></table>>];
    bb9__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">((*_1).18: [state::VaultAllocation; 25])[_14] = move _13<br/>StorageDead(_13)<br/>StorageDead(_14)<br/>StorageLive(_17)<br/>_17 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_49 = const _<br/>_21 = &amp;(*_49)<br/></td></tr><tr><td align="left">_20 = KaminoVaultError::name(move _21)</td></tr></table>>];
    bb11__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = KaminoVaultError::ReserveHasNonZeroAllocationOrCTokens<br/></td></tr><tr><td align="left">_23 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _24)</td></tr></table>>];
    bb12__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_48 = const _<br/>_26 = &amp;(*_48)<br/></td></tr><tr><td align="left">_25 = &lt;KaminoVaultError as ToString&gt;::to_string(move _26)</td></tr></table>>];
    bb13__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\state.rs&quot;, line: const 284_u32 }<br/>_29 = anchor_lang::error::ErrorOrigin::Source(move _30)<br/>StorageDead(_30)<br/>_28 = Option::&lt;ErrorOrigin&gt;::Some(move _29)<br/>StorageDead(_29)<br/>StorageLive(_31)<br/>_31 = Option::&lt;ComparedValues&gt;::None<br/>_19 = anchor_lang::error::AnchorError { error_name: move _20, error_code_number: move _23, error_msg: move _25, error_origin: move _28, compared_values: move _31 }<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _19)</td></tr></table>>];
    bb14__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = KaminoVaultError::ReserveNotPartOfAllocations<br/></td></tr><tr><td align="left">_37 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _38)</td></tr></table>>];
    bb17__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_46 = const _<br/>_40 = &amp;(*_46)<br/></td></tr><tr><td align="left">_39 = &lt;KaminoVaultError as ToString&gt;::to_string(move _40)</td></tr></table>>];
    bb18__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\state.rs&quot;, line: const 289_u32 }<br/>_43 = anchor_lang::error::ErrorOrigin::Source(move _44)<br/>StorageDead(_44)<br/>_42 = Option::&lt;ErrorOrigin&gt;::Some(move _43)<br/>StorageDead(_43)<br/>StorageLive(_45)<br/>_45 = Option::&lt;ComparedValues&gt;::None<br/>_33 = anchor_lang::error::AnchorError { error_name: move _34, error_code_number: move _37, error_msg: move _39, error_origin: move _42, compared_values: move _45 }<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _33)</td></tr></table>>];
    bb19__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _32)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb21__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">21 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb22__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">22 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb23__0_504 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_504 -> bb1__0_504 [label="return"];
    bb1__0_504 -> bb2__0_504 [label="0"];
    bb1__0_504 -> bb4__0_504 [label="1"];
    bb1__0_504 -> bb3__0_504 [label="otherwise"];
    bb2__0_504 -> bb16__0_504 [label="return"];
    bb4__0_504 -> bb5__0_504 [label="success"];
    bb5__0_504 -> bb6__0_504 [label="return"];
    bb6__0_504 -> bb10__0_504 [label="0"];
    bb6__0_504 -> bb7__0_504 [label="otherwise"];
    bb7__0_504 -> bb8__0_504 [label="return"];
    bb8__0_504 -> bb9__0_504 [label="success"];
    bb9__0_504 -> bb15__0_504 [label=""];
    bb10__0_504 -> bb11__0_504 [label="return"];
    bb11__0_504 -> bb12__0_504 [label="return"];
    bb11__0_504 -> bb22__0_504 [label="unwind"];
    bb12__0_504 -> bb13__0_504 [label="return"];
    bb12__0_504 -> bb22__0_504 [label="unwind"];
    bb13__0_504 -> bb14__0_504 [label="return"];
    bb13__0_504 -> bb23__0_504 [label="unwind"];
    bb14__0_504 -> bb15__0_504 [label=""];
    bb15__0_504 -> bb20__0_504 [label=""];
    bb16__0_504 -> bb17__0_504 [label="return"];
    bb16__0_504 -> bb21__0_504 [label="unwind"];
    bb17__0_504 -> bb18__0_504 [label="return"];
    bb17__0_504 -> bb21__0_504 [label="unwind"];
    bb18__0_504 -> bb19__0_504 [label="return"];
    bb18__0_504 -> bb23__0_504 [label="unwind"];
    bb19__0_504 -> bb20__0_504 [label=""];
    bb21__0_504 -> bb23__0_504 [label="return"];
    bb22__0_504 -> bb23__0_504 [label="return"];
}
