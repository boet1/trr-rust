digraph Mir_0_403 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn operations::vault_operations::invest(_1: &amp;ReErased mut state::VaultState, _2: impl Iterator&lt;Item = T&gt;/#2, _3: &amp;ReErased kamino_lending::Reserve, _4: &amp;ReErased anchor_lang::prelude::Pubkey, _5: u64, _6: u64) -&gt; std::result::Result&lt;operations::effects::InvestEffects, anchor_lang::error::Error&gt;<br align="left"/>let _7: operations::vault_operations::common::Holdings;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, operations::vault_operations::common::Holdings&gt;;<br align="left"/>let mut _9: std::result::Result&lt;operations::vault_operations::common::Holdings, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased state::VaultState;<br align="left"/>let mut _11: impl Iterator&lt;Item = T&gt;/#2;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _17: operations::vault_operations::common::Holdings;<br align="left"/>let _18: ();<br align="left"/>let _19: arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let mut _20: arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let _21: ();<br align="left"/>let mut _22: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _23: &amp;ReErased mut arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let mut _24: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _26: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _27: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _28: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _32: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _33: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased u64;<br align="left"/>let _35: &amp;ReErased u64;<br align="left"/>let mut _36: Closure(DefId(0:2068 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#0}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;50_usize&gt;,)]);<br align="left"/>let mut _37: &amp;ReErased mut arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased str;<br align="left"/>let mut _41: &amp;ReErased std::string::String;<br align="left"/>let _42: &amp;ReErased std::string::String;<br align="left"/>let _43: std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let mut _45: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _48: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _49: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _53: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _54: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased &amp;ReErased str;<br align="left"/>let _56: &amp;ReErased &amp;ReErased str;<br align="left"/>let _57: &amp;ReErased str;<br align="left"/>let mut _58: &amp;ReErased arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let _59: ();<br align="left"/>let _60: arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let mut _61: arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let _62: ();<br align="left"/>let mut _63: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _64: &amp;ReErased mut arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let mut _65: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _68: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _69: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _73: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _74: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _76: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _77: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _78: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _79: Closure(DefId(0:2071 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#1}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;50_usize&gt;,)]);<br align="left"/>let mut _80: &amp;ReErased mut arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let _81: ();<br align="left"/>let mut _82: &amp;ReErased str;<br align="left"/>let _83: &amp;ReErased str;<br align="left"/>let mut _84: &amp;ReErased std::string::String;<br align="left"/>let _85: &amp;ReErased std::string::String;<br align="left"/>let _86: std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let mut _88: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _91: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _92: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _93: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _96: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased &amp;ReErased str;<br align="left"/>let _99: &amp;ReErased &amp;ReErased str;<br align="left"/>let _100: &amp;ReErased str;<br align="left"/>let mut _101: &amp;ReErased arrform::ArrForm&lt;50_usize&gt;;<br align="left"/>let _102: operations::vault_operations::common::Invested;<br align="left"/>let _103: ();<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _105: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _106: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _107: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let _108: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _109: u64;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _114: ();<br align="left"/>let _115: ();<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _117: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _118: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _119: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let _120: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _125: ();<br align="left"/>let _126: ();<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: &amp;ReErased state::VaultState;<br align="left"/>let mut _129: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: anchor_lang::error::Error;<br align="left"/>let mut _132: anchor_lang::error::AnchorError;<br align="left"/>let mut _133: std::string::String;<br align="left"/>let mut _134: &amp;ReErased KaminoVaultError;<br align="left"/>let _135: KaminoVaultError;<br align="left"/>let mut _136: u32;<br align="left"/>let mut _137: KaminoVaultError;<br align="left"/>let mut _138: std::string::String;<br align="left"/>let mut _139: &amp;ReErased KaminoVaultError;<br align="left"/>let _140: KaminoVaultError;<br align="left"/>let mut _141: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _142: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _143: anchor_lang::error::Source;<br align="left"/>let mut _144: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _145: &amp;ReErased state::VaultAllocation;<br align="left"/>let mut _146: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, &amp;ReErased state::VaultAllocation&gt;;<br align="left"/>let mut _147: std::result::Result&lt;&amp;ReErased state::VaultAllocation, anchor_lang::error::Error&gt;;<br align="left"/>let mut _148: &amp;ReErased state::VaultState;<br align="left"/>let mut _149: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _154: &amp;ReErased state::VaultAllocation;<br align="left"/>let _155: ();<br align="left"/>let mut _156: usize;<br align="left"/>let mut _157: &amp;ReErased str;<br align="left"/>let _158: &amp;ReErased str;<br align="left"/>let mut _159: bool;<br align="left"/>let mut _160: bool;<br align="left"/>let mut _161: bool;<br align="left"/>let mut _162: bool;<br align="left"/>let mut _163: bool;<br align="left"/>let mut _164: bool;<br align="left"/>let _165: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _166: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _167: ();<br align="left"/>let mut _168: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _169: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _170: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _171: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _172: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _173: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _174: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _175: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _176: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _177: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _178: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _179: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _180: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _181: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _182: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _183: &amp;ReErased u64;<br align="left"/>let _184: &amp;ReErased u64;<br align="left"/>let mut _185: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _186: &amp;ReErased u64;<br align="left"/>let _187: &amp;ReErased u64;<br align="left"/>let mut _188: Closure(DefId(0:2074 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#2}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;,)]);<br align="left"/>let mut _189: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _190: ();<br align="left"/>let mut _191: &amp;ReErased str;<br align="left"/>let _192: &amp;ReErased str;<br align="left"/>let mut _193: &amp;ReErased std::string::String;<br align="left"/>let _194: &amp;ReErased std::string::String;<br align="left"/>let _195: std::string::String;<br align="left"/>let _196: std::string::String;<br align="left"/>let mut _197: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _198: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _199: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _200: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _201: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _202: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _203: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _204: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _205: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _206: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _207: &amp;ReErased &amp;ReErased str;<br align="left"/>let _208: &amp;ReErased &amp;ReErased str;<br align="left"/>let _209: &amp;ReErased str;<br align="left"/>let mut _210: &amp;ReErased arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _211: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _212: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _213: ();<br align="left"/>let mut _214: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _215: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _216: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _217: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _218: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _219: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _220: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _221: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _222: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _223: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _224: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _225: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _226: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _227: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _228: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _229: &amp;ReErased u64;<br align="left"/>let _230: &amp;ReErased u64;<br align="left"/>let mut _231: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _232: &amp;ReErased u64;<br align="left"/>let _233: &amp;ReErased u64;<br align="left"/>let mut _234: Closure(DefId(0:2077 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#3}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;,)]);<br align="left"/>let mut _235: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _236: ();<br align="left"/>let mut _237: &amp;ReErased str;<br align="left"/>let _238: &amp;ReErased str;<br align="left"/>let mut _239: &amp;ReErased std::string::String;<br align="left"/>let _240: &amp;ReErased std::string::String;<br align="left"/>let _241: std::string::String;<br align="left"/>let _242: std::string::String;<br align="left"/>let mut _243: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _244: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _245: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _246: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _247: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _248: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _249: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _250: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _251: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _252: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _253: &amp;ReErased &amp;ReErased str;<br align="left"/>let _254: &amp;ReErased &amp;ReErased str;<br align="left"/>let _255: &amp;ReErased str;<br align="left"/>let mut _256: &amp;ReErased arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _257: arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let mut _258: arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _259: ();<br align="left"/>let mut _260: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _261: &amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let mut _262: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _263: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _264: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _265: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _266: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _267: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _268: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _269: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _270: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _271: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _272: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _273: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _274: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _275: &amp;ReErased u64;<br align="left"/>let _276: &amp;ReErased u64;<br align="left"/>let mut _277: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _278: &amp;ReErased u64;<br align="left"/>let _279: &amp;ReErased u64;<br align="left"/>let mut _280: Closure(DefId(0:2080 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#4}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;,)]);<br align="left"/>let mut _281: &amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _282: ();<br align="left"/>let mut _283: &amp;ReErased str;<br align="left"/>let _284: &amp;ReErased str;<br align="left"/>let mut _285: &amp;ReErased std::string::String;<br align="left"/>let _286: &amp;ReErased std::string::String;<br align="left"/>let _287: std::string::String;<br align="left"/>let _288: std::string::String;<br align="left"/>let mut _289: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _290: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _291: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _292: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _293: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _294: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _295: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _296: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _297: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _298: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _299: &amp;ReErased &amp;ReErased str;<br align="left"/>let _300: &amp;ReErased &amp;ReErased str;<br align="left"/>let _301: &amp;ReErased str;<br align="left"/>let mut _302: &amp;ReErased arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _303: arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _304: arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let _305: ();<br align="left"/>let mut _306: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _307: &amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _308: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _309: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _310: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _311: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _312: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _313: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _314: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _315: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _316: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _317: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _318: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _319: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _320: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _321: &amp;ReErased u64;<br align="left"/>let _322: &amp;ReErased u64;<br align="left"/>let mut _323: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _324: &amp;ReErased u64;<br align="left"/>let _325: &amp;ReErased u64;<br align="left"/>let mut _326: Closure(DefId(0:2083 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#5}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;,)]);<br align="left"/>let mut _327: &amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let _328: ();<br align="left"/>let mut _329: &amp;ReErased str;<br align="left"/>let _330: &amp;ReErased str;<br align="left"/>let mut _331: &amp;ReErased std::string::String;<br align="left"/>let _332: &amp;ReErased std::string::String;<br align="left"/>let _333: std::string::String;<br align="left"/>let _334: std::string::String;<br align="left"/>let mut _335: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _336: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _337: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _338: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _339: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _340: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _341: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _342: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _343: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _344: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _345: &amp;ReErased &amp;ReErased str;<br align="left"/>let _346: &amp;ReErased &amp;ReErased str;<br align="left"/>let _347: &amp;ReErased str;<br align="left"/>let mut _348: &amp;ReErased arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let _349: ();<br align="left"/>let mut _350: bool;<br align="left"/>let mut _351: u64;<br align="left"/>let mut _352: u64;<br align="left"/>let mut _353: u64;<br align="left"/>let mut _354: u64;<br align="left"/>let mut _355: (u64, bool);<br align="left"/>let mut _356: !;<br align="left"/>let mut _357: anchor_lang::error::Error;<br align="left"/>let mut _358: anchor_lang::error::AnchorError;<br align="left"/>let mut _359: std::string::String;<br align="left"/>let mut _360: &amp;ReErased KaminoVaultError;<br align="left"/>let _361: KaminoVaultError;<br align="left"/>let mut _362: u32;<br align="left"/>let mut _363: KaminoVaultError;<br align="left"/>let mut _364: std::string::String;<br align="left"/>let mut _365: &amp;ReErased KaminoVaultError;<br align="left"/>let _366: KaminoVaultError;<br align="left"/>let mut _367: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _368: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _369: anchor_lang::error::Source;<br align="left"/>let mut _370: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _371: &amp;ReErased operations::vault_operations::common::InvestedReserve;<br align="left"/>let mut _372: &amp;ReErased operations::vault_operations::common::Invested;<br align="left"/>let mut _373: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _374: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _375: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _376: &amp;ReErased state::VaultAllocation;<br align="left"/>let _377: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _378: operations::effects::InvestingDirection;<br align="left"/>let mut _379: (fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;, operations::effects::InvestingDirection);<br align="left"/>let mut _380: bool;<br align="left"/>let mut _381: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _382: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _383: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _384: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _385: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _386: ();<br align="left"/>let mut _387: usize;<br align="left"/>let mut _388: &amp;ReErased str;<br align="left"/>let _389: &amp;ReErased str;<br align="left"/>let mut _390: bool;<br align="left"/>let mut _391: bool;<br align="left"/>let mut _392: bool;<br align="left"/>let mut _393: bool;<br align="left"/>let mut _394: bool;<br align="left"/>let mut _395: bool;<br align="left"/>let _396: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _397: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _398: ();<br align="left"/>let mut _399: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _400: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _401: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _402: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _403: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _404: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _405: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _406: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _407: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _408: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _409: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _410: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _411: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _412: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _413: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _414: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _415: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _416: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _417: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _418: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _419: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _420: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _421: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _422: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _423: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _424: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _425: Closure(DefId(0:2086 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#6}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;,)]);<br align="left"/>let mut _426: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _427: ();<br align="left"/>let mut _428: &amp;ReErased str;<br align="left"/>let _429: &amp;ReErased str;<br align="left"/>let mut _430: &amp;ReErased std::string::String;<br align="left"/>let _431: &amp;ReErased std::string::String;<br align="left"/>let _432: std::string::String;<br align="left"/>let _433: std::string::String;<br align="left"/>let mut _434: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _435: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _436: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _437: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _438: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _439: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _440: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _441: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _442: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _443: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _444: &amp;ReErased &amp;ReErased str;<br align="left"/>let _445: &amp;ReErased &amp;ReErased str;<br align="left"/>let _446: &amp;ReErased str;<br align="left"/>let mut _447: &amp;ReErased arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _448: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _449: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _450: ();<br align="left"/>let mut _451: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _452: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _453: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _454: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _455: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _456: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _457: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _458: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _459: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _460: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _461: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _462: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _463: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _464: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _465: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _466: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _467: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _468: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _469: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _470: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _471: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _472: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _473: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _474: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _475: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _476: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _477: Closure(DefId(0:2089 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#7}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;,)]);<br align="left"/>let mut _478: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _479: ();<br align="left"/>let mut _480: &amp;ReErased str;<br align="left"/>let _481: &amp;ReErased str;<br align="left"/>let mut _482: &amp;ReErased std::string::String;<br align="left"/>let _483: &amp;ReErased std::string::String;<br align="left"/>let _484: std::string::String;<br align="left"/>let _485: std::string::String;<br align="left"/>let mut _486: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _487: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _488: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _489: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _490: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _491: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _492: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _493: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _494: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _495: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _496: &amp;ReErased &amp;ReErased str;<br align="left"/>let _497: &amp;ReErased &amp;ReErased str;<br align="left"/>let _498: &amp;ReErased str;<br align="left"/>let mut _499: &amp;ReErased arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _500: arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let mut _501: arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _502: ();<br align="left"/>let mut _503: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _504: &amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let mut _505: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _506: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _507: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _508: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _509: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _510: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _511: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _512: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _513: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _514: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _515: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _516: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _517: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _518: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _519: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _520: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _521: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _522: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _523: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _524: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _525: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _526: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _527: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _528: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _529: Closure(DefId(0:2092 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#8}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;,)]);<br align="left"/>let mut _530: &amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _531: ();<br align="left"/>let mut _532: &amp;ReErased str;<br align="left"/>let _533: &amp;ReErased str;<br align="left"/>let mut _534: &amp;ReErased std::string::String;<br align="left"/>let _535: &amp;ReErased std::string::String;<br align="left"/>let _536: std::string::String;<br align="left"/>let _537: std::string::String;<br align="left"/>let mut _538: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _539: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _540: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _541: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _542: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _543: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _544: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _545: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _546: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _547: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _548: &amp;ReErased &amp;ReErased str;<br align="left"/>let _549: &amp;ReErased &amp;ReErased str;<br align="left"/>let _550: &amp;ReErased str;<br align="left"/>let mut _551: &amp;ReErased arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _552: arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _553: arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let _554: ();<br align="left"/>let mut _555: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _556: &amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _557: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _558: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _559: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _560: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _561: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _562: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _563: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _564: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _565: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _566: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _567: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _568: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _569: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _570: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _571: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _572: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _573: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _574: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _575: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _576: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _577: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _578: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _579: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _580: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _581: Closure(DefId(0:2095 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#9}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;,)]);<br align="left"/>let mut _582: &amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let _583: ();<br align="left"/>let mut _584: &amp;ReErased str;<br align="left"/>let _585: &amp;ReErased str;<br align="left"/>let mut _586: &amp;ReErased std::string::String;<br align="left"/>let _587: &amp;ReErased std::string::String;<br align="left"/>let _588: std::string::String;<br align="left"/>let _589: std::string::String;<br align="left"/>let mut _590: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _591: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _592: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _593: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _594: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _595: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _596: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _597: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _598: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _599: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _600: &amp;ReErased &amp;ReErased str;<br align="left"/>let _601: &amp;ReErased &amp;ReErased str;<br align="left"/>let _602: &amp;ReErased str;<br align="left"/>let mut _603: &amp;ReErased arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _604: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _605: operations::effects::InvestingDirection;<br align="left"/>let _606: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _607: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _608: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _609: u64;<br align="left"/>let mut _610: &amp;ReErased state::VaultState;<br align="left"/>let _611: ();<br align="left"/>let mut _612: usize;<br align="left"/>let mut _613: &amp;ReErased str;<br align="left"/>let _614: &amp;ReErased str;<br align="left"/>let mut _615: bool;<br align="left"/>let mut _616: bool;<br align="left"/>let mut _617: bool;<br align="left"/>let mut _618: bool;<br align="left"/>let mut _619: bool;<br align="left"/>let mut _620: bool;<br align="left"/>let _621: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _622: arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _623: ();<br align="left"/>let mut _624: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _625: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let mut _626: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _627: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _628: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _629: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _630: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _631: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _632: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _633: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _634: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _635: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _636: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _637: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _638: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _639: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _640: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _641: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _642: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _643: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _644: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _645: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _646: &amp;ReErased u64;<br align="left"/>let _647: &amp;ReErased u64;<br align="left"/>let mut _648: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _649: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _650: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _651: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _652: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _653: Closure(DefId(0:2098 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#10}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;,)]);<br align="left"/>let mut _654: &amp;ReErased mut arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _655: ();<br align="left"/>let mut _656: &amp;ReErased str;<br align="left"/>let _657: &amp;ReErased str;<br align="left"/>let mut _658: &amp;ReErased std::string::String;<br align="left"/>let _659: &amp;ReErased std::string::String;<br align="left"/>let _660: std::string::String;<br align="left"/>let _661: std::string::String;<br align="left"/>let mut _662: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _663: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _664: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _665: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _666: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _667: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _668: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _669: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _670: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _671: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _672: &amp;ReErased &amp;ReErased str;<br align="left"/>let _673: &amp;ReErased &amp;ReErased str;<br align="left"/>let _674: &amp;ReErased str;<br align="left"/>let mut _675: &amp;ReErased arrform::ArrForm&lt;150_usize&gt;;<br align="left"/>let _676: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _677: arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _678: ();<br align="left"/>let mut _679: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _680: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let mut _681: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _682: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _683: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _684: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _685: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _686: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _687: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _688: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _689: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _690: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _691: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _692: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _693: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _694: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _695: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _696: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _697: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _698: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _699: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _700: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _701: &amp;ReErased u64;<br align="left"/>let _702: &amp;ReErased u64;<br align="left"/>let mut _703: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _704: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _705: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _706: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _707: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _708: Closure(DefId(0:2101 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#11}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;,)]);<br align="left"/>let mut _709: &amp;ReErased mut arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _710: ();<br align="left"/>let mut _711: &amp;ReErased str;<br align="left"/>let _712: &amp;ReErased str;<br align="left"/>let mut _713: &amp;ReErased std::string::String;<br align="left"/>let _714: &amp;ReErased std::string::String;<br align="left"/>let _715: std::string::String;<br align="left"/>let _716: std::string::String;<br align="left"/>let mut _717: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _718: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _719: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _720: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _721: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _722: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _723: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _724: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _725: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _726: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _727: &amp;ReErased &amp;ReErased str;<br align="left"/>let _728: &amp;ReErased &amp;ReErased str;<br align="left"/>let _729: &amp;ReErased str;<br align="left"/>let mut _730: &amp;ReErased arrform::ArrForm&lt;300_usize&gt;;<br align="left"/>let _731: arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let mut _732: arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _733: ();<br align="left"/>let mut _734: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _735: &amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let mut _736: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _737: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _738: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _739: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _740: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _741: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _742: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _743: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _744: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _745: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _746: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _747: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _748: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _749: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _750: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _751: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _752: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _753: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _754: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _755: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _756: &amp;ReErased u64;<br align="left"/>let _757: &amp;ReErased u64;<br align="left"/>let mut _758: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _759: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _760: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _761: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _762: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _763: Closure(DefId(0:2104 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#12}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;,)]);<br align="left"/>let mut _764: &amp;ReErased mut arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _765: ();<br align="left"/>let mut _766: &amp;ReErased str;<br align="left"/>let _767: &amp;ReErased str;<br align="left"/>let mut _768: &amp;ReErased std::string::String;<br align="left"/>let _769: &amp;ReErased std::string::String;<br align="left"/>let _770: std::string::String;<br align="left"/>let _771: std::string::String;<br align="left"/>let mut _772: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _773: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _774: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _775: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _776: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _777: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _778: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _779: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _780: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _781: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _782: &amp;ReErased &amp;ReErased str;<br align="left"/>let _783: &amp;ReErased &amp;ReErased str;<br align="left"/>let _784: &amp;ReErased str;<br align="left"/>let mut _785: &amp;ReErased arrform::ArrForm&lt;600_usize&gt;;<br align="left"/>let _786: arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _787: arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let _788: ();<br align="left"/>let mut _789: std::result::Result&lt;(), std::fmt::Error&gt;;<br align="left"/>let mut _790: &amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _791: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _792: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _793: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _794: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _795: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _796: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _797: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _798: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _799: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _800: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _801: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _802: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _803: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _804: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _805: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _806: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _807: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _808: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _809: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _810: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _811: &amp;ReErased u64;<br align="left"/>let _812: &amp;ReErased u64;<br align="left"/>let mut _813: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _814: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _815: &amp;ReErased kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let _816: kamino_lending::utils::FractionDisplay&lt;ReErased&gt;;<br align="left"/>let mut _817: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _818: Closure(DefId(0:2107 ~ kamino_vault[b3c4]::operations::vault_operations::invest::{closure#13}), [ReErased, T/#1, impl Iterator&lt;Item = T&gt;/#2, i32, Binder(extern &quot;RustCall&quot; fn((std::fmt::Error,)), []), (&amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;,)]);<br align="left"/>let mut _819: &amp;ReErased mut arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let _820: ();<br align="left"/>let mut _821: &amp;ReErased str;<br align="left"/>let _822: &amp;ReErased str;<br align="left"/>let mut _823: &amp;ReErased std::string::String;<br align="left"/>let _824: &amp;ReErased std::string::String;<br align="left"/>let _825: std::string::String;<br align="left"/>let _826: std::string::String;<br align="left"/>let mut _827: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _828: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _829: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _830: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _831: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _832: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _833: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _834: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _835: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _836: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _837: &amp;ReErased &amp;ReErased str;<br align="left"/>let _838: &amp;ReErased &amp;ReErased str;<br align="left"/>let _839: &amp;ReErased str;<br align="left"/>let mut _840: &amp;ReErased arrform::ArrForm&lt;1200_usize&gt;;<br align="left"/>let mut _841: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _842: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _843: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _844: u64;<br align="left"/>let mut _845: operations::effects::InvestingDirection;<br align="left"/>let _846: ();<br align="left"/>let mut _847: bool;<br align="left"/>let mut _848: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _849: &amp;ReErased u64;<br align="left"/>let mut _850: !;<br align="left"/>let mut _851: anchor_lang::error::Error;<br align="left"/>let mut _852: anchor_lang::error::AnchorError;<br align="left"/>let mut _853: std::string::String;<br align="left"/>let mut _854: &amp;ReErased KaminoVaultError;<br align="left"/>let _855: KaminoVaultError;<br align="left"/>let mut _856: u32;<br align="left"/>let mut _857: KaminoVaultError;<br align="left"/>let mut _858: std::string::String;<br align="left"/>let mut _859: &amp;ReErased KaminoVaultError;<br align="left"/>let _860: KaminoVaultError;<br align="left"/>let mut _861: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _862: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _863: anchor_lang::error::Source;<br align="left"/>let mut _864: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let _865: kamino_lending::CollateralExchangeRate;<br align="left"/>let mut _866: &amp;ReErased kamino_lending::Reserve;<br align="left"/>let _867: u64;<br align="left"/>let mut _868: bool;<br align="left"/>let mut _869: u64;<br align="left"/>let _870: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _871: &amp;ReErased kamino_lending::CollateralExchangeRate;<br align="left"/>let mut _872: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _873: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _874: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _875: &amp;ReErased kamino_lending::CollateralExchangeRate;<br align="left"/>let mut _876: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _877: u64;<br align="left"/>let _878: u64;<br align="left"/>let mut _879: u64;<br align="left"/>let mut _880: bool;<br align="left"/>let mut _881: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _882: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _883: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _884: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _885: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _886: ();<br align="left"/>let mut _887: isize;<br align="left"/>let mut _888: u64;<br align="left"/>let mut _889: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _890: ();<br align="left"/>let mut _891: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _892: u64;<br align="left"/>let mut _893: u64;<br align="left"/>let mut _894: u64;<br align="left"/>let mut _895: (u64, bool);<br align="left"/>let _896: ();<br align="left"/>let mut _897: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _898: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _899: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _900: u64;<br align="left"/>let mut _901: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _902: isize;<br align="left"/>let _903: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _904: !;<br align="left"/>let mut _905: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _906: ();<br align="left"/>let mut _907: u64;<br align="left"/>let mut _908: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let _909: ();<br align="left"/>let mut _910: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _911: u64;<br align="left"/>let mut _912: u64;<br align="left"/>let mut _913: u64;<br align="left"/>let mut _914: (u64, bool);<br align="left"/>let _915: ();<br align="left"/>let mut _916: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _917: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _918: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _919: u64;<br align="left"/>let mut _920: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _921: isize;<br align="left"/>let _922: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _923: !;<br align="left"/>let mut _924: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _925: ();<br align="left"/>let _926: ();<br align="left"/>let mut _927: bool;<br align="left"/>let mut _928: u64;<br align="left"/>let mut _929: u64;<br align="left"/>let mut _930: u64;<br align="left"/>let mut _931: (u64, bool);<br align="left"/>let _932: ();<br align="left"/>let mut _933: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _934: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _935: &amp;ReErased mut state::VaultState;<br align="left"/>let mut _936: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _937: u64;<br align="left"/>let mut _938: isize;<br align="left"/>let _939: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _940: !;<br align="left"/>let mut _941: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _942: ();<br align="left"/>let mut _943: operations::effects::InvestEffects;<br align="left"/>let mut _944: u64;<br align="left"/>let mut _945: operations::effects::InvestingDirection;<br align="left"/>let mut _946: u64;<br align="left"/>let mut _947: u64;<br align="left"/>let mut _948: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _949: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _950: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _951: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _952: &amp;ReErased fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;;<br align="left"/>let mut _953: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _954: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _955: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _956: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _957: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _958: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _959: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _960: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _961: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _962: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _963: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _964: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _965: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _966: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _967: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _968: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _969: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _970: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _971: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _972: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _973: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _974: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _975: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _976: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _977: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _978: &amp;ReErased KaminoVaultError;<br align="left"/>let mut _979: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _980: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _981: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _982: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _983: bool;<br align="left"/>let mut _984: isize;<br align="left"/>let mut _985: isize;<br align="left"/>let mut _986: isize;<br align="left"/>let mut _987: isize;<br align="left"/>let mut _988: isize;<br align="left"/>let mut _989: isize;<br align="left"/>let mut _990: isize;<br align="left"/>let mut _991: isize;<br align="left"/>let mut _992: isize;<br align="left"/>let mut _993: isize;<br align="left"/>let mut _994: isize;<br align="left"/>let mut _995: isize;<br align="left"/>let mut _996: isize;<br align="left"/>let mut _997: isize;<br align="left"/>let mut _998: isize;<br align="left"/>let mut _999: isize;<br align="left"/>let mut _1000: isize;<br align="left"/>let mut _1001: isize;<br align="left"/>let mut _1002: isize;<br align="left"/>let mut _1003: isize;<br align="left"/>let mut _1004: isize;<br align="left"/>let mut _1005: isize;<br align="left"/>let mut _1006: isize;<br align="left"/>let mut _1007: isize;<br align="left"/>let mut _1008: isize;<br align="left"/>let mut _1009: isize;<br align="left"/>let mut _1010: isize;<br align="left"/>let mut _1011: isize;<br align="left"/>let mut _1012: isize;<br align="left"/>let mut _1013: isize;<br align="left"/>let mut _1014: isize;<br align="left"/>let mut _1015: isize;<br align="left"/>let mut _1016: isize;<br align="left"/>let mut _1017: isize;<br align="left"/>let mut _1018: isize;<br align="left"/>debug vault =&gt; _1;<br align="left"/>debug reserves_iter =&gt; _2;<br align="left"/>debug reserve =&gt; _3;<br align="left"/>debug reserve_address =&gt; _4;<br align="left"/>debug current_slot =&gt; _5;<br align="left"/>debug current_timestamp =&gt; _6;<br align="left"/>debug holdings =&gt; _7;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug formatted =&gt; _19;<br align="left"/>debug af =&gt; _20;<br align="left"/>debug res =&gt; _44;<br align="left"/>debug formatted =&gt; _60;<br align="left"/>debug af =&gt; _61;<br align="left"/>debug res =&gt; _87;<br align="left"/>debug invested =&gt; _102;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug allocation_for_reserve =&gt; _145;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug formatted =&gt; _165;<br align="left"/>debug af =&gt; _166;<br align="left"/>debug res =&gt; _196;<br align="left"/>debug formatted =&gt; _211;<br align="left"/>debug af =&gt; _212;<br align="left"/>debug res =&gt; _242;<br align="left"/>debug formatted =&gt; _257;<br align="left"/>debug af =&gt; _258;<br align="left"/>debug res =&gt; _288;<br align="left"/>debug formatted =&gt; _303;<br align="left"/>debug af =&gt; _304;<br align="left"/>debug res =&gt; _334;<br align="left"/>debug invested_in_reserve =&gt; _371;<br align="left"/>debug actual_tokens_invested =&gt; _374;<br align="left"/>debug target_tokens_invested =&gt; _375;<br align="left"/>debug liquidity_f =&gt; _377;<br align="left"/>debug direction =&gt; _378;<br align="left"/>debug diff =&gt; _383;<br align="left"/>debug formatted =&gt; _396;<br align="left"/>debug af =&gt; _397;<br align="left"/>debug res =&gt; _433;<br align="left"/>debug formatted =&gt; _448;<br align="left"/>debug af =&gt; _449;<br align="left"/>debug res =&gt; _485;<br align="left"/>debug formatted =&gt; _500;<br align="left"/>debug af =&gt; _501;<br align="left"/>debug res =&gt; _537;<br align="left"/>debug formatted =&gt; _552;<br align="left"/>debug af =&gt; _553;<br align="left"/>debug res =&gt; _589;<br align="left"/>debug diff =&gt; _606;<br align="left"/>debug available =&gt; _609;<br align="left"/>debug formatted =&gt; _621;<br align="left"/>debug af =&gt; _622;<br align="left"/>debug res =&gt; _661;<br align="left"/>debug formatted =&gt; _676;<br align="left"/>debug af =&gt; _677;<br align="left"/>debug res =&gt; _716;<br align="left"/>debug formatted =&gt; _731;<br align="left"/>debug af =&gt; _732;<br align="left"/>debug res =&gt; _771;<br align="left"/>debug formatted =&gt; _786;<br align="left"/>debug af =&gt; _787;<br align="left"/>debug res =&gt; _826;<br align="left"/>debug exchange_rate =&gt; _865;<br align="left"/>debug collateral_amount =&gt; _867;<br align="left"/>debug collateral_f =&gt; _870;<br align="left"/>debug liquidity_amount_f =&gt; _874;<br align="left"/>debug liquidity_amount =&gt; _878;<br align="left"/>debug rounding_loss =&gt; _879;<br align="left"/>debug residual =&gt; _903;<br align="left"/>debug val =&gt; _906;<br align="left"/>debug residual =&gt; _922;<br align="left"/>debug val =&gt; _925;<br align="left"/>debug residual =&gt; _939;<br align="left"/>debug val =&gt; _942;<br align="left"/>>;
    bb0__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_983 = const false<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = move _2<br/>StorageLive(_12)<br/>_12 = _5<br/></td></tr><tr><td align="left">_9 = holdings::&lt;'_, T, impl Iterator&lt;Item = T&gt;&gt;(move _10, move _11, move _12)</td></tr></table>>];
    bb1__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;Holdings, anchor_lang::error::Error&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_13 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb3__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_8 as Continue).0: operations::vault_operations::common::Holdings)<br/>_983 = const true<br/>_7 = move _17<br/>StorageDead(_17)<br/>_984 = discriminant(_8)<br/>StorageDead(_8)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/></td></tr><tr><td align="left">_20 = ArrForm::&lt;50&gt;::new()</td></tr></table>>];
    bb4__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_16)<br/>_16 = move _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InvestEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb6__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>_1010 = discriminant(_8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;mut _20<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_982 = const _<br/>_27 = &amp;(*_982)<br/>_26 = &amp;(*_27)<br/>_25 = move _26 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_26)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;(_7.0: u64)<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _34)</td></tr></table>>];
    bb8__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = [move _33]<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_24 = Arguments::&lt;'_&gt;::new_v1(move _25, move _29)</td></tr></table>>];
    bb9__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_22 = ArrForm::&lt;50&gt;::format(move _23, move _24)</td></tr></table>>];
    bb10__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;mut _20<br/>_36 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _37 }<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_21 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _22, move _36)</td></tr></table>>];
    bb11__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_22)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>StorageDead(_21)<br/>_19 = move _20<br/>StorageDead(_20)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_981 = const _<br/>_48 = &amp;(*_981)<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;_19<br/></td></tr><tr><td align="left">_57 = ArrForm::&lt;50&gt;::as_str(move _58)</td></tr></table>>];
    bb12__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = &amp;_57<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _55)</td></tr></table>>];
    bb13__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = [move _54]<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_45 = Arguments::&lt;'_&gt;::new_v1(move _46, move _50)</td></tr></table>>];
    bb14__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = format(move _45)</td></tr></table>>];
    bb15__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>_43 = move _44<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = &lt;String as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb16__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_39 = &amp;(*_40)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_38 = solana_program::log::sol_log(move _39)</td></tr></table>>];
    bb17__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb18__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>_18 = const ()<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/></td></tr><tr><td align="left">_61 = ArrForm::&lt;50&gt;::new()</td></tr></table>>];
    bb19__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;mut _61<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_980 = const _<br/>_68 = &amp;(*_980)<br/>_67 = &amp;(*_68)<br/>_66 = move _67 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_67)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;((_7.1: operations::vault_operations::common::Invested).1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/></td></tr><tr><td align="left">_77 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _78)</td></tr></table>>];
    bb20__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _75)</td></tr></table>>];
    bb21__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_73 = [move _74]<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_65 = Arguments::&lt;'_&gt;::new_v1(move _66, move _70)</td></tr></table>>];
    bb22__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = ArrForm::&lt;50&gt;::format(move _64, move _65)</td></tr></table>>];
    bb23__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;mut _61<br/>_79 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _80 }<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_62 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _63, move _79)</td></tr></table>>];
    bb24__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_63)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>StorageDead(_62)<br/>_60 = move _61<br/>StorageDead(_61)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_979 = const _<br/>_91 = &amp;(*_979)<br/>_90 = &amp;(*_91)<br/>_89 = move _90 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;_60<br/></td></tr><tr><td align="left">_100 = ArrForm::&lt;50&gt;::as_str(move _101)</td></tr></table>>];
    bb25__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = &amp;_100<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _98)</td></tr></table>>];
    bb26__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_96 = [move _97]<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/>_93 = move _94 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_88 = Arguments::&lt;'_&gt;::new_v1(move _89, move _93)</td></tr></table>>];
    bb27__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = format(move _88)</td></tr></table>>];
    bb28__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>_86 = move _87<br/>StorageDead(_87)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = &lt;String as Deref&gt;::deref(move _84)</td></tr></table>>];
    bb29__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_82 = &amp;(*_83)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_81 = solana_program::log::sol_log(move _82)</td></tr></table>>];
    bb30__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb31__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>_59 = const ()<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageLive(_102)<br/>_983 = const false<br/>_102 = move (_7.1: operations::vault_operations::common::Invested)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;mut (*_1)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_102<br/>_107 = &amp;(*_108)<br/>StorageLive(_109)<br/>_109 = _6<br/></td></tr><tr><td align="left">_105 = charge_fees(move _106, move _107, move _109)</td></tr></table>>];
    bb32__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb33__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_110 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb34__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_104 as Continue).0: ())<br/>_103 = _114<br/>StorageDead(_114)<br/>_986 = discriminant(_104)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_1)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;_102<br/>_119 = &amp;(*_120)<br/></td></tr><tr><td align="left">_117 = state::VaultState::refresh_target_allocations(move _118, move _119)</td></tr></table>>];
    bb35__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = move ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_113)<br/>_113 = move _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InvestEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb36__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>_1008 = discriminant(_104)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb38__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_121 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb39__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_116 as Continue).0: ())<br/>_115 = _125<br/>StorageDead(_125)<br/>_988 = discriminant(_116)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;(*_1)<br/>StorageLive(_129)<br/>_129 = (*_4)<br/></td></tr><tr><td align="left">_127 = state::VaultState::is_allocated_to_reserve(move _128, move _129)</td></tr></table>>];
    bb40__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = move ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_124)<br/>_124 = move _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InvestEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb41__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>_1006 = discriminant(_116)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb43__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>_126 = const ()<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_148 = &amp;(*_1)<br/>StorageLive(_149)<br/>_149 = &amp;(*_4)<br/></td></tr><tr><td align="left">_147 = state::VaultState::allocation_for_reserve(move _148, move _149)</td></tr></table>>];
    bb44__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_978 = const _<br/>_134 = &amp;(*_978)<br/></td></tr><tr><td align="left">_133 = KaminoVaultError::name(move _134)</td></tr></table>>];
    bb45__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = KaminoVaultError::ReserveNotPartOfAllocations<br/></td></tr><tr><td align="left">_136 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _137)</td></tr></table>>];
    bb46__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_977 = const _<br/>_139 = &amp;(*_977)<br/></td></tr><tr><td align="left">_138 = &lt;KaminoVaultError as ToString&gt;::to_string(move _139)</td></tr></table>>];
    bb47__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\operations\\vault_operations.rs&quot;, line: const 434_u32 }<br/>_142 = anchor_lang::error::ErrorOrigin::Source(move _143)<br/>StorageDead(_143)<br/>_141 = Option::&lt;ErrorOrigin&gt;::Some(move _142)<br/>StorageDead(_142)<br/>StorageLive(_144)<br/>_144 = Option::&lt;ComparedValues&gt;::None<br/>_132 = anchor_lang::error::AnchorError { error_name: move _133, error_code_number: move _136, error_msg: move _138, error_origin: move _141, compared_values: move _144 }<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _132)</td></tr></table>>];
    bb48__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_0 = std::result::Result::&lt;InvestEffects, anchor_lang::error::Error&gt;::Err(move _131)<br/>StorageDead(_131)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::result::Result&lt;&amp;VaultAllocation, anchor_lang::error::Error&gt; as Try&gt;::branch(move _147)</td></tr></table>>];
    bb50__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_150 = discriminant(_146)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb51__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = ((_146 as Continue).0: &amp;state::VaultAllocation)<br/>_145 = _154<br/>StorageDead(_154)<br/>_990 = discriminant(_146)<br/>StorageDead(_146)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = const &quot;alloc_for_reserve address {} weight {} cap {}&quot;<br/>_157 = &amp;(*_158)<br/></td></tr><tr><td align="left">_156 = core::str::&lt;impl str&gt;::len(move _157)</td></tr></table>>];
    bb52__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = move ((_146 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_153)<br/>_153 = move _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InvestEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb53__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>_1004 = discriminant(_146)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_163 = Le(const 0_usize, _156)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb55__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_164 = Le(_156, const 50_usize)<br/></td></tr><tr><td align="left">switchInt(move _164)</td></tr></table>>];
    bb56__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_161 = Le(const 51_usize, _156)<br/></td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb57__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_162 = Le(_156, const 100_usize)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb58__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_159 = Le(const 101_usize, _156)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb59__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_160 = Le(_156, const 200_usize)<br/></td></tr><tr><td align="left">switchInt(move _160)</td></tr></table>>];
    bb60__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_303)<br/>StorageLive(_304)<br/></td></tr><tr><td align="left">_304 = ArrForm::&lt;1200&gt;::new()</td></tr></table>>];
    bb61__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>StorageLive(_166)<br/></td></tr><tr><td align="left">_166 = ArrForm::&lt;150&gt;::new()</td></tr></table>>];
    bb62__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;mut _166<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_976 = const _<br/>_173 = &amp;(*_976)<br/>_172 = &amp;(*_173)<br/>_171 = move _172 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_172)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = &amp;((*_145).0: anchor_lang::prelude::Pubkey)<br/>_180 = &amp;(*_181)<br/></td></tr><tr><td align="left">_179 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _180)</td></tr></table>>];
    bb63__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_184 = &amp;((*_145).2: u64)<br/>_183 = &amp;(*_184)<br/></td></tr><tr><td align="left">_182 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _183)</td></tr></table>>];
    bb64__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = &amp;((*_145).3: u64)<br/>_186 = &amp;(*_187)<br/></td></tr><tr><td align="left">_185 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _186)</td></tr></table>>];
    bb65__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_178 = [move _179, move _182, move _185]<br/>StorageDead(_185)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>_177 = &amp;_178<br/>_176 = &amp;(*_177)<br/>_175 = move _176 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">_170 = Arguments::&lt;'_&gt;::new_v1(move _171, move _175)</td></tr></table>>];
    bb66__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">_168 = ArrForm::&lt;150&gt;::format(move _169, move _170)</td></tr></table>>];
    bb67__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_169)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;mut _166<br/>_188 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _189 }<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_167 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _168, move _188)</td></tr></table>>];
    bb68__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_168)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_181)<br/>StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_173)<br/>StorageDead(_167)<br/>_165 = move _166<br/>StorageDead(_166)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_975 = const _<br/>_200 = &amp;(*_975)<br/>_199 = &amp;(*_200)<br/>_198 = move _199 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_199)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = &amp;_165<br/></td></tr><tr><td align="left">_209 = ArrForm::&lt;150&gt;::as_str(move _210)</td></tr></table>>];
    bb69__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>_208 = &amp;_209<br/>_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _207)</td></tr></table>>];
    bb70__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>_205 = [move _206]<br/>StorageDead(_206)<br/>_204 = &amp;_205<br/>_203 = &amp;(*_204)<br/>_202 = move _203 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_197 = Arguments::&lt;'_&gt;::new_v1(move _198, move _202)</td></tr></table>>];
    bb71__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = format(move _197)</td></tr></table>>];
    bb72__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>_195 = move _196<br/>StorageDead(_196)<br/>_194 = &amp;_195<br/>_193 = &amp;(*_194)<br/></td></tr><tr><td align="left">_192 = &lt;String as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb73__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_191 = &amp;(*_192)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_190 = solana_program::log::sol_log(move _191)</td></tr></table>>];
    bb74__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/></td></tr><tr><td align="left">drop(_195)</td></tr></table>>];
    bb75__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>_155 = const ()<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>StorageLive(_212)<br/></td></tr><tr><td align="left">_212 = ArrForm::&lt;300&gt;::new()</td></tr></table>>];
    bb77__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;mut _212<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_974 = const _<br/>_219 = &amp;(*_974)<br/>_218 = &amp;(*_219)<br/>_217 = move _218 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_218)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = &amp;((*_145).0: anchor_lang::prelude::Pubkey)<br/>_226 = &amp;(*_227)<br/></td></tr><tr><td align="left">_225 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _226)</td></tr></table>>];
    bb78__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_230 = &amp;((*_145).2: u64)<br/>_229 = &amp;(*_230)<br/></td></tr><tr><td align="left">_228 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _229)</td></tr></table>>];
    bb79__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>_233 = &amp;((*_145).3: u64)<br/>_232 = &amp;(*_233)<br/></td></tr><tr><td align="left">_231 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _232)</td></tr></table>>];
    bb80__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>_224 = [move _225, move _228, move _231]<br/>StorageDead(_231)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>_223 = &amp;_224<br/>_222 = &amp;(*_223)<br/>_221 = move _222 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_216 = Arguments::&lt;'_&gt;::new_v1(move _217, move _221)</td></tr></table>>];
    bb81__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">_214 = ArrForm::&lt;300&gt;::format(move _215, move _216)</td></tr></table>>];
    bb82__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;mut _212<br/>_234 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _235 }<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">_213 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _214, move _234)</td></tr></table>>];
    bb83__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_214)<br/>StorageDead(_233)<br/>StorageDead(_230)<br/>StorageDead(_227)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_219)<br/>StorageDead(_213)<br/>_211 = move _212<br/>StorageDead(_212)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_973 = const _<br/>_246 = &amp;(*_973)<br/>_245 = &amp;(*_246)<br/>_244 = move _245 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_245)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>_256 = &amp;_211<br/></td></tr><tr><td align="left">_255 = ArrForm::&lt;300&gt;::as_str(move _256)</td></tr></table>>];
    bb84__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>_254 = &amp;_255<br/>_253 = &amp;(*_254)<br/></td></tr><tr><td align="left">_252 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _253)</td></tr></table>>];
    bb85__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>_251 = [move _252]<br/>StorageDead(_252)<br/>_250 = &amp;_251<br/>_249 = &amp;(*_250)<br/>_248 = move _249 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">_243 = Arguments::&lt;'_&gt;::new_v1(move _244, move _248)</td></tr></table>>];
    bb86__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">_242 = format(move _243)</td></tr></table>>];
    bb87__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageDead(_246)<br/>_241 = move _242<br/>StorageDead(_242)<br/>_240 = &amp;_241<br/>_239 = &amp;(*_240)<br/></td></tr><tr><td align="left">_238 = &lt;String as Deref&gt;::deref(move _239)</td></tr></table>>];
    bb88__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_237 = &amp;(*_238)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">_236 = solana_program::log::sol_log(move _237)</td></tr></table>>];
    bb89__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/></td></tr><tr><td align="left">drop(_241)</td></tr></table>>];
    bb90__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_236)<br/>_155 = const ()<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_257)<br/>StorageLive(_258)<br/></td></tr><tr><td align="left">_258 = ArrForm::&lt;600&gt;::new()</td></tr></table>>];
    bb92__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_261 = &amp;mut _258<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_972 = const _<br/>_265 = &amp;(*_972)<br/>_264 = &amp;(*_265)<br/>_263 = move _264 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_264)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_273 = &amp;((*_145).0: anchor_lang::prelude::Pubkey)<br/>_272 = &amp;(*_273)<br/></td></tr><tr><td align="left">_271 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _272)</td></tr></table>>];
    bb93__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>_276 = &amp;((*_145).2: u64)<br/>_275 = &amp;(*_276)<br/></td></tr><tr><td align="left">_274 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _275)</td></tr></table>>];
    bb94__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>_279 = &amp;((*_145).3: u64)<br/>_278 = &amp;(*_279)<br/></td></tr><tr><td align="left">_277 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _278)</td></tr></table>>];
    bb95__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>_270 = [move _271, move _274, move _277]<br/>StorageDead(_277)<br/>StorageDead(_274)<br/>StorageDead(_271)<br/>_269 = &amp;_270<br/>_268 = &amp;(*_269)<br/>_267 = move _268 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_268)<br/></td></tr><tr><td align="left">_262 = Arguments::&lt;'_&gt;::new_v1(move _263, move _267)</td></tr></table>>];
    bb96__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageDead(_263)<br/></td></tr><tr><td align="left">_260 = ArrForm::&lt;600&gt;::format(move _261, move _262)</td></tr></table>>];
    bb97__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_261)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = &amp;mut _258<br/>_280 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _281 }<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">_259 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _260, move _280)</td></tr></table>>];
    bb98__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_260)<br/>StorageDead(_279)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_269)<br/>StorageDead(_265)<br/>StorageDead(_259)<br/>_257 = move _258<br/>StorageDead(_258)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_971 = const _<br/>_292 = &amp;(*_971)<br/>_291 = &amp;(*_292)<br/>_290 = move _291 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_291)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_302 = &amp;_257<br/></td></tr><tr><td align="left">_301 = ArrForm::&lt;600&gt;::as_str(move _302)</td></tr></table>>];
    bb99__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>_300 = &amp;_301<br/>_299 = &amp;(*_300)<br/></td></tr><tr><td align="left">_298 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _299)</td></tr></table>>];
    bb100__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_297 = [move _298]<br/>StorageDead(_298)<br/>_296 = &amp;_297<br/>_295 = &amp;(*_296)<br/>_294 = move _295 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">_289 = Arguments::&lt;'_&gt;::new_v1(move _290, move _294)</td></tr></table>>];
    bb101__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">_288 = format(move _289)</td></tr></table>>];
    bb102__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>StorageDead(_292)<br/>_287 = move _288<br/>StorageDead(_288)<br/>_286 = &amp;_287<br/>_285 = &amp;(*_286)<br/></td></tr><tr><td align="left">_284 = &lt;String as Deref&gt;::deref(move _285)</td></tr></table>>];
    bb103__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_283 = &amp;(*_284)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">_282 = solana_program::log::sol_log(move _283)</td></tr></table>>];
    bb104__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/></td></tr><tr><td align="left">drop(_287)</td></tr></table>>];
    bb105__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_282)<br/>_155 = const ()<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>_307 = &amp;mut _304<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_970 = const _<br/>_311 = &amp;(*_970)<br/>_310 = &amp;(*_311)<br/>_309 = move _310 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_310)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = &amp;((*_145).0: anchor_lang::prelude::Pubkey)<br/>_318 = &amp;(*_319)<br/></td></tr><tr><td align="left">_317 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _318)</td></tr></table>>];
    bb107__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>_322 = &amp;((*_145).2: u64)<br/>_321 = &amp;(*_322)<br/></td></tr><tr><td align="left">_320 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _321)</td></tr></table>>];
    bb108__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = &amp;((*_145).3: u64)<br/>_324 = &amp;(*_325)<br/></td></tr><tr><td align="left">_323 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _324)</td></tr></table>>];
    bb109__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>_316 = [move _317, move _320, move _323]<br/>StorageDead(_323)<br/>StorageDead(_320)<br/>StorageDead(_317)<br/>_315 = &amp;_316<br/>_314 = &amp;(*_315)<br/>_313 = move _314 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">_308 = Arguments::&lt;'_&gt;::new_v1(move _309, move _313)</td></tr></table>>];
    bb110__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">_306 = ArrForm::&lt;1200&gt;::format(move _307, move _308)</td></tr></table>>];
    bb111__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_307)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>_327 = &amp;mut _304<br/>_326 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _327 }<br/>StorageDead(_327)<br/></td></tr><tr><td align="left">_305 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _306, move _326)</td></tr></table>>];
    bb112__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_306)<br/>StorageDead(_325)<br/>StorageDead(_322)<br/>StorageDead(_319)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageDead(_311)<br/>StorageDead(_305)<br/>_303 = move _304<br/>StorageDead(_304)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>_969 = const _<br/>_338 = &amp;(*_969)<br/>_337 = &amp;(*_338)<br/>_336 = move _337 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_337)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>_348 = &amp;_303<br/></td></tr><tr><td align="left">_347 = ArrForm::&lt;1200&gt;::as_str(move _348)</td></tr></table>>];
    bb113__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>_346 = &amp;_347<br/>_345 = &amp;(*_346)<br/></td></tr><tr><td align="left">_344 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _345)</td></tr></table>>];
    bb114__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>_343 = [move _344]<br/>StorageDead(_344)<br/>_342 = &amp;_343<br/>_341 = &amp;(*_342)<br/>_340 = move _341 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">_335 = Arguments::&lt;'_&gt;::new_v1(move _336, move _340)</td></tr></table>>];
    bb115__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">_334 = format(move _335)</td></tr></table>>];
    bb116__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageDead(_347)<br/>StorageDead(_346)<br/>StorageDead(_343)<br/>StorageDead(_342)<br/>StorageDead(_338)<br/>_333 = move _334<br/>StorageDead(_334)<br/>_332 = &amp;_333<br/>_331 = &amp;(*_332)<br/></td></tr><tr><td align="left">_330 = &lt;String as Deref&gt;::deref(move _331)</td></tr></table>>];
    bb117__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_329 = &amp;(*_330)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">_328 = solana_program::log::sol_log(move _329)</td></tr></table>>];
    bb118__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">drop(_333)</td></tr></table>>];
    bb119__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_333)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_328)<br/>_155 = const ()<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = _5<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = ((*_145).7: u64)<br/>StorageLive(_354)<br/>_354 = ((*_1).23: u64)<br/>_355 = CheckedAdd(_353, _354)<br/></td></tr><tr><td align="left">assert(!move (_355.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _353, move _354)</td></tr></table>>];
    bb121__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_352 = move (_355.0: u64)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/>_350 = Lt(move _351, move _352)<br/></td></tr><tr><td align="left">switchInt(move _350)</td></tr></table>>];
    bb122__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_351)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>_949 = const _<br/>_360 = &amp;(*_949)<br/></td></tr><tr><td align="left">_359 = KaminoVaultError::name(move _360)</td></tr></table>>];
    bb123__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_360)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>_363 = KaminoVaultError::InvestTooSoon<br/></td></tr><tr><td align="left">_362 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _363)</td></tr></table>>];
    bb124__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>_948 = const _<br/>_365 = &amp;(*_948)<br/></td></tr><tr><td align="left">_364 = &lt;KaminoVaultError as ToString&gt;::to_string(move _365)</td></tr></table>>];
    bb125__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\operations\\vault_operations.rs&quot;, line: const 446_u32 }<br/>_368 = anchor_lang::error::ErrorOrigin::Source(move _369)<br/>StorageDead(_369)<br/>_367 = Option::&lt;ErrorOrigin&gt;::Some(move _368)<br/>StorageDead(_368)<br/>StorageLive(_370)<br/>_370 = Option::&lt;ComparedValues&gt;::None<br/>_358 = anchor_lang::error::AnchorError { error_name: move _359, error_code_number: move _362, error_msg: move _364, error_origin: move _367, compared_values: move _370 }<br/>StorageDead(_370)<br/>StorageDead(_367)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_359)<br/></td></tr><tr><td align="left">_357 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _358)</td></tr></table>>];
    bb126__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/>_0 = std::result::Result::&lt;InvestEffects, anchor_lang::error::Error&gt;::Err(move _357)<br/>StorageDead(_357)<br/>StorageDead(_350)<br/>StorageDead(_349)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_351)<br/>_349 = const ()<br/>StorageDead(_350)<br/>StorageDead(_349)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = &amp;_102<br/>StorageLive(_373)<br/>_373 = &amp;(*_4)<br/></td></tr><tr><td align="left">_371 = Invested::in_reserve(move _372, move _373)</td></tr></table>>];
    bb128__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>StorageDead(_372)<br/>StorageLive(_374)<br/>_374 = ((*_371).1: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>_376 = &amp;(*_145)<br/></td></tr><tr><td align="left">_375 = VaultAllocation::get_token_target_allocation(move _376)</td></tr></table>>];
    bb129__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>_381 = &amp;_374<br/>StorageLive(_382)<br/>_382 = &amp;_375<br/></td></tr><tr><td align="left">_380 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _381, move _382)</td></tr></table>>];
    bb130__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left">switchInt(move _380)</td></tr></table>>];
    bb131__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_381)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>_384 = _374<br/>StorageLive(_385)<br/>_385 = _375<br/></td></tr><tr><td align="left">_383 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _384, move _385)</td></tr></table>>];
    bb132__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/>StorageDead(_384)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>_389 = const &quot;Actual {} target {}, need to Subtract {}&quot;<br/>_388 = &amp;(*_389)<br/></td></tr><tr><td align="left">_387 = core::str::&lt;impl str&gt;::len(move _388)</td></tr></table>>];
    bb133__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>_394 = Le(const 0_usize, _387)<br/></td></tr><tr><td align="left">switchInt(move _394)</td></tr></table>>];
    bb134__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">_395 = Le(_387, const 50_usize)<br/></td></tr><tr><td align="left">switchInt(move _395)</td></tr></table>>];
    bb135__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">_392 = Le(const 51_usize, _387)<br/></td></tr><tr><td align="left">switchInt(move _392)</td></tr></table>>];
    bb136__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">_393 = Le(_387, const 100_usize)<br/></td></tr><tr><td align="left">switchInt(move _393)</td></tr></table>>];
    bb137__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">_390 = Le(const 101_usize, _387)<br/></td></tr><tr><td align="left">switchInt(move _390)</td></tr></table>>];
    bb138__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_391 = Le(_387, const 200_usize)<br/></td></tr><tr><td align="left">switchInt(move _391)</td></tr></table>>];
    bb139__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_552)<br/>StorageLive(_553)<br/></td></tr><tr><td align="left">_553 = ArrForm::&lt;1200&gt;::new()</td></tr></table>>];
    bb140__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>StorageLive(_397)<br/></td></tr><tr><td align="left">_397 = ArrForm::&lt;150&gt;::new()</td></tr></table>>];
    bb141__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_400 = &amp;mut _397<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_960 = const _<br/>_404 = &amp;(*_960)<br/>_403 = &amp;(*_404)<br/>_402 = move _403 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_403)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = &amp;_374<br/></td></tr><tr><td align="left">_413 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _414)</td></tr></table>>];
    bb142__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>_412 = &amp;_413<br/>_411 = &amp;(*_412)<br/></td></tr><tr><td align="left">_410 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _411)</td></tr></table>>];
    bb143__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>_419 = &amp;_375<br/></td></tr><tr><td align="left">_418 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _419)</td></tr></table>>];
    bb144__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>_417 = &amp;_418<br/>_416 = &amp;(*_417)<br/></td></tr><tr><td align="left">_415 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _416)</td></tr></table>>];
    bb145__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_416)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>_424 = &amp;_383<br/></td></tr><tr><td align="left">_423 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _424)</td></tr></table>>];
    bb146__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>_422 = &amp;_423<br/>_421 = &amp;(*_422)<br/></td></tr><tr><td align="left">_420 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _421)</td></tr></table>>];
    bb147__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>_409 = [move _410, move _415, move _420]<br/>StorageDead(_420)<br/>StorageDead(_415)<br/>StorageDead(_410)<br/>_408 = &amp;_409<br/>_407 = &amp;(*_408)<br/>_406 = move _407 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_407)<br/></td></tr><tr><td align="left">_401 = Arguments::&lt;'_&gt;::new_v1(move _402, move _406)</td></tr></table>>];
    bb148__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">_399 = ArrForm::&lt;150&gt;::format(move _400, move _401)</td></tr></table>>];
    bb149__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/>StorageDead(_400)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>_426 = &amp;mut _397<br/>_425 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _426 }<br/>StorageDead(_426)<br/></td></tr><tr><td align="left">_398 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _399, move _425)</td></tr></table>>];
    bb150__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/>StorageDead(_399)<br/>StorageDead(_423)<br/>StorageDead(_422)<br/>StorageDead(_418)<br/>StorageDead(_417)<br/>StorageDead(_413)<br/>StorageDead(_412)<br/>StorageDead(_409)<br/>StorageDead(_408)<br/>StorageDead(_404)<br/>StorageDead(_398)<br/>_396 = move _397<br/>StorageDead(_397)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>_959 = const _<br/>_437 = &amp;(*_959)<br/>_436 = &amp;(*_437)<br/>_435 = move _436 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_436)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>_447 = &amp;_396<br/></td></tr><tr><td align="left">_446 = ArrForm::&lt;150&gt;::as_str(move _447)</td></tr></table>>];
    bb151__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>_445 = &amp;_446<br/>_444 = &amp;(*_445)<br/></td></tr><tr><td align="left">_443 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _444)</td></tr></table>>];
    bb152__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>_442 = [move _443]<br/>StorageDead(_443)<br/>_441 = &amp;_442<br/>_440 = &amp;(*_441)<br/>_439 = move _440 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_440)<br/></td></tr><tr><td align="left">_434 = Arguments::&lt;'_&gt;::new_v1(move _435, move _439)</td></tr></table>>];
    bb153__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageDead(_435)<br/></td></tr><tr><td align="left">_433 = format(move _434)</td></tr></table>>];
    bb154__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/>StorageDead(_446)<br/>StorageDead(_445)<br/>StorageDead(_442)<br/>StorageDead(_441)<br/>StorageDead(_437)<br/>_432 = move _433<br/>StorageDead(_433)<br/>_431 = &amp;_432<br/>_430 = &amp;(*_431)<br/></td></tr><tr><td align="left">_429 = &lt;String as Deref&gt;::deref(move _430)</td></tr></table>>];
    bb155__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">_428 = &amp;(*_429)<br/>StorageDead(_430)<br/></td></tr><tr><td align="left">_427 = solana_program::log::sol_log(move _428)</td></tr></table>>];
    bb156__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/></td></tr><tr><td align="left">drop(_432)</td></tr></table>>];
    bb157__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_431)<br/>StorageDead(_429)<br/>StorageDead(_427)<br/>_386 = const ()<br/>StorageDead(_396)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_448)<br/>StorageLive(_449)<br/></td></tr><tr><td align="left">_449 = ArrForm::&lt;300&gt;::new()</td></tr></table>>];
    bb159__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>_452 = &amp;mut _449<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_958 = const _<br/>_456 = &amp;(*_958)<br/>_455 = &amp;(*_456)<br/>_454 = move _455 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_455)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>_466 = &amp;_374<br/></td></tr><tr><td align="left">_465 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _466)</td></tr></table>>];
    bb160__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/>_464 = &amp;_465<br/>_463 = &amp;(*_464)<br/></td></tr><tr><td align="left">_462 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _463)</td></tr></table>>];
    bb161__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>_471 = &amp;_375<br/></td></tr><tr><td align="left">_470 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _471)</td></tr></table>>];
    bb162__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>_469 = &amp;_470<br/>_468 = &amp;(*_469)<br/></td></tr><tr><td align="left">_467 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _468)</td></tr></table>>];
    bb163__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>_476 = &amp;_383<br/></td></tr><tr><td align="left">_475 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _476)</td></tr></table>>];
    bb164__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>_474 = &amp;_475<br/>_473 = &amp;(*_474)<br/></td></tr><tr><td align="left">_472 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _473)</td></tr></table>>];
    bb165__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>_461 = [move _462, move _467, move _472]<br/>StorageDead(_472)<br/>StorageDead(_467)<br/>StorageDead(_462)<br/>_460 = &amp;_461<br/>_459 = &amp;(*_460)<br/>_458 = move _459 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_459)<br/></td></tr><tr><td align="left">_453 = Arguments::&lt;'_&gt;::new_v1(move _454, move _458)</td></tr></table>>];
    bb166__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>StorageDead(_454)<br/></td></tr><tr><td align="left">_451 = ArrForm::&lt;300&gt;::format(move _452, move _453)</td></tr></table>>];
    bb167__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageDead(_452)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>_478 = &amp;mut _449<br/>_477 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _478 }<br/>StorageDead(_478)<br/></td></tr><tr><td align="left">_450 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _451, move _477)</td></tr></table>>];
    bb168__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>StorageDead(_451)<br/>StorageDead(_475)<br/>StorageDead(_474)<br/>StorageDead(_470)<br/>StorageDead(_469)<br/>StorageDead(_465)<br/>StorageDead(_464)<br/>StorageDead(_461)<br/>StorageDead(_460)<br/>StorageDead(_456)<br/>StorageDead(_450)<br/>_448 = move _449<br/>StorageDead(_449)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>_957 = const _<br/>_489 = &amp;(*_957)<br/>_488 = &amp;(*_489)<br/>_487 = move _488 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_488)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>_499 = &amp;_448<br/></td></tr><tr><td align="left">_498 = ArrForm::&lt;300&gt;::as_str(move _499)</td></tr></table>>];
    bb169__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>_497 = &amp;_498<br/>_496 = &amp;(*_497)<br/></td></tr><tr><td align="left">_495 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _496)</td></tr></table>>];
    bb170__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_496)<br/>_494 = [move _495]<br/>StorageDead(_495)<br/>_493 = &amp;_494<br/>_492 = &amp;(*_493)<br/>_491 = move _492 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_492)<br/></td></tr><tr><td align="left">_486 = Arguments::&lt;'_&gt;::new_v1(move _487, move _491)</td></tr></table>>];
    bb171__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>StorageDead(_487)<br/></td></tr><tr><td align="left">_485 = format(move _486)</td></tr></table>>];
    bb172__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>StorageDead(_498)<br/>StorageDead(_497)<br/>StorageDead(_494)<br/>StorageDead(_493)<br/>StorageDead(_489)<br/>_484 = move _485<br/>StorageDead(_485)<br/>_483 = &amp;_484<br/>_482 = &amp;(*_483)<br/></td></tr><tr><td align="left">_481 = &lt;String as Deref&gt;::deref(move _482)</td></tr></table>>];
    bb173__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">_480 = &amp;(*_481)<br/>StorageDead(_482)<br/></td></tr><tr><td align="left">_479 = solana_program::log::sol_log(move _480)</td></tr></table>>];
    bb174__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/></td></tr><tr><td align="left">drop(_484)</td></tr></table>>];
    bb175__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>StorageDead(_483)<br/>StorageDead(_481)<br/>StorageDead(_479)<br/>_386 = const ()<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageLive(_500)<br/>StorageLive(_501)<br/></td></tr><tr><td align="left">_501 = ArrForm::&lt;600&gt;::new()</td></tr></table>>];
    bb177__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>_504 = &amp;mut _501<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_956 = const _<br/>_508 = &amp;(*_956)<br/>_507 = &amp;(*_508)<br/>_506 = move _507 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_507)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>_518 = &amp;_374<br/></td></tr><tr><td align="left">_517 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _518)</td></tr></table>>];
    bb178__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/>_516 = &amp;_517<br/>_515 = &amp;(*_516)<br/></td></tr><tr><td align="left">_514 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _515)</td></tr></table>>];
    bb179__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>_523 = &amp;_375<br/></td></tr><tr><td align="left">_522 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _523)</td></tr></table>>];
    bb180__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>_521 = &amp;_522<br/>_520 = &amp;(*_521)<br/></td></tr><tr><td align="left">_519 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _520)</td></tr></table>>];
    bb181__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>_528 = &amp;_383<br/></td></tr><tr><td align="left">_527 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _528)</td></tr></table>>];
    bb182__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>_526 = &amp;_527<br/>_525 = &amp;(*_526)<br/></td></tr><tr><td align="left">_524 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _525)</td></tr></table>>];
    bb183__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/>_513 = [move _514, move _519, move _524]<br/>StorageDead(_524)<br/>StorageDead(_519)<br/>StorageDead(_514)<br/>_512 = &amp;_513<br/>_511 = &amp;(*_512)<br/>_510 = move _511 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_511)<br/></td></tr><tr><td align="left">_505 = Arguments::&lt;'_&gt;::new_v1(move _506, move _510)</td></tr></table>>];
    bb184__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_510)<br/>StorageDead(_506)<br/></td></tr><tr><td align="left">_503 = ArrForm::&lt;600&gt;::format(move _504, move _505)</td></tr></table>>];
    bb185__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>StorageDead(_504)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>_530 = &amp;mut _501<br/>_529 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _530 }<br/>StorageDead(_530)<br/></td></tr><tr><td align="left">_502 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _503, move _529)</td></tr></table>>];
    bb186__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_529)<br/>StorageDead(_503)<br/>StorageDead(_527)<br/>StorageDead(_526)<br/>StorageDead(_522)<br/>StorageDead(_521)<br/>StorageDead(_517)<br/>StorageDead(_516)<br/>StorageDead(_513)<br/>StorageDead(_512)<br/>StorageDead(_508)<br/>StorageDead(_502)<br/>_500 = move _501<br/>StorageDead(_501)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>_955 = const _<br/>_541 = &amp;(*_955)<br/>_540 = &amp;(*_541)<br/>_539 = move _540 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_540)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>_551 = &amp;_500<br/></td></tr><tr><td align="left">_550 = ArrForm::&lt;600&gt;::as_str(move _551)</td></tr></table>>];
    bb187__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/>_549 = &amp;_550<br/>_548 = &amp;(*_549)<br/></td></tr><tr><td align="left">_547 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _548)</td></tr></table>>];
    bb188__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/>_546 = [move _547]<br/>StorageDead(_547)<br/>_545 = &amp;_546<br/>_544 = &amp;(*_545)<br/>_543 = move _544 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">_538 = Arguments::&lt;'_&gt;::new_v1(move _539, move _543)</td></tr></table>>];
    bb189__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/>StorageDead(_539)<br/></td></tr><tr><td align="left">_537 = format(move _538)</td></tr></table>>];
    bb190__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>StorageDead(_550)<br/>StorageDead(_549)<br/>StorageDead(_546)<br/>StorageDead(_545)<br/>StorageDead(_541)<br/>_536 = move _537<br/>StorageDead(_537)<br/>_535 = &amp;_536<br/>_534 = &amp;(*_535)<br/></td></tr><tr><td align="left">_533 = &lt;String as Deref&gt;::deref(move _534)</td></tr></table>>];
    bb191__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_532 = &amp;(*_533)<br/>StorageDead(_534)<br/></td></tr><tr><td align="left">_531 = solana_program::log::sol_log(move _532)</td></tr></table>>];
    bb192__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/></td></tr><tr><td align="left">drop(_536)</td></tr></table>>];
    bb193__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>StorageDead(_535)<br/>StorageDead(_533)<br/>StorageDead(_531)<br/>_386 = const ()<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>_556 = &amp;mut _553<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>_954 = const _<br/>_560 = &amp;(*_954)<br/>_559 = &amp;(*_560)<br/>_558 = move _559 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_559)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>_570 = &amp;_374<br/></td></tr><tr><td align="left">_569 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _570)</td></tr></table>>];
    bb195__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>_568 = &amp;_569<br/>_567 = &amp;(*_568)<br/></td></tr><tr><td align="left">_566 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _567)</td></tr></table>>];
    bb196__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>_575 = &amp;_375<br/></td></tr><tr><td align="left">_574 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _575)</td></tr></table>>];
    bb197__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_575)<br/>_573 = &amp;_574<br/>_572 = &amp;(*_573)<br/></td></tr><tr><td align="left">_571 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _572)</td></tr></table>>];
    bb198__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_572)<br/>StorageLive(_576)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>_580 = &amp;_383<br/></td></tr><tr><td align="left">_579 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _580)</td></tr></table>>];
    bb199__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_580)<br/>_578 = &amp;_579<br/>_577 = &amp;(*_578)<br/></td></tr><tr><td align="left">_576 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _577)</td></tr></table>>];
    bb200__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/>_565 = [move _566, move _571, move _576]<br/>StorageDead(_576)<br/>StorageDead(_571)<br/>StorageDead(_566)<br/>_564 = &amp;_565<br/>_563 = &amp;(*_564)<br/>_562 = move _563 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_563)<br/></td></tr><tr><td align="left">_557 = Arguments::&lt;'_&gt;::new_v1(move _558, move _562)</td></tr></table>>];
    bb201__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageDead(_558)<br/></td></tr><tr><td align="left">_555 = ArrForm::&lt;1200&gt;::format(move _556, move _557)</td></tr></table>>];
    bb202__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>StorageDead(_556)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>_582 = &amp;mut _553<br/>_581 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _582 }<br/>StorageDead(_582)<br/></td></tr><tr><td align="left">_554 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _555, move _581)</td></tr></table>>];
    bb203__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>StorageDead(_555)<br/>StorageDead(_579)<br/>StorageDead(_578)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/>StorageDead(_569)<br/>StorageDead(_568)<br/>StorageDead(_565)<br/>StorageDead(_564)<br/>StorageDead(_560)<br/>StorageDead(_554)<br/>_552 = move _553<br/>StorageDead(_553)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>StorageLive(_591)<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>_953 = const _<br/>_593 = &amp;(*_953)<br/>_592 = &amp;(*_593)<br/>_591 = move _592 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_592)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>StorageLive(_600)<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>_603 = &amp;_552<br/></td></tr><tr><td align="left">_602 = ArrForm::&lt;1200&gt;::as_str(move _603)</td></tr></table>>];
    bb204__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_603)<br/>_601 = &amp;_602<br/>_600 = &amp;(*_601)<br/></td></tr><tr><td align="left">_599 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _600)</td></tr></table>>];
    bb205__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_600)<br/>_598 = [move _599]<br/>StorageDead(_599)<br/>_597 = &amp;_598<br/>_596 = &amp;(*_597)<br/>_595 = move _596 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_596)<br/></td></tr><tr><td align="left">_590 = Arguments::&lt;'_&gt;::new_v1(move _591, move _595)</td></tr></table>>];
    bb206__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>StorageDead(_591)<br/></td></tr><tr><td align="left">_589 = format(move _590)</td></tr></table>>];
    bb207__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_590)<br/>StorageDead(_602)<br/>StorageDead(_601)<br/>StorageDead(_598)<br/>StorageDead(_597)<br/>StorageDead(_593)<br/>_588 = move _589<br/>StorageDead(_589)<br/>_587 = &amp;_588<br/>_586 = &amp;(*_587)<br/></td></tr><tr><td align="left">_585 = &lt;String as Deref&gt;::deref(move _586)</td></tr></table>>];
    bb208__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">_584 = &amp;(*_585)<br/>StorageDead(_586)<br/></td></tr><tr><td align="left">_583 = solana_program::log::sol_log(move _584)</td></tr></table>>];
    bb209__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_584)<br/></td></tr><tr><td align="left">drop(_588)</td></tr></table>>];
    bb210__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_588)<br/>StorageDead(_587)<br/>StorageDead(_585)<br/>StorageDead(_583)<br/>_386 = const ()<br/>StorageDead(_552)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_387)<br/>StorageDead(_386)<br/>StorageLive(_604)<br/>_604 = _383<br/>StorageLive(_605)<br/>_605 = InvestingDirection::Subtract<br/>_379 = (move _604, move _605)<br/>StorageDead(_605)<br/>StorageDead(_604)<br/>StorageDead(_383)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_381)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>_607 = _375<br/>StorageLive(_608)<br/>_608 = _374<br/></td></tr><tr><td align="left">_606 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Sub&gt;::sub(move _607, move _608)</td></tr></table>>];
    bb213__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/>StorageDead(_607)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>_610 = &amp;(*_1)<br/></td></tr><tr><td align="left">_609 = available_to_invest(move _610)</td></tr></table>>];
    bb214__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>_614 = const &quot;Actual {} target {} available {}, need to Add {}&quot;<br/>_613 = &amp;(*_614)<br/></td></tr><tr><td align="left">_612 = core::str::&lt;impl str&gt;::len(move _613)</td></tr></table>>];
    bb215__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_613)<br/>_619 = Le(const 0_usize, _612)<br/></td></tr><tr><td align="left">switchInt(move _619)</td></tr></table>>];
    bb216__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">_620 = Le(_612, const 50_usize)<br/></td></tr><tr><td align="left">switchInt(move _620)</td></tr></table>>];
    bb217__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">_617 = Le(const 51_usize, _612)<br/></td></tr><tr><td align="left">switchInt(move _617)</td></tr></table>>];
    bb218__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">_618 = Le(_612, const 100_usize)<br/></td></tr><tr><td align="left">switchInt(move _618)</td></tr></table>>];
    bb219__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">_615 = Le(const 101_usize, _612)<br/></td></tr><tr><td align="left">switchInt(move _615)</td></tr></table>>];
    bb220__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">_616 = Le(_612, const 200_usize)<br/></td></tr><tr><td align="left">switchInt(move _616)</td></tr></table>>];
    bb221__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_786)<br/>StorageLive(_787)<br/></td></tr><tr><td align="left">_787 = ArrForm::&lt;1200&gt;::new()</td></tr></table>>];
    bb222__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_621)<br/>StorageLive(_622)<br/></td></tr><tr><td align="left">_622 = ArrForm::&lt;150&gt;::new()</td></tr></table>>];
    bb223__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>_625 = &amp;mut _622<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>_968 = const _<br/>_629 = &amp;(*_968)<br/>_628 = &amp;(*_629)<br/>_627 = move _628 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_628)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_639 = &amp;_374<br/></td></tr><tr><td align="left">_638 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _639)</td></tr></table>>];
    bb224__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/>_637 = &amp;_638<br/>_636 = &amp;(*_637)<br/></td></tr><tr><td align="left">_635 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _636)</td></tr></table>>];
    bb225__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_636)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>_644 = &amp;_375<br/></td></tr><tr><td align="left">_643 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _644)</td></tr></table>>];
    bb226__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>_642 = &amp;_643<br/>_641 = &amp;(*_642)<br/></td></tr><tr><td align="left">_640 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _641)</td></tr></table>>];
    bb227__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_641)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>_647 = &amp;_609<br/>_646 = &amp;(*_647)<br/></td></tr><tr><td align="left">_645 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _646)</td></tr></table>>];
    bb228__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_646)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>_652 = &amp;_606<br/></td></tr><tr><td align="left">_651 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _652)</td></tr></table>>];
    bb229__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>_650 = &amp;_651<br/>_649 = &amp;(*_650)<br/></td></tr><tr><td align="left">_648 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _649)</td></tr></table>>];
    bb230__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_649)<br/>_634 = [move _635, move _640, move _645, move _648]<br/>StorageDead(_648)<br/>StorageDead(_645)<br/>StorageDead(_640)<br/>StorageDead(_635)<br/>_633 = &amp;_634<br/>_632 = &amp;(*_633)<br/>_631 = move _632 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_632)<br/></td></tr><tr><td align="left">_626 = Arguments::&lt;'_&gt;::new_v1(move _627, move _631)</td></tr></table>>];
    bb231__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_631)<br/>StorageDead(_627)<br/></td></tr><tr><td align="left">_624 = ArrForm::&lt;150&gt;::format(move _625, move _626)</td></tr></table>>];
    bb232__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_626)<br/>StorageDead(_625)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>_654 = &amp;mut _622<br/>_653 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _654 }<br/>StorageDead(_654)<br/></td></tr><tr><td align="left">_623 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _624, move _653)</td></tr></table>>];
    bb233__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_653)<br/>StorageDead(_624)<br/>StorageDead(_651)<br/>StorageDead(_650)<br/>StorageDead(_647)<br/>StorageDead(_643)<br/>StorageDead(_642)<br/>StorageDead(_638)<br/>StorageDead(_637)<br/>StorageDead(_634)<br/>StorageDead(_633)<br/>StorageDead(_629)<br/>StorageDead(_623)<br/>_621 = move _622<br/>StorageDead(_622)<br/>StorageLive(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>_967 = const _<br/>_665 = &amp;(*_967)<br/>_664 = &amp;(*_665)<br/>_663 = move _664 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_664)<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>StorageLive(_669)<br/>StorageLive(_670)<br/>StorageLive(_671)<br/>StorageLive(_672)<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>_675 = &amp;_621<br/></td></tr><tr><td align="left">_674 = ArrForm::&lt;150&gt;::as_str(move _675)</td></tr></table>>];
    bb234__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/>_673 = &amp;_674<br/>_672 = &amp;(*_673)<br/></td></tr><tr><td align="left">_671 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _672)</td></tr></table>>];
    bb235__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>_670 = [move _671]<br/>StorageDead(_671)<br/>_669 = &amp;_670<br/>_668 = &amp;(*_669)<br/>_667 = move _668 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_668)<br/></td></tr><tr><td align="left">_662 = Arguments::&lt;'_&gt;::new_v1(move _663, move _667)</td></tr></table>>];
    bb236__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>StorageDead(_663)<br/></td></tr><tr><td align="left">_661 = format(move _662)</td></tr></table>>];
    bb237__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>StorageDead(_674)<br/>StorageDead(_673)<br/>StorageDead(_670)<br/>StorageDead(_669)<br/>StorageDead(_665)<br/>_660 = move _661<br/>StorageDead(_661)<br/>_659 = &amp;_660<br/>_658 = &amp;(*_659)<br/></td></tr><tr><td align="left">_657 = &lt;String as Deref&gt;::deref(move _658)</td></tr></table>>];
    bb238__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">_656 = &amp;(*_657)<br/>StorageDead(_658)<br/></td></tr><tr><td align="left">_655 = solana_program::log::sol_log(move _656)</td></tr></table>>];
    bb239__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_656)<br/></td></tr><tr><td align="left">drop(_660)</td></tr></table>>];
    bb240__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_660)<br/>StorageDead(_659)<br/>StorageDead(_657)<br/>StorageDead(_655)<br/>_611 = const ()<br/>StorageDead(_621)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageLive(_676)<br/>StorageLive(_677)<br/></td></tr><tr><td align="left">_677 = ArrForm::&lt;300&gt;::new()</td></tr></table>>];
    bb242__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>_680 = &amp;mut _677<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>StorageLive(_684)<br/>_966 = const _<br/>_684 = &amp;(*_966)<br/>_683 = &amp;(*_684)<br/>_682 = move _683 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_683)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>_694 = &amp;_374<br/></td></tr><tr><td align="left">_693 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _694)</td></tr></table>>];
    bb243__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_694)<br/>_692 = &amp;_693<br/>_691 = &amp;(*_692)<br/></td></tr><tr><td align="left">_690 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _691)</td></tr></table>>];
    bb244__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_691)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>_699 = &amp;_375<br/></td></tr><tr><td align="left">_698 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _699)</td></tr></table>>];
    bb245__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_699)<br/>_697 = &amp;_698<br/>_696 = &amp;(*_697)<br/></td></tr><tr><td align="left">_695 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _696)</td></tr></table>>];
    bb246__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_696)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>_702 = &amp;_609<br/>_701 = &amp;(*_702)<br/></td></tr><tr><td align="left">_700 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _701)</td></tr></table>>];
    bb247__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>StorageLive(_707)<br/>_707 = &amp;_606<br/></td></tr><tr><td align="left">_706 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _707)</td></tr></table>>];
    bb248__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_707)<br/>_705 = &amp;_706<br/>_704 = &amp;(*_705)<br/></td></tr><tr><td align="left">_703 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _704)</td></tr></table>>];
    bb249__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_704)<br/>_689 = [move _690, move _695, move _700, move _703]<br/>StorageDead(_703)<br/>StorageDead(_700)<br/>StorageDead(_695)<br/>StorageDead(_690)<br/>_688 = &amp;_689<br/>_687 = &amp;(*_688)<br/>_686 = move _687 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_687)<br/></td></tr><tr><td align="left">_681 = Arguments::&lt;'_&gt;::new_v1(move _682, move _686)</td></tr></table>>];
    bb250__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/>StorageDead(_682)<br/></td></tr><tr><td align="left">_679 = ArrForm::&lt;300&gt;::format(move _680, move _681)</td></tr></table>>];
    bb251__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_681)<br/>StorageDead(_680)<br/>StorageLive(_708)<br/>StorageLive(_709)<br/>_709 = &amp;mut _677<br/>_708 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _709 }<br/>StorageDead(_709)<br/></td></tr><tr><td align="left">_678 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _679, move _708)</td></tr></table>>];
    bb252__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_708)<br/>StorageDead(_679)<br/>StorageDead(_706)<br/>StorageDead(_705)<br/>StorageDead(_702)<br/>StorageDead(_698)<br/>StorageDead(_697)<br/>StorageDead(_693)<br/>StorageDead(_692)<br/>StorageDead(_689)<br/>StorageDead(_688)<br/>StorageDead(_684)<br/>StorageDead(_678)<br/>_676 = move _677<br/>StorageDead(_677)<br/>StorageLive(_710)<br/>StorageLive(_711)<br/>StorageLive(_712)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>_965 = const _<br/>_720 = &amp;(*_965)<br/>_719 = &amp;(*_720)<br/>_718 = move _719 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_719)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>StorageLive(_730)<br/>_730 = &amp;_676<br/></td></tr><tr><td align="left">_729 = ArrForm::&lt;300&gt;::as_str(move _730)</td></tr></table>>];
    bb253__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>_728 = &amp;_729<br/>_727 = &amp;(*_728)<br/></td></tr><tr><td align="left">_726 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _727)</td></tr></table>>];
    bb254__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_727)<br/>_725 = [move _726]<br/>StorageDead(_726)<br/>_724 = &amp;_725<br/>_723 = &amp;(*_724)<br/>_722 = move _723 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_723)<br/></td></tr><tr><td align="left">_717 = Arguments::&lt;'_&gt;::new_v1(move _718, move _722)</td></tr></table>>];
    bb255__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_722)<br/>StorageDead(_718)<br/></td></tr><tr><td align="left">_716 = format(move _717)</td></tr></table>>];
    bb256__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/>StorageDead(_729)<br/>StorageDead(_728)<br/>StorageDead(_725)<br/>StorageDead(_724)<br/>StorageDead(_720)<br/>_715 = move _716<br/>StorageDead(_716)<br/>_714 = &amp;_715<br/>_713 = &amp;(*_714)<br/></td></tr><tr><td align="left">_712 = &lt;String as Deref&gt;::deref(move _713)</td></tr></table>>];
    bb257__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">_711 = &amp;(*_712)<br/>StorageDead(_713)<br/></td></tr><tr><td align="left">_710 = solana_program::log::sol_log(move _711)</td></tr></table>>];
    bb258__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_711)<br/></td></tr><tr><td align="left">drop(_715)</td></tr></table>>];
    bb259__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_715)<br/>StorageDead(_714)<br/>StorageDead(_712)<br/>StorageDead(_710)<br/>_611 = const ()<br/>StorageDead(_676)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageLive(_731)<br/>StorageLive(_732)<br/></td></tr><tr><td align="left">_732 = ArrForm::&lt;600&gt;::new()</td></tr></table>>];
    bb261__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageLive(_733)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>_735 = &amp;mut _732<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>_964 = const _<br/>_739 = &amp;(*_964)<br/>_738 = &amp;(*_739)<br/>_737 = move _738 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_738)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>StorageLive(_747)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>_749 = &amp;_374<br/></td></tr><tr><td align="left">_748 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _749)</td></tr></table>>];
    bb262__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_749)<br/>_747 = &amp;_748<br/>_746 = &amp;(*_747)<br/></td></tr><tr><td align="left">_745 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _746)</td></tr></table>>];
    bb263__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_746)<br/>StorageLive(_750)<br/>StorageLive(_751)<br/>StorageLive(_752)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>_754 = &amp;_375<br/></td></tr><tr><td align="left">_753 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _754)</td></tr></table>>];
    bb264__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_754)<br/>_752 = &amp;_753<br/>_751 = &amp;(*_752)<br/></td></tr><tr><td align="left">_750 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _751)</td></tr></table>>];
    bb265__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_751)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>_757 = &amp;_609<br/>_756 = &amp;(*_757)<br/></td></tr><tr><td align="left">_755 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _756)</td></tr></table>>];
    bb266__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_756)<br/>StorageLive(_758)<br/>StorageLive(_759)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>StorageLive(_762)<br/>_762 = &amp;_606<br/></td></tr><tr><td align="left">_761 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _762)</td></tr></table>>];
    bb267__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>_760 = &amp;_761<br/>_759 = &amp;(*_760)<br/></td></tr><tr><td align="left">_758 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _759)</td></tr></table>>];
    bb268__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_759)<br/>_744 = [move _745, move _750, move _755, move _758]<br/>StorageDead(_758)<br/>StorageDead(_755)<br/>StorageDead(_750)<br/>StorageDead(_745)<br/>_743 = &amp;_744<br/>_742 = &amp;(*_743)<br/>_741 = move _742 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_742)<br/></td></tr><tr><td align="left">_736 = Arguments::&lt;'_&gt;::new_v1(move _737, move _741)</td></tr></table>>];
    bb269__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_741)<br/>StorageDead(_737)<br/></td></tr><tr><td align="left">_734 = ArrForm::&lt;600&gt;::format(move _735, move _736)</td></tr></table>>];
    bb270__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_736)<br/>StorageDead(_735)<br/>StorageLive(_763)<br/>StorageLive(_764)<br/>_764 = &amp;mut _732<br/>_763 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _764 }<br/>StorageDead(_764)<br/></td></tr><tr><td align="left">_733 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _734, move _763)</td></tr></table>>];
    bb271__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_763)<br/>StorageDead(_734)<br/>StorageDead(_761)<br/>StorageDead(_760)<br/>StorageDead(_757)<br/>StorageDead(_753)<br/>StorageDead(_752)<br/>StorageDead(_748)<br/>StorageDead(_747)<br/>StorageDead(_744)<br/>StorageDead(_743)<br/>StorageDead(_739)<br/>StorageDead(_733)<br/>_731 = move _732<br/>StorageDead(_732)<br/>StorageLive(_765)<br/>StorageLive(_766)<br/>StorageLive(_767)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>_963 = const _<br/>_775 = &amp;(*_963)<br/>_774 = &amp;(*_775)<br/>_773 = move _774 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_774)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>_785 = &amp;_731<br/></td></tr><tr><td align="left">_784 = ArrForm::&lt;600&gt;::as_str(move _785)</td></tr></table>>];
    bb272__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_785)<br/>_783 = &amp;_784<br/>_782 = &amp;(*_783)<br/></td></tr><tr><td align="left">_781 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _782)</td></tr></table>>];
    bb273__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_782)<br/>_780 = [move _781]<br/>StorageDead(_781)<br/>_779 = &amp;_780<br/>_778 = &amp;(*_779)<br/>_777 = move _778 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_778)<br/></td></tr><tr><td align="left">_772 = Arguments::&lt;'_&gt;::new_v1(move _773, move _777)</td></tr></table>>];
    bb274__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_777)<br/>StorageDead(_773)<br/></td></tr><tr><td align="left">_771 = format(move _772)</td></tr></table>>];
    bb275__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/>StorageDead(_784)<br/>StorageDead(_783)<br/>StorageDead(_780)<br/>StorageDead(_779)<br/>StorageDead(_775)<br/>_770 = move _771<br/>StorageDead(_771)<br/>_769 = &amp;_770<br/>_768 = &amp;(*_769)<br/></td></tr><tr><td align="left">_767 = &lt;String as Deref&gt;::deref(move _768)</td></tr></table>>];
    bb276__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">_766 = &amp;(*_767)<br/>StorageDead(_768)<br/></td></tr><tr><td align="left">_765 = solana_program::log::sol_log(move _766)</td></tr></table>>];
    bb277__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_766)<br/></td></tr><tr><td align="left">drop(_770)</td></tr></table>>];
    bb278__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_770)<br/>StorageDead(_769)<br/>StorageDead(_767)<br/>StorageDead(_765)<br/>_611 = const ()<br/>StorageDead(_731)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageLive(_788)<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>_790 = &amp;mut _787<br/>StorageLive(_791)<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>StorageLive(_794)<br/>_962 = const _<br/>_794 = &amp;(*_962)<br/>_793 = &amp;(*_794)<br/>_792 = move _793 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_793)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>StorageLive(_799)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>StorageLive(_802)<br/>StorageLive(_803)<br/>StorageLive(_804)<br/>_804 = &amp;_374<br/></td></tr><tr><td align="left">_803 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _804)</td></tr></table>>];
    bb280__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_804)<br/>_802 = &amp;_803<br/>_801 = &amp;(*_802)<br/></td></tr><tr><td align="left">_800 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _801)</td></tr></table>>];
    bb281__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>_809 = &amp;_375<br/></td></tr><tr><td align="left">_808 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _809)</td></tr></table>>];
    bb282__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_809)<br/>_807 = &amp;_808<br/>_806 = &amp;(*_807)<br/></td></tr><tr><td align="left">_805 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _806)</td></tr></table>>];
    bb283__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_806)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>StorageLive(_812)<br/>_812 = &amp;_609<br/>_811 = &amp;(*_812)<br/></td></tr><tr><td align="left">_810 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _811)</td></tr></table>>];
    bb284__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_811)<br/>StorageLive(_813)<br/>StorageLive(_814)<br/>StorageLive(_815)<br/>StorageLive(_816)<br/>StorageLive(_817)<br/>_817 = &amp;_606<br/></td></tr><tr><td align="left">_816 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_display(move _817)</td></tr></table>>];
    bb285__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_817)<br/>_815 = &amp;_816<br/>_814 = &amp;(*_815)<br/></td></tr><tr><td align="left">_813 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;FractionDisplay&lt;'_&gt;&gt;(move _814)</td></tr></table>>];
    bb286__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_814)<br/>_799 = [move _800, move _805, move _810, move _813]<br/>StorageDead(_813)<br/>StorageDead(_810)<br/>StorageDead(_805)<br/>StorageDead(_800)<br/>_798 = &amp;_799<br/>_797 = &amp;(*_798)<br/>_796 = move _797 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_797)<br/></td></tr><tr><td align="left">_791 = Arguments::&lt;'_&gt;::new_v1(move _792, move _796)</td></tr></table>>];
    bb287__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_796)<br/>StorageDead(_792)<br/></td></tr><tr><td align="left">_789 = ArrForm::&lt;1200&gt;::format(move _790, move _791)</td></tr></table>>];
    bb288__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_791)<br/>StorageDead(_790)<br/>StorageLive(_818)<br/>StorageLive(_819)<br/>_819 = &amp;mut _787<br/>_818 = {closure@programs\kvault\src\utils\macros.rs:75:58: 75:61} { af: move _819 }<br/>StorageDead(_819)<br/></td></tr><tr><td align="left">_788 = std::result::Result::&lt;(), std::fmt::Error&gt;::unwrap_or_else::&lt;{closure@programs\kvault\src\utils\macros.rs:75:58: 75:61}&gt;(move _789, move _818)</td></tr></table>>];
    bb289__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_818)<br/>StorageDead(_789)<br/>StorageDead(_816)<br/>StorageDead(_815)<br/>StorageDead(_812)<br/>StorageDead(_808)<br/>StorageDead(_807)<br/>StorageDead(_803)<br/>StorageDead(_802)<br/>StorageDead(_799)<br/>StorageDead(_798)<br/>StorageDead(_794)<br/>StorageDead(_788)<br/>_786 = move _787<br/>StorageDead(_787)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>StorageLive(_823)<br/>StorageLive(_824)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>StorageLive(_828)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>_961 = const _<br/>_830 = &amp;(*_961)<br/>_829 = &amp;(*_830)<br/>_828 = move _829 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_829)<br/>StorageLive(_832)<br/>StorageLive(_833)<br/>StorageLive(_834)<br/>StorageLive(_835)<br/>StorageLive(_836)<br/>StorageLive(_837)<br/>StorageLive(_838)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>_840 = &amp;_786<br/></td></tr><tr><td align="left">_839 = ArrForm::&lt;1200&gt;::as_str(move _840)</td></tr></table>>];
    bb290__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/>_838 = &amp;_839<br/>_837 = &amp;(*_838)<br/></td></tr><tr><td align="left">_836 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;str&gt;(move _837)</td></tr></table>>];
    bb291__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_837)<br/>_835 = [move _836]<br/>StorageDead(_836)<br/>_834 = &amp;_835<br/>_833 = &amp;(*_834)<br/>_832 = move _833 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_833)<br/></td></tr><tr><td align="left">_827 = Arguments::&lt;'_&gt;::new_v1(move _828, move _832)</td></tr></table>>];
    bb292__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_832)<br/>StorageDead(_828)<br/></td></tr><tr><td align="left">_826 = format(move _827)</td></tr></table>>];
    bb293__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_827)<br/>StorageDead(_839)<br/>StorageDead(_838)<br/>StorageDead(_835)<br/>StorageDead(_834)<br/>StorageDead(_830)<br/>_825 = move _826<br/>StorageDead(_826)<br/>_824 = &amp;_825<br/>_823 = &amp;(*_824)<br/></td></tr><tr><td align="left">_822 = &lt;String as Deref&gt;::deref(move _823)</td></tr></table>>];
    bb294__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">_821 = &amp;(*_822)<br/>StorageDead(_823)<br/></td></tr><tr><td align="left">_820 = solana_program::log::sol_log(move _821)</td></tr></table>>];
    bb295__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_821)<br/></td></tr><tr><td align="left">drop(_825)</td></tr></table>>];
    bb296__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_825)<br/>StorageDead(_824)<br/>StorageDead(_822)<br/>StorageDead(_820)<br/>_611 = const ()<br/>StorageDead(_786)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>StorageDead(_612)<br/>StorageDead(_611)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>_842 = _606<br/>StorageLive(_843)<br/>StorageLive(_844)<br/>_844 = _609<br/></td></tr><tr><td align="left">_843 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as From&lt;u64&gt;&gt;::from(move _844)</td></tr></table>>];
    bb298__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_844)<br/></td></tr><tr><td align="left">_841 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as Ord&gt;::min(move _842, move _843)</td></tr></table>>];
    bb299__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_843)<br/>StorageDead(_842)<br/>StorageLive(_845)<br/>_845 = InvestingDirection::Add<br/>_379 = (move _841, move _845)<br/>StorageDead(_845)<br/>StorageDead(_841)<br/>StorageDead(_609)<br/>StorageDead(_606)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>StorageLive(_377)<br/>_377 = (_379.0: fixed::FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;)<br/>StorageLive(_378)<br/>_378 = (_379.1: operations::effects::InvestingDirection)<br/>StorageDead(_379)<br/>StorageLive(_846)<br/>StorageLive(_847)<br/>StorageLive(_848)<br/>_848 = &amp;_377<br/>StorageLive(_849)<br/>_849 = &amp;((*_1).22: u64)<br/></td></tr><tr><td align="left">_847 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&lt;u64&gt;&gt;::le(move _848, move _849)</td></tr></table>>];
    bb301__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left">switchInt(move _847)</td></tr></table>>];
    bb302__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_849)<br/>StorageDead(_848)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>_951 = const _<br/>_854 = &amp;(*_951)<br/></td></tr><tr><td align="left">_853 = KaminoVaultError::name(move _854)</td></tr></table>>];
    bb303__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_854)<br/>StorageLive(_856)<br/>StorageLive(_857)<br/>_857 = KaminoVaultError::InvestAmountBelowMinimum<br/></td></tr><tr><td align="left">_856 = &lt;KaminoVaultError as Into&lt;u32&gt;&gt;::into(move _857)</td></tr></table>>];
    bb304__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>_950 = const _<br/>_859 = &amp;(*_950)<br/></td></tr><tr><td align="left">_858 = &lt;KaminoVaultError as ToString&gt;::to_string(move _859)</td></tr></table>>];
    bb305__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_859)<br/>StorageLive(_861)<br/>StorageLive(_862)<br/>StorageLive(_863)<br/>_863 = anchor_lang::error::Source { filename: const &quot;programs\\kvault\\src\\operations\\vault_operations.rs&quot;, line: const 478_u32 }<br/>_862 = anchor_lang::error::ErrorOrigin::Source(move _863)<br/>StorageDead(_863)<br/>_861 = Option::&lt;ErrorOrigin&gt;::Some(move _862)<br/>StorageDead(_862)<br/>StorageLive(_864)<br/>_864 = Option::&lt;ComparedValues&gt;::None<br/>_852 = anchor_lang::error::AnchorError { error_name: move _853, error_code_number: move _856, error_msg: move _858, error_origin: move _861, compared_values: move _864 }<br/>StorageDead(_864)<br/>StorageDead(_861)<br/>StorageDead(_858)<br/>StorageDead(_856)<br/>StorageDead(_853)<br/></td></tr><tr><td align="left">_851 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _852)</td></tr></table>>];
    bb306__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>_0 = std::result::Result::&lt;InvestEffects, anchor_lang::error::Error&gt;::Err(move _851)<br/>StorageDead(_851)<br/>StorageDead(_847)<br/>StorageDead(_846)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb307__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_849)<br/>StorageDead(_848)<br/>_846 = const ()<br/>StorageDead(_847)<br/>StorageDead(_846)<br/>StorageLive(_865)<br/>StorageLive(_866)<br/>_866 = &amp;(*_3)<br/></td></tr><tr><td align="left">_865 = kamino_lending::Reserve::collateral_exchange_rate(move _866)</td></tr></table>>];
    bb308__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>_869 = ((*_145).2: u64)<br/>_868 = Eq(move _869, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _868)</td></tr></table>>];
    bb309__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_869)<br/>_867 = ((*_145).6: u64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_869)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>_871 = &amp;_865<br/>StorageLive(_872)<br/>_872 = _377<br/></td></tr><tr><td align="left">_870 = CollateralExchangeRate::fraction_liquidity_to_collateral(move _871, move _872)</td></tr></table>>];
    bb311__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_872)<br/>StorageDead(_871)<br/>StorageLive(_873)<br/>_873 = &amp;_870<br/></td></tr><tr><td align="left">_867 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _873)</td></tr></table>>];
    bb312__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_873)<br/>StorageDead(_870)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_868)<br/>StorageLive(_874)<br/>StorageLive(_875)<br/>_875 = &amp;_865<br/>StorageLive(_876)<br/>StorageLive(_877)<br/>_877 = _867<br/></td></tr><tr><td align="left">_876 = &lt;u64 as Into&lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;&gt;&gt;::into(move _877)</td></tr></table>>];
    bb314__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_877)<br/></td></tr><tr><td align="left">_874 = CollateralExchangeRate::fraction_collateral_to_liquidity(move _875, move _876)</td></tr></table>>];
    bb315__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_876)<br/>StorageDead(_875)<br/>StorageLive(_878)<br/>StorageLive(_879)<br/>StorageLive(_880)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>StorageLive(_883)<br/>_883 = _874<br/></td></tr><tr><td align="left">_882 = FixedU128::&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt;::frac(move _883)</td></tr></table>>];
    bb316__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">_881 = &amp;_882<br/>StorageDead(_883)<br/>StorageLive(_884)<br/>_952 = const _<br/>_884 = &amp;(*_952)<br/></td></tr><tr><td align="left">_880 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as PartialOrd&gt;::gt(move _881, move _884)</td></tr></table>>];
    bb317__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left">switchInt(move _880)</td></tr></table>>];
    bb318__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_884)<br/>StorageDead(_882)<br/>StorageDead(_881)<br/>_879 = const 1_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb319__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_884)<br/>StorageDead(_882)<br/>StorageDead(_881)<br/>_879 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb320__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_880)<br/>StorageLive(_886)<br/>_887 = discriminant(_378)<br/></td></tr><tr><td align="left">switchInt(move _887)</td></tr></table>>];
    bb321__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageLive(_907)<br/>StorageLive(_908)<br/>_908 = &amp;_874<br/></td></tr><tr><td align="left">_907 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_floor::&lt;u64&gt;(move _908)</td></tr></table>>];
    bb322__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageLive(_888)<br/>StorageLive(_889)<br/>_889 = &amp;_874<br/></td></tr><tr><td align="left">_888 = &lt;FixedU128&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B1&gt;, typenum::bit::B0&gt;, typenum::bit::B0&gt;&gt; as kamino_lending::utils::FractionExtra&gt;::to_ceil::&lt;u64&gt;(move _889)</td></tr></table>>];
    bb323__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_889)<br/>_878 = move _888<br/>StorageDead(_888)<br/>StorageLive(_890)<br/>StorageLive(_891)<br/>_891 = &amp;mut (*_1)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>_893 = _878<br/>StorageLive(_894)<br/>_894 = _879<br/>_895 = CheckedSub(_893, _894)<br/></td></tr><tr><td align="left">assert(!move (_895.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _893, move _894)</td></tr></table>>];
    bb324__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">_892 = move (_895.0: u64)<br/>StorageDead(_894)<br/>StorageDead(_893)<br/></td></tr><tr><td align="left">_890 = withdraw_from_vault(move _891, move _892)</td></tr></table>>];
    bb325__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_892)<br/>StorageDead(_891)<br/>StorageDead(_890)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>StorageLive(_898)<br/>StorageLive(_899)<br/>_899 = &amp;mut (*_1)<br/>StorageLive(_900)<br/>_900 = _867<br/>StorageLive(_901)<br/>_901 = &amp;(*_4)<br/></td></tr><tr><td align="left">_898 = deposit_into_vault_allocation(move _899, move _900, move _901)</td></tr></table>>];
    bb326__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_901)<br/>StorageDead(_900)<br/>StorageDead(_899)<br/></td></tr><tr><td align="left">_897 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _898)</td></tr></table>>];
    bb327__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_898)<br/>_902 = discriminant(_897)<br/></td></tr><tr><td align="left">switchInt(move _902)</td></tr></table>>];
    bb328__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageLive(_906)<br/>_906 = ((_897 as Continue).0: ())<br/>_896 = _906<br/>StorageDead(_906)<br/>_992 = discriminant(_897)<br/>StorageDead(_897)<br/>StorageDead(_896)<br/>_886 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb329__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageLive(_903)<br/>_903 = move ((_897 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_905)<br/>_905 = move _903<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InvestEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _905)</td></tr></table>>];
    bb330__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_905)<br/>StorageDead(_903)<br/>_1002 = discriminant(_897)<br/>StorageDead(_897)<br/>StorageDead(_896)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_908)<br/>_878 = move _907<br/>StorageDead(_907)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>_910 = &amp;mut (*_1)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>_912 = _878<br/>StorageLive(_913)<br/>_913 = _879<br/>_914 = CheckedAdd(_912, _913)<br/></td></tr><tr><td align="left">assert(!move (_914.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _912, move _913)</td></tr></table>>];
    bb332__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">_911 = move (_914.0: u64)<br/>StorageDead(_913)<br/>StorageDead(_912)<br/></td></tr><tr><td align="left">_909 = deposit_into_vault(move _910, move _911)</td></tr></table>>];
    bb333__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_911)<br/>StorageDead(_910)<br/>StorageDead(_909)<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>_918 = &amp;mut (*_1)<br/>StorageLive(_919)<br/>_919 = _867<br/>StorageLive(_920)<br/>_920 = &amp;(*_4)<br/></td></tr><tr><td align="left">_917 = withdraw_from_vault_allocation(move _918, move _919, move _920)</td></tr></table>>];
    bb334__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_920)<br/>StorageDead(_919)<br/>StorageDead(_918)<br/></td></tr><tr><td align="left">_916 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _917)</td></tr></table>>];
    bb335__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_917)<br/>_921 = discriminant(_916)<br/></td></tr><tr><td align="left">switchInt(move _921)</td></tr></table>>];
    bb336__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageLive(_925)<br/>_925 = ((_916 as Continue).0: ())<br/>_915 = _925<br/>StorageDead(_925)<br/>_994 = discriminant(_916)<br/>StorageDead(_916)<br/>StorageDead(_915)<br/>_886 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb337__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageLive(_922)<br/>_922 = move ((_916 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_924)<br/>_924 = move _922<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InvestEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _924)</td></tr></table>>];
    bb338__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_924)<br/>StorageDead(_922)<br/>_1000 = discriminant(_916)<br/>StorageDead(_916)<br/>StorageDead(_915)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_886)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>_928 = ((*_1).11: u64)<br/>StorageLive(_929)<br/>_929 = _879<br/>_927 = Ge(move _928, move _929)<br/></td></tr><tr><td align="left">switchInt(move _927)</td></tr></table>>];
    bb340__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_929)<br/>StorageDead(_928)<br/>StorageLive(_930)<br/>_930 = _879<br/>_931 = CheckedSub(((*_1).11: u64), _930)<br/></td></tr><tr><td align="left">assert(!move (_931.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, ((*_1).11: u64), move _930)</td></tr></table>>];
    bb341__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">((*_1).11: u64) = move (_931.0: u64)<br/>StorageDead(_930)<br/>_879 = const 0_u64<br/>_926 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb342__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_929)<br/>StorageDead(_928)<br/>_926 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb343__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_927)<br/>StorageDead(_926)<br/>StorageLive(_932)<br/>StorageLive(_933)<br/>StorageLive(_934)<br/>StorageLive(_935)<br/>_935 = &amp;mut (*_1)<br/>StorageLive(_936)<br/>_936 = &amp;(*_4)<br/>StorageLive(_937)<br/>_937 = _5<br/></td></tr><tr><td align="left">_934 = state::VaultState::set_allocation_last_invest_slot(move _935, move _936, move _937)</td></tr></table>>];
    bb344__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_937)<br/>StorageDead(_936)<br/>StorageDead(_935)<br/></td></tr><tr><td align="left">_933 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _934)</td></tr></table>>];
    bb345__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_934)<br/>_938 = discriminant(_933)<br/></td></tr><tr><td align="left">switchInt(move _938)</td></tr></table>>];
    bb346__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageLive(_942)<br/>_942 = ((_933 as Continue).0: ())<br/>_932 = _942<br/>StorageDead(_942)<br/>_996 = discriminant(_933)<br/>StorageDead(_933)<br/>StorageDead(_932)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>_944 = _878<br/>StorageLive(_945)<br/>_945 = _378<br/>StorageLive(_946)<br/>_946 = _867<br/>StorageLive(_947)<br/>_947 = _879<br/>_943 = InvestEffects { direction: move _945, liquidity_amount: move _944, collateral_amount: move _946, rounding_loss: move _947 }<br/>StorageDead(_947)<br/>StorageDead(_946)<br/>StorageDead(_945)<br/>StorageDead(_944)<br/>_0 = std::result::Result::&lt;InvestEffects, anchor_lang::error::Error&gt;::Ok(move _943)<br/>StorageDead(_943)<br/>StorageDead(_879)<br/>StorageDead(_878)<br/>StorageDead(_874)<br/>StorageDead(_867)<br/>StorageDead(_865)<br/>StorageDead(_378)<br/>StorageDead(_377)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageDead(_371)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">drop(_102)</td></tr></table>>];
    bb347__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageLive(_939)<br/>_939 = move ((_933 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_941)<br/>_941 = move _939<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InvestEffects, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _941)</td></tr></table>>];
    bb348__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_941)<br/>StorageDead(_939)<br/>_998 = discriminant(_933)<br/>StorageDead(_933)<br/>StorageDead(_932)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb349__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_983 = const false<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb350__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_886)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb351__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_879)<br/>StorageDead(_878)<br/>StorageDead(_874)<br/>StorageDead(_867)<br/>StorageDead(_865)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb352__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageDead(_377)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageDead(_371)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb353__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb354__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left">drop(_102)</td></tr></table>>];
    bb355__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb356__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">_983 = const false<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb357__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left">return</td></tr></table>>];
    bb358__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">358 (cleanup)</td></tr><tr><td align="left">drop(_853)</td></tr></table>>];
    bb359__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">359 (cleanup)</td></tr><tr><td align="left">drop(_825)</td></tr></table>>];
    bb360__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">360 (cleanup)</td></tr><tr><td align="left">drop(_770)</td></tr></table>>];
    bb361__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">361 (cleanup)</td></tr><tr><td align="left">drop(_715)</td></tr></table>>];
    bb362__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">362 (cleanup)</td></tr><tr><td align="left">drop(_660)</td></tr></table>>];
    bb363__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">363 (cleanup)</td></tr><tr><td align="left">drop(_588)</td></tr></table>>];
    bb364__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">364 (cleanup)</td></tr><tr><td align="left">drop(_536)</td></tr></table>>];
    bb365__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">365 (cleanup)</td></tr><tr><td align="left">drop(_484)</td></tr></table>>];
    bb366__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">366 (cleanup)</td></tr><tr><td align="left">drop(_432)</td></tr></table>>];
    bb367__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">367 (cleanup)</td></tr><tr><td align="left">drop(_359)</td></tr></table>>];
    bb368__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">368 (cleanup)</td></tr><tr><td align="left">drop(_333)</td></tr></table>>];
    bb369__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">369 (cleanup)</td></tr><tr><td align="left">drop(_287)</td></tr></table>>];
    bb370__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">370 (cleanup)</td></tr><tr><td align="left">drop(_241)</td></tr></table>>];
    bb371__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">371 (cleanup)</td></tr><tr><td align="left">drop(_195)</td></tr></table>>];
    bb372__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">372 (cleanup)</td></tr><tr><td align="left">drop(_133)</td></tr></table>>];
    bb373__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">373 (cleanup)</td></tr><tr><td align="left">drop(_102)</td></tr></table>>];
    bb374__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">374 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb375__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">375 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb376__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">376 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb377__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">377 (cleanup)</td></tr><tr><td align="left" balign="left">_1012 = discriminant(_933)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb378__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">378 (cleanup)</td></tr><tr><td align="left" balign="left">_1013 = discriminant(_916)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb379__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">379 (cleanup)</td></tr><tr><td align="left" balign="left">_1014 = discriminant(_897)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb380__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">380 (cleanup)</td></tr><tr><td align="left" balign="left">_1015 = discriminant(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb381__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">381 (cleanup)</td></tr><tr><td align="left" balign="left">_1016 = discriminant(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb382__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">382 (cleanup)</td></tr><tr><td align="left" balign="left">_1017 = discriminant(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb383__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">383 (cleanup)</td></tr><tr><td align="left">drop((_7.1: operations::vault_operations::common::Invested))</td></tr></table>>];
    bb384__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">384 (cleanup)</td></tr><tr><td align="left">switchInt(_983)</td></tr></table>>];
    bb385__0_403 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">385 (cleanup)</td></tr><tr><td align="left" balign="left">_1018 = discriminant(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_403 -> bb1__0_403 [label="return"];
    bb0__0_403 -> bb376__0_403 [label="unwind"];
    bb1__0_403 -> bb2__0_403 [label="return"];
    bb1__0_403 -> bb376__0_403 [label="unwind"];
    bb2__0_403 -> bb3__0_403 [label="0"];
    bb2__0_403 -> bb5__0_403 [label="1"];
    bb2__0_403 -> bb4__0_403 [label="otherwise"];
    bb3__0_403 -> bb7__0_403 [label="return"];
    bb3__0_403 -> bb384__0_403 [label="unwind"];
    bb5__0_403 -> bb6__0_403 [label="return"];
    bb5__0_403 -> bb385__0_403 [label="unwind"];
    bb6__0_403 -> bb356__0_403 [label=""];
    bb7__0_403 -> bb8__0_403 [label="return"];
    bb7__0_403 -> bb384__0_403 [label="unwind"];
    bb8__0_403 -> bb9__0_403 [label="return"];
    bb8__0_403 -> bb384__0_403 [label="unwind"];
    bb9__0_403 -> bb10__0_403 [label="return"];
    bb9__0_403 -> bb384__0_403 [label="unwind"];
    bb10__0_403 -> bb11__0_403 [label="return"];
    bb10__0_403 -> bb384__0_403 [label="unwind"];
    bb11__0_403 -> bb12__0_403 [label="return"];
    bb11__0_403 -> bb384__0_403 [label="unwind"];
    bb12__0_403 -> bb13__0_403 [label="return"];
    bb12__0_403 -> bb384__0_403 [label="unwind"];
    bb13__0_403 -> bb14__0_403 [label="return"];
    bb13__0_403 -> bb384__0_403 [label="unwind"];
    bb14__0_403 -> bb15__0_403 [label="return"];
    bb14__0_403 -> bb384__0_403 [label="unwind"];
    bb15__0_403 -> bb16__0_403 [label="return"];
    bb15__0_403 -> bb375__0_403 [label="unwind"];
    bb16__0_403 -> bb17__0_403 [label="return"];
    bb16__0_403 -> bb375__0_403 [label="unwind"];
    bb17__0_403 -> bb18__0_403 [label="return"];
    bb17__0_403 -> bb384__0_403 [label="unwind"];
    bb18__0_403 -> bb19__0_403 [label="return"];
    bb18__0_403 -> bb384__0_403 [label="unwind"];
    bb19__0_403 -> bb20__0_403 [label="return"];
    bb19__0_403 -> bb384__0_403 [label="unwind"];
    bb20__0_403 -> bb21__0_403 [label="return"];
    bb20__0_403 -> bb384__0_403 [label="unwind"];
    bb21__0_403 -> bb22__0_403 [label="return"];
    bb21__0_403 -> bb384__0_403 [label="unwind"];
    bb22__0_403 -> bb23__0_403 [label="return"];
    bb22__0_403 -> bb384__0_403 [label="unwind"];
    bb23__0_403 -> bb24__0_403 [label="return"];
    bb23__0_403 -> bb384__0_403 [label="unwind"];
    bb24__0_403 -> bb25__0_403 [label="return"];
    bb24__0_403 -> bb384__0_403 [label="unwind"];
    bb25__0_403 -> bb26__0_403 [label="return"];
    bb25__0_403 -> bb384__0_403 [label="unwind"];
    bb26__0_403 -> bb27__0_403 [label="return"];
    bb26__0_403 -> bb384__0_403 [label="unwind"];
    bb27__0_403 -> bb28__0_403 [label="return"];
    bb27__0_403 -> bb384__0_403 [label="unwind"];
    bb28__0_403 -> bb29__0_403 [label="return"];
    bb28__0_403 -> bb374__0_403 [label="unwind"];
    bb29__0_403 -> bb30__0_403 [label="return"];
    bb29__0_403 -> bb374__0_403 [label="unwind"];
    bb30__0_403 -> bb31__0_403 [label="return"];
    bb30__0_403 -> bb384__0_403 [label="unwind"];
    bb31__0_403 -> bb32__0_403 [label="return"];
    bb31__0_403 -> bb373__0_403 [label="unwind"];
    bb32__0_403 -> bb33__0_403 [label="return"];
    bb32__0_403 -> bb373__0_403 [label="unwind"];
    bb33__0_403 -> bb34__0_403 [label="0"];
    bb33__0_403 -> bb35__0_403 [label="1"];
    bb33__0_403 -> bb4__0_403 [label="otherwise"];
    bb34__0_403 -> bb37__0_403 [label="return"];
    bb34__0_403 -> bb373__0_403 [label="unwind"];
    bb35__0_403 -> bb36__0_403 [label="return"];
    bb35__0_403 -> bb382__0_403 [label="unwind"];
    bb36__0_403 -> bb354__0_403 [label=""];
    bb37__0_403 -> bb38__0_403 [label="return"];
    bb37__0_403 -> bb373__0_403 [label="unwind"];
    bb38__0_403 -> bb39__0_403 [label="0"];
    bb38__0_403 -> bb40__0_403 [label="1"];
    bb38__0_403 -> bb4__0_403 [label="otherwise"];
    bb39__0_403 -> bb42__0_403 [label="return"];
    bb39__0_403 -> bb373__0_403 [label="unwind"];
    bb40__0_403 -> bb41__0_403 [label="return"];
    bb40__0_403 -> bb381__0_403 [label="unwind"];
    bb41__0_403 -> bb354__0_403 [label=""];
    bb42__0_403 -> bb44__0_403 [label="0"];
    bb42__0_403 -> bb43__0_403 [label="otherwise"];
    bb43__0_403 -> bb49__0_403 [label="return"];
    bb43__0_403 -> bb373__0_403 [label="unwind"];
    bb44__0_403 -> bb45__0_403 [label="return"];
    bb44__0_403 -> bb373__0_403 [label="unwind"];
    bb45__0_403 -> bb46__0_403 [label="return"];
    bb45__0_403 -> bb372__0_403 [label="unwind"];
    bb46__0_403 -> bb47__0_403 [label="return"];
    bb46__0_403 -> bb372__0_403 [label="unwind"];
    bb47__0_403 -> bb48__0_403 [label="return"];
    bb47__0_403 -> bb373__0_403 [label="unwind"];
    bb48__0_403 -> bb354__0_403 [label=""];
    bb49__0_403 -> bb50__0_403 [label="return"];
    bb49__0_403 -> bb373__0_403 [label="unwind"];
    bb50__0_403 -> bb51__0_403 [label="0"];
    bb50__0_403 -> bb52__0_403 [label="1"];
    bb50__0_403 -> bb4__0_403 [label="otherwise"];
    bb51__0_403 -> bb54__0_403 [label="return"];
    bb51__0_403 -> bb373__0_403 [label="unwind"];
    bb52__0_403 -> bb53__0_403 [label="return"];
    bb52__0_403 -> bb380__0_403 [label="unwind"];
    bb53__0_403 -> bb353__0_403 [label=""];
    bb54__0_403 -> bb56__0_403 [label="0"];
    bb54__0_403 -> bb55__0_403 [label="otherwise"];
    bb55__0_403 -> bb56__0_403 [label="0"];
    bb55__0_403 -> bb61__0_403 [label="otherwise"];
    bb56__0_403 -> bb58__0_403 [label="0"];
    bb56__0_403 -> bb57__0_403 [label="otherwise"];
    bb57__0_403 -> bb58__0_403 [label="0"];
    bb57__0_403 -> bb76__0_403 [label="otherwise"];
    bb58__0_403 -> bb60__0_403 [label="0"];
    bb58__0_403 -> bb59__0_403 [label="otherwise"];
    bb59__0_403 -> bb60__0_403 [label="0"];
    bb59__0_403 -> bb91__0_403 [label="otherwise"];
    bb60__0_403 -> bb106__0_403 [label="return"];
    bb60__0_403 -> bb373__0_403 [label="unwind"];
    bb61__0_403 -> bb62__0_403 [label="return"];
    bb61__0_403 -> bb373__0_403 [label="unwind"];
    bb62__0_403 -> bb63__0_403 [label="return"];
    bb62__0_403 -> bb373__0_403 [label="unwind"];
    bb63__0_403 -> bb64__0_403 [label="return"];
    bb63__0_403 -> bb373__0_403 [label="unwind"];
    bb64__0_403 -> bb65__0_403 [label="return"];
    bb64__0_403 -> bb373__0_403 [label="unwind"];
    bb65__0_403 -> bb66__0_403 [label="return"];
    bb65__0_403 -> bb373__0_403 [label="unwind"];
    bb66__0_403 -> bb67__0_403 [label="return"];
    bb66__0_403 -> bb373__0_403 [label="unwind"];
    bb67__0_403 -> bb68__0_403 [label="return"];
    bb67__0_403 -> bb373__0_403 [label="unwind"];
    bb68__0_403 -> bb69__0_403 [label="return"];
    bb68__0_403 -> bb373__0_403 [label="unwind"];
    bb69__0_403 -> bb70__0_403 [label="return"];
    bb69__0_403 -> bb373__0_403 [label="unwind"];
    bb70__0_403 -> bb71__0_403 [label="return"];
    bb70__0_403 -> bb373__0_403 [label="unwind"];
    bb71__0_403 -> bb72__0_403 [label="return"];
    bb71__0_403 -> bb373__0_403 [label="unwind"];
    bb72__0_403 -> bb73__0_403 [label="return"];
    bb72__0_403 -> bb371__0_403 [label="unwind"];
    bb73__0_403 -> bb74__0_403 [label="return"];
    bb73__0_403 -> bb371__0_403 [label="unwind"];
    bb74__0_403 -> bb75__0_403 [label="return"];
    bb74__0_403 -> bb373__0_403 [label="unwind"];
    bb75__0_403 -> bb120__0_403 [label=""];
    bb76__0_403 -> bb77__0_403 [label="return"];
    bb76__0_403 -> bb373__0_403 [label="unwind"];
    bb77__0_403 -> bb78__0_403 [label="return"];
    bb77__0_403 -> bb373__0_403 [label="unwind"];
    bb78__0_403 -> bb79__0_403 [label="return"];
    bb78__0_403 -> bb373__0_403 [label="unwind"];
    bb79__0_403 -> bb80__0_403 [label="return"];
    bb79__0_403 -> bb373__0_403 [label="unwind"];
    bb80__0_403 -> bb81__0_403 [label="return"];
    bb80__0_403 -> bb373__0_403 [label="unwind"];
    bb81__0_403 -> bb82__0_403 [label="return"];
    bb81__0_403 -> bb373__0_403 [label="unwind"];
    bb82__0_403 -> bb83__0_403 [label="return"];
    bb82__0_403 -> bb373__0_403 [label="unwind"];
    bb83__0_403 -> bb84__0_403 [label="return"];
    bb83__0_403 -> bb373__0_403 [label="unwind"];
    bb84__0_403 -> bb85__0_403 [label="return"];
    bb84__0_403 -> bb373__0_403 [label="unwind"];
    bb85__0_403 -> bb86__0_403 [label="return"];
    bb85__0_403 -> bb373__0_403 [label="unwind"];
    bb86__0_403 -> bb87__0_403 [label="return"];
    bb86__0_403 -> bb373__0_403 [label="unwind"];
    bb87__0_403 -> bb88__0_403 [label="return"];
    bb87__0_403 -> bb370__0_403 [label="unwind"];
    bb88__0_403 -> bb89__0_403 [label="return"];
    bb88__0_403 -> bb370__0_403 [label="unwind"];
    bb89__0_403 -> bb90__0_403 [label="return"];
    bb89__0_403 -> bb373__0_403 [label="unwind"];
    bb90__0_403 -> bb120__0_403 [label=""];
    bb91__0_403 -> bb92__0_403 [label="return"];
    bb91__0_403 -> bb373__0_403 [label="unwind"];
    bb92__0_403 -> bb93__0_403 [label="return"];
    bb92__0_403 -> bb373__0_403 [label="unwind"];
    bb93__0_403 -> bb94__0_403 [label="return"];
    bb93__0_403 -> bb373__0_403 [label="unwind"];
    bb94__0_403 -> bb95__0_403 [label="return"];
    bb94__0_403 -> bb373__0_403 [label="unwind"];
    bb95__0_403 -> bb96__0_403 [label="return"];
    bb95__0_403 -> bb373__0_403 [label="unwind"];
    bb96__0_403 -> bb97__0_403 [label="return"];
    bb96__0_403 -> bb373__0_403 [label="unwind"];
    bb97__0_403 -> bb98__0_403 [label="return"];
    bb97__0_403 -> bb373__0_403 [label="unwind"];
    bb98__0_403 -> bb99__0_403 [label="return"];
    bb98__0_403 -> bb373__0_403 [label="unwind"];
    bb99__0_403 -> bb100__0_403 [label="return"];
    bb99__0_403 -> bb373__0_403 [label="unwind"];
    bb100__0_403 -> bb101__0_403 [label="return"];
    bb100__0_403 -> bb373__0_403 [label="unwind"];
    bb101__0_403 -> bb102__0_403 [label="return"];
    bb101__0_403 -> bb373__0_403 [label="unwind"];
    bb102__0_403 -> bb103__0_403 [label="return"];
    bb102__0_403 -> bb369__0_403 [label="unwind"];
    bb103__0_403 -> bb104__0_403 [label="return"];
    bb103__0_403 -> bb369__0_403 [label="unwind"];
    bb104__0_403 -> bb105__0_403 [label="return"];
    bb104__0_403 -> bb373__0_403 [label="unwind"];
    bb105__0_403 -> bb120__0_403 [label=""];
    bb106__0_403 -> bb107__0_403 [label="return"];
    bb106__0_403 -> bb373__0_403 [label="unwind"];
    bb107__0_403 -> bb108__0_403 [label="return"];
    bb107__0_403 -> bb373__0_403 [label="unwind"];
    bb108__0_403 -> bb109__0_403 [label="return"];
    bb108__0_403 -> bb373__0_403 [label="unwind"];
    bb109__0_403 -> bb110__0_403 [label="return"];
    bb109__0_403 -> bb373__0_403 [label="unwind"];
    bb110__0_403 -> bb111__0_403 [label="return"];
    bb110__0_403 -> bb373__0_403 [label="unwind"];
    bb111__0_403 -> bb112__0_403 [label="return"];
    bb111__0_403 -> bb373__0_403 [label="unwind"];
    bb112__0_403 -> bb113__0_403 [label="return"];
    bb112__0_403 -> bb373__0_403 [label="unwind"];
    bb113__0_403 -> bb114__0_403 [label="return"];
    bb113__0_403 -> bb373__0_403 [label="unwind"];
    bb114__0_403 -> bb115__0_403 [label="return"];
    bb114__0_403 -> bb373__0_403 [label="unwind"];
    bb115__0_403 -> bb116__0_403 [label="return"];
    bb115__0_403 -> bb373__0_403 [label="unwind"];
    bb116__0_403 -> bb117__0_403 [label="return"];
    bb116__0_403 -> bb368__0_403 [label="unwind"];
    bb117__0_403 -> bb118__0_403 [label="return"];
    bb117__0_403 -> bb368__0_403 [label="unwind"];
    bb118__0_403 -> bb119__0_403 [label="return"];
    bb118__0_403 -> bb373__0_403 [label="unwind"];
    bb119__0_403 -> bb120__0_403 [label=""];
    bb120__0_403 -> bb121__0_403 [label="success"];
    bb120__0_403 -> bb373__0_403 [label="unwind"];
    bb121__0_403 -> bb127__0_403 [label="0"];
    bb121__0_403 -> bb122__0_403 [label="otherwise"];
    bb122__0_403 -> bb123__0_403 [label="return"];
    bb122__0_403 -> bb373__0_403 [label="unwind"];
    bb123__0_403 -> bb124__0_403 [label="return"];
    bb123__0_403 -> bb367__0_403 [label="unwind"];
    bb124__0_403 -> bb125__0_403 [label="return"];
    bb124__0_403 -> bb367__0_403 [label="unwind"];
    bb125__0_403 -> bb126__0_403 [label="return"];
    bb125__0_403 -> bb373__0_403 [label="unwind"];
    bb126__0_403 -> bb353__0_403 [label=""];
    bb127__0_403 -> bb128__0_403 [label="return"];
    bb127__0_403 -> bb373__0_403 [label="unwind"];
    bb128__0_403 -> bb129__0_403 [label="return"];
    bb128__0_403 -> bb373__0_403 [label="unwind"];
    bb129__0_403 -> bb130__0_403 [label="return"];
    bb129__0_403 -> bb373__0_403 [label="unwind"];
    bb130__0_403 -> bb212__0_403 [label="0"];
    bb130__0_403 -> bb131__0_403 [label="otherwise"];
    bb131__0_403 -> bb132__0_403 [label="return"];
    bb131__0_403 -> bb373__0_403 [label="unwind"];
    bb132__0_403 -> bb133__0_403 [label="return"];
    bb132__0_403 -> bb373__0_403 [label="unwind"];
    bb133__0_403 -> bb135__0_403 [label="0"];
    bb133__0_403 -> bb134__0_403 [label="otherwise"];
    bb134__0_403 -> bb135__0_403 [label="0"];
    bb134__0_403 -> bb140__0_403 [label="otherwise"];
    bb135__0_403 -> bb137__0_403 [label="0"];
    bb135__0_403 -> bb136__0_403 [label="otherwise"];
    bb136__0_403 -> bb137__0_403 [label="0"];
    bb136__0_403 -> bb158__0_403 [label="otherwise"];
    bb137__0_403 -> bb139__0_403 [label="0"];
    bb137__0_403 -> bb138__0_403 [label="otherwise"];
    bb138__0_403 -> bb139__0_403 [label="0"];
    bb138__0_403 -> bb176__0_403 [label="otherwise"];
    bb139__0_403 -> bb194__0_403 [label="return"];
    bb139__0_403 -> bb373__0_403 [label="unwind"];
    bb140__0_403 -> bb141__0_403 [label="return"];
    bb140__0_403 -> bb373__0_403 [label="unwind"];
    bb141__0_403 -> bb142__0_403 [label="return"];
    bb141__0_403 -> bb373__0_403 [label="unwind"];
    bb142__0_403 -> bb143__0_403 [label="return"];
    bb142__0_403 -> bb373__0_403 [label="unwind"];
    bb143__0_403 -> bb144__0_403 [label="return"];
    bb143__0_403 -> bb373__0_403 [label="unwind"];
    bb144__0_403 -> bb145__0_403 [label="return"];
    bb144__0_403 -> bb373__0_403 [label="unwind"];
    bb145__0_403 -> bb146__0_403 [label="return"];
    bb145__0_403 -> bb373__0_403 [label="unwind"];
    bb146__0_403 -> bb147__0_403 [label="return"];
    bb146__0_403 -> bb373__0_403 [label="unwind"];
    bb147__0_403 -> bb148__0_403 [label="return"];
    bb147__0_403 -> bb373__0_403 [label="unwind"];
    bb148__0_403 -> bb149__0_403 [label="return"];
    bb148__0_403 -> bb373__0_403 [label="unwind"];
    bb149__0_403 -> bb150__0_403 [label="return"];
    bb149__0_403 -> bb373__0_403 [label="unwind"];
    bb150__0_403 -> bb151__0_403 [label="return"];
    bb150__0_403 -> bb373__0_403 [label="unwind"];
    bb151__0_403 -> bb152__0_403 [label="return"];
    bb151__0_403 -> bb373__0_403 [label="unwind"];
    bb152__0_403 -> bb153__0_403 [label="return"];
    bb152__0_403 -> bb373__0_403 [label="unwind"];
    bb153__0_403 -> bb154__0_403 [label="return"];
    bb153__0_403 -> bb373__0_403 [label="unwind"];
    bb154__0_403 -> bb155__0_403 [label="return"];
    bb154__0_403 -> bb366__0_403 [label="unwind"];
    bb155__0_403 -> bb156__0_403 [label="return"];
    bb155__0_403 -> bb366__0_403 [label="unwind"];
    bb156__0_403 -> bb157__0_403 [label="return"];
    bb156__0_403 -> bb373__0_403 [label="unwind"];
    bb157__0_403 -> bb211__0_403 [label=""];
    bb158__0_403 -> bb159__0_403 [label="return"];
    bb158__0_403 -> bb373__0_403 [label="unwind"];
    bb159__0_403 -> bb160__0_403 [label="return"];
    bb159__0_403 -> bb373__0_403 [label="unwind"];
    bb160__0_403 -> bb161__0_403 [label="return"];
    bb160__0_403 -> bb373__0_403 [label="unwind"];
    bb161__0_403 -> bb162__0_403 [label="return"];
    bb161__0_403 -> bb373__0_403 [label="unwind"];
    bb162__0_403 -> bb163__0_403 [label="return"];
    bb162__0_403 -> bb373__0_403 [label="unwind"];
    bb163__0_403 -> bb164__0_403 [label="return"];
    bb163__0_403 -> bb373__0_403 [label="unwind"];
    bb164__0_403 -> bb165__0_403 [label="return"];
    bb164__0_403 -> bb373__0_403 [label="unwind"];
    bb165__0_403 -> bb166__0_403 [label="return"];
    bb165__0_403 -> bb373__0_403 [label="unwind"];
    bb166__0_403 -> bb167__0_403 [label="return"];
    bb166__0_403 -> bb373__0_403 [label="unwind"];
    bb167__0_403 -> bb168__0_403 [label="return"];
    bb167__0_403 -> bb373__0_403 [label="unwind"];
    bb168__0_403 -> bb169__0_403 [label="return"];
    bb168__0_403 -> bb373__0_403 [label="unwind"];
    bb169__0_403 -> bb170__0_403 [label="return"];
    bb169__0_403 -> bb373__0_403 [label="unwind"];
    bb170__0_403 -> bb171__0_403 [label="return"];
    bb170__0_403 -> bb373__0_403 [label="unwind"];
    bb171__0_403 -> bb172__0_403 [label="return"];
    bb171__0_403 -> bb373__0_403 [label="unwind"];
    bb172__0_403 -> bb173__0_403 [label="return"];
    bb172__0_403 -> bb365__0_403 [label="unwind"];
    bb173__0_403 -> bb174__0_403 [label="return"];
    bb173__0_403 -> bb365__0_403 [label="unwind"];
    bb174__0_403 -> bb175__0_403 [label="return"];
    bb174__0_403 -> bb373__0_403 [label="unwind"];
    bb175__0_403 -> bb211__0_403 [label=""];
    bb176__0_403 -> bb177__0_403 [label="return"];
    bb176__0_403 -> bb373__0_403 [label="unwind"];
    bb177__0_403 -> bb178__0_403 [label="return"];
    bb177__0_403 -> bb373__0_403 [label="unwind"];
    bb178__0_403 -> bb179__0_403 [label="return"];
    bb178__0_403 -> bb373__0_403 [label="unwind"];
    bb179__0_403 -> bb180__0_403 [label="return"];
    bb179__0_403 -> bb373__0_403 [label="unwind"];
    bb180__0_403 -> bb181__0_403 [label="return"];
    bb180__0_403 -> bb373__0_403 [label="unwind"];
    bb181__0_403 -> bb182__0_403 [label="return"];
    bb181__0_403 -> bb373__0_403 [label="unwind"];
    bb182__0_403 -> bb183__0_403 [label="return"];
    bb182__0_403 -> bb373__0_403 [label="unwind"];
    bb183__0_403 -> bb184__0_403 [label="return"];
    bb183__0_403 -> bb373__0_403 [label="unwind"];
    bb184__0_403 -> bb185__0_403 [label="return"];
    bb184__0_403 -> bb373__0_403 [label="unwind"];
    bb185__0_403 -> bb186__0_403 [label="return"];
    bb185__0_403 -> bb373__0_403 [label="unwind"];
    bb186__0_403 -> bb187__0_403 [label="return"];
    bb186__0_403 -> bb373__0_403 [label="unwind"];
    bb187__0_403 -> bb188__0_403 [label="return"];
    bb187__0_403 -> bb373__0_403 [label="unwind"];
    bb188__0_403 -> bb189__0_403 [label="return"];
    bb188__0_403 -> bb373__0_403 [label="unwind"];
    bb189__0_403 -> bb190__0_403 [label="return"];
    bb189__0_403 -> bb373__0_403 [label="unwind"];
    bb190__0_403 -> bb191__0_403 [label="return"];
    bb190__0_403 -> bb364__0_403 [label="unwind"];
    bb191__0_403 -> bb192__0_403 [label="return"];
    bb191__0_403 -> bb364__0_403 [label="unwind"];
    bb192__0_403 -> bb193__0_403 [label="return"];
    bb192__0_403 -> bb373__0_403 [label="unwind"];
    bb193__0_403 -> bb211__0_403 [label=""];
    bb194__0_403 -> bb195__0_403 [label="return"];
    bb194__0_403 -> bb373__0_403 [label="unwind"];
    bb195__0_403 -> bb196__0_403 [label="return"];
    bb195__0_403 -> bb373__0_403 [label="unwind"];
    bb196__0_403 -> bb197__0_403 [label="return"];
    bb196__0_403 -> bb373__0_403 [label="unwind"];
    bb197__0_403 -> bb198__0_403 [label="return"];
    bb197__0_403 -> bb373__0_403 [label="unwind"];
    bb198__0_403 -> bb199__0_403 [label="return"];
    bb198__0_403 -> bb373__0_403 [label="unwind"];
    bb199__0_403 -> bb200__0_403 [label="return"];
    bb199__0_403 -> bb373__0_403 [label="unwind"];
    bb200__0_403 -> bb201__0_403 [label="return"];
    bb200__0_403 -> bb373__0_403 [label="unwind"];
    bb201__0_403 -> bb202__0_403 [label="return"];
    bb201__0_403 -> bb373__0_403 [label="unwind"];
    bb202__0_403 -> bb203__0_403 [label="return"];
    bb202__0_403 -> bb373__0_403 [label="unwind"];
    bb203__0_403 -> bb204__0_403 [label="return"];
    bb203__0_403 -> bb373__0_403 [label="unwind"];
    bb204__0_403 -> bb205__0_403 [label="return"];
    bb204__0_403 -> bb373__0_403 [label="unwind"];
    bb205__0_403 -> bb206__0_403 [label="return"];
    bb205__0_403 -> bb373__0_403 [label="unwind"];
    bb206__0_403 -> bb207__0_403 [label="return"];
    bb206__0_403 -> bb373__0_403 [label="unwind"];
    bb207__0_403 -> bb208__0_403 [label="return"];
    bb207__0_403 -> bb363__0_403 [label="unwind"];
    bb208__0_403 -> bb209__0_403 [label="return"];
    bb208__0_403 -> bb363__0_403 [label="unwind"];
    bb209__0_403 -> bb210__0_403 [label="return"];
    bb209__0_403 -> bb373__0_403 [label="unwind"];
    bb210__0_403 -> bb211__0_403 [label=""];
    bb211__0_403 -> bb300__0_403 [label=""];
    bb212__0_403 -> bb213__0_403 [label="return"];
    bb212__0_403 -> bb373__0_403 [label="unwind"];
    bb213__0_403 -> bb214__0_403 [label="return"];
    bb213__0_403 -> bb373__0_403 [label="unwind"];
    bb214__0_403 -> bb215__0_403 [label="return"];
    bb214__0_403 -> bb373__0_403 [label="unwind"];
    bb215__0_403 -> bb217__0_403 [label="0"];
    bb215__0_403 -> bb216__0_403 [label="otherwise"];
    bb216__0_403 -> bb217__0_403 [label="0"];
    bb216__0_403 -> bb222__0_403 [label="otherwise"];
    bb217__0_403 -> bb219__0_403 [label="0"];
    bb217__0_403 -> bb218__0_403 [label="otherwise"];
    bb218__0_403 -> bb219__0_403 [label="0"];
    bb218__0_403 -> bb241__0_403 [label="otherwise"];
    bb219__0_403 -> bb221__0_403 [label="0"];
    bb219__0_403 -> bb220__0_403 [label="otherwise"];
    bb220__0_403 -> bb221__0_403 [label="0"];
    bb220__0_403 -> bb260__0_403 [label="otherwise"];
    bb221__0_403 -> bb279__0_403 [label="return"];
    bb221__0_403 -> bb373__0_403 [label="unwind"];
    bb222__0_403 -> bb223__0_403 [label="return"];
    bb222__0_403 -> bb373__0_403 [label="unwind"];
    bb223__0_403 -> bb224__0_403 [label="return"];
    bb223__0_403 -> bb373__0_403 [label="unwind"];
    bb224__0_403 -> bb225__0_403 [label="return"];
    bb224__0_403 -> bb373__0_403 [label="unwind"];
    bb225__0_403 -> bb226__0_403 [label="return"];
    bb225__0_403 -> bb373__0_403 [label="unwind"];
    bb226__0_403 -> bb227__0_403 [label="return"];
    bb226__0_403 -> bb373__0_403 [label="unwind"];
    bb227__0_403 -> bb228__0_403 [label="return"];
    bb227__0_403 -> bb373__0_403 [label="unwind"];
    bb228__0_403 -> bb229__0_403 [label="return"];
    bb228__0_403 -> bb373__0_403 [label="unwind"];
    bb229__0_403 -> bb230__0_403 [label="return"];
    bb229__0_403 -> bb373__0_403 [label="unwind"];
    bb230__0_403 -> bb231__0_403 [label="return"];
    bb230__0_403 -> bb373__0_403 [label="unwind"];
    bb231__0_403 -> bb232__0_403 [label="return"];
    bb231__0_403 -> bb373__0_403 [label="unwind"];
    bb232__0_403 -> bb233__0_403 [label="return"];
    bb232__0_403 -> bb373__0_403 [label="unwind"];
    bb233__0_403 -> bb234__0_403 [label="return"];
    bb233__0_403 -> bb373__0_403 [label="unwind"];
    bb234__0_403 -> bb235__0_403 [label="return"];
    bb234__0_403 -> bb373__0_403 [label="unwind"];
    bb235__0_403 -> bb236__0_403 [label="return"];
    bb235__0_403 -> bb373__0_403 [label="unwind"];
    bb236__0_403 -> bb237__0_403 [label="return"];
    bb236__0_403 -> bb373__0_403 [label="unwind"];
    bb237__0_403 -> bb238__0_403 [label="return"];
    bb237__0_403 -> bb362__0_403 [label="unwind"];
    bb238__0_403 -> bb239__0_403 [label="return"];
    bb238__0_403 -> bb362__0_403 [label="unwind"];
    bb239__0_403 -> bb240__0_403 [label="return"];
    bb239__0_403 -> bb373__0_403 [label="unwind"];
    bb240__0_403 -> bb297__0_403 [label=""];
    bb241__0_403 -> bb242__0_403 [label="return"];
    bb241__0_403 -> bb373__0_403 [label="unwind"];
    bb242__0_403 -> bb243__0_403 [label="return"];
    bb242__0_403 -> bb373__0_403 [label="unwind"];
    bb243__0_403 -> bb244__0_403 [label="return"];
    bb243__0_403 -> bb373__0_403 [label="unwind"];
    bb244__0_403 -> bb245__0_403 [label="return"];
    bb244__0_403 -> bb373__0_403 [label="unwind"];
    bb245__0_403 -> bb246__0_403 [label="return"];
    bb245__0_403 -> bb373__0_403 [label="unwind"];
    bb246__0_403 -> bb247__0_403 [label="return"];
    bb246__0_403 -> bb373__0_403 [label="unwind"];
    bb247__0_403 -> bb248__0_403 [label="return"];
    bb247__0_403 -> bb373__0_403 [label="unwind"];
    bb248__0_403 -> bb249__0_403 [label="return"];
    bb248__0_403 -> bb373__0_403 [label="unwind"];
    bb249__0_403 -> bb250__0_403 [label="return"];
    bb249__0_403 -> bb373__0_403 [label="unwind"];
    bb250__0_403 -> bb251__0_403 [label="return"];
    bb250__0_403 -> bb373__0_403 [label="unwind"];
    bb251__0_403 -> bb252__0_403 [label="return"];
    bb251__0_403 -> bb373__0_403 [label="unwind"];
    bb252__0_403 -> bb253__0_403 [label="return"];
    bb252__0_403 -> bb373__0_403 [label="unwind"];
    bb253__0_403 -> bb254__0_403 [label="return"];
    bb253__0_403 -> bb373__0_403 [label="unwind"];
    bb254__0_403 -> bb255__0_403 [label="return"];
    bb254__0_403 -> bb373__0_403 [label="unwind"];
    bb255__0_403 -> bb256__0_403 [label="return"];
    bb255__0_403 -> bb373__0_403 [label="unwind"];
    bb256__0_403 -> bb257__0_403 [label="return"];
    bb256__0_403 -> bb361__0_403 [label="unwind"];
    bb257__0_403 -> bb258__0_403 [label="return"];
    bb257__0_403 -> bb361__0_403 [label="unwind"];
    bb258__0_403 -> bb259__0_403 [label="return"];
    bb258__0_403 -> bb373__0_403 [label="unwind"];
    bb259__0_403 -> bb297__0_403 [label=""];
    bb260__0_403 -> bb261__0_403 [label="return"];
    bb260__0_403 -> bb373__0_403 [label="unwind"];
    bb261__0_403 -> bb262__0_403 [label="return"];
    bb261__0_403 -> bb373__0_403 [label="unwind"];
    bb262__0_403 -> bb263__0_403 [label="return"];
    bb262__0_403 -> bb373__0_403 [label="unwind"];
    bb263__0_403 -> bb264__0_403 [label="return"];
    bb263__0_403 -> bb373__0_403 [label="unwind"];
    bb264__0_403 -> bb265__0_403 [label="return"];
    bb264__0_403 -> bb373__0_403 [label="unwind"];
    bb265__0_403 -> bb266__0_403 [label="return"];
    bb265__0_403 -> bb373__0_403 [label="unwind"];
    bb266__0_403 -> bb267__0_403 [label="return"];
    bb266__0_403 -> bb373__0_403 [label="unwind"];
    bb267__0_403 -> bb268__0_403 [label="return"];
    bb267__0_403 -> bb373__0_403 [label="unwind"];
    bb268__0_403 -> bb269__0_403 [label="return"];
    bb268__0_403 -> bb373__0_403 [label="unwind"];
    bb269__0_403 -> bb270__0_403 [label="return"];
    bb269__0_403 -> bb373__0_403 [label="unwind"];
    bb270__0_403 -> bb271__0_403 [label="return"];
    bb270__0_403 -> bb373__0_403 [label="unwind"];
    bb271__0_403 -> bb272__0_403 [label="return"];
    bb271__0_403 -> bb373__0_403 [label="unwind"];
    bb272__0_403 -> bb273__0_403 [label="return"];
    bb272__0_403 -> bb373__0_403 [label="unwind"];
    bb273__0_403 -> bb274__0_403 [label="return"];
    bb273__0_403 -> bb373__0_403 [label="unwind"];
    bb274__0_403 -> bb275__0_403 [label="return"];
    bb274__0_403 -> bb373__0_403 [label="unwind"];
    bb275__0_403 -> bb276__0_403 [label="return"];
    bb275__0_403 -> bb360__0_403 [label="unwind"];
    bb276__0_403 -> bb277__0_403 [label="return"];
    bb276__0_403 -> bb360__0_403 [label="unwind"];
    bb277__0_403 -> bb278__0_403 [label="return"];
    bb277__0_403 -> bb373__0_403 [label="unwind"];
    bb278__0_403 -> bb297__0_403 [label=""];
    bb279__0_403 -> bb280__0_403 [label="return"];
    bb279__0_403 -> bb373__0_403 [label="unwind"];
    bb280__0_403 -> bb281__0_403 [label="return"];
    bb280__0_403 -> bb373__0_403 [label="unwind"];
    bb281__0_403 -> bb282__0_403 [label="return"];
    bb281__0_403 -> bb373__0_403 [label="unwind"];
    bb282__0_403 -> bb283__0_403 [label="return"];
    bb282__0_403 -> bb373__0_403 [label="unwind"];
    bb283__0_403 -> bb284__0_403 [label="return"];
    bb283__0_403 -> bb373__0_403 [label="unwind"];
    bb284__0_403 -> bb285__0_403 [label="return"];
    bb284__0_403 -> bb373__0_403 [label="unwind"];
    bb285__0_403 -> bb286__0_403 [label="return"];
    bb285__0_403 -> bb373__0_403 [label="unwind"];
    bb286__0_403 -> bb287__0_403 [label="return"];
    bb286__0_403 -> bb373__0_403 [label="unwind"];
    bb287__0_403 -> bb288__0_403 [label="return"];
    bb287__0_403 -> bb373__0_403 [label="unwind"];
    bb288__0_403 -> bb289__0_403 [label="return"];
    bb288__0_403 -> bb373__0_403 [label="unwind"];
    bb289__0_403 -> bb290__0_403 [label="return"];
    bb289__0_403 -> bb373__0_403 [label="unwind"];
    bb290__0_403 -> bb291__0_403 [label="return"];
    bb290__0_403 -> bb373__0_403 [label="unwind"];
    bb291__0_403 -> bb292__0_403 [label="return"];
    bb291__0_403 -> bb373__0_403 [label="unwind"];
    bb292__0_403 -> bb293__0_403 [label="return"];
    bb292__0_403 -> bb373__0_403 [label="unwind"];
    bb293__0_403 -> bb294__0_403 [label="return"];
    bb293__0_403 -> bb359__0_403 [label="unwind"];
    bb294__0_403 -> bb295__0_403 [label="return"];
    bb294__0_403 -> bb359__0_403 [label="unwind"];
    bb295__0_403 -> bb296__0_403 [label="return"];
    bb295__0_403 -> bb373__0_403 [label="unwind"];
    bb296__0_403 -> bb297__0_403 [label=""];
    bb297__0_403 -> bb298__0_403 [label="return"];
    bb297__0_403 -> bb373__0_403 [label="unwind"];
    bb298__0_403 -> bb299__0_403 [label="return"];
    bb298__0_403 -> bb373__0_403 [label="unwind"];
    bb299__0_403 -> bb300__0_403 [label=""];
    bb300__0_403 -> bb301__0_403 [label="return"];
    bb300__0_403 -> bb373__0_403 [label="unwind"];
    bb301__0_403 -> bb307__0_403 [label="0"];
    bb301__0_403 -> bb302__0_403 [label="otherwise"];
    bb302__0_403 -> bb303__0_403 [label="return"];
    bb302__0_403 -> bb373__0_403 [label="unwind"];
    bb303__0_403 -> bb304__0_403 [label="return"];
    bb303__0_403 -> bb358__0_403 [label="unwind"];
    bb304__0_403 -> bb305__0_403 [label="return"];
    bb304__0_403 -> bb358__0_403 [label="unwind"];
    bb305__0_403 -> bb306__0_403 [label="return"];
    bb305__0_403 -> bb373__0_403 [label="unwind"];
    bb306__0_403 -> bb352__0_403 [label=""];
    bb307__0_403 -> bb308__0_403 [label="return"];
    bb307__0_403 -> bb373__0_403 [label="unwind"];
    bb308__0_403 -> bb310__0_403 [label="0"];
    bb308__0_403 -> bb309__0_403 [label="otherwise"];
    bb309__0_403 -> bb313__0_403 [label=""];
    bb310__0_403 -> bb311__0_403 [label="return"];
    bb310__0_403 -> bb373__0_403 [label="unwind"];
    bb311__0_403 -> bb312__0_403 [label="return"];
    bb311__0_403 -> bb373__0_403 [label="unwind"];
    bb312__0_403 -> bb313__0_403 [label=""];
    bb313__0_403 -> bb314__0_403 [label="return"];
    bb313__0_403 -> bb373__0_403 [label="unwind"];
    bb314__0_403 -> bb315__0_403 [label="return"];
    bb314__0_403 -> bb373__0_403 [label="unwind"];
    bb315__0_403 -> bb316__0_403 [label="return"];
    bb315__0_403 -> bb373__0_403 [label="unwind"];
    bb316__0_403 -> bb317__0_403 [label="return"];
    bb316__0_403 -> bb373__0_403 [label="unwind"];
    bb317__0_403 -> bb319__0_403 [label="0"];
    bb317__0_403 -> bb318__0_403 [label="otherwise"];
    bb318__0_403 -> bb320__0_403 [label=""];
    bb319__0_403 -> bb320__0_403 [label=""];
    bb320__0_403 -> bb322__0_403 [label="0"];
    bb320__0_403 -> bb321__0_403 [label="1"];
    bb320__0_403 -> bb4__0_403 [label="otherwise"];
    bb321__0_403 -> bb331__0_403 [label="return"];
    bb321__0_403 -> bb373__0_403 [label="unwind"];
    bb322__0_403 -> bb323__0_403 [label="return"];
    bb322__0_403 -> bb373__0_403 [label="unwind"];
    bb323__0_403 -> bb324__0_403 [label="success"];
    bb323__0_403 -> bb373__0_403 [label="unwind"];
    bb324__0_403 -> bb325__0_403 [label="return"];
    bb324__0_403 -> bb373__0_403 [label="unwind"];
    bb325__0_403 -> bb326__0_403 [label="return"];
    bb325__0_403 -> bb373__0_403 [label="unwind"];
    bb326__0_403 -> bb327__0_403 [label="return"];
    bb326__0_403 -> bb373__0_403 [label="unwind"];
    bb327__0_403 -> bb328__0_403 [label="0"];
    bb327__0_403 -> bb329__0_403 [label="1"];
    bb327__0_403 -> bb4__0_403 [label="otherwise"];
    bb328__0_403 -> bb339__0_403 [label=""];
    bb329__0_403 -> bb330__0_403 [label="return"];
    bb329__0_403 -> bb379__0_403 [label="unwind"];
    bb330__0_403 -> bb350__0_403 [label=""];
    bb331__0_403 -> bb332__0_403 [label="success"];
    bb331__0_403 -> bb373__0_403 [label="unwind"];
    bb332__0_403 -> bb333__0_403 [label="return"];
    bb332__0_403 -> bb373__0_403 [label="unwind"];
    bb333__0_403 -> bb334__0_403 [label="return"];
    bb333__0_403 -> bb373__0_403 [label="unwind"];
    bb334__0_403 -> bb335__0_403 [label="return"];
    bb334__0_403 -> bb373__0_403 [label="unwind"];
    bb335__0_403 -> bb336__0_403 [label="0"];
    bb335__0_403 -> bb337__0_403 [label="1"];
    bb335__0_403 -> bb4__0_403 [label="otherwise"];
    bb336__0_403 -> bb339__0_403 [label=""];
    bb337__0_403 -> bb338__0_403 [label="return"];
    bb337__0_403 -> bb378__0_403 [label="unwind"];
    bb338__0_403 -> bb350__0_403 [label=""];
    bb339__0_403 -> bb342__0_403 [label="0"];
    bb339__0_403 -> bb340__0_403 [label="otherwise"];
    bb340__0_403 -> bb341__0_403 [label="success"];
    bb340__0_403 -> bb373__0_403 [label="unwind"];
    bb341__0_403 -> bb343__0_403 [label=""];
    bb342__0_403 -> bb343__0_403 [label=""];
    bb343__0_403 -> bb344__0_403 [label="return"];
    bb343__0_403 -> bb373__0_403 [label="unwind"];
    bb344__0_403 -> bb345__0_403 [label="return"];
    bb344__0_403 -> bb373__0_403 [label="unwind"];
    bb345__0_403 -> bb346__0_403 [label="0"];
    bb345__0_403 -> bb347__0_403 [label="1"];
    bb345__0_403 -> bb4__0_403 [label="otherwise"];
    bb346__0_403 -> bb349__0_403 [label="return"];
    bb346__0_403 -> bb384__0_403 [label="unwind"];
    bb347__0_403 -> bb348__0_403 [label="return"];
    bb347__0_403 -> bb377__0_403 [label="unwind"];
    bb348__0_403 -> bb351__0_403 [label=""];
    bb349__0_403 -> bb357__0_403 [label=""];
    bb350__0_403 -> bb351__0_403 [label=""];
    bb351__0_403 -> bb352__0_403 [label=""];
    bb352__0_403 -> bb353__0_403 [label=""];
    bb353__0_403 -> bb354__0_403 [label=""];
    bb354__0_403 -> bb355__0_403 [label="return"];
    bb354__0_403 -> bb384__0_403 [label="unwind"];
    bb355__0_403 -> bb356__0_403 [label=""];
    bb356__0_403 -> bb357__0_403 [label=""];
    bb358__0_403 -> bb373__0_403 [label="return"];
    bb359__0_403 -> bb373__0_403 [label="return"];
    bb360__0_403 -> bb373__0_403 [label="return"];
    bb361__0_403 -> bb373__0_403 [label="return"];
    bb362__0_403 -> bb373__0_403 [label="return"];
    bb363__0_403 -> bb373__0_403 [label="return"];
    bb364__0_403 -> bb373__0_403 [label="return"];
    bb365__0_403 -> bb373__0_403 [label="return"];
    bb366__0_403 -> bb373__0_403 [label="return"];
    bb367__0_403 -> bb373__0_403 [label="return"];
    bb368__0_403 -> bb373__0_403 [label="return"];
    bb369__0_403 -> bb373__0_403 [label="return"];
    bb370__0_403 -> bb373__0_403 [label="return"];
    bb371__0_403 -> bb373__0_403 [label="return"];
    bb372__0_403 -> bb373__0_403 [label="return"];
    bb373__0_403 -> bb384__0_403 [label="return"];
    bb374__0_403 -> bb384__0_403 [label="return"];
    bb375__0_403 -> bb384__0_403 [label="return"];
    bb377__0_403 -> bb373__0_403 [label=""];
    bb378__0_403 -> bb373__0_403 [label=""];
    bb379__0_403 -> bb373__0_403 [label=""];
    bb380__0_403 -> bb373__0_403 [label=""];
    bb381__0_403 -> bb373__0_403 [label=""];
    bb382__0_403 -> bb373__0_403 [label=""];
    bb383__0_403 -> bb376__0_403 [label="return"];
    bb384__0_403 -> bb376__0_403 [label="0"];
    bb384__0_403 -> bb383__0_403 [label="otherwise"];
    bb385__0_403 -> bb376__0_403 [label=""];
}
