digraph Mir_0_1082 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;handlers::handler_invest::Invest&lt;'info&gt; as anchor_lang::AccountsExit&lt;'info&gt;&gt;::exit(_1: &amp;ReErased handlers::handler_invest::Invest&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: Closure(DefId(0:1083 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _21: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: Closure(DefId(0:1084 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _28: ();<br align="left"/>let _29: ();<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _31: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::VaultState&gt;;<br align="left"/>let _34: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::VaultState&gt;;<br align="left"/>let mut _35: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _36: Closure(DefId(0:1085 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _41: ();<br align="left"/>let _42: ();<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _44: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _45: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _46: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _47: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _49: Closure(DefId(0:1086 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _54: ();<br align="left"/>let _55: ();<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _57: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _58: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _59: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, std::alloc::Global&gt;;<br align="left"/>let _60: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _61: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _62: Closure(DefId(0:1087 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _67: ();<br align="left"/>let _68: ();<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _70: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _71: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _72: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _73: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _75: Closure(DefId(0:1088 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#5}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _80: ();<br align="left"/>let _81: ();<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _83: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _85: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _86: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _87: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _88: Closure(DefId(0:1089 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#6}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _93: ();<br align="left"/>let _94: ();<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _96: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _97: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _98: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let _99: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, kamino_lending::Reserve&gt;;<br align="left"/>let mut _100: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _101: Closure(DefId(0:1090 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#7}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _106: ();<br align="left"/>let _107: ();<br align="left"/>let mut _108: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _109: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _110: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _111: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _112: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _114: Closure(DefId(0:1091 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#8}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _119: ();<br align="left"/>let _120: ();<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _122: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _123: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _124: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _125: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _126: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _127: Closure(DefId(0:1092 ~ kamino_vault[b3c4]::handlers::handler_invest::{impl#3}::exit::{closure#9}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _132: ();<br align="left"/>let mut _133: ();<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>let mut _152: isize;<br align="left"/>let mut _153: isize;<br align="left"/>let mut _154: isize;<br align="left"/>let mut _155: isize;<br align="left"/>let mut _156: isize;<br align="left"/>let mut _157: isize;<br align="left"/>let mut _158: isize;<br align="left"/>let mut _159: isize;<br align="left"/>let mut _160: isize;<br align="left"/>let mut _161: isize;<br align="left"/>let mut _162: isize;<br align="left"/>let mut _163: isize;<br align="left"/>let mut _164: isize;<br align="left"/>let mut _165: isize;<br align="left"/>let mut _166: isize;<br align="left"/>let mut _167: isize;<br align="left"/>let mut _168: isize;<br align="left"/>let mut _169: isize;<br align="left"/>let mut _170: isize;<br align="left"/>let mut _171: isize;<br align="left"/>let mut _172: isize;<br align="left"/>let mut _173: isize;<br align="left"/>let mut _174: isize;<br align="left"/>let mut _175: isize;<br align="left"/>let mut _176: isize;<br align="left"/>let mut _177: isize;<br align="left"/>let mut _178: isize;<br align="left"/>let mut _179: isize;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug program_id =&gt; _2;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>>;
    bb0__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_7 = &amp;(*_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_2)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _7, move _9)</td></tr></table>>];
    bb1__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _6, move _10)</td></tr></table>>];
    bb2__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_11 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_4 as Continue).0: ())<br/>_3 = _15<br/>StorageDead(_15)<br/>_134 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).1: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_20 = &amp;(*_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/></td></tr><tr><td align="left">_19 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _20, move _22)</td></tr></table>>];
    bb5__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_172 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageLive(_23)<br/>_23 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_18 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _19, move _23)</td></tr></table>>];
    bb9__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb10__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_17 as Continue).0: ())<br/>_16 = _28<br/>StorageDead(_28)<br/>_136 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;((*_1).2: anchor_lang::prelude::AccountLoader&lt;'_, state::VaultState&gt;)<br/>_33 = &amp;(*_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_2)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, state::VaultState&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _33, move _35)</td></tr></table>>];
    bb12__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_170 = discriminant(_17)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageLive(_36)<br/>_36 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_31 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _32, move _36)</td></tr></table>>];
    bb15__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb16__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_37 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb17__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_30 as Continue).0: ())<br/>_29 = _41<br/>StorageDead(_41)<br/>_138 = discriminant(_30)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;((*_1).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_46 = &amp;(*_47)<br/>StorageLive(_48)<br/>_48 = &amp;(*_2)<br/></td></tr><tr><td align="left">_45 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _46, move _48)</td></tr></table>>];
    bb18__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_40)<br/>_40 = move _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb19__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>_168 = discriminant(_30)<br/>StorageDead(_34)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageLive(_49)<br/>_49 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_44 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _45, move _49)</td></tr></table>>];
    bb21__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb22__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_50 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb23__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_43 as Continue).0: ())<br/>_42 = _54<br/>StorageDead(_54)<br/>_140 = discriminant(_43)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = &amp;((*_1).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_59 = &amp;(*_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_2)<br/></td></tr><tr><td align="left">_58 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _59, move _61)</td></tr></table>>];
    bb24__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = move ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_53)<br/>_53 = move _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb25__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>_166 = discriminant(_43)<br/>StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageLive(_62)<br/>_62 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_57 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _58, move _62)</td></tr></table>>];
    bb27__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb28__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_63 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb29__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_56 as Continue).0: ())<br/>_55 = _67<br/>StorageDead(_67)<br/>_142 = discriminant(_56)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;((*_1).5: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_72 = &amp;(*_73)<br/>StorageLive(_74)<br/>_74 = &amp;(*_2)<br/></td></tr><tr><td align="left">_71 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _72, move _74)</td></tr></table>>];
    bb30__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_66)<br/>_66 = move _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb31__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>_164 = discriminant(_56)<br/>StorageDead(_60)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>_75 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_70 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _71, move _75)</td></tr></table>>];
    bb33__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb34__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_76 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb35__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_69 as Continue).0: ())<br/>_68 = _80<br/>StorageDead(_80)<br/>_144 = discriminant(_69)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;((*_1).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_85 = &amp;(*_86)<br/>StorageLive(_87)<br/>_87 = &amp;(*_2)<br/></td></tr><tr><td align="left">_84 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _85, move _87)</td></tr></table>>];
    bb36__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_79)<br/>_79 = move _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb37__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>_162 = discriminant(_69)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageLive(_88)<br/>_88 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_83 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _84, move _88)</td></tr></table>>];
    bb39__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb40__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_89 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb41__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_82 as Continue).0: ())<br/>_81 = _93<br/>StorageDead(_93)<br/>_146 = discriminant(_82)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;((*_1).7: anchor_lang::prelude::AccountLoader&lt;'_, kamino_lending::Reserve&gt;)<br/>_98 = &amp;(*_99)<br/>StorageLive(_100)<br/>_100 = &amp;(*_2)<br/></td></tr><tr><td align="left">_97 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, kamino_lending::Reserve&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _98, move _100)</td></tr></table>>];
    bb42__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = move ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_92)<br/>_92 = move _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb43__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>_160 = discriminant(_82)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageLive(_101)<br/>_101 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_96 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _97, move _101)</td></tr></table>>];
    bb45__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb46__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_102 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb47__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_95 as Continue).0: ())<br/>_94 = _106<br/>StorageDead(_106)<br/>_148 = discriminant(_95)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;((*_1).10: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_111 = &amp;(*_112)<br/>StorageLive(_113)<br/>_113 = &amp;(*_2)<br/></td></tr><tr><td align="left">_110 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _111, move _113)</td></tr></table>>];
    bb48__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = move ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_105)<br/>_105 = move _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb49__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/>_158 = discriminant(_95)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageLive(_114)<br/>_114 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_109 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _110, move _114)</td></tr></table>>];
    bb51__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _109)</td></tr></table>>];
    bb52__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_115 = discriminant(_108)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb53__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_108 as Continue).0: ())<br/>_107 = _119<br/>StorageDead(_119)<br/>_150 = discriminant(_108)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;((*_1).11: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_124 = &amp;(*_125)<br/>StorageLive(_126)<br/>_126 = &amp;(*_2)<br/></td></tr><tr><td align="left">_123 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _124, move _126)</td></tr></table>>];
    bb54__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = move ((_108 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_118)<br/>_118 = move _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb55__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>_156 = discriminant(_108)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>_127 = {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}<br/></td></tr><tr><td align="left">_122 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs\kvault\src\handlers\handler_invest.rs:174:10: 174:18}&gt;(move _123, move _127)</td></tr></table>>];
    bb57__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb58__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_128 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb59__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_121 as Continue).0: ())<br/>_120 = _132<br/>StorageDead(_132)<br/>_152 = discriminant(_121)<br/>StorageDead(_125)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_133)<br/>_133 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _133)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = move ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_131)<br/>_131 = move _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb61__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>_154 = discriminant(_121)<br/>StorageDead(_125)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left">return</td></tr></table>>];
    bb63__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb64__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left" balign="left">_174 = discriminant(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left" balign="left">_175 = discriminant(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left" balign="left">_176 = discriminant(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left" balign="left">_177 = discriminant(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left" balign="left">_178 = discriminant(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left" balign="left">_179 = discriminant(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left" balign="left">_180 = discriminant(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left" balign="left">_181 = discriminant(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left" balign="left">_182 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1082 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left" balign="left">_183 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1082 -> bb1__0_1082 [label="return"];
    bb1__0_1082 -> bb2__0_1082 [label="return"];
    bb1__0_1082 -> bb63__0_1082 [label="unwind"];
    bb2__0_1082 -> bb3__0_1082 [label="return"];
    bb2__0_1082 -> bb63__0_1082 [label="unwind"];
    bb3__0_1082 -> bb4__0_1082 [label="0"];
    bb3__0_1082 -> bb6__0_1082 [label="1"];
    bb3__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb4__0_1082 -> bb8__0_1082 [label="return"];
    bb6__0_1082 -> bb7__0_1082 [label="return"];
    bb6__0_1082 -> bb73__0_1082 [label="unwind"];
    bb7__0_1082 -> bb62__0_1082 [label=""];
    bb8__0_1082 -> bb9__0_1082 [label="return"];
    bb8__0_1082 -> bb63__0_1082 [label="unwind"];
    bb9__0_1082 -> bb10__0_1082 [label="return"];
    bb9__0_1082 -> bb63__0_1082 [label="unwind"];
    bb10__0_1082 -> bb11__0_1082 [label="0"];
    bb10__0_1082 -> bb12__0_1082 [label="1"];
    bb10__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb11__0_1082 -> bb14__0_1082 [label="return"];
    bb12__0_1082 -> bb13__0_1082 [label="return"];
    bb12__0_1082 -> bb72__0_1082 [label="unwind"];
    bb13__0_1082 -> bb62__0_1082 [label=""];
    bb14__0_1082 -> bb15__0_1082 [label="return"];
    bb14__0_1082 -> bb63__0_1082 [label="unwind"];
    bb15__0_1082 -> bb16__0_1082 [label="return"];
    bb15__0_1082 -> bb63__0_1082 [label="unwind"];
    bb16__0_1082 -> bb17__0_1082 [label="0"];
    bb16__0_1082 -> bb18__0_1082 [label="1"];
    bb16__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb17__0_1082 -> bb20__0_1082 [label="return"];
    bb18__0_1082 -> bb19__0_1082 [label="return"];
    bb18__0_1082 -> bb71__0_1082 [label="unwind"];
    bb19__0_1082 -> bb62__0_1082 [label=""];
    bb20__0_1082 -> bb21__0_1082 [label="return"];
    bb20__0_1082 -> bb63__0_1082 [label="unwind"];
    bb21__0_1082 -> bb22__0_1082 [label="return"];
    bb21__0_1082 -> bb63__0_1082 [label="unwind"];
    bb22__0_1082 -> bb23__0_1082 [label="0"];
    bb22__0_1082 -> bb24__0_1082 [label="1"];
    bb22__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb23__0_1082 -> bb26__0_1082 [label="return"];
    bb24__0_1082 -> bb25__0_1082 [label="return"];
    bb24__0_1082 -> bb70__0_1082 [label="unwind"];
    bb25__0_1082 -> bb62__0_1082 [label=""];
    bb26__0_1082 -> bb27__0_1082 [label="return"];
    bb26__0_1082 -> bb63__0_1082 [label="unwind"];
    bb27__0_1082 -> bb28__0_1082 [label="return"];
    bb27__0_1082 -> bb63__0_1082 [label="unwind"];
    bb28__0_1082 -> bb29__0_1082 [label="0"];
    bb28__0_1082 -> bb30__0_1082 [label="1"];
    bb28__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb29__0_1082 -> bb32__0_1082 [label="return"];
    bb30__0_1082 -> bb31__0_1082 [label="return"];
    bb30__0_1082 -> bb69__0_1082 [label="unwind"];
    bb31__0_1082 -> bb62__0_1082 [label=""];
    bb32__0_1082 -> bb33__0_1082 [label="return"];
    bb32__0_1082 -> bb63__0_1082 [label="unwind"];
    bb33__0_1082 -> bb34__0_1082 [label="return"];
    bb33__0_1082 -> bb63__0_1082 [label="unwind"];
    bb34__0_1082 -> bb35__0_1082 [label="0"];
    bb34__0_1082 -> bb36__0_1082 [label="1"];
    bb34__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb35__0_1082 -> bb38__0_1082 [label="return"];
    bb36__0_1082 -> bb37__0_1082 [label="return"];
    bb36__0_1082 -> bb68__0_1082 [label="unwind"];
    bb37__0_1082 -> bb62__0_1082 [label=""];
    bb38__0_1082 -> bb39__0_1082 [label="return"];
    bb38__0_1082 -> bb63__0_1082 [label="unwind"];
    bb39__0_1082 -> bb40__0_1082 [label="return"];
    bb39__0_1082 -> bb63__0_1082 [label="unwind"];
    bb40__0_1082 -> bb41__0_1082 [label="0"];
    bb40__0_1082 -> bb42__0_1082 [label="1"];
    bb40__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb41__0_1082 -> bb44__0_1082 [label="return"];
    bb42__0_1082 -> bb43__0_1082 [label="return"];
    bb42__0_1082 -> bb67__0_1082 [label="unwind"];
    bb43__0_1082 -> bb62__0_1082 [label=""];
    bb44__0_1082 -> bb45__0_1082 [label="return"];
    bb44__0_1082 -> bb63__0_1082 [label="unwind"];
    bb45__0_1082 -> bb46__0_1082 [label="return"];
    bb45__0_1082 -> bb63__0_1082 [label="unwind"];
    bb46__0_1082 -> bb47__0_1082 [label="0"];
    bb46__0_1082 -> bb48__0_1082 [label="1"];
    bb46__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb47__0_1082 -> bb50__0_1082 [label="return"];
    bb48__0_1082 -> bb49__0_1082 [label="return"];
    bb48__0_1082 -> bb66__0_1082 [label="unwind"];
    bb49__0_1082 -> bb62__0_1082 [label=""];
    bb50__0_1082 -> bb51__0_1082 [label="return"];
    bb50__0_1082 -> bb63__0_1082 [label="unwind"];
    bb51__0_1082 -> bb52__0_1082 [label="return"];
    bb51__0_1082 -> bb63__0_1082 [label="unwind"];
    bb52__0_1082 -> bb53__0_1082 [label="0"];
    bb52__0_1082 -> bb54__0_1082 [label="1"];
    bb52__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb53__0_1082 -> bb56__0_1082 [label="return"];
    bb54__0_1082 -> bb55__0_1082 [label="return"];
    bb54__0_1082 -> bb65__0_1082 [label="unwind"];
    bb55__0_1082 -> bb62__0_1082 [label=""];
    bb56__0_1082 -> bb57__0_1082 [label="return"];
    bb56__0_1082 -> bb63__0_1082 [label="unwind"];
    bb57__0_1082 -> bb58__0_1082 [label="return"];
    bb57__0_1082 -> bb63__0_1082 [label="unwind"];
    bb58__0_1082 -> bb59__0_1082 [label="0"];
    bb58__0_1082 -> bb60__0_1082 [label="1"];
    bb58__0_1082 -> bb5__0_1082 [label="otherwise"];
    bb59__0_1082 -> bb62__0_1082 [label=""];
    bb60__0_1082 -> bb61__0_1082 [label="return"];
    bb60__0_1082 -> bb64__0_1082 [label="unwind"];
    bb61__0_1082 -> bb62__0_1082 [label=""];
    bb64__0_1082 -> bb63__0_1082 [label=""];
    bb65__0_1082 -> bb63__0_1082 [label=""];
    bb66__0_1082 -> bb63__0_1082 [label=""];
    bb67__0_1082 -> bb63__0_1082 [label=""];
    bb68__0_1082 -> bb63__0_1082 [label=""];
    bb69__0_1082 -> bb63__0_1082 [label=""];
    bb70__0_1082 -> bb63__0_1082 [label=""];
    bb71__0_1082 -> bb63__0_1082 [label=""];
    bb72__0_1082 -> bb63__0_1082 [label=""];
    bb73__0_1082 -> bb63__0_1082 [label=""];
}
