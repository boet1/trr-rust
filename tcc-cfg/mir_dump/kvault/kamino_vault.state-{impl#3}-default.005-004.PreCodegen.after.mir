// MIR for `state::<impl at programs\kvault\src\state.rs:462:1: 462:33>::default` after PreCodegen

fn state::<impl at programs\kvault\src\state.rs:462:1: 462:33>::default() -> VaultAllocation {
    let mut _0: state::VaultAllocation;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: [u64; 127];
    let mut _4: [u64; 128];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = [const 0_u64; 127];
        StorageLive(_4);
        _4 = [const 0_u64; 128];
        _0 = VaultAllocation { reserve: move _1, ctoken_vault: move _2, target_allocation_weight: const 0_u64, token_allocation_cap: const _, ctoken_vault_bump: const 0_u64, config_padding: move _3, ctoken_allocation: const 0_u64, last_invest_slot: const 0_u64, token_target_allocation_sf: const 0_u128, state_padding: move _4 };
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
