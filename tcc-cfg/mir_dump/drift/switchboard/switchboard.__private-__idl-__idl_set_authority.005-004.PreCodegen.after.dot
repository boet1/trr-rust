digraph Mir_0_56 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn __idl_set_authority(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut __private::__idl::IdlAccounts&lt;ReErased&gt;, _3: anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: &amp;ReErased str;<br align="left"/>let _6: &amp;ReErased str;<br align="left"/>let mut _7: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _8: &amp;ReErased mut __private::__idl::IdlAccount;<br align="left"/>let mut _9: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, __private::__idl::IdlAccount&gt;;<br align="left"/>let mut _10: ();<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug accounts =&gt; _2;<br align="left"/>debug new_authority =&gt; _3;<br align="left"/>>;
    bb0__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = const &quot;Instruction: IdlSetAuthority&quot;<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = anchor_lang::solana_program::log::sol_log(move _5)</td></tr></table>>];
    bb1__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_6)<br/>StorageDead(_4)<br/>StorageLive(_7)<br/>_7 = _3<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut ((*_2).0: anchor_lang::prelude::Account&lt;'_, __private::__idl::IdlAccount&gt;)<br/></td></tr><tr><td align="left">_8 = &lt;anchor_lang::prelude::Account&lt;'_, __idl::IdlAccount&gt; as DerefMut&gt;::deref_mut(move _9)</td></tr></table>>];
    bb2__0_56 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>((*_8).0: anchor_lang::prelude::Pubkey) = move _7<br/>StorageDead(_7)<br/>StorageDead(_8)<br/>StorageLive(_10)<br/>_10 = ()<br/>_0 = Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _10)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_56 -> bb1__0_56 [label="return"];
    bb1__0_56 -> bb2__0_56 [label="return"];
}
