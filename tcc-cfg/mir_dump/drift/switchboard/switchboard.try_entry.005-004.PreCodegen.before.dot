digraph Mir_0_11 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn try_entry(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: anchor_lang::error::Error;<br align="left"/>let mut _11: anchor_lang::error::ErrorCode;<br align="left"/>let _12: ();<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: usize;<br align="left"/>let mut _15: &amp;ReErased [u8];<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: anchor_lang::error::Error;<br align="left"/>let mut _18: anchor_lang::error::ErrorCode;<br align="left"/>let mut _19: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _21: &amp;ReErased [u8];<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug accounts =&gt; _2;<br align="left"/>debug data =&gt; _3;<br align="left"/>>;
    bb0__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = const {alloc37: &amp;anchor_lang::prelude::Pubkey}<br/>_7 = &amp;(*_8)<br/></td></tr><tr><td align="left">_5 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _6, move _7)</td></tr></table>>];
    bb1__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb2__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = DeclaredProgramIdMismatch<br/></td></tr><tr><td align="left">_10 = &lt;ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _11)</td></tr></table>>];
    bb3__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_0 = Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _10)<br/>StorageDead(_10)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_3)<br/></td></tr><tr><td align="left">_14 = core::slice::&lt;impl [u8]&gt;::len(move _15)</td></tr></table>>];
    bb5__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = Lt(move _14, const 8_usize)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb6__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = InstructionMissing<br/></td></tr><tr><td align="left">_17 = &lt;ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _18)</td></tr></table>>];
    bb7__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_0 = Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _17)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_12 = const ()<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_19)<br/>_19 = &amp;(*_1)<br/>StorageLive(_20)<br/>_20 = &amp;(*_2)<br/>StorageLive(_21)<br/>_21 = &amp;(*_3)<br/></td></tr><tr><td align="left">_0 = dispatch(move _19, move _20, move _21)</td></tr></table>>];
    bb9__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_11 -> bb1__0_11 [label="return"];
    bb1__0_11 -> bb4__0_11 [label="0"];
    bb1__0_11 -> bb2__0_11 [label="otherwise"];
    bb2__0_11 -> bb3__0_11 [label="return"];
    bb3__0_11 -> bb10__0_11 [label=""];
    bb4__0_11 -> bb5__0_11 [label="return"];
    bb5__0_11 -> bb8__0_11 [label="0"];
    bb5__0_11 -> bb6__0_11 [label="otherwise"];
    bb6__0_11 -> bb7__0_11 [label="return"];
    bb7__0_11 -> bb10__0_11 [label=""];
    bb8__0_11 -> bb9__0_11 [label="return"];
    bb9__0_11 -> bb10__0_11 [label=""];
}
