digraph Mir_0_3969 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SignedMsgUserOrdersZeroCopyMut::&lt;'a&gt;::check_exists_and_prune_stale_signed_msg_order_ids(_1: &amp;ReErased mut state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;, _2: state::signed_msg_user::SignedMsgOrderId, _3: u64) -&gt; bool<br align="left"/>let mut _4: bool;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::Range&lt;u32&gt;;<br align="left"/>let mut _7: std::ops::Range&lt;u32&gt;;<br align="left"/>let mut _8: u32;<br align="left"/>let mut _9: &amp;ReErased state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;;<br align="left"/>let mut _10: std::ops::Range&lt;u32&gt;;<br align="left"/>let mut _11: ();<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::ops::Range&lt;u32&gt;;<br align="left"/>let mut _15: &amp;ReErased mut std::ops::Range&lt;u32&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let mut _17: !;<br align="left"/>let _18: u32;<br align="left"/>let _19: &amp;ReErased mut state::signed_msg_user::SignedMsgOrderId;<br align="left"/>let mut _20: &amp;ReErased mut state::signed_msg_user::SignedMsgUserOrdersZeroCopyMut&lt;ReErased&gt;;<br align="left"/>let mut _21: u32;<br align="left"/>let mut _22: bool;<br align="left"/>let mut _23: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _24: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: u64;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: (u64, bool);<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: (u64, bool);<br align="left"/>let mut _34: u64;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug signed_msg_order_id =&gt; _2;<br align="left"/>debug current_slot =&gt; _3;<br align="left"/>debug uuid_exists =&gt; _4;<br align="left"/>debug iter =&gt; _10;<br align="left"/>debug i =&gt; _18;<br align="left"/>debug existing_signed_msg_order_id =&gt; _19;<br align="left"/>>;
    bb0__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_4 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/></td></tr><tr><td align="left">_8 = SignedMsgUserOrdersZeroCopyMut::&lt;'_&gt;::len(move _9)</td></tr></table>>];
    bb1__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_7 = std::ops::Range::&lt;u32&gt; { start: const 0_u32, end: move _8 }<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::ops::Range&lt;u32&gt; as IntoIterator&gt;::into_iter(move _7)</td></tr></table>>];
    bb2__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = move _6<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;mut _10<br/>_14 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::ops::Range&lt;u32&gt; as Iterator&gt;::next(move _14)</td></tr></table>>];
    bb4__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb5__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_13 as Some).0: u32)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;mut (*_1)<br/>StorageLive(_21)<br/>_21 = _18<br/></td></tr><tr><td align="left">_19 = SignedMsgUserOrdersZeroCopyMut::&lt;'_&gt;::get_mut(move _20, move _21)</td></tr></table>>];
    bb6__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_5 = const ()<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_0 = _4<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb8__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;((*_19).0: [u8; 8])<br/>StorageLive(_24)<br/>_24 = &amp;(_2.0: [u8; 8])<br/></td></tr><tr><td align="left">_22 = &lt;[u8; 8] as PartialEq&gt;::eq(move _23, move _24)</td></tr></table>>];
    bb9__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = ((*_19).1: u64)<br/>_28 = CheckedAdd(_27, const _)<br/></td></tr><tr><td align="left">assert(!move (_28.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _27, const _)</td></tr></table>>];
    bb11__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_26 = move (_28.0: u64)<br/>StorageDead(_27)<br/>StorageLive(_29)<br/>_29 = _3<br/>_25 = Ge(move _26, move _29)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_26)<br/>_4 = const true<br/>_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = ((*_19).1: u64)<br/>_33 = CheckedAdd(_32, const _)<br/></td></tr><tr><td align="left">assert(!move (_33.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _32, const _)</td></tr></table>>];
    bb16__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_31 = move (_33.0: u64)<br/>StorageDead(_32)<br/>StorageLive(_34)<br/>_34 = _3<br/>_30 = Lt(move _31, move _34)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb17__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_31)<br/>((*_19).0: [u8; 8]) = [const 0_u8; 8]<br/>((*_19).1: u64) = const 0_u64<br/>((*_19).2: u32) = const 0_u32<br/>_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_31)<br/>_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_3969 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>_11 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_3969 -> bb1__0_3969 [label="return"];
    bb1__0_3969 -> bb2__0_3969 [label="return"];
    bb2__0_3969 -> bb3__0_3969 [label=""];
    bb3__0_3969 -> bb4__0_3969 [label="return"];
    bb4__0_3969 -> bb7__0_3969 [label="0"];
    bb4__0_3969 -> bb5__0_3969 [label="1"];
    bb4__0_3969 -> bb6__0_3969 [label="otherwise"];
    bb5__0_3969 -> bb8__0_3969 [label="return"];
    bb8__0_3969 -> bb9__0_3969 [label="return"];
    bb9__0_3969 -> bb14__0_3969 [label="0"];
    bb9__0_3969 -> bb10__0_3969 [label="otherwise"];
    bb10__0_3969 -> bb11__0_3969 [label="success"];
    bb11__0_3969 -> bb13__0_3969 [label="0"];
    bb11__0_3969 -> bb12__0_3969 [label="otherwise"];
    bb12__0_3969 -> bb20__0_3969 [label=""];
    bb13__0_3969 -> bb15__0_3969 [label=""];
    bb14__0_3969 -> bb15__0_3969 [label=""];
    bb15__0_3969 -> bb16__0_3969 [label="success"];
    bb16__0_3969 -> bb18__0_3969 [label="0"];
    bb16__0_3969 -> bb17__0_3969 [label="otherwise"];
    bb17__0_3969 -> bb19__0_3969 [label=""];
    bb18__0_3969 -> bb19__0_3969 [label=""];
    bb19__0_3969 -> bb20__0_3969 [label=""];
    bb20__0_3969 -> bb3__0_3969 [label=""];
}
