digraph Mir_0_1439 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn load_maps(_1: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;, _2: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;, _3: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;, _4: u64, _5: std::option::Option&lt;state::state::OracleGuardRails&gt;) -&gt; std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;<br align="left"/>let _6: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle_map::OracleMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;state::oracle_map::OracleMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _10: u64;<br align="left"/>let mut _11: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let _17: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::spot_market_map::SpotMarketMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _19: std::result::Result&lt;state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _20: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _21: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _27: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::perp_market_map::PerpMarketMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _29: std::result::Result&lt;state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _30: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _31: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _37: ();<br align="left"/>let mut _38: std::collections::btree_set::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _39: std::collections::btree_set::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _40: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _41: std::collections::btree_set::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _42: ();<br align="left"/>let _43: ();<br align="left"/>let mut _44: std::option::Option&lt;&amp;ReErased u16&gt;;<br align="left"/>let mut _45: &amp;ReErased mut std::collections::btree_set::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _46: &amp;ReErased mut std::collections::btree_set::Iter&lt;ReErased, u16&gt;;<br align="left"/>let mut _47: isize;<br align="left"/>let mut _48: !;<br align="left"/>let _49: &amp;ReErased u16;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _52: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _53: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _54: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _55: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _56: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _58: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _59: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased u16;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _66: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let _67: &amp;ReErased state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _68: u64;<br align="left"/>let mut _69: isize;<br align="left"/>let _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _71: !;<br align="left"/>let mut _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _73: ();<br align="left"/>let mut _74: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _75: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _76: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _77: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: isize;<br align="left"/>let mut _85: isize;<br align="left"/>let mut _86: isize;<br align="left"/>let mut _87: isize;<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>debug account_info_iter =&gt; _1;<br align="left"/>debug writable_perp_markets =&gt; _2;<br align="left"/>debug writable_spot_markets =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug oracle_guard_rails =&gt; _5;<br align="left"/>debug oracle_map =&gt; _6;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug spot_market_map =&gt; _17;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug perp_market_map =&gt; _27;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug iter =&gt; _41;<br align="left"/>debug perp_market_index =&gt; _49;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _70;<br align="left"/>debug val =&gt; _73;<br align="left"/>>;
    bb0__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_78 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut (*_1)<br/>StorageLive(_10)<br/>_10 = _4<br/>StorageLive(_11)<br/>_11 = _5<br/></td></tr><tr><td align="left">_8 = OracleMap::&lt;'_&gt;::load(move _9, move _10, move _11)</td></tr></table>>];
    bb1__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_7 as Continue).0: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_6 = move _16<br/>StorageDead(_16)<br/>_81 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;(*_3)<br/>StorageLive(_21)<br/>_21 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_19 = SpotMarketMap::&lt;'_&gt;::load(move _20, move _21)</td></tr></table>>];
    bb4__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>_79 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;SpotMarketMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb8__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_22 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb9__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_18 as Continue).0: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>_17 = move _26<br/>StorageDead(_26)<br/>_85 = discriminant(_18)<br/>StorageDead(_18)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;(*_2)<br/>StorageLive(_31)<br/>_31 = &amp;mut (*_1)<br/></td></tr><tr><td align="left">_29 = PerpMarketMap::&lt;'_&gt;::load(move _30, move _31)</td></tr></table>>];
    bb10__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb11__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>_83 = discriminant(_18)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;PerpMarketMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb13__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_32 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb14__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_28 as Continue).0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>_27 = move _36<br/>StorageDead(_36)<br/>_89 = discriminant(_28)<br/>StorageDead(_28)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_2)<br/></td></tr><tr><td align="left">_39 = BTreeSet::&lt;u16&gt;::iter(move _40)</td></tr></table>>];
    bb15__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb16__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>_87 = discriminant(_28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::collections::btree_set::Iter&lt;'_, u16&gt; as IntoIterator&gt;::into_iter(move _39)</td></tr></table>>];
    bb18__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_41)<br/>_41 = move _38<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;mut _41<br/>_45 = &amp;mut (*_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::collections::btree_set::Iter&lt;'_, u16&gt; as Iterator&gt;::next(move _45)</td></tr></table>>];
    bb20__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_47 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb21__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_44 as Some).0: &amp;u16)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_27<br/>StorageLive(_60)<br/>_60 = &amp;(*_49)<br/></td></tr><tr><td align="left">_58 = PerpMarketMap::&lt;'_&gt;::get_ref(move _59, move _60)</td></tr></table>>];
    bb22__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_37 = const ()<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = move _27<br/>StorageLive(_76)<br/>_76 = move _17<br/>StorageLive(_77)<br/>_77 = move _6<br/>_74 = AccountMaps::&lt;'_&gt; { perp_market_map: move _75, spot_market_map: move _76, oracle_map: move _77 }<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>_0 = std::result::Result::&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt;::Ok(move _74)<br/>StorageDead(_74)<br/>StorageDead(_27)<br/>StorageDead(_17)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb24__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_78 = const true<br/>StorageDead(_58)<br/>_61 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb25__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_57 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_56 = move _65<br/>StorageDead(_65)<br/>_55 = &amp;_56<br/></td></tr><tr><td align="left">_54 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb26__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb27__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_53 = &amp;(*_54)<br/>StorageDead(_55)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = &amp;_6<br/>_66 = &amp;(*_67)<br/>StorageLive(_68)<br/>_68 = _4<br/></td></tr><tr><td align="left">_52 = instructions::optional_accounts::update_prelaunch_oracle(move _53, move _66, move _68)</td></tr></table>>];
    bb29__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb30__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_69 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb31__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_51 as Continue).0: ())<br/>_50 = _73<br/>StorageDead(_73)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb32__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_72)<br/>_72 = _70<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _72)</td></tr></table>>];
    bb33__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb34__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb35__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb36__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">return</td></tr></table>>];
    bb38__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb39__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">39 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb40__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">40 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb41__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">41 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb42__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">42 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb43__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_91 = discriminant(_57)<br/>_78 = const false<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>_43 = const ()<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>_42 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_93 = discriminant(_57)<br/>_78 = const false<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb45__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left" balign="left">_95 = discriminant(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">46 (cleanup)</td></tr><tr><td align="left" balign="left">_96 = discriminant(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left" balign="left">_97 = discriminant(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_1439 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_98 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1439 -> bb1__0_1439 [label="return"];
    bb1__0_1439 -> bb2__0_1439 [label="return"];
    bb1__0_1439 -> bb42__0_1439 [label="unwind"];
    bb2__0_1439 -> bb3__0_1439 [label="0"];
    bb2__0_1439 -> bb5__0_1439 [label="1"];
    bb2__0_1439 -> bb4__0_1439 [label="otherwise"];
    bb3__0_1439 -> bb7__0_1439 [label="return"];
    bb3__0_1439 -> bb41__0_1439 [label="unwind"];
    bb5__0_1439 -> bb6__0_1439 [label="return"];
    bb5__0_1439 -> bb48__0_1439 [label="unwind"];
    bb6__0_1439 -> bb36__0_1439 [label=""];
    bb7__0_1439 -> bb8__0_1439 [label="return"];
    bb7__0_1439 -> bb41__0_1439 [label="unwind"];
    bb8__0_1439 -> bb9__0_1439 [label="0"];
    bb8__0_1439 -> bb10__0_1439 [label="1"];
    bb8__0_1439 -> bb4__0_1439 [label="otherwise"];
    bb9__0_1439 -> bb12__0_1439 [label="return"];
    bb9__0_1439 -> bb40__0_1439 [label="unwind"];
    bb10__0_1439 -> bb11__0_1439 [label="return"];
    bb10__0_1439 -> bb47__0_1439 [label="unwind"];
    bb11__0_1439 -> bb35__0_1439 [label=""];
    bb12__0_1439 -> bb13__0_1439 [label="return"];
    bb12__0_1439 -> bb40__0_1439 [label="unwind"];
    bb13__0_1439 -> bb14__0_1439 [label="0"];
    bb13__0_1439 -> bb15__0_1439 [label="1"];
    bb13__0_1439 -> bb4__0_1439 [label="otherwise"];
    bb14__0_1439 -> bb17__0_1439 [label="return"];
    bb14__0_1439 -> bb39__0_1439 [label="unwind"];
    bb15__0_1439 -> bb16__0_1439 [label="return"];
    bb15__0_1439 -> bb46__0_1439 [label="unwind"];
    bb16__0_1439 -> bb34__0_1439 [label=""];
    bb17__0_1439 -> bb18__0_1439 [label="return"];
    bb17__0_1439 -> bb39__0_1439 [label="unwind"];
    bb18__0_1439 -> bb19__0_1439 [label=""];
    bb19__0_1439 -> bb20__0_1439 [label="return"];
    bb19__0_1439 -> bb39__0_1439 [label="unwind"];
    bb20__0_1439 -> bb22__0_1439 [label="0"];
    bb20__0_1439 -> bb21__0_1439 [label="1"];
    bb20__0_1439 -> bb4__0_1439 [label="otherwise"];
    bb21__0_1439 -> bb23__0_1439 [label="return"];
    bb21__0_1439 -> bb39__0_1439 [label="unwind"];
    bb22__0_1439 -> bb37__0_1439 [label=""];
    bb23__0_1439 -> bb24__0_1439 [label="return"];
    bb23__0_1439 -> bb39__0_1439 [label="unwind"];
    bb24__0_1439 -> bb25__0_1439 [label="0"];
    bb24__0_1439 -> bb26__0_1439 [label="1"];
    bb24__0_1439 -> bb4__0_1439 [label="otherwise"];
    bb25__0_1439 -> bb28__0_1439 [label="return"];
    bb25__0_1439 -> bb38__0_1439 [label="unwind"];
    bb26__0_1439 -> bb27__0_1439 [label="return"];
    bb26__0_1439 -> bb45__0_1439 [label="unwind"];
    bb27__0_1439 -> bb44__0_1439 [label=""];
    bb28__0_1439 -> bb29__0_1439 [label="return"];
    bb28__0_1439 -> bb38__0_1439 [label="unwind"];
    bb29__0_1439 -> bb30__0_1439 [label="return"];
    bb29__0_1439 -> bb38__0_1439 [label="unwind"];
    bb30__0_1439 -> bb31__0_1439 [label="0"];
    bb30__0_1439 -> bb32__0_1439 [label="1"];
    bb30__0_1439 -> bb4__0_1439 [label="otherwise"];
    bb31__0_1439 -> bb43__0_1439 [label="return"];
    bb31__0_1439 -> bb45__0_1439 [label="unwind"];
    bb32__0_1439 -> bb33__0_1439 [label="return"];
    bb32__0_1439 -> bb38__0_1439 [label="unwind"];
    bb33__0_1439 -> bb44__0_1439 [label="return"];
    bb33__0_1439 -> bb45__0_1439 [label="unwind"];
    bb34__0_1439 -> bb35__0_1439 [label="return"];
    bb34__0_1439 -> bb41__0_1439 [label="unwind"];
    bb35__0_1439 -> bb36__0_1439 [label="return"];
    bb35__0_1439 -> bb42__0_1439 [label="unwind"];
    bb36__0_1439 -> bb37__0_1439 [label=""];
    bb38__0_1439 -> bb45__0_1439 [label="return"];
    bb39__0_1439 -> bb40__0_1439 [label="return"];
    bb40__0_1439 -> bb41__0_1439 [label="return"];
    bb41__0_1439 -> bb42__0_1439 [label="return"];
    bb43__0_1439 -> bb19__0_1439 [label=""];
    bb44__0_1439 -> bb34__0_1439 [label="return"];
    bb44__0_1439 -> bb40__0_1439 [label="unwind"];
    bb45__0_1439 -> bb39__0_1439 [label=""];
    bb46__0_1439 -> bb40__0_1439 [label=""];
    bb47__0_1439 -> bb41__0_1439 [label=""];
    bb48__0_1439 -> bb42__0_1439 [label=""];
}
