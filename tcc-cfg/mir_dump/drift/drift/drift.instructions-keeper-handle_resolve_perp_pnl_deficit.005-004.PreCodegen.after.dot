digraph Mir_0_9295 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_resolve_perp_pnl_deficit(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;&gt;, _2: u16, _3: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: i64;<br align="left"/>let _23: ();<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _25: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: u16;<br align="left"/>let mut _28: ();<br align="left"/>let _29: error::ErrorCode;<br align="left"/>let _30: ();<br align="left"/>let mut _31: &amp;ReErased str;<br align="left"/>let _32: &amp;ReErased str;<br align="left"/>let mut _33: &amp;ReErased std::string::String;<br align="left"/>let _34: &amp;ReErased std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let _36: std::string::String;<br align="left"/>let mut _37: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _39: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _40: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _41: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _45: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _46: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _47: &amp;ReErased error::ErrorCode;<br align="left"/>let _48: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _49: error::ErrorCode;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: ();<br align="left"/>let _55: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _56: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _57: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _58: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _59: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _60: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _61: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _62: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _63: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _65: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _66: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _67: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _68: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _69: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _70: u16;<br align="left"/>let mut _71: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _72: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _73: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _74: u16;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _77: state::state::OracleGuardRails;<br align="left"/>let mut _78: &amp;ReErased state::state::State;<br align="left"/>let mut _79: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _85: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _87: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _88: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _94: i128;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _96: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _97: u16;<br align="left"/>let mut _98: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _99: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased state::state::State;<br align="left"/>let _103: &amp;ReErased state::state::State;<br align="left"/>let mut _104: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _105: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _106: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _107: isize;<br align="left"/>let _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _109: !;<br align="left"/>let mut _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _111: i128;<br align="left"/>let _112: ();<br align="left"/>let _113: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _114: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _116: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _117: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased u16;<br align="left"/>let _119: &amp;ReErased u16;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _125: ();<br align="left"/>let mut _126: bool;<br align="left"/>let mut _127: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _128: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _129: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _130: ();<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _132: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _133: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _134: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _135: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _136: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _137: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _138: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _139: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _140: i64;<br align="left"/>let mut _141: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _142: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _143: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _144: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _145: &amp;ReErased state::state::State;<br align="left"/>let _146: &amp;ReErased state::state::State;<br align="left"/>let mut _147: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _148: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _149: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _150: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _151: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _152: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _153: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _154: &amp;ReErased std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _155: isize;<br align="left"/>let _156: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _157: !;<br align="left"/>let mut _158: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _159: ();<br align="left"/>let _160: ();<br align="left"/>let mut _161: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _162: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _163: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _164: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _165: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _166: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _167: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _168: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _169: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _170: i64;<br align="left"/>let mut _171: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _172: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _173: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _174: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _175: &amp;ReErased state::state::State;<br align="left"/>let _176: &amp;ReErased state::state::State;<br align="left"/>let mut _177: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _178: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _179: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _180: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _185: ();<br align="left"/>let _186: ();<br align="left"/>let mut _187: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _188: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _189: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _190: isize;<br align="left"/>let _191: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _194: ();<br align="left"/>let _195: ();<br align="left"/>let mut _196: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _197: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _198: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _199: isize;<br align="left"/>let _200: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _201: !;<br align="left"/>let mut _202: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _203: ();<br align="left"/>let _204: i64;<br align="left"/>let mut _205: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _206: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _207: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _208: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _209: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _210: u64;<br align="left"/>let mut _211: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _212: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _213: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _215: isize;<br align="left"/>let _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _219: i64;<br align="left"/>let _220: u64;<br align="left"/>let mut _221: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _222: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _223: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _224: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _225: u64;<br align="left"/>let mut _226: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _227: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _228: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _229: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _230: u64;<br align="left"/>let _231: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _232: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _233: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _234: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _235: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _236: &amp;ReErased u16;<br align="left"/>let _237: &amp;ReErased u16;<br align="left"/>let mut _238: isize;<br align="left"/>let _239: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _240: !;<br align="left"/>let mut _241: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _242: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _243: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _244: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _245: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _246: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _247: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _248: &amp;ReErased u16;<br align="left"/>let _249: &amp;ReErased u16;<br align="left"/>let mut _250: isize;<br align="left"/>let _251: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _252: !;<br align="left"/>let mut _253: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _254: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _255: ();<br align="left"/>let mut _256: bool;<br align="left"/>let mut _257: u8;<br align="left"/>let mut _258: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _259: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _260: ();<br align="left"/>let mut _261: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _262: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _263: bool;<br align="left"/>let mut _264: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _265: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _266: ();<br align="left"/>let _267: error::ErrorCode;<br align="left"/>let _268: ();<br align="left"/>let mut _269: &amp;ReErased str;<br align="left"/>let _270: &amp;ReErased str;<br align="left"/>let mut _271: &amp;ReErased std::string::String;<br align="left"/>let _272: &amp;ReErased std::string::String;<br align="left"/>let _273: std::string::String;<br align="left"/>let _274: std::string::String;<br align="left"/>let mut _275: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _277: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _278: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _279: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _280: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _281: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _282: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _283: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _284: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _285: &amp;ReErased error::ErrorCode;<br align="left"/>let _286: &amp;ReErased error::ErrorCode;<br align="left"/>let _287: ();<br align="left"/>let mut _288: &amp;ReErased str;<br align="left"/>let _289: &amp;ReErased str;<br align="left"/>let mut _290: error::ErrorCode;<br align="left"/>let mut _291: isize;<br align="left"/>let _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _293: !;<br align="left"/>let mut _294: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _295: ();<br align="left"/>let _296: ();<br align="left"/>let mut _297: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _298: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _299: bool;<br align="left"/>let mut _300: u64;<br align="left"/>let mut _301: u64;<br align="left"/>let mut _302: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _303: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _304: ();<br align="left"/>let _305: error::ErrorCode;<br align="left"/>let _306: ();<br align="left"/>let mut _307: &amp;ReErased str;<br align="left"/>let _308: &amp;ReErased str;<br align="left"/>let mut _309: &amp;ReErased std::string::String;<br align="left"/>let _310: &amp;ReErased std::string::String;<br align="left"/>let _311: std::string::String;<br align="left"/>let _312: std::string::String;<br align="left"/>let mut _313: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _314: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _315: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _316: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _317: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _318: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _319: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _320: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _321: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _322: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _323: &amp;ReErased error::ErrorCode;<br align="left"/>let _324: &amp;ReErased error::ErrorCode;<br align="left"/>let _325: ();<br align="left"/>let mut _326: &amp;ReErased str;<br align="left"/>let _327: &amp;ReErased str;<br align="left"/>let mut _328: error::ErrorCode;<br align="left"/>let mut _329: isize;<br align="left"/>let _330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _331: !;<br align="left"/>let mut _332: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _333: ();<br align="left"/>let _334: ();<br align="left"/>let mut _335: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _336: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _337: bool;<br align="left"/>let mut _338: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _339: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _340: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _341: i64;<br align="left"/>let mut _342: ();<br align="left"/>let _343: error::ErrorCode;<br align="left"/>let _344: ();<br align="left"/>let mut _345: &amp;ReErased str;<br align="left"/>let _346: &amp;ReErased str;<br align="left"/>let mut _347: &amp;ReErased std::string::String;<br align="left"/>let _348: &amp;ReErased std::string::String;<br align="left"/>let _349: std::string::String;<br align="left"/>let _350: std::string::String;<br align="left"/>let mut _351: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _352: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _353: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _354: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _355: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _356: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _357: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _358: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _359: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _360: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _361: &amp;ReErased error::ErrorCode;<br align="left"/>let _362: &amp;ReErased error::ErrorCode;<br align="left"/>let _363: ();<br align="left"/>let mut _364: &amp;ReErased str;<br align="left"/>let _365: &amp;ReErased str;<br align="left"/>let mut _366: &amp;ReErased std::string::String;<br align="left"/>let _367: &amp;ReErased std::string::String;<br align="left"/>let _368: std::string::String;<br align="left"/>let _369: std::string::String;<br align="left"/>let mut _370: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _371: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _372: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _373: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _374: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _375: error::ErrorCode;<br align="left"/>let mut _376: isize;<br align="left"/>let _377: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _378: !;<br align="left"/>let mut _379: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _380: ();<br align="left"/>let _381: i64;<br align="left"/>let mut _382: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _383: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _384: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _385: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _386: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _387: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _388: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _389: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _390: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _391: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _392: isize;<br align="left"/>let _393: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _394: !;<br align="left"/>let mut _395: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _396: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _397: bool;<br align="left"/>let mut _398: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _399: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _400: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _401: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _402: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _403: &amp;ReErased state::state::State;<br align="left"/>let _404: &amp;ReErased state::state::State;<br align="left"/>let mut _405: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _406: i64;<br align="left"/>let mut _407: isize;<br align="left"/>let _408: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _409: !;<br align="left"/>let mut _410: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _411: bool;<br align="left"/>let mut _412: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _413: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _414: u64;<br align="left"/>let mut _415: u64;<br align="left"/>let mut _416: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _417: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _418: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _419: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _420: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _421: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _422: i64;<br align="left"/>let mut _423: isize;<br align="left"/>let _424: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _425: !;<br align="left"/>let mut _426: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _427: u64;<br align="left"/>let _428: ();<br align="left"/>let mut _429: bool;<br align="left"/>let mut _430: u64;<br align="left"/>let _431: ();<br align="left"/>let mut _432: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _433: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _434: bool;<br align="left"/>let mut _435: u64;<br align="left"/>let mut _436: u64;<br align="left"/>let mut _437: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _438: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _439: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _440: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _441: ();<br align="left"/>let _442: error::ErrorCode;<br align="left"/>let _443: ();<br align="left"/>let mut _444: &amp;ReErased str;<br align="left"/>let _445: &amp;ReErased str;<br align="left"/>let mut _446: &amp;ReErased std::string::String;<br align="left"/>let _447: &amp;ReErased std::string::String;<br align="left"/>let _448: std::string::String;<br align="left"/>let _449: std::string::String;<br align="left"/>let mut _450: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _451: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _452: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _453: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _454: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _455: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _456: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _457: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _458: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _459: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _460: &amp;ReErased error::ErrorCode;<br align="left"/>let _461: &amp;ReErased error::ErrorCode;<br align="left"/>let _462: ();<br align="left"/>let mut _463: &amp;ReErased str;<br align="left"/>let _464: &amp;ReErased str;<br align="left"/>let mut _465: &amp;ReErased std::string::String;<br align="left"/>let _466: &amp;ReErased std::string::String;<br align="left"/>let _467: std::string::String;<br align="left"/>let _468: std::string::String;<br align="left"/>let mut _469: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _470: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _471: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _472: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _473: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _474: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _475: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _476: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _477: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _478: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _479: &amp;ReErased u64;<br align="left"/>let _480: &amp;ReErased u64;<br align="left"/>let mut _481: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _482: &amp;ReErased u64;<br align="left"/>let _483: &amp;ReErased u64;<br align="left"/>let _484: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _485: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _486: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _487: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _488: error::ErrorCode;<br align="left"/>let mut _489: isize;<br align="left"/>let _490: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _491: !;<br align="left"/>let mut _492: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _493: ();<br align="left"/>let _494: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _495: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _496: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _497: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _498: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _499: &amp;ReErased u16;<br align="left"/>let _500: &amp;ReErased u16;<br align="left"/>let mut _501: isize;<br align="left"/>let _502: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _503: !;<br align="left"/>let mut _504: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _505: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _506: ();<br align="left"/>let mut _507: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _508: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _509: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _510: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _511: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _512: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _513: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _514: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _515: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _516: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _517: u8;<br align="left"/>let mut _518: &amp;ReErased state::state::State;<br align="left"/>let mut _519: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _520: u64;<br align="left"/>let mut _521: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _522: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _523: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _524: bool;<br align="left"/>let mut _525: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _526: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _527: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _528: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _529: isize;<br align="left"/>let _530: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _531: !;<br align="left"/>let mut _532: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _533: ();<br align="left"/>let _534: ();<br align="left"/>let mut _535: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _536: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _537: bool;<br align="left"/>let mut _538: u64;<br align="left"/>let mut _539: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _540: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _541: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _542: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _543: ();<br align="left"/>let _544: error::ErrorCode;<br align="left"/>let _545: ();<br align="left"/>let mut _546: &amp;ReErased str;<br align="left"/>let _547: &amp;ReErased str;<br align="left"/>let mut _548: &amp;ReErased std::string::String;<br align="left"/>let _549: &amp;ReErased std::string::String;<br align="left"/>let _550: std::string::String;<br align="left"/>let _551: std::string::String;<br align="left"/>let mut _552: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _553: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _554: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _555: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _556: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _557: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _558: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _559: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _560: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _561: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _562: &amp;ReErased error::ErrorCode;<br align="left"/>let _563: &amp;ReErased error::ErrorCode;<br align="left"/>let _564: ();<br align="left"/>let mut _565: &amp;ReErased str;<br align="left"/>let _566: &amp;ReErased str;<br align="left"/>let mut _567: error::ErrorCode;<br align="left"/>let mut _568: isize;<br align="left"/>let _569: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _570: !;<br align="left"/>let mut _571: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _572: ();<br align="left"/>let mut _573: ();<br align="left"/>let mut _574: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _575: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _576: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _577: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _578: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _579: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _580: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _581: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _582: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _583: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _584: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _585: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _586: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _587: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _588: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _589: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _590: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _591: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _592: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _593: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _594: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _595: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _596: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _597: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _598: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _599: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _600: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _601: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _602: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _603: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _604: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _605: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _606: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _607: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _608: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _609: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _610: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _611: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _612: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _613: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _614: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _615: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _616: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _617: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _618: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _619: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _620: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _621: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _622: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _623: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _624: &amp;ReErased mut instructions::keeper::ResolvePerpPnlDeficit&lt;ReErased&gt;;<br align="left"/>let mut _625: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _626: isize;<br align="left"/>let mut _627: isize;<br align="left"/>let mut _628: isize;<br align="left"/>let mut _629: isize;<br align="left"/>let mut _630: isize;<br align="left"/>let mut _631: isize;<br align="left"/>let mut _632: isize;<br align="left"/>let mut _633: isize;<br align="left"/>let mut _634: isize;<br align="left"/>let mut _635: isize;<br align="left"/>let mut _636: isize;<br align="left"/>let mut _637: isize;<br align="left"/>let mut _638: isize;<br align="left"/>let mut _639: isize;<br align="left"/>let mut _640: isize;<br align="left"/>let mut _641: isize;<br align="left"/>let mut _642: isize;<br align="left"/>let mut _643: isize;<br align="left"/>let mut _644: isize;<br align="left"/>let mut _645: isize;<br align="left"/>let mut _646: isize;<br align="left"/>let mut _647: isize;<br align="left"/>let mut _648: isize;<br align="left"/>let mut _649: isize;<br align="left"/>let mut _650: isize;<br align="left"/>let mut _651: isize;<br align="left"/>let mut _652: isize;<br align="left"/>let mut _653: isize;<br align="left"/>let mut _654: isize;<br align="left"/>let mut _655: isize;<br align="left"/>let mut _656: isize;<br align="left"/>let mut _657: isize;<br align="left"/>let mut _658: isize;<br align="left"/>let mut _659: isize;<br align="left"/>let mut _660: isize;<br align="left"/>let mut _661: isize;<br align="left"/>let mut _662: isize;<br align="left"/>let mut _663: isize;<br align="left"/>let mut _664: isize;<br align="left"/>let mut _665: isize;<br align="left"/>let mut _666: isize;<br align="left"/>let mut _667: isize;<br align="left"/>let mut _668: isize;<br align="left"/>let mut _669: isize;<br align="left"/>let mut _670: isize;<br align="left"/>let mut _671: isize;<br align="left"/>let mut _672: isize;<br align="left"/>let mut _673: isize;<br align="left"/>let mut _674: isize;<br align="left"/>let mut _675: isize;<br align="left"/>let mut _676: isize;<br align="left"/>let mut _677: isize;<br align="left"/>let mut _678: isize;<br align="left"/>let mut _679: isize;<br align="left"/>let mut _680: isize;<br align="left"/>let mut _681: isize;<br align="left"/>let mut _682: isize;<br align="left"/>let mut _683: isize;<br align="left"/>let mut _684: isize;<br align="left"/>let mut _685: isize;<br align="left"/>let mut _686: isize;<br align="left"/>let mut _687: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _688: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _689: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _690: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _691: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _692: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _693: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _694: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _695: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _696: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _697: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _698: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _699: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _700: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _701: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _702: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _703: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _704: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _705: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _706: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _707: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug spot_market_index =&gt; _2;<br align="left"/>debug perp_market_index =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug clock =&gt; _14;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug now =&gt; _22;<br align="left"/>debug error_code =&gt; _29;<br align="left"/>debug res =&gt; _36;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug state =&gt; _55;<br align="left"/>debug remaining_accounts_iter =&gt; _56;<br align="left"/>debug perp_market_map =&gt; _60;<br align="left"/>debug spot_market_map =&gt; _61;<br align="left"/>debug oracle_map =&gt; _62;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug mint =&gt; _85;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _108;<br align="left"/>debug val =&gt; _111;<br align="left"/>debug spot_market =&gt; _113;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug residual =&gt; _156;<br align="left"/>debug val =&gt; _159;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug residual =&gt; _191;<br align="left"/>debug val =&gt; _194;<br align="left"/>debug residual =&gt; _200;<br align="left"/>debug val =&gt; _203;<br align="left"/>debug residual =&gt; _216;<br align="left"/>debug val =&gt; _219;<br align="left"/>debug insurance_vault_amount =&gt; _220;<br align="left"/>debug spot_market_vault_amount =&gt; _225;<br align="left"/>debug pay_from_insurance =&gt; _230;<br align="left"/>debug spot_market =&gt; _231;<br align="left"/>debug residual =&gt; _239;<br align="left"/>debug val =&gt; _242;<br align="left"/>debug perp_market =&gt; _243;<br align="left"/>debug residual =&gt; _251;<br align="left"/>debug val =&gt; _254;<br align="left"/>debug error_code =&gt; _267;<br align="left"/>debug res =&gt; _274;<br align="left"/>debug residual =&gt; _292;<br align="left"/>debug val =&gt; _295;<br align="left"/>debug error_code =&gt; _305;<br align="left"/>debug res =&gt; _312;<br align="left"/>debug residual =&gt; _330;<br align="left"/>debug val =&gt; _333;<br align="left"/>debug error_code =&gt; _343;<br align="left"/>debug res =&gt; _350;<br align="left"/>debug res =&gt; _369;<br align="left"/>debug residual =&gt; _377;<br align="left"/>debug val =&gt; _380;<br align="left"/>debug oracle_price =&gt; _381;<br align="left"/>debug residual =&gt; _393;<br align="left"/>debug val =&gt; _396;<br align="left"/>debug residual =&gt; _408;<br align="left"/>debug val =&gt; _411;<br align="left"/>debug residual =&gt; _424;<br align="left"/>debug val =&gt; _427;<br align="left"/>debug error_code =&gt; _442;<br align="left"/>debug res =&gt; _449;<br align="left"/>debug res =&gt; _468;<br align="left"/>debug residual =&gt; _490;<br align="left"/>debug val =&gt; _493;<br align="left"/>debug spot_market =&gt; _494;<br align="left"/>debug residual =&gt; _502;<br align="left"/>debug val =&gt; _505;<br align="left"/>debug residual =&gt; _530;<br align="left"/>debug val =&gt; _533;<br align="left"/>debug error_code =&gt; _544;<br align="left"/>debug res =&gt; _551;<br align="left"/>debug residual =&gt; _569;<br align="left"/>debug val =&gt; _572;<br align="left"/>>;
    bb0__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_582 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_8 = &amp;((*_582).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_583 = deref_copy (*_8)<br/>_687 = (((_583.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_7 = &amp;(*_687)<br/></td></tr><tr><td align="left">_6 = constraints::withdraw_not_paused(move _7)</td></tr></table>>];
    bb1__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_626 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_672 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_628 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_22 = (_14.4: i64)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = _2<br/>_26 = Eq(move _27, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb10__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_670 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_28)<br/>_28 = ()<br/>_25 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _28)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_29)<br/>_29 = error::ErrorCode::InvalidSpotMarketAccount<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_581 = const _<br/>_40 = &amp;(*_581)<br/>_39 = &amp;(*_40)<br/>_38 = move _39 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;_29<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _47)</td></tr></table>>];
    bb14__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_45 = [move _46]<br/>StorageDead(_46)<br/>_44 = &amp;_45<br/>_43 = &amp;(*_44)<br/>_42 = move _43 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_37 = Arguments::&lt;'_&gt;::new_v1(move _38, move _42)</td></tr></table>>];
    bb15__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = format(move _37)</td></tr></table>>];
    bb16__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_40)<br/>_35 = move _36<br/>StorageDead(_36)<br/>_34 = &amp;_35<br/>_33 = &amp;(*_34)<br/></td></tr><tr><td align="left">_32 = &lt;String as Deref&gt;::deref(move _33)</td></tr></table>>];
    bb17__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_31 = &amp;(*_32)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_30 = solana_program::log::sol_log(move _31)</td></tr></table>>];
    bb18__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb19__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageLive(_49)<br/>_49 = _29<br/>_25 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _49)<br/>StorageDead(_49)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb21__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_50 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb22__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_24 as Continue).0: ())<br/>_23 = _54<br/>StorageDead(_54)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageLive(_55)<br/>_584 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_55 = &amp;((*_584).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_585 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_59 = &amp;(*_585)<br/></td></tr><tr><td align="left">_58 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _59)</td></tr></table>>];
    bb23__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb24__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _58)</td></tr></table>>];
    bb26__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = &amp;mut _57<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;mut (*_56)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _3<br/></td></tr><tr><td align="left">_69 = get_writable_perp_market_set(move _70)</td></tr></table>>];
    bb27__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_68 = &amp;_69<br/>_67 = &amp;(*_68)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = _2<br/></td></tr><tr><td align="left">_73 = get_writable_spot_market_set(move _74)</td></tr></table>>];
    bb28__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/>StorageLive(_75)<br/>_75 = (_14.0: u64)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_586 = deref_copy (*_55)<br/>_688 = (((_586.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_79 = &amp;(*_688)<br/></td></tr><tr><td align="left">_78 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _79)</td></tr></table>>];
    bb29__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = ((*_78).7: state::state::OracleGuardRails)<br/>_76 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _77)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_65 = load_maps(move _66, move _67, move _71, move _75, move _76)</td></tr></table>>];
    bb30__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb31__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_80 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb32__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = move ((_64 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_63 = move _84<br/>StorageDead(_84)<br/>StorageLive(_60)<br/>_60 = move (_63.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_61)<br/>_61 = move (_63.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_62)<br/>_62 = move (_63.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_632 = discriminant(_64)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb33__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb34__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>_630 = discriminant(_64)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb35__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb36__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_56)<br/></td></tr><tr><td align="left">_87 = get_token_mint(move _88)</td></tr></table>>];
    bb37__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb38__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_89 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb39__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = move ((_86 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_85 = move _93<br/>StorageDead(_93)<br/>StorageDead(_86)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = _3<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;_60<br/>_98 = &amp;(*_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;mut _62<br/>_100 = &amp;mut (*_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_587 = deref_copy (*_55)<br/>_689 = (((_587.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_104 = &amp;(*_689)<br/></td></tr><tr><td align="left">_103 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _104)</td></tr></table>>];
    bb40__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb41__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_102 = &amp;(*_103)<br/>StorageDead(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = &amp;_14<br/>_105 = &amp;(*_106)<br/></td></tr><tr><td align="left">_96 = update_amm(move _97, move _98, move _100, move _102, move _105)</td></tr></table>>];
    bb43__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb44__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_107 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb45__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_95 as Continue).0: i128)<br/>_94 = _111<br/>StorageDead(_111)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_61<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;_2<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_116 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _117, move _118)</td></tr></table>>];
    bb46__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_110)<br/>_110 = _108<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _110)</td></tr></table>>];
    bb47__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb49__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_120 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb50__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = move ((_115 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_114 = move _124<br/>StorageDead(_124)<br/>_113 = &amp;mut _114<br/>_636 = discriminant(_115)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(*_113)<br/></td></tr><tr><td align="left">_128 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _129)</td></tr></table>>];
    bb51__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb52__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>_634 = discriminant(_115)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_127 = &amp;(*_128)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_126 = SpotMarket::has_transfer_hook(move _127)</td></tr></table>>];
    bb54__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb55__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_588 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_134 = &amp;((*_588).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_589 = deref_copy (*_134)<br/>_690 = (((_589.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_133 = &amp;(*_690)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_590 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_136 = &amp;((*_590).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_591 = deref_copy (*_136)<br/>_691 = (((_591.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_135 = &amp;(*_691)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;mut (*_113)<br/></td></tr><tr><td align="left">_138 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _139)</td></tr></table>>];
    bb56__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_137 = &amp;mut (*_138)<br/>StorageDead(_139)<br/>StorageLive(_140)<br/>_140 = _22<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_592 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_142 = &amp;((*_592).5: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_141 = &amp;(*_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_593 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_144 = &amp;((*_593).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_143 = &amp;(*_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_594 = deref_copy (*_55)<br/>_692 = (((_594.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_147 = &amp;(*_692)<br/></td></tr><tr><td align="left">_146 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _147)</td></tr></table>>];
    bb57__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_145 = &amp;(*_146)<br/>StorageDead(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_85<br/>_148 = &amp;(*_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = &amp;(*_56)<br/></td></tr><tr><td align="left">_153 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Clone&gt;::clone(move _154)</td></tr></table>>];
    bb58__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>_152 = &amp;mut _153<br/>_151 = &amp;mut (*_152)<br/>_150 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _151)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">_132 = attempt_settle_revenue_to_insurance_fund(move _133, move _135, move _137, move _140, move _141, move _143, move _145, move _148, move _150)</td></tr></table>>];
    bb59__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb60__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_155 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb61__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_131 as Continue).0: ())<br/>_130 = _159<br/>StorageDead(_159)<br/>_638 = discriminant(_131)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>_125 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = move ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_158)<br/>_158 = move _156<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _158)</td></tr></table>>];
    bb63__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_156)<br/>_668 = discriminant(_131)<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_595 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_164 = &amp;((*_595).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_596 = deref_copy (*_164)<br/>_693 = (((_596.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_163 = &amp;(*_693)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_597 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_166 = &amp;((*_597).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_598 = deref_copy (*_166)<br/>_694 = (((_598.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_165 = &amp;(*_694)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;mut (*_113)<br/></td></tr><tr><td align="left">_168 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _169)</td></tr></table>>];
    bb65__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">_167 = &amp;mut (*_168)<br/>StorageDead(_169)<br/>StorageLive(_170)<br/>_170 = _22<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_599 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_172 = &amp;((*_599).5: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_171 = &amp;(*_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_600 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_174 = &amp;((*_600).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_173 = &amp;(*_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_601 = deref_copy (*_55)<br/>_695 = (((_601.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_177 = &amp;(*_695)<br/></td></tr><tr><td align="left">_176 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _177)</td></tr></table>>];
    bb66__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_175 = &amp;(*_176)<br/>StorageDead(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = &amp;_85<br/>_178 = &amp;(*_179)<br/>StorageLive(_180)<br/>_180 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">_162 = attempt_settle_revenue_to_insurance_fund(move _163, move _165, move _167, move _170, move _171, move _173, move _175, move _178, move _180)</td></tr></table>>];
    bb67__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _162)</td></tr></table>>];
    bb68__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_181 = discriminant(_161)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb69__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_161 as Continue).0: ())<br/>_160 = _185<br/>StorageDead(_185)<br/>_640 = discriminant(_161)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>_125 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = move ((_161 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_184)<br/>_184 = move _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb71__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>_666 = discriminant(_161)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_602 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_603 = deref_copy ((*_602).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_696 = (((_603.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_189 = &amp;mut (*_696)<br/></td></tr><tr><td align="left">_188 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _189)</td></tr></table>>];
    bb73__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _188)</td></tr></table>>];
    bb74__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_190 = discriminant(_187)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb75__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = ((_187 as Continue).0: ())<br/>_186 = _194<br/>StorageDead(_194)<br/>_642 = discriminant(_187)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_604 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_605 = deref_copy ((*_604).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_697 = (((_605.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_198 = &amp;mut (*_697)<br/></td></tr><tr><td align="left">_197 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _198)</td></tr></table>>];
    bb76__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = move ((_187 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_193)<br/>_193 = move _191<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _193)</td></tr></table>>];
    bb77__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>_664 = discriminant(_187)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _197)</td></tr></table>>];
    bb79__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>_199 = discriminant(_196)<br/></td></tr><tr><td align="left">switchInt(move _199)</td></tr></table>>];
    bb80__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_196 as Continue).0: ())<br/>_195 = _203<br/>StorageDead(_203)<br/>_644 = discriminant(_196)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;(*_113)<br/></td></tr><tr><td align="left">_208 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _209)</td></tr></table>>];
    bb81__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = move ((_196 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_202)<br/>_202 = move _200<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _202)</td></tr></table>>];
    bb82__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/>_662 = discriminant(_196)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">_207 = &amp;(*_208)<br/>StorageDead(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_606 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_607 = deref_copy ((*_606).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_698 = (((_607.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_214 = &amp;(*_698)<br/></td></tr><tr><td align="left">_213 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _214)</td></tr></table>>];
    bb84__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_211 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _212)</td></tr></table>>];
    bb85__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_212)<br/>_210 = ((*_211).2: u64)<br/></td></tr><tr><td align="left">_206 = validate_spot_market_vault_amount(move _207, move _210)</td></tr></table>>];
    bb86__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_205 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _206)</td></tr></table>>];
    bb87__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_215 = discriminant(_205)<br/></td></tr><tr><td align="left">switchInt(move _215)</td></tr></table>>];
    bb88__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_205 as Continue).0: i64)<br/>_204 = _219<br/>StorageDead(_219)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>_112 = const ()<br/></td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb89__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = ((_205 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_218)<br/>_218 = _216<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _218)</td></tr></table>>];
    bb90__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_608 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_609 = deref_copy ((*_608).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_699 = (((_609.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_224 = &amp;(*_699)<br/></td></tr><tr><td align="left">_223 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _224)</td></tr></table>>];
    bb92__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_222 = &amp;(*_223)<br/></td></tr><tr><td align="left">_221 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _222)</td></tr></table>>];
    bb93__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_222)<br/>_220 = ((*_221).2: u64)<br/>StorageDead(_223)<br/>StorageDead(_221)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>_610 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_611 = deref_copy ((*_610).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_700 = (((_611.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_229 = &amp;(*_700)<br/></td></tr><tr><td align="left">_228 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _229)</td></tr></table>>];
    bb94__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_226 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _227)</td></tr></table>>];
    bb95__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_227)<br/>_225 = ((*_226).2: u64)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_235 = &amp;_61<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;_2<br/>_236 = &amp;(*_237)<br/></td></tr><tr><td align="left">_234 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _235, move _236)</td></tr></table>>];
    bb96__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">_233 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _234)</td></tr></table>>];
    bb97__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>_238 = discriminant(_233)<br/></td></tr><tr><td align="left">switchInt(move _238)</td></tr></table>>];
    bb98__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_242)<br/>_242 = move ((_233 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_232 = move _242<br/>StorageDead(_242)<br/>_231 = &amp;mut _232<br/>_648 = discriminant(_233)<br/>StorageDead(_237)<br/>StorageDead(_233)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;_60<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_249 = &amp;_3<br/>_248 = &amp;(*_249)<br/></td></tr><tr><td align="left">_246 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _247, move _248)</td></tr></table>>];
    bb99__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_239)<br/>_239 = ((_233 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_241)<br/>_241 = _239<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _241)</td></tr></table>>];
    bb100__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_239)<br/>_646 = discriminant(_233)<br/>StorageDead(_237)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_245 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _246)</td></tr></table>>];
    bb102__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_250 = discriminant(_245)<br/></td></tr><tr><td align="left">switchInt(move _250)</td></tr></table>>];
    bb103__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_254)<br/>_254 = move ((_245 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_244 = move _254<br/>StorageDead(_254)<br/>_243 = &amp;mut _244<br/>_652 = discriminant(_245)<br/>StorageDead(_249)<br/>StorageDead(_245)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_259 = &amp;(*_243)<br/></td></tr><tr><td align="left">_258 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _259)</td></tr></table>>];
    bb104__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_251)<br/>_251 = ((_245 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_253)<br/>_253 = _251<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _253)</td></tr></table>>];
    bb105__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_251)<br/>_650 = discriminant(_245)<br/>StorageDead(_249)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>_257 = (((*_258).1: state::perp_market::AMM).70: u8)<br/>_256 = Gt(move _257, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _256)</td></tr></table>>];
    bb107__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_257)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;(*_243)<br/></td></tr><tr><td align="left">_264 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _265)</td></tr></table>>];
    bb108__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>_263 = (((*_264).1: state::perp_market::AMM).73: bool)<br/></td></tr><tr><td align="left">switchInt(move _263)</td></tr></table>>];
    bb109__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageLive(_266)<br/>_266 = ()<br/>_262 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _266)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageLive(_267)<br/>_267 = error::ErrorCode::InvalidOracle<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_580 = const _<br/>_278 = &amp;(*_580)<br/>_277 = &amp;(*_278)<br/>_276 = move _277 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_277)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_267<br/>_285 = &amp;(*_286)<br/></td></tr><tr><td align="left">_284 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _285)</td></tr></table>>];
    bb111__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>_283 = [move _284]<br/>StorageDead(_284)<br/>_282 = &amp;_283<br/>_281 = &amp;(*_282)<br/>_280 = move _281 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">_275 = Arguments::&lt;'_&gt;::new_v1(move _276, move _280)</td></tr></table>>];
    bb112__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">_274 = format(move _275)</td></tr></table>>];
    bb113__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_286)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_278)<br/>_273 = move _274<br/>StorageDead(_274)<br/>_272 = &amp;_273<br/>_271 = &amp;(*_272)<br/></td></tr><tr><td align="left">_270 = &lt;String as Deref&gt;::deref(move _271)</td></tr></table>>];
    bb114__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_269 = &amp;(*_270)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">_268 = solana_program::log::sol_log(move _269)</td></tr></table>>];
    bb115__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/></td></tr><tr><td align="left">drop(_273)</td></tr></table>>];
    bb116__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageDead(_268)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = const &quot;Oracle Price detected as invalid&quot;<br/>_288 = &amp;(*_289)<br/></td></tr><tr><td align="left">_287 = solana_program::log::sol_log(move _288)</td></tr></table>>];
    bb117__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_289)<br/>StorageDead(_287)<br/>StorageLive(_290)<br/>_290 = _267<br/>_262 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _290)<br/>StorageDead(_290)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/></td></tr><tr><td align="left">_261 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _262)</td></tr></table>>];
    bb119__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>_291 = discriminant(_261)<br/></td></tr><tr><td align="left">switchInt(move _291)</td></tr></table>>];
    bb120__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_295)<br/>_295 = ((_261 as Continue).0: ())<br/>_260 = _295<br/>StorageDead(_295)<br/>StorageDead(_261)<br/>StorageDead(_260)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_300 = (_62.3: u64)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>_303 = &amp;(*_243)<br/></td></tr><tr><td align="left">_302 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _303)</td></tr></table>>];
    bb121__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_261 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_294)<br/>_294 = _292<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _294)</td></tr></table>>];
    bb122__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_261)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>_301 = (((*_302).1: state::perp_market::AMM).47: u64)<br/>_299 = Eq(move _300, move _301)<br/></td></tr><tr><td align="left">switchInt(move _299)</td></tr></table>>];
    bb124__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/>StorageLive(_304)<br/>_304 = ()<br/>_298 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _304)<br/>StorageDead(_304)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_300)<br/>StorageLive(_305)<br/>_305 = error::ErrorCode::AMMNotUpdatedInSameSlot<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_579 = const _<br/>_316 = &amp;(*_579)<br/>_315 = &amp;(*_316)<br/>_314 = move _315 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_315)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>_324 = &amp;_305<br/>_323 = &amp;(*_324)<br/></td></tr><tr><td align="left">_322 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _323)</td></tr></table>>];
    bb126__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>_321 = [move _322]<br/>StorageDead(_322)<br/>_320 = &amp;_321<br/>_319 = &amp;(*_320)<br/>_318 = move _319 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">_313 = Arguments::&lt;'_&gt;::new_v1(move _314, move _318)</td></tr></table>>];
    bb127__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">_312 = format(move _313)</td></tr></table>>];
    bb128__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_324)<br/>StorageDead(_321)<br/>StorageDead(_320)<br/>StorageDead(_316)<br/>_311 = move _312<br/>StorageDead(_312)<br/>_310 = &amp;_311<br/>_309 = &amp;(*_310)<br/></td></tr><tr><td align="left">_308 = &lt;String as Deref&gt;::deref(move _309)</td></tr></table>>];
    bb129__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_307 = &amp;(*_308)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">_306 = solana_program::log::sol_log(move _307)</td></tr></table>>];
    bb130__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/></td></tr><tr><td align="left">drop(_311)</td></tr></table>>];
    bb131__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageDead(_310)<br/>StorageDead(_308)<br/>StorageDead(_306)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>_327 = const &quot;AMM must be updated in a prior instruction within same slot&quot;<br/>_326 = &amp;(*_327)<br/></td></tr><tr><td align="left">_325 = solana_program::log::sol_log(move _326)</td></tr></table>>];
    bb132__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_327)<br/>StorageDead(_325)<br/>StorageLive(_328)<br/>_328 = _305<br/>_298 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _328)<br/>StorageDead(_328)<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/></td></tr><tr><td align="left">_297 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _298)</td></tr></table>>];
    bb134__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>_329 = discriminant(_297)<br/></td></tr><tr><td align="left">switchInt(move _329)</td></tr></table>>];
    bb135__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_333)<br/>_333 = ((_297 as Continue).0: ())<br/>_296 = _333<br/>StorageDead(_333)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>_255 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_330)<br/>_330 = ((_297 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_332)<br/>_332 = _330<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _332)</td></tr></table>>];
    bb137__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_330)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_257)<br/>_255 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_255)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_340 = &amp;(*_243)<br/></td></tr><tr><td align="left">_339 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _340)</td></tr></table>>];
    bb140__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">_338 = &amp;(*_339)<br/>StorageDead(_340)<br/>StorageLive(_341)<br/>_341 = _22<br/></td></tr><tr><td align="left">_337 = PerpMarket::is_in_settlement(move _338, move _341)</td></tr></table>>];
    bb141__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left">switchInt(move _337)</td></tr></table>>];
    bb142__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageDead(_338)<br/>StorageDead(_339)<br/>StorageLive(_343)<br/>_343 = error::ErrorCode::MarketActionPaused<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>_578 = const _<br/>_354 = &amp;(*_578)<br/>_353 = &amp;(*_354)<br/>_352 = move _353 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_353)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;_343<br/>_361 = &amp;(*_362)<br/></td></tr><tr><td align="left">_360 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _361)</td></tr></table>>];
    bb143__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageDead(_338)<br/>StorageDead(_339)<br/>StorageLive(_342)<br/>_342 = ()<br/>_336 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _342)<br/>StorageDead(_342)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>_359 = [move _360]<br/>StorageDead(_360)<br/>_358 = &amp;_359<br/>_357 = &amp;(*_358)<br/>_356 = move _357 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_357)<br/></td></tr><tr><td align="left">_351 = Arguments::&lt;'_&gt;::new_v1(move _352, move _356)</td></tr></table>>];
    bb145__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">_350 = format(move _351)</td></tr></table>>];
    bb146__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_362)<br/>StorageDead(_359)<br/>StorageDead(_358)<br/>StorageDead(_354)<br/>_349 = move _350<br/>StorageDead(_350)<br/>_348 = &amp;_349<br/>_347 = &amp;(*_348)<br/></td></tr><tr><td align="left">_346 = &lt;String as Deref&gt;::deref(move _347)</td></tr></table>>];
    bb147__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_345 = &amp;(*_346)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">_344 = solana_program::log::sol_log(move _345)</td></tr></table>>];
    bb148__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/></td></tr><tr><td align="left">drop(_349)</td></tr></table>>];
    bb149__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_344)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>_577 = const _<br/>_373 = &amp;(*_577)<br/>_372 = &amp;(*_373)<br/>_371 = move _372 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_372)<br/></td></tr><tr><td align="left">_370 = Arguments::&lt;'_&gt;::new_const(move _371)</td></tr></table>>];
    bb150__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/></td></tr><tr><td align="left">_369 = format(move _370)</td></tr></table>>];
    bb151__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>StorageDead(_373)<br/>_368 = move _369<br/>StorageDead(_369)<br/>_367 = &amp;_368<br/>_366 = &amp;(*_367)<br/></td></tr><tr><td align="left">_365 = &lt;String as Deref&gt;::deref(move _366)</td></tr></table>>];
    bb152__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">_364 = &amp;(*_365)<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">_363 = solana_program::log::sol_log(move _364)</td></tr></table>>];
    bb153__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/></td></tr><tr><td align="left">drop(_368)</td></tr></table>>];
    bb154__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageLive(_375)<br/>_375 = _343<br/>_336 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _375)<br/>StorageDead(_375)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/></td></tr><tr><td align="left">_335 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _336)</td></tr></table>>];
    bb156__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>_376 = discriminant(_335)<br/></td></tr><tr><td align="left">switchInt(move _376)</td></tr></table>>];
    bb157__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_380)<br/>_380 = ((_335 as Continue).0: ())<br/>_334 = _380<br/>StorageDead(_380)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>_385 = &amp;mut _62<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = &amp;(*_243)<br/></td></tr><tr><td align="left">_390 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _391)</td></tr></table>>];
    bb158__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_377)<br/>_377 = ((_335 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_379)<br/>_379 = _377<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _379)</td></tr></table>>];
    bb159__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_335)<br/>StorageDead(_334)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">_389 = &amp;(*_390)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">_388 = PerpMarket::oracle_id(move _389)</td></tr></table>>];
    bb161__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>_387 = &amp;_388<br/>_386 = &amp;(*_387)<br/></td></tr><tr><td align="left">_384 = OracleMap::&lt;'_&gt;::get_price_data(move _385, move _386)</td></tr></table>>];
    bb162__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_385)<br/></td></tr><tr><td align="left">_383 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _384)</td></tr></table>>];
    bb163__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>_392 = discriminant(_383)<br/></td></tr><tr><td align="left">switchInt(move _392)</td></tr></table>>];
    bb164__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>_396 = ((_383 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_382 = _396<br/>StorageDead(_396)<br/>_381 = ((*_382).0: i64)<br/>StorageDead(_390)<br/>StorageDead(_388)<br/>StorageDead(_387)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>_402 = &amp;(*_243)<br/></td></tr><tr><td align="left">_401 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _402)</td></tr></table>>];
    bb165__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_393)<br/>_393 = ((_383 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_395)<br/>_395 = _393<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _395)</td></tr></table>>];
    bb166__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_390)<br/>StorageDead(_388)<br/>StorageDead(_387)<br/>StorageDead(_383)<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_400 = &amp;(*_401)<br/>StorageDead(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>_612 = deref_copy (*_55)<br/>_701 = (((_612.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_405 = &amp;(*_701)<br/></td></tr><tr><td align="left">_404 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _405)</td></tr></table>>];
    bb168__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">_403 = &amp;(*_404)<br/>StorageDead(_405)<br/>StorageLive(_406)<br/>_406 = _381<br/></td></tr><tr><td align="left">_399 = validate_market_within_price_band(move _400, move _403, move _406)</td></tr></table>>];
    bb169__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/>StorageDead(_403)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">_398 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _399)</td></tr></table>>];
    bb170__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>_407 = discriminant(_398)<br/></td></tr><tr><td align="left">switchInt(move _407)</td></tr></table>>];
    bb171__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_411)<br/>_411 = ((_398 as Continue).0: bool)<br/>_397 = _411<br/>StorageDead(_411)<br/>StorageDead(_404)<br/>StorageDead(_401)<br/>StorageDead(_398)<br/>StorageDead(_397)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = _225<br/>StorageLive(_415)<br/>_415 = _220<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_418 = &amp;mut (*_231)<br/></td></tr><tr><td align="left">_417 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _418)</td></tr></table>>];
    bb172__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_408)<br/>_408 = ((_398 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_410)<br/>_410 = _408<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _410)</td></tr></table>>];
    bb173__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_408)<br/>StorageDead(_404)<br/>StorageDead(_401)<br/>StorageDead(_398)<br/>StorageDead(_397)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">_416 = &amp;mut (*_417)<br/>StorageDead(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>_421 = &amp;mut (*_243)<br/></td></tr><tr><td align="left">_420 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _421)</td></tr></table>>];
    bb175__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">_419 = &amp;mut (*_420)<br/>StorageDead(_421)<br/>StorageLive(_422)<br/>_422 = (_14.4: i64)<br/></td></tr><tr><td align="left">_413 = controller::insurance::resolve_perp_pnl_deficit(move _414, move _415, move _416, move _419, move _422)</td></tr></table>>];
    bb176__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>StorageDead(_419)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/></td></tr><tr><td align="left">_412 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _413)</td></tr></table>>];
    bb177__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>_423 = discriminant(_412)<br/></td></tr><tr><td align="left">switchInt(move _423)</td></tr></table>>];
    bb178__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_427)<br/>_427 = ((_412 as Continue).0: u64)<br/>_230 = _427<br/>StorageDead(_427)<br/>StorageDead(_381)<br/></td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb179__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_424)<br/>_424 = ((_412 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_426)<br/>_426 = _424<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _426)</td></tr></table>>];
    bb180__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_424)<br/>StorageDead(_381)<br/></td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb181__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">drop(_232)</td></tr></table>>];
    bb182__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_420)<br/>StorageDead(_417)<br/>StorageDead(_412)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>_430 = _230<br/>_429 = Gt(move _430, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _429)</td></tr></table>>];
    bb183__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>_435 = _230<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_613 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_614 = deref_copy ((*_613).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_702 = (((_614.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_440 = &amp;(*_702)<br/></td></tr><tr><td align="left">_439 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _440)</td></tr></table>>];
    bb184__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">_438 = &amp;(*_439)<br/></td></tr><tr><td align="left">_437 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _438)</td></tr></table>>];
    bb185__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_438)<br/>_436 = ((*_437).2: u64)<br/>_434 = Lt(move _435, move _436)<br/></td></tr><tr><td align="left">switchInt(move _434)</td></tr></table>>];
    bb186__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageDead(_437)<br/>StorageDead(_436)<br/>StorageDead(_435)<br/>StorageLive(_441)<br/>_441 = ()<br/>_433 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _441)<br/>StorageDead(_441)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageDead(_437)<br/>StorageDead(_436)<br/>StorageDead(_435)<br/>StorageLive(_442)<br/>_442 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>_576 = const _<br/>_453 = &amp;(*_576)<br/>_452 = &amp;(*_453)<br/>_451 = move _452 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_452)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>_461 = &amp;_442<br/>_460 = &amp;(*_461)<br/></td></tr><tr><td align="left">_459 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _460)</td></tr></table>>];
    bb188__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>_458 = [move _459]<br/>StorageDead(_459)<br/>_457 = &amp;_458<br/>_456 = &amp;(*_457)<br/>_455 = move _456 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">_450 = Arguments::&lt;'_&gt;::new_v1(move _451, move _455)</td></tr></table>>];
    bb189__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">_449 = format(move _450)</td></tr></table>>];
    bb190__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_461)<br/>StorageDead(_458)<br/>StorageDead(_457)<br/>StorageDead(_453)<br/>_448 = move _449<br/>StorageDead(_449)<br/>_447 = &amp;_448<br/>_446 = &amp;(*_447)<br/></td></tr><tr><td align="left">_445 = &lt;String as Deref&gt;::deref(move _446)</td></tr></table>>];
    bb191__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_444 = &amp;(*_445)<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">_443 = solana_program::log::sol_log(move _444)</td></tr></table>>];
    bb192__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/></td></tr><tr><td align="left">drop(_448)</td></tr></table>>];
    bb193__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_447)<br/>StorageDead(_445)<br/>StorageDead(_443)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>_575 = const _<br/>_472 = &amp;(*_575)<br/>_471 = &amp;(*_472)<br/>_470 = move _471 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_471)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>_480 = &amp;_230<br/>_479 = &amp;(*_480)<br/></td></tr><tr><td align="left">_478 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _479)</td></tr></table>>];
    bb194__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>_615 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_616 = deref_copy ((*_615).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_703 = (((_616.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_487 = &amp;(*_703)<br/></td></tr><tr><td align="left">_486 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _487)</td></tr></table>>];
    bb195__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">_485 = &amp;(*_486)<br/></td></tr><tr><td align="left">_484 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _485)</td></tr></table>>];
    bb196__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_487)<br/>StorageDead(_485)<br/>_483 = &amp;((*_484).2: u64)<br/>_482 = &amp;(*_483)<br/></td></tr><tr><td align="left">_481 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _482)</td></tr></table>>];
    bb197__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/>_477 = [move _478, move _481]<br/>StorageDead(_481)<br/>StorageDead(_478)<br/>_476 = &amp;_477<br/>_475 = &amp;(*_476)<br/>_474 = move _475 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_475)<br/></td></tr><tr><td align="left">_469 = Arguments::&lt;'_&gt;::new_v1(move _470, move _474)</td></tr></table>>];
    bb198__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/>StorageDead(_470)<br/></td></tr><tr><td align="left">_468 = format(move _469)</td></tr></table>>];
    bb199__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>StorageDead(_486)<br/>StorageDead(_484)<br/>StorageDead(_483)<br/>StorageDead(_480)<br/>StorageDead(_477)<br/>StorageDead(_476)<br/>StorageDead(_472)<br/>_467 = move _468<br/>StorageDead(_468)<br/>_466 = &amp;_467<br/>_465 = &amp;(*_466)<br/></td></tr><tr><td align="left">_464 = &lt;String as Deref&gt;::deref(move _465)</td></tr></table>>];
    bb200__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">_463 = &amp;(*_464)<br/>StorageDead(_465)<br/></td></tr><tr><td align="left">_462 = solana_program::log::sol_log(move _463)</td></tr></table>>];
    bb201__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/></td></tr><tr><td align="left">drop(_467)</td></tr></table>>];
    bb202__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>StorageDead(_466)<br/>StorageDead(_464)<br/>StorageDead(_462)<br/>StorageLive(_488)<br/>_488 = _442<br/>_433 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _488)<br/>StorageDead(_488)<br/>StorageDead(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/></td></tr><tr><td align="left">_432 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _433)</td></tr></table>>];
    bb204__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>_489 = discriminant(_432)<br/></td></tr><tr><td align="left">switchInt(move _489)</td></tr></table>>];
    bb205__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageLive(_493)<br/>_493 = ((_432 as Continue).0: ())<br/>_431 = _493<br/>StorageDead(_493)<br/>StorageDead(_432)<br/>StorageDead(_431)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>_498 = &amp;_61<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>_500 = &amp;_2<br/>_499 = &amp;(*_500)<br/></td></tr><tr><td align="left">_497 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _498, move _499)</td></tr></table>>];
    bb206__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageLive(_490)<br/>_490 = ((_432 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_492)<br/>_492 = _490<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _492)</td></tr></table>>];
    bb207__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/>StorageDead(_490)<br/>StorageDead(_432)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb208__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_498)<br/></td></tr><tr><td align="left">_496 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _497)</td></tr></table>>];
    bb209__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_497)<br/>_501 = discriminant(_496)<br/></td></tr><tr><td align="left">switchInt(move _501)</td></tr></table>>];
    bb210__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageLive(_505)<br/>_505 = move ((_496 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_495 = move _505<br/>StorageDead(_505)<br/>_494 = &amp;mut _495<br/>_656 = discriminant(_496)<br/>StorageDead(_500)<br/>StorageDead(_496)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>_617 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_510 = &amp;((*_617).5: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_509 = &amp;(*_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>_618 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_512 = &amp;((*_618).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_619 = deref_copy (*_512)<br/>_704 = (((_619.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_511 = &amp;(*_704)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>_620 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_514 = &amp;((*_620).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_621 = deref_copy (*_514)<br/>_705 = (((_621.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_513 = &amp;(*_705)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>_622 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_516 = &amp;((*_622).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_515 = &amp;(*_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>_623 = deref_copy (*_55)<br/>_706 = (((_623.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_519 = &amp;(*_706)<br/></td></tr><tr><td align="left">_518 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _519)</td></tr></table>>];
    bb211__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageLive(_502)<br/>_502 = ((_496 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_504)<br/>_504 = _502<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _504)</td></tr></table>>];
    bb212__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>StorageDead(_502)<br/>_654 = discriminant(_496)<br/>StorageDead(_500)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_519)<br/>_517 = ((*_518).15: u8)<br/>StorageLive(_520)<br/>_520 = _230<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>_522 = &amp;_85<br/>_521 = &amp;(*_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>_527 = &amp;(*_494)<br/></td></tr><tr><td align="left">_526 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _527)</td></tr></table>>];
    bb214__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_525 = &amp;(*_526)<br/>StorageDead(_527)<br/></td></tr><tr><td align="left">_524 = SpotMarket::has_transfer_hook(move _525)</td></tr></table>>];
    bb215__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left">switchInt(move _524)</td></tr></table>>];
    bb216__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>StorageDead(_525)<br/>StorageLive(_528)<br/>_528 = &amp;mut (*_56)<br/>_523 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _528)<br/>StorageDead(_528)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>StorageDead(_525)<br/>_523 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_524)<br/></td></tr><tr><td align="left">_508 = send_from_program_vault(move _509, move _511, move _513, move _515, move _517, move _520, move _521, move _523)</td></tr></table>>];
    bb219__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_520)<br/>StorageDead(_517)<br/>StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_511)<br/>StorageDead(_509)<br/></td></tr><tr><td align="left">_507 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _508)</td></tr></table>>];
    bb220__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_508)<br/>_529 = discriminant(_507)<br/></td></tr><tr><td align="left">switchInt(move _529)</td></tr></table>>];
    bb221__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_533)<br/>_533 = ((_507 as Continue).0: ())<br/>_506 = _533<br/>StorageDead(_533)<br/>_658 = discriminant(_507)<br/>StorageDead(_522)<br/>StorageDead(_518)<br/>StorageDead(_516)<br/>StorageDead(_514)<br/>StorageDead(_512)<br/>StorageDead(_510)<br/>StorageDead(_507)<br/>StorageDead(_506)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>_624 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolvePerpPnlDeficit&lt;'_&gt;)<br/>_625 = deref_copy ((*_624).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_707 = (((_625.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_542 = &amp;(*_707)<br/></td></tr><tr><td align="left">_541 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _542)</td></tr></table>>];
    bb222__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_530)<br/>_530 = move ((_507 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_532)<br/>_532 = move _530<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _532)</td></tr></table>>];
    bb223__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/>StorageDead(_530)<br/>_660 = discriminant(_507)<br/>StorageDead(_522)<br/>StorageDead(_518)<br/>StorageDead(_516)<br/>StorageDead(_514)<br/>StorageDead(_512)<br/>StorageDead(_510)<br/>StorageDead(_507)<br/>StorageDead(_506)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">_540 = &amp;(*_541)<br/></td></tr><tr><td align="left">_539 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _540)</td></tr></table>>];
    bb225__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>StorageDead(_540)<br/>_538 = ((*_539).2: u64)<br/>_537 = Gt(move _538, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _537)</td></tr></table>>];
    bb226__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>StorageDead(_539)<br/>StorageDead(_538)<br/>StorageLive(_543)<br/>_543 = ()<br/>_536 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _543)<br/>StorageDead(_543)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>StorageDead(_539)<br/>StorageDead(_538)<br/>StorageLive(_544)<br/>_544 = error::ErrorCode::InvalidIFDetected<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>_574 = const _<br/>_555 = &amp;(*_574)<br/>_554 = &amp;(*_555)<br/>_553 = move _554 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_554)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>StorageLive(_563)<br/>_563 = &amp;_544<br/>_562 = &amp;(*_563)<br/></td></tr><tr><td align="left">_561 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _562)</td></tr></table>>];
    bb228__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>_560 = [move _561]<br/>StorageDead(_561)<br/>_559 = &amp;_560<br/>_558 = &amp;(*_559)<br/>_557 = move _558 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_558)<br/></td></tr><tr><td align="left">_552 = Arguments::&lt;'_&gt;::new_v1(move _553, move _557)</td></tr></table>>];
    bb229__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>StorageDead(_553)<br/></td></tr><tr><td align="left">_551 = format(move _552)</td></tr></table>>];
    bb230__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/>StorageDead(_563)<br/>StorageDead(_560)<br/>StorageDead(_559)<br/>StorageDead(_555)<br/>_550 = move _551<br/>StorageDead(_551)<br/>_549 = &amp;_550<br/>_548 = &amp;(*_549)<br/></td></tr><tr><td align="left">_547 = &lt;String as Deref&gt;::deref(move _548)</td></tr></table>>];
    bb231__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">_546 = &amp;(*_547)<br/>StorageDead(_548)<br/></td></tr><tr><td align="left">_545 = solana_program::log::sol_log(move _546)</td></tr></table>>];
    bb232__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/></td></tr><tr><td align="left">drop(_550)</td></tr></table>>];
    bb233__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>StorageDead(_549)<br/>StorageDead(_547)<br/>StorageDead(_545)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>_566 = const &quot;insurance_fund_vault.amount must remain &gt; 0&quot;<br/>_565 = &amp;(*_566)<br/></td></tr><tr><td align="left">_564 = solana_program::log::sol_log(move _565)</td></tr></table>>];
    bb234__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>StorageDead(_566)<br/>StorageDead(_564)<br/>StorageLive(_567)<br/>_567 = _544<br/>_536 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _567)<br/>StorageDead(_567)<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb235__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_537)<br/></td></tr><tr><td align="left">_535 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _536)</td></tr></table>>];
    bb236__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_536)<br/>_568 = discriminant(_535)<br/></td></tr><tr><td align="left">switchInt(move _568)</td></tr></table>>];
    bb237__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_572)<br/>_572 = ((_535 as Continue).0: ())<br/>_534 = _572<br/>StorageDead(_572)<br/>StorageDead(_535)<br/>StorageDead(_534)<br/>_428 = const ()<br/></td></tr><tr><td align="left">drop(_495)</td></tr></table>>];
    bb238__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageLive(_569)<br/>_569 = ((_535 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_571)<br/>_571 = _569<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _571)</td></tr></table>>];
    bb239__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_571)<br/>StorageDead(_569)<br/>StorageDead(_535)<br/>StorageDead(_534)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/>StorageDead(_494)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>_428 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageDead(_428)<br/>StorageLive(_573)<br/>_573 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _573)<br/>StorageDead(_573)<br/>StorageDead(_230)<br/>StorageDead(_225)<br/>StorageDead(_220)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb243__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb244__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb245__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left">drop(_495)</td></tr></table>>];
    bb247__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_495)<br/>StorageDead(_494)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">drop(_232)</td></tr></table>>];
    bb250__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/>StorageDead(_420)<br/>StorageDead(_417)<br/>StorageDead(_412)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb254__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">drop(_232)</td></tr></table>>];
    bb255__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_225)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb257__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb259__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb261__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb262__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb263__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb265__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb269__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left">return</td></tr></table>>];
    bb270__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">270 (cleanup)</td></tr><tr><td align="left">drop(_550)</td></tr></table>>];
    bb271__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">271 (cleanup)</td></tr><tr><td align="left">drop(_495)</td></tr></table>>];
    bb272__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">272 (cleanup)</td></tr><tr><td align="left">drop(_467)</td></tr></table>>];
    bb273__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">273 (cleanup)</td></tr><tr><td align="left">drop(_448)</td></tr></table>>];
    bb274__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">274 (cleanup)</td></tr><tr><td align="left">drop(_368)</td></tr></table>>];
    bb275__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">275 (cleanup)</td></tr><tr><td align="left">drop(_349)</td></tr></table>>];
    bb276__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">276 (cleanup)</td></tr><tr><td align="left">drop(_311)</td></tr></table>>];
    bb277__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">277 (cleanup)</td></tr><tr><td align="left">drop(_273)</td></tr></table>>];
    bb278__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">278 (cleanup)</td></tr><tr><td align="left">drop(_244)</td></tr></table>>];
    bb279__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">279 (cleanup)</td></tr><tr><td align="left">drop(_232)</td></tr></table>>];
    bb280__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">280 (cleanup)</td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb281__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">281 (cleanup)</td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb282__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">282 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb283__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">283 (cleanup)</td></tr><tr><td align="left">drop(_61)</td></tr></table>>];
    bb284__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">284 (cleanup)</td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb285__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">285 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb286__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">286 (cleanup)</td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb287__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">287 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb288__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">288 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb289__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">289 (cleanup)</td></tr><tr><td align="left" balign="left">_674 = discriminant(_507)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb290__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">290 (cleanup)</td></tr><tr><td align="left" balign="left">_675 = discriminant(_496)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb291__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">291 (cleanup)</td></tr><tr><td align="left" balign="left">_676 = discriminant(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb292__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">292 (cleanup)</td></tr><tr><td align="left" balign="left">_677 = discriminant(_233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb293__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left" balign="left">_678 = discriminant(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left" balign="left">_679 = discriminant(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb295__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left" balign="left">_680 = discriminant(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb296__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left" balign="left">_681 = discriminant(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left" balign="left">_682 = discriminant(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb298__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left" balign="left">_684 = discriminant(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb299__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left" balign="left">_685 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_9295 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">300 (cleanup)</td></tr><tr><td align="left" balign="left">_686 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9295 -> bb1__0_9295 [label="return"];
    bb1__0_9295 -> bb2__0_9295 [label="return"];
    bb1__0_9295 -> bb288__0_9295 [label="unwind"];
    bb2__0_9295 -> bb3__0_9295 [label="0"];
    bb2__0_9295 -> bb5__0_9295 [label="1"];
    bb2__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb3__0_9295 -> bb7__0_9295 [label="return"];
    bb5__0_9295 -> bb6__0_9295 [label="return"];
    bb5__0_9295 -> bb300__0_9295 [label="unwind"];
    bb6__0_9295 -> bb269__0_9295 [label=""];
    bb7__0_9295 -> bb8__0_9295 [label="return"];
    bb7__0_9295 -> bb288__0_9295 [label="unwind"];
    bb8__0_9295 -> bb9__0_9295 [label="0"];
    bb8__0_9295 -> bb10__0_9295 [label="1"];
    bb8__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb9__0_9295 -> bb13__0_9295 [label="0"];
    bb9__0_9295 -> bb12__0_9295 [label="otherwise"];
    bb10__0_9295 -> bb11__0_9295 [label="return"];
    bb10__0_9295 -> bb299__0_9295 [label="unwind"];
    bb11__0_9295 -> bb268__0_9295 [label=""];
    bb12__0_9295 -> bb20__0_9295 [label=""];
    bb13__0_9295 -> bb14__0_9295 [label="return"];
    bb14__0_9295 -> bb15__0_9295 [label="return"];
    bb15__0_9295 -> bb16__0_9295 [label="return"];
    bb16__0_9295 -> bb17__0_9295 [label="return"];
    bb16__0_9295 -> bb287__0_9295 [label="unwind"];
    bb17__0_9295 -> bb18__0_9295 [label="return"];
    bb17__0_9295 -> bb287__0_9295 [label="unwind"];
    bb18__0_9295 -> bb19__0_9295 [label="return"];
    bb18__0_9295 -> bb288__0_9295 [label="unwind"];
    bb19__0_9295 -> bb20__0_9295 [label=""];
    bb20__0_9295 -> bb21__0_9295 [label="return"];
    bb21__0_9295 -> bb22__0_9295 [label="0"];
    bb21__0_9295 -> bb23__0_9295 [label="1"];
    bb21__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb22__0_9295 -> bb25__0_9295 [label="return"];
    bb23__0_9295 -> bb24__0_9295 [label="return"];
    bb24__0_9295 -> bb267__0_9295 [label=""];
    bb25__0_9295 -> bb26__0_9295 [label="return"];
    bb26__0_9295 -> bb27__0_9295 [label="return"];
    bb27__0_9295 -> bb28__0_9295 [label="return"];
    bb27__0_9295 -> bb286__0_9295 [label="unwind"];
    bb28__0_9295 -> bb29__0_9295 [label="return"];
    bb28__0_9295 -> bb285__0_9295 [label="unwind"];
    bb29__0_9295 -> bb30__0_9295 [label="return"];
    bb29__0_9295 -> bb285__0_9295 [label="unwind"];
    bb30__0_9295 -> bb31__0_9295 [label="return"];
    bb30__0_9295 -> bb285__0_9295 [label="unwind"];
    bb31__0_9295 -> bb32__0_9295 [label="0"];
    bb31__0_9295 -> bb33__0_9295 [label="1"];
    bb31__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb32__0_9295 -> bb35__0_9295 [label="return"];
    bb32__0_9295 -> bb281__0_9295 [label="unwind"];
    bb33__0_9295 -> bb34__0_9295 [label="return"];
    bb33__0_9295 -> bb298__0_9295 [label="unwind"];
    bb34__0_9295 -> bb264__0_9295 [label="return"];
    bb34__0_9295 -> bb286__0_9295 [label="unwind"];
    bb35__0_9295 -> bb36__0_9295 [label="return"];
    bb35__0_9295 -> bb282__0_9295 [label="unwind"];
    bb36__0_9295 -> bb37__0_9295 [label="return"];
    bb36__0_9295 -> bb282__0_9295 [label="unwind"];
    bb37__0_9295 -> bb38__0_9295 [label="return"];
    bb37__0_9295 -> bb282__0_9295 [label="unwind"];
    bb38__0_9295 -> bb39__0_9295 [label="0"];
    bb38__0_9295 -> bb40__0_9295 [label="1"];
    bb38__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb39__0_9295 -> bb42__0_9295 [label="return"];
    bb39__0_9295 -> bb282__0_9295 [label="unwind"];
    bb40__0_9295 -> bb41__0_9295 [label="return"];
    bb40__0_9295 -> bb282__0_9295 [label="unwind"];
    bb41__0_9295 -> bb260__0_9295 [label=""];
    bb42__0_9295 -> bb43__0_9295 [label="return"];
    bb42__0_9295 -> bb282__0_9295 [label="unwind"];
    bb43__0_9295 -> bb44__0_9295 [label="return"];
    bb43__0_9295 -> bb282__0_9295 [label="unwind"];
    bb44__0_9295 -> bb45__0_9295 [label="0"];
    bb44__0_9295 -> bb46__0_9295 [label="1"];
    bb44__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb45__0_9295 -> bb48__0_9295 [label="return"];
    bb45__0_9295 -> bb282__0_9295 [label="unwind"];
    bb46__0_9295 -> bb47__0_9295 [label="return"];
    bb46__0_9295 -> bb282__0_9295 [label="unwind"];
    bb47__0_9295 -> bb260__0_9295 [label=""];
    bb48__0_9295 -> bb49__0_9295 [label="return"];
    bb48__0_9295 -> bb282__0_9295 [label="unwind"];
    bb49__0_9295 -> bb50__0_9295 [label="0"];
    bb49__0_9295 -> bb51__0_9295 [label="1"];
    bb49__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb50__0_9295 -> bb53__0_9295 [label="return"];
    bb50__0_9295 -> bb280__0_9295 [label="unwind"];
    bb51__0_9295 -> bb52__0_9295 [label="return"];
    bb51__0_9295 -> bb297__0_9295 [label="unwind"];
    bb52__0_9295 -> bb259__0_9295 [label=""];
    bb53__0_9295 -> bb54__0_9295 [label="return"];
    bb53__0_9295 -> bb280__0_9295 [label="unwind"];
    bb54__0_9295 -> bb64__0_9295 [label="0"];
    bb54__0_9295 -> bb55__0_9295 [label="otherwise"];
    bb55__0_9295 -> bb56__0_9295 [label="return"];
    bb55__0_9295 -> bb280__0_9295 [label="unwind"];
    bb56__0_9295 -> bb57__0_9295 [label="return"];
    bb56__0_9295 -> bb280__0_9295 [label="unwind"];
    bb57__0_9295 -> bb58__0_9295 [label="return"];
    bb57__0_9295 -> bb280__0_9295 [label="unwind"];
    bb58__0_9295 -> bb59__0_9295 [label="return"];
    bb58__0_9295 -> bb280__0_9295 [label="unwind"];
    bb59__0_9295 -> bb60__0_9295 [label="return"];
    bb59__0_9295 -> bb280__0_9295 [label="unwind"];
    bb60__0_9295 -> bb61__0_9295 [label="0"];
    bb60__0_9295 -> bb62__0_9295 [label="1"];
    bb60__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb61__0_9295 -> bb72__0_9295 [label=""];
    bb62__0_9295 -> bb63__0_9295 [label="return"];
    bb62__0_9295 -> bb296__0_9295 [label="unwind"];
    bb63__0_9295 -> bb257__0_9295 [label=""];
    bb64__0_9295 -> bb65__0_9295 [label="return"];
    bb64__0_9295 -> bb280__0_9295 [label="unwind"];
    bb65__0_9295 -> bb66__0_9295 [label="return"];
    bb65__0_9295 -> bb280__0_9295 [label="unwind"];
    bb66__0_9295 -> bb67__0_9295 [label="return"];
    bb66__0_9295 -> bb280__0_9295 [label="unwind"];
    bb67__0_9295 -> bb68__0_9295 [label="return"];
    bb67__0_9295 -> bb280__0_9295 [label="unwind"];
    bb68__0_9295 -> bb69__0_9295 [label="0"];
    bb68__0_9295 -> bb70__0_9295 [label="1"];
    bb68__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb69__0_9295 -> bb72__0_9295 [label=""];
    bb70__0_9295 -> bb71__0_9295 [label="return"];
    bb70__0_9295 -> bb295__0_9295 [label="unwind"];
    bb71__0_9295 -> bb257__0_9295 [label=""];
    bb72__0_9295 -> bb73__0_9295 [label="return"];
    bb72__0_9295 -> bb280__0_9295 [label="unwind"];
    bb73__0_9295 -> bb74__0_9295 [label="return"];
    bb73__0_9295 -> bb280__0_9295 [label="unwind"];
    bb74__0_9295 -> bb75__0_9295 [label="0"];
    bb74__0_9295 -> bb76__0_9295 [label="1"];
    bb74__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb75__0_9295 -> bb78__0_9295 [label="return"];
    bb75__0_9295 -> bb280__0_9295 [label="unwind"];
    bb76__0_9295 -> bb77__0_9295 [label="return"];
    bb76__0_9295 -> bb294__0_9295 [label="unwind"];
    bb77__0_9295 -> bb258__0_9295 [label=""];
    bb78__0_9295 -> bb79__0_9295 [label="return"];
    bb78__0_9295 -> bb280__0_9295 [label="unwind"];
    bb79__0_9295 -> bb80__0_9295 [label="0"];
    bb79__0_9295 -> bb81__0_9295 [label="1"];
    bb79__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb80__0_9295 -> bb83__0_9295 [label="return"];
    bb80__0_9295 -> bb280__0_9295 [label="unwind"];
    bb81__0_9295 -> bb82__0_9295 [label="return"];
    bb81__0_9295 -> bb293__0_9295 [label="unwind"];
    bb82__0_9295 -> bb258__0_9295 [label=""];
    bb83__0_9295 -> bb84__0_9295 [label="return"];
    bb83__0_9295 -> bb280__0_9295 [label="unwind"];
    bb84__0_9295 -> bb85__0_9295 [label="return"];
    bb84__0_9295 -> bb280__0_9295 [label="unwind"];
    bb85__0_9295 -> bb86__0_9295 [label="return"];
    bb85__0_9295 -> bb280__0_9295 [label="unwind"];
    bb86__0_9295 -> bb87__0_9295 [label="return"];
    bb86__0_9295 -> bb280__0_9295 [label="unwind"];
    bb87__0_9295 -> bb88__0_9295 [label="0"];
    bb87__0_9295 -> bb89__0_9295 [label="1"];
    bb87__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb88__0_9295 -> bb91__0_9295 [label="return"];
    bb88__0_9295 -> bb282__0_9295 [label="unwind"];
    bb89__0_9295 -> bb90__0_9295 [label="return"];
    bb89__0_9295 -> bb280__0_9295 [label="unwind"];
    bb90__0_9295 -> bb258__0_9295 [label=""];
    bb91__0_9295 -> bb92__0_9295 [label="return"];
    bb91__0_9295 -> bb282__0_9295 [label="unwind"];
    bb92__0_9295 -> bb93__0_9295 [label="return"];
    bb92__0_9295 -> bb282__0_9295 [label="unwind"];
    bb93__0_9295 -> bb94__0_9295 [label="return"];
    bb93__0_9295 -> bb282__0_9295 [label="unwind"];
    bb94__0_9295 -> bb95__0_9295 [label="return"];
    bb94__0_9295 -> bb282__0_9295 [label="unwind"];
    bb95__0_9295 -> bb96__0_9295 [label="return"];
    bb95__0_9295 -> bb282__0_9295 [label="unwind"];
    bb96__0_9295 -> bb97__0_9295 [label="return"];
    bb96__0_9295 -> bb282__0_9295 [label="unwind"];
    bb97__0_9295 -> bb98__0_9295 [label="0"];
    bb97__0_9295 -> bb99__0_9295 [label="1"];
    bb97__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb98__0_9295 -> bb101__0_9295 [label="return"];
    bb98__0_9295 -> bb279__0_9295 [label="unwind"];
    bb99__0_9295 -> bb100__0_9295 [label="return"];
    bb99__0_9295 -> bb292__0_9295 [label="unwind"];
    bb100__0_9295 -> bb255__0_9295 [label=""];
    bb101__0_9295 -> bb102__0_9295 [label="return"];
    bb101__0_9295 -> bb279__0_9295 [label="unwind"];
    bb102__0_9295 -> bb103__0_9295 [label="0"];
    bb102__0_9295 -> bb104__0_9295 [label="1"];
    bb102__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb103__0_9295 -> bb106__0_9295 [label="return"];
    bb103__0_9295 -> bb278__0_9295 [label="unwind"];
    bb104__0_9295 -> bb105__0_9295 [label="return"];
    bb104__0_9295 -> bb291__0_9295 [label="unwind"];
    bb105__0_9295 -> bb254__0_9295 [label=""];
    bb106__0_9295 -> bb138__0_9295 [label="0"];
    bb106__0_9295 -> bb107__0_9295 [label="otherwise"];
    bb107__0_9295 -> bb108__0_9295 [label="return"];
    bb107__0_9295 -> bb278__0_9295 [label="unwind"];
    bb108__0_9295 -> bb110__0_9295 [label="0"];
    bb108__0_9295 -> bb109__0_9295 [label="otherwise"];
    bb109__0_9295 -> bb118__0_9295 [label=""];
    bb110__0_9295 -> bb111__0_9295 [label="return"];
    bb110__0_9295 -> bb278__0_9295 [label="unwind"];
    bb111__0_9295 -> bb112__0_9295 [label="return"];
    bb111__0_9295 -> bb278__0_9295 [label="unwind"];
    bb112__0_9295 -> bb113__0_9295 [label="return"];
    bb112__0_9295 -> bb278__0_9295 [label="unwind"];
    bb113__0_9295 -> bb114__0_9295 [label="return"];
    bb113__0_9295 -> bb277__0_9295 [label="unwind"];
    bb114__0_9295 -> bb115__0_9295 [label="return"];
    bb114__0_9295 -> bb277__0_9295 [label="unwind"];
    bb115__0_9295 -> bb116__0_9295 [label="return"];
    bb115__0_9295 -> bb278__0_9295 [label="unwind"];
    bb116__0_9295 -> bb117__0_9295 [label="return"];
    bb116__0_9295 -> bb278__0_9295 [label="unwind"];
    bb117__0_9295 -> bb118__0_9295 [label=""];
    bb118__0_9295 -> bb119__0_9295 [label="return"];
    bb118__0_9295 -> bb278__0_9295 [label="unwind"];
    bb119__0_9295 -> bb120__0_9295 [label="0"];
    bb119__0_9295 -> bb121__0_9295 [label="1"];
    bb119__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb120__0_9295 -> bb123__0_9295 [label="return"];
    bb120__0_9295 -> bb278__0_9295 [label="unwind"];
    bb121__0_9295 -> bb122__0_9295 [label="return"];
    bb121__0_9295 -> bb278__0_9295 [label="unwind"];
    bb122__0_9295 -> bb252__0_9295 [label=""];
    bb123__0_9295 -> bb125__0_9295 [label="0"];
    bb123__0_9295 -> bb124__0_9295 [label="otherwise"];
    bb124__0_9295 -> bb133__0_9295 [label=""];
    bb125__0_9295 -> bb126__0_9295 [label="return"];
    bb125__0_9295 -> bb278__0_9295 [label="unwind"];
    bb126__0_9295 -> bb127__0_9295 [label="return"];
    bb126__0_9295 -> bb278__0_9295 [label="unwind"];
    bb127__0_9295 -> bb128__0_9295 [label="return"];
    bb127__0_9295 -> bb278__0_9295 [label="unwind"];
    bb128__0_9295 -> bb129__0_9295 [label="return"];
    bb128__0_9295 -> bb276__0_9295 [label="unwind"];
    bb129__0_9295 -> bb130__0_9295 [label="return"];
    bb129__0_9295 -> bb276__0_9295 [label="unwind"];
    bb130__0_9295 -> bb131__0_9295 [label="return"];
    bb130__0_9295 -> bb278__0_9295 [label="unwind"];
    bb131__0_9295 -> bb132__0_9295 [label="return"];
    bb131__0_9295 -> bb278__0_9295 [label="unwind"];
    bb132__0_9295 -> bb133__0_9295 [label=""];
    bb133__0_9295 -> bb134__0_9295 [label="return"];
    bb133__0_9295 -> bb278__0_9295 [label="unwind"];
    bb134__0_9295 -> bb135__0_9295 [label="0"];
    bb134__0_9295 -> bb136__0_9295 [label="1"];
    bb134__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb135__0_9295 -> bb139__0_9295 [label=""];
    bb136__0_9295 -> bb137__0_9295 [label="return"];
    bb136__0_9295 -> bb278__0_9295 [label="unwind"];
    bb137__0_9295 -> bb252__0_9295 [label=""];
    bb138__0_9295 -> bb139__0_9295 [label=""];
    bb139__0_9295 -> bb140__0_9295 [label="return"];
    bb139__0_9295 -> bb278__0_9295 [label="unwind"];
    bb140__0_9295 -> bb141__0_9295 [label="return"];
    bb140__0_9295 -> bb278__0_9295 [label="unwind"];
    bb141__0_9295 -> bb143__0_9295 [label="0"];
    bb141__0_9295 -> bb142__0_9295 [label="otherwise"];
    bb142__0_9295 -> bb144__0_9295 [label="return"];
    bb142__0_9295 -> bb278__0_9295 [label="unwind"];
    bb143__0_9295 -> bb155__0_9295 [label=""];
    bb144__0_9295 -> bb145__0_9295 [label="return"];
    bb144__0_9295 -> bb278__0_9295 [label="unwind"];
    bb145__0_9295 -> bb146__0_9295 [label="return"];
    bb145__0_9295 -> bb278__0_9295 [label="unwind"];
    bb146__0_9295 -> bb147__0_9295 [label="return"];
    bb146__0_9295 -> bb275__0_9295 [label="unwind"];
    bb147__0_9295 -> bb148__0_9295 [label="return"];
    bb147__0_9295 -> bb275__0_9295 [label="unwind"];
    bb148__0_9295 -> bb149__0_9295 [label="return"];
    bb148__0_9295 -> bb278__0_9295 [label="unwind"];
    bb149__0_9295 -> bb150__0_9295 [label="return"];
    bb149__0_9295 -> bb278__0_9295 [label="unwind"];
    bb150__0_9295 -> bb151__0_9295 [label="return"];
    bb150__0_9295 -> bb278__0_9295 [label="unwind"];
    bb151__0_9295 -> bb152__0_9295 [label="return"];
    bb151__0_9295 -> bb274__0_9295 [label="unwind"];
    bb152__0_9295 -> bb153__0_9295 [label="return"];
    bb152__0_9295 -> bb274__0_9295 [label="unwind"];
    bb153__0_9295 -> bb154__0_9295 [label="return"];
    bb153__0_9295 -> bb278__0_9295 [label="unwind"];
    bb154__0_9295 -> bb155__0_9295 [label=""];
    bb155__0_9295 -> bb156__0_9295 [label="return"];
    bb155__0_9295 -> bb278__0_9295 [label="unwind"];
    bb156__0_9295 -> bb157__0_9295 [label="0"];
    bb156__0_9295 -> bb158__0_9295 [label="1"];
    bb156__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb157__0_9295 -> bb160__0_9295 [label="return"];
    bb157__0_9295 -> bb278__0_9295 [label="unwind"];
    bb158__0_9295 -> bb159__0_9295 [label="return"];
    bb158__0_9295 -> bb278__0_9295 [label="unwind"];
    bb159__0_9295 -> bb253__0_9295 [label=""];
    bb160__0_9295 -> bb161__0_9295 [label="return"];
    bb160__0_9295 -> bb278__0_9295 [label="unwind"];
    bb161__0_9295 -> bb162__0_9295 [label="return"];
    bb161__0_9295 -> bb278__0_9295 [label="unwind"];
    bb162__0_9295 -> bb163__0_9295 [label="return"];
    bb162__0_9295 -> bb278__0_9295 [label="unwind"];
    bb163__0_9295 -> bb164__0_9295 [label="0"];
    bb163__0_9295 -> bb165__0_9295 [label="1"];
    bb163__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb164__0_9295 -> bb167__0_9295 [label="return"];
    bb164__0_9295 -> bb278__0_9295 [label="unwind"];
    bb165__0_9295 -> bb166__0_9295 [label="return"];
    bb165__0_9295 -> bb278__0_9295 [label="unwind"];
    bb166__0_9295 -> bb251__0_9295 [label=""];
    bb167__0_9295 -> bb168__0_9295 [label="return"];
    bb167__0_9295 -> bb278__0_9295 [label="unwind"];
    bb168__0_9295 -> bb169__0_9295 [label="return"];
    bb168__0_9295 -> bb278__0_9295 [label="unwind"];
    bb169__0_9295 -> bb170__0_9295 [label="return"];
    bb169__0_9295 -> bb278__0_9295 [label="unwind"];
    bb170__0_9295 -> bb171__0_9295 [label="0"];
    bb170__0_9295 -> bb172__0_9295 [label="1"];
    bb170__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb171__0_9295 -> bb174__0_9295 [label="return"];
    bb171__0_9295 -> bb278__0_9295 [label="unwind"];
    bb172__0_9295 -> bb173__0_9295 [label="return"];
    bb172__0_9295 -> bb278__0_9295 [label="unwind"];
    bb173__0_9295 -> bb251__0_9295 [label=""];
    bb174__0_9295 -> bb175__0_9295 [label="return"];
    bb174__0_9295 -> bb278__0_9295 [label="unwind"];
    bb175__0_9295 -> bb176__0_9295 [label="return"];
    bb175__0_9295 -> bb278__0_9295 [label="unwind"];
    bb176__0_9295 -> bb177__0_9295 [label="return"];
    bb176__0_9295 -> bb278__0_9295 [label="unwind"];
    bb177__0_9295 -> bb178__0_9295 [label="0"];
    bb177__0_9295 -> bb179__0_9295 [label="1"];
    bb177__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb178__0_9295 -> bb181__0_9295 [label="return"];
    bb178__0_9295 -> bb279__0_9295 [label="unwind"];
    bb179__0_9295 -> bb180__0_9295 [label="return"];
    bb179__0_9295 -> bb278__0_9295 [label="unwind"];
    bb180__0_9295 -> bb249__0_9295 [label="return"];
    bb180__0_9295 -> bb279__0_9295 [label="unwind"];
    bb181__0_9295 -> bb182__0_9295 [label="return"];
    bb181__0_9295 -> bb282__0_9295 [label="unwind"];
    bb182__0_9295 -> bb241__0_9295 [label="0"];
    bb182__0_9295 -> bb183__0_9295 [label="otherwise"];
    bb183__0_9295 -> bb184__0_9295 [label="return"];
    bb183__0_9295 -> bb282__0_9295 [label="unwind"];
    bb184__0_9295 -> bb185__0_9295 [label="return"];
    bb184__0_9295 -> bb282__0_9295 [label="unwind"];
    bb185__0_9295 -> bb187__0_9295 [label="0"];
    bb185__0_9295 -> bb186__0_9295 [label="otherwise"];
    bb186__0_9295 -> bb203__0_9295 [label=""];
    bb187__0_9295 -> bb188__0_9295 [label="return"];
    bb187__0_9295 -> bb282__0_9295 [label="unwind"];
    bb188__0_9295 -> bb189__0_9295 [label="return"];
    bb188__0_9295 -> bb282__0_9295 [label="unwind"];
    bb189__0_9295 -> bb190__0_9295 [label="return"];
    bb189__0_9295 -> bb282__0_9295 [label="unwind"];
    bb190__0_9295 -> bb191__0_9295 [label="return"];
    bb190__0_9295 -> bb273__0_9295 [label="unwind"];
    bb191__0_9295 -> bb192__0_9295 [label="return"];
    bb191__0_9295 -> bb273__0_9295 [label="unwind"];
    bb192__0_9295 -> bb193__0_9295 [label="return"];
    bb192__0_9295 -> bb282__0_9295 [label="unwind"];
    bb193__0_9295 -> bb194__0_9295 [label="return"];
    bb193__0_9295 -> bb282__0_9295 [label="unwind"];
    bb194__0_9295 -> bb195__0_9295 [label="return"];
    bb194__0_9295 -> bb282__0_9295 [label="unwind"];
    bb195__0_9295 -> bb196__0_9295 [label="return"];
    bb195__0_9295 -> bb282__0_9295 [label="unwind"];
    bb196__0_9295 -> bb197__0_9295 [label="return"];
    bb196__0_9295 -> bb282__0_9295 [label="unwind"];
    bb197__0_9295 -> bb198__0_9295 [label="return"];
    bb197__0_9295 -> bb282__0_9295 [label="unwind"];
    bb198__0_9295 -> bb199__0_9295 [label="return"];
    bb198__0_9295 -> bb282__0_9295 [label="unwind"];
    bb199__0_9295 -> bb200__0_9295 [label="return"];
    bb199__0_9295 -> bb272__0_9295 [label="unwind"];
    bb200__0_9295 -> bb201__0_9295 [label="return"];
    bb200__0_9295 -> bb272__0_9295 [label="unwind"];
    bb201__0_9295 -> bb202__0_9295 [label="return"];
    bb201__0_9295 -> bb282__0_9295 [label="unwind"];
    bb202__0_9295 -> bb203__0_9295 [label=""];
    bb203__0_9295 -> bb204__0_9295 [label="return"];
    bb203__0_9295 -> bb282__0_9295 [label="unwind"];
    bb204__0_9295 -> bb205__0_9295 [label="0"];
    bb204__0_9295 -> bb206__0_9295 [label="1"];
    bb204__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb205__0_9295 -> bb208__0_9295 [label="return"];
    bb205__0_9295 -> bb282__0_9295 [label="unwind"];
    bb206__0_9295 -> bb207__0_9295 [label="return"];
    bb206__0_9295 -> bb282__0_9295 [label="unwind"];
    bb207__0_9295 -> bb248__0_9295 [label=""];
    bb208__0_9295 -> bb209__0_9295 [label="return"];
    bb208__0_9295 -> bb282__0_9295 [label="unwind"];
    bb209__0_9295 -> bb210__0_9295 [label="0"];
    bb209__0_9295 -> bb211__0_9295 [label="1"];
    bb209__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb210__0_9295 -> bb213__0_9295 [label="return"];
    bb210__0_9295 -> bb271__0_9295 [label="unwind"];
    bb211__0_9295 -> bb212__0_9295 [label="return"];
    bb211__0_9295 -> bb290__0_9295 [label="unwind"];
    bb212__0_9295 -> bb247__0_9295 [label=""];
    bb213__0_9295 -> bb214__0_9295 [label="return"];
    bb213__0_9295 -> bb271__0_9295 [label="unwind"];
    bb214__0_9295 -> bb215__0_9295 [label="return"];
    bb214__0_9295 -> bb271__0_9295 [label="unwind"];
    bb215__0_9295 -> bb217__0_9295 [label="0"];
    bb215__0_9295 -> bb216__0_9295 [label="otherwise"];
    bb216__0_9295 -> bb218__0_9295 [label=""];
    bb217__0_9295 -> bb218__0_9295 [label=""];
    bb218__0_9295 -> bb219__0_9295 [label="return"];
    bb218__0_9295 -> bb271__0_9295 [label="unwind"];
    bb219__0_9295 -> bb220__0_9295 [label="return"];
    bb219__0_9295 -> bb271__0_9295 [label="unwind"];
    bb220__0_9295 -> bb221__0_9295 [label="0"];
    bb220__0_9295 -> bb222__0_9295 [label="1"];
    bb220__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb221__0_9295 -> bb224__0_9295 [label="return"];
    bb221__0_9295 -> bb271__0_9295 [label="unwind"];
    bb222__0_9295 -> bb223__0_9295 [label="return"];
    bb222__0_9295 -> bb289__0_9295 [label="unwind"];
    bb223__0_9295 -> bb246__0_9295 [label=""];
    bb224__0_9295 -> bb225__0_9295 [label="return"];
    bb224__0_9295 -> bb271__0_9295 [label="unwind"];
    bb225__0_9295 -> bb227__0_9295 [label="0"];
    bb225__0_9295 -> bb226__0_9295 [label="otherwise"];
    bb226__0_9295 -> bb235__0_9295 [label=""];
    bb227__0_9295 -> bb228__0_9295 [label="return"];
    bb227__0_9295 -> bb271__0_9295 [label="unwind"];
    bb228__0_9295 -> bb229__0_9295 [label="return"];
    bb228__0_9295 -> bb271__0_9295 [label="unwind"];
    bb229__0_9295 -> bb230__0_9295 [label="return"];
    bb229__0_9295 -> bb271__0_9295 [label="unwind"];
    bb230__0_9295 -> bb231__0_9295 [label="return"];
    bb230__0_9295 -> bb270__0_9295 [label="unwind"];
    bb231__0_9295 -> bb232__0_9295 [label="return"];
    bb231__0_9295 -> bb270__0_9295 [label="unwind"];
    bb232__0_9295 -> bb233__0_9295 [label="return"];
    bb232__0_9295 -> bb271__0_9295 [label="unwind"];
    bb233__0_9295 -> bb234__0_9295 [label="return"];
    bb233__0_9295 -> bb271__0_9295 [label="unwind"];
    bb234__0_9295 -> bb235__0_9295 [label=""];
    bb235__0_9295 -> bb236__0_9295 [label="return"];
    bb235__0_9295 -> bb271__0_9295 [label="unwind"];
    bb236__0_9295 -> bb237__0_9295 [label="0"];
    bb236__0_9295 -> bb238__0_9295 [label="1"];
    bb236__0_9295 -> bb4__0_9295 [label="otherwise"];
    bb237__0_9295 -> bb240__0_9295 [label="return"];
    bb237__0_9295 -> bb282__0_9295 [label="unwind"];
    bb238__0_9295 -> bb239__0_9295 [label="return"];
    bb238__0_9295 -> bb271__0_9295 [label="unwind"];
    bb239__0_9295 -> bb246__0_9295 [label=""];
    bb240__0_9295 -> bb242__0_9295 [label=""];
    bb241__0_9295 -> bb242__0_9295 [label=""];
    bb242__0_9295 -> bb243__0_9295 [label="return"];
    bb242__0_9295 -> bb283__0_9295 [label="unwind"];
    bb243__0_9295 -> bb244__0_9295 [label="return"];
    bb243__0_9295 -> bb284__0_9295 [label="unwind"];
    bb244__0_9295 -> bb245__0_9295 [label="return"];
    bb244__0_9295 -> bb288__0_9295 [label="unwind"];
    bb245__0_9295 -> bb269__0_9295 [label=""];
    bb246__0_9295 -> bb247__0_9295 [label="return"];
    bb246__0_9295 -> bb282__0_9295 [label="unwind"];
    bb247__0_9295 -> bb248__0_9295 [label=""];
    bb248__0_9295 -> bb256__0_9295 [label=""];
    bb249__0_9295 -> bb250__0_9295 [label="return"];
    bb249__0_9295 -> bb282__0_9295 [label="unwind"];
    bb250__0_9295 -> bb256__0_9295 [label=""];
    bb251__0_9295 -> bb253__0_9295 [label=""];
    bb252__0_9295 -> bb253__0_9295 [label=""];
    bb253__0_9295 -> bb254__0_9295 [label="return"];
    bb253__0_9295 -> bb279__0_9295 [label="unwind"];
    bb254__0_9295 -> bb255__0_9295 [label="return"];
    bb254__0_9295 -> bb282__0_9295 [label="unwind"];
    bb255__0_9295 -> bb256__0_9295 [label=""];
    bb256__0_9295 -> bb260__0_9295 [label=""];
    bb257__0_9295 -> bb258__0_9295 [label=""];
    bb258__0_9295 -> bb259__0_9295 [label="return"];
    bb258__0_9295 -> bb282__0_9295 [label="unwind"];
    bb259__0_9295 -> bb260__0_9295 [label=""];
    bb260__0_9295 -> bb261__0_9295 [label="return"];
    bb260__0_9295 -> bb283__0_9295 [label="unwind"];
    bb261__0_9295 -> bb262__0_9295 [label="return"];
    bb261__0_9295 -> bb284__0_9295 [label="unwind"];
    bb262__0_9295 -> bb263__0_9295 [label="return"];
    bb262__0_9295 -> bb288__0_9295 [label="unwind"];
    bb263__0_9295 -> bb266__0_9295 [label=""];
    bb264__0_9295 -> bb265__0_9295 [label="return"];
    bb264__0_9295 -> bb288__0_9295 [label="unwind"];
    bb265__0_9295 -> bb266__0_9295 [label=""];
    bb266__0_9295 -> bb267__0_9295 [label=""];
    bb267__0_9295 -> bb268__0_9295 [label=""];
    bb268__0_9295 -> bb269__0_9295 [label=""];
    bb270__0_9295 -> bb271__0_9295 [label="return"];
    bb271__0_9295 -> bb282__0_9295 [label="return"];
    bb272__0_9295 -> bb282__0_9295 [label="return"];
    bb273__0_9295 -> bb282__0_9295 [label="return"];
    bb274__0_9295 -> bb278__0_9295 [label="return"];
    bb275__0_9295 -> bb278__0_9295 [label="return"];
    bb276__0_9295 -> bb278__0_9295 [label="return"];
    bb277__0_9295 -> bb278__0_9295 [label="return"];
    bb278__0_9295 -> bb279__0_9295 [label="return"];
    bb279__0_9295 -> bb282__0_9295 [label="return"];
    bb280__0_9295 -> bb282__0_9295 [label="return"];
    bb281__0_9295 -> bb282__0_9295 [label="return"];
    bb282__0_9295 -> bb283__0_9295 [label="return"];
    bb283__0_9295 -> bb284__0_9295 [label="return"];
    bb284__0_9295 -> bb288__0_9295 [label="return"];
    bb285__0_9295 -> bb286__0_9295 [label="return"];
    bb286__0_9295 -> bb288__0_9295 [label="return"];
    bb287__0_9295 -> bb288__0_9295 [label="return"];
    bb289__0_9295 -> bb271__0_9295 [label=""];
    bb290__0_9295 -> bb282__0_9295 [label=""];
    bb291__0_9295 -> bb279__0_9295 [label=""];
    bb292__0_9295 -> bb282__0_9295 [label=""];
    bb293__0_9295 -> bb280__0_9295 [label=""];
    bb294__0_9295 -> bb280__0_9295 [label=""];
    bb295__0_9295 -> bb280__0_9295 [label=""];
    bb296__0_9295 -> bb280__0_9295 [label=""];
    bb297__0_9295 -> bb282__0_9295 [label=""];
    bb298__0_9295 -> bb285__0_9295 [label=""];
    bb299__0_9295 -> bb288__0_9295 [label=""];
    bb300__0_9295 -> bb288__0_9295 [label=""];
}
