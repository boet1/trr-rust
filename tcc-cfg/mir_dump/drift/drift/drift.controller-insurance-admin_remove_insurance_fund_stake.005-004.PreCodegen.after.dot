digraph Mir_0_200 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin_remove_insurance_fund_stake(_1: u64, _2: u128, _3: &amp;ReErased mut state::spot_market::SpotMarket, _4: i64, _5: anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: u128;<br align="left"/>let _17: u128;<br align="left"/>let _18: u128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: u128;<br align="left"/>let _28: ();<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _30: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _31: bool;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: ();<br align="left"/>let _35: error::ErrorCode;<br align="left"/>let _36: ();<br align="left"/>let mut _37: &amp;ReErased str;<br align="left"/>let _38: &amp;ReErased str;<br align="left"/>let mut _39: &amp;ReErased std::string::String;<br align="left"/>let _40: &amp;ReErased std::string::String;<br align="left"/>let _41: std::string::String;<br align="left"/>let _42: std::string::String;<br align="left"/>let mut _43: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _45: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _46: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _47: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _49: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _51: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _52: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _53: &amp;ReErased error::ErrorCode;<br align="left"/>let _54: &amp;ReErased error::ErrorCode;<br align="left"/>let _55: ();<br align="left"/>let mut _56: &amp;ReErased str;<br align="left"/>let _57: &amp;ReErased str;<br align="left"/>let mut _58: &amp;ReErased std::string::String;<br align="left"/>let _59: &amp;ReErased std::string::String;<br align="left"/>let _60: std::string::String;<br align="left"/>let _61: std::string::String;<br align="left"/>let mut _62: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _63: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _64: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _65: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _66: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _67: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _68: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _70: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _71: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased u128;<br align="left"/>let _73: &amp;ReErased u128;<br align="left"/>let mut _74: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased u128;<br align="left"/>let _76: &amp;ReErased u128;<br align="left"/>let mut _77: error::ErrorCode;<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: ();<br align="left"/>let _83: u64;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _85: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _86: u128;<br align="left"/>let mut _87: u128;<br align="left"/>let mut _88: u64;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: u64;<br align="left"/>let mut _94: u128;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _96: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _97: u128;<br align="left"/>let mut _98: u128;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: u128;<br align="left"/>let _104: u128;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _106: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: u128;<br align="left"/>let mut _109: isize;<br align="left"/>let _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _113: u128;<br align="left"/>let _114: ();<br align="left"/>let _115: ();<br align="left"/>let mut _116: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _117: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _118: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _119: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _120: &amp;ReErased [u8];<br align="left"/>let _121: &amp;ReErased [u8];<br align="left"/>let mut _122: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _123: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _124: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _125: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _126: &amp;ReErased state::events::InsuranceFundStakeRecord;<br align="left"/>let _127: state::events::InsuranceFundStakeRecord;<br align="left"/>let mut _128: i64;<br align="left"/>let mut _129: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _130: state::events::StakeAction;<br align="left"/>let mut _131: u64;<br align="left"/>let mut _132: u16;<br align="left"/>let mut _133: u64;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: u128;<br align="left"/>let mut _136: u128;<br align="left"/>let mut _137: u128;<br align="left"/>let mut _138: u128;<br align="left"/>let mut _139: u128;<br align="left"/>let mut _140: u64;<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug insurance_vault_amount =&gt; _1;<br align="left"/>debug n_shares =&gt; _2;<br align="left"/>debug spot_market =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug admin_pubkey =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug total_if_shares_before =&gt; _16;<br align="left"/>debug user_if_shares_before =&gt; _17;<br align="left"/>debug if_shares_before =&gt; _18;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug error_code =&gt; _35;<br align="left"/>debug res =&gt; _42;<br align="left"/>debug res =&gt; _61;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug withdraw_amount =&gt; _83;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug if_shares_after =&gt; _104;<br align="left"/>debug residual =&gt; _110;<br align="left"/>debug val =&gt; _113;<br align="left"/>>;
    bb0__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _1<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_8 = apply_rebase_to_insurance_fund(move _9, move _10)</td></tr></table>>];
    bb1__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: ())<br/>_6 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>_16 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_17)<br/>_17 = (((*_3).9: state::spot_market::InsuranceFund).2: u128)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _16<br/>StorageLive(_22)<br/>_22 = _17<br/></td></tr><tr><td align="left">_20 = &lt;u128 as SafeMath&gt;::safe_sub(move _21, move _22)</td></tr></table>>];
    bb4__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb8__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_23 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb9__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_19 as Continue).0: u128)<br/>_18 = _27<br/>StorageDead(_27)<br/>StorageDead(_19)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = _18<br/>StorageLive(_33)<br/>_33 = _2<br/>_31 = Ge(move _32, move _33)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb10__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb11__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_34)<br/>_34 = ()<br/>_30 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _34)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_35)<br/>_35 = error::ErrorCode::InsufficientIFShares<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_142 = const _<br/>_46 = &amp;(*_142)<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;_35<br/>_53 = &amp;(*_54)<br/></td></tr><tr><td align="left">_52 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _53)</td></tr></table>>];
    bb14__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_51 = [move _52]<br/>StorageDead(_52)<br/>_50 = &amp;_51<br/>_49 = &amp;(*_50)<br/>_48 = move _49 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_43 = Arguments::&lt;'_&gt;::new_v1(move _44, move _48)</td></tr></table>>];
    bb15__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = format(move _43)</td></tr></table>>];
    bb16__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>_41 = move _42<br/>StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = &lt;String as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb17__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_37 = &amp;(*_38)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_36 = solana_program::log::sol_log(move _37)</td></tr></table>>];
    bb18__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb19__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_141 = const _<br/>_65 = &amp;(*_141)<br/>_64 = &amp;(*_65)<br/>_63 = move _64 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_18<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _72)</td></tr></table>>];
    bb20__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_2<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _75)</td></tr></table>>];
    bb21__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_70 = [move _71, move _74]<br/>StorageDead(_74)<br/>StorageDead(_71)<br/>_69 = &amp;_70<br/>_68 = &amp;(*_69)<br/>_67 = move _68 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_62 = Arguments::&lt;'_&gt;::new_v1(move _63, move _67)</td></tr></table>>];
    bb22__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = format(move _62)</td></tr></table>>];
    bb23__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_65)<br/>_60 = move _61<br/>StorageDead(_61)<br/>_59 = &amp;_60<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = &lt;String as Deref&gt;::deref(move _58)</td></tr></table>>];
    bb24__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_56 = &amp;(*_57)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_55 = solana_program::log::sol_log(move _56)</td></tr></table>>];
    bb25__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb26__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageLive(_77)<br/>_77 = _35<br/>_30 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _77)<br/>StorageDead(_77)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb28__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_78 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb29__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_29 as Continue).0: ())<br/>_28 = _82<br/>StorageDead(_82)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = _2<br/>StorageLive(_87)<br/>_87 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_88)<br/>_88 = _1<br/></td></tr><tr><td align="left">_85 = if_shares_to_vault_amount(move _86, move _87, move _88)</td></tr></table>>];
    bb30__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb31__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb33__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_89 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb34__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_84 as Continue).0: u64)<br/>_83 = _93<br/>StorageDead(_93)<br/>StorageDead(_84)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_98)<br/>_98 = _2<br/></td></tr><tr><td align="left">_96 = &lt;u128 as SafeMath&gt;::safe_sub(move _97, move _98)</td></tr></table>>];
    bb35__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb36__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb38__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_99 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb39__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_95 as Continue).0: u128)<br/>_94 = _103<br/>StorageDead(_103)<br/>(((*_3).9: state::spot_market::InsuranceFund).1: u128) = move _94<br/>StorageDead(_94)<br/>StorageDead(_95)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_108)<br/>_108 = _17<br/></td></tr><tr><td align="left">_106 = &lt;u128 as SafeMath&gt;::safe_sub(move _107, move _108)</td></tr></table>>];
    bb40__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb41__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_94)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb43__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_109 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb44__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_105 as Continue).0: u128)<br/>_104 = _113<br/>StorageDead(_113)<br/>StorageDead(_105)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = _4<br/>StorageLive(_129)<br/>_129 = _5<br/>StorageLive(_130)<br/>_130 = StakeAction::Unstake<br/>StorageLive(_131)<br/>_131 = _83<br/>StorageLive(_132)<br/>_132 = ((*_3).42: u16)<br/>StorageLive(_133)<br/>_133 = _1<br/>StorageLive(_134)<br/>_134 = _18<br/>StorageLive(_135)<br/>_135 = _17<br/>StorageLive(_136)<br/>_136 = _16<br/>StorageLive(_137)<br/>_137 = _104<br/>StorageLive(_138)<br/>_138 = (((*_3).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_139)<br/>_139 = (((*_3).9: state::spot_market::InsuranceFund).2: u128)<br/>_127 = InsuranceFundStakeRecord { ts: move _128, user_authority: move _129, action: move _130, amount: move _131, market_index: move _132, insurance_vault_amount_before: move _133, if_shares_before: move _134, user_if_shares_before: move _135, total_if_shares_before: move _136, if_shares_after: move _137, user_if_shares_after: move _139, total_if_shares_after: move _138 }<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>_126 = &amp;_127<br/>_125 = &amp;(*_126)<br/></td></tr><tr><td align="left">_124 = &lt;InsuranceFundStakeRecord as anchor_lang::Event&gt;::data(move _125)</td></tr></table>>];
    bb45__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_112)<br/>_112 = _110<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _112)</td></tr></table>>];
    bb46__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_123 = &amp;_124<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_121 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _122)</td></tr></table>>];
    bb48__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_120 = &amp;(*_121)<br/>StorageDead(_122)<br/>_119 = [move _120]<br/>StorageDead(_120)<br/>_118 = &amp;_119<br/>_117 = &amp;(*_118)<br/>_116 = move _117 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = solana_program::log::sol_log_data(move _116)</td></tr></table>>];
    bb49__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb50__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_115)<br/>_114 = const ()<br/>StorageDead(_114)<br/>StorageLive(_140)<br/>_140 = _83<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _140)<br/>StorageDead(_140)<br/>StorageDead(_104)<br/>StorageDead(_83)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left">return</td></tr></table>>];
    bb54__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_124)</td></tr></table>>];
    bb55__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">drop(_60)</td></tr></table>>];
    bb56__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb57__0_200 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_200 -> bb1__0_200 [label="return"];
    bb1__0_200 -> bb2__0_200 [label="return"];
    bb2__0_200 -> bb3__0_200 [label="0"];
    bb2__0_200 -> bb5__0_200 [label="1"];
    bb2__0_200 -> bb4__0_200 [label="otherwise"];
    bb3__0_200 -> bb7__0_200 [label="return"];
    bb5__0_200 -> bb6__0_200 [label="return"];
    bb6__0_200 -> bb53__0_200 [label=""];
    bb7__0_200 -> bb8__0_200 [label="return"];
    bb8__0_200 -> bb9__0_200 [label="0"];
    bb8__0_200 -> bb10__0_200 [label="1"];
    bb8__0_200 -> bb4__0_200 [label="otherwise"];
    bb9__0_200 -> bb13__0_200 [label="0"];
    bb9__0_200 -> bb12__0_200 [label="otherwise"];
    bb10__0_200 -> bb11__0_200 [label="return"];
    bb11__0_200 -> bb52__0_200 [label=""];
    bb12__0_200 -> bb27__0_200 [label=""];
    bb13__0_200 -> bb14__0_200 [label="return"];
    bb14__0_200 -> bb15__0_200 [label="return"];
    bb15__0_200 -> bb16__0_200 [label="return"];
    bb16__0_200 -> bb17__0_200 [label="return"];
    bb16__0_200 -> bb56__0_200 [label="unwind"];
    bb17__0_200 -> bb18__0_200 [label="return"];
    bb17__0_200 -> bb56__0_200 [label="unwind"];
    bb18__0_200 -> bb19__0_200 [label="return"];
    bb18__0_200 -> bb57__0_200 [label="unwind"];
    bb19__0_200 -> bb20__0_200 [label="return"];
    bb20__0_200 -> bb21__0_200 [label="return"];
    bb21__0_200 -> bb22__0_200 [label="return"];
    bb22__0_200 -> bb23__0_200 [label="return"];
    bb23__0_200 -> bb24__0_200 [label="return"];
    bb23__0_200 -> bb55__0_200 [label="unwind"];
    bb24__0_200 -> bb25__0_200 [label="return"];
    bb24__0_200 -> bb55__0_200 [label="unwind"];
    bb25__0_200 -> bb26__0_200 [label="return"];
    bb25__0_200 -> bb57__0_200 [label="unwind"];
    bb26__0_200 -> bb27__0_200 [label=""];
    bb27__0_200 -> bb28__0_200 [label="return"];
    bb28__0_200 -> bb29__0_200 [label="0"];
    bb28__0_200 -> bb30__0_200 [label="1"];
    bb28__0_200 -> bb4__0_200 [label="otherwise"];
    bb29__0_200 -> bb32__0_200 [label="return"];
    bb30__0_200 -> bb31__0_200 [label="return"];
    bb31__0_200 -> bb52__0_200 [label=""];
    bb32__0_200 -> bb33__0_200 [label="return"];
    bb33__0_200 -> bb34__0_200 [label="0"];
    bb33__0_200 -> bb35__0_200 [label="1"];
    bb33__0_200 -> bb4__0_200 [label="otherwise"];
    bb34__0_200 -> bb37__0_200 [label="return"];
    bb35__0_200 -> bb36__0_200 [label="return"];
    bb36__0_200 -> bb51__0_200 [label=""];
    bb37__0_200 -> bb38__0_200 [label="return"];
    bb38__0_200 -> bb39__0_200 [label="0"];
    bb38__0_200 -> bb40__0_200 [label="1"];
    bb38__0_200 -> bb4__0_200 [label="otherwise"];
    bb39__0_200 -> bb42__0_200 [label="return"];
    bb40__0_200 -> bb41__0_200 [label="return"];
    bb41__0_200 -> bb51__0_200 [label=""];
    bb42__0_200 -> bb43__0_200 [label="return"];
    bb43__0_200 -> bb44__0_200 [label="0"];
    bb43__0_200 -> bb45__0_200 [label="1"];
    bb43__0_200 -> bb4__0_200 [label="otherwise"];
    bb44__0_200 -> bb47__0_200 [label="return"];
    bb45__0_200 -> bb46__0_200 [label="return"];
    bb46__0_200 -> bb51__0_200 [label=""];
    bb47__0_200 -> bb48__0_200 [label="return"];
    bb47__0_200 -> bb54__0_200 [label="unwind"];
    bb48__0_200 -> bb49__0_200 [label="return"];
    bb48__0_200 -> bb54__0_200 [label="unwind"];
    bb49__0_200 -> bb50__0_200 [label="return"];
    bb49__0_200 -> bb57__0_200 [label="unwind"];
    bb50__0_200 -> bb53__0_200 [label=""];
    bb51__0_200 -> bb52__0_200 [label=""];
    bb52__0_200 -> bb53__0_200 [label=""];
    bb54__0_200 -> bb57__0_200 [label="return"];
    bb55__0_200 -> bb57__0_200 [label="return"];
    bb56__0_200 -> bb57__0_200 [label="return"];
}
