// MIR for `spot_market_map::<impl at programs/drift/src/state/spot_market_map.rs:24:1: 24:27>::get_quote_spot_market_mut` after PreCodegen

fn spot_market_map::<impl at programs/drift/src/state/spot_market_map.rs:24:1: 24:27>::get_quote_spot_market_mut(_1: &SpotMarketMap<'_>) -> std::result::Result<RefMut<'_, SpotMarket>, error::ErrorCode> {
    debug self => _1;
    let mut _0: std::result::Result<std::cell::RefMut<'_, state::spot_market::SpotMarket>, error::ErrorCode>;
    let _2: ();
    let mut _3: bool;
    let mut _4: &std::collections::BTreeSet<u16>;
    let mut _5: &u16;
    let _6: &u16;
    let _7: u16;
    let mut _8: !;
    let _9: &std::panic::Location<'_>;
    let _10: ();
    let mut _11: &str;
    let _12: &str;
    let mut _13: &std::string::String;
    let _14: &std::string::String;
    let _15: std::string::String;
    let mut _17: std::fmt::Arguments<'_>;
    let mut _18: &[&str];
    let mut _19: &[&str; 3];
    let _20: &[&str; 3];
    let _21: [&str; 3];
    let mut _22: &[core::fmt::rt::Argument<'_>];
    let mut _23: &[core::fmt::rt::Argument<'_>; 3];
    let _24: &[core::fmt::rt::Argument<'_>; 3];
    let _25: [core::fmt::rt::Argument<'_>; 3];
    let mut _26: core::fmt::rt::Argument<'_>;
    let mut _27: &u16;
    let _28: &u16;
    let _29: u16;
    let mut _30: core::fmt::rt::Argument<'_>;
    let mut _31: &&str;
    let _32: &&str;
    let _33: &str;
    let mut _34: &std::panic::Location<'_>;
    let mut _35: core::fmt::rt::Argument<'_>;
    let mut _36: &u32;
    let _37: &u32;
    let _38: u32;
    let mut _39: &std::panic::Location<'_>;
    let mut _40: error::ErrorCode;
    let _41: &anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>;
    let mut _42: std::option::Option<&anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>>;
    let mut _43: &std::collections::BTreeMap<u16, anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>>;
    let mut _44: &u16;
    let _45: &u16;
    let _46: u16;
    let mut _47: isize;
    let _48: &anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>;
    let mut _49: !;
    let _50: &std::panic::Location<'_>;
    let _51: ();
    let mut _52: &str;
    let _53: &str;
    let mut _54: &std::string::String;
    let _55: &std::string::String;
    let _56: std::string::String;
    let mut _58: std::fmt::Arguments<'_>;
    let mut _59: &[&str];
    let mut _60: &[&str; 3];
    let _61: &[&str; 3];
    let _62: [&str; 3];
    let mut _63: &[core::fmt::rt::Argument<'_>];
    let mut _64: &[core::fmt::rt::Argument<'_>; 3];
    let _65: &[core::fmt::rt::Argument<'_>; 3];
    let _66: [core::fmt::rt::Argument<'_>; 3];
    let mut _67: core::fmt::rt::Argument<'_>;
    let mut _68: &u16;
    let _69: &u16;
    let _70: u16;
    let mut _71: core::fmt::rt::Argument<'_>;
    let mut _72: &&str;
    let _73: &&str;
    let _74: &str;
    let mut _75: &std::panic::Location<'_>;
    let mut _76: core::fmt::rt::Argument<'_>;
    let mut _77: &u32;
    let _78: &u32;
    let _79: u32;
    let mut _80: &std::panic::Location<'_>;
    let mut _81: error::ErrorCode;
    let mut _82: std::result::Result<std::cell::RefMut<'_, state::spot_market::SpotMarket>, anchor_lang::error::Error>;
    let mut _83: &anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>;
    let mut _84: isize;
    let mut _86: std::cell::RefMut<'_, state::spot_market::SpotMarket>;
    let _89: ();
    let mut _90: &str;
    let _91: &str;
    let mut _92: &std::string::String;
    let _93: &std::string::String;
    let _94: std::string::String;
    let mut _96: std::fmt::Arguments<'_>;
    let mut _97: &[&str];
    let mut _98: &[&str; 1];
    let _99: &[&str; 1];
    let _100: [&str; 1];
    let mut _101: &[core::fmt::rt::Argument<'_>];
    let mut _102: &[core::fmt::rt::Argument<'_>; 1];
    let _103: &[core::fmt::rt::Argument<'_>; 1];
    let _104: [core::fmt::rt::Argument<'_>; 1];
    let mut _105: core::fmt::rt::Argument<'_>;
    let mut _106: &anchor_lang::error::Error;
    let _107: &anchor_lang::error::Error;
    let _108: ();
    let mut _109: &str;
    let _110: &str;
    let mut _111: &std::string::String;
    let _112: &std::string::String;
    let _113: std::string::String;
    let mut _115: std::fmt::Arguments<'_>;
    let mut _116: &[&str];
    let mut _117: &[&str; 3];
    let _118: &[&str; 3];
    let _119: [&str; 3];
    let mut _120: &[core::fmt::rt::Argument<'_>];
    let mut _121: &[core::fmt::rt::Argument<'_>; 3];
    let _122: &[core::fmt::rt::Argument<'_>; 3];
    let _123: [core::fmt::rt::Argument<'_>; 3];
    let mut _124: core::fmt::rt::Argument<'_>;
    let mut _125: &u16;
    let _126: &u16;
    let _127: u16;
    let mut _128: core::fmt::rt::Argument<'_>;
    let mut _129: &&str;
    let _130: &&str;
    let _131: &str;
    let mut _132: &std::panic::Location<'_>;
    let mut _133: core::fmt::rt::Argument<'_>;
    let mut _134: &u32;
    let _135: &u32;
    let _136: u32;
    let mut _137: &std::panic::Location<'_>;
    let mut _138: error::ErrorCode;
    let mut _144: &u16;
    let mut _147: &u16;
    let mut _148: bool;
    let mut _149: bool;
    let mut _150: isize;
    let mut _151: isize;
    let mut _152: isize;
    scope 1 {
        debug caller => _9;
        let _16: std::string::String;
        let mut _145: &u16;
        let mut _146: &[&str; 3];
        scope 2 {
            debug res => _16;
        }
    }
    scope 3 {
        debug loader => _41;
        let _85: std::cell::RefMut<'_, state::spot_market::SpotMarket>;
        let _87: anchor_lang::error::Error;
        scope 7 {
            debug spot_market => _85;
        }
        scope 8 {
            debug e => _87;
            let _88: &std::panic::Location<'_>;
            scope 9 {
                debug caller => _88;
                let _95: std::string::String;
                let _114: std::string::String;
                let mut _141: &u16;
                let mut _142: &[&str; 3];
                let mut _143: &[&str; 1];
                scope 10 {
                    debug res => _95;
                }
                scope 11 {
                    debug res => _114;
                }
            }
        }
    }
    scope 4 {
        debug loader => _48;
    }
    scope 5 {
        debug caller => _50;
        let _57: std::string::String;
        let mut _139: &u16;
        let mut _140: &[&str; 3];
        scope 6 {
            debug res => _57;
        }
    }

    bb0: {
        _149 = const false;
        _148 = const false;
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = &((*_1).1: std::collections::BTreeSet<u16>);
        StorageLive(_5);
        StorageLive(_6);
        _147 = const _;
        _6 = &(*_147);
        _5 = &(*_6);
        _3 = BTreeSet::<u16>::contains::<u16>(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb3, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_6);
        _2 = const ();
        StorageDead(_3);
        StorageDead(_2);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &((*_1).0: std::collections::BTreeMap<u16, anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>>);
        StorageLive(_44);
        StorageLive(_45);
        _144 = const _;
        _45 = &(*_144);
        _44 = &(*_45);
        _42 = BTreeMap::<u16, anchor_lang::prelude::AccountLoader<'_, SpotMarket>>::get::<u16>(move _43, move _44) -> [return: bb15, unwind continue];
    }

    bb3: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_6);
        StorageLive(_9);
        _9 = Location::<'_>::caller() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _146 = const _;
        _20 = &(*_146);
        _19 = &(*_20);
        _18 = move _19 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_19);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _145 = const _;
        _28 = &(*_145);
        _27 = &(*_28);
        _26 = core::fmt::rt::Argument::<'_>::new_display::<u16>(move _27) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_27);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &(*_9);
        _33 = Location::<'_>::file(move _34) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_34);
        _32 = &_33;
        _31 = &(*_32);
        _30 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _31) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_31);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &(*_9);
        _38 = Location::<'_>::line(move _39) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_39);
        _37 = &_38;
        _36 = &(*_37);
        _35 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _36) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_36);
        _25 = [move _26, move _30, move _35];
        StorageDead(_35);
        StorageDead(_30);
        StorageDead(_26);
        _24 = &_25;
        _23 = &(*_24);
        _22 = move _23 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_23);
        _17 = Arguments::<'_>::new_v1(move _18, move _22) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_22);
        StorageDead(_18);
        _16 = format(move _17) -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageDead(_17);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_20);
        _15 = move _16;
        StorageDead(_16);
        _14 = &_15;
        _13 = &(*_14);
        _12 = <String as Deref>::deref(move _13) -> [return: bb12, unwind: bb57];
    }

    bb12: {
        _11 = &(*_12);
        StorageDead(_13);
        _10 = solana_program::log::sol_log(move _11) -> [return: bb13, unwind: bb57];
    }

    bb13: {
        StorageDead(_11);
        drop(_15) -> [return: bb14, unwind: bb58];
    }

    bb14: {
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_12);
        StorageDead(_10);
        StorageLive(_40);
        _40 = error::ErrorCode::SpotMarketWrongMutability;
        _0 = std::result::Result::<RefMut<'_, SpotMarket>, error::ErrorCode>::Err(move _40);
        StorageDead(_40);
        StorageDead(_9);
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb52;
    }

    bb15: {
        StorageDead(_44);
        StorageDead(_43);
        _47 = discriminant(_42);
        switchInt(move _47) -> [0: bb16, 1: bb18, otherwise: bb17];
    }

    bb16: {
        StorageLive(_50);
        _50 = Location::<'_>::caller() -> [return: bb19, unwind continue];
    }

    bb17: {
        unreachable;
    }

    bb18: {
        StorageLive(_48);
        _48 = ((_42 as Some).0: &anchor_lang::prelude::AccountLoader<'_, state::spot_market::SpotMarket>);
        _41 = _48;
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        StorageLive(_82);
        StorageLive(_83);
        _83 = &(*_41);
        _148 = const true;
        _149 = const true;
        _82 = anchor_lang::prelude::AccountLoader::<'_, SpotMarket>::load_mut(move _83) -> [return: bb30, unwind continue];
    }

    bb19: {
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        StorageLive(_60);
        StorageLive(_61);
        _140 = const _;
        _61 = &(*_140);
        _60 = &(*_61);
        _59 = move _60 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_60);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        _139 = const _;
        _69 = &(*_139);
        _68 = &(*_69);
        _67 = core::fmt::rt::Argument::<'_>::new_display::<u16>(move _68) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_68);
        StorageLive(_71);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        StorageLive(_75);
        _75 = &(*_50);
        _74 = Location::<'_>::file(move _75) -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageDead(_75);
        _73 = &_74;
        _72 = &(*_73);
        _71 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _72) -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageDead(_72);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &(*_50);
        _79 = Location::<'_>::line(move _80) -> [return: bb23, unwind continue];
    }

    bb23: {
        StorageDead(_80);
        _78 = &_79;
        _77 = &(*_78);
        _76 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _77) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_77);
        _66 = [move _67, move _71, move _76];
        StorageDead(_76);
        StorageDead(_71);
        StorageDead(_67);
        _65 = &_66;
        _64 = &(*_65);
        _63 = move _64 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_64);
        _58 = Arguments::<'_>::new_v1(move _59, move _63) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_63);
        StorageDead(_59);
        _57 = format(move _58) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_58);
        StorageDead(_79);
        StorageDead(_78);
        StorageDead(_74);
        StorageDead(_73);
        StorageDead(_69);
        StorageDead(_66);
        StorageDead(_65);
        StorageDead(_61);
        _56 = move _57;
        StorageDead(_57);
        _55 = &_56;
        _54 = &(*_55);
        _53 = <String as Deref>::deref(move _54) -> [return: bb27, unwind: bb56];
    }

    bb27: {
        _52 = &(*_53);
        StorageDead(_54);
        _51 = solana_program::log::sol_log(move _52) -> [return: bb28, unwind: bb56];
    }

    bb28: {
        StorageDead(_52);
        drop(_56) -> [return: bb29, unwind: bb58];
    }

    bb29: {
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_53);
        StorageDead(_51);
        StorageLive(_81);
        _81 = error::ErrorCode::SpotMarketNotFound;
        _0 = std::result::Result::<RefMut<'_, SpotMarket>, error::ErrorCode>::Err(move _81);
        StorageDead(_81);
        StorageDead(_50);
        StorageDead(_45);
        StorageDead(_42);
        StorageDead(_41);
        goto -> bb52;
    }

    bb30: {
        StorageDead(_83);
        _84 = discriminant(_82);
        switchInt(move _84) -> [0: bb32, 1: bb31, otherwise: bb17];
    }

    bb31: {
        StorageLive(_87);
        _87 = move ((_82 as Err).0: anchor_lang::error::Error);
        StorageLive(_88);
        _88 = Location::<'_>::caller() -> [return: bb33, unwind: bb55];
    }

    bb32: {
        StorageLive(_85);
        _85 = move ((_82 as Ok).0: std::cell::RefMut<'_, state::spot_market::SpotMarket>);
        StorageLive(_86);
        _86 = move _85;
        _0 = std::result::Result::<RefMut<'_, SpotMarket>, error::ErrorCode>::Ok(move _86);
        StorageDead(_86);
        StorageDead(_85);
        goto -> bb51;
    }

    bb33: {
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        StorageLive(_94);
        StorageLive(_95);
        StorageLive(_96);
        StorageLive(_97);
        StorageLive(_98);
        StorageLive(_99);
        _143 = const _;
        _99 = &(*_143);
        _98 = &(*_99);
        _97 = move _98 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_98);
        StorageLive(_101);
        StorageLive(_102);
        StorageLive(_103);
        StorageLive(_104);
        StorageLive(_105);
        StorageLive(_106);
        StorageLive(_107);
        _107 = &_87;
        _106 = &(*_107);
        _105 = core::fmt::rt::Argument::<'_>::new_debug::<anchor_lang::error::Error>(move _106) -> [return: bb34, unwind: bb55];
    }

    bb34: {
        StorageDead(_106);
        _104 = [move _105];
        StorageDead(_105);
        _103 = &_104;
        _102 = &(*_103);
        _101 = move _102 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_102);
        _96 = Arguments::<'_>::new_v1(move _97, move _101) -> [return: bb35, unwind: bb55];
    }

    bb35: {
        StorageDead(_101);
        StorageDead(_97);
        _95 = format(move _96) -> [return: bb36, unwind: bb55];
    }

    bb36: {
        StorageDead(_96);
        StorageDead(_107);
        StorageDead(_104);
        StorageDead(_103);
        StorageDead(_99);
        _94 = move _95;
        StorageDead(_95);
        _93 = &_94;
        _92 = &(*_93);
        _91 = <String as Deref>::deref(move _92) -> [return: bb37, unwind: bb54];
    }

    bb37: {
        _90 = &(*_91);
        StorageDead(_92);
        _89 = solana_program::log::sol_log(move _90) -> [return: bb38, unwind: bb54];
    }

    bb38: {
        StorageDead(_90);
        drop(_94) -> [return: bb39, unwind: bb55];
    }

    bb39: {
        StorageDead(_94);
        StorageDead(_93);
        StorageDead(_91);
        StorageDead(_89);
        StorageLive(_108);
        StorageLive(_109);
        StorageLive(_110);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        StorageLive(_115);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        _142 = const _;
        _118 = &(*_142);
        _117 = &(*_118);
        _116 = move _117 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_117);
        StorageLive(_120);
        StorageLive(_121);
        StorageLive(_122);
        StorageLive(_123);
        StorageLive(_124);
        StorageLive(_125);
        StorageLive(_126);
        _141 = const _;
        _126 = &(*_141);
        _125 = &(*_126);
        _124 = core::fmt::rt::Argument::<'_>::new_display::<u16>(move _125) -> [return: bb40, unwind: bb55];
    }

    bb40: {
        StorageDead(_125);
        StorageLive(_128);
        StorageLive(_129);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        _132 = &(*_88);
        _131 = Location::<'_>::file(move _132) -> [return: bb41, unwind: bb55];
    }

    bb41: {
        StorageDead(_132);
        _130 = &_131;
        _129 = &(*_130);
        _128 = core::fmt::rt::Argument::<'_>::new_display::<&str>(move _129) -> [return: bb42, unwind: bb55];
    }

    bb42: {
        StorageDead(_129);
        StorageLive(_133);
        StorageLive(_134);
        StorageLive(_135);
        StorageLive(_136);
        StorageLive(_137);
        _137 = &(*_88);
        _136 = Location::<'_>::line(move _137) -> [return: bb43, unwind: bb55];
    }

    bb43: {
        StorageDead(_137);
        _135 = &_136;
        _134 = &(*_135);
        _133 = core::fmt::rt::Argument::<'_>::new_display::<u32>(move _134) -> [return: bb44, unwind: bb55];
    }

    bb44: {
        StorageDead(_134);
        _123 = [move _124, move _128, move _133];
        StorageDead(_133);
        StorageDead(_128);
        StorageDead(_124);
        _122 = &_123;
        _121 = &(*_122);
        _120 = move _121 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_121);
        _115 = Arguments::<'_>::new_v1(move _116, move _120) -> [return: bb45, unwind: bb55];
    }

    bb45: {
        StorageDead(_120);
        StorageDead(_116);
        _114 = format(move _115) -> [return: bb46, unwind: bb55];
    }

    bb46: {
        StorageDead(_115);
        StorageDead(_136);
        StorageDead(_135);
        StorageDead(_131);
        StorageDead(_130);
        StorageDead(_126);
        StorageDead(_123);
        StorageDead(_122);
        StorageDead(_118);
        _113 = move _114;
        StorageDead(_114);
        _112 = &_113;
        _111 = &(*_112);
        _110 = <String as Deref>::deref(move _111) -> [return: bb47, unwind: bb53];
    }

    bb47: {
        _109 = &(*_110);
        StorageDead(_111);
        _108 = solana_program::log::sol_log(move _109) -> [return: bb48, unwind: bb53];
    }

    bb48: {
        StorageDead(_109);
        drop(_113) -> [return: bb49, unwind: bb55];
    }

    bb49: {
        StorageDead(_113);
        StorageDead(_112);
        StorageDead(_110);
        StorageDead(_108);
        StorageLive(_138);
        _138 = error::ErrorCode::UnableToLoadSpotMarketAccount;
        _0 = std::result::Result::<RefMut<'_, SpotMarket>, error::ErrorCode>::Err(move _138);
        StorageDead(_138);
        StorageDead(_88);
        drop(_87) -> [return: bb50, unwind: bb59];
    }

    bb50: {
        StorageDead(_87);
        goto -> bb51;
    }

    bb51: {
        StorageDead(_41);
        _150 = discriminant(_82);
        _148 = const false;
        _149 = const false;
        StorageDead(_82);
        goto -> bb52;
    }

    bb52: {
        return;
    }

    bb53 (cleanup): {
        drop(_113) -> [return: bb55, unwind terminate(cleanup)];
    }

    bb54 (cleanup): {
        drop(_94) -> [return: bb55, unwind terminate(cleanup)];
    }

    bb55 (cleanup): {
        drop(_87) -> [return: bb59, unwind terminate(cleanup)];
    }

    bb56 (cleanup): {
        drop(_56) -> [return: bb58, unwind terminate(cleanup)];
    }

    bb57 (cleanup): {
        drop(_15) -> [return: bb58, unwind terminate(cleanup)];
    }

    bb58 (cleanup): {
        resume;
    }

    bb59 (cleanup): {
        _152 = discriminant(_82);
        goto -> bb58;
    }
}
