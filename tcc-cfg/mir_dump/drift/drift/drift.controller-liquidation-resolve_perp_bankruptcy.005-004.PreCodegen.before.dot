digraph Mir_0_352 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::liquidation::resolve_perp_bankruptcy(_1: u16, _2: &amp;ReErased mut state::user::User, _3: &amp;ReErased anchor_lang::prelude::Pubkey, _4: &amp;ReErased mut state::user::User, _5: &amp;ReErased anchor_lang::prelude::Pubkey, _6: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _7: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _8: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _9: i64, _10: u64) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let mut _13: &amp;ReErased state::user::User;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: &amp;ReErased state::user::User;<br align="left"/>let _16: ();<br align="left"/>let mut _17: &amp;ReErased mut state::user::User;<br align="left"/>let _18: ();<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _20: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: &amp;ReErased state::user::User;<br align="left"/>let mut _23: ();<br align="left"/>let _24: error::ErrorCode;<br align="left"/>let _25: ();<br align="left"/>let mut _26: &amp;ReErased str;<br align="left"/>let _27: &amp;ReErased str;<br align="left"/>let mut _28: &amp;ReErased std::string::String;<br align="left"/>let _29: &amp;ReErased std::string::String;<br align="left"/>let _30: std::string::String;<br align="left"/>let _31: std::string::String;<br align="left"/>let mut _32: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _33: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _34: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _35: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _36: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _37: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _38: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _40: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _41: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _42: &amp;ReErased error::ErrorCode;<br align="left"/>let _43: &amp;ReErased error::ErrorCode;<br align="left"/>let _44: ();<br align="left"/>let mut _45: &amp;ReErased str;<br align="left"/>let _46: &amp;ReErased str;<br align="left"/>let mut _47: &amp;ReErased std::string::String;<br align="left"/>let _48: &amp;ReErased std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let _50: std::string::String;<br align="left"/>let mut _51: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _53: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _54: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _55: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _56: error::ErrorCode;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: ();<br align="left"/>let _62: ();<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _64: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _65: bool;<br align="left"/>let mut _66: &amp;ReErased state::user::User;<br align="left"/>let mut _67: ();<br align="left"/>let _68: error::ErrorCode;<br align="left"/>let _69: ();<br align="left"/>let mut _70: &amp;ReErased str;<br align="left"/>let _71: &amp;ReErased str;<br align="left"/>let mut _72: &amp;ReErased std::string::String;<br align="left"/>let _73: &amp;ReErased std::string::String;<br align="left"/>let _74: std::string::String;<br align="left"/>let _75: std::string::String;<br align="left"/>let mut _76: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _78: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _79: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _80: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _82: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _83: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _84: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _85: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased error::ErrorCode;<br align="left"/>let _87: &amp;ReErased error::ErrorCode;<br align="left"/>let _88: ();<br align="left"/>let mut _89: &amp;ReErased str;<br align="left"/>let _90: &amp;ReErased str;<br align="left"/>let mut _91: &amp;ReErased std::string::String;<br align="left"/>let _92: &amp;ReErased std::string::String;<br align="left"/>let _93: std::string::String;<br align="left"/>let _94: std::string::String;<br align="left"/>let mut _95: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _96: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _98: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _99: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _100: error::ErrorCode;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: ();<br align="left"/>let _106: ();<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _108: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _109: bool;<br align="left"/>let mut _110: &amp;ReErased state::user::User;<br align="left"/>let mut _111: ();<br align="left"/>let _112: error::ErrorCode;<br align="left"/>let _113: ();<br align="left"/>let mut _114: &amp;ReErased str;<br align="left"/>let _115: &amp;ReErased str;<br align="left"/>let mut _116: &amp;ReErased std::string::String;<br align="left"/>let _117: &amp;ReErased std::string::String;<br align="left"/>let _118: std::string::String;<br align="left"/>let _119: std::string::String;<br align="left"/>let mut _120: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _122: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _123: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _124: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _126: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _127: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _128: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _129: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _130: &amp;ReErased error::ErrorCode;<br align="left"/>let _131: &amp;ReErased error::ErrorCode;<br align="left"/>let _132: ();<br align="left"/>let mut _133: &amp;ReErased str;<br align="left"/>let _134: &amp;ReErased str;<br align="left"/>let mut _135: &amp;ReErased std::string::String;<br align="left"/>let _136: &amp;ReErased std::string::String;<br align="left"/>let _137: std::string::String;<br align="left"/>let _138: std::string::String;<br align="left"/>let mut _139: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _142: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _143: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _144: error::ErrorCode;<br align="left"/>let mut _145: isize;<br align="left"/>let _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _147: !;<br align="left"/>let mut _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _149: ();<br align="left"/>let _150: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _151: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _152: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _153: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _154: &amp;ReErased u16;<br align="left"/>let _155: &amp;ReErased u16;<br align="left"/>let mut _156: isize;<br align="left"/>let _157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _158: !;<br align="left"/>let mut _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _160: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _161: ();<br align="left"/>let mut _162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _163: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _164: bool;<br align="left"/>let mut _165: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _166: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _167: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _168: state::paused_operations::PerpOperation;<br align="left"/>let mut _169: ();<br align="left"/>let _170: error::ErrorCode;<br align="left"/>let _171: ();<br align="left"/>let mut _172: &amp;ReErased str;<br align="left"/>let _173: &amp;ReErased str;<br align="left"/>let mut _174: &amp;ReErased std::string::String;<br align="left"/>let _175: &amp;ReErased std::string::String;<br align="left"/>let _176: std::string::String;<br align="left"/>let _177: std::string::String;<br align="left"/>let mut _178: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _179: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _180: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _181: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _182: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _183: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _184: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _185: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _186: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _187: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _188: &amp;ReErased error::ErrorCode;<br align="left"/>let _189: &amp;ReErased error::ErrorCode;<br align="left"/>let _190: ();<br align="left"/>let mut _191: &amp;ReErased str;<br align="left"/>let _192: &amp;ReErased str;<br align="left"/>let mut _193: &amp;ReErased std::string::String;<br align="left"/>let _194: &amp;ReErased std::string::String;<br align="left"/>let _195: std::string::String;<br align="left"/>let _196: std::string::String;<br align="left"/>let mut _197: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _198: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _199: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _200: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _201: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _202: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _203: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _204: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _205: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _206: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _207: &amp;ReErased u16;<br align="left"/>let _208: &amp;ReErased u16;<br align="left"/>let mut _209: error::ErrorCode;<br align="left"/>let mut _210: isize;<br align="left"/>let _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _212: !;<br align="left"/>let mut _213: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _214: ();<br align="left"/>let _215: ();<br align="left"/>let mut _216: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _217: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _218: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _219: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _220: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _221: &amp;ReErased state::user::User;<br align="left"/>let mut _222: u16;<br align="left"/>let mut _223: Closure(DefId(0:353 ~ drift[d311]::controller::liquidation::resolve_perp_bankruptcy::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _224: &amp;ReErased u16;<br align="left"/>let mut _225: isize;<br align="left"/>let _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _227: !;<br align="left"/>let mut _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _229: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _230: i128;<br align="left"/>let mut _231: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _232: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _233: i64;<br align="left"/>let mut _234: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _235: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _236: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _237: &amp;ReErased state::user::User;<br align="left"/>let mut _238: u16;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _243: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _244: isize;<br align="left"/>let _245: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _246: !;<br align="left"/>let mut _247: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _248: i128;<br align="left"/>let _249: ();<br align="left"/>let mut _250: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _251: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _252: bool;<br align="left"/>let mut _253: i128;<br align="left"/>let mut _254: ();<br align="left"/>let _255: error::ErrorCode;<br align="left"/>let _256: ();<br align="left"/>let mut _257: &amp;ReErased str;<br align="left"/>let _258: &amp;ReErased str;<br align="left"/>let mut _259: &amp;ReErased std::string::String;<br align="left"/>let _260: &amp;ReErased std::string::String;<br align="left"/>let _261: std::string::String;<br align="left"/>let _262: std::string::String;<br align="left"/>let mut _263: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _264: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _265: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _266: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _267: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _268: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _269: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _270: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _271: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _272: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _273: &amp;ReErased error::ErrorCode;<br align="left"/>let _274: &amp;ReErased error::ErrorCode;<br align="left"/>let _275: ();<br align="left"/>let mut _276: &amp;ReErased str;<br align="left"/>let _277: &amp;ReErased str;<br align="left"/>let mut _278: error::ErrorCode;<br align="left"/>let mut _279: isize;<br align="left"/>let _280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _281: !;<br align="left"/>let mut _282: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _283: ();<br align="left"/>let _284: u128;<br align="left"/>let _285: i128;<br align="left"/>let mut _286: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _287: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _288: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _289: &amp;ReErased state::user::User;<br align="left"/>let mut _290: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _291: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _292: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _293: state::margin_calculation::MarginContext;<br align="left"/>let mut _294: math::margin::MarginRequirementType;<br align="left"/>let mut _295: isize;<br align="left"/>let _296: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _297: !;<br align="left"/>let mut _298: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _299: state::margin_calculation::MarginCalculation;<br align="left"/>let _300: u128;<br align="left"/>let mut _301: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _302: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _303: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _304: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _305: &amp;ReErased u16;<br align="left"/>let _306: &amp;ReErased u16;<br align="left"/>let mut _307: isize;<br align="left"/>let _308: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _309: !;<br align="left"/>let mut _310: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _311: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _312: u128;<br align="left"/>let mut _313: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _314: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _315: u64;<br align="left"/>let mut _316: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _317: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _318: u64;<br align="left"/>let mut _319: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _320: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _321: u64;<br align="left"/>let mut _322: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _323: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _324: isize;<br align="left"/>let _325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _326: !;<br align="left"/>let mut _327: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _328: u64;<br align="left"/>let mut _329: isize;<br align="left"/>let _330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _331: !;<br align="left"/>let mut _332: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _333: u128;<br align="left"/>let _334: u128;<br align="left"/>let mut _335: u128;<br align="left"/>let mut _336: u128;<br align="left"/>let mut _337: i128;<br align="left"/>let mut _338: u128;<br align="left"/>let mut _339: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _340: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _341: u64;<br align="left"/>let mut _342: u64;<br align="left"/>let mut _343: isize;<br align="left"/>let _344: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _345: !;<br align="left"/>let mut _346: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _347: u128;<br align="left"/>let mut _348: u128;<br align="left"/>let mut _349: u64;<br align="left"/>let mut _350: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _351: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _352: u64;<br align="left"/>let mut _353: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _354: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _355: u64;<br align="left"/>let mut _356: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _357: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _358: u128;<br align="left"/>let mut _359: isize;<br align="left"/>let _360: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _361: !;<br align="left"/>let mut _362: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _363: u64;<br align="left"/>let mut _364: isize;<br align="left"/>let _365: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _366: !;<br align="left"/>let mut _367: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _368: u64;<br align="left"/>let mut _369: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _370: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _371: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _372: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _373: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _374: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _375: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _376: &amp;ReErased u16;<br align="left"/>let _377: &amp;ReErased u16;<br align="left"/>let _378: u16;<br align="left"/>let mut _379: isize;<br align="left"/>let _380: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _381: !;<br align="left"/>let mut _382: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _383: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _384: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _385: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _386: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _387: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _388: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _389: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _390: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _391: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _392: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _393: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _394: isize;<br align="left"/>let _395: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _396: !;<br align="left"/>let mut _397: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _398: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _399: ();<br align="left"/>let mut _400: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _401: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _402: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _403: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _404: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _405: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _406: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _407: i64;<br align="left"/>let mut _408: isize;<br align="left"/>let _409: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _410: !;<br align="left"/>let mut _411: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _412: ();<br align="left"/>let _413: ();<br align="left"/>let mut _414: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _415: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _416: u128;<br align="left"/>let mut _417: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _418: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _419: state::spot_market::SpotBalanceType;<br align="left"/>let mut _420: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _421: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _422: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _423: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _424: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _425: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _426: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _427: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _428: isize;<br align="left"/>let _429: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _430: !;<br align="left"/>let mut _431: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _432: ();<br align="left"/>let _433: i128;<br align="left"/>let mut _434: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _435: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _436: i128;<br align="left"/>let mut _437: i128;<br align="left"/>let mut _438: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _439: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _440: u128;<br align="left"/>let mut _441: isize;<br align="left"/>let _442: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _443: !;<br align="left"/>let mut _444: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _445: i128;<br align="left"/>let mut _446: isize;<br align="left"/>let _447: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _448: !;<br align="left"/>let mut _449: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _450: i128;<br align="left"/>let _451: ();<br align="left"/>let mut _452: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _453: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _454: bool;<br align="left"/>let mut _455: i128;<br align="left"/>let mut _456: ();<br align="left"/>let _457: error::ErrorCode;<br align="left"/>let _458: ();<br align="left"/>let mut _459: &amp;ReErased str;<br align="left"/>let _460: &amp;ReErased str;<br align="left"/>let mut _461: &amp;ReErased std::string::String;<br align="left"/>let _462: &amp;ReErased std::string::String;<br align="left"/>let _463: std::string::String;<br align="left"/>let _464: std::string::String;<br align="left"/>let mut _465: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _466: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _467: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _468: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _469: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _470: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _471: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _472: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _473: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _474: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _475: &amp;ReErased error::ErrorCode;<br align="left"/>let _476: &amp;ReErased error::ErrorCode;<br align="left"/>let _477: ();<br align="left"/>let mut _478: &amp;ReErased str;<br align="left"/>let _479: &amp;ReErased str;<br align="left"/>let mut _480: error::ErrorCode;<br align="left"/>let mut _481: isize;<br align="left"/>let _482: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _483: !;<br align="left"/>let mut _484: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _485: ();<br align="left"/>let _486: i128;<br align="left"/>let mut _487: bool;<br align="left"/>let mut _488: i128;<br align="left"/>let _489: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _490: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _491: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _492: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _493: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _494: &amp;ReErased u16;<br align="left"/>let _495: &amp;ReErased u16;<br align="left"/>let mut _496: isize;<br align="left"/>let _497: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _498: !;<br align="left"/>let mut _499: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _500: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _501: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _502: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _503: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _504: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _505: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _506: &amp;ReErased u16;<br align="left"/>let _507: &amp;ReErased u16;<br align="left"/>let _508: u16;<br align="left"/>let mut _509: isize;<br align="left"/>let _510: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _511: !;<br align="left"/>let mut _512: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _513: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _514: i128;<br align="left"/>let mut _515: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _516: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _517: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _518: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _519: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _520: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _521: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _522: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _523: isize;<br align="left"/>let _524: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _525: !;<br align="left"/>let mut _526: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _527: i128;<br align="left"/>let _528: ();<br align="left"/>let mut _529: &amp;ReErased str;<br align="left"/>let _530: &amp;ReErased str;<br align="left"/>let mut _531: &amp;ReErased std::string::String;<br align="left"/>let _532: &amp;ReErased std::string::String;<br align="left"/>let _533: std::string::String;<br align="left"/>let _534: std::string::String;<br align="left"/>let mut _535: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _536: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _537: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _538: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _539: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _540: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _541: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _542: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _543: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _544: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _545: &amp;ReErased i128;<br align="left"/>let _546: &amp;ReErased i128;<br align="left"/>let mut _547: i128;<br align="left"/>let mut _548: i128;<br align="left"/>let mut _549: i128;<br align="left"/>let mut _550: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _551: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _552: i128;<br align="left"/>let mut _553: isize;<br align="left"/>let _554: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _555: !;<br align="left"/>let mut _556: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _557: i128;<br align="left"/>let _558: ();<br align="left"/>let mut _559: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _560: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _561: bool;<br align="left"/>let mut _562: i128;<br align="left"/>let mut _563: ();<br align="left"/>let _564: error::ErrorCode;<br align="left"/>let _565: ();<br align="left"/>let mut _566: &amp;ReErased str;<br align="left"/>let _567: &amp;ReErased str;<br align="left"/>let mut _568: &amp;ReErased std::string::String;<br align="left"/>let _569: &amp;ReErased std::string::String;<br align="left"/>let _570: std::string::String;<br align="left"/>let _571: std::string::String;<br align="left"/>let mut _572: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _573: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _574: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _575: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _576: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _577: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _578: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _579: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _580: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _581: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _582: &amp;ReErased error::ErrorCode;<br align="left"/>let _583: &amp;ReErased error::ErrorCode;<br align="left"/>let _584: ();<br align="left"/>let mut _585: &amp;ReErased str;<br align="left"/>let _586: &amp;ReErased str;<br align="left"/>let mut _587: error::ErrorCode;<br align="left"/>let mut _588: isize;<br align="left"/>let _589: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _590: !;<br align="left"/>let mut _591: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _592: ();<br align="left"/>let _593: ();<br align="left"/>let mut _594: bool;<br align="left"/>let mut _595: i128;<br align="left"/>let _596: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _597: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _598: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _599: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _600: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _601: &amp;ReErased u16;<br align="left"/>let _602: &amp;ReErased u16;<br align="left"/>let mut _603: isize;<br align="left"/>let _604: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _605: !;<br align="left"/>let mut _606: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _607: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _608: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _609: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _610: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _611: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _612: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _613: &amp;ReErased u16;<br align="left"/>let _614: &amp;ReErased u16;<br align="left"/>let _615: u16;<br align="left"/>let mut _616: isize;<br align="left"/>let _617: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _618: !;<br align="left"/>let mut _619: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _620: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _621: ();<br align="left"/>let mut _622: &amp;ReErased str;<br align="left"/>let _623: &amp;ReErased str;<br align="left"/>let mut _624: &amp;ReErased std::string::String;<br align="left"/>let _625: &amp;ReErased std::string::String;<br align="left"/>let _626: std::string::String;<br align="left"/>let _627: std::string::String;<br align="left"/>let mut _628: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _629: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _630: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _631: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _632: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _633: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _634: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _635: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _636: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _637: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _638: &amp;ReErased i128;<br align="left"/>let _639: &amp;ReErased i128;<br align="left"/>let _640: ();<br align="left"/>let mut _641: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _642: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _643: u128;<br align="left"/>let mut _644: i128;<br align="left"/>let mut _645: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _646: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _647: state::spot_market::SpotBalanceType;<br align="left"/>let mut _648: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _649: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _650: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _651: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _652: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _653: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _654: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _655: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _656: isize;<br align="left"/>let _657: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _658: !;<br align="left"/>let mut _659: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _660: ();<br align="left"/>let _661: i128;<br align="left"/>let mut _662: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _663: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _664: i128;<br align="left"/>let mut _665: i128;<br align="left"/>let mut _666: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _667: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _668: i128;<br align="left"/>let mut _669: isize;<br align="left"/>let _670: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _671: !;<br align="left"/>let mut _672: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _673: i128;<br align="left"/>let mut _674: isize;<br align="left"/>let _675: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _676: !;<br align="left"/>let mut _677: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _678: i128;<br align="left"/>let _679: ();<br align="left"/>let mut _680: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _681: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _682: bool;<br align="left"/>let mut _683: i128;<br align="left"/>let mut _684: ();<br align="left"/>let _685: error::ErrorCode;<br align="left"/>let _686: ();<br align="left"/>let mut _687: &amp;ReErased str;<br align="left"/>let _688: &amp;ReErased str;<br align="left"/>let mut _689: &amp;ReErased std::string::String;<br align="left"/>let _690: &amp;ReErased std::string::String;<br align="left"/>let _691: std::string::String;<br align="left"/>let _692: std::string::String;<br align="left"/>let mut _693: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _694: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _695: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _696: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _697: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _698: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _699: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _700: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _701: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _702: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _703: &amp;ReErased error::ErrorCode;<br align="left"/>let _704: &amp;ReErased error::ErrorCode;<br align="left"/>let _705: ();<br align="left"/>let mut _706: &amp;ReErased str;<br align="left"/>let _707: &amp;ReErased str;<br align="left"/>let mut _708: error::ErrorCode;<br align="left"/>let mut _709: isize;<br align="left"/>let _710: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _711: !;<br align="left"/>let mut _712: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _713: ();<br align="left"/>let _714: i128;<br align="left"/>let mut _715: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _716: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _717: i128;<br align="left"/>let mut _718: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _719: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _720: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _721: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _722: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _723: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _724: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _725: &amp;ReErased u16;<br align="left"/>let _726: &amp;ReErased u16;<br align="left"/>let mut _727: isize;<br align="left"/>let _728: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _729: !;<br align="left"/>let mut _730: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _731: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _732: isize;<br align="left"/>let _733: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _734: !;<br align="left"/>let mut _735: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _736: i128;<br align="left"/>let _737: ();<br align="left"/>let mut _738: bool;<br align="left"/>let mut _739: i128;<br align="left"/>let mut _740: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _741: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _742: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _743: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _744: &amp;ReErased u16;<br align="left"/>let _745: &amp;ReErased u16;<br align="left"/>let mut _746: isize;<br align="left"/>let _747: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _748: !;<br align="left"/>let mut _749: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _750: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _751: u128;<br align="left"/>let mut _752: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _753: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _754: u128;<br align="left"/>let mut _755: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _756: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _757: u128;<br align="left"/>let mut _758: i128;<br align="left"/>let mut _759: isize;<br align="left"/>let _760: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _761: !;<br align="left"/>let mut _762: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _763: u128;<br align="left"/>let mut _764: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _765: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _766: i128;<br align="left"/>let mut _767: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _768: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _769: i128;<br align="left"/>let mut _770: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _771: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _772: i128;<br align="left"/>let mut _773: isize;<br align="left"/>let _774: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _775: !;<br align="left"/>let mut _776: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _777: i128;<br align="left"/>let mut _778: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _779: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _780: i128;<br align="left"/>let mut _781: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _782: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _783: i128;<br align="left"/>let mut _784: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _785: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _786: i128;<br align="left"/>let mut _787: isize;<br align="left"/>let _788: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _789: !;<br align="left"/>let mut _790: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _791: i128;<br align="left"/>let mut _792: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _793: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _794: ();<br align="left"/>let mut _795: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _796: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _797: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _798: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _799: &amp;ReErased u16;<br align="left"/>let _800: &amp;ReErased u16;<br align="left"/>let mut _801: isize;<br align="left"/>let _802: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _803: !;<br align="left"/>let mut _804: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _805: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _806: usize;<br align="left"/>let mut _807: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _808: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _809: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _810: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _811: u16;<br align="left"/>let mut _812: isize;<br align="left"/>let _813: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _814: !;<br align="left"/>let mut _815: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _816: usize;<br align="left"/>let _817: i64;<br align="left"/>let _818: usize;<br align="left"/>let mut _819: usize;<br align="left"/>let mut _820: bool;<br align="left"/>let _821: ();<br align="left"/>let mut _822: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _823: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _824: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _825: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _826: usize;<br align="left"/>let mut _827: usize;<br align="left"/>let mut _828: bool;<br align="left"/>let mut _829: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _830: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _831: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _832: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _833: i64;<br align="left"/>let mut _834: i64;<br align="left"/>let mut _835: bool;<br align="left"/>let mut _836: isize;<br align="left"/>let _837: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _838: !;<br align="left"/>let mut _839: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _840: ();<br align="left"/>let _841: ();<br align="left"/>let mut _842: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _843: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _844: &amp;ReErased mut state::user::User;<br align="left"/>let mut _845: u64;<br align="left"/>let mut _846: i64;<br align="left"/>let mut _847: isize;<br align="left"/>let _848: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _849: !;<br align="left"/>let mut _850: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _851: ();<br align="left"/>let _852: ();<br align="left"/>let mut _853: bool;<br align="left"/>let mut _854: &amp;ReErased state::user::User;<br align="left"/>let _855: ();<br align="left"/>let mut _856: &amp;ReErased mut state::user::User;<br align="left"/>let _857: u16;<br align="left"/>let mut _858: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _859: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _860: u16;<br align="left"/>let mut _861: isize;<br align="left"/>let _862: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _863: !;<br align="left"/>let mut _864: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _865: u16;<br align="left"/>let _866: ();<br align="left"/>let _867: ();<br align="left"/>let mut _868: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _869: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _870: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _871: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _872: &amp;ReErased [u8];<br align="left"/>let _873: &amp;ReErased [u8];<br align="left"/>let mut _874: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _875: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _876: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _877: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _878: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _879: state::events::LiquidationRecord;<br align="left"/>let mut _880: i64;<br align="left"/>let mut _881: u16;<br align="left"/>let mut _882: state::events::LiquidationType;<br align="left"/>let mut _883: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _884: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _885: u128;<br align="left"/>let mut _886: i128;<br align="left"/>let mut _887: state::events::PerpBankruptcyRecord;<br align="left"/>let mut _888: u16;<br align="left"/>let mut _889: u128;<br align="left"/>let mut _890: i128;<br align="left"/>let mut _891: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _892: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _893: i128;<br align="left"/>let mut _894: state::events::LiquidationRecord;<br align="left"/>let mut _895: u128;<br align="left"/>let mut _896: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _897: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _898: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _899: &amp;ReErased u16;<br align="left"/>let mut _900: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _901: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _902: &amp;ReErased u16;<br align="left"/>let mut _903: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _904: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _905: &amp;ReErased u16;<br align="left"/>let mut _906: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _907: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _908: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _909: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _910: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _911: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _912: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _913: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _914: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _915: bool;<br align="left"/>let mut _916: bool;<br align="left"/>let mut _917: isize;<br align="left"/>let mut _918: isize;<br align="left"/>let mut _919: isize;<br align="left"/>let mut _920: isize;<br align="left"/>let mut _921: isize;<br align="left"/>let mut _922: isize;<br align="left"/>let mut _923: isize;<br align="left"/>let mut _924: isize;<br align="left"/>let mut _925: isize;<br align="left"/>let mut _926: isize;<br align="left"/>let mut _927: isize;<br align="left"/>let mut _928: isize;<br align="left"/>let mut _929: isize;<br align="left"/>let mut _930: isize;<br align="left"/>let mut _931: isize;<br align="left"/>let mut _932: isize;<br align="left"/>let mut _933: isize;<br align="left"/>let mut _934: isize;<br align="left"/>let mut _935: isize;<br align="left"/>let mut _936: isize;<br align="left"/>let mut _937: isize;<br align="left"/>let mut _938: isize;<br align="left"/>let mut _939: isize;<br align="left"/>let mut _940: isize;<br align="left"/>let mut _941: isize;<br align="left"/>let mut _942: isize;<br align="left"/>let mut _943: isize;<br align="left"/>let mut _944: isize;<br align="left"/>let mut _945: isize;<br align="left"/>let mut _946: isize;<br align="left"/>let mut _947: isize;<br align="left"/>let mut _948: isize;<br align="left"/>let mut _949: isize;<br align="left"/>let mut _950: isize;<br align="left"/>let mut _951: isize;<br align="left"/>let mut _952: isize;<br align="left"/>let mut _953: isize;<br align="left"/>let mut _954: isize;<br align="left"/>let mut _955: isize;<br align="left"/>let mut _956: isize;<br align="left"/>let mut _957: isize;<br align="left"/>let mut _958: isize;<br align="left"/>let mut _959: isize;<br align="left"/>let mut _960: isize;<br align="left"/>let mut _961: isize;<br align="left"/>let mut _962: isize;<br align="left"/>let mut _963: isize;<br align="left"/>let mut _964: isize;<br align="left"/>let mut _965: isize;<br align="left"/>let mut _966: isize;<br align="left"/>debug market_index =&gt; _1;<br align="left"/>debug user =&gt; _2;<br align="left"/>debug user_key =&gt; _3;<br align="left"/>debug liquidator =&gt; _4;<br align="left"/>debug liquidator_key =&gt; _5;<br align="left"/>debug perp_market_map =&gt; _6;<br align="left"/>debug spot_market_map =&gt; _7;<br align="left"/>debug oracle_map =&gt; _8;<br align="left"/>debug now =&gt; _9;<br align="left"/>debug insurance_fund_vault_balance =&gt; _10;<br align="left"/>debug error_code =&gt; _24;<br align="left"/>debug res =&gt; _31;<br align="left"/>debug res =&gt; _50;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug error_code =&gt; _68;<br align="left"/>debug res =&gt; _75;<br align="left"/>debug res =&gt; _94;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug error_code =&gt; _112;<br align="left"/>debug res =&gt; _119;<br align="left"/>debug res =&gt; _138;<br align="left"/>debug residual =&gt; _146;<br align="left"/>debug val =&gt; _149;<br align="left"/>debug market =&gt; _150;<br align="left"/>debug residual =&gt; _157;<br align="left"/>debug val =&gt; _160;<br align="left"/>debug error_code =&gt; _170;<br align="left"/>debug res =&gt; _177;<br align="left"/>debug res =&gt; _196;<br align="left"/>debug residual =&gt; _211;<br align="left"/>debug val =&gt; _214;<br align="left"/>debug residual =&gt; _226;<br align="left"/>debug val =&gt; _229;<br align="left"/>debug loss =&gt; _230;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug residual =&gt; _245;<br align="left"/>debug val =&gt; _248;<br align="left"/>debug error_code =&gt; _255;<br align="left"/>debug res =&gt; _262;<br align="left"/>debug residual =&gt; _280;<br align="left"/>debug val =&gt; _283;<br align="left"/>debug margin_requirement =&gt; _284;<br align="left"/>debug total_collateral =&gt; _285;<br align="left"/>debug residual =&gt; _296;<br align="left"/>debug val =&gt; _299;<br align="left"/>debug if_payment =&gt; _300;<br align="left"/>debug perp_market =&gt; _301;<br align="left"/>debug residual =&gt; _308;<br align="left"/>debug val =&gt; _311;<br align="left"/>debug max_insurance_withdraw =&gt; _312;<br align="left"/>debug residual =&gt; _325;<br align="left"/>debug val =&gt; _328;<br align="left"/>debug residual =&gt; _330;<br align="left"/>debug val =&gt; _333;<br align="left"/>debug if_payment =&gt; _334;<br align="left"/>debug residual =&gt; _344;<br align="left"/>debug val =&gt; _347;<br align="left"/>debug residual =&gt; _360;<br align="left"/>debug val =&gt; _363;<br align="left"/>debug residual =&gt; _365;<br align="left"/>debug val =&gt; _368;<br align="left"/>debug spot_market =&gt; _371;<br align="left"/>debug residual =&gt; _380;<br align="left"/>debug val =&gt; _383;<br align="left"/>debug oracle_price_data =&gt; _384;<br align="left"/>debug residual =&gt; _395;<br align="left"/>debug val =&gt; _398;<br align="left"/>debug residual =&gt; _409;<br align="left"/>debug val =&gt; _412;<br align="left"/>debug residual =&gt; _429;<br align="left"/>debug val =&gt; _432;<br align="left"/>debug losses_remaining =&gt; _433;<br align="left"/>debug residual =&gt; _442;<br align="left"/>debug val =&gt; _445;<br align="left"/>debug residual =&gt; _447;<br align="left"/>debug val =&gt; _450;<br align="left"/>debug error_code =&gt; _457;<br align="left"/>debug res =&gt; _464;<br align="left"/>debug residual =&gt; _482;<br align="left"/>debug val =&gt; _485;<br align="left"/>debug fee_pool_payment =&gt; _486;<br align="left"/>debug perp_market =&gt; _489;<br align="left"/>debug residual =&gt; _497;<br align="left"/>debug val =&gt; _500;<br align="left"/>debug spot_market =&gt; _501;<br align="left"/>debug residual =&gt; _510;<br align="left"/>debug val =&gt; _513;<br align="left"/>debug fee_pool_tokens =&gt; _514;<br align="left"/>debug residual =&gt; _524;<br align="left"/>debug val =&gt; _527;<br align="left"/>debug res =&gt; _534;<br align="left"/>debug residual =&gt; _554;<br align="left"/>debug val =&gt; _557;<br align="left"/>debug error_code =&gt; _564;<br align="left"/>debug res =&gt; _571;<br align="left"/>debug residual =&gt; _589;<br align="left"/>debug val =&gt; _592;<br align="left"/>debug perp_market =&gt; _596;<br align="left"/>debug residual =&gt; _604;<br align="left"/>debug val =&gt; _607;<br align="left"/>debug spot_market =&gt; _608;<br align="left"/>debug residual =&gt; _617;<br align="left"/>debug val =&gt; _620;<br align="left"/>debug res =&gt; _627;<br align="left"/>debug residual =&gt; _657;<br align="left"/>debug val =&gt; _660;<br align="left"/>debug loss_to_socialize =&gt; _661;<br align="left"/>debug residual =&gt; _670;<br align="left"/>debug val =&gt; _673;<br align="left"/>debug residual =&gt; _675;<br align="left"/>debug val =&gt; _678;<br align="left"/>debug error_code =&gt; _685;<br align="left"/>debug res =&gt; _692;<br align="left"/>debug residual =&gt; _710;<br align="left"/>debug val =&gt; _713;<br align="left"/>debug cumulative_funding_rate_delta =&gt; _714;<br align="left"/>debug residual =&gt; _728;<br align="left"/>debug val =&gt; _731;<br align="left"/>debug residual =&gt; _733;<br align="left"/>debug val =&gt; _736;<br align="left"/>debug market =&gt; _740;<br align="left"/>debug residual =&gt; _747;<br align="left"/>debug val =&gt; _750;<br align="left"/>debug residual =&gt; _760;<br align="left"/>debug val =&gt; _763;<br align="left"/>debug residual =&gt; _774;<br align="left"/>debug val =&gt; _777;<br align="left"/>debug residual =&gt; _788;<br align="left"/>debug val =&gt; _791;<br align="left"/>debug market =&gt; _795;<br align="left"/>debug residual =&gt; _802;<br align="left"/>debug val =&gt; _805;<br align="left"/>debug position_index =&gt; _806;<br align="left"/>debug residual =&gt; _813;<br align="left"/>debug val =&gt; _816;<br align="left"/>debug quote_asset_amount =&gt; _817;<br align="left"/>debug residual =&gt; _837;<br align="left"/>debug val =&gt; _840;<br align="left"/>debug residual =&gt; _848;<br align="left"/>debug val =&gt; _851;<br align="left"/>debug liquidation_id =&gt; _857;<br align="left"/>debug residual =&gt; _862;<br align="left"/>debug val =&gt; _865;<br align="left"/>>;
    bb0__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_916 = const false<br/>_915 = const false<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;(*_2)<br/></td></tr><tr><td align="left">_12 = User::is_bankrupt(move _13)</td></tr></table>>];
    bb1__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb2__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_2)<br/></td></tr><tr><td align="left">_14 = is_user_bankrupt(move _15)</td></tr></table>>];
    bb4__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb5__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_16 = User::enter_bankruptcy(move _17)</td></tr></table>>];
    bb6__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>_11 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_11 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/></td></tr><tr><td align="left">_21 = User::is_bankrupt(move _22)</td></tr></table>>];
    bb10__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb11__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>_23 = ()<br/>_20 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _23)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_24)<br/>_24 = error::ErrorCode::UserNotBankrupt<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_914 = const _<br/>_35 = &amp;(*_914)<br/>_34 = &amp;(*_35)<br/>_33 = move _34 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;_24<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _42)</td></tr></table>>];
    bb13__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = [move _41]<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_32 = Arguments::&lt;'_&gt;::new_v1(move _33, move _37)</td></tr></table>>];
    bb14__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = format(move _32)</td></tr></table>>];
    bb15__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_35)<br/>_30 = move _31<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = &lt;String as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb16__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_26 = &amp;(*_27)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_25 = solana_program::log::sol_log(move _26)</td></tr></table>>];
    bb17__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb18__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_913 = const _<br/>_54 = &amp;(*_913)<br/>_53 = &amp;(*_54)<br/>_52 = move _53 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = Arguments::&lt;'_&gt;::new_const(move _52)</td></tr></table>>];
    bb19__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = format(move _51)</td></tr></table>>];
    bb20__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_54)<br/>_49 = move _50<br/>StorageDead(_50)<br/>_48 = &amp;_49<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = &lt;String as Deref&gt;::deref(move _47)</td></tr></table>>];
    bb21__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_45 = &amp;(*_46)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_44 = solana_program::log::sol_log(move _45)</td></tr></table>>];
    bb22__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb23__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageLive(_56)<br/>_56 = _24<br/>_20 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _56)<br/>StorageDead(_56)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb25__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_57 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb26__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_19 as Continue).0: ())<br/>_18 = _61<br/>StorageDead(_61)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;(*_4)<br/></td></tr><tr><td align="left">_65 = User::is_being_liquidated(move _66)</td></tr></table>>];
    bb27__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb28__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb31__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_68)<br/>_68 = error::ErrorCode::UserIsBeingLiquidated<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_912 = const _<br/>_79 = &amp;(*_912)<br/>_78 = &amp;(*_79)<br/>_77 = move _78 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_78)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;_68<br/>_86 = &amp;(*_87)<br/></td></tr><tr><td align="left">_85 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _86)</td></tr></table>>];
    bb32__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_67)<br/>_67 = ()<br/>_64 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _67)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>_84 = [move _85]<br/>StorageDead(_85)<br/>_83 = &amp;_84<br/>_82 = &amp;(*_83)<br/>_81 = move _82 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_76 = Arguments::&lt;'_&gt;::new_v1(move _77, move _81)</td></tr></table>>];
    bb34__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = format(move _76)</td></tr></table>>];
    bb35__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_79)<br/>_74 = move _75<br/>StorageDead(_75)<br/>_73 = &amp;_74<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_71 = &lt;String as Deref&gt;::deref(move _72)</td></tr></table>>];
    bb36__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_70 = &amp;(*_71)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_69 = solana_program::log::sol_log(move _70)</td></tr></table>>];
    bb37__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb38__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_911 = const _<br/>_98 = &amp;(*_911)<br/>_97 = &amp;(*_98)<br/>_96 = move _97 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = Arguments::&lt;'_&gt;::new_const(move _96)</td></tr></table>>];
    bb39__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = format(move _95)</td></tr></table>>];
    bb40__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_98)<br/>_93 = move _94<br/>StorageDead(_94)<br/>_92 = &amp;_93<br/>_91 = &amp;(*_92)<br/></td></tr><tr><td align="left">_90 = &lt;String as Deref&gt;::deref(move _91)</td></tr></table>>];
    bb41__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_89 = &amp;(*_90)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_88 = solana_program::log::sol_log(move _89)</td></tr></table>>];
    bb42__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb43__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageLive(_100)<br/>_100 = _68<br/>_64 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _100)<br/>StorageDead(_100)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb45__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_101 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb46__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_63 as Continue).0: ())<br/>_62 = _105<br/>StorageDead(_105)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;(*_4)<br/></td></tr><tr><td align="left">_109 = User::is_bankrupt(move _110)</td></tr></table>>];
    bb47__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb48__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb50__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_112)<br/>_112 = error::ErrorCode::UserBankrupt<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_910 = const _<br/>_123 = &amp;(*_910)<br/>_122 = &amp;(*_123)<br/>_121 = move _122 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_122)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;_112<br/>_130 = &amp;(*_131)<br/></td></tr><tr><td align="left">_129 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _130)</td></tr></table>>];
    bb51__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_111)<br/>_111 = ()<br/>_108 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _111)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_128 = [move _129]<br/>StorageDead(_129)<br/>_127 = &amp;_128<br/>_126 = &amp;(*_127)<br/>_125 = move _126 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_120 = Arguments::&lt;'_&gt;::new_v1(move _121, move _125)</td></tr></table>>];
    bb53__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = format(move _120)</td></tr></table>>];
    bb54__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_123)<br/>_118 = move _119<br/>StorageDead(_119)<br/>_117 = &amp;_118<br/>_116 = &amp;(*_117)<br/></td></tr><tr><td align="left">_115 = &lt;String as Deref&gt;::deref(move _116)</td></tr></table>>];
    bb55__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_114 = &amp;(*_115)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_113 = solana_program::log::sol_log(move _114)</td></tr></table>>];
    bb56__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">drop(_118)</td></tr></table>>];
    bb57__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_909 = const _<br/>_142 = &amp;(*_909)<br/>_141 = &amp;(*_142)<br/>_140 = move _141 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = Arguments::&lt;'_&gt;::new_const(move _140)</td></tr></table>>];
    bb58__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/></td></tr><tr><td align="left">_138 = format(move _139)</td></tr></table>>];
    bb59__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_142)<br/>_137 = move _138<br/>StorageDead(_138)<br/>_136 = &amp;_137<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = &lt;String as Deref&gt;::deref(move _135)</td></tr></table>>];
    bb60__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_133 = &amp;(*_134)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_132 = solana_program::log::sol_log(move _133)</td></tr></table>>];
    bb61__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/></td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb62__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageLive(_144)<br/>_144 = _112<br/>_108 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _144)<br/>StorageDead(_144)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb64__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_145 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _145)</td></tr></table>>];
    bb65__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_107 as Continue).0: ())<br/>_106 = _149<br/>StorageDead(_149)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;(*_6)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;_1<br/>_154 = &amp;(*_155)<br/></td></tr><tr><td align="left">_152 = PerpMarketMap::&lt;'_&gt;::get_ref(move _153, move _154)</td></tr></table>>];
    bb66__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_148)<br/>_148 = _146<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _148)</td></tr></table>>];
    bb67__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_151 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _152)</td></tr></table>>];
    bb69__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>_156 = discriminant(_151)<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb70__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = move ((_151 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_916 = const true<br/>_150 = move _160<br/>StorageDead(_160)<br/>_919 = discriminant(_151)<br/>StorageDead(_155)<br/>StorageDead(_151)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = &amp;_150<br/></td></tr><tr><td align="left">_166 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _167)</td></tr></table>>];
    bb71__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = ((_151 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_159)<br/>_159 = _157<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _159)</td></tr></table>>];
    bb72__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_157)<br/>_917 = discriminant(_151)<br/>StorageDead(_155)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_165 = &amp;(*_166)<br/>StorageDead(_167)<br/>StorageLive(_168)<br/>_168 = PerpOperation::Liquidation<br/></td></tr><tr><td align="left">_164 = PerpMarket::is_operation_paused(move _165, move _168)</td></tr></table>>];
    bb74__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left">switchInt(move _164)</td></tr></table>>];
    bb75__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_166)<br/>StorageLive(_170)<br/>_170 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_908 = const _<br/>_181 = &amp;(*_908)<br/>_180 = &amp;(*_181)<br/>_179 = move _180 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_180)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;_170<br/>_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_187 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _188)</td></tr></table>>];
    bb76__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_166)<br/>StorageLive(_169)<br/>_169 = ()<br/>_163 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _169)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_186 = [move _187]<br/>StorageDead(_187)<br/>_185 = &amp;_186<br/>_184 = &amp;(*_185)<br/>_183 = move _184 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_178 = Arguments::&lt;'_&gt;::new_v1(move _179, move _183)</td></tr></table>>];
    bb78__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = format(move _178)</td></tr></table>>];
    bb79__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_189)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_181)<br/>_176 = move _177<br/>StorageDead(_177)<br/>_175 = &amp;_176<br/>_174 = &amp;(*_175)<br/></td></tr><tr><td align="left">_173 = &lt;String as Deref&gt;::deref(move _174)</td></tr></table>>];
    bb80__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_172 = &amp;(*_173)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">_171 = solana_program::log::sol_log(move _172)</td></tr></table>>];
    bb81__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/></td></tr><tr><td align="left">drop(_176)</td></tr></table>>];
    bb82__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_171)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_907 = const _<br/>_200 = &amp;(*_907)<br/>_199 = &amp;(*_200)<br/>_198 = move _199 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_199)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = &amp;_1<br/>_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _207)</td></tr></table>>];
    bb83__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>_205 = [move _206]<br/>StorageDead(_206)<br/>_204 = &amp;_205<br/>_203 = &amp;(*_204)<br/>_202 = move _203 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_197 = Arguments::&lt;'_&gt;::new_v1(move _198, move _202)</td></tr></table>>];
    bb84__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = format(move _197)</td></tr></table>>];
    bb85__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>_195 = move _196<br/>StorageDead(_196)<br/>_194 = &amp;_195<br/>_193 = &amp;(*_194)<br/></td></tr><tr><td align="left">_192 = &lt;String as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb86__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_191 = &amp;(*_192)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_190 = solana_program::log::sol_log(move _191)</td></tr></table>>];
    bb87__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/></td></tr><tr><td align="left">drop(_195)</td></tr></table>>];
    bb88__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageLive(_209)<br/>_209 = _170<br/>_163 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _209)<br/>StorageDead(_209)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _163)</td></tr></table>>];
    bb90__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_210 = discriminant(_162)<br/></td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb91__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_162 as Continue).0: ())<br/>_161 = _214<br/>StorageDead(_214)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_916 = const false<br/>_216 = move _150<br/></td></tr><tr><td align="left">_215 = std::mem::drop::&lt;Ref&lt;'_, PerpMarket&gt;&gt;(move _216)</td></tr></table>>];
    bb92__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_213)<br/>_213 = _211<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _213)</td></tr></table>>];
    bb93__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;(*_2)<br/>StorageLive(_222)<br/>_222 = _1<br/></td></tr><tr><td align="left">_220 = User::get_perp_position(move _221, move _222)</td></tr></table>>];
    bb95__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_221)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = &amp;_1<br/>_223 = {closure@programs/drift/src/controller/liquidation.rs:3305:50: 3305:53} { market_index: move _224 }<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_219 = std::result::Result::&lt;&amp;PerpPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:3305:50: 3305:53}&gt;(move _220, move _223)</td></tr></table>>];
    bb96__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">_218 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _219)</td></tr></table>>];
    bb97__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>_225 = discriminant(_218)<br/></td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb98__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_218 as Continue).0: &amp;state::user::PerpPosition)<br/>_217 = _229<br/>StorageDead(_229)<br/>StorageDead(_218)<br/>StorageDead(_217)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;(*_2)<br/>StorageLive(_238)<br/>_238 = _1<br/></td></tr><tr><td align="left">_236 = User::get_perp_position(move _237, move _238)</td></tr></table>>];
    bb99__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_226)<br/>_226 = ((_218 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_228)<br/>_228 = _226<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _228)</td></tr></table>>];
    bb100__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_218)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_235 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _236)</td></tr></table>>];
    bb102__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_239 = discriminant(_235)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb103__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_235 as Continue).0: &amp;state::user::PerpPosition)<br/>_234 = _243<br/>StorageDead(_243)<br/>_233 = ((*_234).2: i64)<br/></td></tr><tr><td align="left">_232 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _233)</td></tr></table>>];
    bb104__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_235 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_242)<br/>_242 = _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb105__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/></td></tr><tr><td align="left">_231 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _232)</td></tr></table>>];
    bb107__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>_244 = discriminant(_231)<br/></td></tr><tr><td align="left">switchInt(move _244)</td></tr></table>>];
    bb108__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_248)<br/>_248 = ((_231 as Continue).0: i128)<br/>_230 = _248<br/>StorageDead(_248)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/>StorageDead(_231)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = _230<br/>_252 = Lt(move _253, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _252)</td></tr></table>>];
    bb109__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>_245 = ((_231 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_247)<br/>_247 = _245<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _247)</td></tr></table>>];
    bb110__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageLive(_254)<br/>_254 = ()<br/>_251 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _254)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageLive(_255)<br/>_255 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_906 = const _<br/>_266 = &amp;(*_906)<br/>_265 = &amp;(*_266)<br/>_264 = move _265 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_265)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = &amp;_255<br/>_273 = &amp;(*_274)<br/></td></tr><tr><td align="left">_272 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _273)</td></tr></table>>];
    bb113__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>_271 = [move _272]<br/>StorageDead(_272)<br/>_270 = &amp;_271<br/>_269 = &amp;(*_270)<br/>_268 = move _269 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_269)<br/></td></tr><tr><td align="left">_263 = Arguments::&lt;'_&gt;::new_v1(move _264, move _268)</td></tr></table>>];
    bb114__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">_262 = format(move _263)</td></tr></table>>];
    bb115__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_274)<br/>StorageDead(_271)<br/>StorageDead(_270)<br/>StorageDead(_266)<br/>_261 = move _262<br/>StorageDead(_262)<br/>_260 = &amp;_261<br/>_259 = &amp;(*_260)<br/></td></tr><tr><td align="left">_258 = &lt;String as Deref&gt;::deref(move _259)</td></tr></table>>];
    bb116__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">_257 = &amp;(*_258)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_256 = solana_program::log::sol_log(move _257)</td></tr></table>>];
    bb117__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/></td></tr><tr><td align="left">drop(_261)</td></tr></table>>];
    bb118__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>_277 = const &quot;user must have negative pnl&quot;<br/>_276 = &amp;(*_277)<br/></td></tr><tr><td align="left">_275 = solana_program::log::sol_log(move _276)</td></tr></table>>];
    bb119__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_276)<br/>StorageDead(_277)<br/>StorageDead(_275)<br/>StorageLive(_278)<br/>_278 = _255<br/>_251 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _278)<br/>StorageDead(_278)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/></td></tr><tr><td align="left">_250 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _251)</td></tr></table>>];
    bb121__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>_279 = discriminant(_250)<br/></td></tr><tr><td align="left">switchInt(move _279)</td></tr></table>>];
    bb122__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageLive(_283)<br/>_283 = ((_250 as Continue).0: ())<br/>_249 = _283<br/>StorageDead(_283)<br/>StorageDead(_250)<br/>StorageDead(_249)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = &amp;(*_2)<br/>StorageLive(_290)<br/>_290 = &amp;(*_6)<br/>StorageLive(_291)<br/>_291 = &amp;(*_7)<br/>StorageLive(_292)<br/>_292 = &amp;mut (*_8)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">_293 = MarginContext::standard(move _294)</td></tr></table>>];
    bb123__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_280)<br/>_280 = ((_250 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_282)<br/>_282 = _280<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _282)</td></tr></table>>];
    bb124__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>StorageDead(_280)<br/>StorageDead(_250)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/></td></tr><tr><td align="left">_288 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _289, move _290, move _291, move _292, move _293)</td></tr></table>>];
    bb126__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>StorageDead(_292)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">_287 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _288)</td></tr></table>>];
    bb127__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>_295 = discriminant(_287)<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb128__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_299)<br/>_299 = ((_287 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_286 = _299<br/>StorageDead(_299)<br/>StorageLive(_284)<br/>_284 = (_286.3: u128)<br/>StorageLive(_285)<br/>_285 = (_286.1: i128)<br/>StorageDead(_287)<br/>StorageDead(_286)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>_304 = &amp;(*_6)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>_306 = &amp;_1<br/>_305 = &amp;(*_306)<br/></td></tr><tr><td align="left">_303 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _304, move _305)</td></tr></table>>];
    bb129__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = ((_287 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_298)<br/>_298 = _296<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _298)</td></tr></table>>];
    bb130__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_298)<br/>StorageDead(_296)<br/>StorageDead(_287)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_304)<br/></td></tr><tr><td align="left">_302 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _303)</td></tr></table>>];
    bb132__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>_307 = discriminant(_302)<br/></td></tr><tr><td align="left">switchInt(move _307)</td></tr></table>>];
    bb133__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_311)<br/>_311 = move ((_302 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_301 = move _311<br/>StorageDead(_311)<br/>_923 = discriminant(_302)<br/>StorageDead(_306)<br/>StorageDead(_302)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>_320 = &amp;_301<br/></td></tr><tr><td align="left">_319 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _320)</td></tr></table>>];
    bb134__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_302 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_310)<br/>_310 = _308<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _310)</td></tr></table>>];
    bb135__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_308)<br/>_921 = discriminant(_302)<br/>StorageDead(_306)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>_318 = (((*_319).4: state::perp_market::InsuranceClaim).2: u64)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>_323 = &amp;_301<br/></td></tr><tr><td align="left">_322 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _323)</td></tr></table>>];
    bb137__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>_321 = (((*_322).4: state::perp_market::InsuranceClaim).3: u64)<br/></td></tr><tr><td align="left">_317 = &lt;u64 as SafeMath&gt;::safe_sub(move _318, move _321)</td></tr></table>>];
    bb138__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">_316 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _317)</td></tr></table>>];
    bb139__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>_324 = discriminant(_316)<br/></td></tr><tr><td align="left">switchInt(move _324)</td></tr></table>>];
    bb140__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_328)<br/>_328 = ((_316 as Continue).0: u64)<br/>_315 = _328<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">_314 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _315)</td></tr></table>>];
    bb141__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_325)<br/>_325 = ((_316 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_327)<br/>_327 = _325<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _327)</td></tr></table>>];
    bb142__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_325)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/></td></tr><tr><td align="left">_313 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _314)</td></tr></table>>];
    bb144__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>_329 = discriminant(_313)<br/></td></tr><tr><td align="left">switchInt(move _329)</td></tr></table>>];
    bb145__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_333)<br/>_333 = ((_313 as Continue).0: u128)<br/>_312 = _333<br/>StorageDead(_333)<br/>StorageDead(_322)<br/>StorageDead(_319)<br/>StorageDead(_316)<br/>StorageDead(_313)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = _230<br/></td></tr><tr><td align="left">_336 = core::num::&lt;impl i128&gt;::unsigned_abs(move _337)</td></tr></table>>];
    bb146__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_330)<br/>_330 = ((_313 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_332)<br/>_332 = _330<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _332)</td></tr></table>>];
    bb147__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>_342 = _10<br/></td></tr><tr><td align="left">_341 = core::num::&lt;impl u64&gt;::saturating_sub(move _342, const 1_u64)</td></tr></table>>];
    bb149__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/></td></tr><tr><td align="left">_340 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _341)</td></tr></table>>];
    bb150__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/></td></tr><tr><td align="left">_339 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _340)</td></tr></table>>];
    bb151__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>_343 = discriminant(_339)<br/></td></tr><tr><td align="left">switchInt(move _343)</td></tr></table>>];
    bb152__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_347)<br/>_347 = ((_339 as Continue).0: u128)<br/>_338 = _347<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">_335 = &lt;u128 as Ord&gt;::min(move _336, move _338)</td></tr></table>>];
    bb153__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = ((_339 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_346)<br/>_346 = _344<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _346)</td></tr></table>>];
    bb154__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_344)<br/>StorageDead(_338)<br/>StorageDead(_336)<br/>StorageDead(_335)<br/>StorageDead(_339)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_336)<br/>StorageLive(_348)<br/>_348 = _312<br/></td></tr><tr><td align="left">_334 = &lt;u128 as Ord&gt;::min(move _335, move _348)</td></tr></table>>];
    bb156__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_335)<br/>StorageDead(_339)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>_354 = &amp;_301<br/></td></tr><tr><td align="left">_353 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _354)</td></tr></table>>];
    bb157__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>_352 = (((*_353).4: state::perp_market::InsuranceClaim).3: u64)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_358 = _334<br/></td></tr><tr><td align="left">_357 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _358)</td></tr></table>>];
    bb158__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/></td></tr><tr><td align="left">_356 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _357)</td></tr></table>>];
    bb159__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>_359 = discriminant(_356)<br/></td></tr><tr><td align="left">switchInt(move _359)</td></tr></table>>];
    bb160__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_363)<br/>_363 = ((_356 as Continue).0: u64)<br/>_355 = _363<br/>StorageDead(_363)<br/></td></tr><tr><td align="left">_351 = &lt;u64 as SafeMath&gt;::safe_add(move _352, move _355)</td></tr></table>>];
    bb161__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageLive(_360)<br/>_360 = ((_356 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_362)<br/>_362 = _360<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _362)</td></tr></table>>];
    bb162__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_355)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">_350 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _351)</td></tr></table>>];
    bb164__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>_364 = discriminant(_350)<br/></td></tr><tr><td align="left">switchInt(move _364)</td></tr></table>>];
    bb165__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_368)<br/>_368 = ((_350 as Continue).0: u64)<br/>_349 = _368<br/>StorageDead(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_370 = &amp;mut _301<br/></td></tr><tr><td align="left">_369 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _370)</td></tr></table>>];
    bb166__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_365)<br/>_365 = ((_350 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_367)<br/>_367 = _365<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _367)</td></tr></table>>];
    bb167__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>(((*_369).4: state::perp_market::InsuranceClaim).3: u64) = move _349<br/>StorageDead(_349)<br/>StorageDead(_369)<br/>StorageDead(_356)<br/>StorageDead(_353)<br/>StorageDead(_350)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>_375 = &amp;(*_7)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_905 = const _<br/>_377 = &amp;(*_905)<br/>_376 = &amp;(*_377)<br/></td></tr><tr><td align="left">_374 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _375, move _376)</td></tr></table>>];
    bb169__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>StorageDead(_375)<br/></td></tr><tr><td align="left">_373 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _374)</td></tr></table>>];
    bb170__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>_379 = discriminant(_373)<br/></td></tr><tr><td align="left">switchInt(move _379)</td></tr></table>>];
    bb171__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_383)<br/>_383 = move ((_373 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_372 = move _383<br/>StorageDead(_383)<br/>_371 = &amp;mut _372<br/>_927 = discriminant(_373)<br/>StorageDead(_377)<br/>StorageDead(_373)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = &amp;mut (*_8)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>_393 = &amp;(*_371)<br/></td></tr><tr><td align="left">_392 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _393)</td></tr></table>>];
    bb172__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_380)<br/>_380 = ((_373 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_382)<br/>_382 = _380<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _382)</td></tr></table>>];
    bb173__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_380)<br/>_925 = discriminant(_373)<br/>StorageDead(_377)<br/>StorageDead(_373)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">_391 = &amp;(*_392)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">_390 = SpotMarket::oracle_id(move _391)</td></tr></table>>];
    bb175__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>_389 = &amp;_390<br/>_388 = &amp;(*_389)<br/></td></tr><tr><td align="left">_386 = OracleMap::&lt;'_&gt;::get_price_data(move _387, move _388)</td></tr></table>>];
    bb176__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_387)<br/></td></tr><tr><td align="left">_385 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _386)</td></tr></table>>];
    bb177__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>_394 = discriminant(_385)<br/></td></tr><tr><td align="left">switchInt(move _394)</td></tr></table>>];
    bb178__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_398)<br/>_398 = ((_385 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_384 = _398<br/>StorageDead(_398)<br/>StorageDead(_392)<br/>StorageDead(_390)<br/>StorageDead(_389)<br/>StorageDead(_385)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;mut (*_371)<br/></td></tr><tr><td align="left">_403 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _404)</td></tr></table>>];
    bb179__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_395)<br/>_395 = ((_385 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_397)<br/>_397 = _395<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _397)</td></tr></table>>];
    bb180__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageDead(_395)<br/>StorageDead(_392)<br/>StorageDead(_390)<br/>StorageDead(_389)<br/>StorageDead(_385)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">_402 = &amp;mut (*_403)<br/>StorageDead(_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>_406 = &amp;(*_384)<br/>_405 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _406)<br/>StorageDead(_406)<br/>StorageLive(_407)<br/>_407 = _9<br/></td></tr><tr><td align="left">_401 = controller::spot_balance::update_spot_market_cumulative_interest(move _402, move _405, move _407)</td></tr></table>>];
    bb182__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageDead(_405)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">_400 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _401)</td></tr></table>>];
    bb183__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_401)<br/>_408 = discriminant(_400)<br/></td></tr><tr><td align="left">switchInt(move _408)</td></tr></table>>];
    bb184__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_412)<br/>_412 = ((_400 as Continue).0: ())<br/>_399 = _412<br/>StorageDead(_412)<br/>StorageDead(_403)<br/>StorageDead(_400)<br/>StorageDead(_399)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>_416 = _334<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_904 = const _<br/>_418 = &amp;(*_904)<br/>_417 = &amp;(*_418)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>_422 = &amp;mut (*_371)<br/></td></tr><tr><td align="left">_421 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _422)</td></tr></table>>];
    bb185__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageLive(_409)<br/>_409 = ((_400 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_411)<br/>_411 = _409<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _411)</td></tr></table>>];
    bb186__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_411)<br/>StorageDead(_409)<br/>StorageDead(_403)<br/>StorageDead(_400)<br/>StorageDead(_399)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">_420 = &amp;mut (*_421)<br/>StorageDead(_422)<br/>StorageLive(_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>_427 = &amp;mut _301<br/></td></tr><tr><td align="left">_426 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _427)</td></tr></table>>];
    bb188__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>_425 = &amp;mut ((*_426).2: state::perp_market::PoolBalance)<br/>_424 = &amp;mut (*_425)<br/>_423 = move _424 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_424)<br/></td></tr><tr><td align="left">_415 = update_spot_balances(move _416, move _417, move _420, move _423, const false)</td></tr></table>>];
    bb189__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>StorageDead(_420)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">_414 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _415)</td></tr></table>>];
    bb190__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/>_428 = discriminant(_414)<br/></td></tr><tr><td align="left">switchInt(move _428)</td></tr></table>>];
    bb191__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageLive(_432)<br/>_432 = ((_414 as Continue).0: ())<br/>_413 = _432<br/>StorageDead(_432)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>StorageDead(_421)<br/>StorageDead(_418)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/>_300 = _334<br/>StorageDead(_384)<br/></td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb192__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageLive(_429)<br/>_429 = ((_414 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_431)<br/>_431 = _429<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _431)</td></tr></table>>];
    bb193__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_429)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>StorageDead(_421)<br/>StorageDead(_418)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_371)<br/>StorageDead(_334)<br/>StorageDead(_312)<br/></td></tr><tr><td align="left">drop(_301)</td></tr></table>>];
    bb195__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = _230<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_440 = _300<br/></td></tr><tr><td align="left">_439 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _440)</td></tr></table>>];
    bb196__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/></td></tr><tr><td align="left">_438 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _439)</td></tr></table>>];
    bb197__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>_441 = discriminant(_438)<br/></td></tr><tr><td align="left">switchInt(move _441)</td></tr></table>>];
    bb198__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_445)<br/>_445 = ((_438 as Continue).0: i128)<br/>_437 = _445<br/>StorageDead(_445)<br/></td></tr><tr><td align="left">_435 = &lt;i128 as SafeMath&gt;::safe_add(move _436, move _437)</td></tr></table>>];
    bb199__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageLive(_442)<br/>_442 = ((_438 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_444)<br/>_444 = _442<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _444)</td></tr></table>>];
    bb200__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageDead(_442)<br/>StorageDead(_437)<br/>StorageDead(_436)<br/>StorageDead(_435)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_434 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _435)</td></tr></table>>];
    bb202__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_446 = discriminant(_434)<br/></td></tr><tr><td align="left">switchInt(move _446)</td></tr></table>>];
    bb203__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageLive(_450)<br/>_450 = ((_434 as Continue).0: i128)<br/>_433 = _450<br/>StorageDead(_450)<br/>StorageDead(_438)<br/>StorageDead(_434)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>_455 = _433<br/>_454 = Le(move _455, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _454)</td></tr></table>>];
    bb204__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageLive(_447)<br/>_447 = ((_434 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_449)<br/>_449 = _447<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _449)</td></tr></table>>];
    bb205__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageLive(_456)<br/>_456 = ()<br/>_453 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _456)<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageLive(_457)<br/>_457 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>_903 = const _<br/>_468 = &amp;(*_903)<br/>_467 = &amp;(*_468)<br/>_466 = move _467 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_467)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>_476 = &amp;_457<br/>_475 = &amp;(*_476)<br/></td></tr><tr><td align="left">_474 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _475)</td></tr></table>>];
    bb208__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>_473 = [move _474]<br/>StorageDead(_474)<br/>_472 = &amp;_473<br/>_471 = &amp;(*_472)<br/>_470 = move _471 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_471)<br/></td></tr><tr><td align="left">_465 = Arguments::&lt;'_&gt;::new_v1(move _466, move _470)</td></tr></table>>];
    bb209__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/>StorageDead(_466)<br/></td></tr><tr><td align="left">_464 = format(move _465)</td></tr></table>>];
    bb210__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_476)<br/>StorageDead(_473)<br/>StorageDead(_472)<br/>StorageDead(_468)<br/>_463 = move _464<br/>StorageDead(_464)<br/>_462 = &amp;_463<br/>_461 = &amp;(*_462)<br/></td></tr><tr><td align="left">_460 = &lt;String as Deref&gt;::deref(move _461)</td></tr></table>>];
    bb211__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">_459 = &amp;(*_460)<br/>StorageDead(_461)<br/></td></tr><tr><td align="left">_458 = solana_program::log::sol_log(move _459)</td></tr></table>>];
    bb212__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_459)<br/></td></tr><tr><td align="left">drop(_463)</td></tr></table>>];
    bb213__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageDead(_462)<br/>StorageDead(_460)<br/>StorageDead(_458)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>_479 = const &quot;losses_remaining must be non-positive&quot;<br/>_478 = &amp;(*_479)<br/></td></tr><tr><td align="left">_477 = solana_program::log::sol_log(move _478)</td></tr></table>>];
    bb214__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/>StorageDead(_479)<br/>StorageDead(_477)<br/>StorageLive(_480)<br/>_480 = _457<br/>_453 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _480)<br/>StorageDead(_480)<br/>StorageDead(_457)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/></td></tr><tr><td align="left">_452 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _453)</td></tr></table>>];
    bb216__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>_481 = discriminant(_452)<br/></td></tr><tr><td align="left">switchInt(move _481)</td></tr></table>>];
    bb217__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_485)<br/>_485 = ((_452 as Continue).0: ())<br/>_451 = _485<br/>StorageDead(_485)<br/>StorageDead(_452)<br/>StorageDead(_451)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>_488 = _433<br/>_487 = Lt(move _488, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _487)</td></tr></table>>];
    bb218__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageLive(_482)<br/>_482 = ((_452 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_484)<br/>_484 = _482<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _484)</td></tr></table>>];
    bb219__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>StorageDead(_482)<br/>StorageDead(_452)<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>_493 = &amp;(*_6)<br/>StorageLive(_494)<br/>StorageLive(_495)<br/>_495 = &amp;_1<br/>_494 = &amp;(*_495)<br/></td></tr><tr><td align="left">_492 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _493, move _494)</td></tr></table>>];
    bb221__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>_486 = const 0_i128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>StorageDead(_493)<br/></td></tr><tr><td align="left">_491 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _492)</td></tr></table>>];
    bb223__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/>_496 = discriminant(_491)<br/></td></tr><tr><td align="left">switchInt(move _496)</td></tr></table>>];
    bb224__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageLive(_500)<br/>_500 = move ((_491 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_490 = move _500<br/>StorageDead(_500)<br/>_489 = &amp;mut _490<br/>_931 = discriminant(_491)<br/>StorageDead(_495)<br/>StorageDead(_491)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = &amp;(*_7)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>_902 = const _<br/>_507 = &amp;(*_902)<br/>_506 = &amp;(*_507)<br/></td></tr><tr><td align="left">_504 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _505, move _506)</td></tr></table>>];
    bb225__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageLive(_497)<br/>_497 = ((_491 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_499)<br/>_499 = _497<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _499)</td></tr></table>>];
    bb226__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_497)<br/>_929 = discriminant(_491)<br/>StorageDead(_495)<br/>StorageDead(_491)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/>StorageDead(_505)<br/></td></tr><tr><td align="left">_503 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _504)</td></tr></table>>];
    bb228__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>_509 = discriminant(_503)<br/></td></tr><tr><td align="left">switchInt(move _509)</td></tr></table>>];
    bb229__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_513)<br/>_513 = move ((_503 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_502 = move _513<br/>StorageDead(_513)<br/>_501 = &amp;mut _502<br/>_935 = discriminant(_503)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>_519 = &amp;mut (*_489)<br/></td></tr><tr><td align="left">_518 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _519)</td></tr></table>>];
    bb230__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_510)<br/>_510 = ((_503 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_512)<br/>_512 = _510<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _512)</td></tr></table>>];
    bb231__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/>StorageDead(_510)<br/>_933 = discriminant(_503)<br/>StorageDead(_507)<br/>StorageDead(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">_517 = &amp;mut (*_518)<br/>StorageDead(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>_522 = &amp;mut (*_501)<br/></td></tr><tr><td align="left">_521 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _522)</td></tr></table>>];
    bb233__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">_520 = &amp;mut (*_521)<br/>StorageDead(_522)<br/></td></tr><tr><td align="left">_516 = get_fee_pool_tokens(move _517, move _520)</td></tr></table>>];
    bb234__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">_515 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _516)</td></tr></table>>];
    bb235__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>_523 = discriminant(_515)<br/></td></tr><tr><td align="left">switchInt(move _523)</td></tr></table>>];
    bb236__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageLive(_527)<br/>_527 = ((_515 as Continue).0: i128)<br/>_514 = _527<br/>StorageDead(_527)<br/>StorageDead(_521)<br/>StorageDead(_518)<br/>StorageDead(_515)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>_901 = const _<br/>_538 = &amp;(*_901)<br/>_537 = &amp;(*_538)<br/>_536 = move _537 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_537)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>_546 = &amp;_514<br/>_545 = &amp;(*_546)<br/></td></tr><tr><td align="left">_544 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i128&gt;(move _545)</td></tr></table>>];
    bb237__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_524)<br/>_524 = ((_515 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_526)<br/>_526 = _524<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _526)</td></tr></table>>];
    bb238__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>StorageDead(_524)<br/>StorageDead(_521)<br/>StorageDead(_518)<br/>StorageDead(_515)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb239__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>_543 = [move _544]<br/>StorageDead(_544)<br/>_542 = &amp;_543<br/>_541 = &amp;(*_542)<br/>_540 = move _541 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_541)<br/></td></tr><tr><td align="left">_535 = Arguments::&lt;'_&gt;::new_v1(move _536, move _540)</td></tr></table>>];
    bb240__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_540)<br/>StorageDead(_536)<br/></td></tr><tr><td align="left">_534 = format(move _535)</td></tr></table>>];
    bb241__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_535)<br/>StorageDead(_546)<br/>StorageDead(_543)<br/>StorageDead(_542)<br/>StorageDead(_538)<br/>_533 = move _534<br/>StorageDead(_534)<br/>_532 = &amp;_533<br/>_531 = &amp;(*_532)<br/></td></tr><tr><td align="left">_530 = &lt;String as Deref&gt;::deref(move _531)</td></tr></table>>];
    bb242__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">_529 = &amp;(*_530)<br/>StorageDead(_531)<br/></td></tr><tr><td align="left">_528 = solana_program::log::sol_log(move _529)</td></tr></table>>];
    bb243__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_529)<br/></td></tr><tr><td align="left">drop(_533)</td></tr></table>>];
    bb244__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>StorageDead(_532)<br/>StorageDead(_530)<br/>StorageDead(_528)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>_548 = _433<br/></td></tr><tr><td align="left">_547 = core::num::&lt;impl i128&gt;::abs(move _548)</td></tr></table>>];
    bb245__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>_552 = _514<br/></td></tr><tr><td align="left">_551 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _552)</td></tr></table>>];
    bb246__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/></td></tr><tr><td align="left">_550 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _551)</td></tr></table>>];
    bb247__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/>_553 = discriminant(_550)<br/></td></tr><tr><td align="left">switchInt(move _553)</td></tr></table>>];
    bb248__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageLive(_557)<br/>_557 = ((_550 as Continue).0: i128)<br/>_549 = _557<br/>StorageDead(_557)<br/></td></tr><tr><td align="left">_486 = &lt;i128 as Ord&gt;::min(move _547, move _549)</td></tr></table>>];
    bb249__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>_554 = ((_550 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_556)<br/>_556 = _554<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _556)</td></tr></table>>];
    bb250__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>StorageDead(_554)<br/>StorageDead(_549)<br/>StorageDead(_547)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb251__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>StorageDead(_547)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb252__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_501)<br/></td></tr><tr><td align="left">drop(_490)</td></tr></table>>];
    bb253__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageDead(_489)<br/>StorageDead(_550)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb254__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_487)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>_562 = _486<br/>_561 = Ge(move _562, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _561)</td></tr></table>>];
    bb255__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageLive(_563)<br/>_563 = ()<br/>_560 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _563)<br/>StorageDead(_563)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageLive(_564)<br/>_564 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>_900 = const _<br/>_575 = &amp;(*_900)<br/>_574 = &amp;(*_575)<br/>_573 = move _574 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_574)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>_583 = &amp;_564<br/>_582 = &amp;(*_583)<br/></td></tr><tr><td align="left">_581 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _582)</td></tr></table>>];
    bb257__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_582)<br/>_580 = [move _581]<br/>StorageDead(_581)<br/>_579 = &amp;_580<br/>_578 = &amp;(*_579)<br/>_577 = move _578 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_578)<br/></td></tr><tr><td align="left">_572 = Arguments::&lt;'_&gt;::new_v1(move _573, move _577)</td></tr></table>>];
    bb258__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/>StorageDead(_573)<br/></td></tr><tr><td align="left">_571 = format(move _572)</td></tr></table>>];
    bb259__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_572)<br/>StorageDead(_583)<br/>StorageDead(_580)<br/>StorageDead(_579)<br/>StorageDead(_575)<br/>_570 = move _571<br/>StorageDead(_571)<br/>_569 = &amp;_570<br/>_568 = &amp;(*_569)<br/></td></tr><tr><td align="left">_567 = &lt;String as Deref&gt;::deref(move _568)</td></tr></table>>];
    bb260__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">_566 = &amp;(*_567)<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">_565 = solana_program::log::sol_log(move _566)</td></tr></table>>];
    bb261__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/></td></tr><tr><td align="left">drop(_570)</td></tr></table>>];
    bb262__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>StorageDead(_569)<br/>StorageDead(_567)<br/>StorageDead(_565)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>_586 = const &quot;fee_pool_payment must be non-negative&quot;<br/>_585 = &amp;(*_586)<br/></td></tr><tr><td align="left">_584 = solana_program::log::sol_log(move _585)</td></tr></table>>];
    bb263__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>StorageDead(_586)<br/>StorageDead(_584)<br/>StorageLive(_587)<br/>_587 = _564<br/>_560 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _587)<br/>StorageDead(_587)<br/>StorageDead(_564)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/></td></tr><tr><td align="left">_559 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _560)</td></tr></table>>];
    bb265__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_560)<br/>_588 = discriminant(_559)<br/></td></tr><tr><td align="left">switchInt(move _588)</td></tr></table>>];
    bb266__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageLive(_592)<br/>_592 = ((_559 as Continue).0: ())<br/>_558 = _592<br/>StorageDead(_592)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>_595 = _486<br/>_594 = Gt(move _595, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _594)</td></tr></table>>];
    bb267__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageLive(_589)<br/>_589 = ((_559 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_591)<br/>_591 = _589<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _591)</td></tr></table>>];
    bb268__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_591)<br/>StorageDead(_589)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb269__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>StorageLive(_600)<br/>_600 = &amp;(*_6)<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>_602 = &amp;_1<br/>_601 = &amp;(*_602)<br/></td></tr><tr><td align="left">_599 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _600, move _601)</td></tr></table>>];
    bb270__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>_593 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/>StorageDead(_600)<br/></td></tr><tr><td align="left">_598 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _599)</td></tr></table>>];
    bb272__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>_603 = discriminant(_598)<br/></td></tr><tr><td align="left">switchInt(move _603)</td></tr></table>>];
    bb273__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageLive(_607)<br/>_607 = move ((_598 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_597 = move _607<br/>StorageDead(_607)<br/>_596 = &amp;mut _597<br/>_939 = discriminant(_598)<br/>StorageDead(_602)<br/>StorageDead(_598)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>_612 = &amp;(*_7)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>_899 = const _<br/>_614 = &amp;(*_899)<br/>_613 = &amp;(*_614)<br/></td></tr><tr><td align="left">_611 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _612, move _613)</td></tr></table>>];
    bb274__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageLive(_604)<br/>_604 = ((_598 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_606)<br/>_606 = _604<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _606)</td></tr></table>>];
    bb275__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_606)<br/>StorageDead(_604)<br/>_937 = discriminant(_598)<br/>StorageDead(_602)<br/>StorageDead(_598)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_613)<br/>StorageDead(_612)<br/></td></tr><tr><td align="left">_610 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _611)</td></tr></table>>];
    bb277__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_611)<br/>_616 = discriminant(_610)<br/></td></tr><tr><td align="left">switchInt(move _616)</td></tr></table>>];
    bb278__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageLive(_620)<br/>_620 = move ((_610 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_609 = move _620<br/>StorageDead(_620)<br/>_608 = &amp;mut _609<br/>_943 = discriminant(_610)<br/>StorageDead(_614)<br/>StorageDead(_610)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>_898 = const _<br/>_631 = &amp;(*_898)<br/>_630 = &amp;(*_631)<br/>_629 = move _630 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_630)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_639 = &amp;_486<br/>_638 = &amp;(*_639)<br/></td></tr><tr><td align="left">_637 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i128&gt;(move _638)</td></tr></table>>];
    bb279__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageLive(_617)<br/>_617 = ((_610 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_619)<br/>_619 = _617<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _619)</td></tr></table>>];
    bb280__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_619)<br/>StorageDead(_617)<br/>_941 = discriminant(_610)<br/>StorageDead(_614)<br/>StorageDead(_610)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_638)<br/>_636 = [move _637]<br/>StorageDead(_637)<br/>_635 = &amp;_636<br/>_634 = &amp;(*_635)<br/>_633 = move _634 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_634)<br/></td></tr><tr><td align="left">_628 = Arguments::&lt;'_&gt;::new_v1(move _629, move _633)</td></tr></table>>];
    bb282__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_633)<br/>StorageDead(_629)<br/></td></tr><tr><td align="left">_627 = format(move _628)</td></tr></table>>];
    bb283__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_628)<br/>StorageDead(_639)<br/>StorageDead(_636)<br/>StorageDead(_635)<br/>StorageDead(_631)<br/>_626 = move _627<br/>StorageDead(_627)<br/>_625 = &amp;_626<br/>_624 = &amp;(*_625)<br/></td></tr><tr><td align="left">_623 = &lt;String as Deref&gt;::deref(move _624)</td></tr></table>>];
    bb284__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">_622 = &amp;(*_623)<br/>StorageDead(_624)<br/></td></tr><tr><td align="left">_621 = solana_program::log::sol_log(move _622)</td></tr></table>>];
    bb285__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/></td></tr><tr><td align="left">drop(_626)</td></tr></table>>];
    bb286__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_626)<br/>StorageDead(_625)<br/>StorageDead(_623)<br/>StorageDead(_621)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>StorageLive(_644)<br/>_644 = _486<br/></td></tr><tr><td align="left">_643 = core::num::&lt;impl i128&gt;::unsigned_abs(move _644)</td></tr></table>>];
    bb287__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_644)<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>_897 = const _<br/>_646 = &amp;(*_897)<br/>_645 = &amp;(*_646)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>_650 = &amp;mut (*_608)<br/></td></tr><tr><td align="left">_649 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _650)</td></tr></table>>];
    bb288__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">_648 = &amp;mut (*_649)<br/>StorageDead(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>_655 = &amp;mut (*_596)<br/></td></tr><tr><td align="left">_654 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _655)</td></tr></table>>];
    bb289__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_655)<br/>_653 = &amp;mut (((*_654).1: state::perp_market::AMM).4: state::perp_market::PoolBalance)<br/>_652 = &amp;mut (*_653)<br/>_651 = move _652 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_652)<br/></td></tr><tr><td align="left">_642 = update_spot_balances(move _643, move _645, move _648, move _651, const false)</td></tr></table>>];
    bb290__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_651)<br/>StorageDead(_648)<br/>StorageDead(_645)<br/>StorageDead(_643)<br/></td></tr><tr><td align="left">_641 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _642)</td></tr></table>>];
    bb291__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_642)<br/>_656 = discriminant(_641)<br/></td></tr><tr><td align="left">switchInt(move _656)</td></tr></table>>];
    bb292__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageLive(_660)<br/>_660 = ((_641 as Continue).0: ())<br/>_640 = _660<br/>StorageDead(_660)<br/>StorageDead(_654)<br/>StorageDead(_653)<br/>StorageDead(_649)<br/>StorageDead(_646)<br/>StorageDead(_641)<br/>StorageDead(_640)<br/>_593 = const ()<br/></td></tr><tr><td align="left">drop(_609)</td></tr></table>>];
    bb293__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageLive(_657)<br/>_657 = ((_641 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_659)<br/>_659 = _657<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _659)</td></tr></table>>];
    bb294__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_659)<br/>StorageDead(_657)<br/>StorageDead(_654)<br/>StorageDead(_653)<br/>StorageDead(_649)<br/>StorageDead(_646)<br/>StorageDead(_641)<br/>StorageDead(_640)<br/></td></tr><tr><td align="left">drop(_609)</td></tr></table>>];
    bb295__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_609)<br/>StorageDead(_608)<br/></td></tr><tr><td align="left">drop(_597)</td></tr></table>>];
    bb296__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_597)<br/>StorageDead(_596)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_594)<br/>StorageDead(_593)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>StorageLive(_664)<br/>_664 = _433<br/>StorageLive(_665)<br/>StorageLive(_666)<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>_668 = _486<br/></td></tr><tr><td align="left">_667 = &lt;i128 as Cast&gt;::cast::&lt;i128&gt;(move _668)</td></tr></table>>];
    bb298__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_668)<br/></td></tr><tr><td align="left">_666 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _667)</td></tr></table>>];
    bb299__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>_669 = discriminant(_666)<br/></td></tr><tr><td align="left">switchInt(move _669)</td></tr></table>>];
    bb300__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageLive(_673)<br/>_673 = ((_666 as Continue).0: i128)<br/>_665 = _673<br/>StorageDead(_673)<br/></td></tr><tr><td align="left">_663 = &lt;i128 as SafeMath&gt;::safe_add(move _664, move _665)</td></tr></table>>];
    bb301__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageLive(_670)<br/>_670 = ((_666 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_672)<br/>_672 = _670<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _672)</td></tr></table>>];
    bb302__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_672)<br/>StorageDead(_670)<br/>StorageDead(_665)<br/>StorageDead(_664)<br/>StorageDead(_663)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb303__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_665)<br/>StorageDead(_664)<br/></td></tr><tr><td align="left">_662 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _663)</td></tr></table>>];
    bb304__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_663)<br/>_674 = discriminant(_662)<br/></td></tr><tr><td align="left">switchInt(move _674)</td></tr></table>>];
    bb305__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageLive(_678)<br/>_678 = ((_662 as Continue).0: i128)<br/>_661 = _678<br/>StorageDead(_678)<br/>StorageDead(_666)<br/>StorageDead(_662)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>_683 = _661<br/>_682 = Le(move _683, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _682)</td></tr></table>>];
    bb306__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageLive(_675)<br/>_675 = ((_662 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_677)<br/>_677 = _675<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _677)</td></tr></table>>];
    bb307__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_677)<br/>StorageDead(_675)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb308__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_683)<br/>StorageLive(_684)<br/>_684 = ()<br/>_681 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _684)<br/>StorageDead(_684)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb309__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_683)<br/>StorageLive(_685)<br/>_685 = error::ErrorCode::InvalidPerpPositionToLiquidate<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>StorageLive(_696)<br/>_896 = const _<br/>_696 = &amp;(*_896)<br/>_695 = &amp;(*_696)<br/>_694 = move _695 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_695)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>_704 = &amp;_685<br/>_703 = &amp;(*_704)<br/></td></tr><tr><td align="left">_702 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _703)</td></tr></table>>];
    bb310__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/>_701 = [move _702]<br/>StorageDead(_702)<br/>_700 = &amp;_701<br/>_699 = &amp;(*_700)<br/>_698 = move _699 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_699)<br/></td></tr><tr><td align="left">_693 = Arguments::&lt;'_&gt;::new_v1(move _694, move _698)</td></tr></table>>];
    bb311__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_698)<br/>StorageDead(_694)<br/></td></tr><tr><td align="left">_692 = format(move _693)</td></tr></table>>];
    bb312__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_693)<br/>StorageDead(_704)<br/>StorageDead(_701)<br/>StorageDead(_700)<br/>StorageDead(_696)<br/>_691 = move _692<br/>StorageDead(_692)<br/>_690 = &amp;_691<br/>_689 = &amp;(*_690)<br/></td></tr><tr><td align="left">_688 = &lt;String as Deref&gt;::deref(move _689)</td></tr></table>>];
    bb313__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">_687 = &amp;(*_688)<br/>StorageDead(_689)<br/></td></tr><tr><td align="left">_686 = solana_program::log::sol_log(move _687)</td></tr></table>>];
    bb314__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_687)<br/></td></tr><tr><td align="left">drop(_691)</td></tr></table>>];
    bb315__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_691)<br/>StorageDead(_690)<br/>StorageDead(_688)<br/>StorageDead(_686)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>StorageLive(_707)<br/>_707 = const &quot;loss_to_socialize must be non-positive&quot;<br/>_706 = &amp;(*_707)<br/></td></tr><tr><td align="left">_705 = solana_program::log::sol_log(move _706)</td></tr></table>>];
    bb316__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_706)<br/>StorageDead(_707)<br/>StorageDead(_705)<br/>StorageLive(_708)<br/>_708 = _685<br/>_681 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _708)<br/>StorageDead(_708)<br/>StorageDead(_685)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb317__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/></td></tr><tr><td align="left">_680 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _681)</td></tr></table>>];
    bb318__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">StorageDead(_681)<br/>_709 = discriminant(_680)<br/></td></tr><tr><td align="left">switchInt(move _709)</td></tr></table>>];
    bb319__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageLive(_713)<br/>_713 = ((_680 as Continue).0: ())<br/>_679 = _713<br/>StorageDead(_713)<br/>StorageDead(_680)<br/>StorageDead(_679)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>_717 = _661<br/>StorageLive(_718)<br/>StorageLive(_719)<br/>StorageLive(_720)<br/>StorageLive(_721)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>_724 = &amp;(*_6)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>_726 = &amp;_1<br/>_725 = &amp;(*_726)<br/></td></tr><tr><td align="left">_723 = PerpMarketMap::&lt;'_&gt;::get_ref(move _724, move _725)</td></tr></table>>];
    bb320__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageLive(_710)<br/>_710 = ((_680 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_712)<br/>_712 = _710<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _712)</td></tr></table>>];
    bb321__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_712)<br/>StorageDead(_710)<br/>StorageDead(_680)<br/>StorageDead(_679)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb322__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_725)<br/>StorageDead(_724)<br/></td></tr><tr><td align="left">_722 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _723)</td></tr></table>>];
    bb323__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">_915 = const true<br/>StorageDead(_723)<br/>_727 = discriminant(_722)<br/></td></tr><tr><td align="left">switchInt(move _727)</td></tr></table>>];
    bb324__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageLive(_731)<br/>_731 = move ((_722 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_721 = move _731<br/>StorageDead(_731)<br/>_720 = &amp;_721<br/></td></tr><tr><td align="left">_719 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _720)</td></tr></table>>];
    bb325__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageLive(_728)<br/>_728 = ((_722 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_730)<br/>_730 = _728<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _730)</td></tr></table>>];
    bb326__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>StorageDead(_728)<br/>StorageDead(_720)<br/>StorageDead(_718)<br/>StorageDead(_717)<br/>StorageDead(_716)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb327__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">_718 = &amp;(*_719)<br/>StorageDead(_720)<br/></td></tr><tr><td align="left">_716 = calculate_funding_rate_deltas_to_resolve_bankruptcy(move _717, move _718)</td></tr></table>>];
    bb328__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_718)<br/>StorageDead(_717)<br/></td></tr><tr><td align="left">_715 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _716)</td></tr></table>>];
    bb329__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_716)<br/>_732 = discriminant(_715)<br/></td></tr><tr><td align="left">switchInt(move _732)</td></tr></table>>];
    bb330__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageLive(_736)<br/>_736 = ((_715 as Continue).0: i128)<br/>_714 = _736<br/>StorageDead(_736)<br/></td></tr><tr><td align="left">drop(_721)</td></tr></table>>];
    bb331__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageLive(_733)<br/>_733 = ((_715 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_735)<br/>_735 = _733<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _735)</td></tr></table>>];
    bb332__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_735)<br/>StorageDead(_733)<br/></td></tr><tr><td align="left">drop(_721)</td></tr></table>>];
    bb333__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_739)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>_743 = &amp;(*_6)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>_745 = &amp;_1<br/>_744 = &amp;(*_745)<br/></td></tr><tr><td align="left">_742 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _743, move _744)</td></tr></table>>];
    bb334__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_744)<br/>StorageDead(_743)<br/></td></tr><tr><td align="left">_741 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _742)</td></tr></table>>];
    bb335__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_742)<br/>_746 = discriminant(_741)<br/></td></tr><tr><td align="left">switchInt(move _746)</td></tr></table>>];
    bb336__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageLive(_750)<br/>_750 = move ((_741 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_740 = move _750<br/>StorageDead(_750)<br/>_949 = discriminant(_741)<br/>StorageDead(_745)<br/>StorageDead(_741)<br/>StorageLive(_751)<br/>StorageLive(_752)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>_756 = &amp;_740<br/></td></tr><tr><td align="left">_755 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _756)</td></tr></table>>];
    bb337__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageLive(_747)<br/>_747 = ((_741 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_749)<br/>_749 = _747<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _749)</td></tr></table>>];
    bb338__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_749)<br/>StorageDead(_747)<br/>_947 = discriminant(_741)<br/>StorageDead(_745)<br/>StorageDead(_741)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_756)<br/>_754 = (((*_755).1: state::perp_market::AMM).36: u128)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>_758 = _661<br/></td></tr><tr><td align="left">_757 = core::num::&lt;impl i128&gt;::unsigned_abs(move _758)</td></tr></table>>];
    bb340__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_758)<br/></td></tr><tr><td align="left">_753 = &lt;u128 as SafeMath&gt;::safe_add(move _754, move _757)</td></tr></table>>];
    bb341__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageDead(_757)<br/>StorageDead(_754)<br/></td></tr><tr><td align="left">_752 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _753)</td></tr></table>>];
    bb342__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_753)<br/>_759 = discriminant(_752)<br/></td></tr><tr><td align="left">switchInt(move _759)</td></tr></table>>];
    bb343__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageLive(_763)<br/>_763 = ((_752 as Continue).0: u128)<br/>_751 = _763<br/>StorageDead(_763)<br/>StorageLive(_764)<br/>StorageLive(_765)<br/>_765 = &amp;mut _740<br/></td></tr><tr><td align="left">_764 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _765)</td></tr></table>>];
    bb344__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageLive(_760)<br/>_760 = ((_752 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_762)<br/>_762 = _760<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _762)</td></tr></table>>];
    bb345__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>StorageDead(_760)<br/>StorageDead(_751)<br/>StorageDead(_755)<br/>StorageDead(_752)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb346__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_765)<br/>(((*_764).1: state::perp_market::AMM).36: u128) = move _751<br/>StorageDead(_751)<br/>StorageDead(_764)<br/>StorageDead(_755)<br/>StorageDead(_752)<br/>StorageLive(_766)<br/>StorageLive(_767)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>_771 = &amp;_740<br/></td></tr><tr><td align="left">_770 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _771)</td></tr></table>>];
    bb347__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_771)<br/>_769 = (((*_770).1: state::perp_market::AMM).34: i128)<br/>StorageLive(_772)<br/>_772 = _714<br/></td></tr><tr><td align="left">_768 = &lt;i128 as SafeMath&gt;::safe_add(move _769, move _772)</td></tr></table>>];
    bb348__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/>StorageDead(_769)<br/></td></tr><tr><td align="left">_767 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _768)</td></tr></table>>];
    bb349__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_768)<br/>_773 = discriminant(_767)<br/></td></tr><tr><td align="left">switchInt(move _773)</td></tr></table>>];
    bb350__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageLive(_777)<br/>_777 = ((_767 as Continue).0: i128)<br/>_766 = _777<br/>StorageDead(_777)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>_779 = &amp;mut _740<br/></td></tr><tr><td align="left">_778 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _779)</td></tr></table>>];
    bb351__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageLive(_774)<br/>_774 = ((_767 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_776)<br/>_776 = _774<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _776)</td></tr></table>>];
    bb352__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_776)<br/>StorageDead(_774)<br/>StorageDead(_766)<br/>StorageDead(_770)<br/>StorageDead(_767)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb353__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_779)<br/>(((*_778).1: state::perp_market::AMM).34: i128) = move _766<br/>StorageDead(_766)<br/>StorageDead(_778)<br/>StorageDead(_770)<br/>StorageDead(_767)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>_785 = &amp;_740<br/></td></tr><tr><td align="left">_784 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _785)</td></tr></table>>];
    bb354__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_785)<br/>_783 = (((*_784).1: state::perp_market::AMM).35: i128)<br/>StorageLive(_786)<br/>_786 = _714<br/></td></tr><tr><td align="left">_782 = &lt;i128 as SafeMath&gt;::safe_sub(move _783, move _786)</td></tr></table>>];
    bb355__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_786)<br/>StorageDead(_783)<br/></td></tr><tr><td align="left">_781 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _782)</td></tr></table>>];
    bb356__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_782)<br/>_787 = discriminant(_781)<br/></td></tr><tr><td align="left">switchInt(move _787)</td></tr></table>>];
    bb357__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageLive(_791)<br/>_791 = ((_781 as Continue).0: i128)<br/>_780 = _791<br/>StorageDead(_791)<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>_793 = &amp;mut _740<br/></td></tr><tr><td align="left">_792 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _793)</td></tr></table>>];
    bb358__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_788)<br/>_788 = ((_781 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_790)<br/>_790 = _788<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _790)</td></tr></table>>];
    bb359__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_790)<br/>StorageDead(_788)<br/>StorageDead(_780)<br/>StorageDead(_784)<br/>StorageDead(_781)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb360__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_793)<br/>(((*_792).1: state::perp_market::AMM).35: i128) = move _780<br/>StorageDead(_780)<br/>StorageDead(_792)<br/>StorageDead(_784)<br/>StorageDead(_781)<br/>_737 = const ()<br/></td></tr><tr><td align="left">drop(_740)</td></tr></table>>];
    bb361__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb362__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_739)<br/>_737 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb363__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>StorageDead(_737)<br/>StorageLive(_794)<br/>StorageLive(_795)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>_798 = &amp;(*_6)<br/>StorageLive(_799)<br/>StorageLive(_800)<br/>_800 = &amp;_1<br/>_799 = &amp;(*_800)<br/></td></tr><tr><td align="left">_797 = PerpMarketMap::&lt;'_&gt;::get_ref_mut(move _798, move _799)</td></tr></table>>];
    bb364__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_799)<br/>StorageDead(_798)<br/></td></tr><tr><td align="left">_796 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _797)</td></tr></table>>];
    bb365__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/>_801 = discriminant(_796)<br/></td></tr><tr><td align="left">switchInt(move _801)</td></tr></table>>];
    bb366__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageLive(_805)<br/>_805 = move ((_796 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_795 = move _805<br/>StorageDead(_805)<br/>_953 = discriminant(_796)<br/>StorageDead(_800)<br/>StorageDead(_796)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>_810 = &amp;((*_2).4: [state::user::PerpPosition; 8])<br/>_809 = &amp;(*_810)<br/>StorageLive(_811)<br/>_811 = _1<br/></td></tr><tr><td align="left">_808 = get_position_index(move _809, move _811)</td></tr></table>>];
    bb367__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageLive(_802)<br/>_802 = ((_796 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_804)<br/>_804 = _802<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _804)</td></tr></table>>];
    bb368__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_804)<br/>StorageDead(_802)<br/>_951 = discriminant(_796)<br/>StorageDead(_800)<br/>StorageDead(_796)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb369__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_811)<br/>StorageDead(_809)<br/></td></tr><tr><td align="left">_807 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _808)</td></tr></table>>];
    bb370__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_808)<br/>_812 = discriminant(_807)<br/></td></tr><tr><td align="left">switchInt(move _812)</td></tr></table>>];
    bb371__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageLive(_816)<br/>_816 = ((_807 as Continue).0: usize)<br/>_806 = _816<br/>StorageDead(_816)<br/>StorageDead(_810)<br/>StorageDead(_807)<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>_818 = _806<br/>_819 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_820 = Lt(_818, _819)<br/></td></tr><tr><td align="left">assert(move _820, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _819, _818)</td></tr></table>>];
    bb372__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageLive(_813)<br/>_813 = ((_807 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_815)<br/>_815 = _813<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _815)</td></tr></table>>];
    bb373__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_815)<br/>StorageDead(_813)<br/>StorageDead(_810)<br/>StorageDead(_807)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb374__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">_817 = (((*_2).4: [state::user::PerpPosition; 8])[_818].2: i64)<br/>StorageDead(_818)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>StorageLive(_823)<br/>StorageLive(_824)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>_826 = _806<br/>_827 = Len(((*_2).4: [state::user::PerpPosition; 8]))<br/>_828 = Lt(_826, _827)<br/></td></tr><tr><td align="left">assert(move _828, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _827, _826)</td></tr></table>>];
    bb375__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">_825 = &amp;mut ((*_2).4: [state::user::PerpPosition; 8])[_826]<br/>_824 = &amp;mut (*_825)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>StorageLive(_831)<br/>StorageLive(_832)<br/>_832 = &amp;mut _795<br/>_831 = &amp;mut (*_832)<br/></td></tr><tr><td align="left">_830 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _831)</td></tr></table>>];
    bb376__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">_829 = &amp;mut (*_830)<br/>StorageDead(_831)<br/>StorageLive(_833)<br/>StorageLive(_834)<br/>_834 = _817<br/>_835 = Eq(_834, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _835, &quot;attempt to negate `{}`, which would overflow&quot;, _834)</td></tr></table>>];
    bb377__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">_833 = Neg(move _834)<br/>StorageDead(_834)<br/></td></tr><tr><td align="left">_823 = update_quote_asset_amount(move _824, move _829, move _833)</td></tr></table>>];
    bb378__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_833)<br/>StorageDead(_829)<br/>StorageDead(_824)<br/></td></tr><tr><td align="left">_822 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _823)</td></tr></table>>];
    bb379__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>_836 = discriminant(_822)<br/></td></tr><tr><td align="left">switchInt(move _836)</td></tr></table>>];
    bb380__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageLive(_840)<br/>_840 = ((_822 as Continue).0: ())<br/>_821 = _840<br/>StorageDead(_840)<br/>StorageDead(_832)<br/>StorageDead(_830)<br/>StorageDead(_826)<br/>StorageDead(_825)<br/>StorageDead(_822)<br/>StorageDead(_821)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>StorageLive(_843)<br/>StorageLive(_844)<br/>_844 = &amp;mut (*_2)<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>_846 = _817<br/></td></tr><tr><td align="left">_845 = core::num::&lt;impl i64&gt;::unsigned_abs(move _846)</td></tr></table>>];
    bb381__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageLive(_837)<br/>_837 = ((_822 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_839)<br/>_839 = _837<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _839)</td></tr></table>>];
    bb382__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/>StorageDead(_837)<br/>StorageDead(_832)<br/>StorageDead(_830)<br/>StorageDead(_826)<br/>StorageDead(_825)<br/>StorageDead(_822)<br/>StorageDead(_821)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb383__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageDead(_846)<br/></td></tr><tr><td align="left">_843 = User::increment_total_socialized_loss(move _844, move _845)</td></tr></table>>];
    bb384__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_845)<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">_842 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _843)</td></tr></table>>];
    bb385__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_843)<br/>_847 = discriminant(_842)<br/></td></tr><tr><td align="left">switchInt(move _847)</td></tr></table>>];
    bb386__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageLive(_851)<br/>_851 = ((_842 as Continue).0: ())<br/>_841 = _851<br/>StorageDead(_851)<br/>StorageDead(_842)<br/>StorageDead(_841)<br/>_794 = const ()<br/>StorageDead(_817)<br/>StorageDead(_806)<br/></td></tr><tr><td align="left">drop(_795)</td></tr></table>>];
    bb387__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageLive(_848)<br/>_848 = ((_842 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_850)<br/>_850 = _848<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _850)</td></tr></table>>];
    bb388__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_850)<br/>StorageDead(_848)<br/>StorageDead(_842)<br/>StorageDead(_841)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb389__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_795)<br/>StorageDead(_794)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>_854 = &amp;(*_2)<br/></td></tr><tr><td align="left">_853 = is_user_bankrupt(move _854)</td></tr></table>>];
    bb390__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left">switchInt(move _853)</td></tr></table>>];
    bb391__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_854)<br/>_852 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb392__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_854)<br/>StorageLive(_855)<br/>StorageLive(_856)<br/>_856 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_855 = User::exit_bankruptcy(move _856)</td></tr></table>>];
    bb393__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/>StorageDead(_855)<br/>_852 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb394__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_853)<br/>StorageDead(_852)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>_860 = ((*_2).17: u16)<br/></td></tr><tr><td align="left">_859 = &lt;u16 as SafeMath&gt;::safe_sub(move _860, const 1_u16)</td></tr></table>>];
    bb395__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_860)<br/></td></tr><tr><td align="left">_858 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _859)</td></tr></table>>];
    bb396__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_859)<br/>_861 = discriminant(_858)<br/></td></tr><tr><td align="left">switchInt(move _861)</td></tr></table>>];
    bb397__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageLive(_865)<br/>_865 = ((_858 as Continue).0: u16)<br/>_857 = _865<br/>StorageDead(_865)<br/>StorageDead(_858)<br/>StorageLive(_866)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>StorageLive(_872)<br/>StorageLive(_873)<br/>StorageLive(_874)<br/>StorageLive(_875)<br/>StorageLive(_876)<br/>StorageLive(_877)<br/>StorageLive(_878)<br/>StorageLive(_879)<br/>StorageLive(_880)<br/>_880 = _9<br/>StorageLive(_881)<br/>_881 = _857<br/>StorageLive(_882)<br/>_882 = LiquidationType::PerpBankruptcy<br/>StorageLive(_883)<br/>_883 = (*_3)<br/>StorageLive(_884)<br/>_884 = (*_5)<br/>StorageLive(_885)<br/>_885 = _284<br/>StorageLive(_886)<br/>_886 = _285<br/>StorageLive(_887)<br/>StorageLive(_888)<br/>_888 = _1<br/>StorageLive(_889)<br/>_889 = _300<br/>StorageLive(_890)<br/>_890 = _230<br/>StorageLive(_891)<br/>_891 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::None<br/>StorageLive(_892)<br/>_892 = Option::&lt;u128&gt;::None<br/>StorageLive(_893)<br/>_893 = _714<br/>_887 = PerpBankruptcyRecord { market_index: move _888, pnl: move _890, if_payment: move _889, clawback_user: move _891, clawback_user_payment: move _892, cumulative_funding_rate_delta: move _893 }<br/>StorageDead(_893)<br/>StorageDead(_892)<br/>StorageDead(_891)<br/>StorageDead(_890)<br/>StorageDead(_889)<br/>StorageDead(_888)<br/>StorageLive(_894)<br/></td></tr><tr><td align="left">_894 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb398__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageLive(_862)<br/>_862 = ((_858 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_864)<br/>_864 = _862<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _864)</td></tr></table>>];
    bb399__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_864)<br/>StorageDead(_862)<br/>StorageDead(_858)<br/>StorageDead(_857)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb400__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">_879 = LiquidationRecord { ts: move _880, liquidation_type: move _882, user: move _883, liquidator: move _884, margin_requirement: move _885, total_collateral: move _886, margin_freed: (_894.6: u64), liquidation_id: move _881, bankrupt: const true, canceled_order_ids: move (_894.9: std::vec::Vec&lt;u32&gt;), liquidate_perp: move (_894.10: state::events::LiquidatePerpRecord), liquidate_spot: move (_894.11: state::events::LiquidateSpotRecord), liquidate_borrow_for_perp_pnl: move (_894.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move (_894.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move _887, spot_bankruptcy: move (_894.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_887)<br/>StorageDead(_886)<br/>StorageDead(_885)<br/>StorageDead(_884)<br/>StorageDead(_883)<br/>StorageDead(_882)<br/>StorageDead(_881)<br/>StorageDead(_880)<br/>_878 = &amp;_879<br/>_877 = &amp;(*_878)<br/></td></tr><tr><td align="left">_876 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _877)</td></tr></table>>];
    bb401__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_877)<br/>_875 = &amp;_876<br/>_874 = &amp;(*_875)<br/></td></tr><tr><td align="left">_873 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _874)</td></tr></table>>];
    bb402__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">_872 = &amp;(*_873)<br/>StorageDead(_874)<br/>_871 = [move _872]<br/>StorageDead(_872)<br/>_870 = &amp;_871<br/>_869 = &amp;(*_870)<br/>_868 = move _869 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_869)<br/></td></tr><tr><td align="left">_867 = solana_program::log::sol_log_data(move _868)</td></tr></table>>];
    bb403__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_868)<br/></td></tr><tr><td align="left">drop(_876)</td></tr></table>>];
    bb404__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left">drop(_879)</td></tr></table>>];
    bb405__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_894)<br/>StorageDead(_879)<br/>StorageDead(_878)<br/>StorageDead(_876)<br/>StorageDead(_875)<br/>StorageDead(_873)<br/>StorageDead(_871)<br/>StorageDead(_870)<br/>StorageDead(_867)<br/>_866 = const ()<br/>StorageDead(_866)<br/>StorageLive(_895)<br/>_895 = _300<br/></td></tr><tr><td align="left">_0 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _895)</td></tr></table>>];
    bb406__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_895)<br/>StorageDead(_857)<br/>StorageDead(_714)<br/>StorageDead(_661)<br/>StorageDead(_486)<br/>StorageDead(_433)<br/>StorageDead(_300)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/>StorageDead(_230)<br/>_916 = const false<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb407__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_817)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb408__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_806)<br/></td></tr><tr><td align="left">drop(_795)</td></tr></table>>];
    bb409__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_795)<br/>StorageDead(_794)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb410__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left">drop(_740)</td></tr></table>>];
    bb411__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_740)<br/>StorageDead(_738)<br/>StorageDead(_737)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb412__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_714)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb413__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_666)<br/>StorageDead(_662)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb414__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageDead(_661)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb415__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_609)<br/>StorageDead(_608)<br/></td></tr><tr><td align="left">drop(_597)</td></tr></table>>];
    bb416__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_597)<br/>StorageDead(_596)<br/>StorageDead(_594)<br/>StorageDead(_593)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_501)<br/></td></tr><tr><td align="left">drop(_490)</td></tr></table>>];
    bb418__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageDead(_489)<br/>StorageDead(_550)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb419__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_501)<br/></td></tr><tr><td align="left">drop(_490)</td></tr></table>>];
    bb420__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>StorageDead(_489)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb421__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_487)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb423__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_438)<br/>StorageDead(_434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb424__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb425__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/></td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb426__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_371)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb427__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_356)<br/>StorageDead(_353)<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb428__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb429__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_319)<br/>StorageDead(_316)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb430__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/></td></tr><tr><td align="left">drop(_301)</td></tr></table>>];
    bb431__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb432__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb433__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_234)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb434__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb435__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">_916 = const false<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb436__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left">return</td></tr></table>>];
    bb437__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">437 (cleanup)</td></tr><tr><td align="left">drop(_876)</td></tr></table>>];
    bb438__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">438 (cleanup)</td></tr><tr><td align="left">drop(_879)</td></tr></table>>];
    bb439__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">439 (cleanup)</td></tr><tr><td align="left">drop(_795)</td></tr></table>>];
    bb440__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">440 (cleanup)</td></tr><tr><td align="left">drop(_740)</td></tr></table>>];
    bb441__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">441 (cleanup)</td></tr><tr><td align="left">drop(_721)</td></tr></table>>];
    bb442__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">442 (cleanup)</td></tr><tr><td align="left">drop(_691)</td></tr></table>>];
    bb443__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">443 (cleanup)</td></tr><tr><td align="left">drop(_626)</td></tr></table>>];
    bb444__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">444 (cleanup)</td></tr><tr><td align="left">drop(_609)</td></tr></table>>];
    bb445__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">445 (cleanup)</td></tr><tr><td align="left">drop(_597)</td></tr></table>>];
    bb446__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">446 (cleanup)</td></tr><tr><td align="left">drop(_570)</td></tr></table>>];
    bb447__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">447 (cleanup)</td></tr><tr><td align="left">drop(_533)</td></tr></table>>];
    bb448__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">448 (cleanup)</td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb449__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">449 (cleanup)</td></tr><tr><td align="left">drop(_490)</td></tr></table>>];
    bb450__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">450 (cleanup)</td></tr><tr><td align="left">drop(_463)</td></tr></table>>];
    bb451__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">451 (cleanup)</td></tr><tr><td align="left">drop(_372)</td></tr></table>>];
    bb452__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">452 (cleanup)</td></tr><tr><td align="left">drop(_301)</td></tr></table>>];
    bb453__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">453 (cleanup)</td></tr><tr><td align="left">drop(_261)</td></tr></table>>];
    bb454__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">454 (cleanup)</td></tr><tr><td align="left">drop(_195)</td></tr></table>>];
    bb455__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">455 (cleanup)</td></tr><tr><td align="left">drop(_176)</td></tr></table>>];
    bb456__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">456 (cleanup)</td></tr><tr><td align="left">drop(_137)</td></tr></table>>];
    bb457__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">457 (cleanup)</td></tr><tr><td align="left">drop(_118)</td></tr></table>>];
    bb458__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">458 (cleanup)</td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb459__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">459 (cleanup)</td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb460__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">460 (cleanup)</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb461__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">461 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb462__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">462 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb463__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">_945 = discriminant(_722)<br/>StorageDead(_726)<br/>_915 = const false<br/>StorageDead(_722)<br/>StorageDead(_721)<br/>StorageDead(_719)<br/>StorageDead(_715)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>_739 = _661<br/>_738 = Lt(move _739, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _738)</td></tr></table>>];
    bb464__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">_955 = discriminant(_722)<br/>StorageDead(_726)<br/>_915 = const false<br/>StorageDead(_722)<br/>StorageDead(_721)<br/>StorageDead(_719)<br/>StorageDead(_715)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb465__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb466__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left">switchInt(_916)</td></tr></table>>];
    bb467__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">467 (cleanup)</td></tr><tr><td align="left" balign="left">_957 = discriminant(_796)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb468__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">468 (cleanup)</td></tr><tr><td align="left" balign="left">_958 = discriminant(_741)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb469__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">469 (cleanup)</td></tr><tr><td align="left" balign="left">_959 = discriminant(_722)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb470__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">470 (cleanup)</td></tr><tr><td align="left" balign="left">_960 = discriminant(_610)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb471__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">471 (cleanup)</td></tr><tr><td align="left" balign="left">_961 = discriminant(_598)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb472__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">472 (cleanup)</td></tr><tr><td align="left" balign="left">_962 = discriminant(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb473__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">473 (cleanup)</td></tr><tr><td align="left" balign="left">_963 = discriminant(_491)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb474__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">474 (cleanup)</td></tr><tr><td align="left" balign="left">_964 = discriminant(_373)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb475__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">475 (cleanup)</td></tr><tr><td align="left" balign="left">_965 = discriminant(_302)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb476__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">476 (cleanup)</td></tr><tr><td align="left">drop(_150)</td></tr></table>>];
    bb477__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">477 (cleanup)</td></tr><tr><td align="left">switchInt(_916)</td></tr></table>>];
    bb478__0_352 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">478 (cleanup)</td></tr><tr><td align="left" balign="left">_966 = discriminant(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_352 -> bb1__0_352 [label="return"];
    bb1__0_352 -> bb3__0_352 [label="0"];
    bb1__0_352 -> bb2__0_352 [label="otherwise"];
    bb2__0_352 -> bb8__0_352 [label=""];
    bb3__0_352 -> bb4__0_352 [label="return"];
    bb4__0_352 -> bb7__0_352 [label="0"];
    bb4__0_352 -> bb5__0_352 [label="otherwise"];
    bb5__0_352 -> bb6__0_352 [label="return"];
    bb6__0_352 -> bb9__0_352 [label=""];
    bb7__0_352 -> bb8__0_352 [label=""];
    bb8__0_352 -> bb9__0_352 [label=""];
    bb9__0_352 -> bb10__0_352 [label="return"];
    bb10__0_352 -> bb12__0_352 [label="0"];
    bb10__0_352 -> bb11__0_352 [label="otherwise"];
    bb11__0_352 -> bb24__0_352 [label=""];
    bb12__0_352 -> bb13__0_352 [label="return"];
    bb13__0_352 -> bb14__0_352 [label="return"];
    bb14__0_352 -> bb15__0_352 [label="return"];
    bb15__0_352 -> bb16__0_352 [label="return"];
    bb15__0_352 -> bb461__0_352 [label="unwind"];
    bb16__0_352 -> bb17__0_352 [label="return"];
    bb16__0_352 -> bb461__0_352 [label="unwind"];
    bb17__0_352 -> bb18__0_352 [label="return"];
    bb17__0_352 -> bb462__0_352 [label="unwind"];
    bb18__0_352 -> bb19__0_352 [label="return"];
    bb19__0_352 -> bb20__0_352 [label="return"];
    bb20__0_352 -> bb21__0_352 [label="return"];
    bb20__0_352 -> bb460__0_352 [label="unwind"];
    bb21__0_352 -> bb22__0_352 [label="return"];
    bb21__0_352 -> bb460__0_352 [label="unwind"];
    bb22__0_352 -> bb23__0_352 [label="return"];
    bb22__0_352 -> bb462__0_352 [label="unwind"];
    bb23__0_352 -> bb24__0_352 [label=""];
    bb24__0_352 -> bb25__0_352 [label="return"];
    bb25__0_352 -> bb26__0_352 [label="0"];
    bb25__0_352 -> bb28__0_352 [label="1"];
    bb25__0_352 -> bb27__0_352 [label="otherwise"];
    bb26__0_352 -> bb30__0_352 [label="return"];
    bb28__0_352 -> bb29__0_352 [label="return"];
    bb29__0_352 -> bb436__0_352 [label=""];
    bb30__0_352 -> bb32__0_352 [label="0"];
    bb30__0_352 -> bb31__0_352 [label="otherwise"];
    bb31__0_352 -> bb33__0_352 [label="return"];
    bb32__0_352 -> bb44__0_352 [label=""];
    bb33__0_352 -> bb34__0_352 [label="return"];
    bb34__0_352 -> bb35__0_352 [label="return"];
    bb35__0_352 -> bb36__0_352 [label="return"];
    bb35__0_352 -> bb459__0_352 [label="unwind"];
    bb36__0_352 -> bb37__0_352 [label="return"];
    bb36__0_352 -> bb459__0_352 [label="unwind"];
    bb37__0_352 -> bb38__0_352 [label="return"];
    bb37__0_352 -> bb462__0_352 [label="unwind"];
    bb38__0_352 -> bb39__0_352 [label="return"];
    bb39__0_352 -> bb40__0_352 [label="return"];
    bb40__0_352 -> bb41__0_352 [label="return"];
    bb40__0_352 -> bb458__0_352 [label="unwind"];
    bb41__0_352 -> bb42__0_352 [label="return"];
    bb41__0_352 -> bb458__0_352 [label="unwind"];
    bb42__0_352 -> bb43__0_352 [label="return"];
    bb42__0_352 -> bb462__0_352 [label="unwind"];
    bb43__0_352 -> bb44__0_352 [label=""];
    bb44__0_352 -> bb45__0_352 [label="return"];
    bb45__0_352 -> bb46__0_352 [label="0"];
    bb45__0_352 -> bb47__0_352 [label="1"];
    bb45__0_352 -> bb27__0_352 [label="otherwise"];
    bb46__0_352 -> bb49__0_352 [label="return"];
    bb47__0_352 -> bb48__0_352 [label="return"];
    bb48__0_352 -> bb436__0_352 [label=""];
    bb49__0_352 -> bb51__0_352 [label="0"];
    bb49__0_352 -> bb50__0_352 [label="otherwise"];
    bb50__0_352 -> bb52__0_352 [label="return"];
    bb51__0_352 -> bb63__0_352 [label=""];
    bb52__0_352 -> bb53__0_352 [label="return"];
    bb53__0_352 -> bb54__0_352 [label="return"];
    bb54__0_352 -> bb55__0_352 [label="return"];
    bb54__0_352 -> bb457__0_352 [label="unwind"];
    bb55__0_352 -> bb56__0_352 [label="return"];
    bb55__0_352 -> bb457__0_352 [label="unwind"];
    bb56__0_352 -> bb57__0_352 [label="return"];
    bb56__0_352 -> bb462__0_352 [label="unwind"];
    bb57__0_352 -> bb58__0_352 [label="return"];
    bb58__0_352 -> bb59__0_352 [label="return"];
    bb59__0_352 -> bb60__0_352 [label="return"];
    bb59__0_352 -> bb456__0_352 [label="unwind"];
    bb60__0_352 -> bb61__0_352 [label="return"];
    bb60__0_352 -> bb456__0_352 [label="unwind"];
    bb61__0_352 -> bb62__0_352 [label="return"];
    bb61__0_352 -> bb462__0_352 [label="unwind"];
    bb62__0_352 -> bb63__0_352 [label=""];
    bb63__0_352 -> bb64__0_352 [label="return"];
    bb64__0_352 -> bb65__0_352 [label="0"];
    bb64__0_352 -> bb66__0_352 [label="1"];
    bb64__0_352 -> bb27__0_352 [label="otherwise"];
    bb65__0_352 -> bb68__0_352 [label="return"];
    bb66__0_352 -> bb67__0_352 [label="return"];
    bb67__0_352 -> bb436__0_352 [label=""];
    bb68__0_352 -> bb69__0_352 [label="return"];
    bb68__0_352 -> bb462__0_352 [label="unwind"];
    bb69__0_352 -> bb70__0_352 [label="0"];
    bb69__0_352 -> bb71__0_352 [label="1"];
    bb69__0_352 -> bb27__0_352 [label="otherwise"];
    bb70__0_352 -> bb73__0_352 [label="return"];
    bb70__0_352 -> bb477__0_352 [label="unwind"];
    bb71__0_352 -> bb72__0_352 [label="return"];
    bb71__0_352 -> bb478__0_352 [label="unwind"];
    bb72__0_352 -> bb435__0_352 [label=""];
    bb73__0_352 -> bb74__0_352 [label="return"];
    bb73__0_352 -> bb477__0_352 [label="unwind"];
    bb74__0_352 -> bb76__0_352 [label="0"];
    bb74__0_352 -> bb75__0_352 [label="otherwise"];
    bb75__0_352 -> bb77__0_352 [label="return"];
    bb75__0_352 -> bb477__0_352 [label="unwind"];
    bb76__0_352 -> bb89__0_352 [label=""];
    bb77__0_352 -> bb78__0_352 [label="return"];
    bb77__0_352 -> bb477__0_352 [label="unwind"];
    bb78__0_352 -> bb79__0_352 [label="return"];
    bb78__0_352 -> bb477__0_352 [label="unwind"];
    bb79__0_352 -> bb80__0_352 [label="return"];
    bb79__0_352 -> bb455__0_352 [label="unwind"];
    bb80__0_352 -> bb81__0_352 [label="return"];
    bb80__0_352 -> bb455__0_352 [label="unwind"];
    bb81__0_352 -> bb82__0_352 [label="return"];
    bb81__0_352 -> bb477__0_352 [label="unwind"];
    bb82__0_352 -> bb83__0_352 [label="return"];
    bb82__0_352 -> bb477__0_352 [label="unwind"];
    bb83__0_352 -> bb84__0_352 [label="return"];
    bb83__0_352 -> bb477__0_352 [label="unwind"];
    bb84__0_352 -> bb85__0_352 [label="return"];
    bb84__0_352 -> bb477__0_352 [label="unwind"];
    bb85__0_352 -> bb86__0_352 [label="return"];
    bb85__0_352 -> bb454__0_352 [label="unwind"];
    bb86__0_352 -> bb87__0_352 [label="return"];
    bb86__0_352 -> bb454__0_352 [label="unwind"];
    bb87__0_352 -> bb88__0_352 [label="return"];
    bb87__0_352 -> bb477__0_352 [label="unwind"];
    bb88__0_352 -> bb89__0_352 [label=""];
    bb89__0_352 -> bb90__0_352 [label="return"];
    bb89__0_352 -> bb477__0_352 [label="unwind"];
    bb90__0_352 -> bb91__0_352 [label="0"];
    bb90__0_352 -> bb92__0_352 [label="1"];
    bb90__0_352 -> bb27__0_352 [label="otherwise"];
    bb91__0_352 -> bb94__0_352 [label="return"];
    bb91__0_352 -> bb477__0_352 [label="unwind"];
    bb92__0_352 -> bb93__0_352 [label="return"];
    bb92__0_352 -> bb477__0_352 [label="unwind"];
    bb93__0_352 -> bb466__0_352 [label=""];
    bb94__0_352 -> bb95__0_352 [label="return"];
    bb94__0_352 -> bb477__0_352 [label="unwind"];
    bb95__0_352 -> bb96__0_352 [label="return"];
    bb95__0_352 -> bb477__0_352 [label="unwind"];
    bb96__0_352 -> bb97__0_352 [label="return"];
    bb96__0_352 -> bb477__0_352 [label="unwind"];
    bb97__0_352 -> bb98__0_352 [label="0"];
    bb97__0_352 -> bb99__0_352 [label="1"];
    bb97__0_352 -> bb27__0_352 [label="otherwise"];
    bb98__0_352 -> bb101__0_352 [label="return"];
    bb98__0_352 -> bb477__0_352 [label="unwind"];
    bb99__0_352 -> bb100__0_352 [label="return"];
    bb99__0_352 -> bb477__0_352 [label="unwind"];
    bb100__0_352 -> bb466__0_352 [label=""];
    bb101__0_352 -> bb102__0_352 [label="return"];
    bb101__0_352 -> bb477__0_352 [label="unwind"];
    bb102__0_352 -> bb103__0_352 [label="0"];
    bb102__0_352 -> bb104__0_352 [label="1"];
    bb102__0_352 -> bb27__0_352 [label="otherwise"];
    bb103__0_352 -> bb106__0_352 [label="return"];
    bb103__0_352 -> bb477__0_352 [label="unwind"];
    bb104__0_352 -> bb105__0_352 [label="return"];
    bb104__0_352 -> bb477__0_352 [label="unwind"];
    bb105__0_352 -> bb433__0_352 [label=""];
    bb106__0_352 -> bb107__0_352 [label="return"];
    bb106__0_352 -> bb477__0_352 [label="unwind"];
    bb107__0_352 -> bb108__0_352 [label="0"];
    bb107__0_352 -> bb109__0_352 [label="1"];
    bb107__0_352 -> bb27__0_352 [label="otherwise"];
    bb108__0_352 -> bb112__0_352 [label="0"];
    bb108__0_352 -> bb111__0_352 [label="otherwise"];
    bb109__0_352 -> bb110__0_352 [label="return"];
    bb109__0_352 -> bb477__0_352 [label="unwind"];
    bb110__0_352 -> bb433__0_352 [label=""];
    bb111__0_352 -> bb120__0_352 [label=""];
    bb112__0_352 -> bb113__0_352 [label="return"];
    bb112__0_352 -> bb477__0_352 [label="unwind"];
    bb113__0_352 -> bb114__0_352 [label="return"];
    bb113__0_352 -> bb477__0_352 [label="unwind"];
    bb114__0_352 -> bb115__0_352 [label="return"];
    bb114__0_352 -> bb477__0_352 [label="unwind"];
    bb115__0_352 -> bb116__0_352 [label="return"];
    bb115__0_352 -> bb453__0_352 [label="unwind"];
    bb116__0_352 -> bb117__0_352 [label="return"];
    bb116__0_352 -> bb453__0_352 [label="unwind"];
    bb117__0_352 -> bb118__0_352 [label="return"];
    bb117__0_352 -> bb477__0_352 [label="unwind"];
    bb118__0_352 -> bb119__0_352 [label="return"];
    bb118__0_352 -> bb477__0_352 [label="unwind"];
    bb119__0_352 -> bb120__0_352 [label=""];
    bb120__0_352 -> bb121__0_352 [label="return"];
    bb120__0_352 -> bb477__0_352 [label="unwind"];
    bb121__0_352 -> bb122__0_352 [label="0"];
    bb121__0_352 -> bb123__0_352 [label="1"];
    bb121__0_352 -> bb27__0_352 [label="otherwise"];
    bb122__0_352 -> bb125__0_352 [label="return"];
    bb122__0_352 -> bb477__0_352 [label="unwind"];
    bb123__0_352 -> bb124__0_352 [label="return"];
    bb123__0_352 -> bb477__0_352 [label="unwind"];
    bb124__0_352 -> bb434__0_352 [label=""];
    bb125__0_352 -> bb126__0_352 [label="return"];
    bb125__0_352 -> bb477__0_352 [label="unwind"];
    bb126__0_352 -> bb127__0_352 [label="return"];
    bb126__0_352 -> bb477__0_352 [label="unwind"];
    bb127__0_352 -> bb128__0_352 [label="0"];
    bb127__0_352 -> bb129__0_352 [label="1"];
    bb127__0_352 -> bb27__0_352 [label="otherwise"];
    bb128__0_352 -> bb131__0_352 [label="return"];
    bb128__0_352 -> bb477__0_352 [label="unwind"];
    bb129__0_352 -> bb130__0_352 [label="return"];
    bb129__0_352 -> bb477__0_352 [label="unwind"];
    bb130__0_352 -> bb434__0_352 [label=""];
    bb131__0_352 -> bb132__0_352 [label="return"];
    bb131__0_352 -> bb477__0_352 [label="unwind"];
    bb132__0_352 -> bb133__0_352 [label="0"];
    bb132__0_352 -> bb134__0_352 [label="1"];
    bb132__0_352 -> bb27__0_352 [label="otherwise"];
    bb133__0_352 -> bb136__0_352 [label="return"];
    bb133__0_352 -> bb452__0_352 [label="unwind"];
    bb134__0_352 -> bb135__0_352 [label="return"];
    bb134__0_352 -> bb475__0_352 [label="unwind"];
    bb135__0_352 -> bb431__0_352 [label=""];
    bb136__0_352 -> bb137__0_352 [label="return"];
    bb136__0_352 -> bb452__0_352 [label="unwind"];
    bb137__0_352 -> bb138__0_352 [label="return"];
    bb137__0_352 -> bb452__0_352 [label="unwind"];
    bb138__0_352 -> bb139__0_352 [label="return"];
    bb138__0_352 -> bb452__0_352 [label="unwind"];
    bb139__0_352 -> bb140__0_352 [label="0"];
    bb139__0_352 -> bb141__0_352 [label="1"];
    bb139__0_352 -> bb27__0_352 [label="otherwise"];
    bb140__0_352 -> bb143__0_352 [label="return"];
    bb140__0_352 -> bb452__0_352 [label="unwind"];
    bb141__0_352 -> bb142__0_352 [label="return"];
    bb141__0_352 -> bb452__0_352 [label="unwind"];
    bb142__0_352 -> bb429__0_352 [label=""];
    bb143__0_352 -> bb144__0_352 [label="return"];
    bb143__0_352 -> bb452__0_352 [label="unwind"];
    bb144__0_352 -> bb145__0_352 [label="0"];
    bb144__0_352 -> bb146__0_352 [label="1"];
    bb144__0_352 -> bb27__0_352 [label="otherwise"];
    bb145__0_352 -> bb148__0_352 [label="return"];
    bb145__0_352 -> bb452__0_352 [label="unwind"];
    bb146__0_352 -> bb147__0_352 [label="return"];
    bb146__0_352 -> bb452__0_352 [label="unwind"];
    bb147__0_352 -> bb429__0_352 [label=""];
    bb148__0_352 -> bb149__0_352 [label="return"];
    bb148__0_352 -> bb452__0_352 [label="unwind"];
    bb149__0_352 -> bb150__0_352 [label="return"];
    bb149__0_352 -> bb452__0_352 [label="unwind"];
    bb150__0_352 -> bb151__0_352 [label="return"];
    bb150__0_352 -> bb452__0_352 [label="unwind"];
    bb151__0_352 -> bb152__0_352 [label="0"];
    bb151__0_352 -> bb153__0_352 [label="1"];
    bb151__0_352 -> bb27__0_352 [label="otherwise"];
    bb152__0_352 -> bb155__0_352 [label="return"];
    bb152__0_352 -> bb452__0_352 [label="unwind"];
    bb153__0_352 -> bb154__0_352 [label="return"];
    bb153__0_352 -> bb452__0_352 [label="unwind"];
    bb154__0_352 -> bb428__0_352 [label=""];
    bb155__0_352 -> bb156__0_352 [label="return"];
    bb155__0_352 -> bb452__0_352 [label="unwind"];
    bb156__0_352 -> bb157__0_352 [label="return"];
    bb156__0_352 -> bb452__0_352 [label="unwind"];
    bb157__0_352 -> bb158__0_352 [label="return"];
    bb157__0_352 -> bb452__0_352 [label="unwind"];
    bb158__0_352 -> bb159__0_352 [label="return"];
    bb158__0_352 -> bb452__0_352 [label="unwind"];
    bb159__0_352 -> bb160__0_352 [label="0"];
    bb159__0_352 -> bb161__0_352 [label="1"];
    bb159__0_352 -> bb27__0_352 [label="otherwise"];
    bb160__0_352 -> bb163__0_352 [label="return"];
    bb160__0_352 -> bb452__0_352 [label="unwind"];
    bb161__0_352 -> bb162__0_352 [label="return"];
    bb161__0_352 -> bb452__0_352 [label="unwind"];
    bb162__0_352 -> bb427__0_352 [label=""];
    bb163__0_352 -> bb164__0_352 [label="return"];
    bb163__0_352 -> bb452__0_352 [label="unwind"];
    bb164__0_352 -> bb165__0_352 [label="0"];
    bb164__0_352 -> bb166__0_352 [label="1"];
    bb164__0_352 -> bb27__0_352 [label="otherwise"];
    bb165__0_352 -> bb168__0_352 [label="return"];
    bb165__0_352 -> bb452__0_352 [label="unwind"];
    bb166__0_352 -> bb167__0_352 [label="return"];
    bb166__0_352 -> bb452__0_352 [label="unwind"];
    bb167__0_352 -> bb427__0_352 [label=""];
    bb168__0_352 -> bb169__0_352 [label="return"];
    bb168__0_352 -> bb452__0_352 [label="unwind"];
    bb169__0_352 -> bb170__0_352 [label="return"];
    bb169__0_352 -> bb452__0_352 [label="unwind"];
    bb170__0_352 -> bb171__0_352 [label="0"];
    bb170__0_352 -> bb172__0_352 [label="1"];
    bb170__0_352 -> bb27__0_352 [label="otherwise"];
    bb171__0_352 -> bb174__0_352 [label="return"];
    bb171__0_352 -> bb451__0_352 [label="unwind"];
    bb172__0_352 -> bb173__0_352 [label="return"];
    bb172__0_352 -> bb474__0_352 [label="unwind"];
    bb173__0_352 -> bb426__0_352 [label=""];
    bb174__0_352 -> bb175__0_352 [label="return"];
    bb174__0_352 -> bb451__0_352 [label="unwind"];
    bb175__0_352 -> bb176__0_352 [label="return"];
    bb175__0_352 -> bb451__0_352 [label="unwind"];
    bb176__0_352 -> bb177__0_352 [label="return"];
    bb176__0_352 -> bb451__0_352 [label="unwind"];
    bb177__0_352 -> bb178__0_352 [label="0"];
    bb177__0_352 -> bb179__0_352 [label="1"];
    bb177__0_352 -> bb27__0_352 [label="otherwise"];
    bb178__0_352 -> bb181__0_352 [label="return"];
    bb178__0_352 -> bb451__0_352 [label="unwind"];
    bb179__0_352 -> bb180__0_352 [label="return"];
    bb179__0_352 -> bb451__0_352 [label="unwind"];
    bb180__0_352 -> bb425__0_352 [label=""];
    bb181__0_352 -> bb182__0_352 [label="return"];
    bb181__0_352 -> bb451__0_352 [label="unwind"];
    bb182__0_352 -> bb183__0_352 [label="return"];
    bb182__0_352 -> bb451__0_352 [label="unwind"];
    bb183__0_352 -> bb184__0_352 [label="0"];
    bb183__0_352 -> bb185__0_352 [label="1"];
    bb183__0_352 -> bb27__0_352 [label="otherwise"];
    bb184__0_352 -> bb187__0_352 [label="return"];
    bb184__0_352 -> bb451__0_352 [label="unwind"];
    bb185__0_352 -> bb186__0_352 [label="return"];
    bb185__0_352 -> bb451__0_352 [label="unwind"];
    bb186__0_352 -> bb425__0_352 [label=""];
    bb187__0_352 -> bb188__0_352 [label="return"];
    bb187__0_352 -> bb451__0_352 [label="unwind"];
    bb188__0_352 -> bb189__0_352 [label="return"];
    bb188__0_352 -> bb451__0_352 [label="unwind"];
    bb189__0_352 -> bb190__0_352 [label="return"];
    bb189__0_352 -> bb451__0_352 [label="unwind"];
    bb190__0_352 -> bb191__0_352 [label="0"];
    bb190__0_352 -> bb192__0_352 [label="1"];
    bb190__0_352 -> bb27__0_352 [label="otherwise"];
    bb191__0_352 -> bb194__0_352 [label="return"];
    bb191__0_352 -> bb452__0_352 [label="unwind"];
    bb192__0_352 -> bb193__0_352 [label="return"];
    bb192__0_352 -> bb451__0_352 [label="unwind"];
    bb193__0_352 -> bb425__0_352 [label=""];
    bb194__0_352 -> bb195__0_352 [label="return"];
    bb194__0_352 -> bb477__0_352 [label="unwind"];
    bb195__0_352 -> bb196__0_352 [label="return"];
    bb195__0_352 -> bb477__0_352 [label="unwind"];
    bb196__0_352 -> bb197__0_352 [label="return"];
    bb196__0_352 -> bb477__0_352 [label="unwind"];
    bb197__0_352 -> bb198__0_352 [label="0"];
    bb197__0_352 -> bb199__0_352 [label="1"];
    bb197__0_352 -> bb27__0_352 [label="otherwise"];
    bb198__0_352 -> bb201__0_352 [label="return"];
    bb198__0_352 -> bb477__0_352 [label="unwind"];
    bb199__0_352 -> bb200__0_352 [label="return"];
    bb199__0_352 -> bb477__0_352 [label="unwind"];
    bb200__0_352 -> bb423__0_352 [label=""];
    bb201__0_352 -> bb202__0_352 [label="return"];
    bb201__0_352 -> bb477__0_352 [label="unwind"];
    bb202__0_352 -> bb203__0_352 [label="0"];
    bb202__0_352 -> bb204__0_352 [label="1"];
    bb202__0_352 -> bb27__0_352 [label="otherwise"];
    bb203__0_352 -> bb207__0_352 [label="0"];
    bb203__0_352 -> bb206__0_352 [label="otherwise"];
    bb204__0_352 -> bb205__0_352 [label="return"];
    bb204__0_352 -> bb477__0_352 [label="unwind"];
    bb205__0_352 -> bb423__0_352 [label=""];
    bb206__0_352 -> bb215__0_352 [label=""];
    bb207__0_352 -> bb208__0_352 [label="return"];
    bb207__0_352 -> bb477__0_352 [label="unwind"];
    bb208__0_352 -> bb209__0_352 [label="return"];
    bb208__0_352 -> bb477__0_352 [label="unwind"];
    bb209__0_352 -> bb210__0_352 [label="return"];
    bb209__0_352 -> bb477__0_352 [label="unwind"];
    bb210__0_352 -> bb211__0_352 [label="return"];
    bb210__0_352 -> bb450__0_352 [label="unwind"];
    bb211__0_352 -> bb212__0_352 [label="return"];
    bb211__0_352 -> bb450__0_352 [label="unwind"];
    bb212__0_352 -> bb213__0_352 [label="return"];
    bb212__0_352 -> bb477__0_352 [label="unwind"];
    bb213__0_352 -> bb214__0_352 [label="return"];
    bb213__0_352 -> bb477__0_352 [label="unwind"];
    bb214__0_352 -> bb215__0_352 [label=""];
    bb215__0_352 -> bb216__0_352 [label="return"];
    bb215__0_352 -> bb477__0_352 [label="unwind"];
    bb216__0_352 -> bb217__0_352 [label="0"];
    bb216__0_352 -> bb218__0_352 [label="1"];
    bb216__0_352 -> bb27__0_352 [label="otherwise"];
    bb217__0_352 -> bb221__0_352 [label="0"];
    bb217__0_352 -> bb220__0_352 [label="otherwise"];
    bb218__0_352 -> bb219__0_352 [label="return"];
    bb218__0_352 -> bb477__0_352 [label="unwind"];
    bb219__0_352 -> bb424__0_352 [label=""];
    bb220__0_352 -> bb222__0_352 [label="return"];
    bb220__0_352 -> bb477__0_352 [label="unwind"];
    bb221__0_352 -> bb254__0_352 [label=""];
    bb222__0_352 -> bb223__0_352 [label="return"];
    bb222__0_352 -> bb477__0_352 [label="unwind"];
    bb223__0_352 -> bb224__0_352 [label="0"];
    bb223__0_352 -> bb225__0_352 [label="1"];
    bb223__0_352 -> bb27__0_352 [label="otherwise"];
    bb224__0_352 -> bb227__0_352 [label="return"];
    bb224__0_352 -> bb449__0_352 [label="unwind"];
    bb225__0_352 -> bb226__0_352 [label="return"];
    bb225__0_352 -> bb473__0_352 [label="unwind"];
    bb226__0_352 -> bb420__0_352 [label=""];
    bb227__0_352 -> bb228__0_352 [label="return"];
    bb227__0_352 -> bb449__0_352 [label="unwind"];
    bb228__0_352 -> bb229__0_352 [label="0"];
    bb228__0_352 -> bb230__0_352 [label="1"];
    bb228__0_352 -> bb27__0_352 [label="otherwise"];
    bb229__0_352 -> bb232__0_352 [label="return"];
    bb229__0_352 -> bb448__0_352 [label="unwind"];
    bb230__0_352 -> bb231__0_352 [label="return"];
    bb230__0_352 -> bb472__0_352 [label="unwind"];
    bb231__0_352 -> bb419__0_352 [label=""];
    bb232__0_352 -> bb233__0_352 [label="return"];
    bb232__0_352 -> bb448__0_352 [label="unwind"];
    bb233__0_352 -> bb234__0_352 [label="return"];
    bb233__0_352 -> bb448__0_352 [label="unwind"];
    bb234__0_352 -> bb235__0_352 [label="return"];
    bb234__0_352 -> bb448__0_352 [label="unwind"];
    bb235__0_352 -> bb236__0_352 [label="0"];
    bb235__0_352 -> bb237__0_352 [label="1"];
    bb235__0_352 -> bb27__0_352 [label="otherwise"];
    bb236__0_352 -> bb239__0_352 [label="return"];
    bb236__0_352 -> bb448__0_352 [label="unwind"];
    bb237__0_352 -> bb238__0_352 [label="return"];
    bb237__0_352 -> bb448__0_352 [label="unwind"];
    bb238__0_352 -> bb419__0_352 [label="return"];
    bb238__0_352 -> bb449__0_352 [label="unwind"];
    bb239__0_352 -> bb240__0_352 [label="return"];
    bb239__0_352 -> bb448__0_352 [label="unwind"];
    bb240__0_352 -> bb241__0_352 [label="return"];
    bb240__0_352 -> bb448__0_352 [label="unwind"];
    bb241__0_352 -> bb242__0_352 [label="return"];
    bb241__0_352 -> bb447__0_352 [label="unwind"];
    bb242__0_352 -> bb243__0_352 [label="return"];
    bb242__0_352 -> bb447__0_352 [label="unwind"];
    bb243__0_352 -> bb244__0_352 [label="return"];
    bb243__0_352 -> bb448__0_352 [label="unwind"];
    bb244__0_352 -> bb245__0_352 [label="return"];
    bb244__0_352 -> bb448__0_352 [label="unwind"];
    bb245__0_352 -> bb246__0_352 [label="return"];
    bb245__0_352 -> bb448__0_352 [label="unwind"];
    bb246__0_352 -> bb247__0_352 [label="return"];
    bb246__0_352 -> bb448__0_352 [label="unwind"];
    bb247__0_352 -> bb248__0_352 [label="0"];
    bb247__0_352 -> bb249__0_352 [label="1"];
    bb247__0_352 -> bb27__0_352 [label="otherwise"];
    bb248__0_352 -> bb251__0_352 [label="return"];
    bb248__0_352 -> bb448__0_352 [label="unwind"];
    bb249__0_352 -> bb250__0_352 [label="return"];
    bb249__0_352 -> bb448__0_352 [label="unwind"];
    bb250__0_352 -> bb417__0_352 [label="return"];
    bb250__0_352 -> bb449__0_352 [label="unwind"];
    bb251__0_352 -> bb252__0_352 [label="return"];
    bb251__0_352 -> bb449__0_352 [label="unwind"];
    bb252__0_352 -> bb253__0_352 [label="return"];
    bb252__0_352 -> bb477__0_352 [label="unwind"];
    bb253__0_352 -> bb254__0_352 [label=""];
    bb254__0_352 -> bb256__0_352 [label="0"];
    bb254__0_352 -> bb255__0_352 [label="otherwise"];
    bb255__0_352 -> bb264__0_352 [label=""];
    bb256__0_352 -> bb257__0_352 [label="return"];
    bb256__0_352 -> bb477__0_352 [label="unwind"];
    bb257__0_352 -> bb258__0_352 [label="return"];
    bb257__0_352 -> bb477__0_352 [label="unwind"];
    bb258__0_352 -> bb259__0_352 [label="return"];
    bb258__0_352 -> bb477__0_352 [label="unwind"];
    bb259__0_352 -> bb260__0_352 [label="return"];
    bb259__0_352 -> bb446__0_352 [label="unwind"];
    bb260__0_352 -> bb261__0_352 [label="return"];
    bb260__0_352 -> bb446__0_352 [label="unwind"];
    bb261__0_352 -> bb262__0_352 [label="return"];
    bb261__0_352 -> bb477__0_352 [label="unwind"];
    bb262__0_352 -> bb263__0_352 [label="return"];
    bb262__0_352 -> bb477__0_352 [label="unwind"];
    bb263__0_352 -> bb264__0_352 [label=""];
    bb264__0_352 -> bb265__0_352 [label="return"];
    bb264__0_352 -> bb477__0_352 [label="unwind"];
    bb265__0_352 -> bb266__0_352 [label="0"];
    bb265__0_352 -> bb267__0_352 [label="1"];
    bb265__0_352 -> bb27__0_352 [label="otherwise"];
    bb266__0_352 -> bb270__0_352 [label="0"];
    bb266__0_352 -> bb269__0_352 [label="otherwise"];
    bb267__0_352 -> bb268__0_352 [label="return"];
    bb267__0_352 -> bb477__0_352 [label="unwind"];
    bb268__0_352 -> bb422__0_352 [label=""];
    bb269__0_352 -> bb271__0_352 [label="return"];
    bb269__0_352 -> bb477__0_352 [label="unwind"];
    bb270__0_352 -> bb297__0_352 [label=""];
    bb271__0_352 -> bb272__0_352 [label="return"];
    bb271__0_352 -> bb477__0_352 [label="unwind"];
    bb272__0_352 -> bb273__0_352 [label="0"];
    bb272__0_352 -> bb274__0_352 [label="1"];
    bb272__0_352 -> bb27__0_352 [label="otherwise"];
    bb273__0_352 -> bb276__0_352 [label="return"];
    bb273__0_352 -> bb445__0_352 [label="unwind"];
    bb274__0_352 -> bb275__0_352 [label="return"];
    bb274__0_352 -> bb471__0_352 [label="unwind"];
    bb275__0_352 -> bb416__0_352 [label=""];
    bb276__0_352 -> bb277__0_352 [label="return"];
    bb276__0_352 -> bb445__0_352 [label="unwind"];
    bb277__0_352 -> bb278__0_352 [label="0"];
    bb277__0_352 -> bb279__0_352 [label="1"];
    bb277__0_352 -> bb27__0_352 [label="otherwise"];
    bb278__0_352 -> bb281__0_352 [label="return"];
    bb278__0_352 -> bb444__0_352 [label="unwind"];
    bb279__0_352 -> bb280__0_352 [label="return"];
    bb279__0_352 -> bb470__0_352 [label="unwind"];
    bb280__0_352 -> bb415__0_352 [label=""];
    bb281__0_352 -> bb282__0_352 [label="return"];
    bb281__0_352 -> bb444__0_352 [label="unwind"];
    bb282__0_352 -> bb283__0_352 [label="return"];
    bb282__0_352 -> bb444__0_352 [label="unwind"];
    bb283__0_352 -> bb284__0_352 [label="return"];
    bb283__0_352 -> bb443__0_352 [label="unwind"];
    bb284__0_352 -> bb285__0_352 [label="return"];
    bb284__0_352 -> bb443__0_352 [label="unwind"];
    bb285__0_352 -> bb286__0_352 [label="return"];
    bb285__0_352 -> bb444__0_352 [label="unwind"];
    bb286__0_352 -> bb287__0_352 [label="return"];
    bb286__0_352 -> bb444__0_352 [label="unwind"];
    bb287__0_352 -> bb288__0_352 [label="return"];
    bb287__0_352 -> bb444__0_352 [label="unwind"];
    bb288__0_352 -> bb289__0_352 [label="return"];
    bb288__0_352 -> bb444__0_352 [label="unwind"];
    bb289__0_352 -> bb290__0_352 [label="return"];
    bb289__0_352 -> bb444__0_352 [label="unwind"];
    bb290__0_352 -> bb291__0_352 [label="return"];
    bb290__0_352 -> bb444__0_352 [label="unwind"];
    bb291__0_352 -> bb292__0_352 [label="0"];
    bb291__0_352 -> bb293__0_352 [label="1"];
    bb291__0_352 -> bb27__0_352 [label="otherwise"];
    bb292__0_352 -> bb295__0_352 [label="return"];
    bb292__0_352 -> bb445__0_352 [label="unwind"];
    bb293__0_352 -> bb294__0_352 [label="return"];
    bb293__0_352 -> bb444__0_352 [label="unwind"];
    bb294__0_352 -> bb415__0_352 [label="return"];
    bb294__0_352 -> bb445__0_352 [label="unwind"];
    bb295__0_352 -> bb296__0_352 [label="return"];
    bb295__0_352 -> bb477__0_352 [label="unwind"];
    bb296__0_352 -> bb297__0_352 [label=""];
    bb297__0_352 -> bb298__0_352 [label="return"];
    bb297__0_352 -> bb477__0_352 [label="unwind"];
    bb298__0_352 -> bb299__0_352 [label="return"];
    bb298__0_352 -> bb477__0_352 [label="unwind"];
    bb299__0_352 -> bb300__0_352 [label="0"];
    bb299__0_352 -> bb301__0_352 [label="1"];
    bb299__0_352 -> bb27__0_352 [label="otherwise"];
    bb300__0_352 -> bb303__0_352 [label="return"];
    bb300__0_352 -> bb477__0_352 [label="unwind"];
    bb301__0_352 -> bb302__0_352 [label="return"];
    bb301__0_352 -> bb477__0_352 [label="unwind"];
    bb302__0_352 -> bb413__0_352 [label=""];
    bb303__0_352 -> bb304__0_352 [label="return"];
    bb303__0_352 -> bb477__0_352 [label="unwind"];
    bb304__0_352 -> bb305__0_352 [label="0"];
    bb304__0_352 -> bb306__0_352 [label="1"];
    bb304__0_352 -> bb27__0_352 [label="otherwise"];
    bb305__0_352 -> bb309__0_352 [label="0"];
    bb305__0_352 -> bb308__0_352 [label="otherwise"];
    bb306__0_352 -> bb307__0_352 [label="return"];
    bb306__0_352 -> bb477__0_352 [label="unwind"];
    bb307__0_352 -> bb413__0_352 [label=""];
    bb308__0_352 -> bb317__0_352 [label=""];
    bb309__0_352 -> bb310__0_352 [label="return"];
    bb309__0_352 -> bb477__0_352 [label="unwind"];
    bb310__0_352 -> bb311__0_352 [label="return"];
    bb310__0_352 -> bb477__0_352 [label="unwind"];
    bb311__0_352 -> bb312__0_352 [label="return"];
    bb311__0_352 -> bb477__0_352 [label="unwind"];
    bb312__0_352 -> bb313__0_352 [label="return"];
    bb312__0_352 -> bb442__0_352 [label="unwind"];
    bb313__0_352 -> bb314__0_352 [label="return"];
    bb313__0_352 -> bb442__0_352 [label="unwind"];
    bb314__0_352 -> bb315__0_352 [label="return"];
    bb314__0_352 -> bb477__0_352 [label="unwind"];
    bb315__0_352 -> bb316__0_352 [label="return"];
    bb315__0_352 -> bb477__0_352 [label="unwind"];
    bb316__0_352 -> bb317__0_352 [label=""];
    bb317__0_352 -> bb318__0_352 [label="return"];
    bb317__0_352 -> bb477__0_352 [label="unwind"];
    bb318__0_352 -> bb319__0_352 [label="0"];
    bb318__0_352 -> bb320__0_352 [label="1"];
    bb318__0_352 -> bb27__0_352 [label="otherwise"];
    bb319__0_352 -> bb322__0_352 [label="return"];
    bb319__0_352 -> bb477__0_352 [label="unwind"];
    bb320__0_352 -> bb321__0_352 [label="return"];
    bb320__0_352 -> bb477__0_352 [label="unwind"];
    bb321__0_352 -> bb414__0_352 [label=""];
    bb322__0_352 -> bb323__0_352 [label="return"];
    bb322__0_352 -> bb477__0_352 [label="unwind"];
    bb323__0_352 -> bb324__0_352 [label="0"];
    bb323__0_352 -> bb325__0_352 [label="1"];
    bb323__0_352 -> bb27__0_352 [label="otherwise"];
    bb324__0_352 -> bb327__0_352 [label="return"];
    bb324__0_352 -> bb441__0_352 [label="unwind"];
    bb325__0_352 -> bb326__0_352 [label="return"];
    bb325__0_352 -> bb469__0_352 [label="unwind"];
    bb326__0_352 -> bb464__0_352 [label=""];
    bb327__0_352 -> bb328__0_352 [label="return"];
    bb327__0_352 -> bb441__0_352 [label="unwind"];
    bb328__0_352 -> bb329__0_352 [label="return"];
    bb328__0_352 -> bb441__0_352 [label="unwind"];
    bb329__0_352 -> bb330__0_352 [label="0"];
    bb329__0_352 -> bb331__0_352 [label="1"];
    bb329__0_352 -> bb27__0_352 [label="otherwise"];
    bb330__0_352 -> bb463__0_352 [label="return"];
    bb330__0_352 -> bb469__0_352 [label="unwind"];
    bb331__0_352 -> bb332__0_352 [label="return"];
    bb331__0_352 -> bb441__0_352 [label="unwind"];
    bb332__0_352 -> bb464__0_352 [label="return"];
    bb332__0_352 -> bb469__0_352 [label="unwind"];
    bb333__0_352 -> bb334__0_352 [label="return"];
    bb333__0_352 -> bb477__0_352 [label="unwind"];
    bb334__0_352 -> bb335__0_352 [label="return"];
    bb334__0_352 -> bb477__0_352 [label="unwind"];
    bb335__0_352 -> bb336__0_352 [label="0"];
    bb335__0_352 -> bb337__0_352 [label="1"];
    bb335__0_352 -> bb27__0_352 [label="otherwise"];
    bb336__0_352 -> bb339__0_352 [label="return"];
    bb336__0_352 -> bb440__0_352 [label="unwind"];
    bb337__0_352 -> bb338__0_352 [label="return"];
    bb337__0_352 -> bb468__0_352 [label="unwind"];
    bb338__0_352 -> bb411__0_352 [label=""];
    bb339__0_352 -> bb340__0_352 [label="return"];
    bb339__0_352 -> bb440__0_352 [label="unwind"];
    bb340__0_352 -> bb341__0_352 [label="return"];
    bb340__0_352 -> bb440__0_352 [label="unwind"];
    bb341__0_352 -> bb342__0_352 [label="return"];
    bb341__0_352 -> bb440__0_352 [label="unwind"];
    bb342__0_352 -> bb343__0_352 [label="0"];
    bb342__0_352 -> bb344__0_352 [label="1"];
    bb342__0_352 -> bb27__0_352 [label="otherwise"];
    bb343__0_352 -> bb346__0_352 [label="return"];
    bb343__0_352 -> bb440__0_352 [label="unwind"];
    bb344__0_352 -> bb345__0_352 [label="return"];
    bb344__0_352 -> bb440__0_352 [label="unwind"];
    bb345__0_352 -> bb410__0_352 [label=""];
    bb346__0_352 -> bb347__0_352 [label="return"];
    bb346__0_352 -> bb440__0_352 [label="unwind"];
    bb347__0_352 -> bb348__0_352 [label="return"];
    bb347__0_352 -> bb440__0_352 [label="unwind"];
    bb348__0_352 -> bb349__0_352 [label="return"];
    bb348__0_352 -> bb440__0_352 [label="unwind"];
    bb349__0_352 -> bb350__0_352 [label="0"];
    bb349__0_352 -> bb351__0_352 [label="1"];
    bb349__0_352 -> bb27__0_352 [label="otherwise"];
    bb350__0_352 -> bb353__0_352 [label="return"];
    bb350__0_352 -> bb440__0_352 [label="unwind"];
    bb351__0_352 -> bb352__0_352 [label="return"];
    bb351__0_352 -> bb440__0_352 [label="unwind"];
    bb352__0_352 -> bb410__0_352 [label=""];
    bb353__0_352 -> bb354__0_352 [label="return"];
    bb353__0_352 -> bb440__0_352 [label="unwind"];
    bb354__0_352 -> bb355__0_352 [label="return"];
    bb354__0_352 -> bb440__0_352 [label="unwind"];
    bb355__0_352 -> bb356__0_352 [label="return"];
    bb355__0_352 -> bb440__0_352 [label="unwind"];
    bb356__0_352 -> bb357__0_352 [label="0"];
    bb356__0_352 -> bb358__0_352 [label="1"];
    bb356__0_352 -> bb27__0_352 [label="otherwise"];
    bb357__0_352 -> bb360__0_352 [label="return"];
    bb357__0_352 -> bb440__0_352 [label="unwind"];
    bb358__0_352 -> bb359__0_352 [label="return"];
    bb358__0_352 -> bb440__0_352 [label="unwind"];
    bb359__0_352 -> bb410__0_352 [label=""];
    bb360__0_352 -> bb361__0_352 [label="return"];
    bb360__0_352 -> bb477__0_352 [label="unwind"];
    bb361__0_352 -> bb363__0_352 [label=""];
    bb362__0_352 -> bb363__0_352 [label=""];
    bb363__0_352 -> bb364__0_352 [label="return"];
    bb363__0_352 -> bb477__0_352 [label="unwind"];
    bb364__0_352 -> bb365__0_352 [label="return"];
    bb364__0_352 -> bb477__0_352 [label="unwind"];
    bb365__0_352 -> bb366__0_352 [label="0"];
    bb365__0_352 -> bb367__0_352 [label="1"];
    bb365__0_352 -> bb27__0_352 [label="otherwise"];
    bb366__0_352 -> bb369__0_352 [label="return"];
    bb366__0_352 -> bb439__0_352 [label="unwind"];
    bb367__0_352 -> bb368__0_352 [label="return"];
    bb367__0_352 -> bb467__0_352 [label="unwind"];
    bb368__0_352 -> bb409__0_352 [label=""];
    bb369__0_352 -> bb370__0_352 [label="return"];
    bb369__0_352 -> bb439__0_352 [label="unwind"];
    bb370__0_352 -> bb371__0_352 [label="0"];
    bb370__0_352 -> bb372__0_352 [label="1"];
    bb370__0_352 -> bb27__0_352 [label="otherwise"];
    bb371__0_352 -> bb374__0_352 [label="success"];
    bb371__0_352 -> bb439__0_352 [label="unwind"];
    bb372__0_352 -> bb373__0_352 [label="return"];
    bb372__0_352 -> bb439__0_352 [label="unwind"];
    bb373__0_352 -> bb408__0_352 [label=""];
    bb374__0_352 -> bb375__0_352 [label="success"];
    bb374__0_352 -> bb439__0_352 [label="unwind"];
    bb375__0_352 -> bb376__0_352 [label="return"];
    bb375__0_352 -> bb439__0_352 [label="unwind"];
    bb376__0_352 -> bb377__0_352 [label="success"];
    bb376__0_352 -> bb439__0_352 [label="unwind"];
    bb377__0_352 -> bb378__0_352 [label="return"];
    bb377__0_352 -> bb439__0_352 [label="unwind"];
    bb378__0_352 -> bb379__0_352 [label="return"];
    bb378__0_352 -> bb439__0_352 [label="unwind"];
    bb379__0_352 -> bb380__0_352 [label="0"];
    bb379__0_352 -> bb381__0_352 [label="1"];
    bb379__0_352 -> bb27__0_352 [label="otherwise"];
    bb380__0_352 -> bb383__0_352 [label="return"];
    bb380__0_352 -> bb439__0_352 [label="unwind"];
    bb381__0_352 -> bb382__0_352 [label="return"];
    bb381__0_352 -> bb439__0_352 [label="unwind"];
    bb382__0_352 -> bb407__0_352 [label=""];
    bb383__0_352 -> bb384__0_352 [label="return"];
    bb383__0_352 -> bb439__0_352 [label="unwind"];
    bb384__0_352 -> bb385__0_352 [label="return"];
    bb384__0_352 -> bb439__0_352 [label="unwind"];
    bb385__0_352 -> bb386__0_352 [label="0"];
    bb385__0_352 -> bb387__0_352 [label="1"];
    bb385__0_352 -> bb27__0_352 [label="otherwise"];
    bb386__0_352 -> bb389__0_352 [label="return"];
    bb386__0_352 -> bb477__0_352 [label="unwind"];
    bb387__0_352 -> bb388__0_352 [label="return"];
    bb387__0_352 -> bb439__0_352 [label="unwind"];
    bb388__0_352 -> bb407__0_352 [label=""];
    bb389__0_352 -> bb390__0_352 [label="return"];
    bb389__0_352 -> bb477__0_352 [label="unwind"];
    bb390__0_352 -> bb392__0_352 [label="0"];
    bb390__0_352 -> bb391__0_352 [label="otherwise"];
    bb391__0_352 -> bb394__0_352 [label=""];
    bb392__0_352 -> bb393__0_352 [label="return"];
    bb392__0_352 -> bb477__0_352 [label="unwind"];
    bb393__0_352 -> bb394__0_352 [label=""];
    bb394__0_352 -> bb395__0_352 [label="return"];
    bb394__0_352 -> bb477__0_352 [label="unwind"];
    bb395__0_352 -> bb396__0_352 [label="return"];
    bb395__0_352 -> bb477__0_352 [label="unwind"];
    bb396__0_352 -> bb397__0_352 [label="0"];
    bb396__0_352 -> bb398__0_352 [label="1"];
    bb396__0_352 -> bb27__0_352 [label="otherwise"];
    bb397__0_352 -> bb400__0_352 [label="return"];
    bb397__0_352 -> bb477__0_352 [label="unwind"];
    bb398__0_352 -> bb399__0_352 [label="return"];
    bb398__0_352 -> bb477__0_352 [label="unwind"];
    bb399__0_352 -> bb412__0_352 [label=""];
    bb400__0_352 -> bb401__0_352 [label="return"];
    bb400__0_352 -> bb438__0_352 [label="unwind"];
    bb401__0_352 -> bb402__0_352 [label="return"];
    bb401__0_352 -> bb437__0_352 [label="unwind"];
    bb402__0_352 -> bb403__0_352 [label="return"];
    bb402__0_352 -> bb437__0_352 [label="unwind"];
    bb403__0_352 -> bb404__0_352 [label="return"];
    bb403__0_352 -> bb438__0_352 [label="unwind"];
    bb404__0_352 -> bb405__0_352 [label="return"];
    bb404__0_352 -> bb477__0_352 [label="unwind"];
    bb405__0_352 -> bb406__0_352 [label="return"];
    bb405__0_352 -> bb477__0_352 [label="unwind"];
    bb406__0_352 -> bb436__0_352 [label=""];
    bb407__0_352 -> bb408__0_352 [label=""];
    bb408__0_352 -> bb409__0_352 [label="return"];
    bb408__0_352 -> bb477__0_352 [label="unwind"];
    bb409__0_352 -> bb412__0_352 [label=""];
    bb410__0_352 -> bb411__0_352 [label="return"];
    bb410__0_352 -> bb477__0_352 [label="unwind"];
    bb411__0_352 -> bb412__0_352 [label=""];
    bb412__0_352 -> bb414__0_352 [label=""];
    bb413__0_352 -> bb414__0_352 [label=""];
    bb414__0_352 -> bb422__0_352 [label=""];
    bb415__0_352 -> bb416__0_352 [label="return"];
    bb415__0_352 -> bb477__0_352 [label="unwind"];
    bb416__0_352 -> bb422__0_352 [label=""];
    bb417__0_352 -> bb418__0_352 [label="return"];
    bb417__0_352 -> bb477__0_352 [label="unwind"];
    bb418__0_352 -> bb421__0_352 [label=""];
    bb419__0_352 -> bb420__0_352 [label="return"];
    bb419__0_352 -> bb477__0_352 [label="unwind"];
    bb420__0_352 -> bb421__0_352 [label=""];
    bb421__0_352 -> bb422__0_352 [label=""];
    bb422__0_352 -> bb424__0_352 [label=""];
    bb423__0_352 -> bb424__0_352 [label=""];
    bb424__0_352 -> bb432__0_352 [label=""];
    bb425__0_352 -> bb426__0_352 [label="return"];
    bb425__0_352 -> bb452__0_352 [label="unwind"];
    bb426__0_352 -> bb428__0_352 [label=""];
    bb427__0_352 -> bb428__0_352 [label=""];
    bb428__0_352 -> bb430__0_352 [label=""];
    bb429__0_352 -> bb430__0_352 [label=""];
    bb430__0_352 -> bb431__0_352 [label="return"];
    bb430__0_352 -> bb477__0_352 [label="unwind"];
    bb431__0_352 -> bb432__0_352 [label=""];
    bb432__0_352 -> bb434__0_352 [label=""];
    bb433__0_352 -> bb434__0_352 [label=""];
    bb434__0_352 -> bb466__0_352 [label=""];
    bb435__0_352 -> bb436__0_352 [label=""];
    bb437__0_352 -> bb438__0_352 [label="return"];
    bb438__0_352 -> bb477__0_352 [label="return"];
    bb439__0_352 -> bb477__0_352 [label="return"];
    bb440__0_352 -> bb477__0_352 [label="return"];
    bb441__0_352 -> bb469__0_352 [label="return"];
    bb442__0_352 -> bb477__0_352 [label="return"];
    bb443__0_352 -> bb444__0_352 [label="return"];
    bb444__0_352 -> bb445__0_352 [label="return"];
    bb445__0_352 -> bb477__0_352 [label="return"];
    bb446__0_352 -> bb477__0_352 [label="return"];
    bb447__0_352 -> bb448__0_352 [label="return"];
    bb448__0_352 -> bb449__0_352 [label="return"];
    bb449__0_352 -> bb477__0_352 [label="return"];
    bb450__0_352 -> bb477__0_352 [label="return"];
    bb451__0_352 -> bb452__0_352 [label="return"];
    bb452__0_352 -> bb477__0_352 [label="return"];
    bb453__0_352 -> bb477__0_352 [label="return"];
    bb454__0_352 -> bb477__0_352 [label="return"];
    bb455__0_352 -> bb477__0_352 [label="return"];
    bb456__0_352 -> bb462__0_352 [label="return"];
    bb457__0_352 -> bb462__0_352 [label="return"];
    bb458__0_352 -> bb462__0_352 [label="return"];
    bb459__0_352 -> bb462__0_352 [label="return"];
    bb460__0_352 -> bb462__0_352 [label="return"];
    bb461__0_352 -> bb462__0_352 [label="return"];
    bb463__0_352 -> bb362__0_352 [label="0"];
    bb463__0_352 -> bb333__0_352 [label="otherwise"];
    bb464__0_352 -> bb412__0_352 [label=""];
    bb465__0_352 -> bb435__0_352 [label="return"];
    bb465__0_352 -> bb462__0_352 [label="unwind"];
    bb466__0_352 -> bb435__0_352 [label="0"];
    bb466__0_352 -> bb465__0_352 [label="otherwise"];
    bb467__0_352 -> bb477__0_352 [label=""];
    bb468__0_352 -> bb477__0_352 [label=""];
    bb469__0_352 -> bb477__0_352 [label=""];
    bb470__0_352 -> bb445__0_352 [label=""];
    bb471__0_352 -> bb477__0_352 [label=""];
    bb472__0_352 -> bb449__0_352 [label=""];
    bb473__0_352 -> bb477__0_352 [label=""];
    bb474__0_352 -> bb452__0_352 [label=""];
    bb475__0_352 -> bb477__0_352 [label=""];
    bb476__0_352 -> bb462__0_352 [label="return"];
    bb477__0_352 -> bb462__0_352 [label="0"];
    bb477__0_352 -> bb476__0_352 [label="otherwise"];
    bb478__0_352 -> bb462__0_352 [label=""];
}
