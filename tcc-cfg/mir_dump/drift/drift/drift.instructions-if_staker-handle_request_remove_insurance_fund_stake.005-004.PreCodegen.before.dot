digraph Mir_0_1211 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_request_remove_insurance_fund_stake(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;&gt;, _2: u16, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: anchor_lang::prelude::Clock;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _6: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _11: anchor_lang::prelude::Clock;<br align="left"/>let _12: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _13: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _15: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _17: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _18: Closure(DefId(0:8516 ~ drift[d311]::instructions::if_staker::handle_request_remove_insurance_fund_stake::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _24: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _25: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _30: Closure(DefId(0:8517 ~ drift[d311]::instructions::if_staker::handle_request_remove_insurance_fund_stake::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _36: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _37: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _39: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _40: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _41: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _42: Closure(DefId(0:8518 ~ drift[d311]::instructions::if_staker::handle_request_remove_insurance_fund_stake::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _48: ();<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _50: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _53: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _55: state::paused_operations::InsuranceFundOperation;<br align="left"/>let mut _56: ();<br align="left"/>let _57: error::ErrorCode;<br align="left"/>let _58: ();<br align="left"/>let mut _59: &amp;ReErased str;<br align="left"/>let _60: &amp;ReErased str;<br align="left"/>let mut _61: &amp;ReErased std::string::String;<br align="left"/>let _62: &amp;ReErased std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let mut _65: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _68: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _69: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _72: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _73: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _74: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased error::ErrorCode;<br align="left"/>let _76: &amp;ReErased error::ErrorCode;<br align="left"/>let _77: ();<br align="left"/>let mut _78: &amp;ReErased str;<br align="left"/>let _79: &amp;ReErased str;<br align="left"/>let mut _80: &amp;ReErased std::string::String;<br align="left"/>let _81: &amp;ReErased std::string::String;<br align="left"/>let _82: std::string::String;<br align="left"/>let _83: std::string::String;<br align="left"/>let mut _84: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _85: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _86: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _87: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _88: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _89: error::ErrorCode;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: ();<br align="left"/>let _95: ();<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _97: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _98: bool;<br align="left"/>let mut _99: u16;<br align="left"/>let mut _100: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _101: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _102: u16;<br align="left"/>let mut _103: ();<br align="left"/>let _104: error::ErrorCode;<br align="left"/>let _105: ();<br align="left"/>let mut _106: &amp;ReErased str;<br align="left"/>let _107: &amp;ReErased str;<br align="left"/>let mut _108: &amp;ReErased std::string::String;<br align="left"/>let _109: &amp;ReErased std::string::String;<br align="left"/>let _110: std::string::String;<br align="left"/>let _111: std::string::String;<br align="left"/>let mut _112: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _114: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _115: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _116: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _120: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _121: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _122: &amp;ReErased error::ErrorCode;<br align="left"/>let _123: &amp;ReErased error::ErrorCode;<br align="left"/>let _124: ();<br align="left"/>let mut _125: &amp;ReErased str;<br align="left"/>let _126: &amp;ReErased str;<br align="left"/>let mut _127: error::ErrorCode;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: ();<br align="left"/>let _133: ();<br align="left"/>let mut _134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _135: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _136: bool;<br align="left"/>let mut _137: u128;<br align="left"/>let mut _138: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _139: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _140: ();<br align="left"/>let _141: error::ErrorCode;<br align="left"/>let _142: ();<br align="left"/>let mut _143: &amp;ReErased str;<br align="left"/>let _144: &amp;ReErased str;<br align="left"/>let mut _145: &amp;ReErased std::string::String;<br align="left"/>let _146: &amp;ReErased std::string::String;<br align="left"/>let _147: std::string::String;<br align="left"/>let _148: std::string::String;<br align="left"/>let mut _149: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _152: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _153: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _154: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _155: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _156: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _157: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _158: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _159: &amp;ReErased error::ErrorCode;<br align="left"/>let _160: &amp;ReErased error::ErrorCode;<br align="left"/>let _161: ();<br align="left"/>let mut _162: &amp;ReErased str;<br align="left"/>let _163: &amp;ReErased str;<br align="left"/>let mut _164: error::ErrorCode;<br align="left"/>let mut _165: isize;<br align="left"/>let _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _167: !;<br align="left"/>let mut _168: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _169: ();<br align="left"/>let _170: u128;<br align="left"/>let mut _171: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _172: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _173: u64;<br align="left"/>let mut _174: u128;<br align="left"/>let mut _175: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _176: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _177: u64;<br align="left"/>let mut _178: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _179: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _180: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _181: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _182: isize;<br align="left"/>let _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _184: !;<br align="left"/>let mut _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _186: u128;<br align="left"/>let _187: ();<br align="left"/>let mut _188: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _189: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _190: bool;<br align="left"/>let mut _191: u128;<br align="left"/>let mut _192: ();<br align="left"/>let _193: error::ErrorCode;<br align="left"/>let _194: ();<br align="left"/>let mut _195: &amp;ReErased str;<br align="left"/>let _196: &amp;ReErased str;<br align="left"/>let mut _197: &amp;ReErased std::string::String;<br align="left"/>let _198: &amp;ReErased std::string::String;<br align="left"/>let _199: std::string::String;<br align="left"/>let _200: std::string::String;<br align="left"/>let mut _201: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _202: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _203: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _204: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _205: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _206: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _207: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _208: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _209: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _210: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _211: &amp;ReErased error::ErrorCode;<br align="left"/>let _212: &amp;ReErased error::ErrorCode;<br align="left"/>let _213: ();<br align="left"/>let mut _214: &amp;ReErased str;<br align="left"/>let _215: &amp;ReErased str;<br align="left"/>let mut _216: error::ErrorCode;<br align="left"/>let mut _217: isize;<br align="left"/>let _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _219: !;<br align="left"/>let mut _220: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _221: ();<br align="left"/>let _222: u128;<br align="left"/>let mut _223: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _224: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _225: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let _226: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _227: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _228: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _229: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _230: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _231: isize;<br align="left"/>let _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _233: !;<br align="left"/>let mut _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _235: u128;<br align="left"/>let _236: ();<br align="left"/>let mut _237: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _238: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _239: bool;<br align="left"/>let mut _240: u128;<br align="left"/>let mut _241: u128;<br align="left"/>let mut _242: ();<br align="left"/>let _243: error::ErrorCode;<br align="left"/>let _244: ();<br align="left"/>let mut _245: &amp;ReErased str;<br align="left"/>let _246: &amp;ReErased str;<br align="left"/>let mut _247: &amp;ReErased std::string::String;<br align="left"/>let _248: &amp;ReErased std::string::String;<br align="left"/>let _249: std::string::String;<br align="left"/>let _250: std::string::String;<br align="left"/>let mut _251: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _252: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _253: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _254: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _255: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _256: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _257: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _258: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _259: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _260: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _261: &amp;ReErased error::ErrorCode;<br align="left"/>let _262: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _263: error::ErrorCode;<br align="left"/>let mut _264: isize;<br align="left"/>let _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _266: !;<br align="left"/>let mut _267: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _268: ();<br align="left"/>let _269: ();<br align="left"/>let mut _270: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _271: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _272: u128;<br align="left"/>let mut _273: u64;<br align="left"/>let mut _274: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _275: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _276: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _277: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _278: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _279: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _280: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _281: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _282: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _283: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _284: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _285: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _286: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _287: i64;<br align="left"/>let mut _288: isize;<br align="left"/>let _289: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _290: !;<br align="left"/>let mut _291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _292: ();<br align="left"/>let mut _293: ();<br align="left"/>let mut _294: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _295: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _296: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _297: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _298: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _299: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _300: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _301: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _302: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _303: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _304: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _305: &amp;ReErased mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _306: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _307: isize;<br align="left"/>let mut _308: isize;<br align="left"/>let mut _309: isize;<br align="left"/>let mut _310: isize;<br align="left"/>let mut _311: isize;<br align="left"/>let mut _312: isize;<br align="left"/>let mut _313: isize;<br align="left"/>let mut _314: isize;<br align="left"/>let mut _315: isize;<br align="left"/>let mut _316: isize;<br align="left"/>let mut _317: isize;<br align="left"/>let mut _318: isize;<br align="left"/>let mut _319: isize;<br align="left"/>let mut _320: isize;<br align="left"/>let mut _321: isize;<br align="left"/>let mut _322: isize;<br align="left"/>let mut _323: isize;<br align="left"/>let mut _324: isize;<br align="left"/>let mut _325: isize;<br align="left"/>let mut _326: isize;<br align="left"/>let mut _327: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _328: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug amount =&gt; _3;<br align="left"/>debug clock =&gt; _4;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug insurance_fund_stake =&gt; _12;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug user_stats =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug spot_market =&gt; _36;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug error_code =&gt; _57;<br align="left"/>debug res =&gt; _64;<br align="left"/>debug res =&gt; _83;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug error_code =&gt; _104;<br align="left"/>debug res =&gt; _111;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>debug error_code =&gt; _141;<br align="left"/>debug res =&gt; _148;<br align="left"/>debug residual =&gt; _166;<br align="left"/>debug val =&gt; _169;<br align="left"/>debug n_shares =&gt; _170;<br align="left"/>debug residual =&gt; _183;<br align="left"/>debug val =&gt; _186;<br align="left"/>debug error_code =&gt; _193;<br align="left"/>debug res =&gt; _200;<br align="left"/>debug residual =&gt; _218;<br align="left"/>debug val =&gt; _221;<br align="left"/>debug user_if_shares =&gt; _222;<br align="left"/>debug residual =&gt; _232;<br align="left"/>debug val =&gt; _235;<br align="left"/>debug error_code =&gt; _243;<br align="left"/>debug res =&gt; _250;<br align="left"/>debug residual =&gt; _265;<br align="left"/>debug val =&gt; _268;<br align="left"/>debug residual =&gt; _289;<br align="left"/>debug val =&gt; _292;<br align="left"/>>;
    bb0__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_7 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_5 as Continue).0: anchor_lang::prelude::Clock)<br/>_4 = move _11<br/>StorageDead(_11)<br/>_307 = discriminant(_5)<br/>StorageDead(_5)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_300 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_17 = &amp;((*_300).1: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/></td></tr><tr><td align="left">_16 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load_mut(move _17)</td></tr></table>>];
    bb4__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_321 = discriminant(_5)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_15 = std::result::Result::&lt;RefMut&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _16, move _18)</td></tr></table>>];
    bb8__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;RefMut&lt;'_, InsuranceFundStake&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb9__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_19 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb10__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_14 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_13 = move _23<br/>StorageDead(_23)<br/>_12 = &amp;mut _13<br/>_311 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_301 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_29 = &amp;((*_301).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_28 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _29)</td></tr></table>>];
    bb11__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb12__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_309 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_27 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _28, move _30)</td></tr></table>>];
    bb14__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb15__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_26 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_25 = move _35<br/>StorageDead(_35)<br/>_24 = &amp;mut _25<br/>_315 = discriminant(_26)<br/>StorageDead(_26)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_302 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_41 = &amp;((*_302).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_40 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _41)</td></tr></table>>];
    bb17__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb18__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_313 = discriminant(_26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageLive(_42)<br/>_42 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_39 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _40, move _42)</td></tr></table>>];
    bb20__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb21__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_43 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_38 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_37 = move _47<br/>StorageDead(_47)<br/>_36 = &amp;mut _37<br/>_319 = discriminant(_38)<br/>StorageDead(_38)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_36)<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb23__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb24__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>_317 = discriminant(_38)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_52 = &amp;(*_53)<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>_55 = InsuranceFundOperation::RequestRemove<br/></td></tr><tr><td align="left">_51 = SpotMarket::is_insurance_fund_operation_paused(move _52, move _55)</td></tr></table>>];
    bb26__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb27__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_53)<br/>StorageLive(_57)<br/>_57 = error::ErrorCode::InsuranceFundOperationPaused<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_299 = const _<br/>_68 = &amp;(*_299)<br/>_67 = &amp;(*_68)<br/>_66 = move _67 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_67)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_57<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _75)</td></tr></table>>];
    bb28__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_53)<br/>StorageLive(_56)<br/>_56 = ()<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _56)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_73 = [move _74]<br/>StorageDead(_74)<br/>_72 = &amp;_73<br/>_71 = &amp;(*_72)<br/>_70 = move _71 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_65 = Arguments::&lt;'_&gt;::new_v1(move _66, move _70)</td></tr></table>>];
    bb30__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = format(move _65)</td></tr></table>>];
    bb31__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_68)<br/>_63 = move _64<br/>StorageDead(_64)<br/>_62 = &amp;_63<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = &lt;String as Deref&gt;::deref(move _61)</td></tr></table>>];
    bb32__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_59 = &amp;(*_60)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_58 = solana_program::log::sol_log(move _59)</td></tr></table>>];
    bb33__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb34__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_58)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_298 = const _<br/>_87 = &amp;(*_298)<br/>_86 = &amp;(*_87)<br/>_85 = move _86 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = Arguments::&lt;'_&gt;::new_const(move _85)</td></tr></table>>];
    bb35__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = format(move _84)</td></tr></table>>];
    bb36__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_87)<br/>_82 = move _83<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = &lt;String as Deref&gt;::deref(move _80)</td></tr></table>>];
    bb37__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_78 = &amp;(*_79)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_77 = solana_program::log::sol_log(move _78)</td></tr></table>>];
    bb38__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb39__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageLive(_89)<br/>_89 = _57<br/>_50 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _89)<br/>StorageDead(_89)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb41__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_90 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb42__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_49 as Continue).0: ())<br/>_48 = _94<br/>StorageDead(_94)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;(*_12)<br/></td></tr><tr><td align="left">_100 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb43__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb44__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = ((*_100).8: u16)<br/>StorageLive(_102)<br/>_102 = _2<br/>_98 = Eq(move _99, move _102)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb46__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_103)<br/>_103 = ()<br/>_97 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _103)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_104)<br/>_104 = error::ErrorCode::IncorrectSpotMarketAccountPassed<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_297 = const _<br/>_115 = &amp;(*_297)<br/>_114 = &amp;(*_115)<br/>_113 = move _114 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_114)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;_104<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_121 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _122)</td></tr></table>>];
    bb48__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_120 = [move _121]<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/>_117 = move _118 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_112 = Arguments::&lt;'_&gt;::new_v1(move _113, move _117)</td></tr></table>>];
    bb49__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = format(move _112)</td></tr></table>>];
    bb50__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>_110 = move _111<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = &lt;String as Deref&gt;::deref(move _108)</td></tr></table>>];
    bb51__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_106 = &amp;(*_107)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_105 = solana_program::log::sol_log(move _106)</td></tr></table>>];
    bb52__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb53__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = const &quot;insurance_fund_stake does not match market_index&quot;<br/>_125 = &amp;(*_126)<br/></td></tr><tr><td align="left">_124 = solana_program::log::sol_log(move _125)</td></tr></table>>];
    bb54__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_126)<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>_127 = _104<br/>_97 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _127)<br/>StorageDead(_127)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb56__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_128 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb57__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_96 as Continue).0: ())<br/>_95 = _132<br/>StorageDead(_132)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;(*_12)<br/></td></tr><tr><td align="left">_138 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _139)</td></tr></table>>];
    bb58__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb59__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>_137 = ((*_138).2: u128)<br/>_136 = Eq(move _137, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb61__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageLive(_140)<br/>_140 = ()<br/>_135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _140)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageLive(_141)<br/>_141 = error::ErrorCode::IFWithdrawRequestInProgress<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_296 = const _<br/>_152 = &amp;(*_296)<br/>_151 = &amp;(*_152)<br/>_150 = move _151 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_151)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;_141<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _159)</td></tr></table>>];
    bb63__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_157 = [move _158]<br/>StorageDead(_158)<br/>_156 = &amp;_157<br/>_155 = &amp;(*_156)<br/>_154 = move _155 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_149 = Arguments::&lt;'_&gt;::new_v1(move _150, move _154)</td></tr></table>>];
    bb64__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_150)<br/></td></tr><tr><td align="left">_148 = format(move _149)</td></tr></table>>];
    bb65__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_160)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_152)<br/>_147 = move _148<br/>StorageDead(_148)<br/>_146 = &amp;_147<br/>_145 = &amp;(*_146)<br/></td></tr><tr><td align="left">_144 = &lt;String as Deref&gt;::deref(move _145)</td></tr></table>>];
    bb66__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_143 = &amp;(*_144)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_142 = solana_program::log::sol_log(move _143)</td></tr></table>>];
    bb67__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">drop(_147)</td></tr></table>>];
    bb68__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = const &quot;Withdraw request is already in progress&quot;<br/>_162 = &amp;(*_163)<br/></td></tr><tr><td align="left">_161 = solana_program::log::sol_log(move _162)</td></tr></table>>];
    bb69__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_163)<br/>StorageDead(_161)<br/>StorageLive(_164)<br/>_164 = _141<br/>_135 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _164)<br/>StorageDead(_164)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _135)</td></tr></table>>];
    bb71__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_165 = discriminant(_134)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb72__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_169)<br/>_169 = ((_134 as Continue).0: ())<br/>_133 = _169<br/>StorageDead(_169)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _3<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = &amp;(*_36)<br/></td></tr><tr><td align="left">_175 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _176)</td></tr></table>>];
    bb73__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = ((_134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_168)<br/>_168 = _166<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _168)</td></tr></table>>];
    bb74__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>_174 = (((*_175).9: state::spot_market::InsuranceFund).1: u128)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_303 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_304 = deref_copy ((*_303).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_327 = (((_304.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_181 = &amp;(*_327)<br/></td></tr><tr><td align="left">_180 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _181)</td></tr></table>>];
    bb76__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_179 = &amp;(*_180)<br/></td></tr><tr><td align="left">_178 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _179)</td></tr></table>>];
    bb77__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_179)<br/>_177 = ((*_178).2: u64)<br/></td></tr><tr><td align="left">_172 = vault_amount_to_if_shares(move _173, move _174, move _177)</td></tr></table>>];
    bb78__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _172)</td></tr></table>>];
    bb79__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_182 = discriminant(_171)<br/></td></tr><tr><td align="left">switchInt(move _182)</td></tr></table>>];
    bb80__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_186)<br/>_186 = ((_171 as Continue).0: u128)<br/>_170 = _186<br/>StorageDead(_186)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_171)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = _170<br/>_190 = Gt(move _191, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb81__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_171 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_185)<br/>_185 = _183<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _185)</td></tr></table>>];
    bb82__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_175)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageLive(_192)<br/>_192 = ()<br/>_189 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _192)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageLive(_193)<br/>_193 = error::ErrorCode::IFWithdrawRequestTooSmall<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_295 = const _<br/>_204 = &amp;(*_295)<br/>_203 = &amp;(*_204)<br/>_202 = move _203 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_203)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_193<br/>_211 = &amp;(*_212)<br/></td></tr><tr><td align="left">_210 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _211)</td></tr></table>>];
    bb85__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_209 = [move _210]<br/>StorageDead(_210)<br/>_208 = &amp;_209<br/>_207 = &amp;(*_208)<br/>_206 = move _207 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_201 = Arguments::&lt;'_&gt;::new_v1(move _202, move _206)</td></tr></table>>];
    bb86__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = format(move _201)</td></tr></table>>];
    bb87__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_212)<br/>StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_204)<br/>_199 = move _200<br/>StorageDead(_200)<br/>_198 = &amp;_199<br/>_197 = &amp;(*_198)<br/></td></tr><tr><td align="left">_196 = &lt;String as Deref&gt;::deref(move _197)</td></tr></table>>];
    bb88__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_195 = &amp;(*_196)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_194 = solana_program::log::sol_log(move _195)</td></tr></table>>];
    bb89__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb90__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = const &quot;Requested lp_shares = 0&quot;<br/>_214 = &amp;(*_215)<br/></td></tr><tr><td align="left">_213 = solana_program::log::sol_log(move _214)</td></tr></table>>];
    bb91__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_215)<br/>StorageDead(_213)<br/>StorageLive(_216)<br/>_216 = _193<br/>_189 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _216)<br/>StorageDead(_216)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">_188 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _189)</td></tr></table>>];
    bb93__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>_217 = discriminant(_188)<br/></td></tr><tr><td align="left">switchInt(move _217)</td></tr></table>>];
    bb94__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_221)<br/>_221 = ((_188 as Continue).0: ())<br/>_187 = _221<br/>StorageDead(_221)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = &amp;(*_12)<br/></td></tr><tr><td align="left">_226 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _227)</td></tr></table>>];
    bb95__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = ((_188 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_220)<br/>_220 = _218<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _220)</td></tr></table>>];
    bb96__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_218)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">_225 = &amp;(*_226)<br/>StorageDead(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_230 = &amp;(*_36)<br/></td></tr><tr><td align="left">_229 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _230)</td></tr></table>>];
    bb98__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_228 = &amp;(*_229)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_224 = InsuranceFundStake::checked_if_shares(move _225, move _228)</td></tr></table>>];
    bb99__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_225)<br/></td></tr><tr><td align="left">_223 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _224)</td></tr></table>>];
    bb100__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_231 = discriminant(_223)<br/></td></tr><tr><td align="left">switchInt(move _231)</td></tr></table>>];
    bb101__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_235)<br/>_235 = ((_223 as Continue).0: u128)<br/>_222 = _235<br/>StorageDead(_235)<br/>StorageDead(_229)<br/>StorageDead(_226)<br/>StorageDead(_223)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = _222<br/>StorageLive(_241)<br/>_241 = _170<br/>_239 = Ge(move _240, move _241)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb102__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>_232 = ((_223 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_234)<br/>_234 = _232<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _234)</td></tr></table>>];
    bb103__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_226)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageLive(_242)<br/>_242 = ()<br/>_238 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _242)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_240)<br/>StorageLive(_243)<br/>_243 = error::ErrorCode::InsufficientIFShares<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_294 = const _<br/>_254 = &amp;(*_294)<br/>_253 = &amp;(*_254)<br/>_252 = move _253 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_253)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = &amp;_243<br/>_261 = &amp;(*_262)<br/></td></tr><tr><td align="left">_260 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _261)</td></tr></table>>];
    bb106__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>_259 = [move _260]<br/>StorageDead(_260)<br/>_258 = &amp;_259<br/>_257 = &amp;(*_258)<br/>_256 = move _257 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_251 = Arguments::&lt;'_&gt;::new_v1(move _252, move _256)</td></tr></table>>];
    bb107__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_250 = format(move _251)</td></tr></table>>];
    bb108__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/>StorageDead(_254)<br/>_249 = move _250<br/>StorageDead(_250)<br/>_248 = &amp;_249<br/>_247 = &amp;(*_248)<br/></td></tr><tr><td align="left">_246 = &lt;String as Deref&gt;::deref(move _247)</td></tr></table>>];
    bb109__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_245 = &amp;(*_246)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_244 = solana_program::log::sol_log(move _245)</td></tr></table>>];
    bb110__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/></td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb111__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageLive(_263)<br/>_263 = _243<br/>_238 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _263)<br/>StorageDead(_263)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _238)</td></tr></table>>];
    bb113__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_264 = discriminant(_237)<br/></td></tr><tr><td align="left">switchInt(move _264)</td></tr></table>>];
    bb114__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = ((_237 as Continue).0: ())<br/>_236 = _268<br/>StorageDead(_268)<br/>StorageDead(_237)<br/>StorageDead(_236)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = _170<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>_305 = deref_copy (_1.1: &amp;mut instructions::if_staker::RequestRemoveInsuranceFundStake&lt;'_&gt;)<br/>_306 = deref_copy ((*_305).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_328 = (((_306.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_277 = &amp;(*_328)<br/></td></tr><tr><td align="left">_276 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _277)</td></tr></table>>];
    bb115__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_265)<br/>_265 = ((_237 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_267)<br/>_267 = _265<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _267)</td></tr></table>>];
    bb116__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageDead(_265)<br/>StorageDead(_237)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">_275 = &amp;(*_276)<br/></td></tr><tr><td align="left">_274 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _275)</td></tr></table>>];
    bb118__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_275)<br/>_273 = ((*_274).2: u64)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_280 = &amp;mut (*_12)<br/></td></tr><tr><td align="left">_279 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as DerefMut&gt;::deref_mut(move _280)</td></tr></table>>];
    bb119__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">_278 = &amp;mut (*_279)<br/>StorageDead(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>_283 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_282 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _283)</td></tr></table>>];
    bb120__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">_281 = &amp;mut (*_282)<br/>StorageDead(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;mut (*_36)<br/></td></tr><tr><td align="left">_285 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _286)</td></tr></table>>];
    bb121__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_284 = &amp;mut (*_285)<br/>StorageDead(_286)<br/>StorageLive(_287)<br/>_287 = (_4.4: i64)<br/></td></tr><tr><td align="left">_271 = controller::insurance::request_remove_insurance_fund_stake(move _272, move _273, move _278, move _281, move _284, move _287)</td></tr></table>>];
    bb122__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_284)<br/>StorageDead(_281)<br/>StorageDead(_278)<br/>StorageDead(_273)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">_270 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _271)</td></tr></table>>];
    bb123__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>_288 = discriminant(_270)<br/></td></tr><tr><td align="left">switchInt(move _288)</td></tr></table>>];
    bb124__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_292)<br/>_292 = ((_270 as Continue).0: ())<br/>_269 = _292<br/>StorageDead(_292)<br/>StorageDead(_285)<br/>StorageDead(_282)<br/>StorageDead(_279)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageDead(_270)<br/>StorageDead(_269)<br/>StorageLive(_293)<br/>_293 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _293)<br/>StorageDead(_293)<br/>StorageDead(_222)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb125__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_270 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_291)<br/>_291 = _289<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _291)</td></tr></table>>];
    bb126__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_289)<br/>StorageDead(_285)<br/>StorageDead(_282)<br/>StorageDead(_279)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageDead(_270)<br/>StorageDead(_269)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb128__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb129__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb133__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb134__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb135__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left">return</td></tr></table>>];
    bb138__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">138 (cleanup)</td></tr><tr><td align="left">drop(_249)</td></tr></table>>];
    bb139__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">139 (cleanup)</td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb140__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">140 (cleanup)</td></tr><tr><td align="left">drop(_147)</td></tr></table>>];
    bb141__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">141 (cleanup)</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb142__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">142 (cleanup)</td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb143__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">143 (cleanup)</td></tr><tr><td align="left">drop(_63)</td></tr></table>>];
    bb144__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">144 (cleanup)</td></tr><tr><td align="left">drop(_37)</td></tr></table>>];
    bb145__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">145 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb146__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">146 (cleanup)</td></tr><tr><td align="left">drop(_13)</td></tr></table>>];
    bb147__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">147 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb148__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">148 (cleanup)</td></tr><tr><td align="left" balign="left">_323 = discriminant(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">149 (cleanup)</td></tr><tr><td align="left" balign="left">_324 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">150 (cleanup)</td></tr><tr><td align="left" balign="left">_325 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_1211 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left" balign="left">_326 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1211 -> bb1__0_1211 [label="return"];
    bb1__0_1211 -> bb2__0_1211 [label="return"];
    bb1__0_1211 -> bb147__0_1211 [label="unwind"];
    bb2__0_1211 -> bb3__0_1211 [label="0"];
    bb2__0_1211 -> bb5__0_1211 [label="1"];
    bb2__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb3__0_1211 -> bb7__0_1211 [label="return"];
    bb5__0_1211 -> bb6__0_1211 [label="return"];
    bb5__0_1211 -> bb151__0_1211 [label="unwind"];
    bb6__0_1211 -> bb136__0_1211 [label=""];
    bb7__0_1211 -> bb8__0_1211 [label="return"];
    bb7__0_1211 -> bb147__0_1211 [label="unwind"];
    bb8__0_1211 -> bb9__0_1211 [label="return"];
    bb8__0_1211 -> bb147__0_1211 [label="unwind"];
    bb9__0_1211 -> bb10__0_1211 [label="0"];
    bb9__0_1211 -> bb11__0_1211 [label="1"];
    bb9__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb10__0_1211 -> bb13__0_1211 [label="return"];
    bb10__0_1211 -> bb146__0_1211 [label="unwind"];
    bb11__0_1211 -> bb12__0_1211 [label="return"];
    bb11__0_1211 -> bb150__0_1211 [label="unwind"];
    bb12__0_1211 -> bb135__0_1211 [label=""];
    bb13__0_1211 -> bb14__0_1211 [label="return"];
    bb13__0_1211 -> bb146__0_1211 [label="unwind"];
    bb14__0_1211 -> bb15__0_1211 [label="return"];
    bb14__0_1211 -> bb146__0_1211 [label="unwind"];
    bb15__0_1211 -> bb16__0_1211 [label="0"];
    bb15__0_1211 -> bb17__0_1211 [label="1"];
    bb15__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb16__0_1211 -> bb19__0_1211 [label="return"];
    bb16__0_1211 -> bb145__0_1211 [label="unwind"];
    bb17__0_1211 -> bb18__0_1211 [label="return"];
    bb17__0_1211 -> bb149__0_1211 [label="unwind"];
    bb18__0_1211 -> bb134__0_1211 [label=""];
    bb19__0_1211 -> bb20__0_1211 [label="return"];
    bb19__0_1211 -> bb145__0_1211 [label="unwind"];
    bb20__0_1211 -> bb21__0_1211 [label="return"];
    bb20__0_1211 -> bb145__0_1211 [label="unwind"];
    bb21__0_1211 -> bb22__0_1211 [label="0"];
    bb21__0_1211 -> bb23__0_1211 [label="1"];
    bb21__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb22__0_1211 -> bb25__0_1211 [label="return"];
    bb22__0_1211 -> bb144__0_1211 [label="unwind"];
    bb23__0_1211 -> bb24__0_1211 [label="return"];
    bb23__0_1211 -> bb148__0_1211 [label="unwind"];
    bb24__0_1211 -> bb133__0_1211 [label=""];
    bb25__0_1211 -> bb26__0_1211 [label="return"];
    bb25__0_1211 -> bb144__0_1211 [label="unwind"];
    bb26__0_1211 -> bb28__0_1211 [label="0"];
    bb26__0_1211 -> bb27__0_1211 [label="otherwise"];
    bb27__0_1211 -> bb29__0_1211 [label="return"];
    bb27__0_1211 -> bb144__0_1211 [label="unwind"];
    bb28__0_1211 -> bb40__0_1211 [label=""];
    bb29__0_1211 -> bb30__0_1211 [label="return"];
    bb29__0_1211 -> bb144__0_1211 [label="unwind"];
    bb30__0_1211 -> bb31__0_1211 [label="return"];
    bb30__0_1211 -> bb144__0_1211 [label="unwind"];
    bb31__0_1211 -> bb32__0_1211 [label="return"];
    bb31__0_1211 -> bb143__0_1211 [label="unwind"];
    bb32__0_1211 -> bb33__0_1211 [label="return"];
    bb32__0_1211 -> bb143__0_1211 [label="unwind"];
    bb33__0_1211 -> bb34__0_1211 [label="return"];
    bb33__0_1211 -> bb144__0_1211 [label="unwind"];
    bb34__0_1211 -> bb35__0_1211 [label="return"];
    bb34__0_1211 -> bb144__0_1211 [label="unwind"];
    bb35__0_1211 -> bb36__0_1211 [label="return"];
    bb35__0_1211 -> bb144__0_1211 [label="unwind"];
    bb36__0_1211 -> bb37__0_1211 [label="return"];
    bb36__0_1211 -> bb142__0_1211 [label="unwind"];
    bb37__0_1211 -> bb38__0_1211 [label="return"];
    bb37__0_1211 -> bb142__0_1211 [label="unwind"];
    bb38__0_1211 -> bb39__0_1211 [label="return"];
    bb38__0_1211 -> bb144__0_1211 [label="unwind"];
    bb39__0_1211 -> bb40__0_1211 [label=""];
    bb40__0_1211 -> bb41__0_1211 [label="return"];
    bb40__0_1211 -> bb144__0_1211 [label="unwind"];
    bb41__0_1211 -> bb42__0_1211 [label="0"];
    bb41__0_1211 -> bb43__0_1211 [label="1"];
    bb41__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb42__0_1211 -> bb45__0_1211 [label="return"];
    bb42__0_1211 -> bb144__0_1211 [label="unwind"];
    bb43__0_1211 -> bb44__0_1211 [label="return"];
    bb43__0_1211 -> bb144__0_1211 [label="unwind"];
    bb44__0_1211 -> bb132__0_1211 [label=""];
    bb45__0_1211 -> bb47__0_1211 [label="0"];
    bb45__0_1211 -> bb46__0_1211 [label="otherwise"];
    bb46__0_1211 -> bb55__0_1211 [label=""];
    bb47__0_1211 -> bb48__0_1211 [label="return"];
    bb47__0_1211 -> bb144__0_1211 [label="unwind"];
    bb48__0_1211 -> bb49__0_1211 [label="return"];
    bb48__0_1211 -> bb144__0_1211 [label="unwind"];
    bb49__0_1211 -> bb50__0_1211 [label="return"];
    bb49__0_1211 -> bb144__0_1211 [label="unwind"];
    bb50__0_1211 -> bb51__0_1211 [label="return"];
    bb50__0_1211 -> bb141__0_1211 [label="unwind"];
    bb51__0_1211 -> bb52__0_1211 [label="return"];
    bb51__0_1211 -> bb141__0_1211 [label="unwind"];
    bb52__0_1211 -> bb53__0_1211 [label="return"];
    bb52__0_1211 -> bb144__0_1211 [label="unwind"];
    bb53__0_1211 -> bb54__0_1211 [label="return"];
    bb53__0_1211 -> bb144__0_1211 [label="unwind"];
    bb54__0_1211 -> bb55__0_1211 [label=""];
    bb55__0_1211 -> bb56__0_1211 [label="return"];
    bb55__0_1211 -> bb144__0_1211 [label="unwind"];
    bb56__0_1211 -> bb57__0_1211 [label="0"];
    bb56__0_1211 -> bb58__0_1211 [label="1"];
    bb56__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb57__0_1211 -> bb60__0_1211 [label="return"];
    bb57__0_1211 -> bb144__0_1211 [label="unwind"];
    bb58__0_1211 -> bb59__0_1211 [label="return"];
    bb58__0_1211 -> bb144__0_1211 [label="unwind"];
    bb59__0_1211 -> bb132__0_1211 [label=""];
    bb60__0_1211 -> bb62__0_1211 [label="0"];
    bb60__0_1211 -> bb61__0_1211 [label="otherwise"];
    bb61__0_1211 -> bb70__0_1211 [label=""];
    bb62__0_1211 -> bb63__0_1211 [label="return"];
    bb62__0_1211 -> bb144__0_1211 [label="unwind"];
    bb63__0_1211 -> bb64__0_1211 [label="return"];
    bb63__0_1211 -> bb144__0_1211 [label="unwind"];
    bb64__0_1211 -> bb65__0_1211 [label="return"];
    bb64__0_1211 -> bb144__0_1211 [label="unwind"];
    bb65__0_1211 -> bb66__0_1211 [label="return"];
    bb65__0_1211 -> bb140__0_1211 [label="unwind"];
    bb66__0_1211 -> bb67__0_1211 [label="return"];
    bb66__0_1211 -> bb140__0_1211 [label="unwind"];
    bb67__0_1211 -> bb68__0_1211 [label="return"];
    bb67__0_1211 -> bb144__0_1211 [label="unwind"];
    bb68__0_1211 -> bb69__0_1211 [label="return"];
    bb68__0_1211 -> bb144__0_1211 [label="unwind"];
    bb69__0_1211 -> bb70__0_1211 [label=""];
    bb70__0_1211 -> bb71__0_1211 [label="return"];
    bb70__0_1211 -> bb144__0_1211 [label="unwind"];
    bb71__0_1211 -> bb72__0_1211 [label="0"];
    bb71__0_1211 -> bb73__0_1211 [label="1"];
    bb71__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb72__0_1211 -> bb75__0_1211 [label="return"];
    bb72__0_1211 -> bb144__0_1211 [label="unwind"];
    bb73__0_1211 -> bb74__0_1211 [label="return"];
    bb73__0_1211 -> bb144__0_1211 [label="unwind"];
    bb74__0_1211 -> bb132__0_1211 [label=""];
    bb75__0_1211 -> bb76__0_1211 [label="return"];
    bb75__0_1211 -> bb144__0_1211 [label="unwind"];
    bb76__0_1211 -> bb77__0_1211 [label="return"];
    bb76__0_1211 -> bb144__0_1211 [label="unwind"];
    bb77__0_1211 -> bb78__0_1211 [label="return"];
    bb77__0_1211 -> bb144__0_1211 [label="unwind"];
    bb78__0_1211 -> bb79__0_1211 [label="return"];
    bb78__0_1211 -> bb144__0_1211 [label="unwind"];
    bb79__0_1211 -> bb80__0_1211 [label="0"];
    bb79__0_1211 -> bb81__0_1211 [label="1"];
    bb79__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb80__0_1211 -> bb84__0_1211 [label="0"];
    bb80__0_1211 -> bb83__0_1211 [label="otherwise"];
    bb81__0_1211 -> bb82__0_1211 [label="return"];
    bb81__0_1211 -> bb144__0_1211 [label="unwind"];
    bb82__0_1211 -> bb131__0_1211 [label=""];
    bb83__0_1211 -> bb92__0_1211 [label=""];
    bb84__0_1211 -> bb85__0_1211 [label="return"];
    bb84__0_1211 -> bb144__0_1211 [label="unwind"];
    bb85__0_1211 -> bb86__0_1211 [label="return"];
    bb85__0_1211 -> bb144__0_1211 [label="unwind"];
    bb86__0_1211 -> bb87__0_1211 [label="return"];
    bb86__0_1211 -> bb144__0_1211 [label="unwind"];
    bb87__0_1211 -> bb88__0_1211 [label="return"];
    bb87__0_1211 -> bb139__0_1211 [label="unwind"];
    bb88__0_1211 -> bb89__0_1211 [label="return"];
    bb88__0_1211 -> bb139__0_1211 [label="unwind"];
    bb89__0_1211 -> bb90__0_1211 [label="return"];
    bb89__0_1211 -> bb144__0_1211 [label="unwind"];
    bb90__0_1211 -> bb91__0_1211 [label="return"];
    bb90__0_1211 -> bb144__0_1211 [label="unwind"];
    bb91__0_1211 -> bb92__0_1211 [label=""];
    bb92__0_1211 -> bb93__0_1211 [label="return"];
    bb92__0_1211 -> bb144__0_1211 [label="unwind"];
    bb93__0_1211 -> bb94__0_1211 [label="0"];
    bb93__0_1211 -> bb95__0_1211 [label="1"];
    bb93__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb94__0_1211 -> bb97__0_1211 [label="return"];
    bb94__0_1211 -> bb144__0_1211 [label="unwind"];
    bb95__0_1211 -> bb96__0_1211 [label="return"];
    bb95__0_1211 -> bb144__0_1211 [label="unwind"];
    bb96__0_1211 -> bb131__0_1211 [label=""];
    bb97__0_1211 -> bb98__0_1211 [label="return"];
    bb97__0_1211 -> bb144__0_1211 [label="unwind"];
    bb98__0_1211 -> bb99__0_1211 [label="return"];
    bb98__0_1211 -> bb144__0_1211 [label="unwind"];
    bb99__0_1211 -> bb100__0_1211 [label="return"];
    bb99__0_1211 -> bb144__0_1211 [label="unwind"];
    bb100__0_1211 -> bb101__0_1211 [label="0"];
    bb100__0_1211 -> bb102__0_1211 [label="1"];
    bb100__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb101__0_1211 -> bb105__0_1211 [label="0"];
    bb101__0_1211 -> bb104__0_1211 [label="otherwise"];
    bb102__0_1211 -> bb103__0_1211 [label="return"];
    bb102__0_1211 -> bb144__0_1211 [label="unwind"];
    bb103__0_1211 -> bb130__0_1211 [label=""];
    bb104__0_1211 -> bb112__0_1211 [label=""];
    bb105__0_1211 -> bb106__0_1211 [label="return"];
    bb105__0_1211 -> bb144__0_1211 [label="unwind"];
    bb106__0_1211 -> bb107__0_1211 [label="return"];
    bb106__0_1211 -> bb144__0_1211 [label="unwind"];
    bb107__0_1211 -> bb108__0_1211 [label="return"];
    bb107__0_1211 -> bb144__0_1211 [label="unwind"];
    bb108__0_1211 -> bb109__0_1211 [label="return"];
    bb108__0_1211 -> bb138__0_1211 [label="unwind"];
    bb109__0_1211 -> bb110__0_1211 [label="return"];
    bb109__0_1211 -> bb138__0_1211 [label="unwind"];
    bb110__0_1211 -> bb111__0_1211 [label="return"];
    bb110__0_1211 -> bb144__0_1211 [label="unwind"];
    bb111__0_1211 -> bb112__0_1211 [label=""];
    bb112__0_1211 -> bb113__0_1211 [label="return"];
    bb112__0_1211 -> bb144__0_1211 [label="unwind"];
    bb113__0_1211 -> bb114__0_1211 [label="0"];
    bb113__0_1211 -> bb115__0_1211 [label="1"];
    bb113__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb114__0_1211 -> bb117__0_1211 [label="return"];
    bb114__0_1211 -> bb144__0_1211 [label="unwind"];
    bb115__0_1211 -> bb116__0_1211 [label="return"];
    bb115__0_1211 -> bb144__0_1211 [label="unwind"];
    bb116__0_1211 -> bb130__0_1211 [label=""];
    bb117__0_1211 -> bb118__0_1211 [label="return"];
    bb117__0_1211 -> bb144__0_1211 [label="unwind"];
    bb118__0_1211 -> bb119__0_1211 [label="return"];
    bb118__0_1211 -> bb144__0_1211 [label="unwind"];
    bb119__0_1211 -> bb120__0_1211 [label="return"];
    bb119__0_1211 -> bb144__0_1211 [label="unwind"];
    bb120__0_1211 -> bb121__0_1211 [label="return"];
    bb120__0_1211 -> bb144__0_1211 [label="unwind"];
    bb121__0_1211 -> bb122__0_1211 [label="return"];
    bb121__0_1211 -> bb144__0_1211 [label="unwind"];
    bb122__0_1211 -> bb123__0_1211 [label="return"];
    bb122__0_1211 -> bb144__0_1211 [label="unwind"];
    bb123__0_1211 -> bb124__0_1211 [label="0"];
    bb123__0_1211 -> bb125__0_1211 [label="1"];
    bb123__0_1211 -> bb4__0_1211 [label="otherwise"];
    bb124__0_1211 -> bb127__0_1211 [label="return"];
    bb124__0_1211 -> bb145__0_1211 [label="unwind"];
    bb125__0_1211 -> bb126__0_1211 [label="return"];
    bb125__0_1211 -> bb144__0_1211 [label="unwind"];
    bb126__0_1211 -> bb130__0_1211 [label=""];
    bb127__0_1211 -> bb128__0_1211 [label="return"];
    bb127__0_1211 -> bb146__0_1211 [label="unwind"];
    bb128__0_1211 -> bb129__0_1211 [label="return"];
    bb128__0_1211 -> bb147__0_1211 [label="unwind"];
    bb129__0_1211 -> bb137__0_1211 [label=""];
    bb130__0_1211 -> bb131__0_1211 [label=""];
    bb131__0_1211 -> bb132__0_1211 [label=""];
    bb132__0_1211 -> bb133__0_1211 [label="return"];
    bb132__0_1211 -> bb145__0_1211 [label="unwind"];
    bb133__0_1211 -> bb134__0_1211 [label="return"];
    bb133__0_1211 -> bb146__0_1211 [label="unwind"];
    bb134__0_1211 -> bb135__0_1211 [label="return"];
    bb134__0_1211 -> bb147__0_1211 [label="unwind"];
    bb135__0_1211 -> bb136__0_1211 [label=""];
    bb136__0_1211 -> bb137__0_1211 [label=""];
    bb138__0_1211 -> bb144__0_1211 [label="return"];
    bb139__0_1211 -> bb144__0_1211 [label="return"];
    bb140__0_1211 -> bb144__0_1211 [label="return"];
    bb141__0_1211 -> bb144__0_1211 [label="return"];
    bb142__0_1211 -> bb144__0_1211 [label="return"];
    bb143__0_1211 -> bb144__0_1211 [label="return"];
    bb144__0_1211 -> bb145__0_1211 [label="return"];
    bb145__0_1211 -> bb146__0_1211 [label="return"];
    bb146__0_1211 -> bb147__0_1211 [label="return"];
    bb148__0_1211 -> bb145__0_1211 [label=""];
    bb149__0_1211 -> bb146__0_1211 [label=""];
    bb150__0_1211 -> bb147__0_1211 [label=""];
    bb151__0_1211 -> bb147__0_1211 [label=""];
}
