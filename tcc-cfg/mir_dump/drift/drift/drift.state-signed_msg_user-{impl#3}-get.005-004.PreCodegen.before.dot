digraph Mir_0_3958 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SignedMsgUserOrdersZeroCopy::&lt;'a&gt;::get(_1: &amp;ReErased state::signed_msg_user::SignedMsgUserOrdersZeroCopy&lt;ReErased&gt;, _2: u32) -&gt; &amp;ReErased state::signed_msg_user::SignedMsgOrderId<br align="left"/>let _3: usize;<br align="left"/>let _4: usize;<br align="left"/>let mut _5: usize;<br align="left"/>let mut _6: u32;<br align="left"/>let mut _7: usize;<br align="left"/>let mut _8: (usize, bool);<br align="left"/>let _9: &amp;ReErased state::signed_msg_user::SignedMsgOrderId;<br align="left"/>let mut _10: &amp;ReErased [u8];<br align="left"/>let _11: &amp;ReErased [u8];<br align="left"/>let _12: &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased [u8];<br align="left"/>let _14: &amp;ReErased [u8];<br align="left"/>let mut _15: &amp;ReErased std::cell::Ref&lt;ReErased, [u8]&gt;;<br align="left"/>let mut _16: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _17: usize;<br align="left"/>let mut _18: usize;<br align="left"/>let mut _19: usize;<br align="left"/>let mut _20: usize;<br align="left"/>let mut _21: (usize, bool);<br align="left"/>debug self =&gt; _1;<br align="left"/>debug index =&gt; _2;<br align="left"/>debug size =&gt; _3;<br align="left"/>debug start =&gt; _4;<br align="left"/>>;
    bb0__0_3958 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/></td></tr><tr><td align="left">_3 = std::mem::size_of::&lt;SignedMsgOrderId&gt;()</td></tr></table>>];
    bb1__0_3958 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _2<br/>_5 = move _6 as usize (IntToInt)<br/>StorageDead(_6)<br/>StorageLive(_7)<br/>_7 = _3<br/>_8 = CheckedMul(_5, _7)<br/></td></tr><tr><td align="left">assert(!move (_8.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _5, move _7)</td></tr></table>>];
    bb2__0_3958 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_4 = move (_8.0: usize)<br/>StorageDead(_7)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;((*_1).1: std::cell::Ref&lt;'_, [u8]&gt;)<br/></td></tr><tr><td align="left">_14 = &lt;Ref&lt;'_, [u8]&gt; as Deref&gt;::deref(move _15)</td></tr></table>>];
    bb3__0_3958 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_13 = &amp;(*_14)<br/>StorageDead(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _4<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _4<br/>StorageLive(_20)<br/>_20 = _3<br/>_21 = CheckedAdd(_19, _20)<br/></td></tr><tr><td align="left">assert(!move (_21.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _19, move _20)</td></tr></table>>];
    bb4__0_3958 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_18 = move (_21.0: usize)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>_16 = std::ops::Range::&lt;usize&gt; { start: move _17, end: move _18 }<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_12 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _13, move _16)</td></tr></table>>];
    bb5__0_3958 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_13)<br/>_11 = &amp;(*_12)<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_9 = bytemuck::from_bytes::&lt;SignedMsgOrderId&gt;(move _10)</td></tr></table>>];
    bb6__0_3958 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_0 = &amp;(*_9)<br/>StorageDead(_10)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3958 -> bb1__0_3958 [label="return"];
    bb1__0_3958 -> bb2__0_3958 [label="success"];
    bb2__0_3958 -> bb3__0_3958 [label="return"];
    bb3__0_3958 -> bb4__0_3958 [label="success"];
    bb4__0_3958 -> bb5__0_3958 [label="return"];
    bb5__0_3958 -> bb6__0_3958 [label="return"];
}
