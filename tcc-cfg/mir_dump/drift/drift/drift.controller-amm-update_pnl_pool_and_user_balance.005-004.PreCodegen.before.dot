digraph Mir_0_93 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_pnl_pool_and_user_balance(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: &amp;ReErased mut state::spot_market::SpotMarket, _3: &amp;ReErased mut state::user::User, _4: i128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _5: i128;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: i128;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _17: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _18: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _19: &amp;ReErased state::perp_market::PoolBalance;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: u128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i128;<br align="left"/>let _30: ();<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _32: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _33: bool;<br align="left"/>let mut _34: i128;<br align="left"/>let mut _35: i128;<br align="left"/>let mut _36: ();<br align="left"/>let _37: error::ErrorCode;<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased str;<br align="left"/>let mut _41: &amp;ReErased std::string::String;<br align="left"/>let _42: &amp;ReErased std::string::String;<br align="left"/>let _43: std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let mut _45: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _48: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _49: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _53: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _54: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased error::ErrorCode;<br align="left"/>let _56: &amp;ReErased error::ErrorCode;<br align="left"/>let _57: ();<br align="left"/>let mut _58: &amp;ReErased str;<br align="left"/>let _59: &amp;ReErased str;<br align="left"/>let mut _60: &amp;ReErased std::string::String;<br align="left"/>let _61: &amp;ReErased std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let mut _64: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _67: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _68: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _72: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _73: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased i128;<br align="left"/>let _75: &amp;ReErased i128;<br align="left"/>let mut _76: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased i128;<br align="left"/>let _78: &amp;ReErased i128;<br align="left"/>let mut _79: error::ErrorCode;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: ();<br align="left"/>let _85: ();<br align="left"/>let mut _86: bool;<br align="left"/>let mut _87: i128;<br align="left"/>let mut _88: !;<br align="left"/>let _89: ();<br align="left"/>let mut _90: &amp;ReErased str;<br align="left"/>let _91: &amp;ReErased str;<br align="left"/>let mut _92: &amp;ReErased std::string::String;<br align="left"/>let _93: &amp;ReErased std::string::String;<br align="left"/>let _94: std::string::String;<br align="left"/>let _95: std::string::String;<br align="left"/>let mut _96: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _97: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _98: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _99: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _100: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _101: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _102: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _104: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _105: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased u16;<br align="left"/>let _107: &amp;ReErased u16;<br align="left"/>let mut _108: bool;<br align="left"/>let mut _109: i128;<br align="left"/>let mut _110: !;<br align="left"/>let _111: ();<br align="left"/>let mut _112: &amp;ReErased str;<br align="left"/>let _113: &amp;ReErased str;<br align="left"/>let mut _114: &amp;ReErased std::string::String;<br align="left"/>let _115: &amp;ReErased std::string::String;<br align="left"/>let _116: std::string::String;<br align="left"/>let _117: std::string::String;<br align="left"/>let mut _118: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _119: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _120: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _121: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _122: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _123: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _124: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _126: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _127: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _128: &amp;ReErased u16;<br align="left"/>let _129: &amp;ReErased u16;<br align="left"/>let _130: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _131: &amp;ReErased mut state::user::User;<br align="left"/>let _132: ();<br align="left"/>let mut _133: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _134: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _135: i128;<br align="left"/>let mut _136: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _137: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _138: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _139: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _140: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _141: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _142: isize;<br align="left"/>let _143: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _144: !;<br align="left"/>let mut _145: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _146: ();<br align="left"/>let mut _147: i128;<br align="left"/>let mut _148: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _149: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _150: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug market =&gt; _1;<br align="left"/>debug bank =&gt; _2;<br align="left"/>debug user =&gt; _3;<br align="left"/>debug unrealized_pnl_with_fee =&gt; _4;<br align="left"/>debug pnl_to_settle_with_user =&gt; _5;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug error_code =&gt; _37;<br align="left"/>debug res =&gt; _44;<br align="left"/>debug res =&gt; _63;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug res =&gt; _95;<br align="left"/>debug res =&gt; _117;<br align="left"/>debug user_spot_position =&gt; _130;<br align="left"/>debug residual =&gt; _143;<br align="left"/>debug val =&gt; _146;<br align="left"/>>;
    bb0__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _4<br/>_6 = Gt(move _7, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = _4<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = (((*_1).2: state::perp_market::PoolBalance).0: u128)<br/>StorageLive(_16)<br/>_16 = &amp;(*_2)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;((*_1).2: state::perp_market::PoolBalance)<br/></td></tr><tr><td align="left">_18 = &lt;PoolBalance as SpotBalance&gt;::balance_type(move _19)</td></tr></table>>];
    bb2__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_17 = &amp;(*_18)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_14 = get_token_amount(move _15, move _16, move _17)</td></tr></table>>];
    bb3__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb4__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_20 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb5__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_13 as Continue).0: u128)<br/>_12 = _24<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_11 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _12)</td></tr></table>>];
    bb6__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb8__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb10__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_25 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb11__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_10 as Continue).0: i128)<br/>_9 = _29<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_5 = &lt;i128 as Ord&gt;::min(move _8, move _9)</td></tr></table>>];
    bb12__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb13__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_5 = _4<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = _4<br/>StorageLive(_35)<br/>_35 = _5<br/>_33 = Eq(move _34, move _35)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb17__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_36)<br/>_36 = ()<br/>_32 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>_37 = error::ErrorCode::InsufficientPerpPnlPool<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_151 = const _<br/>_48 = &amp;(*_151)<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_37<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _55)</td></tr></table>>];
    bb19__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = [move _54]<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_45 = Arguments::&lt;'_&gt;::new_v1(move _46, move _50)</td></tr></table>>];
    bb20__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = format(move _45)</td></tr></table>>];
    bb21__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>_43 = move _44<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = &lt;String as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb22__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_39 = &amp;(*_40)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_38 = solana_program::log::sol_log(move _39)</td></tr></table>>];
    bb23__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb24__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_150 = const _<br/>_67 = &amp;(*_150)<br/>_66 = &amp;(*_67)<br/>_65 = move _66 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;_5<br/>_74 = &amp;(*_75)<br/></td></tr><tr><td align="left">_73 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _74)</td></tr></table>>];
    bb25__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;_4<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _77)</td></tr></table>>];
    bb26__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_72 = [move _73, move _76]<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/>_69 = move _70 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_64 = Arguments::&lt;'_&gt;::new_v1(move _65, move _69)</td></tr></table>>];
    bb27__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = format(move _64)</td></tr></table>>];
    bb28__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>_62 = move _63<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = &lt;String as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb29__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_57 = solana_program::log::sol_log(move _58)</td></tr></table>>];
    bb30__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb31__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageLive(_79)<br/>_79 = _37<br/>_32 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _79)<br/>StorageDead(_79)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb33__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_80 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb34__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_31 as Continue).0: ())<br/>_30 = _84<br/>StorageDead(_84)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _4<br/>_86 = Eq(move _87, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb35__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb36__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_148 = const _<br/>_99 = &amp;(*_148)<br/>_98 = &amp;(*_99)<br/>_97 = move _98 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_98)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;((*_1).21: u16)<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _106)</td></tr></table>>];
    bb38__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = _5<br/>_108 = Eq(move _109, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb39__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_104 = [move _105]<br/>StorageDead(_105)<br/>_103 = &amp;_104<br/>_102 = &amp;(*_103)<br/>_101 = move _102 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_96 = Arguments::&lt;'_&gt;::new_v1(move _97, move _101)</td></tr></table>>];
    bb40__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = format(move _96)</td></tr></table>>];
    bb41__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_99)<br/>_94 = move _95<br/>StorageDead(_95)<br/>_93 = &amp;_94<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_91 = &lt;String as Deref&gt;::deref(move _92)</td></tr></table>>];
    bb42__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_90 = &amp;(*_91)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_89 = solana_program::log::sol_log(move _90)</td></tr></table>>];
    bb43__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">drop(_94)</td></tr></table>>];
    bb44__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(const 0_i128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_149 = const _<br/>_121 = &amp;(*_149)<br/>_120 = &amp;(*_121)<br/>_119 = move _120 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_120)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;((*_1).21: u16)<br/>_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_127 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _128)</td></tr></table>>];
    bb46__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_85 = const ()<br/>StorageDead(_108)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;mut (*_3)<br/></td></tr><tr><td align="left">_130 = User::get_quote_spot_position_mut(move _131)</td></tr></table>>];
    bb47__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_126 = [move _127]<br/>StorageDead(_127)<br/>_125 = &amp;_126<br/>_124 = &amp;(*_125)<br/>_123 = move _124 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_118 = Arguments::&lt;'_&gt;::new_v1(move _119, move _123)</td></tr></table>>];
    bb48__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = format(move _118)</td></tr></table>>];
    bb49__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_121)<br/>_116 = move _117<br/>StorageDead(_117)<br/>_115 = &amp;_116<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = &lt;String as Deref&gt;::deref(move _114)</td></tr></table>>];
    bb50__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_112 = &amp;(*_113)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_111 = solana_program::log::sol_log(move _112)</td></tr></table>>];
    bb51__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_116)</td></tr></table>>];
    bb52__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(const 0_i128)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = _5<br/>StorageLive(_136)<br/>_136 = &amp;mut (*_2)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;mut ((*_1).2: state::perp_market::PoolBalance)<br/>_138 = &amp;mut (*_139)<br/>_137 = move _138 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_138)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;mut (*_130)<br/>_140 = move _141 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_134 = transfer_spot_balances(move _135, move _136, move _137, move _140)</td></tr></table>>];
    bb54__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">_133 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _134)</td></tr></table>>];
    bb55__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>_142 = discriminant(_133)<br/></td></tr><tr><td align="left">switchInt(move _142)</td></tr></table>>];
    bb56__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_146)<br/>_146 = ((_133 as Continue).0: ())<br/>_132 = _146<br/>StorageDead(_146)<br/>StorageDead(_139)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageLive(_147)<br/>_147 = _5<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _147)<br/>StorageDead(_147)<br/>StorageDead(_130)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = ((_133 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_145)<br/>_145 = _143<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _145)</td></tr></table>>];
    bb58__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_139)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left">return</td></tr></table>>];
    bb63__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left">drop(_116)</td></tr></table>>];
    bb64__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left">drop(_94)</td></tr></table>>];
    bb65__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">65 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb66__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">66 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb67__0_93 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">67 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_93 -> bb15__0_93 [label="0"];
    bb0__0_93 -> bb1__0_93 [label="otherwise"];
    bb1__0_93 -> bb2__0_93 [label="return"];
    bb2__0_93 -> bb3__0_93 [label="return"];
    bb3__0_93 -> bb4__0_93 [label="return"];
    bb4__0_93 -> bb5__0_93 [label="0"];
    bb4__0_93 -> bb7__0_93 [label="1"];
    bb4__0_93 -> bb6__0_93 [label="otherwise"];
    bb5__0_93 -> bb9__0_93 [label="return"];
    bb7__0_93 -> bb8__0_93 [label="return"];
    bb8__0_93 -> bb60__0_93 [label=""];
    bb9__0_93 -> bb10__0_93 [label="return"];
    bb10__0_93 -> bb11__0_93 [label="0"];
    bb10__0_93 -> bb12__0_93 [label="1"];
    bb10__0_93 -> bb6__0_93 [label="otherwise"];
    bb11__0_93 -> bb14__0_93 [label="return"];
    bb12__0_93 -> bb13__0_93 [label="return"];
    bb13__0_93 -> bb60__0_93 [label=""];
    bb14__0_93 -> bb16__0_93 [label=""];
    bb15__0_93 -> bb16__0_93 [label=""];
    bb16__0_93 -> bb18__0_93 [label="0"];
    bb16__0_93 -> bb17__0_93 [label="otherwise"];
    bb17__0_93 -> bb32__0_93 [label=""];
    bb18__0_93 -> bb19__0_93 [label="return"];
    bb19__0_93 -> bb20__0_93 [label="return"];
    bb20__0_93 -> bb21__0_93 [label="return"];
    bb21__0_93 -> bb22__0_93 [label="return"];
    bb21__0_93 -> bb66__0_93 [label="unwind"];
    bb22__0_93 -> bb23__0_93 [label="return"];
    bb22__0_93 -> bb66__0_93 [label="unwind"];
    bb23__0_93 -> bb24__0_93 [label="return"];
    bb23__0_93 -> bb67__0_93 [label="unwind"];
    bb24__0_93 -> bb25__0_93 [label="return"];
    bb25__0_93 -> bb26__0_93 [label="return"];
    bb26__0_93 -> bb27__0_93 [label="return"];
    bb27__0_93 -> bb28__0_93 [label="return"];
    bb28__0_93 -> bb29__0_93 [label="return"];
    bb28__0_93 -> bb65__0_93 [label="unwind"];
    bb29__0_93 -> bb30__0_93 [label="return"];
    bb29__0_93 -> bb65__0_93 [label="unwind"];
    bb30__0_93 -> bb31__0_93 [label="return"];
    bb30__0_93 -> bb67__0_93 [label="unwind"];
    bb31__0_93 -> bb32__0_93 [label=""];
    bb32__0_93 -> bb33__0_93 [label="return"];
    bb33__0_93 -> bb34__0_93 [label="0"];
    bb33__0_93 -> bb35__0_93 [label="1"];
    bb33__0_93 -> bb6__0_93 [label="otherwise"];
    bb34__0_93 -> bb38__0_93 [label="0"];
    bb34__0_93 -> bb37__0_93 [label="otherwise"];
    bb35__0_93 -> bb36__0_93 [label="return"];
    bb36__0_93 -> bb61__0_93 [label=""];
    bb37__0_93 -> bb39__0_93 [label="return"];
    bb38__0_93 -> bb46__0_93 [label="0"];
    bb38__0_93 -> bb45__0_93 [label="otherwise"];
    bb39__0_93 -> bb40__0_93 [label="return"];
    bb40__0_93 -> bb41__0_93 [label="return"];
    bb41__0_93 -> bb42__0_93 [label="return"];
    bb41__0_93 -> bb64__0_93 [label="unwind"];
    bb42__0_93 -> bb43__0_93 [label="return"];
    bb42__0_93 -> bb64__0_93 [label="unwind"];
    bb43__0_93 -> bb44__0_93 [label="return"];
    bb43__0_93 -> bb67__0_93 [label="unwind"];
    bb44__0_93 -> bb59__0_93 [label=""];
    bb45__0_93 -> bb47__0_93 [label="return"];
    bb46__0_93 -> bb53__0_93 [label="return"];
    bb47__0_93 -> bb48__0_93 [label="return"];
    bb48__0_93 -> bb49__0_93 [label="return"];
    bb49__0_93 -> bb50__0_93 [label="return"];
    bb49__0_93 -> bb63__0_93 [label="unwind"];
    bb50__0_93 -> bb51__0_93 [label="return"];
    bb50__0_93 -> bb63__0_93 [label="unwind"];
    bb51__0_93 -> bb52__0_93 [label="return"];
    bb51__0_93 -> bb67__0_93 [label="unwind"];
    bb52__0_93 -> bb59__0_93 [label=""];
    bb53__0_93 -> bb54__0_93 [label="return"];
    bb54__0_93 -> bb55__0_93 [label="return"];
    bb55__0_93 -> bb56__0_93 [label="0"];
    bb55__0_93 -> bb57__0_93 [label="1"];
    bb55__0_93 -> bb6__0_93 [label="otherwise"];
    bb56__0_93 -> bb62__0_93 [label=""];
    bb57__0_93 -> bb58__0_93 [label="return"];
    bb58__0_93 -> bb61__0_93 [label=""];
    bb59__0_93 -> bb61__0_93 [label=""];
    bb60__0_93 -> bb61__0_93 [label=""];
    bb61__0_93 -> bb62__0_93 [label=""];
    bb63__0_93 -> bb67__0_93 [label="return"];
    bb64__0_93 -> bb67__0_93 [label="return"];
    bb65__0_93 -> bb67__0_93 [label="return"];
    bb66__0_93 -> bb67__0_93 [label="return"];
}
