digraph Mir_0_1828 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_jit_base_asset_amount(_1: &amp;ReErased state::perp_market::PerpMarket, _2: u64, _3: u64, _4: std::option::Option&lt;i64&gt;, _5: controller::position::PositionDirection) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: u64;<br align="left"/>let _15: ();<br align="left"/>let mut _16: isize;<br align="left"/>let _17: i64;<br align="left"/>let _18: i64;<br align="left"/>let _19: u64;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: u64;<br align="left"/>let _28: u64;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: bool;<br align="left"/>let mut _32: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _33: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _34: controller::position::PositionDirection;<br align="left"/>let mut _35: bool;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _39: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _40: u64;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: u64;<br align="left"/>let mut _47: bool;<br align="left"/>let mut _48: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _49: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _50: controller::position::PositionDirection;<br align="left"/>let mut _51: bool;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: u64;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: u64;<br align="left"/>let _56: u64;<br align="left"/>let mut _57: bool;<br align="left"/>let mut _58: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _59: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _60: controller::position::PositionDirection;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _62: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _65: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _66: u64;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _68: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _69: u32;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: u64;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _80: u64;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: u64;<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _87: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _88: u64;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _90: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _91: u64;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _93: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _94: u32;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: u64;<br align="left"/>let mut _100: u64;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _103: !;<br align="left"/>let mut _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _105: u64;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _110: u64;<br align="left"/>let _111: u64;<br align="left"/>let mut _112: i64;<br align="left"/>let mut _113: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _114: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _115: i64;<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _117: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _118: u64;<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _123: i64;<br align="left"/>let mut _124: i64;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: i64;<br align="left"/>let _130: u64;<br align="left"/>let mut _131: u64;<br align="left"/>let mut _132: u64;<br align="left"/>let mut _133: u64;<br align="left"/>let mut _134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _135: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _138: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _139: u64;<br align="left"/>let mut _140: u64;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: u64;<br align="left"/>let mut _146: u64;<br align="left"/>let mut _147: u64;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: u64;<br align="left"/>let _153: ();<br align="left"/>let mut _154: bool;<br align="left"/>let mut _155: u64;<br align="left"/>let mut _156: !;<br align="left"/>let _157: i128;<br align="left"/>let _158: i128;<br align="left"/>let mut _159: (i128, i128);<br align="left"/>let mut _160: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, i128)&gt;;<br align="left"/>let mut _161: std::result::Result&lt;(i128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _162: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _163: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _164: isize;<br align="left"/>let _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _166: !;<br align="left"/>let mut _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _168: (i128, i128);<br align="left"/>let _169: u128;<br align="left"/>let _170: u128;<br align="left"/>let mut _171: (u128, u128);<br align="left"/>let mut _172: u128;<br align="left"/>let mut _173: i128;<br align="left"/>let mut _174: u128;<br align="left"/>let mut _175: i128;<br align="left"/>let _176: u128;<br align="left"/>let mut _177: u128;<br align="left"/>let mut _178: u128;<br align="left"/>let _179: u128;<br align="left"/>let mut _180: u128;<br align="left"/>let mut _181: u128;<br align="left"/>let _182: u128;<br align="left"/>let mut _183: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _184: u128;<br align="left"/>let mut _185: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _186: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _187: u128;<br align="left"/>let mut _188: isize;<br align="left"/>let _189: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _190: !;<br align="left"/>let mut _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _192: u128;<br align="left"/>let mut _193: u128;<br align="left"/>let _194: u128;<br align="left"/>let mut _195: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _196: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _197: u128;<br align="left"/>let mut _198: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _199: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _200: isize;<br align="left"/>let _201: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _202: !;<br align="left"/>let mut _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _204: u128;<br align="left"/>let mut _205: isize;<br align="left"/>let _206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _207: !;<br align="left"/>let mut _208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _209: u128;<br align="left"/>let _210: bool;<br align="left"/>let mut _211: u128;<br align="left"/>let mut _212: u128;<br align="left"/>let mut _213: u64;<br align="left"/>let mut _214: bool;<br align="left"/>let mut _215: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _216: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _217: u64;<br align="left"/>let mut _218: isize;<br align="left"/>let _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _220: !;<br align="left"/>let mut _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _222: u64;<br align="left"/>let _223: ();<br align="left"/>let mut _224: bool;<br align="left"/>let mut _225: u64;<br align="left"/>let mut _226: !;<br align="left"/>let mut _227: u64;<br align="left"/>let mut _228: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _229: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _230: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _231: u64;<br align="left"/>let mut _232: isize;<br align="left"/>let _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _234: !;<br align="left"/>let mut _235: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _236: u64;<br align="left"/>let mut _237: u64;<br align="left"/>let mut _238: u64;<br align="left"/>let mut _239: u64;<br align="left"/>let mut _240: u64;<br align="left"/>let mut _241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _242: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _243: u64;<br align="left"/>let mut _244: u64;<br align="left"/>let mut _245: isize;<br align="left"/>let _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _247: !;<br align="left"/>let mut _248: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _249: u64;<br align="left"/>let mut _250: u64;<br align="left"/>let mut _251: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _252: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _253: &amp;ReErased controller::position::PositionDirection;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug maker_base_asset_amount =&gt; _2;<br align="left"/>debug auction_price =&gt; _3;<br align="left"/>debug valid_oracle_price =&gt; _4;<br align="left"/>debug taker_direction =&gt; _5;<br align="left"/>debug max_jit_amount =&gt; _6;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug oracle_price =&gt; _17;<br align="left"/>debug baseline_price =&gt; _18;<br align="left"/>debug baseline_price_u64 =&gt; _19;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug five_bps_of_baseline =&gt; _28;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug opposite_spread_price =&gt; _56;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug residual =&gt; _102;<br align="left"/>debug val =&gt; _105;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug price_difference_from_baseline =&gt; _111;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug max_jit_amount_scale_numerator =&gt; _130;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug max_bids =&gt; _157;<br align="left"/>debug max_asks =&gt; _158;<br align="left"/>debug residual =&gt; _165;<br align="left"/>debug val =&gt; _168;<br align="left"/>debug max_bids =&gt; _169;<br align="left"/>debug max_asks =&gt; _170;<br align="left"/>debug numerator =&gt; _176;<br align="left"/>debug denominator =&gt; _179;<br align="left"/>debug ratio =&gt; _182;<br align="left"/>debug residual =&gt; _189;<br align="left"/>debug val =&gt; _192;<br align="left"/>debug imbalanced_bound =&gt; _194;<br align="left"/>debug residual =&gt; _201;<br align="left"/>debug val =&gt; _204;<br align="left"/>debug residual =&gt; _206;<br align="left"/>debug val =&gt; _209;<br align="left"/>debug amm_is_imbalanced =&gt; _210;<br align="left"/>debug jit_base_asset_amount =&gt; _213;<br align="left"/>debug residual =&gt; _219;<br align="left"/>debug val =&gt; _222;<br align="left"/>debug residual =&gt; _233;<br align="left"/>debug val =&gt; _236;<br align="left"/>debug residual =&gt; _246;<br align="left"/>debug val =&gt; _249;<br align="left"/>>;
    bb0__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _2<br/></td></tr><tr><td align="left">_8 = &lt;u64 as SafeMath&gt;::safe_div(move _9, const 2_u64)</td></tr></table>>];
    bb1__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: u64)<br/>_6 = _14<br/>StorageDead(_14)<br/>StorageDead(_7)<br/>StorageLive(_15)<br/>_16 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_6 = const 0_u64<br/>_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_4 as Some).0: i64)<br/>StorageLive(_18)<br/>_18 = _17<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _17<br/></td></tr><tr><td align="left">_21 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _22)</td></tr></table>>];
    bb9__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb10__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_23 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb11__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_20 as Continue).0: u64)<br/>_19 = _27<br/>StorageDead(_27)<br/>StorageDead(_20)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _19<br/>_30 = Eq(const 2000_u64, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _30, &quot;attempt to divide `{}` by zero&quot;, _29)</td></tr></table>>];
    bb12__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb13__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_28 = Div(move _29, const 2000_u64)<br/>StorageDead(_29)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_5<br/>StorageLive(_33)<br/>_253 = const _<br/>_33 = &amp;(*_253)<br/></td></tr><tr><td align="left">_31 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _32, move _33)</td></tr></table>>];
    bb15__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _3<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _19<br/>StorageLive(_41)<br/>_41 = _28<br/></td></tr><tr><td align="left">_39 = &lt;u64 as SafeMath&gt;::safe_sub(move _40, move _41)</td></tr></table>>];
    bb17__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb18__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_42 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb19__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_38 as Continue).0: u64)<br/>_37 = _46<br/>StorageDead(_46)<br/>_35 = Lt(move _36, move _37)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb20__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb21__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = &amp;_5<br/>StorageLive(_49)<br/>_252 = const _<br/>_49 = &amp;(*_252)<br/></td></tr><tr><td align="left">_47 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _48, move _49)</td></tr></table>>];
    bb26__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb27__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = _3<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _19<br/>StorageLive(_55)<br/>_55 = _28<br/></td></tr><tr><td align="left">_53 = core::num::&lt;impl u64&gt;::saturating_add(move _54, move _55)</td></tr></table>>];
    bb28__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>_51 = Gt(move _52, move _53)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb29__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;_5<br/>StorageLive(_59)<br/>_251 = const _<br/>_59 = &amp;(*_251)<br/></td></tr><tr><td align="left">_57 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _58, move _59)</td></tr></table>>];
    bb30__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb31__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = (((*_1).1: state::perp_market::AMM).66: u32)<br/></td></tr><tr><td align="left">_68 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _69)</td></tr></table>>];
    bb32__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb33__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_70 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb34__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_67 as Continue).0: u64)<br/>_66 = _74<br/>StorageDead(_74)<br/>StorageLive(_75)<br/>_75 = _19<br/></td></tr><tr><td align="left">_65 = &lt;u64 as SafeMath&gt;::safe_mul(move _66, move _75)</td></tr></table>>];
    bb35__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb36__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb38__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_76 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb39__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_64 as Continue).0: u64)<br/>_63 = _80<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_62 = &lt;u64 as SafeMath&gt;::safe_div(move _63, const _)</td></tr></table>>];
    bb40__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_79)<br/>_79 = _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb41__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb43__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_81 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb44__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_61 as Continue).0: u64)<br/>_56 = _85<br/>StorageDead(_85)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb46__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = (((*_1).1: state::perp_market::AMM).65: u32)<br/></td></tr><tr><td align="left">_93 = &lt;u32 as Cast&gt;::cast::&lt;u64&gt;(move _94)</td></tr></table>>];
    bb48__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb49__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_95 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb50__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_92 as Continue).0: u64)<br/>_91 = _99<br/>StorageDead(_99)<br/>StorageLive(_100)<br/>_100 = _19<br/></td></tr><tr><td align="left">_90 = &lt;u64 as SafeMath&gt;::safe_mul(move _91, move _100)</td></tr></table>>];
    bb51__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb52__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb54__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_101 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb55__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_89 as Continue).0: u64)<br/>_88 = _105<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_87 = &lt;u64 as SafeMath&gt;::safe_div(move _88, const _)</td></tr></table>>];
    bb56__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_104)<br/>_104 = _102<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _104)</td></tr></table>>];
    bb57__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb59__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_106 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb60__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_86 as Continue).0: u64)<br/>_56 = _110<br/>StorageDead(_110)<br/>StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_109)<br/>_109 = _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb62__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = _3<br/></td></tr><tr><td align="left">_117 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _118)</td></tr></table>>];
    bb64__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb65__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_119 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb66__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_116 as Continue).0: i64)<br/>_115 = _123<br/>StorageDead(_123)<br/>StorageLive(_124)<br/>_124 = _18<br/></td></tr><tr><td align="left">_114 = &lt;i64 as SafeMath&gt;::safe_sub(move _115, move _124)</td></tr></table>>];
    bb67__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_122)<br/>_122 = _120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb68__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">_113 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _114)</td></tr></table>>];
    bb70__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_125 = discriminant(_113)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb71__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_113 as Continue).0: i64)<br/>_112 = _129<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_111 = core::num::&lt;impl i64&gt;::unsigned_abs(move _112)</td></tr></table>>];
    bb72__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_113 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb73__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = _56<br/>StorageLive(_132)<br/>_132 = _111<br/></td></tr><tr><td align="left">_130 = core::num::&lt;impl u64&gt;::saturating_sub(move _131, move _132)</td></tr></table>>];
    bb75__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_131)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = _6<br/>StorageLive(_140)<br/>_140 = _130<br/></td></tr><tr><td align="left">_138 = &lt;u64 as SafeMath&gt;::safe_mul(move _139, move _140)</td></tr></table>>];
    bb76__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _138)</td></tr></table>>];
    bb77__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_141 = discriminant(_137)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb78__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_137 as Continue).0: u64)<br/>_136 = _145<br/>StorageDead(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = _56<br/></td></tr><tr><td align="left">_146 = &lt;u64 as Ord&gt;::max(move _147, const 1_u64)</td></tr></table>>];
    bb79__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_137 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb80__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/></td></tr><tr><td align="left">_135 = &lt;u64 as SafeMath&gt;::safe_div(move _136, move _146)</td></tr></table>>];
    bb82__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _135)</td></tr></table>>];
    bb83__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_148 = discriminant(_134)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb84__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_134 as Continue).0: u64)<br/>_133 = _152<br/>StorageDead(_152)<br/>_6 = move _133<br/>StorageDead(_133)<br/>StorageDead(_137)<br/>StorageDead(_134)<br/>_15 = const ()<br/>StorageDead(_130)<br/>StorageDead(_111)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb86__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_15 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_47)<br/>StorageDead(_35)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = _6<br/>_154 = Eq(move _155, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _154)</td></tr></table>>];
    bb92__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const 0_u64)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_153 = const ()<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = &amp;((*_1).1: state::perp_market::AMM)<br/>_162 = &amp;(*_163)<br/></td></tr><tr><td align="left">_161 = calculate_market_open_bids_asks(move _162)</td></tr></table>>];
    bb94__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/></td></tr><tr><td align="left">_160 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _161)</td></tr></table>>];
    bb95__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>_164 = discriminant(_160)<br/></td></tr><tr><td align="left">switchInt(move _164)</td></tr></table>>];
    bb96__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_168)<br/>_168 = ((_160 as Continue).0: (i128, i128))<br/>_159 = _168<br/>StorageDead(_168)<br/>StorageLive(_157)<br/>_157 = (_159.0: i128)<br/>StorageLive(_158)<br/>_158 = (_159.1: i128)<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _157<br/></td></tr><tr><td align="left">_172 = core::num::&lt;impl i128&gt;::unsigned_abs(move _173)</td></tr></table>>];
    bb97__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_160 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_167)<br/>_167 = _165<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _167)</td></tr></table>>];
    bb98__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = _158<br/></td></tr><tr><td align="left">_174 = core::num::&lt;impl i128&gt;::unsigned_abs(move _175)</td></tr></table>>];
    bb100__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_171 = (move _172, move _174)<br/>StorageDead(_174)<br/>StorageDead(_172)<br/>StorageLive(_169)<br/>_169 = (_171.0: u128)<br/>StorageLive(_170)<br/>_170 = (_171.1: u128)<br/>StorageDead(_171)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = _169<br/>StorageLive(_178)<br/>_178 = _170<br/></td></tr><tr><td align="left">_176 = &lt;u128 as Ord&gt;::max(move _177, move _178)</td></tr></table>>];
    bb101__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = _169<br/>StorageLive(_181)<br/>_181 = _170<br/></td></tr><tr><td align="left">_179 = &lt;u128 as Ord&gt;::min(move _180, move _181)</td></tr></table>>];
    bb102__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = _176<br/></td></tr><tr><td align="left">_186 = &lt;u128 as SafeMath&gt;::safe_mul(move _187, const _)</td></tr></table>>];
    bb103__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/></td></tr><tr><td align="left">_185 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _186)</td></tr></table>>];
    bb104__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_188 = discriminant(_185)<br/></td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb105__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_192)<br/>_192 = ((_185 as Continue).0: u128)<br/>_184 = _192<br/>StorageDead(_192)<br/>StorageLive(_193)<br/>_193 = _179<br/></td></tr><tr><td align="left">_183 = &lt;u128 as SafeMath&gt;::safe_div(move _184, move _193)</td></tr></table>>];
    bb106__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_189)<br/>_189 = ((_185 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_191)<br/>_191 = _189<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _191)</td></tr></table>>];
    bb107__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_182 = std::result::Result::&lt;u128, error::ErrorCode&gt;::unwrap_or(move _183, const _)</td></tr></table>>];
    bb109__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_185)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/></td></tr><tr><td align="left">_199 = &lt;u128 as SafeMath&gt;::safe_div(const _, const 10_u128)</td></tr></table>>];
    bb110__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left">_198 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _199)</td></tr></table>>];
    bb111__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_200 = discriminant(_198)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb112__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_198 as Continue).0: u128)<br/>_197 = _204<br/>StorageDead(_204)<br/></td></tr><tr><td align="left">_196 = &lt;u128 as SafeMath&gt;::safe_mul(const 15_u128, move _197)</td></tr></table>>];
    bb113__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_198 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_203)<br/>_203 = _201<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _203)</td></tr></table>>];
    bb114__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_201)<br/>StorageDead(_197)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">_195 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _196)</td></tr></table>>];
    bb116__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_205 = discriminant(_195)<br/></td></tr><tr><td align="left">switchInt(move _205)</td></tr></table>>];
    bb117__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_195 as Continue).0: u128)<br/>_194 = _209<br/>StorageDead(_209)<br/>StorageDead(_198)<br/>StorageDead(_195)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = _182<br/>StorageLive(_212)<br/>_212 = _194<br/>_210 = Ge(move _211, move _212)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = _210<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb118__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_195 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_208)<br/>_208 = _206<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _208)</td></tr></table>>];
    bb119__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">_213 = _2<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = _2<br/></td></tr><tr><td align="left">_216 = &lt;u64 as SafeMath&gt;::safe_div(move _217, const 4_u64)</td></tr></table>>];
    bb122__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/></td></tr><tr><td align="left">_215 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _216)</td></tr></table>>];
    bb123__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>_218 = discriminant(_215)<br/></td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb124__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_222)<br/>_222 = ((_215 as Continue).0: u64)<br/>_213 = _222<br/>StorageDead(_222)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_215 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_221)<br/>_221 = _219<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _221)</td></tr></table>>];
    bb126__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_215)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = _213<br/>_224 = Eq(move _225, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _224)</td></tr></table>>];
    bb128__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const 0_u64)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_223 = const ()<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_230 = &amp;(*_1)<br/>StorageLive(_231)<br/>_231 = _213<br/></td></tr><tr><td align="left">_229 = calculate_clamped_jit_base_asset_amount(move _230, move _231)</td></tr></table>>];
    bb130__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_228 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _229)</td></tr></table>>];
    bb131__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>_232 = discriminant(_228)<br/></td></tr><tr><td align="left">switchInt(move _232)</td></tr></table>>];
    bb132__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = ((_228 as Continue).0: u64)<br/>_227 = _236<br/>StorageDead(_236)<br/>_213 = move _227<br/>StorageDead(_227)<br/>StorageDead(_228)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_238 = _213<br/>StorageLive(_239)<br/>_239 = _6<br/></td></tr><tr><td align="left">_237 = &lt;u64 as Ord&gt;::min(move _238, move _239)</td></tr></table>>];
    bb133__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_228 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_235)<br/>_235 = _233<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _235)</td></tr></table>>];
    bb134__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_227)<br/>StorageDead(_228)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_238)<br/>_213 = move _237<br/>StorageDead(_237)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = _213<br/>StorageLive(_244)<br/>_244 = (((*_1).1: state::perp_market::AMM).52: u64)<br/></td></tr><tr><td align="left">_242 = math::orders::standardize_base_asset_amount(move _243, move _244)</td></tr></table>>];
    bb136__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">_241 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _242)</td></tr></table>>];
    bb137__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_245 = discriminant(_241)<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb138__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_249)<br/>_249 = ((_241 as Continue).0: u64)<br/>_240 = _249<br/>StorageDead(_249)<br/>_213 = move _240<br/>StorageDead(_240)<br/>StorageDead(_241)<br/>StorageLive(_250)<br/>_250 = _213<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _250)<br/>StorageDead(_250)<br/>StorageDead(_213)<br/>StorageDead(_210)<br/>StorageDead(_194)<br/>StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = ((_241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_248)<br/>_248 = _246<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _248)</td></tr></table>>];
    bb140__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_240)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_179)<br/>StorageDead(_176)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_137)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_116)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_89)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_64)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_1828 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1828 -> bb1__0_1828 [label="return"];
    bb1__0_1828 -> bb2__0_1828 [label="return"];
    bb2__0_1828 -> bb3__0_1828 [label="0"];
    bb2__0_1828 -> bb5__0_1828 [label="1"];
    bb2__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb3__0_1828 -> bb8__0_1828 [label="1"];
    bb3__0_1828 -> bb7__0_1828 [label="otherwise"];
    bb5__0_1828 -> bb6__0_1828 [label="return"];
    bb6__0_1828 -> bb156__0_1828 [label=""];
    bb7__0_1828 -> bb91__0_1828 [label=""];
    bb8__0_1828 -> bb9__0_1828 [label="return"];
    bb9__0_1828 -> bb10__0_1828 [label="return"];
    bb10__0_1828 -> bb11__0_1828 [label="0"];
    bb10__0_1828 -> bb12__0_1828 [label="1"];
    bb10__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb11__0_1828 -> bb14__0_1828 [label="success"];
    bb12__0_1828 -> bb13__0_1828 [label="return"];
    bb13__0_1828 -> bb155__0_1828 [label=""];
    bb14__0_1828 -> bb15__0_1828 [label="return"];
    bb15__0_1828 -> bb24__0_1828 [label="0"];
    bb15__0_1828 -> bb16__0_1828 [label="otherwise"];
    bb16__0_1828 -> bb17__0_1828 [label="return"];
    bb17__0_1828 -> bb18__0_1828 [label="return"];
    bb18__0_1828 -> bb19__0_1828 [label="0"];
    bb18__0_1828 -> bb20__0_1828 [label="1"];
    bb18__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb19__0_1828 -> bb23__0_1828 [label="0"];
    bb19__0_1828 -> bb22__0_1828 [label="otherwise"];
    bb20__0_1828 -> bb21__0_1828 [label="return"];
    bb21__0_1828 -> bb154__0_1828 [label=""];
    bb22__0_1828 -> bb29__0_1828 [label=""];
    bb23__0_1828 -> bb25__0_1828 [label=""];
    bb24__0_1828 -> bb25__0_1828 [label=""];
    bb25__0_1828 -> bb26__0_1828 [label="return"];
    bb26__0_1828 -> bb88__0_1828 [label="0"];
    bb26__0_1828 -> bb27__0_1828 [label="otherwise"];
    bb27__0_1828 -> bb28__0_1828 [label="return"];
    bb28__0_1828 -> bb87__0_1828 [label="0"];
    bb28__0_1828 -> bb29__0_1828 [label="otherwise"];
    bb29__0_1828 -> bb30__0_1828 [label="return"];
    bb30__0_1828 -> bb47__0_1828 [label="0"];
    bb30__0_1828 -> bb31__0_1828 [label="otherwise"];
    bb31__0_1828 -> bb32__0_1828 [label="return"];
    bb32__0_1828 -> bb33__0_1828 [label="return"];
    bb33__0_1828 -> bb34__0_1828 [label="0"];
    bb33__0_1828 -> bb35__0_1828 [label="1"];
    bb33__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb34__0_1828 -> bb37__0_1828 [label="return"];
    bb35__0_1828 -> bb36__0_1828 [label="return"];
    bb36__0_1828 -> bb150__0_1828 [label=""];
    bb37__0_1828 -> bb38__0_1828 [label="return"];
    bb38__0_1828 -> bb39__0_1828 [label="0"];
    bb38__0_1828 -> bb40__0_1828 [label="1"];
    bb38__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb39__0_1828 -> bb42__0_1828 [label="return"];
    bb40__0_1828 -> bb41__0_1828 [label="return"];
    bb41__0_1828 -> bb150__0_1828 [label=""];
    bb42__0_1828 -> bb43__0_1828 [label="return"];
    bb43__0_1828 -> bb44__0_1828 [label="0"];
    bb43__0_1828 -> bb45__0_1828 [label="1"];
    bb43__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb44__0_1828 -> bb63__0_1828 [label=""];
    bb45__0_1828 -> bb46__0_1828 [label="return"];
    bb46__0_1828 -> bb151__0_1828 [label=""];
    bb47__0_1828 -> bb48__0_1828 [label="return"];
    bb48__0_1828 -> bb49__0_1828 [label="return"];
    bb49__0_1828 -> bb50__0_1828 [label="0"];
    bb49__0_1828 -> bb51__0_1828 [label="1"];
    bb49__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb50__0_1828 -> bb53__0_1828 [label="return"];
    bb51__0_1828 -> bb52__0_1828 [label="return"];
    bb52__0_1828 -> bb148__0_1828 [label=""];
    bb53__0_1828 -> bb54__0_1828 [label="return"];
    bb54__0_1828 -> bb55__0_1828 [label="0"];
    bb54__0_1828 -> bb56__0_1828 [label="1"];
    bb54__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb55__0_1828 -> bb58__0_1828 [label="return"];
    bb56__0_1828 -> bb57__0_1828 [label="return"];
    bb57__0_1828 -> bb148__0_1828 [label=""];
    bb58__0_1828 -> bb59__0_1828 [label="return"];
    bb59__0_1828 -> bb60__0_1828 [label="0"];
    bb59__0_1828 -> bb61__0_1828 [label="1"];
    bb59__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb60__0_1828 -> bb63__0_1828 [label=""];
    bb61__0_1828 -> bb62__0_1828 [label="return"];
    bb62__0_1828 -> bb149__0_1828 [label=""];
    bb63__0_1828 -> bb64__0_1828 [label="return"];
    bb64__0_1828 -> bb65__0_1828 [label="return"];
    bb65__0_1828 -> bb66__0_1828 [label="0"];
    bb65__0_1828 -> bb67__0_1828 [label="1"];
    bb65__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb66__0_1828 -> bb69__0_1828 [label="return"];
    bb67__0_1828 -> bb68__0_1828 [label="return"];
    bb68__0_1828 -> bb146__0_1828 [label=""];
    bb69__0_1828 -> bb70__0_1828 [label="return"];
    bb70__0_1828 -> bb71__0_1828 [label="0"];
    bb70__0_1828 -> bb72__0_1828 [label="1"];
    bb70__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb71__0_1828 -> bb74__0_1828 [label="return"];
    bb72__0_1828 -> bb73__0_1828 [label="return"];
    bb73__0_1828 -> bb146__0_1828 [label=""];
    bb74__0_1828 -> bb75__0_1828 [label="return"];
    bb75__0_1828 -> bb76__0_1828 [label="return"];
    bb76__0_1828 -> bb77__0_1828 [label="return"];
    bb77__0_1828 -> bb78__0_1828 [label="0"];
    bb77__0_1828 -> bb79__0_1828 [label="1"];
    bb77__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb78__0_1828 -> bb81__0_1828 [label="return"];
    bb79__0_1828 -> bb80__0_1828 [label="return"];
    bb80__0_1828 -> bb145__0_1828 [label=""];
    bb81__0_1828 -> bb82__0_1828 [label="return"];
    bb82__0_1828 -> bb83__0_1828 [label="return"];
    bb83__0_1828 -> bb84__0_1828 [label="0"];
    bb83__0_1828 -> bb85__0_1828 [label="1"];
    bb83__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb84__0_1828 -> bb90__0_1828 [label=""];
    bb85__0_1828 -> bb86__0_1828 [label="return"];
    bb86__0_1828 -> bb145__0_1828 [label=""];
    bb87__0_1828 -> bb89__0_1828 [label=""];
    bb88__0_1828 -> bb89__0_1828 [label=""];
    bb89__0_1828 -> bb90__0_1828 [label=""];
    bb90__0_1828 -> bb91__0_1828 [label=""];
    bb91__0_1828 -> bb93__0_1828 [label="0"];
    bb91__0_1828 -> bb92__0_1828 [label="otherwise"];
    bb92__0_1828 -> bb156__0_1828 [label=""];
    bb93__0_1828 -> bb94__0_1828 [label="return"];
    bb94__0_1828 -> bb95__0_1828 [label="return"];
    bb95__0_1828 -> bb96__0_1828 [label="0"];
    bb95__0_1828 -> bb97__0_1828 [label="1"];
    bb95__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb96__0_1828 -> bb99__0_1828 [label="return"];
    bb97__0_1828 -> bb98__0_1828 [label="return"];
    bb98__0_1828 -> bb156__0_1828 [label=""];
    bb99__0_1828 -> bb100__0_1828 [label="return"];
    bb100__0_1828 -> bb101__0_1828 [label="return"];
    bb101__0_1828 -> bb102__0_1828 [label="return"];
    bb102__0_1828 -> bb103__0_1828 [label="return"];
    bb103__0_1828 -> bb104__0_1828 [label="return"];
    bb104__0_1828 -> bb105__0_1828 [label="0"];
    bb104__0_1828 -> bb106__0_1828 [label="1"];
    bb104__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb105__0_1828 -> bb108__0_1828 [label="return"];
    bb106__0_1828 -> bb107__0_1828 [label="return"];
    bb107__0_1828 -> bb144__0_1828 [label=""];
    bb108__0_1828 -> bb109__0_1828 [label="return"];
    bb109__0_1828 -> bb110__0_1828 [label="return"];
    bb110__0_1828 -> bb111__0_1828 [label="return"];
    bb111__0_1828 -> bb112__0_1828 [label="0"];
    bb111__0_1828 -> bb113__0_1828 [label="1"];
    bb111__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb112__0_1828 -> bb115__0_1828 [label="return"];
    bb113__0_1828 -> bb114__0_1828 [label="return"];
    bb114__0_1828 -> bb142__0_1828 [label=""];
    bb115__0_1828 -> bb116__0_1828 [label="return"];
    bb116__0_1828 -> bb117__0_1828 [label="0"];
    bb116__0_1828 -> bb118__0_1828 [label="1"];
    bb116__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb117__0_1828 -> bb121__0_1828 [label="0"];
    bb117__0_1828 -> bb120__0_1828 [label="otherwise"];
    bb118__0_1828 -> bb119__0_1828 [label="return"];
    bb119__0_1828 -> bb142__0_1828 [label=""];
    bb120__0_1828 -> bb127__0_1828 [label=""];
    bb121__0_1828 -> bb122__0_1828 [label="return"];
    bb122__0_1828 -> bb123__0_1828 [label="return"];
    bb123__0_1828 -> bb124__0_1828 [label="0"];
    bb123__0_1828 -> bb125__0_1828 [label="1"];
    bb123__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb124__0_1828 -> bb127__0_1828 [label=""];
    bb125__0_1828 -> bb126__0_1828 [label="return"];
    bb126__0_1828 -> bb141__0_1828 [label=""];
    bb127__0_1828 -> bb129__0_1828 [label="0"];
    bb127__0_1828 -> bb128__0_1828 [label="otherwise"];
    bb128__0_1828 -> bb141__0_1828 [label=""];
    bb129__0_1828 -> bb130__0_1828 [label="return"];
    bb130__0_1828 -> bb131__0_1828 [label="return"];
    bb131__0_1828 -> bb132__0_1828 [label="0"];
    bb131__0_1828 -> bb133__0_1828 [label="1"];
    bb131__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb132__0_1828 -> bb135__0_1828 [label="return"];
    bb133__0_1828 -> bb134__0_1828 [label="return"];
    bb134__0_1828 -> bb141__0_1828 [label=""];
    bb135__0_1828 -> bb136__0_1828 [label="return"];
    bb136__0_1828 -> bb137__0_1828 [label="return"];
    bb137__0_1828 -> bb138__0_1828 [label="0"];
    bb137__0_1828 -> bb139__0_1828 [label="1"];
    bb137__0_1828 -> bb4__0_1828 [label="otherwise"];
    bb138__0_1828 -> bb157__0_1828 [label=""];
    bb139__0_1828 -> bb140__0_1828 [label="return"];
    bb140__0_1828 -> bb141__0_1828 [label=""];
    bb141__0_1828 -> bb143__0_1828 [label=""];
    bb142__0_1828 -> bb143__0_1828 [label=""];
    bb143__0_1828 -> bb144__0_1828 [label=""];
    bb144__0_1828 -> bb156__0_1828 [label=""];
    bb145__0_1828 -> bb147__0_1828 [label=""];
    bb146__0_1828 -> bb147__0_1828 [label=""];
    bb147__0_1828 -> bb153__0_1828 [label=""];
    bb148__0_1828 -> bb149__0_1828 [label=""];
    bb149__0_1828 -> bb152__0_1828 [label=""];
    bb150__0_1828 -> bb151__0_1828 [label=""];
    bb151__0_1828 -> bb152__0_1828 [label=""];
    bb152__0_1828 -> bb153__0_1828 [label=""];
    bb153__0_1828 -> bb154__0_1828 [label=""];
    bb154__0_1828 -> bb155__0_1828 [label=""];
    bb155__0_1828 -> bb156__0_1828 [label=""];
    bb156__0_1828 -> bb157__0_1828 [label=""];
}
