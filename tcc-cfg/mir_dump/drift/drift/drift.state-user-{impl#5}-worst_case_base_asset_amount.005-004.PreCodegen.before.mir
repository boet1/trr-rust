// MIR for `state::user::<impl at programs/drift/src/state/user.rs:992:1: 992:18>::worst_case_base_asset_amount` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:992:1: 992:18>::worst_case_base_asset_amount(_1: &PerpPosition, _2: i64, _3: ContractType) -> std::result::Result<i128, error::ErrorCode> {
    debug self => _1;
    debug oracle_price => _2;
    debug contract_type => _3;
    let mut _0: std::result::Result<i128, error::ErrorCode>;
    let mut _4: std::result::Result<(i128, u128), error::ErrorCode>;
    let mut _5: &state::user::PerpPosition;
    let mut _6: i64;
    let mut _7: state::perp_market::ContractType;
    let mut _8: {closure@programs/drift/src/state/user.rs:1025:18: 1025:21};

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_1);
        StorageLive(_6);
        _6 = _2;
        StorageLive(_7);
        _7 = _3;
        _4 = PerpPosition::worst_case_liability_value(move _5, move _6, move _7) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageLive(_8);
        _8 = {closure@programs/drift/src/state/user.rs:1025:18: 1025:21};
        _0 = std::result::Result::<(i128, u128), error::ErrorCode>::map::<i128, {closure@programs/drift/src/state/user.rs:1025:18: 1025:21}>(move _4, move _8) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_8);
        StorageDead(_4);
        return;
    }
}
