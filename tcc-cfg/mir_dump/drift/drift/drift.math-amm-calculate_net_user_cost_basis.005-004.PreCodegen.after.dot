digraph Mir_0_1815 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_net_user_cost_basis(_1: &amp;ReErased state::perp_market::AMM) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let mut _2: i128;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _4: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _5: i128;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: i128;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: i128;<br align="left"/>let mut _20: i128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _23: i64;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: i128;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = ((*_1).18: i128)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_1).81: i64)<br/></td></tr><tr><td align="left">_8 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _9)</td></tr></table>>];
    bb1__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: i128)<br/>_6 = _14<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_4 = &lt;i128 as SafeMath&gt;::safe_add(move _5, move _6)</td></tr></table>>];
    bb4__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb8__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_15 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb9__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_3 as Continue).0: i128)<br/>_2 = _19<br/>StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = ((*_1).80: i64)<br/></td></tr><tr><td align="left">_22 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _23)</td></tr></table>>];
    bb10__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb11__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb13__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_24 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb14__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_21 as Continue).0: i128)<br/>_20 = _28<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_add(move _2, move _20)</td></tr></table>>];
    bb15__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb16__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_2)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_2)<br/>StorageDead(_21)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1815 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1815 -> bb1__0_1815 [label="return"];
    bb1__0_1815 -> bb2__0_1815 [label="return"];
    bb2__0_1815 -> bb3__0_1815 [label="0"];
    bb2__0_1815 -> bb5__0_1815 [label="1"];
    bb2__0_1815 -> bb4__0_1815 [label="otherwise"];
    bb3__0_1815 -> bb7__0_1815 [label="return"];
    bb5__0_1815 -> bb6__0_1815 [label="return"];
    bb6__0_1815 -> bb18__0_1815 [label=""];
    bb7__0_1815 -> bb8__0_1815 [label="return"];
    bb8__0_1815 -> bb9__0_1815 [label="0"];
    bb8__0_1815 -> bb10__0_1815 [label="1"];
    bb8__0_1815 -> bb4__0_1815 [label="otherwise"];
    bb9__0_1815 -> bb12__0_1815 [label="return"];
    bb10__0_1815 -> bb11__0_1815 [label="return"];
    bb11__0_1815 -> bb18__0_1815 [label=""];
    bb12__0_1815 -> bb13__0_1815 [label="return"];
    bb13__0_1815 -> bb14__0_1815 [label="0"];
    bb13__0_1815 -> bb15__0_1815 [label="1"];
    bb13__0_1815 -> bb4__0_1815 [label="otherwise"];
    bb14__0_1815 -> bb17__0_1815 [label="return"];
    bb15__0_1815 -> bb16__0_1815 [label="return"];
    bb16__0_1815 -> bb19__0_1815 [label=""];
    bb17__0_1815 -> bb20__0_1815 [label=""];
    bb18__0_1815 -> bb19__0_1815 [label=""];
    bb19__0_1815 -> bb20__0_1815 [label=""];
}
