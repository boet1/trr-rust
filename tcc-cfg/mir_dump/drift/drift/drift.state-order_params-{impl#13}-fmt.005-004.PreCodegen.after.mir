// MIR for `order_params::<impl at programs/drift/src/state/order_params.rs:20:83: 20:88>::fmt` after PreCodegen

fn order_params::<impl at programs/drift/src/state/order_params.rs:20:83: 20:88>::fmt(_1: &order_params::OrderParams, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &[&str; 17];
    let _4: &[&str; 17];
    let _5: [&str; 17];
    let mut _6: &str;
    let _7: &str;
    let mut _8: &str;
    let _9: &str;
    let mut _10: &str;
    let _11: &str;
    let mut _12: &str;
    let _13: &str;
    let mut _14: &str;
    let _15: &str;
    let mut _16: &str;
    let _17: &str;
    let mut _18: &str;
    let _19: &str;
    let mut _20: &str;
    let _21: &str;
    let mut _22: &str;
    let _23: &str;
    let mut _24: &str;
    let _25: &str;
    let mut _26: &str;
    let _27: &str;
    let mut _28: &str;
    let _29: &str;
    let mut _30: &str;
    let _31: &str;
    let mut _32: &str;
    let _33: &str;
    let mut _34: &str;
    let _35: &str;
    let mut _36: &str;
    let _37: &str;
    let mut _39: &[&dyn std::fmt::Debug; 17];
    let _40: &[&dyn std::fmt::Debug; 17];
    let _41: [&dyn std::fmt::Debug; 17];
    let mut _42: &dyn std::fmt::Debug;
    let mut _43: &state::user::OrderType;
    let _44: &state::user::OrderType;
    let mut _45: &dyn std::fmt::Debug;
    let mut _46: &state::user::MarketType;
    let _47: &state::user::MarketType;
    let mut _48: &dyn std::fmt::Debug;
    let mut _49: &controller::position::PositionDirection;
    let _50: &controller::position::PositionDirection;
    let mut _51: &dyn std::fmt::Debug;
    let mut _52: &u8;
    let _53: &u8;
    let mut _54: &dyn std::fmt::Debug;
    let mut _55: &u64;
    let _56: &u64;
    let mut _57: &dyn std::fmt::Debug;
    let mut _58: &u64;
    let _59: &u64;
    let mut _60: &dyn std::fmt::Debug;
    let mut _61: &u16;
    let _62: &u16;
    let mut _63: &dyn std::fmt::Debug;
    let mut _64: &bool;
    let _65: &bool;
    let mut _66: &dyn std::fmt::Debug;
    let mut _67: &state::order_params::PostOnlyParam;
    let _68: &state::order_params::PostOnlyParam;
    let mut _69: &dyn std::fmt::Debug;
    let mut _70: &u8;
    let _71: &u8;
    let mut _72: &dyn std::fmt::Debug;
    let mut _73: &std::option::Option<i64>;
    let _74: &std::option::Option<i64>;
    let mut _75: &dyn std::fmt::Debug;
    let mut _76: &std::option::Option<u64>;
    let _77: &std::option::Option<u64>;
    let mut _78: &dyn std::fmt::Debug;
    let mut _79: &state::user::OrderTriggerCondition;
    let _80: &state::user::OrderTriggerCondition;
    let mut _81: &dyn std::fmt::Debug;
    let mut _82: &std::option::Option<i32>;
    let _83: &std::option::Option<i32>;
    let mut _84: &dyn std::fmt::Debug;
    let mut _85: &std::option::Option<u8>;
    let _86: &std::option::Option<u8>;
    let mut _87: &dyn std::fmt::Debug;
    let mut _88: &std::option::Option<i64>;
    let _89: &std::option::Option<i64>;
    let mut _90: &dyn std::fmt::Debug;
    let mut _91: &&std::option::Option<i64>;
    let _92: &&std::option::Option<i64>;
    let _93: &std::option::Option<i64>;
    let mut _94: &mut std::fmt::Formatter<'_>;
    let mut _95: &str;
    let _96: &str;
    let mut _97: &[&str];
    let mut _98: &[&str; 17];
    let mut _99: &[&dyn std::fmt::Debug];
    let mut _100: &[&str; 17];
    scope 1 {
        debug names => _3;
        let _38: &[&dyn std::fmt::Debug];
        scope 2 {
            debug values => _38;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _100 = const _;
        _4 = &(*_100);
        _3 = &(*_4);
        StorageDead(_4);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        _44 = &((*_1).0: state::user::OrderType);
        _43 = &(*_44);
        _42 = move _43 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_43);
        StorageLive(_45);
        StorageLive(_46);
        StorageLive(_47);
        _47 = &((*_1).1: state::user::MarketType);
        _46 = &(*_47);
        _45 = move _46 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_46);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        _50 = &((*_1).2: controller::position::PositionDirection);
        _49 = &(*_50);
        _48 = move _49 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_49);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        _53 = &((*_1).3: u8);
        _52 = &(*_53);
        _51 = move _52 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_52);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        _56 = &((*_1).4: u64);
        _55 = &(*_56);
        _54 = move _55 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_55);
        StorageLive(_57);
        StorageLive(_58);
        StorageLive(_59);
        _59 = &((*_1).5: u64);
        _58 = &(*_59);
        _57 = move _58 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_58);
        StorageLive(_60);
        StorageLive(_61);
        StorageLive(_62);
        _62 = &((*_1).6: u16);
        _61 = &(*_62);
        _60 = move _61 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_61);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        _65 = &((*_1).7: bool);
        _64 = &(*_65);
        _63 = move _64 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_64);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        _68 = &((*_1).8: state::order_params::PostOnlyParam);
        _67 = &(*_68);
        _66 = move _67 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_67);
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        _71 = &((*_1).9: u8);
        _70 = &(*_71);
        _69 = move _70 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_70);
        StorageLive(_72);
        StorageLive(_73);
        StorageLive(_74);
        _74 = &((*_1).10: std::option::Option<i64>);
        _73 = &(*_74);
        _72 = move _73 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_73);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        _77 = &((*_1).11: std::option::Option<u64>);
        _76 = &(*_77);
        _75 = move _76 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_76);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &((*_1).12: state::user::OrderTriggerCondition);
        _79 = &(*_80);
        _78 = move _79 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_79);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        _83 = &((*_1).13: std::option::Option<i32>);
        _82 = &(*_83);
        _81 = move _82 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_82);
        StorageLive(_84);
        StorageLive(_85);
        StorageLive(_86);
        _86 = &((*_1).14: std::option::Option<u8>);
        _85 = &(*_86);
        _84 = move _85 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_85);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        _89 = &((*_1).15: std::option::Option<i64>);
        _88 = &(*_89);
        _87 = move _88 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_88);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        StorageLive(_93);
        _93 = &((*_1).16: std::option::Option<i64>);
        _92 = &_93;
        _91 = &(*_92);
        _90 = move _91 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_91);
        _41 = [move _42, move _45, move _48, move _51, move _54, move _57, move _60, move _63, move _66, move _69, move _72, move _75, move _78, move _81, move _84, move _87, move _90];
        StorageDead(_90);
        StorageDead(_87);
        StorageDead(_84);
        StorageDead(_81);
        StorageDead(_78);
        StorageDead(_75);
        StorageDead(_72);
        StorageDead(_69);
        StorageDead(_66);
        StorageDead(_63);
        StorageDead(_60);
        StorageDead(_57);
        StorageDead(_54);
        StorageDead(_51);
        StorageDead(_48);
        StorageDead(_45);
        StorageDead(_42);
        _40 = &_41;
        _39 = &(*_40);
        _38 = move _39 as &[&dyn std::fmt::Debug] (PointerCoercion(Unsize));
        StorageDead(_39);
        StorageDead(_92);
        StorageDead(_89);
        StorageDead(_86);
        StorageDead(_83);
        StorageDead(_80);
        StorageDead(_77);
        StorageDead(_74);
        StorageDead(_71);
        StorageDead(_68);
        StorageDead(_65);
        StorageDead(_62);
        StorageDead(_59);
        StorageDead(_56);
        StorageDead(_53);
        StorageDead(_50);
        StorageDead(_47);
        StorageDead(_44);
        StorageDead(_40);
        StorageLive(_94);
        _94 = &mut (*_2);
        StorageLive(_95);
        StorageLive(_96);
        _96 = const "OrderParams";
        _95 = &(*_96);
        StorageLive(_97);
        StorageLive(_98);
        _98 = &(*_3);
        _97 = move _98 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_98);
        StorageLive(_99);
        _99 = &(*_38);
        _0 = Formatter::<'_>::debug_struct_fields_finish(move _94, move _95, move _97, move _99) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_99);
        StorageDead(_97);
        StorageDead(_95);
        StorageDead(_94);
        StorageDead(_93);
        StorageDead(_41);
        StorageDead(_38);
        StorageDead(_3);
        StorageDead(_96);
        return;
    }
}
