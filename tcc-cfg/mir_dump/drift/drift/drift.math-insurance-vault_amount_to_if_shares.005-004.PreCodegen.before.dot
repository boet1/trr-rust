digraph Mir_0_2335 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn vault_amount_to_if_shares(_1: u64, _2: u128, _3: u64) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: u128;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _21: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: u128;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: u128;<br align="left"/>let _33: ();<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _35: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: u128;<br align="left"/>let mut _38: ();<br align="left"/>let _39: error::ErrorCode;<br align="left"/>let _40: ();<br align="left"/>let mut _41: &amp;ReErased str;<br align="left"/>let _42: &amp;ReErased str;<br align="left"/>let mut _43: &amp;ReErased std::string::String;<br align="left"/>let _44: &amp;ReErased std::string::String;<br align="left"/>let _45: std::string::String;<br align="left"/>let _46: std::string::String;<br align="left"/>let mut _47: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _48: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _49: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _50: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _51: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _53: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _54: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _55: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _56: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _57: &amp;ReErased error::ErrorCode;<br align="left"/>let _58: &amp;ReErased error::ErrorCode;<br align="left"/>let _59: ();<br align="left"/>let mut _60: &amp;ReErased str;<br align="left"/>let _61: &amp;ReErased str;<br align="left"/>let mut _62: &amp;ReErased std::string::String;<br align="left"/>let _63: &amp;ReErased std::string::String;<br align="left"/>let _64: std::string::String;<br align="left"/>let _65: std::string::String;<br align="left"/>let mut _66: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _68: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _69: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _70: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _71: error::ErrorCode;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: ();<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _79: u64;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: u128;<br align="left"/>let mut _85: u128;<br align="left"/>let mut _86: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _87: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug amount =&gt; _1;<br align="left"/>debug total_if_shares =&gt; _2;<br align="left"/>debug insurance_fund_vault_balance =&gt; _3;<br align="left"/>debug n_shares =&gt; _4;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug error_code =&gt; _39;<br align="left"/>debug res =&gt; _46;<br align="left"/>debug res =&gt; _65;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>>;
    bb0__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/>_5 = Gt(move _6, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _1<br/></td></tr><tr><td align="left">_11 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _12)</td></tr></table>>];
    bb2__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb3__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_13 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb4__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_10 as Continue).0: u128)<br/>_9 = _17<br/>StorageDead(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _3<br/></td></tr><tr><td align="left">_21 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _22)</td></tr></table>>];
    bb5__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb7__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb9__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_23 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb10__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_20 as Continue).0: u128)<br/>_19 = _27<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_8 = get_proportion_u128(move _9, move _18, move _19)</td></tr></table>>];
    bb11__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb12__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb14__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_28 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb15__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_7 as Continue).0: u128)<br/>_4 = _32<br/>StorageDead(_32)<br/>StorageDead(_20)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb17__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _2<br/>_36 = Eq(move _37, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb19__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_38)<br/>_38 = ()<br/>_35 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _38)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_39)<br/>_39 = error::ErrorCode::InvalidIFSharesDetected<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_87 = const _<br/>_50 = &amp;(*_87)<br/>_49 = &amp;(*_50)<br/>_48 = move _49 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_49)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;_39<br/>_57 = &amp;(*_58)<br/></td></tr><tr><td align="left">_56 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _57)</td></tr></table>>];
    bb21__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_55 = [move _56]<br/>StorageDead(_56)<br/>_54 = &amp;_55<br/>_53 = &amp;(*_54)<br/>_52 = move _53 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_47 = Arguments::&lt;'_&gt;::new_v1(move _48, move _52)</td></tr></table>>];
    bb22__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = format(move _47)</td></tr></table>>];
    bb23__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_58)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_50)<br/>_45 = move _46<br/>StorageDead(_46)<br/>_44 = &amp;_45<br/>_43 = &amp;(*_44)<br/></td></tr><tr><td align="left">_42 = &lt;String as Deref&gt;::deref(move _43)</td></tr></table>>];
    bb24__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_41 = &amp;(*_42)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_40 = solana_program::log::sol_log(move _41)</td></tr></table>>];
    bb25__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb26__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_86 = const _<br/>_69 = &amp;(*_86)<br/>_68 = &amp;(*_69)<br/>_67 = move _68 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = Arguments::&lt;'_&gt;::new_const(move _67)</td></tr></table>>];
    bb27__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = format(move _66)</td></tr></table>>];
    bb28__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_69)<br/>_64 = move _65<br/>StorageDead(_65)<br/>_63 = &amp;_64<br/>_62 = &amp;(*_63)<br/></td></tr><tr><td align="left">_61 = &lt;String as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb29__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_60 = &amp;(*_61)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_59 = solana_program::log::sol_log(move _60)</td></tr></table>>];
    bb30__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/></td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb31__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageLive(_71)<br/>_71 = _39<br/>_35 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _71)<br/>StorageDead(_71)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb33__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_72 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb34__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_34 as Continue).0: ())<br/>_33 = _76<br/>StorageDead(_76)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _1<br/></td></tr><tr><td align="left">_78 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _79)</td></tr></table>>];
    bb35__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb36__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb38__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_80 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb39__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_77 as Continue).0: u128)<br/>_4 = _84<br/>StorageDead(_84)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb41__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_85)<br/>_85 = _4<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _85)<br/>StorageDead(_85)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">return</td></tr></table>>];
    bb47__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">47 (cleanup)</td></tr><tr><td align="left">drop(_64)</td></tr></table>>];
    bb48__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left">drop(_45)</td></tr></table>>];
    bb49__0_2335 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2335 -> bb18__0_2335 [label="0"];
    bb0__0_2335 -> bb1__0_2335 [label="otherwise"];
    bb1__0_2335 -> bb2__0_2335 [label="return"];
    bb2__0_2335 -> bb3__0_2335 [label="return"];
    bb3__0_2335 -> bb4__0_2335 [label="0"];
    bb3__0_2335 -> bb6__0_2335 [label="1"];
    bb3__0_2335 -> bb5__0_2335 [label="otherwise"];
    bb4__0_2335 -> bb8__0_2335 [label="return"];
    bb6__0_2335 -> bb7__0_2335 [label="return"];
    bb7__0_2335 -> bb44__0_2335 [label=""];
    bb8__0_2335 -> bb9__0_2335 [label="return"];
    bb9__0_2335 -> bb10__0_2335 [label="0"];
    bb9__0_2335 -> bb11__0_2335 [label="1"];
    bb9__0_2335 -> bb5__0_2335 [label="otherwise"];
    bb10__0_2335 -> bb13__0_2335 [label="return"];
    bb11__0_2335 -> bb12__0_2335 [label="return"];
    bb12__0_2335 -> bb43__0_2335 [label=""];
    bb13__0_2335 -> bb14__0_2335 [label="return"];
    bb14__0_2335 -> bb15__0_2335 [label="0"];
    bb14__0_2335 -> bb16__0_2335 [label="1"];
    bb14__0_2335 -> bb5__0_2335 [label="otherwise"];
    bb15__0_2335 -> bb42__0_2335 [label=""];
    bb16__0_2335 -> bb17__0_2335 [label="return"];
    bb17__0_2335 -> bb43__0_2335 [label=""];
    bb18__0_2335 -> bb20__0_2335 [label="0"];
    bb18__0_2335 -> bb19__0_2335 [label="otherwise"];
    bb19__0_2335 -> bb32__0_2335 [label=""];
    bb20__0_2335 -> bb21__0_2335 [label="return"];
    bb21__0_2335 -> bb22__0_2335 [label="return"];
    bb22__0_2335 -> bb23__0_2335 [label="return"];
    bb23__0_2335 -> bb24__0_2335 [label="return"];
    bb23__0_2335 -> bb48__0_2335 [label="unwind"];
    bb24__0_2335 -> bb25__0_2335 [label="return"];
    bb24__0_2335 -> bb48__0_2335 [label="unwind"];
    bb25__0_2335 -> bb26__0_2335 [label="return"];
    bb25__0_2335 -> bb49__0_2335 [label="unwind"];
    bb26__0_2335 -> bb27__0_2335 [label="return"];
    bb27__0_2335 -> bb28__0_2335 [label="return"];
    bb28__0_2335 -> bb29__0_2335 [label="return"];
    bb28__0_2335 -> bb47__0_2335 [label="unwind"];
    bb29__0_2335 -> bb30__0_2335 [label="return"];
    bb29__0_2335 -> bb47__0_2335 [label="unwind"];
    bb30__0_2335 -> bb31__0_2335 [label="return"];
    bb30__0_2335 -> bb49__0_2335 [label="unwind"];
    bb31__0_2335 -> bb32__0_2335 [label=""];
    bb32__0_2335 -> bb33__0_2335 [label="return"];
    bb33__0_2335 -> bb34__0_2335 [label="0"];
    bb33__0_2335 -> bb35__0_2335 [label="1"];
    bb33__0_2335 -> bb5__0_2335 [label="otherwise"];
    bb34__0_2335 -> bb37__0_2335 [label="return"];
    bb35__0_2335 -> bb36__0_2335 [label="return"];
    bb36__0_2335 -> bb45__0_2335 [label=""];
    bb37__0_2335 -> bb38__0_2335 [label="return"];
    bb38__0_2335 -> bb39__0_2335 [label="0"];
    bb38__0_2335 -> bb40__0_2335 [label="1"];
    bb38__0_2335 -> bb5__0_2335 [label="otherwise"];
    bb39__0_2335 -> bb42__0_2335 [label=""];
    bb40__0_2335 -> bb41__0_2335 [label="return"];
    bb41__0_2335 -> bb45__0_2335 [label=""];
    bb42__0_2335 -> bb46__0_2335 [label=""];
    bb43__0_2335 -> bb44__0_2335 [label=""];
    bb44__0_2335 -> bb45__0_2335 [label=""];
    bb45__0_2335 -> bb46__0_2335 [label=""];
    bb47__0_2335 -> bb49__0_2335 [label="return"];
    bb48__0_2335 -> bb49__0_2335 [label="return"];
}
