digraph Mir_0_2317 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_proportion_u128(_1: u128, _2: u128, _3: u128) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _6: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _11: u128;<br align="left"/>let _12: u128;<br align="left"/>let mut _13: bool;<br align="left"/>let mut _14: u128;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u128;<br align="left"/>let _22: math::bn::U192;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _24: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _25: math::bn::U192;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::bn::U192&gt;;<br align="left"/>let mut _27: std::result::Result&lt;math::bn::U192, error::ErrorCode&gt;;<br align="left"/>let mut _28: math::bn::U192;<br align="left"/>let mut _29: u128;<br align="left"/>let mut _30: math::bn::U192;<br align="left"/>let mut _31: u128;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: math::bn::U192;<br align="left"/>let mut _37: math::bn::U192;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: math::bn::U192;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _46: math::bn::U192;<br align="left"/>let mut _47: isize;<br align="left"/>let _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _49: !;<br align="left"/>let mut _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _51: u128;<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: bool;<br align="left"/>let mut _58: u128;<br align="left"/>let mut _59: u128;<br align="left"/>let _60: i128;<br align="left"/>let _61: i128;<br align="left"/>let mut _62: (i128, i128);<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, i128)&gt;;<br align="left"/>let mut _64: std::result::Result&lt;(i128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _65: i128;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _67: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _68: u128;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _70: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: u128;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _74: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: u128;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: u128;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: i128;<br align="left"/>let mut _92: u128;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: (i128, i128);<br align="left"/>let mut _98: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _99: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _100: u128;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _102: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: u128;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _106: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _109: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _110: i128;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: u128;<br align="left"/>let mut _116: u128;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: u128;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _126: u128;<br align="left"/>let mut _127: u128;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _129: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _130: i128;<br align="left"/>let mut _131: i128;<br align="left"/>let mut _132: isize;<br align="left"/>let _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _134: !;<br align="left"/>let mut _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _136: u128;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: u128;<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _143: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _144: u128;<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _146: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _147: u128;<br align="left"/>let mut _148: u128;<br align="left"/>let mut _149: isize;<br align="left"/>let _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _151: !;<br align="left"/>let mut _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _153: u128;<br align="left"/>let mut _154: u128;<br align="left"/>let mut _155: isize;<br align="left"/>let _156: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _157: !;<br align="left"/>let mut _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _159: u128;<br align="left"/>let mut _160: u128;<br align="left"/>debug value =&gt; _1;<br align="left"/>debug numerator =&gt; _2;<br align="left"/>debug denominator =&gt; _3;<br align="left"/>debug large_constant =&gt; _4;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug proportional_value =&gt; _12;<br align="left"/>debug value =&gt; _22;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _48;<br align="left"/>debug val =&gt; _51;<br align="left"/>debug std_value =&gt; _60;<br align="left"/>debug r =&gt; _61;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug residual =&gt; _133;<br align="left"/>debug val =&gt; _136;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug residual =&gt; _150;<br align="left"/>debug val =&gt; _153;<br align="left"/>debug residual =&gt; _156;<br align="left"/>debug val =&gt; _159;<br align="left"/>>;
    bb0__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(const _)</td></tr></table>>];
    bb1__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_7 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_5 as Continue).0: u128)<br/>_4 = _11<br/>StorageDead(_11)<br/>StorageDead(_5)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = _2<br/>StorageLive(_15)<br/>_15 = _3<br/>_13 = Eq(move _14, move _15)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb4__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_10)<br/>_10 = _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>_12 = _1<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = _1<br/>StorageLive(_18)<br/>_18 = _4<br/>_16 = Ge(move _17, move _18)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _2<br/>StorageLive(_21)<br/>_21 = _4<br/>_19 = Ge(move _20, move _21)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb11__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _1<br/></td></tr><tr><td align="left">_28 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _29)</td></tr></table>>];
    bb12__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _2<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _3<br/>_56 = Eq(const 2_u128, const 0_u128)<br/></td></tr><tr><td align="left">assert(!move _56, &quot;attempt to divide `{}` by zero&quot;, _55)</td></tr></table>>];
    bb13__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _2<br/></td></tr><tr><td align="left">_30 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _31)</td></tr></table>>];
    bb14__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_27 = &lt;U192 as SafeMath&gt;::safe_mul(move _28, move _30)</td></tr></table>>];
    bb15__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb16__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_32 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb17__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_26 as Continue).0: math::bn::U192)<br/>_25 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _3<br/></td></tr><tr><td align="left">_37 = &lt;U192 as From&lt;u128&gt;&gt;::from(move _38)</td></tr></table>>];
    bb18__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb19__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_24 = &lt;U192 as SafeMath&gt;::safe_div(move _25, move _37)</td></tr></table>>];
    bb21__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;U192, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb22__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_39 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb23__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_23 as Continue).0: math::bn::U192)<br/>_22 = _43<br/>StorageDead(_43)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = _22<br/></td></tr><tr><td align="left">_45 = &lt;U192 as Cast&gt;::cast::&lt;u128&gt;(move _46)</td></tr></table>>];
    bb24__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb25__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb27__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_47 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _47)</td></tr></table>>];
    bb28__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_44 as Continue).0: u128)<br/>_12 = _51<br/>StorageDead(_51)<br/>StorageDead(_22)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_50)<br/>_50 = _48<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _50)</td></tr></table>>];
    bb30__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_22)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_54 = Div(move _55, const 2_u128)<br/>StorageDead(_55)<br/>_52 = Gt(move _53, move _54)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb32__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _3<br/>StorageLive(_59)<br/>_59 = _2<br/>_57 = Gt(move _58, move _59)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb33__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _1<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _3<br/>StorageLive(_76)<br/>_76 = _2<br/></td></tr><tr><td align="left">_74 = &lt;u128 as SafeMath&gt;::safe_sub(move _75, move _76)</td></tr></table>>];
    bb34__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb35__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_77 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb36__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_73 as Continue).0: u128)<br/>_72 = _81<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_70 = &lt;u128 as SafeMath&gt;::safe_mul(move _71, move _72)</td></tr></table>>];
    bb37__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb38__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb40__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_82 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb41__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_69 as Continue).0: u128)<br/>_68 = _86<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_67 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _68)</td></tr></table>>];
    bb42__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb43__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb45__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_87 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb46__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_66 as Continue).0: i128)<br/>_65 = _91<br/>StorageDead(_91)<br/>StorageLive(_92)<br/>_92 = _3<br/></td></tr><tr><td align="left">_64 = standardize_value_with_remainder_i128(move _65, move _92)</td></tr></table>>];
    bb47__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb48__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;(i128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb50__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_93 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb51__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_63 as Continue).0: (i128, i128))<br/>_62 = _97<br/>StorageDead(_97)<br/>StorageLive(_60)<br/>_60 = (_62.0: i128)<br/>StorageLive(_61)<br/>_61 = (_62.1: i128)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = _1<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = _60<br/></td></tr><tr><td align="left">_109 = &lt;i128 as Cast&gt;::cast::&lt;u128&gt;(move _110)</td></tr></table>>];
    bb52__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb53__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _109)</td></tr></table>>];
    bb55__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_111 = discriminant(_108)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb56__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_108 as Continue).0: u128)<br/>_107 = _115<br/>StorageDead(_115)<br/>StorageLive(_116)<br/>_116 = _3<br/></td></tr><tr><td align="left">_106 = &lt;u128 as SafeMath&gt;::safe_div(move _107, move _116)</td></tr></table>>];
    bb57__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_108 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb58__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb60__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_117 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb61__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_105 as Continue).0: u128)<br/>_104 = _121<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_102 = &lt;u128 as SafeMath&gt;::safe_sub(move _103, move _104)</td></tr></table>>];
    bb62__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb63__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb65__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_122 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb66__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_101 as Continue).0: u128)<br/>_100 = _126<br/>StorageDead(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = _61<br/></td></tr><tr><td align="left">_130 = core::num::&lt;impl i128&gt;::signum(move _131)</td></tr></table>>];
    bb67__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_125)<br/>_125 = _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb68__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/></td></tr><tr><td align="left">_129 = &lt;i128 as Cast&gt;::cast::&lt;u128&gt;(move _130)</td></tr></table>>];
    bb70__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb71__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_132 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _132)</td></tr></table>>];
    bb72__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_128 as Continue).0: u128)<br/>_127 = _136<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_99 = &lt;u128 as SafeMath&gt;::safe_sub(move _100, move _127)</td></tr></table>>];
    bb73__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_135)<br/>_135 = _133<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _135)</td></tr></table>>];
    bb74__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_127)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _99)</td></tr></table>>];
    bb76__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_137 = discriminant(_98)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb77__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_98 as Continue).0: u128)<br/>_12 = _141<br/>StorageDead(_141)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_128)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_98 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb79__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = _1<br/>StorageLive(_148)<br/>_148 = _2<br/></td></tr><tr><td align="left">_146 = &lt;u128 as SafeMath&gt;::safe_mul(move _147, move _148)</td></tr></table>>];
    bb83__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb84__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_149 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _149)</td></tr></table>>];
    bb85__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_145 as Continue).0: u128)<br/>_144 = _153<br/>StorageDead(_153)<br/>StorageLive(_154)<br/>_154 = _3<br/></td></tr><tr><td align="left">_143 = &lt;u128 as SafeMath&gt;::safe_div(move _144, move _154)</td></tr></table>>];
    bb86__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_152)<br/>_152 = _150<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _152)</td></tr></table>>];
    bb87__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb89__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_155 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _155)</td></tr></table>>];
    bb90__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_142 as Continue).0: u128)<br/>_12 = _159<br/>StorageDead(_159)<br/>StorageDead(_145)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>_156 = ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_158)<br/>_158 = _156<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _158)</td></tr></table>>];
    bb92__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_160)<br/>_160 = _12<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _160)<br/>StorageDead(_160)<br/>StorageDead(_12)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_2317 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2317 -> bb1__0_2317 [label="return"];
    bb1__0_2317 -> bb2__0_2317 [label="return"];
    bb2__0_2317 -> bb3__0_2317 [label="0"];
    bb2__0_2317 -> bb5__0_2317 [label="1"];
    bb2__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb3__0_2317 -> bb8__0_2317 [label="0"];
    bb3__0_2317 -> bb7__0_2317 [label="otherwise"];
    bb5__0_2317 -> bb6__0_2317 [label="return"];
    bb6__0_2317 -> bb107__0_2317 [label=""];
    bb7__0_2317 -> bb95__0_2317 [label=""];
    bb8__0_2317 -> bb10__0_2317 [label="0"];
    bb8__0_2317 -> bb9__0_2317 [label="otherwise"];
    bb9__0_2317 -> bb11__0_2317 [label=""];
    bb10__0_2317 -> bb12__0_2317 [label="0"];
    bb10__0_2317 -> bb11__0_2317 [label="otherwise"];
    bb11__0_2317 -> bb13__0_2317 [label="return"];
    bb12__0_2317 -> bb31__0_2317 [label="success"];
    bb13__0_2317 -> bb14__0_2317 [label="return"];
    bb14__0_2317 -> bb15__0_2317 [label="return"];
    bb15__0_2317 -> bb16__0_2317 [label="return"];
    bb16__0_2317 -> bb17__0_2317 [label="0"];
    bb16__0_2317 -> bb18__0_2317 [label="1"];
    bb16__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb17__0_2317 -> bb20__0_2317 [label="return"];
    bb18__0_2317 -> bb19__0_2317 [label="return"];
    bb19__0_2317 -> bb105__0_2317 [label=""];
    bb20__0_2317 -> bb21__0_2317 [label="return"];
    bb21__0_2317 -> bb22__0_2317 [label="return"];
    bb22__0_2317 -> bb23__0_2317 [label="0"];
    bb22__0_2317 -> bb24__0_2317 [label="1"];
    bb22__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb23__0_2317 -> bb26__0_2317 [label="return"];
    bb24__0_2317 -> bb25__0_2317 [label="return"];
    bb25__0_2317 -> bb105__0_2317 [label=""];
    bb26__0_2317 -> bb27__0_2317 [label="return"];
    bb27__0_2317 -> bb28__0_2317 [label="0"];
    bb27__0_2317 -> bb29__0_2317 [label="1"];
    bb27__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb28__0_2317 -> bb94__0_2317 [label=""];
    bb29__0_2317 -> bb30__0_2317 [label="return"];
    bb30__0_2317 -> bb106__0_2317 [label=""];
    bb31__0_2317 -> bb81__0_2317 [label="0"];
    bb31__0_2317 -> bb32__0_2317 [label="otherwise"];
    bb32__0_2317 -> bb80__0_2317 [label="0"];
    bb32__0_2317 -> bb33__0_2317 [label="otherwise"];
    bb33__0_2317 -> bb34__0_2317 [label="return"];
    bb34__0_2317 -> bb35__0_2317 [label="return"];
    bb35__0_2317 -> bb36__0_2317 [label="0"];
    bb35__0_2317 -> bb37__0_2317 [label="1"];
    bb35__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb36__0_2317 -> bb39__0_2317 [label="return"];
    bb37__0_2317 -> bb38__0_2317 [label="return"];
    bb38__0_2317 -> bb101__0_2317 [label=""];
    bb39__0_2317 -> bb40__0_2317 [label="return"];
    bb40__0_2317 -> bb41__0_2317 [label="0"];
    bb40__0_2317 -> bb42__0_2317 [label="1"];
    bb40__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb41__0_2317 -> bb44__0_2317 [label="return"];
    bb42__0_2317 -> bb43__0_2317 [label="return"];
    bb43__0_2317 -> bb101__0_2317 [label=""];
    bb44__0_2317 -> bb45__0_2317 [label="return"];
    bb45__0_2317 -> bb46__0_2317 [label="0"];
    bb45__0_2317 -> bb47__0_2317 [label="1"];
    bb45__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb46__0_2317 -> bb49__0_2317 [label="return"];
    bb47__0_2317 -> bb48__0_2317 [label="return"];
    bb48__0_2317 -> bb102__0_2317 [label=""];
    bb49__0_2317 -> bb50__0_2317 [label="return"];
    bb50__0_2317 -> bb51__0_2317 [label="0"];
    bb50__0_2317 -> bb52__0_2317 [label="1"];
    bb50__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb51__0_2317 -> bb54__0_2317 [label="return"];
    bb52__0_2317 -> bb53__0_2317 [label="return"];
    bb53__0_2317 -> bb103__0_2317 [label=""];
    bb54__0_2317 -> bb55__0_2317 [label="return"];
    bb55__0_2317 -> bb56__0_2317 [label="0"];
    bb55__0_2317 -> bb57__0_2317 [label="1"];
    bb55__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb56__0_2317 -> bb59__0_2317 [label="return"];
    bb57__0_2317 -> bb58__0_2317 [label="return"];
    bb58__0_2317 -> bb98__0_2317 [label=""];
    bb59__0_2317 -> bb60__0_2317 [label="return"];
    bb60__0_2317 -> bb61__0_2317 [label="0"];
    bb60__0_2317 -> bb62__0_2317 [label="1"];
    bb60__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb61__0_2317 -> bb64__0_2317 [label="return"];
    bb62__0_2317 -> bb63__0_2317 [label="return"];
    bb63__0_2317 -> bb98__0_2317 [label=""];
    bb64__0_2317 -> bb65__0_2317 [label="return"];
    bb65__0_2317 -> bb66__0_2317 [label="0"];
    bb65__0_2317 -> bb67__0_2317 [label="1"];
    bb65__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb66__0_2317 -> bb69__0_2317 [label="return"];
    bb67__0_2317 -> bb68__0_2317 [label="return"];
    bb68__0_2317 -> bb99__0_2317 [label=""];
    bb69__0_2317 -> bb70__0_2317 [label="return"];
    bb70__0_2317 -> bb71__0_2317 [label="return"];
    bb71__0_2317 -> bb72__0_2317 [label="0"];
    bb71__0_2317 -> bb73__0_2317 [label="1"];
    bb71__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb72__0_2317 -> bb75__0_2317 [label="return"];
    bb73__0_2317 -> bb74__0_2317 [label="return"];
    bb74__0_2317 -> bb97__0_2317 [label=""];
    bb75__0_2317 -> bb76__0_2317 [label="return"];
    bb76__0_2317 -> bb77__0_2317 [label="0"];
    bb76__0_2317 -> bb78__0_2317 [label="1"];
    bb76__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb77__0_2317 -> bb93__0_2317 [label=""];
    bb78__0_2317 -> bb79__0_2317 [label="return"];
    bb79__0_2317 -> bb97__0_2317 [label=""];
    bb80__0_2317 -> bb82__0_2317 [label=""];
    bb81__0_2317 -> bb82__0_2317 [label=""];
    bb82__0_2317 -> bb83__0_2317 [label="return"];
    bb83__0_2317 -> bb84__0_2317 [label="return"];
    bb84__0_2317 -> bb85__0_2317 [label="0"];
    bb84__0_2317 -> bb86__0_2317 [label="1"];
    bb84__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb85__0_2317 -> bb88__0_2317 [label="return"];
    bb86__0_2317 -> bb87__0_2317 [label="return"];
    bb87__0_2317 -> bb96__0_2317 [label=""];
    bb88__0_2317 -> bb89__0_2317 [label="return"];
    bb89__0_2317 -> bb90__0_2317 [label="0"];
    bb89__0_2317 -> bb91__0_2317 [label="1"];
    bb89__0_2317 -> bb4__0_2317 [label="otherwise"];
    bb90__0_2317 -> bb93__0_2317 [label=""];
    bb91__0_2317 -> bb92__0_2317 [label="return"];
    bb92__0_2317 -> bb96__0_2317 [label=""];
    bb93__0_2317 -> bb94__0_2317 [label=""];
    bb94__0_2317 -> bb95__0_2317 [label=""];
    bb95__0_2317 -> bb108__0_2317 [label=""];
    bb96__0_2317 -> bb104__0_2317 [label=""];
    bb97__0_2317 -> bb100__0_2317 [label=""];
    bb98__0_2317 -> bb99__0_2317 [label=""];
    bb99__0_2317 -> bb100__0_2317 [label=""];
    bb100__0_2317 -> bb104__0_2317 [label=""];
    bb101__0_2317 -> bb102__0_2317 [label=""];
    bb102__0_2317 -> bb103__0_2317 [label=""];
    bb103__0_2317 -> bb104__0_2317 [label=""];
    bb104__0_2317 -> bb106__0_2317 [label=""];
    bb105__0_2317 -> bb106__0_2317 [label=""];
    bb106__0_2317 -> bb107__0_2317 [label=""];
    bb107__0_2317 -> bb108__0_2317 [label=""];
}
