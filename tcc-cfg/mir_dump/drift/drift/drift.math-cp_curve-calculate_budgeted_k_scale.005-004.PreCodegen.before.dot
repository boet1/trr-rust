digraph Mir_0_2168 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_budgeted_k_scale(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: i128, _3: i128, _4: i128) -&gt; std::result::Result&lt;(u128, u128), error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _8: bool;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: ();<br align="left"/>let _11: error::ErrorCode;<br align="left"/>let _12: ();<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: &amp;ReErased std::string::String;<br align="left"/>let _16: &amp;ReErased std::string::String;<br align="left"/>let _17: std::string::String;<br align="left"/>let _18: std::string::String;<br align="left"/>let mut _19: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _21: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _22: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _23: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _26: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _27: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _28: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased error::ErrorCode;<br align="left"/>let _30: &amp;ReErased error::ErrorCode;<br align="left"/>let _31: ();<br align="left"/>let mut _32: &amp;ReErased str;<br align="left"/>let _33: &amp;ReErased str;<br align="left"/>let mut _34: &amp;ReErased std::string::String;<br align="left"/>let _35: &amp;ReErased std::string::String;<br align="left"/>let _36: std::string::String;<br align="left"/>let _37: std::string::String;<br align="left"/>let mut _38: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _40: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _41: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _42: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _44: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _45: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _46: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _47: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _48: &amp;ReErased i128;<br align="left"/>let _49: &amp;ReErased i128;<br align="left"/>let mut _50: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _51: &amp;ReErased i128;<br align="left"/>let _52: &amp;ReErased i128;<br align="left"/>let _53: i128;<br align="left"/>let mut _54: error::ErrorCode;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: ();<br align="left"/>let _60: ();<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _62: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: &amp;ReErased std::ops::RangeInclusive&lt;i128&gt;;<br align="left"/>let _65: std::ops::RangeInclusive&lt;i128&gt;;<br align="left"/>let mut _66: i128;<br align="left"/>let mut _67: (i128, bool);<br align="left"/>let mut _68: &amp;ReErased i128;<br align="left"/>let _69: &amp;ReErased i128;<br align="left"/>let mut _70: ();<br align="left"/>let _71: error::ErrorCode;<br align="left"/>let _72: ();<br align="left"/>let mut _73: &amp;ReErased str;<br align="left"/>let _74: &amp;ReErased str;<br align="left"/>let mut _75: &amp;ReErased std::string::String;<br align="left"/>let _76: &amp;ReErased std::string::String;<br align="left"/>let _77: std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let mut _79: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _88: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased error::ErrorCode;<br align="left"/>let _90: &amp;ReErased error::ErrorCode;<br align="left"/>let _91: ();<br align="left"/>let mut _92: &amp;ReErased str;<br align="left"/>let _93: &amp;ReErased str;<br align="left"/>let mut _94: &amp;ReErased std::string::String;<br align="left"/>let _95: &amp;ReErased std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let mut _98: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _102: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _106: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _107: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased i128;<br align="left"/>let _109: &amp;ReErased i128;<br align="left"/>let mut _110: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased i128;<br align="left"/>let _112: &amp;ReErased i128;<br align="left"/>let _113: i128;<br align="left"/>let mut _114: (i128, bool);<br align="left"/>let mut _115: error::ErrorCode;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: ();<br align="left"/>let _121: u128;<br align="left"/>let _122: u128;<br align="left"/>let mut _123: (u128, u128);<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _125: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _126: u128;<br align="left"/>let mut _127: u128;<br align="left"/>let mut _128: i128;<br align="left"/>let mut _129: u128;<br align="left"/>let mut _130: i128;<br align="left"/>let mut _131: i128;<br align="left"/>let mut _132: i128;<br align="left"/>let mut _133: isize;<br align="left"/>let _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _137: (u128, u128);<br align="left"/>let mut _138: (u128, u128);<br align="left"/>let mut _139: u128;<br align="left"/>let mut _140: u128;<br align="left"/>let mut _141: &amp;ReErased i128;<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _143: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _144: &amp;ReErased std::ops::RangeInclusive&lt;i128&gt;;<br align="left"/>let mut _145: &amp;ReErased i128;<br align="left"/>let mut _146: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug market =&gt; _1;<br align="left"/>debug budget =&gt; _2;<br align="left"/>debug k_pct_upper_bound =&gt; _3;<br align="left"/>debug k_pct_lower_bound =&gt; _4;<br align="left"/>debug error_code =&gt; _11;<br align="left"/>debug res =&gt; _18;<br align="left"/>debug res =&gt; _37;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug error_code =&gt; _71;<br align="left"/>debug res =&gt; _78;<br align="left"/>debug res =&gt; _97;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug numerator =&gt; _121;<br align="left"/>debug denominator =&gt; _122;<br align="left"/>debug residual =&gt; _134;<br align="left"/>debug val =&gt; _137;<br align="left"/>>;
    bb0__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _3<br/>_8 = Ge(move _9, const _)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb1__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>_10 = ()<br/>_7 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _10)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_11)<br/>_11 = error::ErrorCode::InvalidUpdateK<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_147 = const _<br/>_22 = &amp;(*_147)<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;_11<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _29)</td></tr></table>>];
    bb3__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_27 = [move _28]<br/>StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_19 = Arguments::&lt;'_&gt;::new_v1(move _20, move _24)</td></tr></table>>];
    bb4__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = format(move _19)</td></tr></table>>];
    bb5__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>_17 = move _18<br/>StorageDead(_18)<br/>_16 = &amp;_17<br/>_15 = &amp;(*_16)<br/></td></tr><tr><td align="left">_14 = &lt;String as Deref&gt;::deref(move _15)</td></tr></table>>];
    bb6__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_13 = &amp;(*_14)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_12 = solana_program::log::sol_log(move _13)</td></tr></table>>];
    bb7__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb8__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_146 = const _<br/>_41 = &amp;(*_146)<br/>_40 = &amp;(*_41)<br/>_39 = move _40 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;_3<br/>_48 = &amp;(*_49)<br/></td></tr><tr><td align="left">_47 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _48)</td></tr></table>>];
    bb9__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_145 = const _<br/>_52 = &amp;(*_145)<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _51)</td></tr></table>>];
    bb10__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_46 = [move _47, move _50]<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/>_43 = move _44 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_38 = Arguments::&lt;'_&gt;::new_v1(move _39, move _43)</td></tr></table>>];
    bb11__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = format(move _38)</td></tr></table>>];
    bb12__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>_36 = move _37<br/>StorageDead(_37)<br/>_35 = &amp;_36<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = &lt;String as Deref&gt;::deref(move _34)</td></tr></table>>];
    bb13__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_32 = &amp;(*_33)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_31 = solana_program::log::sol_log(move _32)</td></tr></table>>];
    bb14__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb15__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageLive(_54)<br/>_54 = _11<br/>_7 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _54)<br/>StorageDead(_54)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb17__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_55 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb18__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_6 as Continue).0: ())<br/>_5 = _59<br/>StorageDead(_59)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_67 = CheckedSub(const _, const _)<br/></td></tr><tr><td align="left">assert(!move (_67.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const _, const _)</td></tr></table>>];
    bb19__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb20__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb21__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_144 = const _<br/>_64 = &amp;(*_144)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;_4<br/>_68 = &amp;(*_69)<br/></td></tr><tr><td align="left">_63 = RangeInclusive::&lt;i128&gt;::contains::&lt;i128&gt;(move _64, move _68)</td></tr></table>>];
    bb23__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb24__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageLive(_70)<br/>_70 = ()<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _70)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageLive(_71)<br/>_71 = error::ErrorCode::InvalidUpdateK<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_143 = const _<br/>_82 = &amp;(*_143)<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_71<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _89)</td></tr></table>>];
    bb26__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = [move _88]<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_79 = Arguments::&lt;'_&gt;::new_v1(move _80, move _84)</td></tr></table>>];
    bb27__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = format(move _79)</td></tr></table>>];
    bb28__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>_77 = move _78<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = &lt;String as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb29__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_72 = solana_program::log::sol_log(move _73)</td></tr></table>>];
    bb30__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb31__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_142 = const _<br/>_101 = &amp;(*_142)<br/>_100 = &amp;(*_101)<br/>_99 = move _100 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_100)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;_4<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _108)</td></tr></table>>];
    bb32__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_114 = CheckedSub(const _, const _)<br/></td></tr><tr><td align="left">assert(!move (_114.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, const _, const _)</td></tr></table>>];
    bb33__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_141 = const _<br/>_112 = &amp;(*_141)<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _111)</td></tr></table>>];
    bb34__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_106 = [move _107, move _110]<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>_105 = &amp;_106<br/>_104 = &amp;(*_105)<br/>_103 = move _104 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_98 = Arguments::&lt;'_&gt;::new_v1(move _99, move _103)</td></tr></table>>];
    bb35__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = format(move _98)</td></tr></table>>];
    bb36__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>_96 = move _97<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = &lt;String as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb37__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = solana_program::log::sol_log(move _92)</td></tr></table>>];
    bb38__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb39__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageLive(_115)<br/>_115 = _71<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _115)<br/>StorageDead(_115)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb41__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_116 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb42__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_61 as Continue).0: ())<br/>_60 = _120<br/>StorageDead(_120)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = (((*_1).1: state::perp_market::AMM).5: u128)<br/>StorageLive(_127)<br/>_127 = (((*_1).1: state::perp_market::AMM).6: u128)<br/>StorageLive(_128)<br/>_128 = _2<br/>StorageLive(_129)<br/>_129 = (((*_1).1: state::perp_market::AMM).11: u128)<br/>StorageLive(_130)<br/>_130 = (((*_1).1: state::perp_market::AMM).15: i128)<br/>StorageLive(_131)<br/>_131 = _3<br/>StorageLive(_132)<br/>_132 = _4<br/></td></tr><tr><td align="left">_125 = _calculate_budgeted_k_scale(move _126, move _127, move _128, move _129, move _130, move _131, move _132)</td></tr></table>>];
    bb43__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb44__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb46__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_133 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _133)</td></tr></table>>];
    bb47__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_124 as Continue).0: (u128, u128))<br/>_123 = _137<br/>StorageDead(_137)<br/>StorageLive(_121)<br/>_121 = (_123.0: u128)<br/>StorageLive(_122)<br/>_122 = (_123.1: u128)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = _121<br/>StorageLive(_140)<br/>_140 = _122<br/>_138 = (move _139, move _140)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>_0 = std::result::Result::&lt;(u128, u128), error::ErrorCode&gt;::Ok(move _138)<br/>StorageDead(_138)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_134)<br/>_134 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_136)<br/>_136 = _134<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _136)</td></tr></table>>];
    bb49__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">return</td></tr></table>>];
    bb51__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb52__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb53__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">drop(_36)</td></tr></table>>];
    bb54__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb55__0_2168 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2168 -> bb2__0_2168 [label="0"];
    bb0__0_2168 -> bb1__0_2168 [label="otherwise"];
    bb1__0_2168 -> bb16__0_2168 [label=""];
    bb2__0_2168 -> bb3__0_2168 [label="return"];
    bb3__0_2168 -> bb4__0_2168 [label="return"];
    bb4__0_2168 -> bb5__0_2168 [label="return"];
    bb5__0_2168 -> bb6__0_2168 [label="return"];
    bb5__0_2168 -> bb54__0_2168 [label="unwind"];
    bb6__0_2168 -> bb7__0_2168 [label="return"];
    bb6__0_2168 -> bb54__0_2168 [label="unwind"];
    bb7__0_2168 -> bb8__0_2168 [label="return"];
    bb7__0_2168 -> bb55__0_2168 [label="unwind"];
    bb8__0_2168 -> bb9__0_2168 [label="return"];
    bb9__0_2168 -> bb10__0_2168 [label="return"];
    bb10__0_2168 -> bb11__0_2168 [label="return"];
    bb11__0_2168 -> bb12__0_2168 [label="return"];
    bb12__0_2168 -> bb13__0_2168 [label="return"];
    bb12__0_2168 -> bb53__0_2168 [label="unwind"];
    bb13__0_2168 -> bb14__0_2168 [label="return"];
    bb13__0_2168 -> bb53__0_2168 [label="unwind"];
    bb14__0_2168 -> bb15__0_2168 [label="return"];
    bb14__0_2168 -> bb55__0_2168 [label="unwind"];
    bb15__0_2168 -> bb16__0_2168 [label=""];
    bb16__0_2168 -> bb17__0_2168 [label="return"];
    bb17__0_2168 -> bb18__0_2168 [label="0"];
    bb17__0_2168 -> bb20__0_2168 [label="1"];
    bb17__0_2168 -> bb19__0_2168 [label="otherwise"];
    bb18__0_2168 -> bb22__0_2168 [label="success"];
    bb20__0_2168 -> bb21__0_2168 [label="return"];
    bb21__0_2168 -> bb50__0_2168 [label=""];
    bb22__0_2168 -> bb23__0_2168 [label="return"];
    bb23__0_2168 -> bb25__0_2168 [label="0"];
    bb23__0_2168 -> bb24__0_2168 [label="otherwise"];
    bb24__0_2168 -> bb40__0_2168 [label=""];
    bb25__0_2168 -> bb26__0_2168 [label="return"];
    bb26__0_2168 -> bb27__0_2168 [label="return"];
    bb27__0_2168 -> bb28__0_2168 [label="return"];
    bb28__0_2168 -> bb29__0_2168 [label="return"];
    bb28__0_2168 -> bb52__0_2168 [label="unwind"];
    bb29__0_2168 -> bb30__0_2168 [label="return"];
    bb29__0_2168 -> bb52__0_2168 [label="unwind"];
    bb30__0_2168 -> bb31__0_2168 [label="return"];
    bb30__0_2168 -> bb55__0_2168 [label="unwind"];
    bb31__0_2168 -> bb32__0_2168 [label="return"];
    bb32__0_2168 -> bb33__0_2168 [label="success"];
    bb33__0_2168 -> bb34__0_2168 [label="return"];
    bb34__0_2168 -> bb35__0_2168 [label="return"];
    bb35__0_2168 -> bb36__0_2168 [label="return"];
    bb36__0_2168 -> bb37__0_2168 [label="return"];
    bb36__0_2168 -> bb51__0_2168 [label="unwind"];
    bb37__0_2168 -> bb38__0_2168 [label="return"];
    bb37__0_2168 -> bb51__0_2168 [label="unwind"];
    bb38__0_2168 -> bb39__0_2168 [label="return"];
    bb38__0_2168 -> bb55__0_2168 [label="unwind"];
    bb39__0_2168 -> bb40__0_2168 [label=""];
    bb40__0_2168 -> bb41__0_2168 [label="return"];
    bb41__0_2168 -> bb42__0_2168 [label="0"];
    bb41__0_2168 -> bb43__0_2168 [label="1"];
    bb41__0_2168 -> bb19__0_2168 [label="otherwise"];
    bb42__0_2168 -> bb45__0_2168 [label="return"];
    bb43__0_2168 -> bb44__0_2168 [label="return"];
    bb44__0_2168 -> bb50__0_2168 [label=""];
    bb45__0_2168 -> bb46__0_2168 [label="return"];
    bb46__0_2168 -> bb47__0_2168 [label="0"];
    bb46__0_2168 -> bb48__0_2168 [label="1"];
    bb46__0_2168 -> bb19__0_2168 [label="otherwise"];
    bb47__0_2168 -> bb50__0_2168 [label=""];
    bb48__0_2168 -> bb49__0_2168 [label="return"];
    bb49__0_2168 -> bb50__0_2168 [label=""];
    bb51__0_2168 -> bb55__0_2168 [label="return"];
    bb52__0_2168 -> bb55__0_2168 [label="return"];
    bb53__0_2168 -> bb55__0_2168 [label="return"];
    bb54__0_2168 -> bb55__0_2168 [label="return"];
}
