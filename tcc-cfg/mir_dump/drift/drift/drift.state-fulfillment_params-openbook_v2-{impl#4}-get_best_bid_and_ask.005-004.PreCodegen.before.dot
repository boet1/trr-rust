digraph Mir_0_3066 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;OpenbookV2FulfillmentParams&lt;'a, 'b&gt; as SpotFulfillmentParams&gt;::get_best_bid_and_ask(_1: &amp;ReErased state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;) -&gt; std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;<br align="left"/>let _2: openbook_v2_light::Market;<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, openbook_v2_light::Market&gt;;<br align="left"/>let mut _4: std::result::Result&lt;openbook_v2_light::Market, error::ErrorCode&gt;;<br align="left"/>let mut _5: &amp;ReErased state::fulfillment_params::openbook_v2::OpenbookV2Context&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _6: isize;<br align="left"/>let _7: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _10: openbook_v2_light::Market;<br align="left"/>let _11: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _12: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _13: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _14: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let _15: &amp;ReErased openbook_v2_light::BookSide;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased openbook_v2_light::BookSide&gt;;<br align="left"/>let mut _17: std::result::Result&lt;&amp;ReErased openbook_v2_light::BookSide, error::ErrorCode&gt;;<br align="left"/>let mut _18: std::result::Result&lt;&amp;ReErased openbook_v2_light::BookSide, bytemuck::PodCastError&gt;;<br align="left"/>let mut _19: &amp;ReErased [u8];<br align="left"/>let _20: &amp;ReErased [u8];<br align="left"/>let _21: &amp;ReErased [u8];<br align="left"/>let mut _22: &amp;ReErased [u8];<br align="left"/>let _23: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _24: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _25: std::ops::RangeFrom&lt;usize&gt;;<br align="left"/>let mut _26: Closure(DefId(0:3067 ~ drift[d311]::state::fulfillment_params::openbook_v2::{impl#4}::get_best_bid_and_ask::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((bytemuck::PodCastError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: &amp;ReErased openbook_v2_light::BookSide;<br align="left"/>let _32: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _33: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _34: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _35: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let _36: &amp;ReErased openbook_v2_light::BookSide;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased openbook_v2_light::BookSide&gt;;<br align="left"/>let mut _38: std::result::Result&lt;&amp;ReErased openbook_v2_light::BookSide, error::ErrorCode&gt;;<br align="left"/>let mut _39: std::result::Result&lt;&amp;ReErased openbook_v2_light::BookSide, bytemuck::PodCastError&gt;;<br align="left"/>let mut _40: &amp;ReErased [u8];<br align="left"/>let _41: &amp;ReErased [u8];<br align="left"/>let _42: &amp;ReErased [u8];<br align="left"/>let mut _43: &amp;ReErased [u8];<br align="left"/>let _44: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _45: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _46: std::ops::RangeFrom&lt;usize&gt;;<br align="left"/>let mut _47: Closure(DefId(0:3068 ~ drift[d311]::state::fulfillment_params::openbook_v2::{impl#4}::get_best_bid_and_ask::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((bytemuck::PodCastError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: &amp;ReErased openbook_v2_light::BookSide;<br align="left"/>let _53: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _54: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _55: &amp;ReErased openbook_v2_light::BookSide;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: u64;<br align="left"/>let _58: u64;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _60: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: i64;<br align="left"/>let mut _64: u32;<br align="left"/>let mut _65: u8;<br align="left"/>let mut _66: u64;<br align="left"/>let mut _67: i64;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: u64;<br align="left"/>let mut _73: u64;<br align="left"/>let _74: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _75: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _76: &amp;ReErased openbook_v2_light::BookSide;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: u64;<br align="left"/>let _79: u64;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _81: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: i64;<br align="left"/>let mut _85: u32;<br align="left"/>let mut _86: u8;<br align="left"/>let mut _87: u64;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: u64;<br align="left"/>let mut _94: u64;<br align="left"/>let mut _95: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _96: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _97: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _98: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased mut [u8];<br align="left"/>let mut _100: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased mut [u8];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug residual =&gt; _7;<br align="left"/>debug val =&gt; _10;<br align="left"/>debug bid_data =&gt; _11;<br align="left"/>debug bid =&gt; _15;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug ask_data =&gt; _32;<br align="left"/>debug ask =&gt; _36;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug bid_price =&gt; _53;<br align="left"/>debug bid =&gt; _57;<br align="left"/>debug bid_price =&gt; _58;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug ask_price =&gt; _74;<br align="left"/>debug ask =&gt; _78;<br align="left"/>debug ask_price =&gt; _79;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>>;
    bb0__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = &amp;((*_1).1: state::fulfillment_params::openbook_v2::OpenbookV2Context&lt;'_, '_&gt;)<br/></td></tr><tr><td align="left">_4 = OpenbookV2Context::&lt;'_, '_&gt;::load_openbook_v2_market(move _5)</td></tr></table>>];
    bb1__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;openbook_v2_light::Market, error::ErrorCode&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb3__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = ((_3 as Continue).0: openbook_v2_light::Market)<br/>_2 = _10<br/>StorageDead(_10)<br/>StorageDead(_3)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_98 = deref_copy ((*_1).4: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_14 = &amp;((*_98).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_13 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _14)</td></tr></table>>];
    bb4__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_9)<br/>_9 = _7<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _9)</td></tr></table>>];
    bb6__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_12 = &amp;(*_13)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_11 = RefCell::&lt;&amp;mut [u8]&gt;::borrow(move _12)</td></tr></table>>];
    bb8__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;_11<br/></td></tr><tr><td align="left">_23 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _24)</td></tr></table>>];
    bb9__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_99 = deref_copy (*_23)<br/>_22 = &amp;(*_99)<br/>StorageDead(_24)<br/>StorageLive(_25)<br/>_25 = RangeFrom::&lt;usize&gt; { start: const 8_usize }<br/></td></tr><tr><td align="left">_21 = &lt;[u8] as Index&lt;RangeFrom&lt;usize&gt;&gt;&gt;::index(move _22, move _25)</td></tr></table>>];
    bb10__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_22)<br/>_20 = &amp;(*_21)<br/>_19 = &amp;(*_20)<br/></td></tr><tr><td align="left">_18 = bytemuck::try_from_bytes::&lt;BookSide&gt;(move _19)</td></tr></table>>];
    bb11__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_26)<br/>_26 = {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:419:80: 419:83}<br/></td></tr><tr><td align="left">_17 = std::result::Result::&lt;&amp;BookSide, bytemuck::PodCastError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:419:80: 419:83}&gt;(move _18, move _26)</td></tr></table>>];
    bb12__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;&amp;BookSide, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb13__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_27 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb14__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_16 as Continue).0: &amp;openbook_v2_light::BookSide)<br/>_15 = _31<br/>StorageDead(_31)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_100 = deref_copy ((*_1).5: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_35 = &amp;((*_100).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_34 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _35)</td></tr></table>>];
    bb15__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb16__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_33 = &amp;(*_34)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_32 = RefCell::&lt;&amp;mut [u8]&gt;::borrow(move _33)</td></tr></table>>];
    bb18__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_34)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;_32<br/></td></tr><tr><td align="left">_44 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb19__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_101 = deref_copy (*_44)<br/>_43 = &amp;(*_101)<br/>StorageDead(_45)<br/>StorageLive(_46)<br/>_46 = RangeFrom::&lt;usize&gt; { start: const 8_usize }<br/></td></tr><tr><td align="left">_42 = &lt;[u8] as Index&lt;RangeFrom&lt;usize&gt;&gt;&gt;::index(move _43, move _46)</td></tr></table>>];
    bb20__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_43)<br/>_41 = &amp;(*_42)<br/>_40 = &amp;(*_41)<br/></td></tr><tr><td align="left">_39 = bytemuck::try_from_bytes::&lt;BookSide&gt;(move _40)</td></tr></table>>];
    bb21__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_47)<br/>_47 = {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:424:80: 424:83}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;&amp;BookSide, bytemuck::PodCastError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:424:80: 424:83}&gt;(move _39, move _47)</td></tr></table>>];
    bb22__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;&amp;BookSide, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb23__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_48 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb24__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_37 as Continue).0: &amp;openbook_v2_light::BookSide)<br/>_36 = _52<br/>StorageDead(_52)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_15)<br/></td></tr><tr><td align="left">_54 = BookSide::find_max(move _55)</td></tr></table>>];
    bb25__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb26__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_56 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb28__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_53 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_54 as Some).0: u64)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = _57<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = (_2.17: i64)<br/>_62 = move _63 as u64 (IntToInt)<br/>StorageDead(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = (_2.1: u8)<br/>_64 = move _65 as u32 (IntToInt)<br/>StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = (_2.18: i64)<br/>_66 = move _67 as u64 (IntToInt)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_60 = calculate_price_from_serum_limit_price(move _61, move _62, move _64, move _66)</td></tr></table>>];
    bb30__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb31__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_68 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb32__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_59 as Continue).0: u64)<br/>_58 = _72<br/>StorageDead(_72)<br/>StorageDead(_59)<br/>StorageLive(_73)<br/>_73 = _58<br/>_53 = Option::&lt;u64&gt;::Some(move _73)<br/>StorageDead(_73)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb34__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;(*_36)<br/></td></tr><tr><td align="left">_75 = BookSide::find_min(move _76)</td></tr></table>>];
    bb36__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_77 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb37__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_74 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_75 as Some).0: u64)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _78<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = (_2.17: i64)<br/>_83 = move _84 as u64 (IntToInt)<br/>StorageDead(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = (_2.1: u8)<br/>_85 = move _86 as u32 (IntToInt)<br/>StorageDead(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = (_2.18: i64)<br/>_87 = move _88 as u64 (IntToInt)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_81 = calculate_price_from_serum_limit_price(move _82, move _83, move _85, move _87)</td></tr></table>>];
    bb39__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb40__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_89 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb41__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_80 as Continue).0: u64)<br/>_79 = _93<br/>StorageDead(_93)<br/>StorageDead(_80)<br/>StorageLive(_94)<br/>_94 = _79<br/>_74 = Option::&lt;u64&gt;::Some(move _94)<br/>StorageDead(_94)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb43__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = _53<br/>StorageLive(_97)<br/>_97 = _74<br/>_95 = (move _96, move _97)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>_0 = std::result::Result::&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt;::Ok(move _95)<br/>StorageDead(_95)<br/>StorageDead(_74)<br/>StorageDead(_53)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb45__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb46__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb49__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb51__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left">return</td></tr></table>>];
    bb54__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb55__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">drop(_11)</td></tr></table>>];
    bb56__0_3066 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_3066 -> bb1__0_3066 [label="return"];
    bb1__0_3066 -> bb2__0_3066 [label="return"];
    bb2__0_3066 -> bb3__0_3066 [label="0"];
    bb2__0_3066 -> bb5__0_3066 [label="1"];
    bb2__0_3066 -> bb4__0_3066 [label="otherwise"];
    bb3__0_3066 -> bb7__0_3066 [label="return"];
    bb5__0_3066 -> bb6__0_3066 [label="return"];
    bb6__0_3066 -> bb52__0_3066 [label=""];
    bb7__0_3066 -> bb8__0_3066 [label="return"];
    bb8__0_3066 -> bb9__0_3066 [label="return"];
    bb8__0_3066 -> bb55__0_3066 [label="unwind"];
    bb9__0_3066 -> bb10__0_3066 [label="return"];
    bb9__0_3066 -> bb55__0_3066 [label="unwind"];
    bb10__0_3066 -> bb11__0_3066 [label="return"];
    bb10__0_3066 -> bb55__0_3066 [label="unwind"];
    bb11__0_3066 -> bb12__0_3066 [label="return"];
    bb11__0_3066 -> bb55__0_3066 [label="unwind"];
    bb12__0_3066 -> bb13__0_3066 [label="return"];
    bb12__0_3066 -> bb55__0_3066 [label="unwind"];
    bb13__0_3066 -> bb14__0_3066 [label="0"];
    bb13__0_3066 -> bb15__0_3066 [label="1"];
    bb13__0_3066 -> bb4__0_3066 [label="otherwise"];
    bb14__0_3066 -> bb17__0_3066 [label="return"];
    bb14__0_3066 -> bb55__0_3066 [label="unwind"];
    bb15__0_3066 -> bb16__0_3066 [label="return"];
    bb15__0_3066 -> bb55__0_3066 [label="unwind"];
    bb16__0_3066 -> bb50__0_3066 [label=""];
    bb17__0_3066 -> bb18__0_3066 [label="return"];
    bb17__0_3066 -> bb55__0_3066 [label="unwind"];
    bb18__0_3066 -> bb19__0_3066 [label="return"];
    bb18__0_3066 -> bb54__0_3066 [label="unwind"];
    bb19__0_3066 -> bb20__0_3066 [label="return"];
    bb19__0_3066 -> bb54__0_3066 [label="unwind"];
    bb20__0_3066 -> bb21__0_3066 [label="return"];
    bb20__0_3066 -> bb54__0_3066 [label="unwind"];
    bb21__0_3066 -> bb22__0_3066 [label="return"];
    bb21__0_3066 -> bb54__0_3066 [label="unwind"];
    bb22__0_3066 -> bb23__0_3066 [label="return"];
    bb22__0_3066 -> bb54__0_3066 [label="unwind"];
    bb23__0_3066 -> bb24__0_3066 [label="0"];
    bb23__0_3066 -> bb25__0_3066 [label="1"];
    bb23__0_3066 -> bb4__0_3066 [label="otherwise"];
    bb24__0_3066 -> bb27__0_3066 [label="return"];
    bb24__0_3066 -> bb54__0_3066 [label="unwind"];
    bb25__0_3066 -> bb26__0_3066 [label="return"];
    bb25__0_3066 -> bb54__0_3066 [label="unwind"];
    bb26__0_3066 -> bb48__0_3066 [label=""];
    bb27__0_3066 -> bb28__0_3066 [label="0"];
    bb27__0_3066 -> bb29__0_3066 [label="1"];
    bb27__0_3066 -> bb4__0_3066 [label="otherwise"];
    bb28__0_3066 -> bb35__0_3066 [label=""];
    bb29__0_3066 -> bb30__0_3066 [label="return"];
    bb29__0_3066 -> bb54__0_3066 [label="unwind"];
    bb30__0_3066 -> bb31__0_3066 [label="return"];
    bb30__0_3066 -> bb54__0_3066 [label="unwind"];
    bb31__0_3066 -> bb32__0_3066 [label="0"];
    bb31__0_3066 -> bb33__0_3066 [label="1"];
    bb31__0_3066 -> bb4__0_3066 [label="otherwise"];
    bb32__0_3066 -> bb35__0_3066 [label=""];
    bb33__0_3066 -> bb34__0_3066 [label="return"];
    bb33__0_3066 -> bb54__0_3066 [label="unwind"];
    bb34__0_3066 -> bb47__0_3066 [label=""];
    bb35__0_3066 -> bb36__0_3066 [label="return"];
    bb35__0_3066 -> bb54__0_3066 [label="unwind"];
    bb36__0_3066 -> bb37__0_3066 [label="0"];
    bb36__0_3066 -> bb38__0_3066 [label="1"];
    bb36__0_3066 -> bb4__0_3066 [label="otherwise"];
    bb37__0_3066 -> bb44__0_3066 [label=""];
    bb38__0_3066 -> bb39__0_3066 [label="return"];
    bb38__0_3066 -> bb54__0_3066 [label="unwind"];
    bb39__0_3066 -> bb40__0_3066 [label="return"];
    bb39__0_3066 -> bb54__0_3066 [label="unwind"];
    bb40__0_3066 -> bb41__0_3066 [label="0"];
    bb40__0_3066 -> bb42__0_3066 [label="1"];
    bb40__0_3066 -> bb4__0_3066 [label="otherwise"];
    bb41__0_3066 -> bb44__0_3066 [label=""];
    bb42__0_3066 -> bb43__0_3066 [label="return"];
    bb42__0_3066 -> bb54__0_3066 [label="unwind"];
    bb43__0_3066 -> bb47__0_3066 [label=""];
    bb44__0_3066 -> bb45__0_3066 [label="return"];
    bb44__0_3066 -> bb55__0_3066 [label="unwind"];
    bb45__0_3066 -> bb46__0_3066 [label="return"];
    bb45__0_3066 -> bb56__0_3066 [label="unwind"];
    bb46__0_3066 -> bb53__0_3066 [label=""];
    bb47__0_3066 -> bb48__0_3066 [label=""];
    bb48__0_3066 -> bb49__0_3066 [label="return"];
    bb48__0_3066 -> bb55__0_3066 [label="unwind"];
    bb49__0_3066 -> bb50__0_3066 [label=""];
    bb50__0_3066 -> bb51__0_3066 [label="return"];
    bb50__0_3066 -> bb56__0_3066 [label="unwind"];
    bb51__0_3066 -> bb52__0_3066 [label=""];
    bb52__0_3066 -> bb53__0_3066 [label=""];
    bb54__0_3066 -> bb55__0_3066 [label="return"];
    bb55__0_3066 -> bb56__0_3066 [label="return"];
}
