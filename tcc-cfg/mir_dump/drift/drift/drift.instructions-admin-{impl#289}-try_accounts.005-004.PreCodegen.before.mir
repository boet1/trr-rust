// MIR for `admin::<impl at programs/drift/src/instructions/admin.rs:5699:10: 5699:18>::try_accounts` before PreCodegen

fn admin::<impl at programs/drift/src/instructions/admin.rs:5699:10: 5699:18>::try_accounts(_1: &anchor_lang::prelude::Pubkey, _2: &mut &[anchor_lang::prelude::AccountInfo<'_>], _3: &[u8], _4: &mut AdminDepositBumps, _5: &mut BTreeSet<anchor_lang::prelude::Pubkey>) -> std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> {
    debug __program_id => _1;
    debug __accounts => _2;
    debug __ix_data => _3;
    debug __bumps => _4;
    debug __reallocs => _5;
    let mut _0: std::result::Result<instructions::admin::AdminDeposit<'_>, anchor_lang::error::Error>;
    let mut _6: &[u8];
    let mut _8: <instructions::admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, instructions::admin::AdminDepositBumps>>::try_accounts::__Args;
    let mut _9: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>, <instructions::admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, instructions::admin::AdminDepositBumps>>::try_accounts::__Args>;
    let mut _10: std::result::Result<<instructions::admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, instructions::admin::AdminDepositBumps>>::try_accounts::__Args, anchor_lang::error::ErrorCode>;
    let mut _11: std::result::Result<<instructions::admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, instructions::admin::AdminDepositBumps>>::try_accounts::__Args, std::io::Error>;
    let mut _12: &mut &[u8];
    let mut _13: &mut &[u8];
    let mut _14: {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
    let mut _15: isize;
    let mut _17: !;
    let mut _18: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>;
    let mut _21: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, std::boxed::Box<anchor_lang::prelude::Account<'_, state::state::State>>>;
    let mut _22: std::result::Result<std::boxed::Box<anchor_lang::prelude::Account<'_, state::state::State>>, anchor_lang::error::Error>;
    let mut _23: std::result::Result<std::boxed::Box<anchor_lang::prelude::Account<'_, state::state::State>>, anchor_lang::error::Error>;
    let mut _24: &anchor_lang::prelude::Pubkey;
    let mut _25: &mut &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _26: &[u8];
    let mut _27: &mut instructions::admin::AdminDepositBumps;
    let mut _28: &mut std::collections::BTreeSet<anchor_lang::prelude::Pubkey>;
    let mut _29: {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
    let mut _30: isize;
    let mut _32: !;
    let mut _33: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _36: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, anchor_lang::prelude::AccountLoader<'_, state::user::User>>;
    let mut _37: std::result::Result<anchor_lang::prelude::AccountLoader<'_, state::user::User>, anchor_lang::error::Error>;
    let mut _38: std::result::Result<anchor_lang::prelude::AccountLoader<'_, state::user::User>, anchor_lang::error::Error>;
    let mut _39: &anchor_lang::prelude::Pubkey;
    let mut _40: &mut &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _41: &[u8];
    let mut _42: &mut instructions::admin::AdminDepositBumps;
    let mut _43: &mut std::collections::BTreeSet<anchor_lang::prelude::Pubkey>;
    let mut _44: {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
    let mut _45: isize;
    let mut _47: !;
    let mut _48: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _51: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, anchor_lang::prelude::Signer<'_>>;
    let mut _52: std::result::Result<anchor_lang::prelude::Signer<'_>, anchor_lang::error::Error>;
    let mut _53: std::result::Result<anchor_lang::prelude::Signer<'_>, anchor_lang::error::Error>;
    let mut _54: &anchor_lang::prelude::Pubkey;
    let mut _55: &mut &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _56: &[u8];
    let mut _57: &mut instructions::admin::AdminDepositBumps;
    let mut _58: &mut std::collections::BTreeSet<anchor_lang::prelude::Pubkey>;
    let mut _59: {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
    let mut _60: isize;
    let mut _62: !;
    let mut _63: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _66: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>>;
    let mut _67: std::result::Result<std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error>;
    let mut _68: std::result::Result<std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error>;
    let mut _69: &anchor_lang::prelude::Pubkey;
    let mut _70: &mut &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _71: &[u8];
    let mut _72: &mut instructions::admin::AdminDepositBumps;
    let mut _73: &mut std::collections::BTreeSet<anchor_lang::prelude::Pubkey>;
    let mut _74: {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
    let mut _75: isize;
    let mut _77: !;
    let mut _78: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _81: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>>;
    let mut _82: std::result::Result<std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error>;
    let mut _83: std::result::Result<std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error>;
    let mut _84: &anchor_lang::prelude::Pubkey;
    let mut _85: &mut &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _86: &[u8];
    let mut _87: &mut instructions::admin::AdminDepositBumps;
    let mut _88: &mut std::collections::BTreeSet<anchor_lang::prelude::Pubkey>;
    let mut _89: {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
    let mut _90: isize;
    let mut _92: !;
    let mut _93: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let mut _96: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, anchor_lang::error::Error>, anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>>;
    let mut _97: std::result::Result<anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>, anchor_lang::error::Error>;
    let mut _98: std::result::Result<anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>, anchor_lang::error::Error>;
    let mut _99: &anchor_lang::prelude::Pubkey;
    let mut _100: &mut &[anchor_lang::prelude::AccountInfo<'_>];
    let mut _101: &[u8];
    let mut _102: &mut instructions::admin::AdminDepositBumps;
    let mut _103: &mut std::collections::BTreeSet<anchor_lang::prelude::Pubkey>;
    let mut _104: {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
    let mut _105: isize;
    let mut _107: !;
    let mut _108: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
    let _110: ();
    let mut _111: bool;
    let mut _112: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _113: &anchor_lang::prelude::AccountLoader<'_, state::user::User>;
    let _114: &anchor_lang::prelude::AccountLoader<'_, state::user::User>;
    let mut _115: !;
    let mut _116: anchor_lang::error::Error;
    let mut _117: anchor_lang::error::Error;
    let mut _118: anchor_lang::error::ErrorCode;
    let _119: ();
    let mut _120: bool;
    let mut _121: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _122: &anchor_lang::prelude::Signer<'_>;
    let _123: &anchor_lang::prelude::Signer<'_>;
    let mut _124: !;
    let mut _125: anchor_lang::error::Error;
    let mut _126: anchor_lang::error::Error;
    let mut _127: anchor_lang::error::ErrorCode;
    let _128: ();
    let mut _129: bool;
    let mut _130: &anchor_lang::prelude::Pubkey;
    let _131: anchor_lang::prelude::Pubkey;
    let mut _132: &anchor_lang::prelude::Signer<'_>;
    let mut _133: &anchor_lang::prelude::Pubkey;
    let _134: anchor_lang::prelude::Pubkey;
    let mut _135: bool;
    let mut _136: &anchor_lang::prelude::Pubkey;
    let _137: anchor_lang::prelude::Pubkey;
    let mut _138: &anchor_lang::prelude::Signer<'_>;
    let mut _139: &anchor_lang::prelude::Pubkey;
    let _140: &state::state::State;
    let mut _141: &anchor_lang::prelude::Account<'_, state::state::State>;
    let mut _142: !;
    let mut _143: anchor_lang::error::Error;
    let mut _144: anchor_lang::error::Error;
    let mut _145: anchor_lang::error::ErrorCode;
    let mut _148: (anchor_lang::prelude::Pubkey, u8);
    let mut _149: &[&[u8]];
    let mut _150: &[&[u8]; 2];
    let _151: &[&[u8]; 2];
    let _152: [&[u8]; 2];
    let mut _153: &[u8];
    let _154: &[u8];
    let mut _155: &[u8; 17];
    let _156: &[u8; 17];
    let mut _157: &[u8];
    let _158: &[u8];
    let mut _159: &[u8; 2];
    let _160: [u8; 2];
    let mut _161: u16;
    let mut _162: &anchor_lang::prelude::Pubkey;
    let _163: &&anchor_lang::prelude::Pubkey;
    let mut _164: u8;
    let _165: ();
    let mut _166: bool;
    let mut _167: &anchor_lang::prelude::Pubkey;
    let _168: anchor_lang::prelude::Pubkey;
    let mut _169: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _170: &anchor_lang::prelude::Pubkey;
    let mut _171: !;
    let mut _172: anchor_lang::error::Error;
    let mut _173: anchor_lang::error::Error;
    let mut _174: anchor_lang::error::Error;
    let mut _175: anchor_lang::error::ErrorCode;
    let mut _176: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);
    let mut _177: anchor_lang::prelude::Pubkey;
    let mut _178: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _179: anchor_lang::prelude::Pubkey;
    let _180: ();
    let mut _181: bool;
    let mut _182: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _183: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let _184: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _185: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _186: !;
    let mut _187: anchor_lang::error::Error;
    let mut _188: anchor_lang::error::Error;
    let mut _189: anchor_lang::error::ErrorCode;
    let _190: ();
    let mut _191: bool;
    let mut _192: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _193: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let _194: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _195: &std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _196: !;
    let mut _197: anchor_lang::error::Error;
    let mut _198: anchor_lang::error::Error;
    let mut _199: anchor_lang::error::ErrorCode;
    let _200: ();
    let mut _201: bool;
    let mut _202: &bool;
    let _203: bool;
    let mut _204: &anchor_lang::prelude::Pubkey;
    let _205: &anchor_spl::token_2022::spl_token_2022::state::Account;
    let mut _206: &anchor_spl::token_interface::TokenAccount;
    let _207: &anchor_spl::token_interface::TokenAccount;
    let mut _208: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _209: &anchor_lang::prelude::Pubkey;
    let _210: &anchor_lang::prelude::Pubkey;
    let _211: &anchor_spl::token_2022::spl_token_2022::state::Account;
    let mut _212: &anchor_spl::token_interface::TokenAccount;
    let _213: &anchor_spl::token_interface::TokenAccount;
    let mut _214: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _215: !;
    let mut _216: anchor_lang::error::Error;
    let mut _217: anchor_lang::error::Error;
    let mut _218: anchor_lang::error::ErrorCode;
    let _219: ();
    let mut _220: bool;
    let mut _221: &anchor_lang::prelude::Pubkey;
    let _222: &anchor_spl::token_2022::spl_token_2022::state::Account;
    let mut _223: &anchor_spl::token_interface::TokenAccount;
    let _224: &anchor_spl::token_interface::TokenAccount;
    let mut _225: &anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _226: &anchor_lang::prelude::Pubkey;
    let _227: anchor_lang::prelude::Pubkey;
    let mut _228: &anchor_lang::prelude::Pubkey;
    let _229: anchor_lang::prelude::Pubkey;
    let mut _230: &anchor_lang::prelude::Signer<'_>;
    let mut _231: !;
    let mut _232: anchor_lang::error::Error;
    let mut _233: anchor_lang::error::ErrorCode;
    let mut _234: instructions::admin::AdminDeposit<'_>;
    let mut _235: std::boxed::Box<anchor_lang::prelude::Account<'_, state::state::State>>;
    let mut _236: anchor_lang::prelude::AccountLoader<'_, state::user::User>;
    let mut _237: anchor_lang::prelude::Signer<'_>;
    let mut _238: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _239: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _240: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
    let mut _241: &anchor_lang::prelude::Pubkey;
    let mut _242: bool;
    let mut _243: isize;
    let mut _244: isize;
    let mut _245: isize;
    let mut _246: isize;
    let mut _247: isize;
    let mut _248: isize;
    let mut _249: isize;
    let mut _250: isize;
    let mut _251: isize;
    let mut _252: isize;
    let mut _253: isize;
    let mut _254: isize;
    let mut _255: isize;
    let mut _256: isize;
    let mut _257: isize;
    let mut _258: isize;
    let mut _259: isize;
    let mut _260: isize;
    let mut _261: isize;
    let mut _262: isize;
    let mut _263: isize;
    let mut _264: isize;
    let mut _265: isize;
    let mut _266: isize;
    let mut _267: isize;
    let mut _268: isize;
    let mut _269: isize;
    let mut _270: isize;
    let mut _271: isize;
    let mut _272: isize;
    let mut _273: *const anchor_lang::prelude::Account<'_, state::state::State>;
    let mut _274: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _275: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _276: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _277: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _278: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    scope 1 {
        debug __ix_data => _6;
        let _7: u16;
        let _16: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>;
        let _19: <instructions::admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, instructions::admin::AdminDepositBumps>>::try_accounts::__Args;
        scope 2 {
            debug market_index => _7;
            let _20: std::boxed::Box<anchor_lang::prelude::Account<'_, state::state::State>>;
            let _31: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
            let _34: std::boxed::Box<anchor_lang::prelude::Account<'_, state::state::State>>;
            scope 7 {
                debug state => _20;
                let _35: anchor_lang::prelude::AccountLoader<'_, state::user::User>;
                let _46: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                let _49: anchor_lang::prelude::AccountLoader<'_, state::user::User>;
                scope 12 {
                    debug user => _35;
                    let _50: anchor_lang::prelude::Signer<'_>;
                    let _61: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                    let _64: anchor_lang::prelude::Signer<'_>;
                    scope 17 {
                        debug admin => _50;
                        let _65: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
                        let _76: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                        let _79: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
                        scope 22 {
                            debug spot_market_vault => _65;
                            let _80: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
                            let _91: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                            let _94: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
                            scope 27 {
                                debug admin_token_account => _80;
                                let _95: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
                                let _106: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>;
                                let _109: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>;
                                scope 32 {
                                    debug token_program => _95;
                                    let _146: anchor_lang::prelude::Pubkey;
                                    let _147: u8;
                                    scope 37 {
                                        debug __pda_address => _146;
                                        debug __bump => _147;
                                    }
                                }
                                scope 33 {
                                    debug residual => _106;
                                    scope 34 {
                                    }
                                }
                                scope 35 {
                                    debug val => _109;
                                    scope 36 {
                                    }
                                }
                            }
                            scope 28 {
                                debug residual => _91;
                                scope 29 {
                                }
                            }
                            scope 30 {
                                debug val => _94;
                                scope 31 {
                                }
                            }
                        }
                        scope 23 {
                            debug residual => _76;
                            scope 24 {
                            }
                        }
                        scope 25 {
                            debug val => _79;
                            scope 26 {
                            }
                        }
                    }
                    scope 18 {
                        debug residual => _61;
                        scope 19 {
                        }
                    }
                    scope 20 {
                        debug val => _64;
                        scope 21 {
                        }
                    }
                }
                scope 13 {
                    debug residual => _46;
                    scope 14 {
                    }
                }
                scope 15 {
                    debug val => _49;
                    scope 16 {
                    }
                }
            }
            scope 8 {
                debug residual => _31;
                scope 9 {
                }
            }
            scope 10 {
                debug val => _34;
                scope 11 {
                }
            }
        }
        scope 3 {
            debug residual => _16;
            scope 4 {
            }
        }
        scope 5 {
            debug val => _19;
            scope 6 {
            }
        }
    }

    bb0: {
        _242 = const false;
        StorageLive(_6);
        _6 = _3;
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = &mut _6;
        _12 = &mut (*_13);
        _11 = <<admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, AdminDepositBumps>>::try_accounts::__Args as BorshDeserialize>::deserialize(move _12) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_12);
        StorageLive(_14);
        _14 = {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
        _10 = std::result::Result::<<admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, AdminDepositBumps>>::try_accounts::__Args, std::io::Error>::map_err::<anchor_lang::error::ErrorCode, {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18}>(move _11, move _14) -> [return: bb2, unwind: bb120];
    }

    bb2: {
        StorageDead(_14);
        StorageDead(_11);
        _9 = <std::result::Result<<admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, AdminDepositBumps>>::try_accounts::__Args, anchor_lang::error::ErrorCode> as Try>::branch(move _10) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_10);
        _15 = discriminant(_9);
        switchInt(move _15) -> [0: bb4, 1: bb6, otherwise: bb5];
    }

    bb4: {
        StorageLive(_19);
        _19 = move ((_9 as Continue).0: <instructions::admin::AdminDeposit<'info> as anchor_lang::Accounts<'info, instructions::admin::AdminDepositBumps>>::try_accounts::__Args);
        _8 = move _19;
        StorageDead(_19);
        StorageLive(_7);
        _7 = (_8.0: u16);
        StorageDead(_13);
        StorageDead(_9);
        StorageDead(_8);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        _24 = &(*_1);
        StorageLive(_25);
        _25 = &mut (*_2);
        StorageLive(_26);
        _26 = &(*_6);
        StorageLive(_27);
        _27 = &mut (*_4);
        StorageLive(_28);
        _28 = &mut (*_5);
        _23 = <Box<anchor_lang::prelude::Account<'_, state::state::State>> as anchor_lang::Accounts<'_, AdminDepositBumps>>::try_accounts(move _24, move _25, move _26, move _27, move _28) -> [return: bb8, unwind continue];
    }

    bb5: {
        unreachable;
    }

    bb6: {
        StorageLive(_16);
        _16 = ((_9 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::ErrorCode>);
        StorageLive(_18);
        _18 = _16;
        _0 = <std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::ErrorCode>>>::from_residual(move _18) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_18);
        StorageDead(_16);
        StorageDead(_13);
        StorageDead(_9);
        StorageDead(_8);
        goto -> bb115;
    }

    bb8: {
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageLive(_29);
        _29 = {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
        _22 = std::result::Result::<Box<anchor_lang::prelude::Account<'_, state::state::State>>, anchor_lang::error::Error>::map_err::<anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18}>(move _23, move _29) -> [return: bb9, unwind: bb120];
    }

    bb9: {
        StorageDead(_29);
        StorageDead(_23);
        _21 = <std::result::Result<Box<anchor_lang::prelude::Account<'_, state::state::State>>, anchor_lang::error::Error> as Try>::branch(move _22) -> [return: bb10, unwind: bb120];
    }

    bb10: {
        StorageDead(_22);
        _30 = discriminant(_21);
        switchInt(move _30) -> [0: bb11, 1: bb12, otherwise: bb5];
    }

    bb11: {
        StorageLive(_34);
        _34 = move ((_21 as Continue).0: std::boxed::Box<anchor_lang::prelude::Account<'_, state::state::State>>);
        _20 = move _34;
        StorageDead(_34);
        _243 = discriminant(_21);
        StorageDead(_21);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        StorageLive(_39);
        _39 = &(*_1);
        StorageLive(_40);
        _40 = &mut (*_2);
        StorageLive(_41);
        _41 = &(*_6);
        StorageLive(_42);
        _42 = &mut (*_4);
        StorageLive(_43);
        _43 = &mut (*_5);
        _38 = <anchor_lang::prelude::AccountLoader<'_, User> as anchor_lang::Accounts<'_, AdminDepositBumps>>::try_accounts(move _39, move _40, move _41, move _42, move _43) -> [return: bb14, unwind: bb119];
    }

    bb12: {
        StorageLive(_31);
        _31 = move ((_21 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_33);
        _33 = move _31;
        _0 = <std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _33) -> [return: bb13, unwind: bb128];
    }

    bb13: {
        StorageDead(_33);
        StorageDead(_31);
        _265 = discriminant(_21);
        StorageDead(_21);
        goto -> bb114;
    }

    bb14: {
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_39);
        StorageLive(_44);
        _44 = {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
        _37 = std::result::Result::<anchor_lang::prelude::AccountLoader<'_, User>, anchor_lang::error::Error>::map_err::<anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18}>(move _38, move _44) -> [return: bb15, unwind: bb119];
    }

    bb15: {
        StorageDead(_44);
        StorageDead(_38);
        _36 = <std::result::Result<anchor_lang::prelude::AccountLoader<'_, User>, anchor_lang::error::Error> as Try>::branch(move _37) -> [return: bb16, unwind: bb119];
    }

    bb16: {
        StorageDead(_37);
        _45 = discriminant(_36);
        switchInt(move _45) -> [0: bb17, 1: bb18, otherwise: bb5];
    }

    bb17: {
        StorageLive(_49);
        _49 = move ((_36 as Continue).0: anchor_lang::prelude::AccountLoader<'_, state::user::User>);
        _35 = move _49;
        StorageDead(_49);
        _245 = discriminant(_36);
        StorageDead(_36);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        StorageLive(_54);
        _54 = &(*_1);
        StorageLive(_55);
        _55 = &mut (*_2);
        StorageLive(_56);
        _56 = &(*_6);
        StorageLive(_57);
        _57 = &mut (*_4);
        StorageLive(_58);
        _58 = &mut (*_5);
        _53 = <anchor_lang::prelude::Signer<'_> as anchor_lang::Accounts<'_, AdminDepositBumps>>::try_accounts(move _54, move _55, move _56, move _57, move _58) -> [return: bb20, unwind: bb119];
    }

    bb18: {
        StorageLive(_46);
        _46 = move ((_36 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_48);
        _48 = move _46;
        _0 = <std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _48) -> [return: bb19, unwind: bb127];
    }

    bb19: {
        StorageDead(_48);
        StorageDead(_46);
        _263 = discriminant(_36);
        StorageDead(_36);
        goto -> bb113;
    }

    bb20: {
        StorageDead(_58);
        StorageDead(_57);
        StorageDead(_56);
        StorageDead(_55);
        StorageDead(_54);
        StorageLive(_59);
        _59 = {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
        _52 = std::result::Result::<anchor_lang::prelude::Signer<'_>, anchor_lang::error::Error>::map_err::<anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18}>(move _53, move _59) -> [return: bb21, unwind: bb119];
    }

    bb21: {
        StorageDead(_59);
        StorageDead(_53);
        _51 = <std::result::Result<anchor_lang::prelude::Signer<'_>, anchor_lang::error::Error> as Try>::branch(move _52) -> [return: bb22, unwind: bb119];
    }

    bb22: {
        StorageDead(_52);
        _60 = discriminant(_51);
        switchInt(move _60) -> [0: bb23, 1: bb24, otherwise: bb5];
    }

    bb23: {
        StorageLive(_64);
        _64 = move ((_51 as Continue).0: anchor_lang::prelude::Signer<'_>);
        _50 = move _64;
        StorageDead(_64);
        _247 = discriminant(_51);
        StorageDead(_51);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        _69 = &(*_1);
        StorageLive(_70);
        _70 = &mut (*_2);
        StorageLive(_71);
        _71 = &(*_6);
        StorageLive(_72);
        _72 = &mut (*_4);
        StorageLive(_73);
        _73 = &mut (*_5);
        _68 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::Accounts<'_, AdminDepositBumps>>::try_accounts(move _69, move _70, move _71, move _72, move _73) -> [return: bb26, unwind: bb119];
    }

    bb24: {
        StorageLive(_61);
        _61 = move ((_51 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_63);
        _63 = move _61;
        _0 = <std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _63) -> [return: bb25, unwind: bb126];
    }

    bb25: {
        StorageDead(_63);
        StorageDead(_61);
        _261 = discriminant(_51);
        StorageDead(_51);
        goto -> bb112;
    }

    bb26: {
        StorageDead(_73);
        StorageDead(_72);
        StorageDead(_71);
        StorageDead(_70);
        StorageDead(_69);
        StorageLive(_74);
        _74 = {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
        _67 = std::result::Result::<Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error>::map_err::<anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18}>(move _68, move _74) -> [return: bb27, unwind: bb119];
    }

    bb27: {
        StorageDead(_74);
        StorageDead(_68);
        _66 = <std::result::Result<Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error> as Try>::branch(move _67) -> [return: bb28, unwind: bb119];
    }

    bb28: {
        StorageDead(_67);
        _75 = discriminant(_66);
        switchInt(move _75) -> [0: bb29, 1: bb30, otherwise: bb5];
    }

    bb29: {
        StorageLive(_79);
        _79 = move ((_66 as Continue).0: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        _65 = move _79;
        StorageDead(_79);
        _249 = discriminant(_66);
        StorageDead(_66);
        StorageLive(_80);
        StorageLive(_81);
        StorageLive(_82);
        StorageLive(_83);
        StorageLive(_84);
        _84 = &(*_1);
        StorageLive(_85);
        _85 = &mut (*_2);
        StorageLive(_86);
        _86 = &(*_6);
        StorageLive(_87);
        _87 = &mut (*_4);
        StorageLive(_88);
        _88 = &mut (*_5);
        _83 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as anchor_lang::Accounts<'_, AdminDepositBumps>>::try_accounts(move _84, move _85, move _86, move _87, move _88) -> [return: bb32, unwind: bb118];
    }

    bb30: {
        StorageLive(_76);
        _76 = move ((_66 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_78);
        _78 = move _76;
        _0 = <std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _78) -> [return: bb31, unwind: bb125];
    }

    bb31: {
        StorageDead(_78);
        StorageDead(_76);
        _259 = discriminant(_66);
        StorageDead(_66);
        goto -> bb111;
    }

    bb32: {
        StorageDead(_88);
        StorageDead(_87);
        StorageDead(_86);
        StorageDead(_85);
        StorageDead(_84);
        StorageLive(_89);
        _89 = {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
        _82 = std::result::Result::<Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error>::map_err::<anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18}>(move _83, move _89) -> [return: bb33, unwind: bb118];
    }

    bb33: {
        StorageDead(_89);
        StorageDead(_83);
        _81 = <std::result::Result<Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>, anchor_lang::error::Error> as Try>::branch(move _82) -> [return: bb34, unwind: bb118];
    }

    bb34: {
        StorageDead(_82);
        _90 = discriminant(_81);
        switchInt(move _90) -> [0: bb35, 1: bb36, otherwise: bb5];
    }

    bb35: {
        StorageLive(_94);
        _94 = move ((_81 as Continue).0: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>);
        _80 = move _94;
        StorageDead(_94);
        _251 = discriminant(_81);
        StorageDead(_81);
        StorageLive(_95);
        StorageLive(_96);
        StorageLive(_97);
        StorageLive(_98);
        StorageLive(_99);
        _99 = &(*_1);
        StorageLive(_100);
        _100 = &mut (*_2);
        StorageLive(_101);
        _101 = &(*_6);
        StorageLive(_102);
        _102 = &mut (*_4);
        StorageLive(_103);
        _103 = &mut (*_5);
        _98 = <anchor_lang::prelude::Interface<'_, TokenInterface> as anchor_lang::Accounts<'_, AdminDepositBumps>>::try_accounts(move _99, move _100, move _101, move _102, move _103) -> [return: bb38, unwind: bb117];
    }

    bb36: {
        StorageLive(_91);
        _91 = move ((_81 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_93);
        _93 = move _91;
        _0 = <std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _93) -> [return: bb37, unwind: bb124];
    }

    bb37: {
        StorageDead(_93);
        StorageDead(_91);
        _257 = discriminant(_81);
        StorageDead(_81);
        goto -> bb110;
    }

    bb38: {
        StorageDead(_103);
        StorageDead(_102);
        StorageDead(_101);
        StorageDead(_100);
        StorageDead(_99);
        StorageLive(_104);
        _104 = {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18};
        _97 = std::result::Result::<anchor_lang::prelude::Interface<'_, TokenInterface>, anchor_lang::error::Error>::map_err::<anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5699:10: 5699:18}>(move _98, move _104) -> [return: bb39, unwind: bb117];
    }

    bb39: {
        StorageDead(_104);
        StorageDead(_98);
        _96 = <std::result::Result<anchor_lang::prelude::Interface<'_, TokenInterface>, anchor_lang::error::Error> as Try>::branch(move _97) -> [return: bb40, unwind: bb117];
    }

    bb40: {
        StorageDead(_97);
        _105 = discriminant(_96);
        switchInt(move _105) -> [0: bb41, 1: bb42, otherwise: bb5];
    }

    bb41: {
        StorageLive(_109);
        _109 = move ((_96 as Continue).0: anchor_lang::prelude::Interface<'_, anchor_spl::token_interface::TokenInterface>);
        _95 = move _109;
        StorageDead(_109);
        _253 = discriminant(_96);
        StorageDead(_96);
        StorageLive(_110);
        StorageLive(_111);
        StorageLive(_112);
        StorageLive(_113);
        StorageLive(_114);
        _114 = &_35;
        _113 = &(*_114);
        _112 = <anchor_lang::prelude::AccountLoader<'_, User> as AsRef<anchor_lang::prelude::AccountInfo<'_>>>::as_ref(move _113) -> [return: bb44, unwind: bb117];
    }

    bb42: {
        StorageLive(_106);
        _106 = move ((_96 as Break).0: std::result::Result<std::convert::Infallible, anchor_lang::error::Error>);
        StorageLive(_108);
        _108 = move _106;
        _0 = <std::result::Result<admin::AdminDeposit<'_>, anchor_lang::error::Error> as FromResidual<std::result::Result<Infallible, anchor_lang::error::Error>>>::from_residual(move _108) -> [return: bb43, unwind: bb123];
    }

    bb43: {
        StorageDead(_108);
        StorageDead(_106);
        _255 = discriminant(_96);
        StorageDead(_96);
        goto -> bb109;
    }

    bb44: {
        StorageDead(_113);
        _111 = ((*_112).6: bool);
        switchInt(move _111) -> [0: bb45, otherwise: bb48];
    }

    bb45: {
        StorageDead(_114);
        StorageDead(_112);
        StorageLive(_116);
        StorageLive(_117);
        StorageLive(_118);
        _118 = ConstraintMut;
        _117 = <anchor_lang::error::Error as From<anchor_lang::error::ErrorCode>>::from(move _118) -> [return: bb46, unwind: bb117];
    }

    bb46: {
        StorageDead(_118);
        _116 = anchor_lang::error::Error::with_account_name::<&str>(move _117, const "user") -> [return: bb47, unwind: bb117];
    }

    bb47: {
        StorageDead(_117);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _116);
        StorageDead(_116);
        StorageDead(_111);
        StorageDead(_110);
        goto -> bb109;
    }

    bb48: {
        StorageDead(_114);
        StorageDead(_112);
        _110 = const ();
        StorageDead(_111);
        StorageDead(_110);
        StorageLive(_119);
        StorageLive(_120);
        StorageLive(_121);
        StorageLive(_122);
        StorageLive(_123);
        _123 = &_50;
        _122 = &(*_123);
        _121 = <anchor_lang::prelude::Signer<'_> as AsRef<anchor_lang::prelude::AccountInfo<'_>>>::as_ref(move _122) -> [return: bb49, unwind: bb117];
    }

    bb49: {
        StorageDead(_122);
        _120 = ((*_121).6: bool);
        switchInt(move _120) -> [0: bb50, otherwise: bb53];
    }

    bb50: {
        StorageDead(_123);
        StorageDead(_121);
        StorageLive(_125);
        StorageLive(_126);
        StorageLive(_127);
        _127 = ConstraintMut;
        _126 = <anchor_lang::error::Error as From<anchor_lang::error::ErrorCode>>::from(move _127) -> [return: bb51, unwind: bb117];
    }

    bb51: {
        StorageDead(_127);
        _125 = anchor_lang::error::Error::with_account_name::<&str>(move _126, const "admin") -> [return: bb52, unwind: bb117];
    }

    bb52: {
        StorageDead(_126);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _125);
        StorageDead(_125);
        StorageDead(_120);
        StorageDead(_119);
        goto -> bb109;
    }

    bb53: {
        StorageDead(_123);
        StorageDead(_121);
        _119 = const ();
        StorageDead(_120);
        StorageDead(_119);
        StorageLive(_128);
        StorageLive(_129);
        StorageLive(_130);
        StorageLive(_131);
        StorageLive(_132);
        _132 = &_50;
        _131 = <anchor_lang::prelude::Signer<'_> as anchor_lang::Key>::key(move _132) -> [return: bb54, unwind: bb117];
    }

    bb54: {
        _130 = &_131;
        StorageDead(_132);
        StorageLive(_133);
        StorageLive(_134);
        _134 = admin_hot_wallet::id() -> [return: bb55, unwind: bb117];
    }

    bb55: {
        _133 = &_134;
        _129 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _130, move _133) -> [return: bb56, unwind: bb117];
    }

    bb56: {
        switchInt(move _129) -> [0: bb58, otherwise: bb57];
    }

    bb57: {
        StorageDead(_134);
        StorageDead(_133);
        StorageDead(_131);
        StorageDead(_130);
        goto -> bb62;
    }

    bb58: {
        StorageDead(_134);
        StorageDead(_133);
        StorageDead(_131);
        StorageDead(_130);
        StorageLive(_135);
        StorageLive(_136);
        StorageLive(_137);
        StorageLive(_138);
        _138 = &_50;
        _137 = <anchor_lang::prelude::Signer<'_> as anchor_lang::Key>::key(move _138) -> [return: bb59, unwind: bb117];
    }

    bb59: {
        _136 = &_137;
        StorageDead(_138);
        StorageLive(_139);
        StorageLive(_140);
        StorageLive(_141);
        _273 = (((_20.0: std::ptr::Unique<anchor_lang::prelude::Account<'_, state::state::State>>).0: std::ptr::NonNull<anchor_lang::prelude::Account<'_, state::state::State>>).0: *const anchor_lang::prelude::Account<'_, state::state::State>);
        _141 = &(*_273);
        _140 = <anchor_lang::prelude::Account<'_, state::state::State> as Deref>::deref(move _141) -> [return: bb60, unwind: bb117];
    }

    bb60: {
        StorageDead(_141);
        _139 = &((*_140).0: anchor_lang::prelude::Pubkey);
        _135 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _136, move _139) -> [return: bb61, unwind: bb117];
    }

    bb61: {
        switchInt(move _135) -> [0: bb63, otherwise: bb62];
    }

    bb62: {
        StorageDead(_140);
        StorageDead(_139);
        StorageDead(_137);
        StorageDead(_136);
        _128 = const ();
        StorageDead(_135);
        StorageDead(_129);
        StorageDead(_128);
        StorageLive(_148);
        StorageLive(_149);
        StorageLive(_150);
        StorageLive(_151);
        StorageLive(_152);
        StorageLive(_153);
        StorageLive(_154);
        StorageLive(_155);
        StorageLive(_156);
        _156 = const b"spot_market_vault";
        _155 = &(*_156);
        _154 = <[u8; 17] as AsRef<[u8]>>::as_ref(move _155) -> [return: bb66, unwind: bb117];
    }

    bb63: {
        StorageDead(_140);
        StorageDead(_139);
        StorageDead(_137);
        StorageDead(_136);
        StorageLive(_143);
        StorageLive(_144);
        StorageLive(_145);
        _145 = ConstraintRaw;
        _144 = <anchor_lang::error::Error as From<anchor_lang::error::ErrorCode>>::from(move _145) -> [return: bb64, unwind: bb117];
    }

    bb64: {
        StorageDead(_145);
        _143 = anchor_lang::error::Error::with_account_name::<&str>(move _144, const "admin") -> [return: bb65, unwind: bb117];
    }

    bb65: {
        StorageDead(_144);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _143);
        StorageDead(_143);
        StorageDead(_135);
        StorageDead(_129);
        StorageDead(_128);
        goto -> bb109;
    }

    bb66: {
        _153 = &(*_154);
        StorageDead(_155);
        StorageLive(_157);
        StorageLive(_158);
        StorageLive(_159);
        StorageLive(_160);
        StorageLive(_161);
        _161 = _7;
        _160 = core::num::<impl u16>::to_le_bytes(move _161) -> [return: bb67, unwind: bb117];
    }

    bb67: {
        _159 = &_160;
        StorageDead(_161);
        _158 = <[u8; 2] as AsRef<[u8]>>::as_ref(move _159) -> [return: bb68, unwind: bb117];
    }

    bb68: {
        _157 = &(*_158);
        StorageDead(_159);
        _152 = [move _153, move _157];
        StorageDead(_157);
        StorageDead(_153);
        _151 = &_152;
        _150 = &(*_151);
        _149 = move _150 as &[&[u8]] (PointerCoercion(Unsize));
        StorageDead(_150);
        StorageLive(_162);
        StorageLive(_163);
        _163 = &_1;
        _241 = deref_copy (*_163);
        _162 = &(*_241);
        _148 = anchor_lang::prelude::Pubkey::find_program_address(move _149, move _162) -> [return: bb69, unwind: bb117];
    }

    bb69: {
        StorageDead(_162);
        StorageDead(_149);
        StorageLive(_146);
        _146 = (_148.0: anchor_lang::prelude::Pubkey);
        StorageLive(_147);
        _147 = (_148.1: u8);
        StorageDead(_163);
        StorageDead(_160);
        StorageDead(_158);
        StorageDead(_156);
        StorageDead(_154);
        StorageDead(_152);
        StorageDead(_151);
        StorageDead(_148);
        StorageLive(_164);
        _164 = _147;
        ((*_4).0: u8) = move _164;
        StorageDead(_164);
        StorageLive(_165);
        StorageLive(_166);
        StorageLive(_167);
        StorageLive(_168);
        StorageLive(_169);
        _274 = (((_65.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _169 = &(*_274);
        _168 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::Key>::key(move _169) -> [return: bb70, unwind: bb117];
    }

    bb70: {
        _167 = &_168;
        StorageDead(_169);
        StorageLive(_170);
        _170 = &_146;
        _166 = <anchor_lang::prelude::Pubkey as PartialEq>::ne(move _167, move _170) -> [return: bb71, unwind: bb117];
    }

    bb71: {
        switchInt(move _166) -> [0: bb77, otherwise: bb72];
    }

    bb72: {
        StorageDead(_170);
        StorageDead(_168);
        StorageDead(_167);
        StorageLive(_172);
        StorageLive(_173);
        StorageLive(_174);
        StorageLive(_175);
        _175 = ConstraintSeeds;
        _174 = <anchor_lang::error::Error as From<anchor_lang::error::ErrorCode>>::from(move _175) -> [return: bb73, unwind: bb117];
    }

    bb73: {
        StorageDead(_175);
        _173 = anchor_lang::error::Error::with_account_name::<&str>(move _174, const "spot_market_vault") -> [return: bb74, unwind: bb117];
    }

    bb74: {
        _242 = const true;
        StorageDead(_174);
        StorageLive(_176);
        StorageLive(_177);
        StorageLive(_178);
        _275 = (((_65.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _178 = &(*_275);
        _177 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as anchor_lang::Key>::key(move _178) -> [return: bb75, unwind: bb122];
    }

    bb75: {
        StorageDead(_178);
        StorageLive(_179);
        _179 = _146;
        _176 = (move _177, move _179);
        StorageDead(_179);
        StorageDead(_177);
        _242 = const false;
        _172 = anchor_lang::error::Error::with_pubkeys(move _173, move _176) -> [return: bb76, unwind: bb122];
    }

    bb76: {
        StorageDead(_176);
        _242 = const false;
        StorageDead(_173);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _172);
        StorageDead(_172);
        StorageDead(_166);
        StorageDead(_165);
        goto -> bb108;
    }

    bb77: {
        StorageDead(_170);
        StorageDead(_168);
        StorageDead(_167);
        _165 = const ();
        StorageDead(_166);
        StorageDead(_165);
        StorageLive(_180);
        StorageLive(_181);
        StorageLive(_182);
        StorageLive(_183);
        StorageLive(_184);
        StorageLive(_185);
        _185 = &_65;
        _184 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as AsRef<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>>::as_ref(move _185) -> [return: bb78, unwind: bb117];
    }

    bb78: {
        _183 = &(*_184);
        StorageDead(_185);
        _182 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as AsRef<anchor_lang::prelude::AccountInfo<'_>>>::as_ref(move _183) -> [return: bb79, unwind: bb117];
    }

    bb79: {
        StorageDead(_183);
        _181 = ((*_182).6: bool);
        switchInt(move _181) -> [0: bb80, otherwise: bb83];
    }

    bb80: {
        StorageDead(_184);
        StorageDead(_182);
        StorageLive(_187);
        StorageLive(_188);
        StorageLive(_189);
        _189 = ConstraintMut;
        _188 = <anchor_lang::error::Error as From<anchor_lang::error::ErrorCode>>::from(move _189) -> [return: bb81, unwind: bb117];
    }

    bb81: {
        StorageDead(_189);
        _187 = anchor_lang::error::Error::with_account_name::<&str>(move _188, const "spot_market_vault") -> [return: bb82, unwind: bb117];
    }

    bb82: {
        StorageDead(_188);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _187);
        StorageDead(_187);
        StorageDead(_181);
        StorageDead(_180);
        goto -> bb108;
    }

    bb83: {
        StorageDead(_184);
        StorageDead(_182);
        _180 = const ();
        StorageDead(_181);
        StorageDead(_180);
        StorageLive(_190);
        StorageLive(_191);
        StorageLive(_192);
        StorageLive(_193);
        StorageLive(_194);
        StorageLive(_195);
        _195 = &_80;
        _194 = <Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>> as AsRef<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>>::as_ref(move _195) -> [return: bb84, unwind: bb117];
    }

    bb84: {
        _193 = &(*_194);
        StorageDead(_195);
        _192 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as AsRef<anchor_lang::prelude::AccountInfo<'_>>>::as_ref(move _193) -> [return: bb85, unwind: bb117];
    }

    bb85: {
        StorageDead(_193);
        _191 = ((*_192).6: bool);
        switchInt(move _191) -> [0: bb86, otherwise: bb89];
    }

    bb86: {
        StorageDead(_194);
        StorageDead(_192);
        StorageLive(_197);
        StorageLive(_198);
        StorageLive(_199);
        _199 = ConstraintMut;
        _198 = <anchor_lang::error::Error as From<anchor_lang::error::ErrorCode>>::from(move _199) -> [return: bb87, unwind: bb117];
    }

    bb87: {
        StorageDead(_199);
        _197 = anchor_lang::error::Error::with_account_name::<&str>(move _198, const "admin_token_account") -> [return: bb88, unwind: bb117];
    }

    bb88: {
        StorageDead(_198);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _197);
        StorageDead(_197);
        StorageDead(_191);
        StorageDead(_190);
        goto -> bb108;
    }

    bb89: {
        StorageDead(_194);
        StorageDead(_192);
        _190 = const ();
        StorageDead(_191);
        StorageDead(_190);
        StorageLive(_200);
        StorageLive(_201);
        StorageLive(_202);
        StorageLive(_203);
        StorageLive(_204);
        StorageLive(_205);
        StorageLive(_206);
        StorageLive(_207);
        StorageLive(_208);
        _276 = (((_65.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _208 = &(*_276);
        _207 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as Deref>::deref(move _208) -> [return: bb90, unwind: bb117];
    }

    bb90: {
        _206 = &(*_207);
        _205 = <anchor_spl::token_interface::TokenAccount as Deref>::deref(move _206) -> [return: bb91, unwind: bb117];
    }

    bb91: {
        StorageDead(_208);
        StorageDead(_206);
        _204 = &((*_205).0: anchor_lang::prelude::Pubkey);
        StorageLive(_209);
        StorageLive(_210);
        StorageLive(_211);
        StorageLive(_212);
        StorageLive(_213);
        StorageLive(_214);
        _277 = (((_80.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _214 = &(*_277);
        _213 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as Deref>::deref(move _214) -> [return: bb92, unwind: bb117];
    }

    bb92: {
        _212 = &(*_213);
        _211 = <anchor_spl::token_interface::TokenAccount as Deref>::deref(move _212) -> [return: bb93, unwind: bb117];
    }

    bb93: {
        StorageDead(_214);
        StorageDead(_212);
        _210 = &((*_211).0: anchor_lang::prelude::Pubkey);
        _209 = &(*_210);
        _203 = <anchor_lang::prelude::Pubkey as PartialEq>::eq(move _204, move _209) -> [return: bb94, unwind: bb117];
    }

    bb94: {
        StorageDead(_209);
        StorageDead(_204);
        _202 = &_203;
        _201 = <&bool as Not>::not(move _202) -> [return: bb95, unwind: bb117];
    }

    bb95: {
        switchInt(move _201) -> [0: bb99, otherwise: bb96];
    }

    bb96: {
        StorageDead(_213);
        StorageDead(_211);
        StorageDead(_210);
        StorageDead(_207);
        StorageDead(_205);
        StorageDead(_203);
        StorageDead(_202);
        StorageLive(_216);
        StorageLive(_217);
        StorageLive(_218);
        _218 = ConstraintRaw;
        _217 = <anchor_lang::error::Error as From<anchor_lang::error::ErrorCode>>::from(move _218) -> [return: bb97, unwind: bb117];
    }

    bb97: {
        StorageDead(_218);
        _216 = anchor_lang::error::Error::with_account_name::<&str>(move _217, const "admin_token_account") -> [return: bb98, unwind: bb117];
    }

    bb98: {
        StorageDead(_217);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _216);
        StorageDead(_216);
        StorageDead(_201);
        StorageDead(_200);
        goto -> bb108;
    }

    bb99: {
        StorageDead(_213);
        StorageDead(_211);
        StorageDead(_210);
        StorageDead(_207);
        StorageDead(_205);
        StorageDead(_203);
        StorageDead(_202);
        _200 = const ();
        StorageDead(_201);
        StorageDead(_200);
        StorageLive(_219);
        StorageLive(_220);
        StorageLive(_221);
        StorageLive(_222);
        StorageLive(_223);
        StorageLive(_224);
        StorageLive(_225);
        _278 = (((_80.0: std::ptr::Unique<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: std::ptr::NonNull<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>).0: *const anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _225 = &(*_278);
        _224 = <anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount> as Deref>::deref(move _225) -> [return: bb100, unwind: bb117];
    }

    bb100: {
        _223 = &(*_224);
        _222 = <anchor_spl::token_interface::TokenAccount as Deref>::deref(move _223) -> [return: bb101, unwind: bb117];
    }

    bb101: {
        StorageDead(_225);
        StorageDead(_223);
        _221 = &((*_222).1: anchor_lang::prelude::Pubkey);
        StorageLive(_226);
        StorageLive(_227);
        StorageLive(_228);
        StorageLive(_229);
        StorageLive(_230);
        _230 = &_50;
        _229 = <anchor_lang::prelude::Signer<'_> as anchor_lang::Key>::key(move _230) -> [return: bb102, unwind: bb117];
    }

    bb102: {
        _228 = &_229;
        StorageDead(_230);
        _227 = <anchor_lang::prelude::Pubkey as anchor_lang::Key>::key(move _228) -> [return: bb103, unwind: bb117];
    }

    bb103: {
        _226 = &_227;
        StorageDead(_228);
        _220 = <anchor_lang::prelude::Pubkey as PartialEq>::ne(move _221, move _226) -> [return: bb104, unwind: bb117];
    }

    bb104: {
        switchInt(move _220) -> [0: bb107, otherwise: bb105];
    }

    bb105: {
        StorageDead(_229);
        StorageDead(_227);
        StorageDead(_226);
        StorageDead(_224);
        StorageDead(_222);
        StorageDead(_221);
        StorageLive(_232);
        StorageLive(_233);
        _233 = ConstraintTokenOwner;
        _232 = <anchor_lang::error::ErrorCode as Into<anchor_lang::error::Error>>::into(move _233) -> [return: bb106, unwind: bb117];
    }

    bb106: {
        StorageDead(_233);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Err(move _232);
        StorageDead(_232);
        StorageDead(_220);
        StorageDead(_219);
        goto -> bb108;
    }

    bb107: {
        StorageDead(_229);
        StorageDead(_227);
        StorageDead(_226);
        StorageDead(_224);
        StorageDead(_222);
        StorageDead(_221);
        _219 = const ();
        StorageDead(_220);
        StorageDead(_219);
        StorageLive(_234);
        StorageLive(_235);
        _235 = move _20;
        StorageLive(_236);
        _236 = move _35;
        StorageLive(_237);
        _237 = move _50;
        StorageLive(_238);
        _238 = move _65;
        StorageLive(_239);
        _239 = move _80;
        StorageLive(_240);
        _240 = move _95;
        _234 = admin::AdminDeposit::<'_> { state: move _235, user: move _236, admin: move _237, spot_market_vault: move _238, admin_token_account: move _239, token_program: move _240 };
        StorageDead(_240);
        StorageDead(_239);
        StorageDead(_238);
        StorageDead(_237);
        StorageDead(_236);
        StorageDead(_235);
        _0 = std::result::Result::<admin::AdminDeposit<'_>, anchor_lang::error::Error>::Ok(move _234);
        StorageDead(_234);
        StorageDead(_147);
        StorageDead(_146);
        StorageDead(_95);
        StorageDead(_80);
        StorageDead(_65);
        StorageDead(_50);
        StorageDead(_35);
        StorageDead(_20);
        StorageDead(_7);
        StorageDead(_6);
        goto -> bb116;
    }

    bb108: {
        StorageDead(_147);
        StorageDead(_146);
        goto -> bb109;
    }

    bb109: {
        StorageDead(_95);
        drop(_80) -> [return: bb110, unwind: bb118];
    }

    bb110: {
        StorageDead(_80);
        drop(_65) -> [return: bb111, unwind: bb119];
    }

    bb111: {
        StorageDead(_65);
        goto -> bb112;
    }

    bb112: {
        StorageDead(_50);
        goto -> bb113;
    }

    bb113: {
        StorageDead(_35);
        drop(_20) -> [return: bb114, unwind: bb120];
    }

    bb114: {
        StorageDead(_20);
        StorageDead(_7);
        goto -> bb115;
    }

    bb115: {
        StorageDead(_6);
        goto -> bb116;
    }

    bb116: {
        return;
    }

    bb117 (cleanup): {
        drop(_80) -> [return: bb118, unwind terminate(cleanup)];
    }

    bb118 (cleanup): {
        drop(_65) -> [return: bb119, unwind terminate(cleanup)];
    }

    bb119 (cleanup): {
        drop(_20) -> [return: bb120, unwind terminate(cleanup)];
    }

    bb120 (cleanup): {
        resume;
    }

    bb121 (cleanup): {
        drop(_173) -> [return: bb117, unwind terminate(cleanup)];
    }

    bb122 (cleanup): {
        switchInt(_242) -> [0: bb117, otherwise: bb121];
    }

    bb123 (cleanup): {
        _267 = discriminant(_96);
        goto -> bb117;
    }

    bb124 (cleanup): {
        _268 = discriminant(_81);
        goto -> bb118;
    }

    bb125 (cleanup): {
        _269 = discriminant(_66);
        goto -> bb119;
    }

    bb126 (cleanup): {
        _270 = discriminant(_51);
        goto -> bb119;
    }

    bb127 (cleanup): {
        _271 = discriminant(_36);
        goto -> bb119;
    }

    bb128 (cleanup): {
        _272 = discriminant(_21);
        goto -> bb120;
    }
}

alloc242 (size: 17, align: 1) {
    0x00 │ 73 70 6f 74 5f 6d 61 72 6b 65 74 5f 76 61 75 6c │ spot_market_vaul
    0x10 │ 74                                              │ t
}
