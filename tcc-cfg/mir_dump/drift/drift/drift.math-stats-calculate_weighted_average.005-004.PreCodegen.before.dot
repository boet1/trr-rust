digraph Mir_0_2852 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_weighted_average(_1: i64, _2: i64, _3: i64, _4: i64, _5: std::option::Option&lt;i64&gt;) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _6: i128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: i64;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _18: i64;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: i128;<br align="left"/>let _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: i128;<br align="left"/>let mut _36: i128;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _38: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _39: i64;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i128;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: i128;<br align="left"/>let _50: i128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _53: i128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _56: i64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: i128;<br align="left"/>let mut _62: i128;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _64: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _65: i64;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: i128;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: i128;<br align="left"/>let _76: ();<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: i64;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: i64;<br align="left"/>let _81: ();<br align="left"/>let mut _82: bool;<br align="left"/>let mut _83: i64;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: i64;<br align="left"/>let _86: i64;<br align="left"/>let mut _87: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _88: Closure(DefId(0:2853 ~ drift[d311]::math::stats::calculate_weighted_average::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; i64, []), (&amp;ReErased i64, &amp;ReErased i128, &amp;ReErased i128)]);<br align="left"/>let mut _89: &amp;ReErased i64;<br align="left"/>let mut _90: &amp;ReErased i128;<br align="left"/>let mut _91: &amp;ReErased i128;<br align="left"/>let _92: i64;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _94: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _95: i128;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _97: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _98: i128;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _100: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _101: i128;<br align="left"/>let mut _102: i128;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _107: i128;<br align="left"/>let mut _108: i128;<br align="left"/>let mut _109: isize;<br align="left"/>let _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _113: i128;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _118: i64;<br align="left"/>let _119: ();<br align="left"/>let mut _120: bool;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: bool;<br align="left"/>let mut _123: i64;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: i64;<br align="left"/>let mut _126: i64;<br align="left"/>let mut _127: i64;<br align="left"/>debug data1 =&gt; _1;<br align="left"/>debug data2 =&gt; _2;<br align="left"/>debug weight1 =&gt; _3;<br align="left"/>debug weight2 =&gt; _4;<br align="left"/>debug bias =&gt; _5;<br align="left"/>debug denominator =&gt; _6;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug prev_twap_99 =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug latest_price_01 =&gt; _50;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug bias =&gt; _86;<br align="left"/>debug twap =&gt; _92;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>debug residual =&gt; _110;<br align="left"/>debug val =&gt; _113;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>>;
    bb0__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _3<br/>StorageLive(_13)<br/>_13 = _4<br/></td></tr><tr><td align="left">_11 = &lt;i64 as SafeMath&gt;::safe_add(move _12, move _13)</td></tr></table>>];
    bb1__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb2__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_14 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb3__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_10 as Continue).0: i64)<br/>_9 = _18<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_8 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _9)</td></tr></table>>];
    bb4__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_17)<br/>_17 = _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb6__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb8__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_19 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_7 as Continue).0: i128)<br/>_6 = _23<br/>StorageDead(_23)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _1<br/></td></tr><tr><td align="left">_29 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _30)</td></tr></table>>];
    bb10__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb13__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_31 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb14__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_28 as Continue).0: i128)<br/>_27 = _35<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _3<br/></td></tr><tr><td align="left">_38 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _39)</td></tr></table>>];
    bb15__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb16__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb18__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_40 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb19__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_37 as Continue).0: i128)<br/>_36 = _44<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_26 = &lt;i128 as SafeMath&gt;::safe_mul(move _27, move _36)</td></tr></table>>];
    bb20__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb21__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb23__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_45 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb24__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_25 as Continue).0: i128)<br/>_24 = _49<br/>StorageDead(_49)<br/>StorageDead(_37)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _2<br/></td></tr><tr><td align="left">_55 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _56)</td></tr></table>>];
    bb25__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb26__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb28__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_57 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb29__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_54 as Continue).0: i128)<br/>_53 = _61<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _4<br/></td></tr><tr><td align="left">_64 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _65)</td></tr></table>>];
    bb30__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb31__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb33__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_66 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb34__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_63 as Continue).0: i128)<br/>_62 = _70<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_52 = &lt;i128 as SafeMath&gt;::safe_mul(move _53, move _62)</td></tr></table>>];
    bb35__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb36__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb38__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_71 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb39__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_51 as Continue).0: i128)<br/>_50 = _75<br/>StorageDead(_75)<br/>StorageDead(_63)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _3<br/>_77 = Eq(move _78, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb40__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb41__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_80)<br/>_80 = _2<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _80)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_76 = const ()<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = _4<br/>_82 = Eq(move _83, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb44__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageLive(_85)<br/>_85 = _1<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _85)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_81 = const ()<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _5<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = &amp;_4<br/>StorageLive(_90)<br/>_90 = &amp;_50<br/>StorageLive(_91)<br/>_91 = &amp;_24<br/>_88 = {closure@programs/drift/src/math/stats.rs:40:41: 40:43} { weight2: move _89, latest_price_01: move _90, prev_twap_99: move _91 }<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_86 = Option::&lt;i64&gt;::unwrap_or_else::&lt;{closure@programs/drift/src/math/stats.rs:40:41: 40:43}&gt;(move _87, move _88)</td></tr></table>>];
    bb46__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _24<br/>StorageLive(_102)<br/>_102 = _50<br/></td></tr><tr><td align="left">_100 = &lt;i128 as SafeMath&gt;::safe_add(move _101, move _102)</td></tr></table>>];
    bb47__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb48__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_103 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb49__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_99 as Continue).0: i128)<br/>_98 = _107<br/>StorageDead(_107)<br/>StorageLive(_108)<br/>_108 = _6<br/></td></tr><tr><td align="left">_97 = &lt;i128 as SafeMath&gt;::safe_div(move _98, move _108)</td></tr></table>>];
    bb50__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_106)<br/>_106 = _104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb51__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb53__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_109 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb54__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_96 as Continue).0: i128)<br/>_95 = _113<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_94 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _95)</td></tr></table>>];
    bb55__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_112)<br/>_112 = _110<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _112)</td></tr></table>>];
    bb56__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb58__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>_114 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb59__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_93 as Continue).0: i64)<br/>_92 = _118<br/>StorageDead(_118)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = _92<br/>_120 = Eq(move _121, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb60__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_117)<br/>_117 = _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb61__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = _86<br/>_122 = Lt(move _123, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb63__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageLive(_125)<br/>_125 = _92<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _125)<br/>StorageDead(_125)<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_119 = const ()<br/>StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageLive(_126)<br/>_126 = _92<br/>StorageLive(_127)<br/>_127 = _86<br/></td></tr><tr><td align="left">_0 = &lt;i64 as SafeMath&gt;::safe_add(move _126, move _127)</td></tr></table>>];
    bb67__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_92)<br/>StorageDead(_86)<br/>StorageDead(_50)<br/>StorageDead(_24)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2852 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2852 -> bb1__0_2852 [label="return"];
    bb1__0_2852 -> bb2__0_2852 [label="return"];
    bb2__0_2852 -> bb3__0_2852 [label="0"];
    bb2__0_2852 -> bb5__0_2852 [label="1"];
    bb2__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb3__0_2852 -> bb7__0_2852 [label="return"];
    bb5__0_2852 -> bb6__0_2852 [label="return"];
    bb6__0_2852 -> bb77__0_2852 [label=""];
    bb7__0_2852 -> bb8__0_2852 [label="return"];
    bb8__0_2852 -> bb9__0_2852 [label="0"];
    bb8__0_2852 -> bb10__0_2852 [label="1"];
    bb8__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb9__0_2852 -> bb12__0_2852 [label="return"];
    bb10__0_2852 -> bb11__0_2852 [label="return"];
    bb11__0_2852 -> bb77__0_2852 [label=""];
    bb12__0_2852 -> bb13__0_2852 [label="return"];
    bb13__0_2852 -> bb14__0_2852 [label="0"];
    bb13__0_2852 -> bb15__0_2852 [label="1"];
    bb13__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb14__0_2852 -> bb17__0_2852 [label="return"];
    bb15__0_2852 -> bb16__0_2852 [label="return"];
    bb16__0_2852 -> bb75__0_2852 [label=""];
    bb17__0_2852 -> bb18__0_2852 [label="return"];
    bb18__0_2852 -> bb19__0_2852 [label="0"];
    bb18__0_2852 -> bb20__0_2852 [label="1"];
    bb18__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb19__0_2852 -> bb22__0_2852 [label="return"];
    bb20__0_2852 -> bb21__0_2852 [label="return"];
    bb21__0_2852 -> bb74__0_2852 [label=""];
    bb22__0_2852 -> bb23__0_2852 [label="return"];
    bb23__0_2852 -> bb24__0_2852 [label="0"];
    bb23__0_2852 -> bb25__0_2852 [label="1"];
    bb23__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb24__0_2852 -> bb27__0_2852 [label="return"];
    bb25__0_2852 -> bb26__0_2852 [label="return"];
    bb26__0_2852 -> bb74__0_2852 [label=""];
    bb27__0_2852 -> bb28__0_2852 [label="return"];
    bb28__0_2852 -> bb29__0_2852 [label="0"];
    bb28__0_2852 -> bb30__0_2852 [label="1"];
    bb28__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb29__0_2852 -> bb32__0_2852 [label="return"];
    bb30__0_2852 -> bb31__0_2852 [label="return"];
    bb31__0_2852 -> bb72__0_2852 [label=""];
    bb32__0_2852 -> bb33__0_2852 [label="return"];
    bb33__0_2852 -> bb34__0_2852 [label="0"];
    bb33__0_2852 -> bb35__0_2852 [label="1"];
    bb33__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb34__0_2852 -> bb37__0_2852 [label="return"];
    bb35__0_2852 -> bb36__0_2852 [label="return"];
    bb36__0_2852 -> bb71__0_2852 [label=""];
    bb37__0_2852 -> bb38__0_2852 [label="return"];
    bb38__0_2852 -> bb39__0_2852 [label="0"];
    bb38__0_2852 -> bb40__0_2852 [label="1"];
    bb38__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb39__0_2852 -> bb43__0_2852 [label="0"];
    bb39__0_2852 -> bb42__0_2852 [label="otherwise"];
    bb40__0_2852 -> bb41__0_2852 [label="return"];
    bb41__0_2852 -> bb71__0_2852 [label=""];
    bb42__0_2852 -> bb73__0_2852 [label=""];
    bb43__0_2852 -> bb45__0_2852 [label="0"];
    bb43__0_2852 -> bb44__0_2852 [label="otherwise"];
    bb44__0_2852 -> bb73__0_2852 [label=""];
    bb45__0_2852 -> bb46__0_2852 [label="return"];
    bb46__0_2852 -> bb47__0_2852 [label="return"];
    bb47__0_2852 -> bb48__0_2852 [label="return"];
    bb48__0_2852 -> bb49__0_2852 [label="0"];
    bb48__0_2852 -> bb50__0_2852 [label="1"];
    bb48__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb49__0_2852 -> bb52__0_2852 [label="return"];
    bb50__0_2852 -> bb51__0_2852 [label="return"];
    bb51__0_2852 -> bb68__0_2852 [label=""];
    bb52__0_2852 -> bb53__0_2852 [label="return"];
    bb53__0_2852 -> bb54__0_2852 [label="0"];
    bb53__0_2852 -> bb55__0_2852 [label="1"];
    bb53__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb54__0_2852 -> bb57__0_2852 [label="return"];
    bb55__0_2852 -> bb56__0_2852 [label="return"];
    bb56__0_2852 -> bb68__0_2852 [label=""];
    bb57__0_2852 -> bb58__0_2852 [label="return"];
    bb58__0_2852 -> bb59__0_2852 [label="0"];
    bb58__0_2852 -> bb60__0_2852 [label="1"];
    bb58__0_2852 -> bb4__0_2852 [label="otherwise"];
    bb59__0_2852 -> bb63__0_2852 [label="0"];
    bb59__0_2852 -> bb62__0_2852 [label="otherwise"];
    bb60__0_2852 -> bb61__0_2852 [label="return"];
    bb61__0_2852 -> bb69__0_2852 [label=""];
    bb62__0_2852 -> bb65__0_2852 [label="0"];
    bb62__0_2852 -> bb64__0_2852 [label="otherwise"];
    bb63__0_2852 -> bb66__0_2852 [label=""];
    bb64__0_2852 -> bb70__0_2852 [label=""];
    bb65__0_2852 -> bb66__0_2852 [label=""];
    bb66__0_2852 -> bb67__0_2852 [label="return"];
    bb67__0_2852 -> bb79__0_2852 [label=""];
    bb68__0_2852 -> bb69__0_2852 [label=""];
    bb69__0_2852 -> bb70__0_2852 [label=""];
    bb70__0_2852 -> bb73__0_2852 [label=""];
    bb71__0_2852 -> bb72__0_2852 [label=""];
    bb72__0_2852 -> bb73__0_2852 [label=""];
    bb73__0_2852 -> bb76__0_2852 [label=""];
    bb74__0_2852 -> bb75__0_2852 [label=""];
    bb75__0_2852 -> bb76__0_2852 [label=""];
    bb76__0_2852 -> bb78__0_2852 [label=""];
    bb77__0_2852 -> bb78__0_2852 [label=""];
    bb78__0_2852 -> bb79__0_2852 [label=""];
}
