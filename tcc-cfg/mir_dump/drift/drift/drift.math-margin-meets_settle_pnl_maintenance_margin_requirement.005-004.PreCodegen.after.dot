digraph Mir_0_2469 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn meets_settle_pnl_maintenance_margin_requirement(_1: &amp;ReErased state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;bool, error::ErrorCode&gt;<br align="left"/>let mut _5: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _6: &amp;ReErased state::user::User;<br align="left"/>let mut _7: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _8: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _10: state::margin_calculation::MarginContext;<br align="left"/>let mut _11: state::margin_calculation::MarginContext;<br align="left"/>let mut _12: math::margin::MarginRequirementType;<br align="left"/>let mut _13: Closure(DefId(0:2470 ~ drift[d311]::math::margin::meets_settle_pnl_maintenance_margin_requirement::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((state::margin_calculation::MarginCalculation,)) -&gt; bool, []), ()]);<br align="left"/>debug user =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug oracle_map =&gt; _4;<br align="left"/>>;
    bb0__0_2469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/>StorageLive(_7)<br/>_7 = &amp;(*_2)<br/>StorageLive(_8)<br/>_8 = &amp;(*_3)<br/>StorageLive(_9)<br/>_9 = &amp;mut (*_4)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = math::margin::MarginRequirementType::Maintenance<br/></td></tr><tr><td align="left">_11 = MarginContext::standard(move _12)</td></tr></table>>];
    bb1__0_2469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = MarginContext::strict(move _11, const true)</td></tr></table>>];
    bb2__0_2469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">_5 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _6, move _7, move _8, move _9, move _10)</td></tr></table>>];
    bb3__0_2469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_13)<br/>_13 = {closure@programs/drift/src/math/margin.rs:751:10: 751:16}<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;MarginCalculation, error::ErrorCode&gt;::map::&lt;bool, {closure@programs/drift/src/math/margin.rs:751:10: 751:16}&gt;(move _5, move _13)</td></tr></table>>];
    bb4__0_2469 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2469 -> bb1__0_2469 [label="return"];
    bb1__0_2469 -> bb2__0_2469 [label="return"];
    bb2__0_2469 -> bb3__0_2469 [label="return"];
    bb3__0_2469 -> bb4__0_2469 [label="return"];
}
