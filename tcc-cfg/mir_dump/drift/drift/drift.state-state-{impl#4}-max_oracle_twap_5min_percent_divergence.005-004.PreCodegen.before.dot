digraph Mir_0_4177 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(_1: &amp;ReErased state::state::OracleGuardRails) -&gt; u64<br align="left"/>let mut _2: u64;<br align="left"/>let mut _3: u64;<br align="left"/>let mut _4: bool;<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_4177 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>_2 = (((*_1).0: state::state::PriceDivergenceGuardRails).1: u64)<br/>StorageLive(_3)<br/>_4 = Eq(const 2_u64, const 0_u64)<br/></td></tr><tr><td align="left">assert(!move _4, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb1__0_4177 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_3 = Div(const _, const 2_u64)<br/></td></tr><tr><td align="left">_0 = &lt;u64 as Ord&gt;::max(move _2, move _3)</td></tr></table>>];
    bb2__0_4177 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4177 -> bb1__0_4177 [label="success"];
    bb1__0_4177 -> bb2__0_4177 [label="return"];
}
