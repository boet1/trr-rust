// MIR for `state::state::<impl at programs/drift/src/state/state.rs:17:10: 17:17>::default` before PreCodegen

fn state::state::<impl at programs/drift/src/state/state.rs:17:10: 17:17>::default() -> state::state::State {
    let mut _0: state::state::State;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: anchor_lang::prelude::Pubkey;
    let mut _4: anchor_lang::prelude::Pubkey;
    let mut _5: anchor_lang::prelude::Pubkey;
    let mut _6: state::state::FeeStructure;
    let mut _7: state::state::FeeStructure;
    let mut _8: state::state::OracleGuardRails;
    let mut _9: u64;
    let mut _10: u64;
    let mut _11: u64;
    let mut _12: u32;
    let mut _13: u16;
    let mut _14: u16;
    let mut _15: u16;
    let mut _16: u8;
    let mut _17: u8;
    let mut _18: u8;
    let mut _19: u8;
    let mut _20: u8;
    let mut _21: u8;
    let mut _22: u16;
    let mut _23: u16;
    let mut _24: u16;
    let mut _25: u8;
    let mut _26: [u8; 9];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <state::state::FeeStructure as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <state::state::FeeStructure as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <state::state::OracleGuardRails as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <u64 as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <u64 as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageLive(_11);
        _11 = <u64 as Default>::default() -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageLive(_12);
        _12 = <u32 as Default>::default() -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageLive(_13);
        _13 = <u16 as Default>::default() -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageLive(_14);
        _14 = <u16 as Default>::default() -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageLive(_15);
        _15 = <u16 as Default>::default() -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageLive(_16);
        _16 = <u8 as Default>::default() -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageLive(_17);
        _17 = <u8 as Default>::default() -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageLive(_18);
        _18 = <u8 as Default>::default() -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageLive(_19);
        _19 = <u8 as Default>::default() -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageLive(_20);
        _20 = <u8 as Default>::default() -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageLive(_21);
        _21 = <u8 as Default>::default() -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageLive(_22);
        _22 = <u16 as Default>::default() -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageLive(_23);
        _23 = <u16 as Default>::default() -> [return: bb23, unwind continue];
    }

    bb23: {
        StorageLive(_24);
        _24 = <u16 as Default>::default() -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageLive(_25);
        _25 = <u8 as Default>::default() -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageLive(_26);
        _26 = <[u8; 9] as Default>::default() -> [return: bb26, unwind continue];
    }

    bb26: {
        _0 = state::state::State { admin: move _1, whitelist_mint: move _2, discount_mint: move _3, signer: move _4, srm_vault: move _5, perp_fee_structure: move _6, spot_fee_structure: move _7, oracle_guard_rails: move _8, number_of_authorities: move _9, number_of_sub_accounts: move _10, lp_cooldown_time: move _11, liquidation_margin_buffer_ratio: move _12, settlement_duration: move _13, number_of_markets: move _14, number_of_spot_markets: move _15, signer_nonce: move _16, min_perp_auction_duration: move _17, default_market_order_time_in_force: move _18, default_spot_auction_duration: move _19, exchange_status: move _20, liquidation_duration: move _21, initial_pct_to_liquidate: move _22, max_number_of_sub_accounts: move _23, max_initialize_user_fee: move _24, feature_bit_flags: move _25, padding: move _26 };
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
