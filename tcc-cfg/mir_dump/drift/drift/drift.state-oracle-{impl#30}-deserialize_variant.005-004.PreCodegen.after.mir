// MIR for `state::oracle::<impl at programs/drift/src/state/oracle.rs:115:22: 115:39>::deserialize_variant` after PreCodegen

fn state::oracle::<impl at programs/drift/src/state/oracle.rs:115:22: 115:39>::deserialize_variant(_1: &mut R, _2: u8) -> std::result::Result<state::oracle::OracleSource, std::io::Error> {
    debug reader => _1;
    debug variant_idx => _2;
    let mut _0: std::result::Result<state::oracle::OracleSource, std::io::Error>;
    let mut _3: state::oracle::OracleSource;
    let mut _4: !;
    let mut _5: std::io::Error;
    let mut _6: std::io::ErrorKind;
    let mut _7: std::string::String;
    let _8: std::string::String;
    let mut _9: std::fmt::Arguments<'_>;
    let mut _10: &[&str];
    let mut _11: &[&str; 1];
    let _12: &[&str; 1];
    let _13: [&str; 1];
    let mut _14: &[core::fmt::rt::Argument<'_>];
    let mut _15: &[core::fmt::rt::Argument<'_>; 1];
    let _16: &[core::fmt::rt::Argument<'_>; 1];
    let _17: [core::fmt::rt::Argument<'_>; 1];
    let mut _18: core::fmt::rt::Argument<'_>;
    let mut _19: &u8;
    let _20: &u8;
    let mut _21: state::oracle::OracleSource;
    let mut _22: &[&str; 1];
    scope 1 {
        debug return_value => _3;
    }
    scope 2 {
        debug res => _8;
    }

    bb0: {
        StorageLive(_3);
        switchInt(_2) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, 8: bb10, 9: bb11, 10: bb12, 11: bb13, 12: bb14, 13: bb15, 14: bb16, 15: bb17, otherwise: bb1];
    }

    bb1: {
        StorageLive(_5);
        StorageLive(_6);
        _6 = InvalidInput;
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        _22 = const _;
        _12 = &(*_22);
        _11 = &(*_12);
        _10 = move _11 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_11);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        _20 = &_2;
        _19 = &(*_20);
        _18 = core::fmt::rt::Argument::<'_>::new_debug::<u8>(move _19) -> [return: bb18, unwind continue];
    }

    bb2: {
        _3 = state::oracle::OracleSource::Pyth;
        goto -> bb22;
    }

    bb3: {
        _3 = state::oracle::OracleSource::Switchboard;
        goto -> bb22;
    }

    bb4: {
        _3 = state::oracle::OracleSource::QuoteAsset;
        goto -> bb22;
    }

    bb5: {
        _3 = state::oracle::OracleSource::Pyth1K;
        goto -> bb22;
    }

    bb6: {
        _3 = state::oracle::OracleSource::Pyth1M;
        goto -> bb22;
    }

    bb7: {
        _3 = state::oracle::OracleSource::PythStableCoin;
        goto -> bb22;
    }

    bb8: {
        _3 = state::oracle::OracleSource::Prelaunch;
        goto -> bb22;
    }

    bb9: {
        _3 = state::oracle::OracleSource::PythPull;
        goto -> bb22;
    }

    bb10: {
        _3 = state::oracle::OracleSource::Pyth1KPull;
        goto -> bb22;
    }

    bb11: {
        _3 = state::oracle::OracleSource::Pyth1MPull;
        goto -> bb22;
    }

    bb12: {
        _3 = state::oracle::OracleSource::PythStableCoinPull;
        goto -> bb22;
    }

    bb13: {
        _3 = state::oracle::OracleSource::SwitchboardOnDemand;
        goto -> bb22;
    }

    bb14: {
        _3 = state::oracle::OracleSource::PythLazer;
        goto -> bb22;
    }

    bb15: {
        _3 = state::oracle::OracleSource::PythLazer1K;
        goto -> bb22;
    }

    bb16: {
        _3 = state::oracle::OracleSource::PythLazer1M;
        goto -> bb22;
    }

    bb17: {
        _3 = state::oracle::OracleSource::PythLazerStableCoin;
        goto -> bb22;
    }

    bb18: {
        StorageDead(_19);
        _17 = [move _18];
        StorageDead(_18);
        _16 = &_17;
        _15 = &(*_16);
        _14 = move _15 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_15);
        _9 = Arguments::<'_>::new_v1(move _10, move _14) -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageDead(_14);
        StorageDead(_10);
        _8 = format(move _9) -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageDead(_9);
        StorageDead(_20);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_12);
        _7 = move _8;
        StorageDead(_8);
        _5 = std::io::Error::new::<String>(move _6, move _7) -> [return: bb21, unwind: bb24];
    }

    bb21: {
        StorageDead(_7);
        StorageDead(_6);
        _0 = std::result::Result::<state::oracle::OracleSource, std::io::Error>::Err(move _5);
        StorageDead(_5);
        StorageDead(_3);
        goto -> bb23;
    }

    bb22: {
        StorageLive(_21);
        _21 = _3;
        _0 = std::result::Result::<state::oracle::OracleSource, std::io::Error>::Ok(move _21);
        StorageDead(_21);
        StorageDead(_3);
        goto -> bb23;
    }

    bb23: {
        return;
    }

    bb24 (cleanup): {
        resume;
    }
}
