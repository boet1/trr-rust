digraph Mir_0_196 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn apply_rebase_to_insurance_fund_stake(_1: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake, _2: &amp;ReErased mut state::spot_market::SpotMarket) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: u128;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: u128;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: ();<br align="left"/>let _14: error::ErrorCode;<br align="left"/>let _15: ();<br align="left"/>let mut _16: &amp;ReErased str;<br align="left"/>let _17: &amp;ReErased str;<br align="left"/>let mut _18: &amp;ReErased std::string::String;<br align="left"/>let _19: &amp;ReErased std::string::String;<br align="left"/>let _20: std::string::String;<br align="left"/>let _21: std::string::String;<br align="left"/>let mut _22: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _23: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _24: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _25: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _26: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _27: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _28: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _30: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _31: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _32: &amp;ReErased error::ErrorCode;<br align="left"/>let _33: &amp;ReErased error::ErrorCode;<br align="left"/>let _34: ();<br align="left"/>let mut _35: &amp;ReErased str;<br align="left"/>let _36: &amp;ReErased str;<br align="left"/>let mut _37: error::ErrorCode;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: ();<br align="left"/>let _43: u32;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _45: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _46: u128;<br align="left"/>let mut _47: u128;<br align="left"/>let mut _48: u128;<br align="left"/>let mut _49: (u128, bool);<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: u32;<br align="left"/>let _55: u128;<br align="left"/>let mut _56: u32;<br align="left"/>let _57: ();<br align="left"/>let mut _58: &amp;ReErased str;<br align="left"/>let _59: &amp;ReErased str;<br align="left"/>let mut _60: &amp;ReErased std::string::String;<br align="left"/>let _61: &amp;ReErased std::string::String;<br align="left"/>let _62: std::string::String;<br align="left"/>let _63: std::string::String;<br align="left"/>let mut _64: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _65: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _66: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _67: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _68: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _69: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _70: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _71: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _72: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _73: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _74: &amp;ReErased u128;<br align="left"/>let _75: &amp;ReErased u128;<br align="left"/>let mut _76: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased u128;<br align="left"/>let _78: &amp;ReErased u128;<br align="left"/>let mut _79: u128;<br align="left"/>let _80: u128;<br align="left"/>let mut _81: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let _82: u128;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _84: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _85: u128;<br align="left"/>let mut _86: u128;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: u128;<br align="left"/>let _92: ();<br align="left"/>let mut _93: &amp;ReErased str;<br align="left"/>let _94: &amp;ReErased str;<br align="left"/>let mut _95: &amp;ReErased std::string::String;<br align="left"/>let _96: &amp;ReErased std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let _98: std::string::String;<br align="left"/>let mut _99: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _102: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _103: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _107: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _108: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased u128;<br align="left"/>let _110: &amp;ReErased u128;<br align="left"/>let _111: ();<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _113: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _114: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _115: u128;<br align="left"/>let mut _116: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: ();<br align="left"/>let mut _122: u128;<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _124: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _125: u128;<br align="left"/>let mut _126: u128;<br align="left"/>let mut _127: isize;<br align="left"/>let _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _129: !;<br align="left"/>let mut _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _131: u128;<br align="left"/>let mut _132: ();<br align="left"/>let mut _133: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug insurance_fund_stake =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug error_code =&gt; _14;<br align="left"/>debug res =&gt; _21;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug expo_diff =&gt; _43;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug rebase_divisor =&gt; _55;<br align="left"/>debug res =&gt; _63;<br align="left"/>debug old_if_shares =&gt; _80;<br align="left"/>debug new_if_shares =&gt; _82;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug res =&gt; _98;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug residual =&gt; _128;<br align="left"/>debug val =&gt; _131;<br align="left"/>>;
    bb0__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = (((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>StorageLive(_6)<br/>_6 = ((*_1).3: u128)<br/>_4 = Ne(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = (((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>StorageLive(_12)<br/>_12 = ((*_1).3: u128)<br/>_10 = Gt(move _11, move _12)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb2__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_13)<br/>_13 = ()<br/>_9 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_14)<br/>_14 = error::ErrorCode::InvalidIFRebase<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_135 = const _<br/>_25 = &amp;(*_135)<br/>_24 = &amp;(*_25)<br/>_23 = move _24 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_24)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;_14<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _32)</td></tr></table>>];
    bb4__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = [move _31]<br/>StorageDead(_31)<br/>_29 = &amp;_30<br/>_28 = &amp;(*_29)<br/>_27 = move _28 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_22 = Arguments::&lt;'_&gt;::new_v1(move _23, move _27)</td></tr></table>>];
    bb5__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = format(move _22)</td></tr></table>>];
    bb6__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_33)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_25)<br/>_20 = move _21<br/>StorageDead(_21)<br/>_19 = &amp;_20<br/>_18 = &amp;(*_19)<br/></td></tr><tr><td align="left">_17 = &lt;String as Deref&gt;::deref(move _18)</td></tr></table>>];
    bb7__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_16 = &amp;(*_17)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_15 = solana_program::log::sol_log(move _16)</td></tr></table>>];
    bb8__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb9__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = const &quot;Rebase expo out of bounds&quot;<br/>_35 = &amp;(*_36)<br/></td></tr><tr><td align="left">_34 = solana_program::log::sol_log(move _35)</td></tr></table>>];
    bb10__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_36)<br/>StorageDead(_34)<br/>StorageLive(_37)<br/>_37 = _14<br/>_9 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _37)<br/>StorageDead(_37)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb12__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_38 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb13__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_8 as Continue).0: ())<br/>_7 = _42<br/>StorageDead(_42)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = (((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>StorageLive(_48)<br/>_48 = ((*_1).3: u128)<br/>_49 = CheckedSub(_47, _48)<br/></td></tr><tr><td align="left">assert(!move (_49.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _47, move _48)</td></tr></table>>];
    bb14__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb15__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb16__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_46 = move (_49.0: u128)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;u128 as Cast&gt;::cast::&lt;u32&gt;(move _46)</td></tr></table>>];
    bb18__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb19__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_50 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb20__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_44 as Continue).0: u32)<br/>_43 = _54<br/>StorageDead(_54)<br/>StorageDead(_44)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _43<br/></td></tr><tr><td align="left">_55 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _56)</td></tr></table>>];
    bb21__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb22__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_134 = const _<br/>_67 = &amp;(*_134)<br/>_66 = &amp;(*_67)<br/>_65 = move _66 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_66)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;((*_1).3: u128)<br/>_74 = &amp;(*_75)<br/></td></tr><tr><td align="left">_73 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _74)</td></tr></table>>];
    bb24__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = &amp;(((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>_77 = &amp;(*_78)<br/></td></tr><tr><td align="left">_76 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _77)</td></tr></table>>];
    bb25__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_72 = [move _73, move _76]<br/>StorageDead(_76)<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/>_69 = move _70 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_64 = Arguments::&lt;'_&gt;::new_v1(move _65, move _69)</td></tr></table>>];
    bb26__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = format(move _64)</td></tr></table>>];
    bb27__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_67)<br/>_62 = move _63<br/>StorageDead(_63)<br/>_61 = &amp;_62<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_59 = &lt;String as Deref&gt;::deref(move _60)</td></tr></table>>];
    bb28__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_58 = &amp;(*_59)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_57 = solana_program::log::sol_log(move _58)</td></tr></table>>];
    bb29__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb30__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_57)<br/>StorageLive(_79)<br/>_79 = (((*_2).9: state::spot_market::InsuranceFund).3: u128)<br/>((*_1).3: u128) = move _79<br/>StorageDead(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;(*_1)<br/></td></tr><tr><td align="left">_80 = InsuranceFundStake::unchecked_if_shares(move _81)</td></tr></table>>];
    bb31__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = _80<br/>StorageLive(_86)<br/>_86 = _55<br/></td></tr><tr><td align="left">_84 = &lt;u128 as SafeMath&gt;::safe_div(move _85, move _86)</td></tr></table>>];
    bb32__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb33__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_87 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb34__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_83 as Continue).0: u128)<br/>_82 = _91<br/>StorageDead(_91)<br/>StorageDead(_83)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_133 = const _<br/>_102 = &amp;(*_133)<br/>_101 = &amp;(*_102)<br/>_100 = move _101 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_101)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_82<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _109)</td></tr></table>>];
    bb35__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb36__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_107 = [move _108]<br/>StorageDead(_108)<br/>_106 = &amp;_107<br/>_105 = &amp;(*_106)<br/>_104 = move _105 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">_99 = Arguments::&lt;'_&gt;::new_v1(move _100, move _104)</td></tr></table>>];
    bb38__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = format(move _99)</td></tr></table>>];
    bb39__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_102)<br/>_97 = move _98<br/>StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = &lt;String as Deref&gt;::deref(move _95)</td></tr></table>>];
    bb40__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_93 = &amp;(*_94)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_92 = solana_program::log::sol_log(move _93)</td></tr></table>>];
    bb41__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb42__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;mut (*_1)<br/>StorageLive(_115)<br/>_115 = _82<br/>StorageLive(_116)<br/>_116 = &amp;(*_2)<br/></td></tr><tr><td align="left">_113 = InsuranceFundStake::update_if_shares(move _114, move _115, move _116)</td></tr></table>>];
    bb43__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb44__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_117 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb45__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_112 as Continue).0: ())<br/>_111 = _121<br/>StorageDead(_121)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = ((*_1).2: u128)<br/>StorageLive(_126)<br/>_126 = _55<br/></td></tr><tr><td align="left">_124 = &lt;u128 as SafeMath&gt;::safe_div(move _125, move _126)</td></tr></table>>];
    bb46__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb47__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_112)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb49__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_127 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb50__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_131 = ((_123 as Continue).0: u128)<br/>_122 = _131<br/>StorageDead(_131)<br/>((*_1).2: u128) = move _122<br/>StorageDead(_122)<br/>StorageDead(_123)<br/>_3 = const ()<br/>StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_55)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_130)<br/>_130 = _128<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _130)</td></tr></table>>];
    bb52__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_122)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_132)<br/>_132 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _132)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">return</td></tr></table>>];
    bb59__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb60__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left">drop(_62)</td></tr></table>>];
    bb61__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb62__0_196 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_196 -> bb53__0_196 [label="0"];
    bb0__0_196 -> bb1__0_196 [label="otherwise"];
    bb1__0_196 -> bb3__0_196 [label="0"];
    bb1__0_196 -> bb2__0_196 [label="otherwise"];
    bb2__0_196 -> bb11__0_196 [label=""];
    bb3__0_196 -> bb4__0_196 [label="return"];
    bb4__0_196 -> bb5__0_196 [label="return"];
    bb5__0_196 -> bb6__0_196 [label="return"];
    bb6__0_196 -> bb7__0_196 [label="return"];
    bb6__0_196 -> bb61__0_196 [label="unwind"];
    bb7__0_196 -> bb8__0_196 [label="return"];
    bb7__0_196 -> bb61__0_196 [label="unwind"];
    bb8__0_196 -> bb9__0_196 [label="return"];
    bb8__0_196 -> bb62__0_196 [label="unwind"];
    bb9__0_196 -> bb10__0_196 [label="return"];
    bb10__0_196 -> bb11__0_196 [label=""];
    bb11__0_196 -> bb12__0_196 [label="return"];
    bb12__0_196 -> bb13__0_196 [label="0"];
    bb12__0_196 -> bb15__0_196 [label="1"];
    bb12__0_196 -> bb14__0_196 [label="otherwise"];
    bb13__0_196 -> bb17__0_196 [label="success"];
    bb15__0_196 -> bb16__0_196 [label="return"];
    bb16__0_196 -> bb57__0_196 [label=""];
    bb17__0_196 -> bb18__0_196 [label="return"];
    bb18__0_196 -> bb19__0_196 [label="return"];
    bb19__0_196 -> bb20__0_196 [label="0"];
    bb19__0_196 -> bb21__0_196 [label="1"];
    bb19__0_196 -> bb14__0_196 [label="otherwise"];
    bb20__0_196 -> bb23__0_196 [label="return"];
    bb21__0_196 -> bb22__0_196 [label="return"];
    bb22__0_196 -> bb56__0_196 [label=""];
    bb23__0_196 -> bb24__0_196 [label="return"];
    bb24__0_196 -> bb25__0_196 [label="return"];
    bb25__0_196 -> bb26__0_196 [label="return"];
    bb26__0_196 -> bb27__0_196 [label="return"];
    bb27__0_196 -> bb28__0_196 [label="return"];
    bb27__0_196 -> bb60__0_196 [label="unwind"];
    bb28__0_196 -> bb29__0_196 [label="return"];
    bb28__0_196 -> bb60__0_196 [label="unwind"];
    bb29__0_196 -> bb30__0_196 [label="return"];
    bb29__0_196 -> bb62__0_196 [label="unwind"];
    bb30__0_196 -> bb31__0_196 [label="return"];
    bb31__0_196 -> bb32__0_196 [label="return"];
    bb32__0_196 -> bb33__0_196 [label="return"];
    bb33__0_196 -> bb34__0_196 [label="0"];
    bb33__0_196 -> bb35__0_196 [label="1"];
    bb33__0_196 -> bb14__0_196 [label="otherwise"];
    bb34__0_196 -> bb37__0_196 [label="return"];
    bb35__0_196 -> bb36__0_196 [label="return"];
    bb36__0_196 -> bb55__0_196 [label=""];
    bb37__0_196 -> bb38__0_196 [label="return"];
    bb38__0_196 -> bb39__0_196 [label="return"];
    bb39__0_196 -> bb40__0_196 [label="return"];
    bb39__0_196 -> bb59__0_196 [label="unwind"];
    bb40__0_196 -> bb41__0_196 [label="return"];
    bb40__0_196 -> bb59__0_196 [label="unwind"];
    bb41__0_196 -> bb42__0_196 [label="return"];
    bb41__0_196 -> bb62__0_196 [label="unwind"];
    bb42__0_196 -> bb43__0_196 [label="return"];
    bb43__0_196 -> bb44__0_196 [label="return"];
    bb44__0_196 -> bb45__0_196 [label="0"];
    bb44__0_196 -> bb46__0_196 [label="1"];
    bb44__0_196 -> bb14__0_196 [label="otherwise"];
    bb45__0_196 -> bb48__0_196 [label="return"];
    bb46__0_196 -> bb47__0_196 [label="return"];
    bb47__0_196 -> bb55__0_196 [label=""];
    bb48__0_196 -> bb49__0_196 [label="return"];
    bb49__0_196 -> bb50__0_196 [label="0"];
    bb49__0_196 -> bb51__0_196 [label="1"];
    bb49__0_196 -> bb14__0_196 [label="otherwise"];
    bb50__0_196 -> bb54__0_196 [label=""];
    bb51__0_196 -> bb52__0_196 [label="return"];
    bb52__0_196 -> bb55__0_196 [label=""];
    bb53__0_196 -> bb54__0_196 [label=""];
    bb54__0_196 -> bb58__0_196 [label=""];
    bb55__0_196 -> bb56__0_196 [label=""];
    bb56__0_196 -> bb57__0_196 [label=""];
    bb57__0_196 -> bb58__0_196 [label=""];
    bb59__0_196 -> bb62__0_196 [label="return"];
    bb60__0_196 -> bb62__0_196 [label="return"];
    bb61__0_196 -> bb62__0_196 [label="return"];
}
