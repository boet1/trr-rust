digraph Mir_0_8976 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InsuranceFundSwapBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: u16;<br align="left"/>let _8: u16;<br align="left"/>let mut _9: &lt;instructions::if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, &lt;instructions::if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args&gt;;<br align="left"/>let mut _11: std::result::Result&lt;&lt;instructions::if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _12: std::result::Result&lt;&lt;instructions::if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;;<br align="left"/>let mut _13: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _14: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _15: Closure(DefId(0:8977 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _20: &lt;instructions::if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let _21: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _27: &amp;ReErased [u8];<br align="left"/>let mut _28: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _29: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: Closure(DefId(0:8978 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _36: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [u8];<br align="left"/>let mut _43: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _44: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _45: Closure(DefId(0:8979 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _50: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _51: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _53: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _56: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _57: &amp;ReErased [u8];<br align="left"/>let mut _58: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _59: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _60: Closure(DefId(0:8980 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _65: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _66: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _68: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _72: &amp;ReErased [u8];<br align="left"/>let mut _73: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _74: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _75: Closure(DefId(0:8981 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _80: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _81: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _83: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _85: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _86: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _87: &amp;ReErased [u8];<br align="left"/>let mut _88: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _89: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _90: Closure(DefId(0:8982 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#5}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _91: isize;<br align="left"/>let _92: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _93: !;<br align="left"/>let mut _94: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _95: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _96: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _98: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _100: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _101: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _102: &amp;ReErased [u8];<br align="left"/>let mut _103: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _104: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _105: Closure(DefId(0:8983 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#6}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _110: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _111: anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;&gt;;<br align="left"/>let mut _113: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _114: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _116: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _117: &amp;ReErased [u8];<br align="left"/>let mut _118: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _119: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _120: Closure(DefId(0:8984 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#7}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _125: anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let _126: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;;<br align="left"/>let mut _128: std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _129: std::result::Result&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _131: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _132: &amp;ReErased [u8];<br align="left"/>let mut _133: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _134: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _135: Closure(DefId(0:8985 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#8}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _140: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _141: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _143: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _144: std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _145: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _146: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _147: &amp;ReErased [u8];<br align="left"/>let mut _148: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _149: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _150: Closure(DefId(0:8986 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#9}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _155: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _156: anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;&gt;;<br align="left"/>let mut _158: std::result::Result&lt;anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _159: std::result::Result&lt;anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _160: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _161: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _162: &amp;ReErased [u8];<br align="left"/>let mut _163: &amp;ReErased mut instructions::if_staker::InsuranceFundSwapBumps;<br align="left"/>let mut _164: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _165: Closure(DefId(0:8987 ~ drift[d311]::instructions::if_staker::{impl#35}::try_accounts::{closure#10}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _170: anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;;<br align="left"/>let _171: ();<br align="left"/>let mut _172: bool;<br align="left"/>let mut _173: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _174: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _175: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _176: !;<br align="left"/>let mut _177: anchor_lang::error::Error;<br align="left"/>let mut _178: anchor_lang::error::Error;<br align="left"/>let mut _179: anchor_lang::error::ErrorCode;<br align="left"/>let _180: ();<br align="left"/>let mut _181: bool;<br align="left"/>let mut _182: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _183: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _184: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _185: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _186: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _187: bool;<br align="left"/>let mut _188: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _189: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _190: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _191: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _192: &amp;ReErased state::state::State;<br align="left"/>let mut _193: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: anchor_lang::error::Error;<br align="left"/>let mut _196: anchor_lang::error::Error;<br align="left"/>let mut _197: anchor_lang::error::ErrorCode;<br align="left"/>let _198: anchor_lang::prelude::Pubkey;<br align="left"/>let _199: u8;<br align="left"/>let mut _200: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _201: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _202: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _203: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _204: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _205: &amp;ReErased [u8];<br align="left"/>let _206: &amp;ReErased [u8];<br align="left"/>let mut _207: &amp;ReErased [u8; 20_usize];<br align="left"/>let _208: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _209: &amp;ReErased [u8];<br align="left"/>let _210: &amp;ReErased [u8];<br align="left"/>let mut _211: &amp;ReErased [u8; 2_usize];<br align="left"/>let _212: [u8; 2_usize];<br align="left"/>let mut _213: u16;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _215: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _216: u8;<br align="left"/>let _217: ();<br align="left"/>let mut _218: bool;<br align="left"/>let mut _219: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _220: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _221: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _222: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _223: !;<br align="left"/>let mut _224: anchor_lang::error::Error;<br align="left"/>let mut _225: anchor_lang::error::Error;<br align="left"/>let mut _226: anchor_lang::error::Error;<br align="left"/>let mut _227: anchor_lang::error::ErrorCode;<br align="left"/>let mut _228: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _229: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _230: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _231: anchor_lang::prelude::Pubkey;<br align="left"/>let _232: ();<br align="left"/>let mut _233: bool;<br align="left"/>let mut _234: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _235: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _236: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _237: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _238: !;<br align="left"/>let mut _239: anchor_lang::error::Error;<br align="left"/>let mut _240: anchor_lang::error::Error;<br align="left"/>let mut _241: anchor_lang::error::ErrorCode;<br align="left"/>let _242: anchor_lang::prelude::Pubkey;<br align="left"/>let _243: u8;<br align="left"/>let mut _244: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _245: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _246: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _247: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _248: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _249: &amp;ReErased [u8];<br align="left"/>let _250: &amp;ReErased [u8];<br align="left"/>let mut _251: &amp;ReErased [u8; 20_usize];<br align="left"/>let _252: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _253: &amp;ReErased [u8];<br align="left"/>let _254: &amp;ReErased [u8];<br align="left"/>let mut _255: &amp;ReErased [u8; 2_usize];<br align="left"/>let _256: [u8; 2_usize];<br align="left"/>let mut _257: u16;<br align="left"/>let mut _258: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _259: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _260: u8;<br align="left"/>let _261: ();<br align="left"/>let mut _262: bool;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _264: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _265: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _266: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _267: !;<br align="left"/>let mut _268: anchor_lang::error::Error;<br align="left"/>let mut _269: anchor_lang::error::Error;<br align="left"/>let mut _270: anchor_lang::error::Error;<br align="left"/>let mut _271: anchor_lang::error::ErrorCode;<br align="left"/>let mut _272: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _273: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _274: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _275: anchor_lang::prelude::Pubkey;<br align="left"/>let _276: ();<br align="left"/>let mut _277: bool;<br align="left"/>let mut _278: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _279: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _280: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _281: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _282: !;<br align="left"/>let mut _283: anchor_lang::error::Error;<br align="left"/>let mut _284: anchor_lang::error::Error;<br align="left"/>let mut _285: anchor_lang::error::ErrorCode;<br align="left"/>let _286: ();<br align="left"/>let mut _287: bool;<br align="left"/>let mut _288: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _289: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _290: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _291: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _292: !;<br align="left"/>let mut _293: anchor_lang::error::Error;<br align="left"/>let mut _294: anchor_lang::error::Error;<br align="left"/>let mut _295: anchor_lang::error::ErrorCode;<br align="left"/>let _296: ();<br align="left"/>let mut _297: bool;<br align="left"/>let mut _298: &amp;ReErased bool;<br align="left"/>let _299: bool;<br align="left"/>let mut _300: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _301: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _302: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _303: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _304: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _305: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _306: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _307: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _308: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _309: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _310: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _311: !;<br align="left"/>let mut _312: anchor_lang::error::Error;<br align="left"/>let mut _313: anchor_lang::error::Error;<br align="left"/>let mut _314: anchor_lang::error::ErrorCode;<br align="left"/>let _315: ();<br align="left"/>let mut _316: bool;<br align="left"/>let mut _317: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _318: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _319: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _320: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _321: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _322: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _323: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _324: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _325: !;<br align="left"/>let mut _326: anchor_lang::error::Error;<br align="left"/>let mut _327: anchor_lang::error::ErrorCode;<br align="left"/>let _328: ();<br align="left"/>let mut _329: bool;<br align="left"/>let mut _330: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _331: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _332: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _333: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _334: !;<br align="left"/>let mut _335: anchor_lang::error::Error;<br align="left"/>let mut _336: anchor_lang::error::Error;<br align="left"/>let mut _337: anchor_lang::error::ErrorCode;<br align="left"/>let _338: ();<br align="left"/>let mut _339: bool;<br align="left"/>let mut _340: &amp;ReErased bool;<br align="left"/>let _341: bool;<br align="left"/>let mut _342: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _343: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _344: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _345: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _346: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _347: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _348: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _349: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _350: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _351: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _352: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _353: !;<br align="left"/>let mut _354: anchor_lang::error::Error;<br align="left"/>let mut _355: anchor_lang::error::Error;<br align="left"/>let mut _356: anchor_lang::error::ErrorCode;<br align="left"/>let _357: ();<br align="left"/>let mut _358: bool;<br align="left"/>let mut _359: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _360: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _361: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _362: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _363: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _364: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _365: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _366: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _367: !;<br align="left"/>let mut _368: anchor_lang::error::Error;<br align="left"/>let mut _369: anchor_lang::error::ErrorCode;<br align="left"/>let _370: ();<br align="left"/>let mut _371: bool;<br align="left"/>let mut _372: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _373: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let _374: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _375: !;<br align="left"/>let mut _376: anchor_lang::error::Error;<br align="left"/>let mut _377: anchor_lang::error::Error;<br align="left"/>let mut _378: anchor_lang::error::ErrorCode;<br align="left"/>let _379: ();<br align="left"/>let mut _380: bool;<br align="left"/>let mut _381: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _382: &amp;ReErased state::state::State;<br align="left"/>let mut _383: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _384: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _385: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _386: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _387: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _388: !;<br align="left"/>let mut _389: anchor_lang::error::Error;<br align="left"/>let mut _390: anchor_lang::error::Error;<br align="left"/>let mut _391: anchor_lang::error::ErrorCode;<br align="left"/>let _392: ();<br align="left"/>let _393: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _394: &amp;ReErased anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;;<br align="left"/>let _395: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _396: bool;<br align="left"/>let mut _397: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _398: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _399: !;<br align="left"/>let mut _400: anchor_lang::error::Error;<br align="left"/>let mut _401: anchor_lang::error::Error;<br align="left"/>let mut _402: anchor_lang::error::Error;<br align="left"/>let mut _403: anchor_lang::error::ErrorCode;<br align="left"/>let mut _404: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _405: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _406: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _407: instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _408: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _409: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _410: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _411: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _412: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _413: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _414: anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _415: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _416: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _417: anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;;<br align="left"/>let mut _418: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _419: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _420: bool;<br align="left"/>let mut _421: bool;<br align="left"/>let mut _422: isize;<br align="left"/>let mut _423: isize;<br align="left"/>let mut _424: isize;<br align="left"/>let mut _425: isize;<br align="left"/>let mut _426: isize;<br align="left"/>let mut _427: isize;<br align="left"/>let mut _428: isize;<br align="left"/>let mut _429: isize;<br align="left"/>let mut _430: isize;<br align="left"/>let mut _431: isize;<br align="left"/>let mut _432: isize;<br align="left"/>let mut _433: isize;<br align="left"/>let mut _434: isize;<br align="left"/>let mut _435: isize;<br align="left"/>let mut _436: isize;<br align="left"/>let mut _437: isize;<br align="left"/>let mut _438: isize;<br align="left"/>let mut _439: isize;<br align="left"/>let mut _440: isize;<br align="left"/>let mut _441: isize;<br align="left"/>let mut _442: isize;<br align="left"/>let mut _443: isize;<br align="left"/>let mut _444: isize;<br align="left"/>let mut _445: isize;<br align="left"/>let mut _446: isize;<br align="left"/>let mut _447: isize;<br align="left"/>let mut _448: isize;<br align="left"/>let mut _449: isize;<br align="left"/>let mut _450: isize;<br align="left"/>let mut _451: isize;<br align="left"/>let mut _452: isize;<br align="left"/>let mut _453: isize;<br align="left"/>let mut _454: isize;<br align="left"/>let mut _455: isize;<br align="left"/>let mut _456: isize;<br align="left"/>let mut _457: isize;<br align="left"/>let mut _458: isize;<br align="left"/>let mut _459: isize;<br align="left"/>let mut _460: isize;<br align="left"/>let mut _461: isize;<br align="left"/>let mut _462: isize;<br align="left"/>let mut _463: isize;<br align="left"/>let mut _464: isize;<br align="left"/>let mut _465: isize;<br align="left"/>let mut _466: isize;<br align="left"/>let mut _467: isize;<br align="left"/>let mut _468: isize;<br align="left"/>let mut _469: isize;<br align="left"/>let mut _470: isize;<br align="left"/>let mut _471: isize;<br align="left"/>let mut _472: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _473: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _474: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _475: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _476: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _477: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _478: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _479: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _480: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _481: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _482: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _483: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug __ix_data =&gt; _6;<br align="left"/>debug in_market_index =&gt; _7;<br align="left"/>debug out_market_index =&gt; _8;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug state =&gt; _21;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug authority =&gt; _36;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug out_insurance_fund_vault =&gt; _51;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug in_insurance_fund_vault =&gt; _66;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug out_token_account =&gt; _81;<br align="left"/>debug residual =&gt; _92;<br align="left"/>debug val =&gt; _95;<br align="left"/>debug in_token_account =&gt; _96;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug if_rebalance_config =&gt; _111;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug token_program =&gt; _126;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug drift_signer =&gt; _141;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug instructions =&gt; _156;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug __pda_address =&gt; _198;<br align="left"/>debug __bump =&gt; _199;<br align="left"/>debug __pda_address =&gt; _242;<br align="left"/>debug __bump =&gt; _243;<br align="left"/>debug actual =&gt; _393;<br align="left"/>debug expected =&gt; _395;<br align="left"/>>;
    bb0__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_421 = const false<br/>_420 = const false<br/>StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut _6<br/>_13 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_12 = &lt;&lt;if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args as BorshDeserialize&gt;::deserialize(move _13)</td></tr></table>>];
    bb1__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_15)<br/>_15 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_11 = std::result::Result::&lt;&lt;if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;::map_err::&lt;anchor_lang::error::ErrorCode, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _12, move _15)</td></tr></table>>];
    bb2__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;&lt;if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb3__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_16 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_10 as Continue).0: &lt;instructions::if_staker::InsuranceFundSwap&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InsuranceFundSwapBumps&gt;&gt;::try_accounts::__Args)<br/>_9 = move _20<br/>StorageDead(_20)<br/>StorageLive(_7)<br/>_7 = (_9.0: u16)<br/>StorageLive(_8)<br/>_8 = (_9.1: u16)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_1)<br/>StorageLive(_26)<br/>_26 = &amp;mut (*_2)<br/>StorageLive(_27)<br/>_27 = &amp;(*_6)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_4)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_24 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _25, move _26, move _27, move _28, move _29)</td></tr></table>>];
    bb5__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _24, move _30)</td></tr></table>>];
    bb9__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_31 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_22 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_21 = move _35<br/>StorageDead(_35)<br/>_422 = discriminant(_22)<br/>StorageDead(_22)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_2)<br/>StorageLive(_42)<br/>_42 = &amp;(*_6)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_4)<br/>StorageLive(_44)<br/>_44 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _40, move _41, move _42, move _43, move _44)</td></tr></table>>];
    bb12__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_460 = discriminant(_22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_45)<br/>_45 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _39, move _45)</td></tr></table>>];
    bb15__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb16__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_46 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb17__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_37 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_36 = move _50<br/>StorageDead(_50)<br/>_424 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_1)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_2)<br/>StorageLive(_57)<br/>_57 = &amp;(*_6)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_4)<br/>StorageLive(_59)<br/>_59 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_54 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _55, move _56, move _57, move _58, move _59)</td></tr></table>>];
    bb18__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb19__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_458 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_60)<br/>_60 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_53 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _54, move _60)</td></tr></table>>];
    bb21__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb22__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_61 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb23__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_52 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_51 = move _65<br/>StorageDead(_65)<br/>_426 = discriminant(_52)<br/>StorageDead(_52)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_1)<br/>StorageLive(_71)<br/>_71 = &amp;mut (*_2)<br/>StorageLive(_72)<br/>_72 = &amp;(*_6)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_4)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_69 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _70, move _71, move _72, move _73, move _74)</td></tr></table>>];
    bb24__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb25__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>_456 = discriminant(_52)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_75)<br/>_75 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_68 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _69, move _75)</td></tr></table>>];
    bb27__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb28__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_76 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb29__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_67 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_66 = move _80<br/>StorageDead(_80)<br/>_428 = discriminant(_67)<br/>StorageDead(_67)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;(*_1)<br/>StorageLive(_86)<br/>_86 = &amp;mut (*_2)<br/>StorageLive(_87)<br/>_87 = &amp;(*_6)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_4)<br/>StorageLive(_89)<br/>_89 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_84 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _85, move _86, move _87, move _88, move _89)</td></tr></table>>];
    bb30__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_79)<br/>_79 = move _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb31__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>_454 = discriminant(_67)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageLive(_90)<br/>_90 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_83 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _84, move _90)</td></tr></table>>];
    bb33__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb34__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_91 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb35__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = move ((_82 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_81 = move _95<br/>StorageDead(_95)<br/>_430 = discriminant(_82)<br/>StorageDead(_82)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;(*_1)<br/>StorageLive(_101)<br/>_101 = &amp;mut (*_2)<br/>StorageLive(_102)<br/>_102 = &amp;(*_6)<br/>StorageLive(_103)<br/>_103 = &amp;mut (*_4)<br/>StorageLive(_104)<br/>_104 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_99 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _100, move _101, move _102, move _103, move _104)</td></tr></table>>];
    bb36__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_92)<br/>_92 = move ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_94)<br/>_94 = move _92<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _94)</td></tr></table>>];
    bb37__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_92)<br/>_452 = discriminant(_82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_105)<br/>_105 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_98 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _99, move _105)</td></tr></table>>];
    bb39__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb40__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_106 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb41__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = move ((_97 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_96 = move _110<br/>StorageDead(_110)<br/>_432 = discriminant(_97)<br/>StorageDead(_97)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;(*_1)<br/>StorageLive(_116)<br/>_116 = &amp;mut (*_2)<br/>StorageLive(_117)<br/>_117 = &amp;(*_6)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_4)<br/>StorageLive(_119)<br/>_119 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_114 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, IfRebalanceConfig&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _115, move _116, move _117, move _118, move _119)</td></tr></table>>];
    bb42__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = move ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_109)<br/>_109 = move _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb43__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>_450 = discriminant(_97)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_120)<br/>_120 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_113 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _114, move _120)</td></tr></table>>];
    bb45__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, IfRebalanceConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb46__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_121 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb47__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = move ((_112 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/>_111 = move _125<br/>StorageDead(_125)<br/>_434 = discriminant(_112)<br/>StorageDead(_112)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;(*_1)<br/>StorageLive(_131)<br/>_131 = &amp;mut (*_2)<br/>StorageLive(_132)<br/>_132 = &amp;(*_6)<br/>StorageLive(_133)<br/>_133 = &amp;mut (*_4)<br/>StorageLive(_134)<br/>_134 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_129 = &lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _130, move _131, move _132, move _133, move _134)</td></tr></table>>];
    bb48__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = move ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_124)<br/>_124 = move _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb49__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>_448 = discriminant(_112)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageLive(_135)<br/>_135 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_128 = std::result::Result::&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _129, move _135)</td></tr></table>>];
    bb51__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb52__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_136 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb53__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = move ((_127 as Continue).0: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_126 = move _140<br/>StorageDead(_140)<br/>_436 = discriminant(_127)<br/>StorageDead(_127)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;(*_1)<br/>StorageLive(_146)<br/>_146 = &amp;mut (*_2)<br/>StorageLive(_147)<br/>_147 = &amp;(*_6)<br/>StorageLive(_148)<br/>_148 = &amp;mut (*_4)<br/>StorageLive(_149)<br/>_149 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_144 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _145, move _146, move _147, move _148, move _149)</td></tr></table>>];
    bb54__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = move ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_139)<br/>_139 = move _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb55__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>_446 = discriminant(_127)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_150)<br/>_150 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_143 = std::result::Result::&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _144, move _150)</td></tr></table>>];
    bb57__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb58__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_151 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb59__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = move ((_142 as Continue).0: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_141 = move _155<br/>StorageDead(_155)<br/>_438 = discriminant(_142)<br/>StorageDead(_142)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;(*_1)<br/>StorageLive(_161)<br/>_161 = &amp;mut (*_2)<br/>StorageLive(_162)<br/>_162 = &amp;(*_6)<br/>StorageLive(_163)<br/>_163 = &amp;mut (*_4)<br/>StorageLive(_164)<br/>_164 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_159 = &lt;anchor_lang::prelude::UncheckedAccount&lt;'_&gt; as anchor_lang::Accounts&lt;'_, InsuranceFundSwapBumps&gt;&gt;::try_accounts(move _160, move _161, move _162, move _163, move _164)</td></tr></table>>];
    bb60__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = move ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_154)<br/>_154 = move _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb61__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>_444 = discriminant(_142)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_163)<br/>StorageDead(_162)<br/>StorageDead(_161)<br/>StorageDead(_160)<br/>StorageLive(_165)<br/>_165 = {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}<br/></td></tr><tr><td align="left">_158 = std::result::Result::&lt;anchor_lang::prelude::UncheckedAccount&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:1008:10: 1008:18}&gt;(move _159, move _165)</td></tr></table>>];
    bb63__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;anchor_lang::prelude::UncheckedAccount&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb64__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_166 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb65__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = move ((_157 as Continue).0: anchor_lang::prelude::UncheckedAccount&lt;'_&gt;)<br/>_156 = move _170<br/>StorageDead(_170)<br/>_440 = discriminant(_157)<br/>StorageDead(_157)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;_36<br/>_174 = &amp;(*_175)<br/></td></tr><tr><td align="left">_173 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _174)</td></tr></table>>];
    bb66__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = move ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_169)<br/>_169 = move _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb67__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>_442 = discriminant(_157)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>_172 = ((*_173).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _172)</td></tr></table>>];
    bb69__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = ConstraintMut<br/></td></tr><tr><td align="left">_178 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _179)</td></tr></table>>];
    bb70__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _178, const &quot;authority&quot;)</td></tr></table>>];
    bb71__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _177)<br/>StorageDead(_177)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>_171 = const ()<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_184 = &amp;_36<br/></td></tr><tr><td align="left">_183 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _184)</td></tr></table>>];
    bb73__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_182 = &amp;_183<br/>StorageDead(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/></td></tr><tr><td align="left">_186 = if_rebalance_wallet::id()</td></tr></table>>];
    bb74__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_185 = &amp;_186<br/></td></tr><tr><td align="left">_181 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _182, move _185)</td></tr></table>>];
    bb75__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb76__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = &amp;_36<br/></td></tr><tr><td align="left">_189 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _190)</td></tr></table>>];
    bb78__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_188 = &amp;_189<br/>StorageDead(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_472 = (((_21.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_193 = &amp;(*_472)<br/></td></tr><tr><td align="left">_192 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb79__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>_191 = &amp;((*_192).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_187 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _188, move _191)</td></tr></table>>];
    bb80__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left">switchInt(move _187)</td></tr></table>>];
    bb81__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>_180 = const ()<br/>StorageDead(_187)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = const b&quot;insurance_fund_vault&quot;<br/>_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = &lt;[u8; 20] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _207)</td></tr></table>>];
    bb82__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = ConstraintRaw<br/></td></tr><tr><td align="left">_196 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _197)</td></tr></table>>];
    bb83__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/></td></tr><tr><td align="left">_195 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _196, const &quot;authority&quot;)</td></tr></table>>];
    bb84__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _195)<br/>StorageDead(_195)<br/>StorageDead(_187)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_205 = &amp;(*_206)<br/>StorageDead(_207)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = _8<br/></td></tr><tr><td align="left">_212 = core::num::&lt;impl u16&gt;::to_le_bytes(move _213)</td></tr></table>>];
    bb86__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_211 = &amp;_212<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_210 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _211)</td></tr></table>>];
    bb87__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_209 = &amp;(*_210)<br/>StorageDead(_211)<br/>_204 = [move _205, move _209]<br/>StorageDead(_209)<br/>StorageDead(_205)<br/>_203 = &amp;_204<br/>_202 = &amp;(*_203)<br/>_201 = move _202 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_202)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>_215 = &amp;_1<br/>_418 = deref_copy (*_215)<br/>_214 = &amp;(*_418)<br/></td></tr><tr><td align="left">_200 = anchor_lang::prelude::Pubkey::find_program_address(move _201, move _214)</td></tr></table>>];
    bb88__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_201)<br/>StorageLive(_198)<br/>_198 = (_200.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_199)<br/>_199 = (_200.1: u8)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/>StorageLive(_216)<br/>_216 = _199<br/>((*_4).0: u8) = move _216<br/>StorageDead(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_473 = (((_51.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_221 = &amp;(*_473)<br/></td></tr><tr><td align="left">_220 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _221)</td></tr></table>>];
    bb89__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">_219 = &amp;_220<br/>StorageDead(_221)<br/>StorageLive(_222)<br/>_222 = &amp;_198<br/></td></tr><tr><td align="left">_218 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _219, move _222)</td></tr></table>>];
    bb90__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb91__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = ConstraintSeeds<br/></td></tr><tr><td align="left">_226 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _227)</td></tr></table>>];
    bb92__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/></td></tr><tr><td align="left">_225 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _226, const &quot;out_insurance_fund_vault&quot;)</td></tr></table>>];
    bb93__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_421 = const true<br/>StorageDead(_226)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_474 = (((_51.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_230 = &amp;(*_474)<br/></td></tr><tr><td align="left">_229 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _230)</td></tr></table>>];
    bb94__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageLive(_231)<br/>_231 = _198<br/>_228 = (move _229, move _231)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>_421 = const false<br/></td></tr><tr><td align="left">_224 = anchor_lang::error::Error::with_pubkeys(move _225, move _228)</td></tr></table>>];
    bb95__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>_421 = const false<br/>StorageDead(_225)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _224)<br/>StorageDead(_224)<br/>StorageDead(_218)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>_217 = const ()<br/>StorageDead(_218)<br/>StorageDead(_217)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;_51<br/></td></tr><tr><td align="left">_236 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _237)</td></tr></table>>];
    bb97__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">_235 = &amp;(*_236)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_234 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _235)</td></tr></table>>];
    bb98__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_233 = ((*_234).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb99__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = ConstraintMut<br/></td></tr><tr><td align="left">_240 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _241)</td></tr></table>>];
    bb100__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/></td></tr><tr><td align="left">_239 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _240, const &quot;out_insurance_fund_vault&quot;)</td></tr></table>>];
    bb101__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _239)<br/>StorageDead(_239)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>_232 = const ()<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = const b&quot;insurance_fund_vault&quot;<br/>_251 = &amp;(*_252)<br/></td></tr><tr><td align="left">_250 = &lt;[u8; 20] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _251)</td></tr></table>>];
    bb103__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_249 = &amp;(*_250)<br/>StorageDead(_251)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = _7<br/></td></tr><tr><td align="left">_256 = core::num::&lt;impl u16&gt;::to_le_bytes(move _257)</td></tr></table>>];
    bb104__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">_255 = &amp;_256<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_254 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _255)</td></tr></table>>];
    bb105__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">_253 = &amp;(*_254)<br/>StorageDead(_255)<br/>_248 = [move _249, move _253]<br/>StorageDead(_253)<br/>StorageDead(_249)<br/>_247 = &amp;_248<br/>_246 = &amp;(*_247)<br/>_245 = move _246 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_246)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_259 = &amp;_1<br/>_419 = deref_copy (*_259)<br/>_258 = &amp;(*_419)<br/></td></tr><tr><td align="left">_244 = anchor_lang::prelude::Pubkey::find_program_address(move _245, move _258)</td></tr></table>>];
    bb106__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_245)<br/>StorageLive(_242)<br/>_242 = (_244.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_243)<br/>_243 = (_244.1: u8)<br/>StorageDead(_259)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/>StorageDead(_244)<br/>StorageLive(_260)<br/>_260 = _243<br/>((*_4).1: u8) = move _260<br/>StorageDead(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_475 = (((_66.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_265 = &amp;(*_475)<br/></td></tr><tr><td align="left">_264 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _265)</td></tr></table>>];
    bb107__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_263 = &amp;_264<br/>StorageDead(_265)<br/>StorageLive(_266)<br/>_266 = &amp;_242<br/></td></tr><tr><td align="left">_262 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _263, move _266)</td></tr></table>>];
    bb108__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb109__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_263)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = ConstraintSeeds<br/></td></tr><tr><td align="left">_270 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _271)</td></tr></table>>];
    bb110__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/></td></tr><tr><td align="left">_269 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _270, const &quot;in_insurance_fund_vault&quot;)</td></tr></table>>];
    bb111__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_420 = const true<br/>StorageDead(_270)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_476 = (((_66.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_274 = &amp;(*_476)<br/></td></tr><tr><td align="left">_273 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _274)</td></tr></table>>];
    bb112__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>StorageLive(_275)<br/>_275 = _242<br/>_272 = (move _273, move _275)<br/>StorageDead(_275)<br/>StorageDead(_273)<br/>_420 = const false<br/></td></tr><tr><td align="left">_268 = anchor_lang::error::Error::with_pubkeys(move _269, move _272)</td></tr></table>>];
    bb113__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>_420 = const false<br/>StorageDead(_269)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _268)<br/>StorageDead(_268)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_263)<br/>_261 = const ()<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = &amp;_66<br/></td></tr><tr><td align="left">_280 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _281)</td></tr></table>>];
    bb115__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_279 = &amp;(*_280)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">_278 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _279)</td></tr></table>>];
    bb116__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>_277 = ((*_278).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb117__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>_285 = ConstraintMut<br/></td></tr><tr><td align="left">_284 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _285)</td></tr></table>>];
    bb118__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/></td></tr><tr><td align="left">_283 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _284, const &quot;in_insurance_fund_vault&quot;)</td></tr></table>>];
    bb119__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _283)<br/>StorageDead(_283)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/>_276 = const ()<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>_291 = &amp;_81<br/></td></tr><tr><td align="left">_290 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _291)</td></tr></table>>];
    bb121__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_289 = &amp;(*_290)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">_288 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _289)</td></tr></table>>];
    bb122__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>_287 = ((*_288).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _287)</td></tr></table>>];
    bb123__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageDead(_288)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_295 = ConstraintMut<br/></td></tr><tr><td align="left">_294 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _295)</td></tr></table>>];
    bb124__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/></td></tr><tr><td align="left">_293 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _294, const &quot;out_token_account&quot;)</td></tr></table>>];
    bb125__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _293)<br/>StorageDead(_293)<br/>StorageDead(_287)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageDead(_288)<br/>_286 = const ()<br/>StorageDead(_287)<br/>StorageDead(_286)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>_477 = (((_51.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_304 = &amp;(*_477)<br/></td></tr><tr><td align="left">_303 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _304)</td></tr></table>>];
    bb127__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_302 = &amp;(*_303)<br/></td></tr><tr><td align="left">_301 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _302)</td></tr></table>>];
    bb128__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_302)<br/>_300 = &amp;((*_301).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_478 = (((_81.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_310 = &amp;(*_478)<br/></td></tr><tr><td align="left">_309 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _310)</td></tr></table>>];
    bb129__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_308 = &amp;(*_309)<br/></td></tr><tr><td align="left">_307 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _308)</td></tr></table>>];
    bb130__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_308)<br/>_306 = &amp;((*_307).0: anchor_lang::prelude::Pubkey)<br/>_305 = &amp;(*_306)<br/></td></tr><tr><td align="left">_299 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _300, move _305)</td></tr></table>>];
    bb131__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_300)<br/>_298 = &amp;_299<br/></td></tr><tr><td align="left">_297 = &lt;&amp;bool as Not&gt;::not(move _298)</td></tr></table>>];
    bb132__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left">switchInt(move _297)</td></tr></table>>];
    bb133__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>_314 = ConstraintRaw<br/></td></tr><tr><td align="left">_313 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _314)</td></tr></table>>];
    bb134__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/></td></tr><tr><td align="left">_312 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _313, const &quot;out_token_account&quot;)</td></tr></table>>];
    bb135__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _312)<br/>StorageDead(_312)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/>_296 = const ()<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_479 = (((_81.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_321 = &amp;(*_479)<br/></td></tr><tr><td align="left">_320 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _321)</td></tr></table>>];
    bb137__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">_319 = &amp;(*_320)<br/></td></tr><tr><td align="left">_318 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _319)</td></tr></table>>];
    bb138__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_319)<br/>_317 = &amp;((*_318).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>_324 = &amp;_36<br/></td></tr><tr><td align="left">_323 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _324)</td></tr></table>>];
    bb139__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_322 = &amp;_323<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">_316 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _317, move _322)</td></tr></table>>];
    bb140__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left">switchInt(move _316)</td></tr></table>>];
    bb141__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_322)<br/>StorageDead(_320)<br/>StorageDead(_318)<br/>StorageDead(_317)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>_327 = ConstraintTokenOwner<br/></td></tr><tr><td align="left">_326 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _327)</td></tr></table>>];
    bb142__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _326)<br/>StorageDead(_326)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_322)<br/>StorageDead(_320)<br/>StorageDead(_318)<br/>StorageDead(_317)<br/>_315 = const ()<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>_333 = &amp;_96<br/></td></tr><tr><td align="left">_332 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _333)</td></tr></table>>];
    bb144__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">_331 = &amp;(*_332)<br/>StorageDead(_333)<br/></td></tr><tr><td align="left">_330 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _331)</td></tr></table>>];
    bb145__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>_329 = ((*_330).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _329)</td></tr></table>>];
    bb146__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_330)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = ConstraintMut<br/></td></tr><tr><td align="left">_336 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _337)</td></tr></table>>];
    bb147__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/></td></tr><tr><td align="left">_335 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _336, const &quot;in_token_account&quot;)</td></tr></table>>];
    bb148__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _335)<br/>StorageDead(_335)<br/>StorageDead(_329)<br/>StorageDead(_328)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_332)<br/>StorageDead(_330)<br/>_328 = const ()<br/>StorageDead(_329)<br/>StorageDead(_328)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_480 = (((_66.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_346 = &amp;(*_480)<br/></td></tr><tr><td align="left">_345 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _346)</td></tr></table>>];
    bb150__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">_344 = &amp;(*_345)<br/></td></tr><tr><td align="left">_343 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _344)</td></tr></table>>];
    bb151__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_344)<br/>_342 = &amp;((*_343).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>_481 = (((_96.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_352 = &amp;(*_481)<br/></td></tr><tr><td align="left">_351 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _352)</td></tr></table>>];
    bb152__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">_350 = &amp;(*_351)<br/></td></tr><tr><td align="left">_349 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _350)</td></tr></table>>];
    bb153__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageDead(_350)<br/>_348 = &amp;((*_349).0: anchor_lang::prelude::Pubkey)<br/>_347 = &amp;(*_348)<br/></td></tr><tr><td align="left">_341 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _342, move _347)</td></tr></table>>];
    bb154__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_342)<br/>_340 = &amp;_341<br/></td></tr><tr><td align="left">_339 = &lt;&amp;bool as Not&gt;::not(move _340)</td></tr></table>>];
    bb155__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left">switchInt(move _339)</td></tr></table>>];
    bb156__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_345)<br/>StorageDead(_343)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>_356 = ConstraintRaw<br/></td></tr><tr><td align="left">_355 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _356)</td></tr></table>>];
    bb157__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/></td></tr><tr><td align="left">_354 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _355, const &quot;in_token_account&quot;)</td></tr></table>>];
    bb158__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _354)<br/>StorageDead(_354)<br/>StorageDead(_339)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_351)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageDead(_345)<br/>StorageDead(_343)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/>_338 = const ()<br/>StorageDead(_339)<br/>StorageDead(_338)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>_482 = (((_96.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_363 = &amp;(*_482)<br/></td></tr><tr><td align="left">_362 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _363)</td></tr></table>>];
    bb160__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">_361 = &amp;(*_362)<br/></td></tr><tr><td align="left">_360 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _361)</td></tr></table>>];
    bb161__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_361)<br/>_359 = &amp;((*_360).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_366 = &amp;_36<br/></td></tr><tr><td align="left">_365 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _366)</td></tr></table>>];
    bb162__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">_364 = &amp;_365<br/>StorageDead(_366)<br/></td></tr><tr><td align="left">_358 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _359, move _364)</td></tr></table>>];
    bb163__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left">switchInt(move _358)</td></tr></table>>];
    bb164__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = ConstraintTokenOwner<br/></td></tr><tr><td align="left">_368 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _369)</td></tr></table>>];
    bb165__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_369)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _368)<br/>StorageDead(_368)<br/>StorageDead(_358)<br/>StorageDead(_357)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/>_357 = const ()<br/>StorageDead(_358)<br/>StorageDead(_357)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>_374 = &amp;_111<br/>_373 = &amp;(*_374)<br/></td></tr><tr><td align="left">_372 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, IfRebalanceConfig&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _373)</td></tr></table>>];
    bb167__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>_371 = ((*_372).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _371)</td></tr></table>>];
    bb168__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_372)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>_378 = ConstraintMut<br/></td></tr><tr><td align="left">_377 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _378)</td></tr></table>>];
    bb169__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/></td></tr><tr><td align="left">_376 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _377, const &quot;if_rebalance_config&quot;)</td></tr></table>>];
    bb170__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _376)<br/>StorageDead(_376)<br/>StorageDead(_371)<br/>StorageDead(_370)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb171__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_372)<br/>_370 = const ()<br/>StorageDead(_371)<br/>StorageDead(_370)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>_483 = (((_21.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_383 = &amp;(*_483)<br/></td></tr><tr><td align="left">_382 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _383)</td></tr></table>>];
    bb172__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>_381 = &amp;((*_382).3: anchor_lang::prelude::Pubkey)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = &amp;_141<br/></td></tr><tr><td align="left">_386 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _387)</td></tr></table>>];
    bb173__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>_385 = &amp;_386<br/>_384 = &amp;(*_385)<br/></td></tr><tr><td align="left">_380 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _381, move _384)</td></tr></table>>];
    bb174__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left">switchInt(move _380)</td></tr></table>>];
    bb175__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_381)<br/>StorageDead(_386)<br/>StorageDead(_385)<br/>StorageDead(_382)<br/>_379 = const ()<br/>StorageDead(_380)<br/>StorageDead(_379)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>_394 = &amp;_156<br/></td></tr><tr><td align="left">_393 = &lt;anchor_lang::prelude::UncheckedAccount&lt;'_&gt; as anchor_lang::Key&gt;::key(move _394)</td></tr></table>>];
    bb176__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_381)<br/>StorageDead(_386)<br/>StorageDead(_385)<br/>StorageDead(_382)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = ConstraintRaw<br/></td></tr><tr><td align="left">_390 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _391)</td></tr></table>>];
    bb177__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/></td></tr><tr><td align="left">_389 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _390, const &quot;drift_signer&quot;)</td></tr></table>>];
    bb178__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _389)<br/>StorageDead(_389)<br/>StorageDead(_380)<br/>StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageLive(_395)<br/>_395 = const _<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>_397 = &amp;_393<br/>StorageLive(_398)<br/>_398 = &amp;_395<br/></td></tr><tr><td align="left">_396 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _397, move _398)</td></tr></table>>];
    bb180__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left">switchInt(move _396)</td></tr></table>>];
    bb181__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_397)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>_403 = ConstraintAddress<br/></td></tr><tr><td align="left">_402 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _403)</td></tr></table>>];
    bb182__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/></td></tr><tr><td align="left">_401 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _402, const &quot;instructions&quot;)</td></tr></table>>];
    bb183__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>_405 = _393<br/>StorageLive(_406)<br/>_406 = _395<br/>_404 = (move _405, move _406)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/></td></tr><tr><td align="left">_400 = anchor_lang::error::Error::with_pubkeys(move _401, move _404)</td></tr></table>>];
    bb184__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>StorageDead(_401)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _400)<br/>StorageDead(_400)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_397)<br/>_392 = const ()<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = move _21<br/>StorageLive(_409)<br/>_409 = move _36<br/>StorageLive(_410)<br/>_410 = move _51<br/>StorageLive(_411)<br/>_411 = move _66<br/>StorageLive(_412)<br/>_412 = move _81<br/>StorageLive(_413)<br/>_413 = move _96<br/>StorageLive(_414)<br/>_414 = move _111<br/>StorageLive(_415)<br/>_415 = move _126<br/>StorageLive(_416)<br/>_416 = move _141<br/>StorageLive(_417)<br/>_417 = move _156<br/>_407 = if_staker::InsuranceFundSwap::&lt;'_&gt; { state: move _408, authority: move _409, out_insurance_fund_vault: move _410, in_insurance_fund_vault: move _411, out_token_account: move _412, in_token_account: move _413, if_rebalance_config: move _414, token_program: move _415, drift_signer: move _416, instructions: move _417 }<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/>StorageDead(_412)<br/>StorageDead(_411)<br/>StorageDead(_410)<br/>StorageDead(_409)<br/>StorageDead(_408)<br/>_0 = std::result::Result::&lt;if_staker::InsuranceFundSwap&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _407)<br/>StorageDead(_407)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_156)<br/>StorageDead(_141)<br/>StorageDead(_126)<br/>StorageDead(_111)<br/>StorageDead(_96)<br/>StorageDead(_81)<br/>StorageDead(_66)<br/>StorageDead(_51)<br/>StorageDead(_36)<br/>StorageDead(_21)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb188__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/></td></tr><tr><td align="left">drop(_141)</td></tr></table>>];
    bb189__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb192__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb193__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/></td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb194__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb195__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb197__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left">return</td></tr></table>>];
    bb200__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">200 (cleanup)</td></tr><tr><td align="left">drop(_141)</td></tr></table>>];
    bb201__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">201 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb202__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">202 (cleanup)</td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb203__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">203 (cleanup)</td></tr><tr><td align="left">drop(_66)</td></tr></table>>];
    bb204__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">204 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb205__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">205 (cleanup)</td></tr><tr><td align="left">drop(_21)</td></tr></table>>];
    bb206__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">206 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb207__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">207 (cleanup)</td></tr><tr><td align="left">drop(_269)</td></tr></table>>];
    bb208__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">208 (cleanup)</td></tr><tr><td align="left">switchInt(_420)</td></tr></table>>];
    bb209__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">209 (cleanup)</td></tr><tr><td align="left">drop(_225)</td></tr></table>>];
    bb210__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">210 (cleanup)</td></tr><tr><td align="left">switchInt(_421)</td></tr></table>>];
    bb211__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">211 (cleanup)</td></tr><tr><td align="left" balign="left">_462 = discriminant(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">212 (cleanup)</td></tr><tr><td align="left" balign="left">_463 = discriminant(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">213 (cleanup)</td></tr><tr><td align="left" balign="left">_464 = discriminant(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">214 (cleanup)</td></tr><tr><td align="left" balign="left">_465 = discriminant(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">215 (cleanup)</td></tr><tr><td align="left" balign="left">_466 = discriminant(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">216 (cleanup)</td></tr><tr><td align="left" balign="left">_467 = discriminant(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">217 (cleanup)</td></tr><tr><td align="left" balign="left">_468 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">218 (cleanup)</td></tr><tr><td align="left" balign="left">_469 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">219 (cleanup)</td></tr><tr><td align="left" balign="left">_470 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_8976 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">220 (cleanup)</td></tr><tr><td align="left" balign="left">_471 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_8976 -> bb1__0_8976 [label="return"];
    bb1__0_8976 -> bb2__0_8976 [label="return"];
    bb1__0_8976 -> bb206__0_8976 [label="unwind"];
    bb2__0_8976 -> bb3__0_8976 [label="return"];
    bb3__0_8976 -> bb4__0_8976 [label="0"];
    bb3__0_8976 -> bb6__0_8976 [label="1"];
    bb3__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb4__0_8976 -> bb8__0_8976 [label="return"];
    bb6__0_8976 -> bb7__0_8976 [label="return"];
    bb7__0_8976 -> bb198__0_8976 [label=""];
    bb8__0_8976 -> bb9__0_8976 [label="return"];
    bb8__0_8976 -> bb206__0_8976 [label="unwind"];
    bb9__0_8976 -> bb10__0_8976 [label="return"];
    bb9__0_8976 -> bb206__0_8976 [label="unwind"];
    bb10__0_8976 -> bb11__0_8976 [label="0"];
    bb10__0_8976 -> bb12__0_8976 [label="1"];
    bb10__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb11__0_8976 -> bb14__0_8976 [label="return"];
    bb11__0_8976 -> bb205__0_8976 [label="unwind"];
    bb12__0_8976 -> bb13__0_8976 [label="return"];
    bb12__0_8976 -> bb220__0_8976 [label="unwind"];
    bb13__0_8976 -> bb197__0_8976 [label=""];
    bb14__0_8976 -> bb15__0_8976 [label="return"];
    bb14__0_8976 -> bb205__0_8976 [label="unwind"];
    bb15__0_8976 -> bb16__0_8976 [label="return"];
    bb15__0_8976 -> bb205__0_8976 [label="unwind"];
    bb16__0_8976 -> bb17__0_8976 [label="0"];
    bb16__0_8976 -> bb18__0_8976 [label="1"];
    bb16__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb17__0_8976 -> bb20__0_8976 [label="return"];
    bb17__0_8976 -> bb205__0_8976 [label="unwind"];
    bb18__0_8976 -> bb19__0_8976 [label="return"];
    bb18__0_8976 -> bb219__0_8976 [label="unwind"];
    bb19__0_8976 -> bb196__0_8976 [label=""];
    bb20__0_8976 -> bb21__0_8976 [label="return"];
    bb20__0_8976 -> bb205__0_8976 [label="unwind"];
    bb21__0_8976 -> bb22__0_8976 [label="return"];
    bb21__0_8976 -> bb205__0_8976 [label="unwind"];
    bb22__0_8976 -> bb23__0_8976 [label="0"];
    bb22__0_8976 -> bb24__0_8976 [label="1"];
    bb22__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb23__0_8976 -> bb26__0_8976 [label="return"];
    bb23__0_8976 -> bb204__0_8976 [label="unwind"];
    bb24__0_8976 -> bb25__0_8976 [label="return"];
    bb24__0_8976 -> bb218__0_8976 [label="unwind"];
    bb25__0_8976 -> bb195__0_8976 [label=""];
    bb26__0_8976 -> bb27__0_8976 [label="return"];
    bb26__0_8976 -> bb204__0_8976 [label="unwind"];
    bb27__0_8976 -> bb28__0_8976 [label="return"];
    bb27__0_8976 -> bb204__0_8976 [label="unwind"];
    bb28__0_8976 -> bb29__0_8976 [label="0"];
    bb28__0_8976 -> bb30__0_8976 [label="1"];
    bb28__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb29__0_8976 -> bb32__0_8976 [label="return"];
    bb29__0_8976 -> bb203__0_8976 [label="unwind"];
    bb30__0_8976 -> bb31__0_8976 [label="return"];
    bb30__0_8976 -> bb217__0_8976 [label="unwind"];
    bb31__0_8976 -> bb194__0_8976 [label=""];
    bb32__0_8976 -> bb33__0_8976 [label="return"];
    bb32__0_8976 -> bb203__0_8976 [label="unwind"];
    bb33__0_8976 -> bb34__0_8976 [label="return"];
    bb33__0_8976 -> bb203__0_8976 [label="unwind"];
    bb34__0_8976 -> bb35__0_8976 [label="0"];
    bb34__0_8976 -> bb36__0_8976 [label="1"];
    bb34__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb35__0_8976 -> bb38__0_8976 [label="return"];
    bb35__0_8976 -> bb202__0_8976 [label="unwind"];
    bb36__0_8976 -> bb37__0_8976 [label="return"];
    bb36__0_8976 -> bb216__0_8976 [label="unwind"];
    bb37__0_8976 -> bb193__0_8976 [label=""];
    bb38__0_8976 -> bb39__0_8976 [label="return"];
    bb38__0_8976 -> bb202__0_8976 [label="unwind"];
    bb39__0_8976 -> bb40__0_8976 [label="return"];
    bb39__0_8976 -> bb202__0_8976 [label="unwind"];
    bb40__0_8976 -> bb41__0_8976 [label="0"];
    bb40__0_8976 -> bb42__0_8976 [label="1"];
    bb40__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb41__0_8976 -> bb44__0_8976 [label="return"];
    bb41__0_8976 -> bb201__0_8976 [label="unwind"];
    bb42__0_8976 -> bb43__0_8976 [label="return"];
    bb42__0_8976 -> bb215__0_8976 [label="unwind"];
    bb43__0_8976 -> bb192__0_8976 [label=""];
    bb44__0_8976 -> bb45__0_8976 [label="return"];
    bb44__0_8976 -> bb201__0_8976 [label="unwind"];
    bb45__0_8976 -> bb46__0_8976 [label="return"];
    bb45__0_8976 -> bb201__0_8976 [label="unwind"];
    bb46__0_8976 -> bb47__0_8976 [label="0"];
    bb46__0_8976 -> bb48__0_8976 [label="1"];
    bb46__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb47__0_8976 -> bb50__0_8976 [label="return"];
    bb47__0_8976 -> bb201__0_8976 [label="unwind"];
    bb48__0_8976 -> bb49__0_8976 [label="return"];
    bb48__0_8976 -> bb214__0_8976 [label="unwind"];
    bb49__0_8976 -> bb191__0_8976 [label=""];
    bb50__0_8976 -> bb51__0_8976 [label="return"];
    bb50__0_8976 -> bb201__0_8976 [label="unwind"];
    bb51__0_8976 -> bb52__0_8976 [label="return"];
    bb51__0_8976 -> bb201__0_8976 [label="unwind"];
    bb52__0_8976 -> bb53__0_8976 [label="0"];
    bb52__0_8976 -> bb54__0_8976 [label="1"];
    bb52__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb53__0_8976 -> bb56__0_8976 [label="return"];
    bb53__0_8976 -> bb201__0_8976 [label="unwind"];
    bb54__0_8976 -> bb55__0_8976 [label="return"];
    bb54__0_8976 -> bb213__0_8976 [label="unwind"];
    bb55__0_8976 -> bb190__0_8976 [label=""];
    bb56__0_8976 -> bb57__0_8976 [label="return"];
    bb56__0_8976 -> bb201__0_8976 [label="unwind"];
    bb57__0_8976 -> bb58__0_8976 [label="return"];
    bb57__0_8976 -> bb201__0_8976 [label="unwind"];
    bb58__0_8976 -> bb59__0_8976 [label="0"];
    bb58__0_8976 -> bb60__0_8976 [label="1"];
    bb58__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb59__0_8976 -> bb62__0_8976 [label="return"];
    bb59__0_8976 -> bb200__0_8976 [label="unwind"];
    bb60__0_8976 -> bb61__0_8976 [label="return"];
    bb60__0_8976 -> bb212__0_8976 [label="unwind"];
    bb61__0_8976 -> bb189__0_8976 [label=""];
    bb62__0_8976 -> bb63__0_8976 [label="return"];
    bb62__0_8976 -> bb200__0_8976 [label="unwind"];
    bb63__0_8976 -> bb64__0_8976 [label="return"];
    bb63__0_8976 -> bb200__0_8976 [label="unwind"];
    bb64__0_8976 -> bb65__0_8976 [label="0"];
    bb64__0_8976 -> bb66__0_8976 [label="1"];
    bb64__0_8976 -> bb5__0_8976 [label="otherwise"];
    bb65__0_8976 -> bb68__0_8976 [label="return"];
    bb65__0_8976 -> bb200__0_8976 [label="unwind"];
    bb66__0_8976 -> bb67__0_8976 [label="return"];
    bb66__0_8976 -> bb211__0_8976 [label="unwind"];
    bb67__0_8976 -> bb188__0_8976 [label=""];
    bb68__0_8976 -> bb69__0_8976 [label="0"];
    bb68__0_8976 -> bb72__0_8976 [label="otherwise"];
    bb69__0_8976 -> bb70__0_8976 [label="return"];
    bb69__0_8976 -> bb200__0_8976 [label="unwind"];
    bb70__0_8976 -> bb71__0_8976 [label="return"];
    bb70__0_8976 -> bb200__0_8976 [label="unwind"];
    bb71__0_8976 -> bb188__0_8976 [label=""];
    bb72__0_8976 -> bb73__0_8976 [label="return"];
    bb72__0_8976 -> bb200__0_8976 [label="unwind"];
    bb73__0_8976 -> bb74__0_8976 [label="return"];
    bb73__0_8976 -> bb200__0_8976 [label="unwind"];
    bb74__0_8976 -> bb75__0_8976 [label="return"];
    bb74__0_8976 -> bb200__0_8976 [label="unwind"];
    bb75__0_8976 -> bb77__0_8976 [label="0"];
    bb75__0_8976 -> bb76__0_8976 [label="otherwise"];
    bb76__0_8976 -> bb81__0_8976 [label=""];
    bb77__0_8976 -> bb78__0_8976 [label="return"];
    bb77__0_8976 -> bb200__0_8976 [label="unwind"];
    bb78__0_8976 -> bb79__0_8976 [label="return"];
    bb78__0_8976 -> bb200__0_8976 [label="unwind"];
    bb79__0_8976 -> bb80__0_8976 [label="return"];
    bb79__0_8976 -> bb200__0_8976 [label="unwind"];
    bb80__0_8976 -> bb82__0_8976 [label="0"];
    bb80__0_8976 -> bb81__0_8976 [label="otherwise"];
    bb81__0_8976 -> bb85__0_8976 [label="return"];
    bb81__0_8976 -> bb200__0_8976 [label="unwind"];
    bb82__0_8976 -> bb83__0_8976 [label="return"];
    bb82__0_8976 -> bb200__0_8976 [label="unwind"];
    bb83__0_8976 -> bb84__0_8976 [label="return"];
    bb83__0_8976 -> bb200__0_8976 [label="unwind"];
    bb84__0_8976 -> bb188__0_8976 [label=""];
    bb85__0_8976 -> bb86__0_8976 [label="return"];
    bb85__0_8976 -> bb200__0_8976 [label="unwind"];
    bb86__0_8976 -> bb87__0_8976 [label="return"];
    bb86__0_8976 -> bb200__0_8976 [label="unwind"];
    bb87__0_8976 -> bb88__0_8976 [label="return"];
    bb87__0_8976 -> bb200__0_8976 [label="unwind"];
    bb88__0_8976 -> bb89__0_8976 [label="return"];
    bb88__0_8976 -> bb200__0_8976 [label="unwind"];
    bb89__0_8976 -> bb90__0_8976 [label="return"];
    bb89__0_8976 -> bb200__0_8976 [label="unwind"];
    bb90__0_8976 -> bb96__0_8976 [label="0"];
    bb90__0_8976 -> bb91__0_8976 [label="otherwise"];
    bb91__0_8976 -> bb92__0_8976 [label="return"];
    bb91__0_8976 -> bb200__0_8976 [label="unwind"];
    bb92__0_8976 -> bb93__0_8976 [label="return"];
    bb92__0_8976 -> bb200__0_8976 [label="unwind"];
    bb93__0_8976 -> bb94__0_8976 [label="return"];
    bb93__0_8976 -> bb210__0_8976 [label="unwind"];
    bb94__0_8976 -> bb95__0_8976 [label="return"];
    bb94__0_8976 -> bb210__0_8976 [label="unwind"];
    bb95__0_8976 -> bb187__0_8976 [label=""];
    bb96__0_8976 -> bb97__0_8976 [label="return"];
    bb96__0_8976 -> bb200__0_8976 [label="unwind"];
    bb97__0_8976 -> bb98__0_8976 [label="return"];
    bb97__0_8976 -> bb200__0_8976 [label="unwind"];
    bb98__0_8976 -> bb99__0_8976 [label="0"];
    bb98__0_8976 -> bb102__0_8976 [label="otherwise"];
    bb99__0_8976 -> bb100__0_8976 [label="return"];
    bb99__0_8976 -> bb200__0_8976 [label="unwind"];
    bb100__0_8976 -> bb101__0_8976 [label="return"];
    bb100__0_8976 -> bb200__0_8976 [label="unwind"];
    bb101__0_8976 -> bb187__0_8976 [label=""];
    bb102__0_8976 -> bb103__0_8976 [label="return"];
    bb102__0_8976 -> bb200__0_8976 [label="unwind"];
    bb103__0_8976 -> bb104__0_8976 [label="return"];
    bb103__0_8976 -> bb200__0_8976 [label="unwind"];
    bb104__0_8976 -> bb105__0_8976 [label="return"];
    bb104__0_8976 -> bb200__0_8976 [label="unwind"];
    bb105__0_8976 -> bb106__0_8976 [label="return"];
    bb105__0_8976 -> bb200__0_8976 [label="unwind"];
    bb106__0_8976 -> bb107__0_8976 [label="return"];
    bb106__0_8976 -> bb200__0_8976 [label="unwind"];
    bb107__0_8976 -> bb108__0_8976 [label="return"];
    bb107__0_8976 -> bb200__0_8976 [label="unwind"];
    bb108__0_8976 -> bb114__0_8976 [label="0"];
    bb108__0_8976 -> bb109__0_8976 [label="otherwise"];
    bb109__0_8976 -> bb110__0_8976 [label="return"];
    bb109__0_8976 -> bb200__0_8976 [label="unwind"];
    bb110__0_8976 -> bb111__0_8976 [label="return"];
    bb110__0_8976 -> bb200__0_8976 [label="unwind"];
    bb111__0_8976 -> bb112__0_8976 [label="return"];
    bb111__0_8976 -> bb208__0_8976 [label="unwind"];
    bb112__0_8976 -> bb113__0_8976 [label="return"];
    bb112__0_8976 -> bb208__0_8976 [label="unwind"];
    bb113__0_8976 -> bb186__0_8976 [label=""];
    bb114__0_8976 -> bb115__0_8976 [label="return"];
    bb114__0_8976 -> bb200__0_8976 [label="unwind"];
    bb115__0_8976 -> bb116__0_8976 [label="return"];
    bb115__0_8976 -> bb200__0_8976 [label="unwind"];
    bb116__0_8976 -> bb117__0_8976 [label="0"];
    bb116__0_8976 -> bb120__0_8976 [label="otherwise"];
    bb117__0_8976 -> bb118__0_8976 [label="return"];
    bb117__0_8976 -> bb200__0_8976 [label="unwind"];
    bb118__0_8976 -> bb119__0_8976 [label="return"];
    bb118__0_8976 -> bb200__0_8976 [label="unwind"];
    bb119__0_8976 -> bb186__0_8976 [label=""];
    bb120__0_8976 -> bb121__0_8976 [label="return"];
    bb120__0_8976 -> bb200__0_8976 [label="unwind"];
    bb121__0_8976 -> bb122__0_8976 [label="return"];
    bb121__0_8976 -> bb200__0_8976 [label="unwind"];
    bb122__0_8976 -> bb123__0_8976 [label="0"];
    bb122__0_8976 -> bb126__0_8976 [label="otherwise"];
    bb123__0_8976 -> bb124__0_8976 [label="return"];
    bb123__0_8976 -> bb200__0_8976 [label="unwind"];
    bb124__0_8976 -> bb125__0_8976 [label="return"];
    bb124__0_8976 -> bb200__0_8976 [label="unwind"];
    bb125__0_8976 -> bb186__0_8976 [label=""];
    bb126__0_8976 -> bb127__0_8976 [label="return"];
    bb126__0_8976 -> bb200__0_8976 [label="unwind"];
    bb127__0_8976 -> bb128__0_8976 [label="return"];
    bb127__0_8976 -> bb200__0_8976 [label="unwind"];
    bb128__0_8976 -> bb129__0_8976 [label="return"];
    bb128__0_8976 -> bb200__0_8976 [label="unwind"];
    bb129__0_8976 -> bb130__0_8976 [label="return"];
    bb129__0_8976 -> bb200__0_8976 [label="unwind"];
    bb130__0_8976 -> bb131__0_8976 [label="return"];
    bb130__0_8976 -> bb200__0_8976 [label="unwind"];
    bb131__0_8976 -> bb132__0_8976 [label="return"];
    bb131__0_8976 -> bb200__0_8976 [label="unwind"];
    bb132__0_8976 -> bb136__0_8976 [label="0"];
    bb132__0_8976 -> bb133__0_8976 [label="otherwise"];
    bb133__0_8976 -> bb134__0_8976 [label="return"];
    bb133__0_8976 -> bb200__0_8976 [label="unwind"];
    bb134__0_8976 -> bb135__0_8976 [label="return"];
    bb134__0_8976 -> bb200__0_8976 [label="unwind"];
    bb135__0_8976 -> bb186__0_8976 [label=""];
    bb136__0_8976 -> bb137__0_8976 [label="return"];
    bb136__0_8976 -> bb200__0_8976 [label="unwind"];
    bb137__0_8976 -> bb138__0_8976 [label="return"];
    bb137__0_8976 -> bb200__0_8976 [label="unwind"];
    bb138__0_8976 -> bb139__0_8976 [label="return"];
    bb138__0_8976 -> bb200__0_8976 [label="unwind"];
    bb139__0_8976 -> bb140__0_8976 [label="return"];
    bb139__0_8976 -> bb200__0_8976 [label="unwind"];
    bb140__0_8976 -> bb143__0_8976 [label="0"];
    bb140__0_8976 -> bb141__0_8976 [label="otherwise"];
    bb141__0_8976 -> bb142__0_8976 [label="return"];
    bb141__0_8976 -> bb200__0_8976 [label="unwind"];
    bb142__0_8976 -> bb186__0_8976 [label=""];
    bb143__0_8976 -> bb144__0_8976 [label="return"];
    bb143__0_8976 -> bb200__0_8976 [label="unwind"];
    bb144__0_8976 -> bb145__0_8976 [label="return"];
    bb144__0_8976 -> bb200__0_8976 [label="unwind"];
    bb145__0_8976 -> bb146__0_8976 [label="0"];
    bb145__0_8976 -> bb149__0_8976 [label="otherwise"];
    bb146__0_8976 -> bb147__0_8976 [label="return"];
    bb146__0_8976 -> bb200__0_8976 [label="unwind"];
    bb147__0_8976 -> bb148__0_8976 [label="return"];
    bb147__0_8976 -> bb200__0_8976 [label="unwind"];
    bb148__0_8976 -> bb186__0_8976 [label=""];
    bb149__0_8976 -> bb150__0_8976 [label="return"];
    bb149__0_8976 -> bb200__0_8976 [label="unwind"];
    bb150__0_8976 -> bb151__0_8976 [label="return"];
    bb150__0_8976 -> bb200__0_8976 [label="unwind"];
    bb151__0_8976 -> bb152__0_8976 [label="return"];
    bb151__0_8976 -> bb200__0_8976 [label="unwind"];
    bb152__0_8976 -> bb153__0_8976 [label="return"];
    bb152__0_8976 -> bb200__0_8976 [label="unwind"];
    bb153__0_8976 -> bb154__0_8976 [label="return"];
    bb153__0_8976 -> bb200__0_8976 [label="unwind"];
    bb154__0_8976 -> bb155__0_8976 [label="return"];
    bb154__0_8976 -> bb200__0_8976 [label="unwind"];
    bb155__0_8976 -> bb159__0_8976 [label="0"];
    bb155__0_8976 -> bb156__0_8976 [label="otherwise"];
    bb156__0_8976 -> bb157__0_8976 [label="return"];
    bb156__0_8976 -> bb200__0_8976 [label="unwind"];
    bb157__0_8976 -> bb158__0_8976 [label="return"];
    bb157__0_8976 -> bb200__0_8976 [label="unwind"];
    bb158__0_8976 -> bb186__0_8976 [label=""];
    bb159__0_8976 -> bb160__0_8976 [label="return"];
    bb159__0_8976 -> bb200__0_8976 [label="unwind"];
    bb160__0_8976 -> bb161__0_8976 [label="return"];
    bb160__0_8976 -> bb200__0_8976 [label="unwind"];
    bb161__0_8976 -> bb162__0_8976 [label="return"];
    bb161__0_8976 -> bb200__0_8976 [label="unwind"];
    bb162__0_8976 -> bb163__0_8976 [label="return"];
    bb162__0_8976 -> bb200__0_8976 [label="unwind"];
    bb163__0_8976 -> bb166__0_8976 [label="0"];
    bb163__0_8976 -> bb164__0_8976 [label="otherwise"];
    bb164__0_8976 -> bb165__0_8976 [label="return"];
    bb164__0_8976 -> bb200__0_8976 [label="unwind"];
    bb165__0_8976 -> bb186__0_8976 [label=""];
    bb166__0_8976 -> bb167__0_8976 [label="return"];
    bb166__0_8976 -> bb200__0_8976 [label="unwind"];
    bb167__0_8976 -> bb168__0_8976 [label="0"];
    bb167__0_8976 -> bb171__0_8976 [label="otherwise"];
    bb168__0_8976 -> bb169__0_8976 [label="return"];
    bb168__0_8976 -> bb200__0_8976 [label="unwind"];
    bb169__0_8976 -> bb170__0_8976 [label="return"];
    bb169__0_8976 -> bb200__0_8976 [label="unwind"];
    bb170__0_8976 -> bb186__0_8976 [label=""];
    bb171__0_8976 -> bb172__0_8976 [label="return"];
    bb171__0_8976 -> bb200__0_8976 [label="unwind"];
    bb172__0_8976 -> bb173__0_8976 [label="return"];
    bb172__0_8976 -> bb200__0_8976 [label="unwind"];
    bb173__0_8976 -> bb174__0_8976 [label="return"];
    bb173__0_8976 -> bb200__0_8976 [label="unwind"];
    bb174__0_8976 -> bb176__0_8976 [label="0"];
    bb174__0_8976 -> bb175__0_8976 [label="otherwise"];
    bb175__0_8976 -> bb179__0_8976 [label="return"];
    bb175__0_8976 -> bb200__0_8976 [label="unwind"];
    bb176__0_8976 -> bb177__0_8976 [label="return"];
    bb176__0_8976 -> bb200__0_8976 [label="unwind"];
    bb177__0_8976 -> bb178__0_8976 [label="return"];
    bb177__0_8976 -> bb200__0_8976 [label="unwind"];
    bb178__0_8976 -> bb186__0_8976 [label=""];
    bb179__0_8976 -> bb180__0_8976 [label="return"];
    bb179__0_8976 -> bb200__0_8976 [label="unwind"];
    bb180__0_8976 -> bb185__0_8976 [label="0"];
    bb180__0_8976 -> bb181__0_8976 [label="otherwise"];
    bb181__0_8976 -> bb182__0_8976 [label="return"];
    bb181__0_8976 -> bb200__0_8976 [label="unwind"];
    bb182__0_8976 -> bb183__0_8976 [label="return"];
    bb182__0_8976 -> bb200__0_8976 [label="unwind"];
    bb183__0_8976 -> bb184__0_8976 [label="return"];
    bb183__0_8976 -> bb200__0_8976 [label="unwind"];
    bb184__0_8976 -> bb186__0_8976 [label=""];
    bb185__0_8976 -> bb199__0_8976 [label=""];
    bb186__0_8976 -> bb187__0_8976 [label=""];
    bb187__0_8976 -> bb188__0_8976 [label=""];
    bb188__0_8976 -> bb189__0_8976 [label="return"];
    bb188__0_8976 -> bb201__0_8976 [label="unwind"];
    bb189__0_8976 -> bb190__0_8976 [label=""];
    bb190__0_8976 -> bb191__0_8976 [label=""];
    bb191__0_8976 -> bb192__0_8976 [label="return"];
    bb191__0_8976 -> bb202__0_8976 [label="unwind"];
    bb192__0_8976 -> bb193__0_8976 [label="return"];
    bb192__0_8976 -> bb203__0_8976 [label="unwind"];
    bb193__0_8976 -> bb194__0_8976 [label="return"];
    bb193__0_8976 -> bb204__0_8976 [label="unwind"];
    bb194__0_8976 -> bb195__0_8976 [label="return"];
    bb194__0_8976 -> bb205__0_8976 [label="unwind"];
    bb195__0_8976 -> bb196__0_8976 [label=""];
    bb196__0_8976 -> bb197__0_8976 [label="return"];
    bb196__0_8976 -> bb206__0_8976 [label="unwind"];
    bb197__0_8976 -> bb198__0_8976 [label=""];
    bb198__0_8976 -> bb199__0_8976 [label=""];
    bb200__0_8976 -> bb201__0_8976 [label="return"];
    bb201__0_8976 -> bb202__0_8976 [label="return"];
    bb202__0_8976 -> bb203__0_8976 [label="return"];
    bb203__0_8976 -> bb204__0_8976 [label="return"];
    bb204__0_8976 -> bb205__0_8976 [label="return"];
    bb205__0_8976 -> bb206__0_8976 [label="return"];
    bb207__0_8976 -> bb200__0_8976 [label="return"];
    bb208__0_8976 -> bb200__0_8976 [label="0"];
    bb208__0_8976 -> bb207__0_8976 [label="otherwise"];
    bb209__0_8976 -> bb200__0_8976 [label="return"];
    bb210__0_8976 -> bb200__0_8976 [label="0"];
    bb210__0_8976 -> bb209__0_8976 [label="otherwise"];
    bb211__0_8976 -> bb200__0_8976 [label=""];
    bb212__0_8976 -> bb201__0_8976 [label=""];
    bb213__0_8976 -> bb201__0_8976 [label=""];
    bb214__0_8976 -> bb201__0_8976 [label=""];
    bb215__0_8976 -> bb202__0_8976 [label=""];
    bb216__0_8976 -> bb203__0_8976 [label=""];
    bb217__0_8976 -> bb204__0_8976 [label=""];
    bb218__0_8976 -> bb205__0_8976 [label=""];
    bb219__0_8976 -> bb205__0_8976 [label=""];
    bb220__0_8976 -> bb206__0_8976 [label=""];
}
