digraph Mir_0_5540 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_pnl_pool(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::UpdatePerpMarketPnlPool&lt;ReErased&gt;&gt;, _2: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _7: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _14: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _19: Closure(DefId(0:5543 ~ drift[d311]::instructions::admin::handle_update_perp_market_pnl_pool::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _25: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _26: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _29: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _31: Closure(DefId(0:5544 ~ drift[d311]::instructions::admin::handle_update_perp_market_pnl_pool::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _37: ();<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _39: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u128;<br align="left"/>let mut _49: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _50: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _51: state::spot_market::SpotBalanceType;<br align="left"/>let mut _52: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _53: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _54: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _55: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _56: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _57: &amp;ReErased mut state::perp_market::PoolBalance;<br align="left"/>let mut _58: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _59: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: ();<br align="left"/>let _65: i64;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _67: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _68: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _69: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _70: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _73: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _74: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _75: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _80: i64;<br align="left"/>let _81: ();<br align="left"/>let mut _82: &amp;ReErased str;<br align="left"/>let _83: &amp;ReErased str;<br align="left"/>let mut _84: &amp;ReErased std::string::String;<br align="left"/>let _85: &amp;ReErased std::string::String;<br align="left"/>let _86: std::string::String;<br align="left"/>let _87: std::string::String;<br align="left"/>let mut _88: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _90: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _91: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _92: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _93: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _94: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _96: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased u16;<br align="left"/>let _99: &amp;ReErased u16;<br align="left"/>let _100: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _101: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _102: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased u64;<br align="left"/>let _104: &amp;ReErased u64;<br align="left"/>let mut _105: ();<br align="left"/>let mut _106: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _107: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _108: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPool&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPool&lt;ReErased&gt;;<br align="left"/>let mut _110: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPool&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPool&lt;ReErased&gt;;<br align="left"/>let mut _112: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _113: isize;<br align="left"/>let mut _114: isize;<br align="left"/>let mut _115: isize;<br align="left"/>let mut _116: isize;<br align="left"/>let mut _117: isize;<br align="left"/>let mut _118: isize;<br align="left"/>let mut _119: isize;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug amount =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug perp_market =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug spot_market =&gt; _25;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug res =&gt; _87;<br align="left"/>>;
    bb0__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_108 = deref_copy (_1.1: &amp;mut instructions::admin::UpdatePerpMarketPnlPool&lt;'_&gt;)<br/>_7 = &amp;((*_108).4: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_6 = &amp;(*_7)<br/></td></tr><tr><td align="left">_5 = constraints::perp_market_valid(move _6)</td></tr></table>>];
    bb1__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_113 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_109 = deref_copy (_1.1: &amp;mut instructions::admin::UpdatePerpMarketPnlPool&lt;'_&gt;)<br/>_18 = &amp;((*_109).4: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _18)</td></tr></table>>];
    bb4__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_123 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _17, move _19)</td></tr></table>>];
    bb8__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb10__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_15 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_14 = move _24<br/>StorageDead(_24)<br/>_13 = &amp;mut _14<br/>_117 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_110 = deref_copy (_1.1: &amp;mut instructions::admin::UpdatePerpMarketPnlPool&lt;'_&gt;)<br/>_30 = &amp;((*_110).2: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_29 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _30)</td></tr></table>>];
    bb11__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb12__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_115 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_28 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _29, move _31)</td></tr></table>>];
    bb14__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb15__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_32 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb16__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = move ((_27 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_26 = move _36<br/>StorageDead(_36)<br/>_25 = &amp;mut _26<br/>_121 = discriminant(_27)<br/>StorageDead(_27)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _2<br/></td></tr><tr><td align="left">_42 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _43)</td></tr></table>>];
    bb17__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb18__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>_119 = discriminant(_27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb20__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_44 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb21__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_41 as Continue).0: u128)<br/>_40 = _48<br/>StorageDead(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_107 = const _<br/>_50 = &amp;(*_107)<br/>_49 = &amp;(*_50)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _54)</td></tr></table>>];
    bb22__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb23__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_52 = &amp;mut (*_53)<br/>StorageDead(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_58 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _59)</td></tr></table>>];
    bb25__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_57 = &amp;mut ((*_58).2: state::perp_market::PoolBalance)<br/>_56 = &amp;mut (*_57)<br/>_55 = move _56 as &amp;mut dyn state::spot_market::SpotBalance (PointerCoercion(Unsize))<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_39 = update_spot_balances(move _40, move _49, move _52, move _55, const false)</td></tr></table>>];
    bb26__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb27__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_60 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb28__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_38 as Continue).0: ())<br/>_37 = _64<br/>StorageDead(_64)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_25)<br/></td></tr><tr><td align="left">_69 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb29__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb30__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_68 = &amp;(*_69)<br/>StorageDead(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_111 = deref_copy (_1.1: &amp;mut instructions::admin::UpdatePerpMarketPnlPool&lt;'_&gt;)<br/>_112 = deref_copy ((*_111).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_128 = (((_112.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_75 = &amp;(*_128)<br/></td></tr><tr><td align="left">_74 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb32__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/></td></tr><tr><td align="left">_72 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _73)</td></tr></table>>];
    bb33__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>_71 = ((*_72).2: u64)<br/></td></tr><tr><td align="left">_67 = validate_spot_market_vault_amount(move _68, move _71)</td></tr></table>>];
    bb34__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb35__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_76 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb36__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = ((_66 as Continue).0: i64)<br/>_65 = _80<br/>StorageDead(_80)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_106 = const _<br/>_91 = &amp;(*_106)<br/>_90 = &amp;(*_91)<br/>_89 = move _90 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_90)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;(*_13)<br/></td></tr><tr><td align="left">_100 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb37__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_79)<br/>_79 = _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb38__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = &amp;((*_100).21: u16)<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _98)</td></tr></table>>];
    bb40__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;_2<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_102 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _103)</td></tr></table>>];
    bb41__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_96 = [move _97, move _102]<br/>StorageDead(_102)<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/>_93 = move _94 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_88 = Arguments::&lt;'_&gt;::new_v1(move _89, move _93)</td></tr></table>>];
    bb42__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = format(move _88)</td></tr></table>>];
    bb43__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>_86 = move _87<br/>StorageDead(_87)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = &lt;String as Deref&gt;::deref(move _84)</td></tr></table>>];
    bb44__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_82 = &amp;(*_83)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_81 = solana_program::log::sol_log(move _82)</td></tr></table>>];
    bb45__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb46__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageLive(_105)<br/>_105 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _105)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb47__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb48__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb51__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb52__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left">return</td></tr></table>>];
    bb54__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb55__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">55 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb56__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb57__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb58__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left" balign="left">_125 = discriminant(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left" balign="left">_126 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_5540 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left" balign="left">_127 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5540 -> bb1__0_5540 [label="return"];
    bb1__0_5540 -> bb2__0_5540 [label="return"];
    bb1__0_5540 -> bb57__0_5540 [label="unwind"];
    bb2__0_5540 -> bb3__0_5540 [label="0"];
    bb2__0_5540 -> bb5__0_5540 [label="1"];
    bb2__0_5540 -> bb4__0_5540 [label="otherwise"];
    bb3__0_5540 -> bb7__0_5540 [label="return"];
    bb5__0_5540 -> bb6__0_5540 [label="return"];
    bb5__0_5540 -> bb60__0_5540 [label="unwind"];
    bb6__0_5540 -> bb53__0_5540 [label=""];
    bb7__0_5540 -> bb8__0_5540 [label="return"];
    bb7__0_5540 -> bb57__0_5540 [label="unwind"];
    bb8__0_5540 -> bb9__0_5540 [label="return"];
    bb8__0_5540 -> bb57__0_5540 [label="unwind"];
    bb9__0_5540 -> bb10__0_5540 [label="0"];
    bb9__0_5540 -> bb11__0_5540 [label="1"];
    bb9__0_5540 -> bb4__0_5540 [label="otherwise"];
    bb10__0_5540 -> bb13__0_5540 [label="return"];
    bb10__0_5540 -> bb56__0_5540 [label="unwind"];
    bb11__0_5540 -> bb12__0_5540 [label="return"];
    bb11__0_5540 -> bb59__0_5540 [label="unwind"];
    bb12__0_5540 -> bb52__0_5540 [label=""];
    bb13__0_5540 -> bb14__0_5540 [label="return"];
    bb13__0_5540 -> bb56__0_5540 [label="unwind"];
    bb14__0_5540 -> bb15__0_5540 [label="return"];
    bb14__0_5540 -> bb56__0_5540 [label="unwind"];
    bb15__0_5540 -> bb16__0_5540 [label="0"];
    bb15__0_5540 -> bb17__0_5540 [label="1"];
    bb15__0_5540 -> bb4__0_5540 [label="otherwise"];
    bb16__0_5540 -> bb19__0_5540 [label="return"];
    bb16__0_5540 -> bb55__0_5540 [label="unwind"];
    bb17__0_5540 -> bb18__0_5540 [label="return"];
    bb17__0_5540 -> bb58__0_5540 [label="unwind"];
    bb18__0_5540 -> bb51__0_5540 [label=""];
    bb19__0_5540 -> bb20__0_5540 [label="return"];
    bb19__0_5540 -> bb55__0_5540 [label="unwind"];
    bb20__0_5540 -> bb21__0_5540 [label="0"];
    bb20__0_5540 -> bb22__0_5540 [label="1"];
    bb20__0_5540 -> bb4__0_5540 [label="otherwise"];
    bb21__0_5540 -> bb24__0_5540 [label="return"];
    bb21__0_5540 -> bb55__0_5540 [label="unwind"];
    bb22__0_5540 -> bb23__0_5540 [label="return"];
    bb22__0_5540 -> bb55__0_5540 [label="unwind"];
    bb23__0_5540 -> bb49__0_5540 [label=""];
    bb24__0_5540 -> bb25__0_5540 [label="return"];
    bb24__0_5540 -> bb55__0_5540 [label="unwind"];
    bb25__0_5540 -> bb26__0_5540 [label="return"];
    bb25__0_5540 -> bb55__0_5540 [label="unwind"];
    bb26__0_5540 -> bb27__0_5540 [label="return"];
    bb26__0_5540 -> bb55__0_5540 [label="unwind"];
    bb27__0_5540 -> bb28__0_5540 [label="0"];
    bb27__0_5540 -> bb29__0_5540 [label="1"];
    bb27__0_5540 -> bb4__0_5540 [label="otherwise"];
    bb28__0_5540 -> bb31__0_5540 [label="return"];
    bb28__0_5540 -> bb55__0_5540 [label="unwind"];
    bb29__0_5540 -> bb30__0_5540 [label="return"];
    bb29__0_5540 -> bb55__0_5540 [label="unwind"];
    bb30__0_5540 -> bb49__0_5540 [label=""];
    bb31__0_5540 -> bb32__0_5540 [label="return"];
    bb31__0_5540 -> bb55__0_5540 [label="unwind"];
    bb32__0_5540 -> bb33__0_5540 [label="return"];
    bb32__0_5540 -> bb55__0_5540 [label="unwind"];
    bb33__0_5540 -> bb34__0_5540 [label="return"];
    bb33__0_5540 -> bb55__0_5540 [label="unwind"];
    bb34__0_5540 -> bb35__0_5540 [label="return"];
    bb34__0_5540 -> bb55__0_5540 [label="unwind"];
    bb35__0_5540 -> bb36__0_5540 [label="0"];
    bb35__0_5540 -> bb37__0_5540 [label="1"];
    bb35__0_5540 -> bb4__0_5540 [label="otherwise"];
    bb36__0_5540 -> bb39__0_5540 [label="return"];
    bb36__0_5540 -> bb55__0_5540 [label="unwind"];
    bb37__0_5540 -> bb38__0_5540 [label="return"];
    bb37__0_5540 -> bb55__0_5540 [label="unwind"];
    bb38__0_5540 -> bb50__0_5540 [label=""];
    bb39__0_5540 -> bb40__0_5540 [label="return"];
    bb39__0_5540 -> bb55__0_5540 [label="unwind"];
    bb40__0_5540 -> bb41__0_5540 [label="return"];
    bb40__0_5540 -> bb55__0_5540 [label="unwind"];
    bb41__0_5540 -> bb42__0_5540 [label="return"];
    bb41__0_5540 -> bb55__0_5540 [label="unwind"];
    bb42__0_5540 -> bb43__0_5540 [label="return"];
    bb42__0_5540 -> bb55__0_5540 [label="unwind"];
    bb43__0_5540 -> bb44__0_5540 [label="return"];
    bb43__0_5540 -> bb54__0_5540 [label="unwind"];
    bb44__0_5540 -> bb45__0_5540 [label="return"];
    bb44__0_5540 -> bb54__0_5540 [label="unwind"];
    bb45__0_5540 -> bb46__0_5540 [label="return"];
    bb45__0_5540 -> bb55__0_5540 [label="unwind"];
    bb46__0_5540 -> bb47__0_5540 [label="return"];
    bb46__0_5540 -> bb56__0_5540 [label="unwind"];
    bb47__0_5540 -> bb48__0_5540 [label="return"];
    bb47__0_5540 -> bb57__0_5540 [label="unwind"];
    bb48__0_5540 -> bb53__0_5540 [label=""];
    bb49__0_5540 -> bb50__0_5540 [label=""];
    bb50__0_5540 -> bb51__0_5540 [label="return"];
    bb50__0_5540 -> bb56__0_5540 [label="unwind"];
    bb51__0_5540 -> bb52__0_5540 [label="return"];
    bb51__0_5540 -> bb57__0_5540 [label="unwind"];
    bb52__0_5540 -> bb53__0_5540 [label=""];
    bb54__0_5540 -> bb55__0_5540 [label="return"];
    bb55__0_5540 -> bb56__0_5540 [label="return"];
    bb56__0_5540 -> bb57__0_5540 [label="return"];
    bb58__0_5540 -> bb56__0_5540 [label=""];
    bb59__0_5540 -> bb57__0_5540 [label=""];
    bb60__0_5540 -> bb57__0_5540 [label=""];
}
