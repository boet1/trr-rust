digraph Mir_0_3172 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;PhoenixFulfillmentParams&lt;'a, 'b&gt; as SpotFulfillmentParams&gt;::fulfill_order(_1: &amp;ReErased mut state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;, _2: controller::position::PositionDirection, _3: u64, _4: u64, _5: u64) -&gt; std::result::Result&lt;state::spot_fulfillment_params::ExternalSpotFill, error::ErrorCode&gt;<br align="left"/>let _6: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _7: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _8: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _9: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let _10: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _11: &amp;ReErased state::fulfillment_params::phoenix::PhoenixMarketContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _12: &amp;ReErased [u8];<br align="left"/>let mut _13: (&amp;ReErased [u8], &amp;ReErased [u8]);<br align="left"/>let mut _14: &amp;ReErased [u8];<br align="left"/>let _15: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _16: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _17: usize;<br align="left"/>let _18: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let _19: phoenix::program::MarketSizeParams;<br align="left"/>let _20: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let mut _21: phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _24: std::result::Result&lt;phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _25: &amp;ReErased phoenix::program::MarketSizeParams;<br align="left"/>let _26: &amp;ReErased phoenix::program::MarketSizeParams;<br align="left"/>let mut _27: &amp;ReErased [u8];<br align="left"/>let mut _28: Closure(DefId(0:3173 ~ drift[d311]::state::fulfillment_params::phoenix::{impl#6}::fulfill_order::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;;<br align="left"/>let _34: phoenix::state::Side;<br align="left"/>let _35: phoenix::quantities::Ticks;<br align="left"/>let mut _36: (phoenix::state::Side, phoenix::quantities::Ticks);<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: phoenix::state::Side;<br align="left"/>let mut _39: phoenix::quantities::Ticks;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, phoenix::quantities::Ticks&gt;;<br align="left"/>let mut _41: std::result::Result&lt;phoenix::quantities::Ticks, error::ErrorCode&gt;;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: &amp;ReErased phoenix::quantities::QuoteLotsPerBaseUnitPerTick;<br align="left"/>let _45: phoenix::quantities::QuoteLotsPerBaseUnitPerTick;<br align="left"/>let mut _46: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let mut _47: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: phoenix::quantities::Ticks;<br align="left"/>let mut _53: phoenix::state::Side;<br align="left"/>let mut _54: phoenix::quantities::Ticks;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, phoenix::quantities::Ticks&gt;;<br align="left"/>let mut _56: std::result::Result&lt;phoenix::quantities::Ticks, error::ErrorCode&gt;;<br align="left"/>let mut _57: u64;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: &amp;ReErased phoenix::quantities::QuoteLotsPerBaseUnitPerTick;<br align="left"/>let _60: phoenix::quantities::QuoteLotsPerBaseUnitPerTick;<br align="left"/>let mut _61: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let mut _62: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: phoenix::quantities::Ticks;<br align="left"/>let _68: ();<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: &amp;ReErased phoenix::quantities::Ticks;<br align="left"/>let mut _71: &amp;ReErased phoenix::quantities::Ticks;<br align="left"/>let _72: phoenix::quantities::Ticks;<br align="left"/>let mut _73: !;<br align="left"/>let _74: ();<br align="left"/>let mut _75: &amp;ReErased str;<br align="left"/>let _76: &amp;ReErased str;<br align="left"/>let mut _77: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let _78: phoenix::quantities::BaseLots;<br align="left"/>let mut _79: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, phoenix::quantities::BaseLots&gt;;<br align="left"/>let mut _80: std::result::Result&lt;phoenix::quantities::BaseLots, error::ErrorCode&gt;;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: &amp;ReErased phoenix::program::MarketHeader;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: phoenix::quantities::BaseLots;<br align="left"/>let _90: ();<br align="left"/>let mut _91: bool;<br align="left"/>let mut _92: &amp;ReErased phoenix::quantities::BaseLots;<br align="left"/>let mut _93: &amp;ReErased u64;<br align="left"/>let _94: u64;<br align="left"/>let mut _95: !;<br align="left"/>let _96: ();<br align="left"/>let mut _97: &amp;ReErased str;<br align="left"/>let _98: &amp;ReErased str;<br align="left"/>let mut _99: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let _100: phoenix::state::OrderPacket;<br align="left"/>let mut _101: phoenix::state::Side;<br align="left"/>let mut _102: std::option::Option&lt;phoenix::quantities::Ticks&gt;;<br align="left"/>let mut _103: phoenix::quantities::Ticks;<br align="left"/>let mut _104: phoenix::quantities::BaseLots;<br align="left"/>let mut _105: phoenix::state::SelfTradeBehavior;<br align="left"/>let mut _106: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: [u8; 16_usize];<br align="left"/>let mut _109: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, [u8; 16_usize]&gt;;<br align="left"/>let mut _110: std::result::Result&lt;[u8; 16_usize], error::ErrorCode&gt;;<br align="left"/>let mut _111: std::result::Result&lt;[u8; 16_usize], std::array::TryFromSliceError&gt;;<br align="left"/>let mut _112: &amp;ReErased [u8];<br align="left"/>let _113: &amp;ReErased [u8];<br align="left"/>let mut _114: &amp;ReErased [u8];<br align="left"/>let _115: &amp;ReErased [u8];<br align="left"/>let mut _116: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _117: std::ops::RangeTo&lt;usize&gt;;<br align="left"/>let mut _118: Closure(DefId(0:3174 ~ drift[d311]::state::fulfillment_params::phoenix::{impl#6}::fulfill_order::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((std::array::TryFromSliceError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _119: isize;<br align="left"/>let _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _123: [u8; 16_usize];<br align="left"/>let mut _124: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _125: std::option::Option&lt;u64&gt;;<br align="left"/>let _126: u64;<br align="left"/>let mut _127: &amp;ReErased phoenix::quantities::QuoteLots;<br align="left"/>let _128: phoenix::quantities::QuoteLots;<br align="left"/>let mut _129: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let _130: u64;<br align="left"/>let mut _131: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _132: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _133: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _134: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _135: u64;<br align="left"/>let mut _136: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _137: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _138: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _139: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _140: ();<br align="left"/>let mut _141: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _142: ();<br align="left"/>let mut _143: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _144: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _145: &amp;ReErased state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _146: phoenix::state::OrderPacket;<br align="left"/>let mut _147: isize;<br align="left"/>let _148: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _149: !;<br align="left"/>let mut _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _151: ();<br align="left"/>let _152: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _153: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let _154: &amp;ReErased std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _155: &amp;ReErased std::rc::Rc&lt;std::cell::RefCell&lt;&amp;ReErased mut [u8]&gt;, std::alloc::Global&gt;;<br align="left"/>let _156: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _157: &amp;ReErased state::fulfillment_params::phoenix::PhoenixMarketContext&lt;ReErased, ReErased&gt;;<br align="left"/>let _158: &amp;ReErased [u8];<br align="left"/>let mut _159: (&amp;ReErased [u8], &amp;ReErased [u8]);<br align="left"/>let mut _160: &amp;ReErased [u8];<br align="left"/>let _161: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _162: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _163: usize;<br align="left"/>let _164: ();<br align="left"/>let mut _165: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _166: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _167: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _168: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _169: Closure(DefId(0:3175 ~ drift[d311]::state::fulfillment_params::phoenix::{impl#6}::fulfill_order::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _170: isize;<br align="left"/>let _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _172: !;<br align="left"/>let mut _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _174: ();<br align="left"/>let _175: ();<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _177: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _178: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _179: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _180: Closure(DefId(0:3176 ~ drift[d311]::state::fulfillment_params::phoenix::{impl#6}::fulfill_order::{closure#3}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _181: isize;<br align="left"/>let _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _183: !;<br align="left"/>let mut _184: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _185: ();<br align="left"/>let _186: u64;<br align="left"/>let mut _187: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _188: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _189: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _190: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _191: u64;<br align="left"/>let mut _192: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _193: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _194: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _195: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _196: u64;<br align="left"/>let mut _197: &amp;ReErased phoenix::quantities::QuoteLots;<br align="left"/>let _198: phoenix::quantities::QuoteLots;<br align="left"/>let mut _199: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let _200: phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;;<br align="left"/>let mut _201: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;&gt;;<br align="left"/>let mut _202: std::result::Result&lt;phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _203: std::result::Result&lt;phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _204: &amp;ReErased phoenix::program::MarketSizeParams;<br align="left"/>let _205: &amp;ReErased phoenix::program::MarketSizeParams;<br align="left"/>let mut _206: &amp;ReErased [u8];<br align="left"/>let mut _207: Closure(DefId(0:3177 ~ drift[d311]::state::fulfillment_params::phoenix::{impl#6}::fulfill_order::{closure#4}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::prelude::ProgramError,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _208: isize;<br align="left"/>let _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _210: !;<br align="left"/>let mut _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _212: phoenix::state::markets::MarketWrapper&lt;ReErased, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;;<br align="left"/>let _213: state::spot_market::SpotBalanceType;<br align="left"/>let _214: u64;<br align="left"/>let mut _215: (state::spot_market::SpotBalanceType, u64);<br align="left"/>let mut _216: bool;<br align="left"/>let mut _217: u64;<br align="left"/>let mut _218: u64;<br align="left"/>let mut _219: state::spot_market::SpotBalanceType;<br align="left"/>let mut _220: u64;<br align="left"/>let mut _221: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _222: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _223: u64;<br align="left"/>let mut _224: u64;<br align="left"/>let mut _225: isize;<br align="left"/>let _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _227: !;<br align="left"/>let mut _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _229: u64;<br align="left"/>let mut _230: state::spot_market::SpotBalanceType;<br align="left"/>let mut _231: u64;<br align="left"/>let mut _232: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _233: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _234: u64;<br align="left"/>let mut _235: u64;<br align="left"/>let mut _236: isize;<br align="left"/>let _237: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _238: !;<br align="left"/>let mut _239: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _240: u64;<br align="left"/>let _241: ();<br align="left"/>let mut _242: bool;<br align="left"/>let mut _243: u64;<br align="left"/>let mut _244: !;<br align="left"/>let _245: ();<br align="left"/>let mut _246: &amp;ReErased str;<br align="left"/>let _247: &amp;ReErased str;<br align="left"/>let mut _248: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let _249: u64;<br align="left"/>let mut _250: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _251: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _252: u64;<br align="left"/>let mut _253: u64;<br align="left"/>let mut _254: isize;<br align="left"/>let _255: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _256: !;<br align="left"/>let mut _257: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _258: u64;<br align="left"/>let _259: state::spot_market::SpotBalanceType;<br align="left"/>let _260: u64;<br align="left"/>let mut _261: (state::spot_market::SpotBalanceType, u64);<br align="left"/>let mut _262: bool;<br align="left"/>let mut _263: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _264: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _265: state::spot_market::SpotBalanceType;<br align="left"/>let _266: u64;<br align="left"/>let mut _267: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _268: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _269: u64;<br align="left"/>let mut _270: u64;<br align="left"/>let mut _271: isize;<br align="left"/>let _272: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _273: !;<br align="left"/>let mut _274: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _275: u64;<br align="left"/>let mut _276: state::spot_market::SpotBalanceType;<br align="left"/>let mut _277: u64;<br align="left"/>let mut _278: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _279: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _280: u64;<br align="left"/>let mut _281: u64;<br align="left"/>let mut _282: isize;<br align="left"/>let _283: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _284: !;<br align="left"/>let mut _285: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _286: u64;<br align="left"/>let _287: u64;<br align="left"/>let mut _288: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _289: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _290: u64;<br align="left"/>let mut _291: u64;<br align="left"/>let mut _292: isize;<br align="left"/>let _293: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _294: !;<br align="left"/>let mut _295: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _296: u64;<br align="left"/>let mut _297: state::spot_market::SpotBalanceType;<br align="left"/>let mut _298: u64;<br align="left"/>let mut _299: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _300: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _301: u64;<br align="left"/>let mut _302: u64;<br align="left"/>let mut _303: isize;<br align="left"/>let _304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _305: !;<br align="left"/>let mut _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _307: u64;<br align="left"/>let mut _308: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let mut _309: u64;<br align="left"/>let mut _310: u64;<br align="left"/>let mut _311: state::spot_market::SpotBalanceType;<br align="left"/>let mut _312: state::spot_market::SpotBalanceType;<br align="left"/>let mut _313: u64;<br align="left"/>let mut _314: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _315: &amp;ReErased u64;<br align="left"/>let mut _316: &amp;ReErased phoenix::quantities::Ticks;<br align="left"/>let mut _317: &amp;ReErased mut [u8];<br align="left"/>let mut _318: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _319: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _320: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _321: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _322: &amp;ReErased mut [u8];<br align="left"/>let mut _323: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _324: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _325: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _326: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _327: &amp;ReErased dyn [Binder(Trait(phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;), [])] + ReErased;<br align="left"/>let mut _328: bool;<br align="left"/>let mut _329: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _330: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _331: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _332: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _333: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _334: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug taker_direction =&gt; _2;<br align="left"/>debug taker_price =&gt; _3;<br align="left"/>debug taker_base_asset_amount =&gt; _4;<br align="left"/>debug taker_max_quote_asset_amount =&gt; _5;<br align="left"/>debug market_data =&gt; _6;<br align="left"/>debug market_bytes =&gt; _12;<br align="left"/>debug header =&gt; _18;<br align="left"/>debug market_size_params =&gt; _19;<br align="left"/>debug market =&gt; _20;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug side =&gt; _34;<br align="left"/>debug price_in_ticks =&gt; _35;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug num_base_lots =&gt; _78;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug phoenix_order =&gt; _100;<br align="left"/>debug residual =&gt; _120;<br align="left"/>debug val =&gt; _123;<br align="left"/>debug market_accrued_fees_before =&gt; _126;<br align="left"/>debug base_before =&gt; _130;<br align="left"/>debug quote_before =&gt; _135;<br align="left"/>debug residual =&gt; _148;<br align="left"/>debug val =&gt; _151;<br align="left"/>debug market_data =&gt; _152;<br align="left"/>debug market_bytes =&gt; _158;<br align="left"/>debug residual =&gt; _171;<br align="left"/>debug val =&gt; _174;<br align="left"/>debug residual =&gt; _182;<br align="left"/>debug val =&gt; _185;<br align="left"/>debug base_after =&gt; _186;<br align="left"/>debug quote_after =&gt; _191;<br align="left"/>debug market_accrued_fees_after =&gt; _196;<br align="left"/>debug residual =&gt; _209;<br align="left"/>debug val =&gt; _212;<br align="left"/>debug base_update_direction =&gt; _213;<br align="left"/>debug base_asset_amount_filled =&gt; _214;<br align="left"/>debug residual =&gt; _226;<br align="left"/>debug val =&gt; _229;<br align="left"/>debug residual =&gt; _237;<br align="left"/>debug val =&gt; _240;<br align="left"/>debug phoenix_fee =&gt; _249;<br align="left"/>debug residual =&gt; _255;<br align="left"/>debug val =&gt; _258;<br align="left"/>debug quote_update_direction =&gt; _259;<br align="left"/>debug quote_asset_amount_filled =&gt; _260;<br align="left"/>debug quote_asset_amount_delta =&gt; _266;<br align="left"/>debug residual =&gt; _272;<br align="left"/>debug val =&gt; _275;<br align="left"/>debug residual =&gt; _283;<br align="left"/>debug val =&gt; _286;<br align="left"/>debug quote_asset_amount_delta =&gt; _287;<br align="left"/>debug residual =&gt; _293;<br align="left"/>debug val =&gt; _296;<br align="left"/>debug residual =&gt; _304;<br align="left"/>debug val =&gt; _307;<br align="left"/>>;
    bb0__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_328 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;((*_1).2: state::fulfillment_params::phoenix::PhoenixMarketContext&lt;'_, '_&gt;)<br/></td></tr><tr><td align="left">_10 = &lt;PhoenixMarketContext&lt;'_, '_&gt; as Deref&gt;::deref(move _11)</td></tr></table>>];
    bb1__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_9 = &amp;((*_10).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_8 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _9)</td></tr></table>>];
    bb2__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_7 = &amp;(*_8)<br/>StorageDead(_9)<br/>_328 = const true<br/></td></tr><tr><td align="left">_6 = RefCell::&lt;&amp;mut [u8]&gt;::borrow(move _7)</td></tr></table>>];
    bb3__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;_6<br/></td></tr><tr><td align="left">_15 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _16)</td></tr></table>>];
    bb4__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_317 = deref_copy (*_15)<br/>_14 = &amp;(*_317)<br/>StorageDead(_16)<br/>StorageLive(_17)<br/></td></tr><tr><td align="left">_17 = std::mem::size_of::&lt;MarketHeader&gt;()</td></tr></table>>];
    bb5__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">_13 = core::slice::&lt;impl [u8]&gt;::split_at(move _14, move _17)</td></tr></table>>];
    bb6__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_14)<br/>StorageLive(_12)<br/>_12 = (_13.1: &amp;[u8])<br/>StorageDead(_15)<br/>StorageDead(_13)<br/>StorageLive(_18)<br/>_18 = &amp;(((*_1).2: state::fulfillment_params::phoenix::PhoenixMarketContext&lt;'_, '_&gt;).1: phoenix::program::MarketHeader)<br/>StorageLive(_19)<br/>_19 = ((*_18).2: phoenix::program::MarketSizeParams)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;_19<br/>_25 = &amp;(*_26)<br/>StorageLive(_27)<br/>_27 = &amp;(*_12)<br/></td></tr><tr><td align="left">_24 = load_with_dispatch(move _25, move _27)</td></tr></table>>];
    bb7__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageLive(_28)<br/>_28 = {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:396:22: 396:25}<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;MarketWrapper&lt;'_, anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;, anchor_lang::prelude::ProgramError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:396:22: 396:25}&gt;(move _24, move _28)</td></tr></table>>];
    bb8__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;MarketWrapper&lt;'_, anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb9__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_29 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb10__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = move ((_22 as Continue).0: phoenix::state::markets::MarketWrapper&lt;'_, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;)<br/>_21 = move _33<br/>StorageDead(_33)<br/>_20 = (_21.0: &amp;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageLive(_36)<br/>_37 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb11__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb13__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = phoenix::state::Side::Ask<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _3<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_20)<br/></td></tr><tr><td align="left">_60 = &lt;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt; as phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;&gt;::get_tick_size(move _61)</td></tr></table>>];
    bb15__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = phoenix::state::Side::Bid<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _3<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;(*_20)<br/></td></tr><tr><td align="left">_45 = &lt;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt; as phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;&gt;::get_tick_size(move _46)</td></tr></table>>];
    bb16__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_44 = &amp;_45<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_43 = &lt;QuoteLotsPerBaseUnitPerTick as phoenix::quantities::WrapperU64&gt;::as_u64(move _44)</td></tr></table>>];
    bb17__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageLive(_47)<br/>_47 = &amp;(*_18)<br/></td></tr><tr><td align="left">_41 = taker_price_to_phoenix_price_in_ticks_rounded_down(move _42, move _43, move _47)</td></tr></table>>];
    bb18__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;Ticks, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb19__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_48 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb20__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_40 as Continue).0: phoenix::quantities::Ticks)<br/>_39 = _52<br/>StorageDead(_52)<br/>_36 = (move _38, move _39)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb22__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_59 = &amp;_60<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_58 = &lt;QuoteLotsPerBaseUnitPerTick as phoenix::quantities::WrapperU64&gt;::as_u64(move _59)</td></tr></table>>];
    bb24__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageLive(_62)<br/>_62 = &amp;(*_18)<br/></td></tr><tr><td align="left">_56 = taker_price_to_phoenix_price_in_ticks_rounded_up(move _57, move _58, move _62)</td></tr></table>>];
    bb25__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;Ticks, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb26__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_63 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb27__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_55 as Continue).0: phoenix::quantities::Ticks)<br/>_54 = _67<br/>StorageDead(_67)<br/>_36 = (move _53, move _54)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb29__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = (_36.0: phoenix::state::Side)<br/>StorageLive(_35)<br/>_35 = (_36.1: phoenix::quantities::Ticks)<br/>StorageDead(_36)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_35<br/>StorageLive(_71)<br/>_316 = const _<br/>_71 = &amp;(*_316)<br/></td></tr><tr><td align="left">_69 = &lt;Ticks as PartialEq&gt;::eq(move _70, move _71)</td></tr></table>>];
    bb31__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb32__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = const &quot;Price is too low&quot;<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = solana_program::log::sol_log(move _75)</td></tr></table>>];
    bb33__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageLive(_77)<br/></td></tr><tr><td align="left">_77 = ExternalSpotFill::empty()</td></tr></table>>];
    bb34__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _77)<br/>StorageDead(_77)<br/>StorageDead(_69)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>_68 = const ()<br/>StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _4<br/>StorageLive(_82)<br/>_82 = _5<br/>StorageLive(_83)<br/>_83 = _3<br/>StorageLive(_84)<br/>_84 = &amp;(*_18)<br/></td></tr><tr><td align="left">_80 = compute_base_lot_size(move _81, move _82, move _83, move _84)</td></tr></table>>];
    bb36__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;std::result::Result&lt;BaseLots, error::ErrorCode&gt; as Try&gt;::branch(move _80)</td></tr></table>>];
    bb37__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_85 = discriminant(_79)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb38__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_79 as Continue).0: phoenix::quantities::BaseLots)<br/>_78 = _89<br/>StorageDead(_89)<br/>StorageDead(_79)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;_78<br/>StorageLive(_93)<br/>_315 = const _<br/>_93 = &amp;(*_315)<br/></td></tr><tr><td align="left">_91 = &lt;BaseLots as PartialEq&lt;u64&gt;&gt;::eq(move _92, move _93)</td></tr></table>>];
    bb39__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_79 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb40__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left">switchInt(move _91)</td></tr></table>>];
    bb42__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = const &quot;No base lots to fill&quot;<br/>_97 = &amp;(*_98)<br/></td></tr><tr><td align="left">_96 = solana_program::log::sol_log(move _97)</td></tr></table>>];
    bb43__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_98)<br/>StorageDead(_96)<br/>StorageLive(_99)<br/></td></tr><tr><td align="left">_99 = ExternalSpotFill::empty()</td></tr></table>>];
    bb44__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _99)<br/>StorageDead(_99)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>_90 = const ()<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _34<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = _35<br/>_102 = Option::&lt;Ticks&gt;::Some(move _103)<br/>StorageDead(_103)<br/>StorageLive(_104)<br/>_104 = _78<br/>StorageLive(_105)<br/>_105 = Abort<br/>StorageLive(_106)<br/>_106 = Option::&lt;u64&gt;::Some(const 64_u64)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_318 = deref_copy ((*_1).3: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_319 = deref_copy ((*_318).0: &amp;anchor_lang::prelude::Pubkey)<br/>_116 = &amp;(*_319)<br/></td></tr><tr><td align="left">_115 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _116)</td></tr></table>>];
    bb46__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_114 = &amp;(*_115)<br/>StorageDead(_116)<br/>StorageLive(_117)<br/>_117 = RangeTo::&lt;usize&gt; { end: const 16_usize }<br/></td></tr><tr><td align="left">_113 = &lt;[u8] as Index&lt;RangeTo&lt;usize&gt;&gt;&gt;::index(move _114, move _117)</td></tr></table>>];
    bb47__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_112 = &amp;(*_113)<br/>StorageDead(_117)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_111 = &lt;&amp;[u8] as TryInto&lt;[u8; 16]&gt;&gt;::try_into(move _112)</td></tr></table>>];
    bb48__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_118)<br/>_118 = {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:454:30: 454:33}<br/></td></tr><tr><td align="left">_110 = std::result::Result::&lt;[u8; 16], TryFromSliceError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:454:30: 454:33}&gt;(move _111, move _118)</td></tr></table>>];
    bb49__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_109 = &lt;std::result::Result&lt;[u8; 16], error::ErrorCode&gt; as Try&gt;::branch(move _110)</td></tr></table>>];
    bb50__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_119 = discriminant(_109)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb51__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_109 as Continue).0: [u8; 16])<br/>_108 = _123<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_107 = core::num::&lt;impl u128&gt;::from_le_bytes(move _108)</td></tr></table>>];
    bb52__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = ((_109 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_122)<br/>_122 = _120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _122)</td></tr></table>>];
    bb53__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_120)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_124)<br/>_124 = Option::&lt;u64&gt;::None<br/>StorageLive(_125)<br/>_125 = Option::&lt;u64&gt;::None<br/>_100 = phoenix::state::OrderPacket::ImmediateOrCancel { side: move _101, price_in_ticks: move _102, num_base_lots: move _104, num_quote_lots: const _, min_base_lots_to_fill: const _, min_quote_lots_to_fill: const _, self_trade_behavior: move _105, match_limit: move _106, client_order_id: move _107, use_only_deposited_funds: const false, last_valid_slot: move _124, last_valid_unix_timestamp_in_seconds: move _125 }<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_109)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(*_20)<br/></td></tr><tr><td align="left">_128 = &lt;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt; as phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;&gt;::get_uncollected_fee_amount(move _129)</td></tr></table>>];
    bb55__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_127 = &amp;_128<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_126 = &lt;QuoteLots as phoenix::quantities::WrapperU64&gt;::as_u64(move _127)</td></tr></table>>];
    bb56__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_128)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_320 = deref_copy ((*_1).6: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_329 = (((_320.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_134 = &amp;(*_329)<br/></td></tr><tr><td align="left">_133 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _134)</td></tr></table>>];
    bb57__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _132)</td></tr></table>>];
    bb58__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>_130 = ((*_131).2: u64)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_321 = deref_copy ((*_1).7: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_330 = (((_321.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_139 = &amp;(*_330)<br/></td></tr><tr><td align="left">_138 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _139)</td></tr></table>>];
    bb59__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_137 = &amp;(*_138)<br/></td></tr><tr><td align="left">_136 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _137)</td></tr></table>>];
    bb60__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>_135 = ((*_136).2: u64)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_328 = const false<br/>_141 = move _6<br/></td></tr><tr><td align="left">_140 = std::mem::drop::&lt;Ref&lt;'_, &amp;mut [u8]&gt;&gt;(move _141)</td></tr></table>>];
    bb61__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_140)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;(*_1)<br/>StorageLive(_146)<br/>_146 = _100<br/></td></tr><tr><td align="left">_144 = PhoenixFulfillmentParams::&lt;'_, '_&gt;::invoke_new_order(move _145, move _146)</td></tr></table>>];
    bb62__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_143 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _144)</td></tr></table>>];
    bb63__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>_147 = discriminant(_143)<br/></td></tr><tr><td align="left">switchInt(move _147)</td></tr></table>>];
    bb64__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_143 as Continue).0: ())<br/>_142 = _151<br/>StorageDead(_151)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;((*_1).2: state::fulfillment_params::phoenix::PhoenixMarketContext&lt;'_, '_&gt;)<br/></td></tr><tr><td align="left">_156 = &lt;PhoenixMarketContext&lt;'_, '_&gt; as Deref&gt;::deref(move _157)</td></tr></table>>];
    bb65__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_148)<br/>_148 = ((_143 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_150)<br/>_150 = _148<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _150)</td></tr></table>>];
    bb66__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_155 = &amp;((*_156).2: std::rc::Rc&lt;std::cell::RefCell&lt;&amp;mut [u8]&gt;&gt;)<br/></td></tr><tr><td align="left">_154 = &lt;Rc&lt;RefCell&lt;&amp;mut [u8]&gt;&gt; as Deref&gt;::deref(move _155)</td></tr></table>>];
    bb68__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_153 = &amp;(*_154)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_152 = RefCell::&lt;&amp;mut [u8]&gt;::borrow(move _153)</td></tr></table>>];
    bb69__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_152<br/></td></tr><tr><td align="left">_161 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _162)</td></tr></table>>];
    bb70__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_322 = deref_copy (*_161)<br/>_160 = &amp;(*_322)<br/>StorageDead(_162)<br/>StorageLive(_163)<br/></td></tr><tr><td align="left">_163 = std::mem::size_of::&lt;MarketHeader&gt;()</td></tr></table>>];
    bb71__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left">_159 = core::slice::&lt;impl [u8]&gt;::split_at(move _160, move _163)</td></tr></table>>];
    bb72__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_160)<br/>StorageLive(_158)<br/>_158 = (_159.1: &amp;[u8])<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_323 = deref_copy ((*_1).6: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_331 = (((_323.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_168 = &amp;mut (*_331)<br/></td></tr><tr><td align="left">_167 = anchor_lang::prelude::Account::&lt;'_, anchor_spl::token::TokenAccount&gt;::reload(move _168)</td></tr></table>>];
    bb73__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageLive(_169)<br/>_169 = {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:476:49: 476:53}<br/></td></tr><tr><td align="left">_166 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:476:49: 476:53}&gt;(move _167, move _169)</td></tr></table>>];
    bb74__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">_165 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _166)</td></tr></table>>];
    bb75__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>_170 = discriminant(_165)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb76__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_165 as Continue).0: ())<br/>_164 = _174<br/>StorageDead(_174)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_324 = deref_copy ((*_1).7: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_332 = (((_324.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_179 = &amp;mut (*_332)<br/></td></tr><tr><td align="left">_178 = anchor_lang::prelude::Account::&lt;'_, anchor_spl::token::TokenAccount&gt;::reload(move _179)</td></tr></table>>];
    bb77__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_165 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_173)<br/>_173 = _171<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _173)</td></tr></table>>];
    bb78__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageLive(_180)<br/>_180 = {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:480:50: 480:54}<br/></td></tr><tr><td align="left">_177 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:480:50: 480:54}&gt;(move _178, move _180)</td></tr></table>>];
    bb80__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb81__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_181 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb82__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_176 as Continue).0: ())<br/>_175 = _185<br/>StorageDead(_185)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_325 = deref_copy ((*_1).6: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_333 = (((_325.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_190 = &amp;(*_333)<br/></td></tr><tr><td align="left">_189 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _190)</td></tr></table>>];
    bb83__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_182)<br/>_182 = ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_184)<br/>_184 = _182<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _184)</td></tr></table>>];
    bb84__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_187 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _188)</td></tr></table>>];
    bb86__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_188)<br/>_186 = ((*_187).2: u64)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_326 = deref_copy ((*_1).7: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_334 = (((_326.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_195 = &amp;(*_334)<br/></td></tr><tr><td align="left">_194 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _195)</td></tr></table>>];
    bb87__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_193 = &amp;(*_194)<br/></td></tr><tr><td align="left">_192 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb88__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>_191 = ((*_192).2: u64)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = &amp;_19<br/>_204 = &amp;(*_205)<br/>StorageLive(_206)<br/>_206 = &amp;(*_158)<br/></td></tr><tr><td align="left">_203 = load_with_dispatch(move _204, move _206)</td></tr></table>>];
    bb89__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_204)<br/>StorageLive(_207)<br/>_207 = {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:488:22: 488:25}<br/></td></tr><tr><td align="left">_202 = std::result::Result::&lt;MarketWrapper&lt;'_, anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;, anchor_lang::prelude::ProgramError&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/phoenix.rs:488:22: 488:25}&gt;(move _203, move _207)</td></tr></table>>];
    bb90__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">_201 = &lt;std::result::Result&lt;MarketWrapper&lt;'_, anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _202)</td></tr></table>>];
    bb91__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>_208 = discriminant(_201)<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb92__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = move ((_201 as Continue).0: phoenix::state::markets::MarketWrapper&lt;'_, anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;)<br/>_200 = move _212<br/>StorageDead(_212)<br/>_327 = deref_copy (_200.0: &amp;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, phoenix::state::markets::FIFOOrderId, phoenix::state::markets::FIFORestingOrder, phoenix::state::OrderPacket&gt;)<br/>_199 = &amp;(*_327)<br/></td></tr><tr><td align="left">_198 = &lt;dyn phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt; as phoenix::state::markets::Market&lt;anchor_lang::prelude::Pubkey, FIFOOrderId, FIFORestingOrder, OrderPacket&gt;&gt;::get_uncollected_fee_amount(move _199)</td></tr></table>>];
    bb93__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_201 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_211)<br/>_211 = _209<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _211)</td></tr></table>>];
    bb94__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_205)<br/>StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_197 = &amp;_198<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">_196 = &lt;QuoteLots as phoenix::quantities::WrapperU64&gt;::as_u64(move _197)</td></tr></table>>];
    bb96__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_205)<br/>StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = _186<br/>StorageLive(_218)<br/>_218 = _130<br/>_216 = Gt(move _217, move _218)<br/></td></tr><tr><td align="left">switchInt(move _216)</td></tr></table>>];
    bb97__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_217)<br/>StorageLive(_219)<br/>_219 = SpotBalanceType::Deposit<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = _186<br/>StorageLive(_224)<br/>_224 = _130<br/></td></tr><tr><td align="left">_222 = &lt;u64 as SafeMath&gt;::safe_sub(move _223, move _224)</td></tr></table>>];
    bb98__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_221 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _222)</td></tr></table>>];
    bb99__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>_225 = discriminant(_221)<br/></td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb100__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_221 as Continue).0: u64)<br/>_220 = _229<br/>StorageDead(_229)<br/>_215 = (move _219, move _220)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_226)<br/>_226 = ((_221 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_228)<br/>_228 = _226<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _228)</td></tr></table>>];
    bb102__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_217)<br/>StorageLive(_230)<br/>_230 = SpotBalanceType::Borrow<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_234 = _130<br/>StorageLive(_235)<br/>_235 = _186<br/></td></tr><tr><td align="left">_233 = &lt;u64 as SafeMath&gt;::safe_sub(move _234, move _235)</td></tr></table>>];
    bb104__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">_232 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _233)</td></tr></table>>];
    bb105__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>_236 = discriminant(_232)<br/></td></tr><tr><td align="left">switchInt(move _236)</td></tr></table>>];
    bb106__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_232 as Continue).0: u64)<br/>_231 = _240<br/>StorageDead(_240)<br/>_215 = (move _230, move _231)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = ((_232 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_239)<br/>_239 = _237<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _239)</td></tr></table>>];
    bb108__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_237)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageLive(_213)<br/>_213 = (_215.0: state::spot_market::SpotBalanceType)<br/>StorageLive(_214)<br/>_214 = (_215.1: u64)<br/>StorageDead(_215)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = _214<br/>_242 = Eq(move _243, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _242)</td></tr></table>>];
    bb110__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = const &quot;No base filled on phoenix&quot;<br/>_246 = &amp;(*_247)<br/></td></tr><tr><td align="left">_245 = solana_program::log::sol_log(move _246)</td></tr></table>>];
    bb111__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_247)<br/>StorageDead(_245)<br/>StorageLive(_248)<br/></td></tr><tr><td align="left">_248 = ExternalSpotFill::empty()</td></tr></table>>];
    bb112__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _248)<br/>StorageDead(_248)<br/>StorageDead(_242)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>_241 = const ()<br/>StorageDead(_242)<br/>StorageDead(_241)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = _196<br/>StorageLive(_253)<br/>_253 = _126<br/></td></tr><tr><td align="left">_251 = &lt;u64 as SafeMath&gt;::safe_sub(move _252, move _253)</td></tr></table>>];
    bb114__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_252)<br/></td></tr><tr><td align="left">_250 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _251)</td></tr></table>>];
    bb115__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>_254 = discriminant(_250)<br/></td></tr><tr><td align="left">switchInt(move _254)</td></tr></table>>];
    bb116__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_258)<br/>_258 = ((_250 as Continue).0: u64)<br/>_249 = _258<br/>StorageDead(_258)<br/>StorageDead(_250)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>_263 = &amp;_213<br/>StorageLive(_264)<br/>_314 = const _<br/>_264 = &amp;(*_314)<br/></td></tr><tr><td align="left">_262 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _263, move _264)</td></tr></table>>];
    bb117__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_255)<br/>_255 = ((_250 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_257)<br/>_257 = _255<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _257)</td></tr></table>>];
    bb118__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_255)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb120__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_263)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = _191<br/>StorageLive(_270)<br/>_270 = _135<br/></td></tr><tr><td align="left">_268 = &lt;u64 as SafeMath&gt;::safe_sub(move _269, move _270)</td></tr></table>>];
    bb121__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_269)<br/></td></tr><tr><td align="left">_267 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _268)</td></tr></table>>];
    bb122__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_271 = discriminant(_267)<br/></td></tr><tr><td align="left">switchInt(move _271)</td></tr></table>>];
    bb123__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_275)<br/>_275 = ((_267 as Continue).0: u64)<br/>_266 = _275<br/>StorageDead(_275)<br/>StorageDead(_267)<br/>StorageLive(_276)<br/>_276 = SpotBalanceType::Deposit<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_280 = _266<br/>StorageLive(_281)<br/>_281 = _249<br/></td></tr><tr><td align="left">_279 = &lt;u64 as SafeMath&gt;::safe_add(move _280, move _281)</td></tr></table>>];
    bb124__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_272)<br/>_272 = ((_267 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_274)<br/>_274 = _272<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _274)</td></tr></table>>];
    bb125__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">_278 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _279)</td></tr></table>>];
    bb127__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>_282 = discriminant(_278)<br/></td></tr><tr><td align="left">switchInt(move _282)</td></tr></table>>];
    bb128__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_286)<br/>_286 = ((_278 as Continue).0: u64)<br/>_277 = _286<br/>StorageDead(_286)<br/>_261 = (move _276, move _277)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_266)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageLive(_283)<br/>_283 = ((_278 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_285)<br/>_285 = _283<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _285)</td></tr></table>>];
    bb130__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageDead(_283)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_266)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_263)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>_290 = _135<br/>StorageLive(_291)<br/>_291 = _191<br/></td></tr><tr><td align="left">_289 = &lt;u64 as SafeMath&gt;::safe_sub(move _290, move _291)</td></tr></table>>];
    bb132__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_291)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">_288 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _289)</td></tr></table>>];
    bb133__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>_292 = discriminant(_288)<br/></td></tr><tr><td align="left">switchInt(move _292)</td></tr></table>>];
    bb134__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = ((_288 as Continue).0: u64)<br/>_287 = _296<br/>StorageDead(_296)<br/>StorageDead(_288)<br/>StorageLive(_297)<br/>_297 = SpotBalanceType::Borrow<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_301 = _287<br/>StorageLive(_302)<br/>_302 = _249<br/></td></tr><tr><td align="left">_300 = &lt;u64 as SafeMath&gt;::safe_sub(move _301, move _302)</td></tr></table>>];
    bb135__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_293)<br/>_293 = ((_288 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_295)<br/>_295 = _293<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _295)</td></tr></table>>];
    bb136__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_288)<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">_299 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _300)</td></tr></table>>];
    bb138__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_300)<br/>_303 = discriminant(_299)<br/></td></tr><tr><td align="left">switchInt(move _303)</td></tr></table>>];
    bb139__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = ((_299 as Continue).0: u64)<br/>_298 = _307<br/>StorageDead(_307)<br/>_261 = (move _297, move _298)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_287)<br/>StorageDead(_299)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_304)<br/>_304 = ((_299 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_306)<br/>_306 = _304<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _306)</td></tr></table>>];
    bb141__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_298)<br/>StorageDead(_297)<br/>StorageDead(_287)<br/>StorageDead(_299)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageLive(_259)<br/>_259 = (_261.0: state::spot_market::SpotBalanceType)<br/>StorageLive(_260)<br/>_260 = (_261.1: u64)<br/>StorageDead(_261)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_309 = _214<br/>StorageLive(_310)<br/>_310 = _260<br/>StorageLive(_311)<br/>_311 = _213<br/>StorageLive(_312)<br/>_312 = _259<br/>StorageLive(_313)<br/>_313 = _249<br/>_308 = ExternalSpotFill { base_asset_amount_filled: move _309, base_update_direction: move _311, quote_asset_amount_filled: move _310, quote_update_direction: move _312, settled_referrer_rebate: const 0_u64, unsettled_referrer_rebate: const 0_u64, fee: move _313 }<br/>StorageDead(_313)<br/>StorageDead(_312)<br/>StorageDead(_311)<br/>StorageDead(_310)<br/>StorageDead(_309)<br/>_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _308)<br/>StorageDead(_308)<br/>StorageDead(_260)<br/>StorageDead(_259)<br/>StorageDead(_249)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_196)<br/>StorageDead(_191)<br/>StorageDead(_186)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">drop(_152)</td></tr></table>>];
    bb143__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_135)<br/>StorageDead(_130)<br/>StorageDead(_126)<br/>StorageDead(_100)<br/>StorageDead(_78)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_12)<br/>_328 = const false<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_191)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/></td></tr><tr><td align="left">drop(_152)</td></tr></table>>];
    bb150__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_130)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">switchInt(_328)</td></tr></table>>];
    bb157__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">_328 = const false<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left">return</td></tr></table>>];
    bb159__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">159 (cleanup)</td></tr><tr><td align="left">drop(_152)</td></tr></table>>];
    bb160__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">160 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb161__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb162__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">162 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb163__0_3172 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">163 (cleanup)</td></tr><tr><td align="left">switchInt(_328)</td></tr></table>>];
    bb0__0_3172 -> bb1__0_3172 [label="return"];
    bb1__0_3172 -> bb2__0_3172 [label="return"];
    bb2__0_3172 -> bb3__0_3172 [label="return"];
    bb3__0_3172 -> bb4__0_3172 [label="return"];
    bb3__0_3172 -> bb163__0_3172 [label="unwind"];
    bb4__0_3172 -> bb5__0_3172 [label="return"];
    bb4__0_3172 -> bb163__0_3172 [label="unwind"];
    bb5__0_3172 -> bb6__0_3172 [label="return"];
    bb5__0_3172 -> bb163__0_3172 [label="unwind"];
    bb6__0_3172 -> bb7__0_3172 [label="return"];
    bb6__0_3172 -> bb163__0_3172 [label="unwind"];
    bb7__0_3172 -> bb8__0_3172 [label="return"];
    bb7__0_3172 -> bb163__0_3172 [label="unwind"];
    bb8__0_3172 -> bb9__0_3172 [label="return"];
    bb8__0_3172 -> bb163__0_3172 [label="unwind"];
    bb9__0_3172 -> bb10__0_3172 [label="0"];
    bb9__0_3172 -> bb12__0_3172 [label="1"];
    bb9__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb10__0_3172 -> bb15__0_3172 [label="0"];
    bb10__0_3172 -> bb14__0_3172 [label="1"];
    bb10__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb12__0_3172 -> bb13__0_3172 [label="return"];
    bb12__0_3172 -> bb163__0_3172 [label="unwind"];
    bb13__0_3172 -> bb156__0_3172 [label=""];
    bb14__0_3172 -> bb23__0_3172 [label="return"];
    bb14__0_3172 -> bb163__0_3172 [label="unwind"];
    bb15__0_3172 -> bb16__0_3172 [label="return"];
    bb15__0_3172 -> bb163__0_3172 [label="unwind"];
    bb16__0_3172 -> bb17__0_3172 [label="return"];
    bb16__0_3172 -> bb163__0_3172 [label="unwind"];
    bb17__0_3172 -> bb18__0_3172 [label="return"];
    bb17__0_3172 -> bb163__0_3172 [label="unwind"];
    bb18__0_3172 -> bb19__0_3172 [label="return"];
    bb18__0_3172 -> bb163__0_3172 [label="unwind"];
    bb19__0_3172 -> bb20__0_3172 [label="0"];
    bb19__0_3172 -> bb21__0_3172 [label="1"];
    bb19__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb20__0_3172 -> bb30__0_3172 [label=""];
    bb21__0_3172 -> bb22__0_3172 [label="return"];
    bb21__0_3172 -> bb163__0_3172 [label="unwind"];
    bb22__0_3172 -> bb155__0_3172 [label=""];
    bb23__0_3172 -> bb24__0_3172 [label="return"];
    bb23__0_3172 -> bb163__0_3172 [label="unwind"];
    bb24__0_3172 -> bb25__0_3172 [label="return"];
    bb24__0_3172 -> bb163__0_3172 [label="unwind"];
    bb25__0_3172 -> bb26__0_3172 [label="return"];
    bb25__0_3172 -> bb163__0_3172 [label="unwind"];
    bb26__0_3172 -> bb27__0_3172 [label="0"];
    bb26__0_3172 -> bb28__0_3172 [label="1"];
    bb26__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb27__0_3172 -> bb30__0_3172 [label=""];
    bb28__0_3172 -> bb29__0_3172 [label="return"];
    bb28__0_3172 -> bb163__0_3172 [label="unwind"];
    bb29__0_3172 -> bb155__0_3172 [label=""];
    bb30__0_3172 -> bb31__0_3172 [label="return"];
    bb30__0_3172 -> bb163__0_3172 [label="unwind"];
    bb31__0_3172 -> bb35__0_3172 [label="0"];
    bb31__0_3172 -> bb32__0_3172 [label="otherwise"];
    bb32__0_3172 -> bb33__0_3172 [label="return"];
    bb32__0_3172 -> bb163__0_3172 [label="unwind"];
    bb33__0_3172 -> bb34__0_3172 [label="return"];
    bb33__0_3172 -> bb163__0_3172 [label="unwind"];
    bb34__0_3172 -> bb154__0_3172 [label=""];
    bb35__0_3172 -> bb36__0_3172 [label="return"];
    bb35__0_3172 -> bb163__0_3172 [label="unwind"];
    bb36__0_3172 -> bb37__0_3172 [label="return"];
    bb36__0_3172 -> bb163__0_3172 [label="unwind"];
    bb37__0_3172 -> bb38__0_3172 [label="0"];
    bb37__0_3172 -> bb39__0_3172 [label="1"];
    bb37__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb38__0_3172 -> bb41__0_3172 [label="return"];
    bb38__0_3172 -> bb163__0_3172 [label="unwind"];
    bb39__0_3172 -> bb40__0_3172 [label="return"];
    bb39__0_3172 -> bb163__0_3172 [label="unwind"];
    bb40__0_3172 -> bb153__0_3172 [label=""];
    bb41__0_3172 -> bb45__0_3172 [label="0"];
    bb41__0_3172 -> bb42__0_3172 [label="otherwise"];
    bb42__0_3172 -> bb43__0_3172 [label="return"];
    bb42__0_3172 -> bb163__0_3172 [label="unwind"];
    bb43__0_3172 -> bb44__0_3172 [label="return"];
    bb43__0_3172 -> bb163__0_3172 [label="unwind"];
    bb44__0_3172 -> bb153__0_3172 [label=""];
    bb45__0_3172 -> bb46__0_3172 [label="return"];
    bb45__0_3172 -> bb163__0_3172 [label="unwind"];
    bb46__0_3172 -> bb47__0_3172 [label="return"];
    bb46__0_3172 -> bb163__0_3172 [label="unwind"];
    bb47__0_3172 -> bb48__0_3172 [label="return"];
    bb47__0_3172 -> bb163__0_3172 [label="unwind"];
    bb48__0_3172 -> bb49__0_3172 [label="return"];
    bb48__0_3172 -> bb163__0_3172 [label="unwind"];
    bb49__0_3172 -> bb50__0_3172 [label="return"];
    bb49__0_3172 -> bb163__0_3172 [label="unwind"];
    bb50__0_3172 -> bb51__0_3172 [label="0"];
    bb50__0_3172 -> bb52__0_3172 [label="1"];
    bb50__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb51__0_3172 -> bb54__0_3172 [label="return"];
    bb51__0_3172 -> bb163__0_3172 [label="unwind"];
    bb52__0_3172 -> bb53__0_3172 [label="return"];
    bb52__0_3172 -> bb163__0_3172 [label="unwind"];
    bb53__0_3172 -> bb152__0_3172 [label=""];
    bb54__0_3172 -> bb55__0_3172 [label="return"];
    bb54__0_3172 -> bb163__0_3172 [label="unwind"];
    bb55__0_3172 -> bb56__0_3172 [label="return"];
    bb55__0_3172 -> bb163__0_3172 [label="unwind"];
    bb56__0_3172 -> bb57__0_3172 [label="return"];
    bb56__0_3172 -> bb163__0_3172 [label="unwind"];
    bb57__0_3172 -> bb58__0_3172 [label="return"];
    bb57__0_3172 -> bb163__0_3172 [label="unwind"];
    bb58__0_3172 -> bb59__0_3172 [label="return"];
    bb58__0_3172 -> bb163__0_3172 [label="unwind"];
    bb59__0_3172 -> bb60__0_3172 [label="return"];
    bb59__0_3172 -> bb163__0_3172 [label="unwind"];
    bb60__0_3172 -> bb61__0_3172 [label="return"];
    bb60__0_3172 -> bb163__0_3172 [label="unwind"];
    bb61__0_3172 -> bb62__0_3172 [label="return"];
    bb61__0_3172 -> bb163__0_3172 [label="unwind"];
    bb62__0_3172 -> bb63__0_3172 [label="return"];
    bb62__0_3172 -> bb163__0_3172 [label="unwind"];
    bb63__0_3172 -> bb64__0_3172 [label="0"];
    bb63__0_3172 -> bb65__0_3172 [label="1"];
    bb63__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb64__0_3172 -> bb67__0_3172 [label="return"];
    bb64__0_3172 -> bb163__0_3172 [label="unwind"];
    bb65__0_3172 -> bb66__0_3172 [label="return"];
    bb65__0_3172 -> bb163__0_3172 [label="unwind"];
    bb66__0_3172 -> bb151__0_3172 [label=""];
    bb67__0_3172 -> bb68__0_3172 [label="return"];
    bb67__0_3172 -> bb163__0_3172 [label="unwind"];
    bb68__0_3172 -> bb69__0_3172 [label="return"];
    bb68__0_3172 -> bb163__0_3172 [label="unwind"];
    bb69__0_3172 -> bb70__0_3172 [label="return"];
    bb69__0_3172 -> bb159__0_3172 [label="unwind"];
    bb70__0_3172 -> bb71__0_3172 [label="return"];
    bb70__0_3172 -> bb159__0_3172 [label="unwind"];
    bb71__0_3172 -> bb72__0_3172 [label="return"];
    bb71__0_3172 -> bb159__0_3172 [label="unwind"];
    bb72__0_3172 -> bb73__0_3172 [label="return"];
    bb72__0_3172 -> bb159__0_3172 [label="unwind"];
    bb73__0_3172 -> bb74__0_3172 [label="return"];
    bb73__0_3172 -> bb159__0_3172 [label="unwind"];
    bb74__0_3172 -> bb75__0_3172 [label="return"];
    bb74__0_3172 -> bb159__0_3172 [label="unwind"];
    bb75__0_3172 -> bb76__0_3172 [label="0"];
    bb75__0_3172 -> bb77__0_3172 [label="1"];
    bb75__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb76__0_3172 -> bb79__0_3172 [label="return"];
    bb76__0_3172 -> bb159__0_3172 [label="unwind"];
    bb77__0_3172 -> bb78__0_3172 [label="return"];
    bb77__0_3172 -> bb159__0_3172 [label="unwind"];
    bb78__0_3172 -> bb149__0_3172 [label=""];
    bb79__0_3172 -> bb80__0_3172 [label="return"];
    bb79__0_3172 -> bb159__0_3172 [label="unwind"];
    bb80__0_3172 -> bb81__0_3172 [label="return"];
    bb80__0_3172 -> bb159__0_3172 [label="unwind"];
    bb81__0_3172 -> bb82__0_3172 [label="0"];
    bb81__0_3172 -> bb83__0_3172 [label="1"];
    bb81__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb82__0_3172 -> bb85__0_3172 [label="return"];
    bb82__0_3172 -> bb159__0_3172 [label="unwind"];
    bb83__0_3172 -> bb84__0_3172 [label="return"];
    bb83__0_3172 -> bb159__0_3172 [label="unwind"];
    bb84__0_3172 -> bb149__0_3172 [label=""];
    bb85__0_3172 -> bb86__0_3172 [label="return"];
    bb85__0_3172 -> bb159__0_3172 [label="unwind"];
    bb86__0_3172 -> bb87__0_3172 [label="return"];
    bb86__0_3172 -> bb159__0_3172 [label="unwind"];
    bb87__0_3172 -> bb88__0_3172 [label="return"];
    bb87__0_3172 -> bb159__0_3172 [label="unwind"];
    bb88__0_3172 -> bb89__0_3172 [label="return"];
    bb88__0_3172 -> bb159__0_3172 [label="unwind"];
    bb89__0_3172 -> bb90__0_3172 [label="return"];
    bb89__0_3172 -> bb159__0_3172 [label="unwind"];
    bb90__0_3172 -> bb91__0_3172 [label="return"];
    bb90__0_3172 -> bb159__0_3172 [label="unwind"];
    bb91__0_3172 -> bb92__0_3172 [label="0"];
    bb91__0_3172 -> bb93__0_3172 [label="1"];
    bb91__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb92__0_3172 -> bb95__0_3172 [label="return"];
    bb92__0_3172 -> bb159__0_3172 [label="unwind"];
    bb93__0_3172 -> bb94__0_3172 [label="return"];
    bb93__0_3172 -> bb159__0_3172 [label="unwind"];
    bb94__0_3172 -> bb148__0_3172 [label=""];
    bb95__0_3172 -> bb96__0_3172 [label="return"];
    bb95__0_3172 -> bb159__0_3172 [label="unwind"];
    bb96__0_3172 -> bb103__0_3172 [label="0"];
    bb96__0_3172 -> bb97__0_3172 [label="otherwise"];
    bb97__0_3172 -> bb98__0_3172 [label="return"];
    bb97__0_3172 -> bb159__0_3172 [label="unwind"];
    bb98__0_3172 -> bb99__0_3172 [label="return"];
    bb98__0_3172 -> bb159__0_3172 [label="unwind"];
    bb99__0_3172 -> bb100__0_3172 [label="0"];
    bb99__0_3172 -> bb101__0_3172 [label="1"];
    bb99__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb100__0_3172 -> bb109__0_3172 [label=""];
    bb101__0_3172 -> bb102__0_3172 [label="return"];
    bb101__0_3172 -> bb159__0_3172 [label="unwind"];
    bb102__0_3172 -> bb147__0_3172 [label=""];
    bb103__0_3172 -> bb104__0_3172 [label="return"];
    bb103__0_3172 -> bb159__0_3172 [label="unwind"];
    bb104__0_3172 -> bb105__0_3172 [label="return"];
    bb104__0_3172 -> bb159__0_3172 [label="unwind"];
    bb105__0_3172 -> bb106__0_3172 [label="0"];
    bb105__0_3172 -> bb107__0_3172 [label="1"];
    bb105__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb106__0_3172 -> bb109__0_3172 [label=""];
    bb107__0_3172 -> bb108__0_3172 [label="return"];
    bb107__0_3172 -> bb159__0_3172 [label="unwind"];
    bb108__0_3172 -> bb147__0_3172 [label=""];
    bb109__0_3172 -> bb113__0_3172 [label="0"];
    bb109__0_3172 -> bb110__0_3172 [label="otherwise"];
    bb110__0_3172 -> bb111__0_3172 [label="return"];
    bb110__0_3172 -> bb159__0_3172 [label="unwind"];
    bb111__0_3172 -> bb112__0_3172 [label="return"];
    bb111__0_3172 -> bb159__0_3172 [label="unwind"];
    bb112__0_3172 -> bb146__0_3172 [label=""];
    bb113__0_3172 -> bb114__0_3172 [label="return"];
    bb113__0_3172 -> bb159__0_3172 [label="unwind"];
    bb114__0_3172 -> bb115__0_3172 [label="return"];
    bb114__0_3172 -> bb159__0_3172 [label="unwind"];
    bb115__0_3172 -> bb116__0_3172 [label="0"];
    bb115__0_3172 -> bb117__0_3172 [label="1"];
    bb115__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb116__0_3172 -> bb119__0_3172 [label="return"];
    bb116__0_3172 -> bb159__0_3172 [label="unwind"];
    bb117__0_3172 -> bb118__0_3172 [label="return"];
    bb117__0_3172 -> bb159__0_3172 [label="unwind"];
    bb118__0_3172 -> bb145__0_3172 [label=""];
    bb119__0_3172 -> bb131__0_3172 [label="0"];
    bb119__0_3172 -> bb120__0_3172 [label="otherwise"];
    bb120__0_3172 -> bb121__0_3172 [label="return"];
    bb120__0_3172 -> bb159__0_3172 [label="unwind"];
    bb121__0_3172 -> bb122__0_3172 [label="return"];
    bb121__0_3172 -> bb159__0_3172 [label="unwind"];
    bb122__0_3172 -> bb123__0_3172 [label="0"];
    bb122__0_3172 -> bb124__0_3172 [label="1"];
    bb122__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb123__0_3172 -> bb126__0_3172 [label="return"];
    bb123__0_3172 -> bb159__0_3172 [label="unwind"];
    bb124__0_3172 -> bb125__0_3172 [label="return"];
    bb124__0_3172 -> bb159__0_3172 [label="unwind"];
    bb125__0_3172 -> bb144__0_3172 [label=""];
    bb126__0_3172 -> bb127__0_3172 [label="return"];
    bb126__0_3172 -> bb159__0_3172 [label="unwind"];
    bb127__0_3172 -> bb128__0_3172 [label="0"];
    bb127__0_3172 -> bb129__0_3172 [label="1"];
    bb127__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb128__0_3172 -> bb142__0_3172 [label=""];
    bb129__0_3172 -> bb130__0_3172 [label="return"];
    bb129__0_3172 -> bb159__0_3172 [label="unwind"];
    bb130__0_3172 -> bb144__0_3172 [label=""];
    bb131__0_3172 -> bb132__0_3172 [label="return"];
    bb131__0_3172 -> bb159__0_3172 [label="unwind"];
    bb132__0_3172 -> bb133__0_3172 [label="return"];
    bb132__0_3172 -> bb159__0_3172 [label="unwind"];
    bb133__0_3172 -> bb134__0_3172 [label="0"];
    bb133__0_3172 -> bb135__0_3172 [label="1"];
    bb133__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb134__0_3172 -> bb137__0_3172 [label="return"];
    bb134__0_3172 -> bb159__0_3172 [label="unwind"];
    bb135__0_3172 -> bb136__0_3172 [label="return"];
    bb135__0_3172 -> bb159__0_3172 [label="unwind"];
    bb136__0_3172 -> bb144__0_3172 [label=""];
    bb137__0_3172 -> bb138__0_3172 [label="return"];
    bb137__0_3172 -> bb159__0_3172 [label="unwind"];
    bb138__0_3172 -> bb139__0_3172 [label="0"];
    bb138__0_3172 -> bb140__0_3172 [label="1"];
    bb138__0_3172 -> bb11__0_3172 [label="otherwise"];
    bb139__0_3172 -> bb142__0_3172 [label=""];
    bb140__0_3172 -> bb141__0_3172 [label="return"];
    bb140__0_3172 -> bb159__0_3172 [label="unwind"];
    bb141__0_3172 -> bb144__0_3172 [label=""];
    bb142__0_3172 -> bb143__0_3172 [label="return"];
    bb142__0_3172 -> bb163__0_3172 [label="unwind"];
    bb143__0_3172 -> bb158__0_3172 [label=""];
    bb144__0_3172 -> bb145__0_3172 [label=""];
    bb145__0_3172 -> bb146__0_3172 [label=""];
    bb146__0_3172 -> bb148__0_3172 [label=""];
    bb147__0_3172 -> bb148__0_3172 [label=""];
    bb148__0_3172 -> bb149__0_3172 [label=""];
    bb149__0_3172 -> bb150__0_3172 [label="return"];
    bb149__0_3172 -> bb163__0_3172 [label="unwind"];
    bb150__0_3172 -> bb151__0_3172 [label=""];
    bb151__0_3172 -> bb152__0_3172 [label=""];
    bb152__0_3172 -> bb153__0_3172 [label=""];
    bb153__0_3172 -> bb154__0_3172 [label=""];
    bb154__0_3172 -> bb156__0_3172 [label=""];
    bb155__0_3172 -> bb156__0_3172 [label=""];
    bb156__0_3172 -> bb157__0_3172 [label="0"];
    bb156__0_3172 -> bb161__0_3172 [label="otherwise"];
    bb157__0_3172 -> bb158__0_3172 [label=""];
    bb159__0_3172 -> bb163__0_3172 [label="return"];
    bb161__0_3172 -> bb157__0_3172 [label="return"];
    bb161__0_3172 -> bb160__0_3172 [label="unwind"];
    bb162__0_3172 -> bb160__0_3172 [label="return"];
    bb163__0_3172 -> bb160__0_3172 [label="0"];
    bb163__0_3172 -> bb162__0_3172 [label="otherwise"];
}
