digraph Mir_0_799 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_spot_market_and_check_validity(_1: &amp;ReErased mut state::spot_market::SpotMarket, _2: &amp;ReErased state::oracle::OraclePriceData, _3: &amp;ReErased state::state::ValidityGuardRails, _4: i64, _5: std::option::Option&lt;math::oracle::DriftAction&gt;) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _10: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _11: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: ();<br align="left"/>let _18: ();<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: u16;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: ();<br align="left"/>let _23: i64;<br align="left"/>let _24: math::oracle::OracleValidity;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::oracle::OracleValidity&gt;;<br align="left"/>let mut _26: std::result::Result&lt;math::oracle::OracleValidity, error::ErrorCode&gt;;<br align="left"/>let mut _27: state::user::MarketType;<br align="left"/>let mut _28: u16;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _31: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _34: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: u64;<br align="left"/>let mut _41: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _42: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _43: math::oracle::LogMode;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: math::oracle::OracleValidity;<br align="left"/>let _49: ();<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _51: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _52: bool;<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _54: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _55: math::oracle::OracleValidity;<br align="left"/>let mut _56: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: bool;<br align="left"/>let mut _62: ();<br align="left"/>let _63: error::ErrorCode;<br align="left"/>let _64: ();<br align="left"/>let mut _65: &amp;ReErased str;<br align="left"/>let _66: &amp;ReErased str;<br align="left"/>let mut _67: &amp;ReErased std::string::String;<br align="left"/>let _68: &amp;ReErased std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let _70: std::string::String;<br align="left"/>let mut _71: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _75: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _79: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _80: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased error::ErrorCode;<br align="left"/>let _82: &amp;ReErased error::ErrorCode;<br align="left"/>let _83: ();<br align="left"/>let mut _84: &amp;ReErased str;<br align="left"/>let _85: &amp;ReErased str;<br align="left"/>let mut _86: &amp;ReErased std::string::String;<br align="left"/>let _87: &amp;ReErased std::string::String;<br align="left"/>let _88: std::string::String;<br align="left"/>let _89: std::string::String;<br align="left"/>let mut _90: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _91: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _93: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _94: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _95: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _97: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _98: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _99: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _101: &amp;ReErased &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _102: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased i64;<br align="left"/>let _104: &amp;ReErased i64;<br align="left"/>let mut _105: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased u16;<br align="left"/>let _107: &amp;ReErased u16;<br align="left"/>let mut _108: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let _110: &amp;ReErased std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _111: error::ErrorCode;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: ();<br align="left"/>let mut _117: ();<br align="left"/>let mut _118: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _119: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug spot_market =&gt; _1;<br align="left"/>debug oracle_price_data =&gt; _2;<br align="left"/>debug validity_guard_rails =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug action =&gt; _5;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug risk_ema_price =&gt; _23;<br align="left"/>debug oracle_validity =&gt; _24;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug error_code =&gt; _63;<br align="left"/>debug res =&gt; _70;<br align="left"/>debug res =&gt; _89;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>>;
    bb0__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut (*_1)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;(*_2)<br/>_10 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _11)<br/>StorageDead(_11)<br/>StorageLive(_12)<br/>_12 = _4<br/></td></tr><tr><td align="left">_8 = controller::spot_balance::update_spot_market_cumulative_interest(move _9, move _10, move _12)</td></tr></table>>];
    bb1__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_13 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb3__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_7 as Continue).0: ())<br/>_6 = _17<br/>StorageDead(_17)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = ((*_1).42: u16)<br/>_19 = Eq(move _20, const _)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb4__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb6__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_22)<br/>_22 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _22)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_18 = const ()<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_23)<br/>_23 = (((*_1).5: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = state::user::MarketType::Spot<br/>StorageLive(_28)<br/>_28 = ((*_1).42: u16)<br/>StorageLive(_29)<br/>_29 = _23<br/>StorageLive(_30)<br/>_30 = &amp;(*_2)<br/>StorageLive(_31)<br/>_31 = &amp;(*_3)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_1)<br/></td></tr><tr><td align="left">_34 = SpotMarket::get_max_confidence_interval_multiplier(move _35)</td></tr></table>>];
    bb9__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb10__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_36 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb11__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_33 as Continue).0: u64)<br/>_32 = _40<br/>StorageDead(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;((*_1).44: state::oracle::OracleSource)<br/>_41 = &amp;(*_42)<br/>StorageLive(_43)<br/>_43 = LogMode::ExchangeOracle<br/></td></tr><tr><td align="left">_26 = oracle_validity(move _27, move _28, move _29, move _30, move _31, move _32, move _41, move _43, const 0_i8)</td></tr></table>>];
    bb12__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb13__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb15__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_44 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb16__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_25 as Continue).0: math::oracle::OracleValidity)<br/>_24 = _48<br/>StorageDead(_48)<br/>StorageDead(_42)<br/>StorageDead(_33)<br/>StorageDead(_25)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _24<br/>StorageLive(_56)<br/>_56 = _5<br/></td></tr><tr><td align="left">_54 = is_oracle_valid_for_action(move _55, move _56)</td></tr></table>>];
    bb17__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb18__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb20__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_57 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb21__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_53 as Continue).0: bool)<br/>_52 = _61<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb22__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb23__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_62)<br/>_62 = ()<br/>_51 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _62)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageLive(_63)<br/>_63 = error::ErrorCode::InvalidOracle<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_119 = const _<br/>_74 = &amp;(*_119)<br/>_73 = &amp;(*_74)<br/>_72 = move _73 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_73)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;_63<br/>_81 = &amp;(*_82)<br/></td></tr><tr><td align="left">_80 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _81)</td></tr></table>>];
    bb26__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = [move _80]<br/>StorageDead(_80)<br/>_78 = &amp;_79<br/>_77 = &amp;(*_78)<br/>_76 = move _77 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_71 = Arguments::&lt;'_&gt;::new_v1(move _72, move _76)</td></tr></table>>];
    bb27__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = format(move _71)</td></tr></table>>];
    bb28__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_82)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_74)<br/>_69 = move _70<br/>StorageDead(_70)<br/>_68 = &amp;_69<br/>_67 = &amp;(*_68)<br/></td></tr><tr><td align="left">_66 = &lt;String as Deref&gt;::deref(move _67)</td></tr></table>>];
    bb29__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_65 = &amp;(*_66)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = solana_program::log::sol_log(move _65)</td></tr></table>>];
    bb30__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb31__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_118 = const _<br/>_93 = &amp;(*_118)<br/>_92 = &amp;(*_93)<br/>_91 = move _92 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_92)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;_2<br/>_100 = &amp;(*_101)<br/></td></tr><tr><td align="left">_99 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;&amp;OraclePriceData&gt;(move _100)</td></tr></table>>];
    bb32__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;_23<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_102 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _103)</td></tr></table>>];
    bb33__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;((*_1).42: u16)<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _106)</td></tr></table>>];
    bb34__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_5<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;Option&lt;DriftAction&gt;&gt;(move _109)</td></tr></table>>];
    bb35__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_98 = [move _99, move _102, move _105, move _108]<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>_97 = &amp;_98<br/>_96 = &amp;(*_97)<br/>_95 = move _96 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_90 = Arguments::&lt;'_&gt;::new_v1(move _91, move _95)</td></tr></table>>];
    bb36__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = format(move _90)</td></tr></table>>];
    bb37__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageDead(_93)<br/>_88 = move _89<br/>StorageDead(_89)<br/>_87 = &amp;_88<br/>_86 = &amp;(*_87)<br/></td></tr><tr><td align="left">_85 = &lt;String as Deref&gt;::deref(move _86)</td></tr></table>>];
    bb38__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_84 = &amp;(*_85)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_83 = solana_program::log::sol_log(move _84)</td></tr></table>>];
    bb39__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb40__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_83)<br/>StorageLive(_111)<br/>_111 = _63<br/>_51 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _111)<br/>StorageDead(_111)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb42__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_112 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb43__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_50 as Continue).0: ())<br/>_49 = _116<br/>StorageDead(_116)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageLive(_117)<br/>_117 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _117)<br/>StorageDead(_117)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb45__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">return</td></tr></table>>];
    bb50__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb51__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_69)</td></tr></table>>];
    bb52__0_799 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_799 -> bb1__0_799 [label="return"];
    bb1__0_799 -> bb2__0_799 [label="return"];
    bb2__0_799 -> bb3__0_799 [label="0"];
    bb2__0_799 -> bb5__0_799 [label="1"];
    bb2__0_799 -> bb4__0_799 [label="otherwise"];
    bb3__0_799 -> bb8__0_799 [label="0"];
    bb3__0_799 -> bb7__0_799 [label="otherwise"];
    bb5__0_799 -> bb6__0_799 [label="return"];
    bb6__0_799 -> bb49__0_799 [label=""];
    bb7__0_799 -> bb49__0_799 [label=""];
    bb8__0_799 -> bb9__0_799 [label="return"];
    bb9__0_799 -> bb10__0_799 [label="return"];
    bb10__0_799 -> bb11__0_799 [label="0"];
    bb10__0_799 -> bb12__0_799 [label="1"];
    bb10__0_799 -> bb4__0_799 [label="otherwise"];
    bb11__0_799 -> bb14__0_799 [label="return"];
    bb12__0_799 -> bb13__0_799 [label="return"];
    bb13__0_799 -> bb47__0_799 [label=""];
    bb14__0_799 -> bb15__0_799 [label="return"];
    bb15__0_799 -> bb16__0_799 [label="0"];
    bb15__0_799 -> bb17__0_799 [label="1"];
    bb15__0_799 -> bb4__0_799 [label="otherwise"];
    bb16__0_799 -> bb19__0_799 [label="return"];
    bb17__0_799 -> bb18__0_799 [label="return"];
    bb18__0_799 -> bb47__0_799 [label=""];
    bb19__0_799 -> bb20__0_799 [label="return"];
    bb20__0_799 -> bb21__0_799 [label="0"];
    bb20__0_799 -> bb22__0_799 [label="1"];
    bb20__0_799 -> bb4__0_799 [label="otherwise"];
    bb21__0_799 -> bb25__0_799 [label="0"];
    bb21__0_799 -> bb24__0_799 [label="otherwise"];
    bb22__0_799 -> bb23__0_799 [label="return"];
    bb23__0_799 -> bb46__0_799 [label=""];
    bb24__0_799 -> bb41__0_799 [label=""];
    bb25__0_799 -> bb26__0_799 [label="return"];
    bb26__0_799 -> bb27__0_799 [label="return"];
    bb27__0_799 -> bb28__0_799 [label="return"];
    bb28__0_799 -> bb29__0_799 [label="return"];
    bb28__0_799 -> bb51__0_799 [label="unwind"];
    bb29__0_799 -> bb30__0_799 [label="return"];
    bb29__0_799 -> bb51__0_799 [label="unwind"];
    bb30__0_799 -> bb31__0_799 [label="return"];
    bb30__0_799 -> bb52__0_799 [label="unwind"];
    bb31__0_799 -> bb32__0_799 [label="return"];
    bb32__0_799 -> bb33__0_799 [label="return"];
    bb33__0_799 -> bb34__0_799 [label="return"];
    bb34__0_799 -> bb35__0_799 [label="return"];
    bb35__0_799 -> bb36__0_799 [label="return"];
    bb36__0_799 -> bb37__0_799 [label="return"];
    bb37__0_799 -> bb38__0_799 [label="return"];
    bb37__0_799 -> bb50__0_799 [label="unwind"];
    bb38__0_799 -> bb39__0_799 [label="return"];
    bb38__0_799 -> bb50__0_799 [label="unwind"];
    bb39__0_799 -> bb40__0_799 [label="return"];
    bb39__0_799 -> bb52__0_799 [label="unwind"];
    bb40__0_799 -> bb41__0_799 [label=""];
    bb41__0_799 -> bb42__0_799 [label="return"];
    bb42__0_799 -> bb43__0_799 [label="0"];
    bb42__0_799 -> bb44__0_799 [label="1"];
    bb42__0_799 -> bb4__0_799 [label="otherwise"];
    bb43__0_799 -> bb49__0_799 [label=""];
    bb44__0_799 -> bb45__0_799 [label="return"];
    bb45__0_799 -> bb46__0_799 [label=""];
    bb46__0_799 -> bb48__0_799 [label=""];
    bb47__0_799 -> bb48__0_799 [label=""];
    bb48__0_799 -> bb49__0_799 [label=""];
    bb50__0_799 -> bb52__0_799 [label="return"];
    bb51__0_799 -> bb52__0_799 [label="return"];
}
