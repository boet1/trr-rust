digraph Mir_0_2786 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_spot_balance(_1: u128, _2: &amp;ReErased state::spot_market::SpotMarket, _3: &amp;ReErased state::spot_market::SpotBalanceType, _4: bool) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _5: u128;<br align="left"/>let mut _6: u32;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _9: u32;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: u32;<br align="left"/>let _15: u128;<br align="left"/>let mut _16: isize;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u128;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: u128;<br align="left"/>let _36: ();<br align="left"/>let mut _37: bool;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: u128;<br align="left"/>let mut _40: u128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u128;<br align="left"/>let mut _49: u128;<br align="left"/>debug token_amount =&gt; _1;<br align="left"/>debug spot_market =&gt; _2;<br align="left"/>debug balance_type =&gt; _3;<br align="left"/>debug round_up =&gt; _4;<br align="left"/>debug precision_increase =&gt; _5;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug cumulative_interest =&gt; _15;<br align="left"/>debug balance =&gt; _17;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>>;
    bb0__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_2).41: u32)<br/></td></tr><tr><td align="left">_8 = &lt;u32 as SafeMath&gt;::safe_sub(const 19_u32, move _9)</td></tr></table>>];
    bb1__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: u32)<br/>_6 = _14<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_5 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _6)</td></tr></table>>];
    bb4__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_7)<br/>StorageLive(_15)<br/>_16 = discriminant((*_3))<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb8__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_15 = ((*_2).14: u128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_15 = ((*_2).13: u128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _1<br/>StorageLive(_24)<br/>_24 = _5<br/></td></tr><tr><td align="left">_22 = &lt;u128 as SafeMath&gt;::safe_mul(move _23, move _24)</td></tr></table>>];
    bb11__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb12__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_25 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb13__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_21 as Continue).0: u128)<br/>_20 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = _15<br/></td></tr><tr><td align="left">_19 = &lt;u128 as SafeMath&gt;::safe_div(move _20, move _30)</td></tr></table>>];
    bb14__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb15__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb17__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_31 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb18__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_18 as Continue).0: u128)<br/>_17 = _35<br/>StorageDead(_35)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _4<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb19__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb20__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _17<br/>_38 = Ne(move _39, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb22__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _17<br/></td></tr><tr><td align="left">_42 = &lt;u128 as SafeMath&gt;::safe_add(move _43, const 1_u128)</td></tr></table>>];
    bb23__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb24__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_44 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb25__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_41 as Continue).0: u128)<br/>_40 = _48<br/>StorageDead(_48)<br/>_17 = move _40<br/>StorageDead(_40)<br/>StorageDead(_41)<br/>_36 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb27__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_36 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_49)<br/>_49 = _17<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _49)<br/>StorageDead(_49)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2786 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2786 -> bb1__0_2786 [label="return"];
    bb1__0_2786 -> bb2__0_2786 [label="return"];
    bb2__0_2786 -> bb3__0_2786 [label="0"];
    bb2__0_2786 -> bb5__0_2786 [label="1"];
    bb2__0_2786 -> bb4__0_2786 [label="otherwise"];
    bb3__0_2786 -> bb7__0_2786 [label="return"];
    bb5__0_2786 -> bb6__0_2786 [label="return"];
    bb6__0_2786 -> bb33__0_2786 [label=""];
    bb7__0_2786 -> bb9__0_2786 [label="0"];
    bb7__0_2786 -> bb8__0_2786 [label="1"];
    bb7__0_2786 -> bb4__0_2786 [label="otherwise"];
    bb8__0_2786 -> bb10__0_2786 [label=""];
    bb9__0_2786 -> bb10__0_2786 [label=""];
    bb10__0_2786 -> bb11__0_2786 [label="return"];
    bb11__0_2786 -> bb12__0_2786 [label="return"];
    bb12__0_2786 -> bb13__0_2786 [label="0"];
    bb12__0_2786 -> bb14__0_2786 [label="1"];
    bb12__0_2786 -> bb4__0_2786 [label="otherwise"];
    bb13__0_2786 -> bb16__0_2786 [label="return"];
    bb14__0_2786 -> bb15__0_2786 [label="return"];
    bb15__0_2786 -> bb31__0_2786 [label=""];
    bb16__0_2786 -> bb17__0_2786 [label="return"];
    bb17__0_2786 -> bb18__0_2786 [label="0"];
    bb17__0_2786 -> bb19__0_2786 [label="1"];
    bb17__0_2786 -> bb4__0_2786 [label="otherwise"];
    bb18__0_2786 -> bb29__0_2786 [label="0"];
    bb18__0_2786 -> bb21__0_2786 [label="otherwise"];
    bb19__0_2786 -> bb20__0_2786 [label="return"];
    bb20__0_2786 -> bb31__0_2786 [label=""];
    bb21__0_2786 -> bb28__0_2786 [label="0"];
    bb21__0_2786 -> bb22__0_2786 [label="otherwise"];
    bb22__0_2786 -> bb23__0_2786 [label="return"];
    bb23__0_2786 -> bb24__0_2786 [label="return"];
    bb24__0_2786 -> bb25__0_2786 [label="0"];
    bb24__0_2786 -> bb26__0_2786 [label="1"];
    bb24__0_2786 -> bb4__0_2786 [label="otherwise"];
    bb25__0_2786 -> bb30__0_2786 [label=""];
    bb26__0_2786 -> bb27__0_2786 [label="return"];
    bb27__0_2786 -> bb32__0_2786 [label=""];
    bb28__0_2786 -> bb29__0_2786 [label=""];
    bb29__0_2786 -> bb30__0_2786 [label=""];
    bb30__0_2786 -> bb34__0_2786 [label=""];
    bb31__0_2786 -> bb32__0_2786 [label=""];
    bb32__0_2786 -> bb33__0_2786 [label=""];
    bb33__0_2786 -> bb34__0_2786 [label=""];
}
