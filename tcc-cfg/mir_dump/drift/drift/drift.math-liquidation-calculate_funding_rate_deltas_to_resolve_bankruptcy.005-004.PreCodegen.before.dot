digraph Mir_0_2394 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_funding_rate_deltas_to_resolve_bankruptcy(_1: i128, _2: &amp;ReErased state::perp_market::PerpMarket) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _3: i128;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: i128;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: i128;<br align="left"/>let _15: ();<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _17: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _18: bool;<br align="left"/>let mut _19: i128;<br align="left"/>let mut _20: ();<br align="left"/>let _21: error::ErrorCode;<br align="left"/>let _22: ();<br align="left"/>let mut _23: &amp;ReErased str;<br align="left"/>let _24: &amp;ReErased str;<br align="left"/>let mut _25: &amp;ReErased std::string::String;<br align="left"/>let _26: &amp;ReErased std::string::String;<br align="left"/>let _27: std::string::String;<br align="left"/>let _28: std::string::String;<br align="left"/>let mut _29: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _30: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _31: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _32: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _33: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _34: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _35: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _36: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _37: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _38: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _39: &amp;ReErased error::ErrorCode;<br align="left"/>let _40: &amp;ReErased error::ErrorCode;<br align="left"/>let _41: ();<br align="left"/>let mut _42: &amp;ReErased str;<br align="left"/>let _43: &amp;ReErased str;<br align="left"/>let mut _44: error::ErrorCode;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: ();<br align="left"/>let mut _50: i128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _53: i128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _56: i128;<br align="left"/>let mut _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i128;<br align="left"/>let mut _63: i128;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: i128;<br align="left"/>let mut _69: i128;<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _71: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: i128;<br align="left"/>let mut _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug loss =&gt; _1;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug total_base_asset_amount =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug error_code =&gt; _21;<br align="left"/>debug res =&gt; _28;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>>;
    bb0__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = (((*_2).1: state::perp_market::AMM).13: i128)<br/></td></tr><tr><td align="left">_6 = core::num::&lt;impl i128&gt;::abs(move _7)</td></tr></table>>];
    bb1__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = (((*_2).1: state::perp_market::AMM).14: i128)<br/></td></tr><tr><td align="left">_8 = core::num::&lt;impl i128&gt;::abs(move _9)</td></tr></table>>];
    bb2__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_5 = &lt;i128 as SafeMath&gt;::safe_add(move _6, move _8)</td></tr></table>>];
    bb3__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb4__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_10 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb5__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_4 as Continue).0: i128)<br/>_3 = _14<br/>StorageDead(_14)<br/>StorageDead(_4)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = _3<br/>_18 = Ne(move _19, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb6__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb8__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_20)<br/>_20 = ()<br/>_17 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_21)<br/>_21 = error::ErrorCode::CantResolvePerpBankruptcy<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_77 = const _<br/>_32 = &amp;(*_77)<br/>_31 = &amp;(*_32)<br/>_30 = move _31 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_31)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;_21<br/>_39 = &amp;(*_40)<br/></td></tr><tr><td align="left">_38 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _39)</td></tr></table>>];
    bb11__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_37 = [move _38]<br/>StorageDead(_38)<br/>_36 = &amp;_37<br/>_35 = &amp;(*_36)<br/>_34 = move _35 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_29 = Arguments::&lt;'_&gt;::new_v1(move _30, move _34)</td></tr></table>>];
    bb12__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = format(move _29)</td></tr></table>>];
    bb13__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_32)<br/>_27 = move _28<br/>StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_24 = &lt;String as Deref&gt;::deref(move _25)</td></tr></table>>];
    bb14__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_23 = &amp;(*_24)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_22 = solana_program::log::sol_log(move _23)</td></tr></table>>];
    bb15__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb16__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = const &quot;Cant resolve perp bankruptcy when total base asset amount is 0&quot;<br/>_42 = &amp;(*_43)<br/></td></tr><tr><td align="left">_41 = solana_program::log::sol_log(move _42)</td></tr></table>>];
    bb17__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_43)<br/>StorageDead(_41)<br/>StorageLive(_44)<br/>_44 = _21<br/>_17 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _44)<br/>StorageDead(_44)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb19__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_45 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb20__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_16 as Continue).0: ())<br/>_15 = _49<br/>StorageDead(_49)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _1<br/></td></tr><tr><td align="left">_56 = core::num::&lt;impl i128&gt;::abs(move _57)</td></tr></table>>];
    bb21__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb22__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;i128 as SafeMath&gt;::safe_mul(move _56, const _)</td></tr></table>>];
    bb24__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb25__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_58 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb26__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_54 as Continue).0: i128)<br/>_53 = _62<br/>StorageDead(_62)<br/>StorageLive(_63)<br/>_63 = _3<br/></td></tr><tr><td align="left">_52 = &lt;i128 as SafeMath&gt;::safe_div_ceil(move _53, move _63)</td></tr></table>>];
    bb27__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb28__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb30__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_64 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb31__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_51 as Continue).0: i128)<br/>_50 = _68<br/>StorageDead(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/></td></tr><tr><td align="left">_71 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb32__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb33__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb35__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_72 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb36__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_70 as Continue).0: i128)<br/>_69 = _76<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_mul(move _50, move _69)</td></tr></table>>];
    bb37__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb38__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_69)<br/>StorageDead(_50)<br/>StorageDead(_3)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_50)<br/>StorageDead(_3)<br/>StorageDead(_70)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">return</td></tr></table>>];
    bb44__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">44 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb45__0_2394 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">45 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_2394 -> bb1__0_2394 [label="return"];
    bb1__0_2394 -> bb2__0_2394 [label="return"];
    bb2__0_2394 -> bb3__0_2394 [label="return"];
    bb3__0_2394 -> bb4__0_2394 [label="return"];
    bb4__0_2394 -> bb5__0_2394 [label="0"];
    bb4__0_2394 -> bb7__0_2394 [label="1"];
    bb4__0_2394 -> bb6__0_2394 [label="otherwise"];
    bb5__0_2394 -> bb10__0_2394 [label="0"];
    bb5__0_2394 -> bb9__0_2394 [label="otherwise"];
    bb7__0_2394 -> bb8__0_2394 [label="return"];
    bb8__0_2394 -> bb42__0_2394 [label=""];
    bb9__0_2394 -> bb18__0_2394 [label=""];
    bb10__0_2394 -> bb11__0_2394 [label="return"];
    bb11__0_2394 -> bb12__0_2394 [label="return"];
    bb12__0_2394 -> bb13__0_2394 [label="return"];
    bb13__0_2394 -> bb14__0_2394 [label="return"];
    bb13__0_2394 -> bb44__0_2394 [label="unwind"];
    bb14__0_2394 -> bb15__0_2394 [label="return"];
    bb14__0_2394 -> bb44__0_2394 [label="unwind"];
    bb15__0_2394 -> bb16__0_2394 [label="return"];
    bb15__0_2394 -> bb45__0_2394 [label="unwind"];
    bb16__0_2394 -> bb17__0_2394 [label="return"];
    bb17__0_2394 -> bb18__0_2394 [label=""];
    bb18__0_2394 -> bb19__0_2394 [label="return"];
    bb19__0_2394 -> bb20__0_2394 [label="0"];
    bb19__0_2394 -> bb21__0_2394 [label="1"];
    bb19__0_2394 -> bb6__0_2394 [label="otherwise"];
    bb20__0_2394 -> bb23__0_2394 [label="return"];
    bb21__0_2394 -> bb22__0_2394 [label="return"];
    bb22__0_2394 -> bb42__0_2394 [label=""];
    bb23__0_2394 -> bb24__0_2394 [label="return"];
    bb24__0_2394 -> bb25__0_2394 [label="return"];
    bb25__0_2394 -> bb26__0_2394 [label="0"];
    bb25__0_2394 -> bb27__0_2394 [label="1"];
    bb25__0_2394 -> bb6__0_2394 [label="otherwise"];
    bb26__0_2394 -> bb29__0_2394 [label="return"];
    bb27__0_2394 -> bb28__0_2394 [label="return"];
    bb28__0_2394 -> bb40__0_2394 [label=""];
    bb29__0_2394 -> bb30__0_2394 [label="return"];
    bb30__0_2394 -> bb31__0_2394 [label="0"];
    bb30__0_2394 -> bb32__0_2394 [label="1"];
    bb30__0_2394 -> bb6__0_2394 [label="otherwise"];
    bb31__0_2394 -> bb34__0_2394 [label="return"];
    bb32__0_2394 -> bb33__0_2394 [label="return"];
    bb33__0_2394 -> bb40__0_2394 [label=""];
    bb34__0_2394 -> bb35__0_2394 [label="return"];
    bb35__0_2394 -> bb36__0_2394 [label="0"];
    bb35__0_2394 -> bb37__0_2394 [label="1"];
    bb35__0_2394 -> bb6__0_2394 [label="otherwise"];
    bb36__0_2394 -> bb39__0_2394 [label="return"];
    bb37__0_2394 -> bb38__0_2394 [label="return"];
    bb38__0_2394 -> bb41__0_2394 [label=""];
    bb39__0_2394 -> bb43__0_2394 [label=""];
    bb40__0_2394 -> bb41__0_2394 [label=""];
    bb41__0_2394 -> bb43__0_2394 [label=""];
    bb42__0_2394 -> bb43__0_2394 [label=""];
    bb44__0_2394 -> bb45__0_2394 [label="return"];
}
