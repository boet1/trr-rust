digraph Mir_0_1208 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_add_insurance_fund_stake(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;&gt;, _2: u16, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: u64;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: anchor_lang::error::Error;<br align="left"/>let mut _9: error::ErrorCode;<br align="left"/>let _10: anchor_lang::prelude::Clock;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _12: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _17: anchor_lang::prelude::Clock;<br align="left"/>let _18: i64;<br align="left"/>let _19: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _20: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _23: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _25: Closure(DefId(0:8513 ~ drift[d311]::instructions::if_staker::handle_add_insurance_fund_stake::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _31: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _32: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _34: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _35: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _36: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _37: Closure(DefId(0:8514 ~ drift[d311]::instructions::if_staker::handle_add_insurance_fund_stake::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _43: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _44: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _46: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _47: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _49: Closure(DefId(0:8515 ~ drift[d311]::instructions::if_staker::handle_add_insurance_fund_stake::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _55: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _56: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _57: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _58: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _59: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _60: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _62: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _63: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _64: isize;<br align="left"/>let _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _66: !;<br align="left"/>let mut _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _68: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _69: ();<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _71: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _74: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _75: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _76: state::paused_operations::InsuranceFundOperation;<br align="left"/>let mut _77: ();<br align="left"/>let _78: error::ErrorCode;<br align="left"/>let _79: ();<br align="left"/>let mut _80: &amp;ReErased str;<br align="left"/>let _81: &amp;ReErased str;<br align="left"/>let mut _82: &amp;ReErased std::string::String;<br align="left"/>let _83: &amp;ReErased std::string::String;<br align="left"/>let _84: std::string::String;<br align="left"/>let _85: std::string::String;<br align="left"/>let mut _86: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _88: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _89: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _90: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _91: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _92: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _93: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _94: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _95: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _96: &amp;ReErased error::ErrorCode;<br align="left"/>let _97: &amp;ReErased error::ErrorCode;<br align="left"/>let _98: ();<br align="left"/>let mut _99: &amp;ReErased str;<br align="left"/>let _100: &amp;ReErased str;<br align="left"/>let mut _101: &amp;ReErased std::string::String;<br align="left"/>let _102: &amp;ReErased std::string::String;<br align="left"/>let _103: std::string::String;<br align="left"/>let _104: std::string::String;<br align="left"/>let mut _105: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _107: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _108: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _109: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _110: error::ErrorCode;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: ();<br align="left"/>let _116: ();<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _118: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: u16;<br align="left"/>let mut _121: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _122: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _123: u16;<br align="left"/>let mut _124: ();<br align="left"/>let _125: error::ErrorCode;<br align="left"/>let _126: ();<br align="left"/>let mut _127: &amp;ReErased str;<br align="left"/>let _128: &amp;ReErased str;<br align="left"/>let mut _129: &amp;ReErased std::string::String;<br align="left"/>let _130: &amp;ReErased std::string::String;<br align="left"/>let _131: std::string::String;<br align="left"/>let _132: std::string::String;<br align="left"/>let mut _133: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _135: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _136: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _137: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _138: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _139: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _140: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _141: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _142: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased error::ErrorCode;<br align="left"/>let _144: &amp;ReErased error::ErrorCode;<br align="left"/>let _145: ();<br align="left"/>let mut _146: &amp;ReErased str;<br align="left"/>let _147: &amp;ReErased str;<br align="left"/>let mut _148: error::ErrorCode;<br align="left"/>let mut _149: isize;<br align="left"/>let _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _151: !;<br align="left"/>let mut _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _153: ();<br align="left"/>let _154: ();<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _156: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _157: bool;<br align="left"/>let mut _158: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _159: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _160: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _161: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _162: state::perp_market::MarketStatus;<br align="left"/>let mut _163: ();<br align="left"/>let _164: error::ErrorCode;<br align="left"/>let _165: ();<br align="left"/>let mut _166: &amp;ReErased str;<br align="left"/>let _167: &amp;ReErased str;<br align="left"/>let mut _168: &amp;ReErased std::string::String;<br align="left"/>let _169: &amp;ReErased std::string::String;<br align="left"/>let _170: std::string::String;<br align="left"/>let _171: std::string::String;<br align="left"/>let mut _172: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _174: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _175: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _176: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _177: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _178: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _179: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _180: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _181: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _182: &amp;ReErased error::ErrorCode;<br align="left"/>let _183: &amp;ReErased error::ErrorCode;<br align="left"/>let _184: ();<br align="left"/>let mut _185: &amp;ReErased str;<br align="left"/>let _186: &amp;ReErased str;<br align="left"/>let mut _187: &amp;ReErased std::string::String;<br align="left"/>let _188: &amp;ReErased std::string::String;<br align="left"/>let _189: std::string::String;<br align="left"/>let _190: std::string::String;<br align="left"/>let mut _191: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _192: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _193: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _194: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _195: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _196: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _197: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _198: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _199: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _200: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _201: &amp;ReErased u16;<br align="left"/>let _202: &amp;ReErased u16;<br align="left"/>let _203: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _204: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _205: error::ErrorCode;<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _210: ();<br align="left"/>let _211: ();<br align="left"/>let mut _212: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _213: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _214: bool;<br align="left"/>let mut _215: u128;<br align="left"/>let mut _216: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _217: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _218: bool;<br align="left"/>let mut _219: u64;<br align="left"/>let mut _220: &amp;ReErased state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _221: &amp;ReErased std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _222: ();<br align="left"/>let _223: error::ErrorCode;<br align="left"/>let _224: ();<br align="left"/>let mut _225: &amp;ReErased str;<br align="left"/>let _226: &amp;ReErased str;<br align="left"/>let mut _227: &amp;ReErased std::string::String;<br align="left"/>let _228: &amp;ReErased std::string::String;<br align="left"/>let _229: std::string::String;<br align="left"/>let _230: std::string::String;<br align="left"/>let mut _231: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _232: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _233: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _234: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _235: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _236: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _237: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _238: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _239: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _240: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _241: &amp;ReErased error::ErrorCode;<br align="left"/>let _242: &amp;ReErased error::ErrorCode;<br align="left"/>let _243: ();<br align="left"/>let mut _244: &amp;ReErased str;<br align="left"/>let _245: &amp;ReErased str;<br align="left"/>let mut _246: error::ErrorCode;<br align="left"/>let mut _247: isize;<br align="left"/>let _248: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _249: !;<br align="left"/>let mut _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _251: ();<br align="left"/>let _252: ();<br align="left"/>let _253: ();<br align="left"/>let mut _254: bool;<br align="left"/>let mut _255: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _256: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _257: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _258: ();<br align="left"/>let mut _259: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _260: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _261: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _262: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _264: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _265: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _266: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _267: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _268: i64;<br align="left"/>let mut _269: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _270: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _271: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _272: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _273: &amp;ReErased state::state::State;<br align="left"/>let _274: &amp;ReErased state::state::State;<br align="left"/>let mut _275: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _276: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _277: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _278: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _279: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _280: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _281: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _282: &amp;ReErased std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _283: isize;<br align="left"/>let _284: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _285: !;<br align="left"/>let mut _286: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _287: ();<br align="left"/>let _288: ();<br align="left"/>let mut _289: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _290: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _291: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _292: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _293: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _294: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _295: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _296: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _297: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _298: i64;<br align="left"/>let mut _299: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _300: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _301: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _302: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _303: &amp;ReErased state::state::State;<br align="left"/>let _304: &amp;ReErased state::state::State;<br align="left"/>let mut _305: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _306: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _307: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _308: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _309: isize;<br align="left"/>let _310: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _311: !;<br align="left"/>let mut _312: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _313: ();<br align="left"/>let _314: ();<br align="left"/>let mut _315: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _316: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _317: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _318: isize;<br align="left"/>let _319: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _320: !;<br align="left"/>let mut _321: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _322: ();<br align="left"/>let _323: ();<br align="left"/>let mut _324: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _325: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _326: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _327: isize;<br align="left"/>let _328: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _329: !;<br align="left"/>let mut _330: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _331: ();<br align="left"/>let _332: i64;<br align="left"/>let mut _333: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _334: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _335: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _336: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _337: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _338: u64;<br align="left"/>let mut _339: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _340: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _341: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _342: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _343: isize;<br align="left"/>let _344: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _345: !;<br align="left"/>let mut _346: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _347: i64;<br align="left"/>let _348: ();<br align="left"/>let mut _349: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _350: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _351: u64;<br align="left"/>let mut _352: u64;<br align="left"/>let mut _353: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _354: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _355: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _356: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _357: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _358: &amp;ReErased mut state::insurance_fund_stake::InsuranceFundStake;<br align="left"/>let mut _359: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _360: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _361: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _362: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _363: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _364: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _365: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _366: i64;<br align="left"/>let mut _367: isize;<br align="left"/>let _368: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _369: !;<br align="left"/>let mut _370: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _371: ();<br align="left"/>let _372: ();<br align="left"/>let mut _373: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _374: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _375: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _376: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _377: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _378: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _379: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _380: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _381: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _382: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _383: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _384: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _385: u64;<br align="left"/>let mut _386: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _387: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _388: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _389: bool;<br align="left"/>let mut _390: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _391: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _392: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _393: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _394: isize;<br align="left"/>let _395: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _396: !;<br align="left"/>let mut _397: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _398: ();<br align="left"/>let mut _399: ();<br align="left"/>let mut _400: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _401: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _402: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _403: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _404: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _405: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _406: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _407: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _408: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _409: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _410: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _411: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _412: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _413: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _414: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _415: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _416: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _417: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _418: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _419: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _420: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _421: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _422: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _423: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _424: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _425: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _426: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _427: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _428: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _429: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _430: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _431: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _432: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _433: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _434: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _435: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _436: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _437: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _438: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _439: &amp;ReErased mut instructions::if_staker::AddInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _440: isize;<br align="left"/>let mut _441: isize;<br align="left"/>let mut _442: isize;<br align="left"/>let mut _443: isize;<br align="left"/>let mut _444: isize;<br align="left"/>let mut _445: isize;<br align="left"/>let mut _446: isize;<br align="left"/>let mut _447: isize;<br align="left"/>let mut _448: isize;<br align="left"/>let mut _449: isize;<br align="left"/>let mut _450: isize;<br align="left"/>let mut _451: isize;<br align="left"/>let mut _452: isize;<br align="left"/>let mut _453: isize;<br align="left"/>let mut _454: isize;<br align="left"/>let mut _455: isize;<br align="left"/>let mut _456: isize;<br align="left"/>let mut _457: isize;<br align="left"/>let mut _458: isize;<br align="left"/>let mut _459: isize;<br align="left"/>let mut _460: isize;<br align="left"/>let mut _461: isize;<br align="left"/>let mut _462: isize;<br align="left"/>let mut _463: isize;<br align="left"/>let mut _464: isize;<br align="left"/>let mut _465: isize;<br align="left"/>let mut _466: isize;<br align="left"/>let mut _467: isize;<br align="left"/>let mut _468: isize;<br align="left"/>let mut _469: isize;<br align="left"/>let mut _470: isize;<br align="left"/>let mut _471: isize;<br align="left"/>let mut _472: isize;<br align="left"/>let mut _473: isize;<br align="left"/>let mut _474: isize;<br align="left"/>let mut _475: isize;<br align="left"/>let mut _476: isize;<br align="left"/>let mut _477: isize;<br align="left"/>let mut _478: isize;<br align="left"/>let mut _479: isize;<br align="left"/>let mut _480: isize;<br align="left"/>let mut _481: isize;<br align="left"/>let mut _482: isize;<br align="left"/>let mut _483: isize;<br align="left"/>let mut _484: isize;<br align="left"/>let mut _485: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _486: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _487: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _488: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _489: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _490: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _491: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _492: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _493: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _494: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _495: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _496: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug amount =&gt; _3;<br align="left"/>debug clock =&gt; _10;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug now =&gt; _18;<br align="left"/>debug insurance_fund_stake =&gt; _19;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug user_stats =&gt; _31;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug spot_market =&gt; _43;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug state =&gt; _55;<br align="left"/>debug remaining_accounts_iter =&gt; _56;<br align="left"/>debug mint =&gt; _60;<br align="left"/>debug residual =&gt; _65;<br align="left"/>debug val =&gt; _68;<br align="left"/>debug error_code =&gt; _78;<br align="left"/>debug res =&gt; _85;<br align="left"/>debug res =&gt; _104;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug error_code =&gt; _125;<br align="left"/>debug res =&gt; _132;<br align="left"/>debug residual =&gt; _150;<br align="left"/>debug val =&gt; _153;<br align="left"/>debug error_code =&gt; _164;<br align="left"/>debug res =&gt; _171;<br align="left"/>debug res =&gt; _190;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug error_code =&gt; _223;<br align="left"/>debug res =&gt; _230;<br align="left"/>debug residual =&gt; _248;<br align="left"/>debug val =&gt; _251;<br align="left"/>debug residual =&gt; _284;<br align="left"/>debug val =&gt; _287;<br align="left"/>debug residual =&gt; _310;<br align="left"/>debug val =&gt; _313;<br align="left"/>debug residual =&gt; _319;<br align="left"/>debug val =&gt; _322;<br align="left"/>debug residual =&gt; _328;<br align="left"/>debug val =&gt; _331;<br align="left"/>debug residual =&gt; _344;<br align="left"/>debug val =&gt; _347;<br align="left"/>debug residual =&gt; _368;<br align="left"/>debug val =&gt; _371;<br align="left"/>debug residual =&gt; _395;<br align="left"/>debug val =&gt; _398;<br align="left"/>>;
    bb0__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _3<br/>_5 = Eq(move _6, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = error::ErrorCode::InsufficientDeposit<br/></td></tr><tr><td align="left">_8 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _9)</td></tr></table>>];
    bb2__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _8)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb5__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_13 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb6__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_11 as Continue).0: anchor_lang::prelude::Clock)<br/>_10 = move _17<br/>StorageDead(_17)<br/>_440 = discriminant(_11)<br/>StorageDead(_11)<br/>StorageLive(_18)<br/>_18 = (_10.4: i64)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_407 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_24 = &amp;((*_407).2: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/></td></tr><tr><td align="left">_23 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::load_mut(move _24)</td></tr></table>>];
    bb7__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = move ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_16)<br/>_16 = move _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb9__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>_474 = discriminant(_11)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>_25 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;RefMut&lt;'_, InsuranceFundStake&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _23, move _25)</td></tr></table>>];
    bb11__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;RefMut&lt;'_, InsuranceFundStake&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb12__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_26 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb13__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_21 as Continue).0: std::cell::RefMut&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_20 = move _30<br/>StorageDead(_30)<br/>_19 = &amp;mut _20<br/>_444 = discriminant(_21)<br/>StorageDead(_21)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_408 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_36 = &amp;((*_408).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_35 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _36)</td></tr></table>>];
    bb14__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb15__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>_442 = discriminant(_21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageLive(_37)<br/>_37 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_34 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _35, move _37)</td></tr></table>>];
    bb17__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb18__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_38 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb19__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = move ((_33 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_32 = move _42<br/>StorageDead(_42)<br/>_31 = &amp;mut _32<br/>_448 = discriminant(_33)<br/>StorageDead(_33)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_409 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_48 = &amp;((*_409).1: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_47 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_mut(move _48)</td></tr></table>>];
    bb20__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb21__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>_446 = discriminant(_33)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_49)<br/>_49 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_46 = std::result::Result::&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _47, move _49)</td></tr></table>>];
    bb23__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb24__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_50 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = move ((_45 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_44 = move _54<br/>StorageDead(_54)<br/>_43 = &amp;mut _44<br/>_452 = discriminant(_45)<br/>StorageDead(_45)<br/>StorageLive(_55)<br/>_410 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_55 = &amp;((*_410).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_411 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_59 = &amp;(*_411)<br/></td></tr><tr><td align="left">_58 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _59)</td></tr></table>>];
    bb26__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>_450 = discriminant(_45)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _58)</td></tr></table>>];
    bb29__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_56 = &amp;mut _57<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;mut (*_56)<br/></td></tr><tr><td align="left">_62 = get_token_mint(move _63)</td></tr></table>>];
    bb30__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb31__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_64 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb32__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = move ((_61 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_60 = move _68<br/>StorageDead(_68)<br/>StorageDead(_61)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;(*_43)<br/></td></tr><tr><td align="left">_74 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb33__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_67)<br/>_67 = _65<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _67)</td></tr></table>>];
    bb34__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/>StorageLive(_76)<br/>_76 = InsuranceFundOperation::Add<br/></td></tr><tr><td align="left">_72 = SpotMarket::is_insurance_fund_operation_paused(move _73, move _76)</td></tr></table>>];
    bb36__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb37__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_74)<br/>StorageLive(_78)<br/>_78 = error::ErrorCode::InsuranceFundOperationPaused<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_406 = const _<br/>_89 = &amp;(*_406)<br/>_88 = &amp;(*_89)<br/>_87 = move _88 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_88)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;_78<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_95 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _96)</td></tr></table>>];
    bb38__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_73)<br/>StorageDead(_74)<br/>StorageLive(_77)<br/>_77 = ()<br/>_71 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _77)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_94 = [move _95]<br/>StorageDead(_95)<br/>_93 = &amp;_94<br/>_92 = &amp;(*_93)<br/>_91 = move _92 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_86 = Arguments::&lt;'_&gt;::new_v1(move _87, move _91)</td></tr></table>>];
    bb40__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_85 = format(move _86)</td></tr></table>>];
    bb41__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/>_84 = move _85<br/>StorageDead(_85)<br/>_83 = &amp;_84<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_81 = &lt;String as Deref&gt;::deref(move _82)</td></tr></table>>];
    bb42__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_80 = &amp;(*_81)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_79 = solana_program::log::sol_log(move _80)</td></tr></table>>];
    bb43__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb44__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_405 = const _<br/>_108 = &amp;(*_405)<br/>_107 = &amp;(*_108)<br/>_106 = move _107 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = Arguments::&lt;'_&gt;::new_const(move _106)</td></tr></table>>];
    bb45__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = format(move _105)</td></tr></table>>];
    bb46__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_108)<br/>_103 = move _104<br/>StorageDead(_104)<br/>_102 = &amp;_103<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = &lt;String as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb47__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_99 = &amp;(*_100)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_98 = solana_program::log::sol_log(move _99)</td></tr></table>>];
    bb48__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb49__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_98)<br/>StorageLive(_110)<br/>_110 = _78<br/>_71 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _110)<br/>StorageDead(_110)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb51__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_111 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb52__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_70 as Continue).0: ())<br/>_69 = _115<br/>StorageDead(_115)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;(*_19)<br/></td></tr><tr><td align="left">_121 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _122)</td></tr></table>>];
    bb53__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb54__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_120 = ((*_121).8: u16)<br/>StorageLive(_123)<br/>_123 = _2<br/>_119 = Eq(move _120, move _123)<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb56__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_124)<br/>_124 = ()<br/>_118 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _124)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_125)<br/>_125 = error::ErrorCode::IncorrectSpotMarketAccountPassed<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_404 = const _<br/>_136 = &amp;(*_404)<br/>_135 = &amp;(*_136)<br/>_134 = move _135 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_135)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = &amp;_125<br/>_143 = &amp;(*_144)<br/></td></tr><tr><td align="left">_142 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _143)</td></tr></table>>];
    bb58__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_141 = [move _142]<br/>StorageDead(_142)<br/>_140 = &amp;_141<br/>_139 = &amp;(*_140)<br/>_138 = move _139 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_133 = Arguments::&lt;'_&gt;::new_v1(move _134, move _138)</td></tr></table>>];
    bb59__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = format(move _133)</td></tr></table>>];
    bb60__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_136)<br/>_131 = move _132<br/>StorageDead(_132)<br/>_130 = &amp;_131<br/>_129 = &amp;(*_130)<br/></td></tr><tr><td align="left">_128 = &lt;String as Deref&gt;::deref(move _129)</td></tr></table>>];
    bb61__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_127 = &amp;(*_128)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_126 = solana_program::log::sol_log(move _127)</td></tr></table>>];
    bb62__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">drop(_131)</td></tr></table>>];
    bb63__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_126)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = const &quot;insurance_fund_stake does not match market_index&quot;<br/>_146 = &amp;(*_147)<br/></td></tr><tr><td align="left">_145 = solana_program::log::sol_log(move _146)</td></tr></table>>];
    bb64__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageLive(_148)<br/>_148 = _125<br/>_118 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _148)<br/>StorageDead(_148)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb66__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_149 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _149)</td></tr></table>>];
    bb67__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_117 as Continue).0: ())<br/>_116 = _153<br/>StorageDead(_153)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;(*_43)<br/></td></tr><tr><td align="left">_159 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _160)</td></tr></table>>];
    bb68__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_152)<br/>_152 = _150<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _152)</td></tr></table>>];
    bb69__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_158 = &amp;((*_159).45: state::perp_market::MarketStatus)<br/>StorageLive(_161)<br/>_403 = const _<br/>_161 = &amp;(*_403)<br/></td></tr><tr><td align="left">_157 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::ne(move _158, move _161)</td></tr></table>>];
    bb71__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left">switchInt(move _157)</td></tr></table>>];
    bb72__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageLive(_163)<br/>_163 = ()<br/>_156 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _163)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageLive(_164)<br/>_164 = error::ErrorCode::InvalidSpotMarketState<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_402 = const _<br/>_175 = &amp;(*_402)<br/>_174 = &amp;(*_175)<br/>_173 = move _174 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_174)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;_164<br/>_182 = &amp;(*_183)<br/></td></tr><tr><td align="left">_181 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _182)</td></tr></table>>];
    bb74__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_180 = [move _181]<br/>StorageDead(_181)<br/>_179 = &amp;_180<br/>_178 = &amp;(*_179)<br/>_177 = move _178 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">_172 = Arguments::&lt;'_&gt;::new_v1(move _173, move _177)</td></tr></table>>];
    bb75__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = format(move _172)</td></tr></table>>];
    bb76__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_183)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageDead(_175)<br/>_170 = move _171<br/>StorageDead(_171)<br/>_169 = &amp;_170<br/>_168 = &amp;(*_169)<br/></td></tr><tr><td align="left">_167 = &lt;String as Deref&gt;::deref(move _168)</td></tr></table>>];
    bb77__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_166 = &amp;(*_167)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_165 = solana_program::log::sol_log(move _166)</td></tr></table>>];
    bb78__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/></td></tr><tr><td align="left">drop(_170)</td></tr></table>>];
    bb79__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_401 = const _<br/>_194 = &amp;(*_401)<br/>_193 = &amp;(*_194)<br/>_192 = move _193 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_193)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = &amp;(*_43)<br/></td></tr><tr><td align="left">_203 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _204)</td></tr></table>>];
    bb80__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_202 = &amp;((*_203).42: u16)<br/>_201 = &amp;(*_202)<br/></td></tr><tr><td align="left">_200 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _201)</td></tr></table>>];
    bb81__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_199 = [move _200]<br/>StorageDead(_200)<br/>_198 = &amp;_199<br/>_197 = &amp;(*_198)<br/>_196 = move _197 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_191 = Arguments::&lt;'_&gt;::new_v1(move _192, move _196)</td></tr></table>>];
    bb82__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">_190 = format(move _191)</td></tr></table>>];
    bb83__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_194)<br/>_189 = move _190<br/>StorageDead(_190)<br/>_188 = &amp;_189<br/>_187 = &amp;(*_188)<br/></td></tr><tr><td align="left">_186 = &lt;String as Deref&gt;::deref(move _187)</td></tr></table>>];
    bb84__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_185 = &amp;(*_186)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_184 = solana_program::log::sol_log(move _185)</td></tr></table>>];
    bb85__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/></td></tr><tr><td align="left">drop(_189)</td></tr></table>>];
    bb86__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageLive(_205)<br/>_205 = _164<br/>_156 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _205)<br/>StorageDead(_205)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb88__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_206 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb89__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_155 as Continue).0: ())<br/>_154 = _210<br/>StorageDead(_210)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;(*_19)<br/></td></tr><tr><td align="left">_216 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _217)</td></tr></table>>];
    bb90__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_209)<br/>_209 = _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb91__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_215 = ((*_216).2: u128)<br/>_214 = Eq(move _215, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb93__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;(*_19)<br/></td></tr><tr><td align="left">_220 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb94__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_219 = ((*_220).5: u64)<br/>_218 = Eq(move _219, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb95__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_219)<br/>StorageLive(_222)<br/>_222 = ()<br/>_213 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _222)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_223)<br/>_223 = error::ErrorCode::IFWithdrawRequestInProgress<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>_400 = const _<br/>_234 = &amp;(*_400)<br/>_233 = &amp;(*_234)<br/>_232 = move _233 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_233)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = &amp;_223<br/>_241 = &amp;(*_242)<br/></td></tr><tr><td align="left">_240 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _241)</td></tr></table>>];
    bb99__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>_239 = [move _240]<br/>StorageDead(_240)<br/>_238 = &amp;_239<br/>_237 = &amp;(*_238)<br/>_236 = move _237 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_231 = Arguments::&lt;'_&gt;::new_v1(move _232, move _236)</td></tr></table>>];
    bb100__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">_230 = format(move _231)</td></tr></table>>];
    bb101__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_242)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/>StorageDead(_234)<br/>_229 = move _230<br/>StorageDead(_230)<br/>_228 = &amp;_229<br/>_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_226 = &lt;String as Deref&gt;::deref(move _227)</td></tr></table>>];
    bb102__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">_225 = &amp;(*_226)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">_224 = solana_program::log::sol_log(move _225)</td></tr></table>>];
    bb103__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/></td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb104__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>_245 = const &quot;withdraw request in progress&quot;<br/>_244 = &amp;(*_245)<br/></td></tr><tr><td align="left">_243 = solana_program::log::sol_log(move _244)</td></tr></table>>];
    bb105__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_245)<br/>StorageDead(_243)<br/>StorageLive(_246)<br/>_246 = _223<br/>_213 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _246)<br/>StorageDead(_246)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">_212 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _213)</td></tr></table>>];
    bb107__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_247 = discriminant(_212)<br/></td></tr><tr><td align="left">switchInt(move _247)</td></tr></table>>];
    bb108__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_251)<br/>_251 = ((_212 as Continue).0: ())<br/>_211 = _251<br/>StorageDead(_251)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_257 = &amp;(*_43)<br/></td></tr><tr><td align="left">_256 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _257)</td></tr></table>>];
    bb109__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_248)<br/>_248 = ((_212 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_250)<br/>_250 = _248<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _250)</td></tr></table>>];
    bb110__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_255 = &amp;(*_256)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">_254 = SpotMarket::has_transfer_hook(move _255)</td></tr></table>>];
    bb112__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left">switchInt(move _254)</td></tr></table>>];
    bb113__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_255)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_412 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_262 = &amp;((*_412).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_413 = deref_copy (*_262)<br/>_485 = (((_413.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_261 = &amp;(*_485)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>_414 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_264 = &amp;((*_414).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_415 = deref_copy (*_264)<br/>_486 = (((_415.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_263 = &amp;(*_486)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_267 = &amp;mut (*_43)<br/></td></tr><tr><td align="left">_266 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _267)</td></tr></table>>];
    bb114__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_265 = &amp;mut (*_266)<br/>StorageDead(_267)<br/>StorageLive(_268)<br/>_268 = _18<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_416 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_270 = &amp;((*_416).9: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_269 = &amp;(*_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_417 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_272 = &amp;((*_417).7: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_271 = &amp;(*_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_418 = deref_copy (*_55)<br/>_487 = (((_418.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_275 = &amp;(*_487)<br/></td></tr><tr><td align="left">_274 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _275)</td></tr></table>>];
    bb115__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_273 = &amp;(*_274)<br/>StorageDead(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>_277 = &amp;_60<br/>_276 = &amp;(*_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_282 = &amp;(*_56)<br/></td></tr><tr><td align="left">_281 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Clone&gt;::clone(move _282)</td></tr></table>>];
    bb116__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/>_280 = &amp;mut _281<br/>_279 = &amp;mut (*_280)<br/>_278 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _279)<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">_260 = attempt_settle_revenue_to_insurance_fund(move _261, move _263, move _265, move _268, move _269, move _271, move _273, move _276, move _278)</td></tr></table>>];
    bb117__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_269)<br/>StorageDead(_268)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">_259 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _260)</td></tr></table>>];
    bb118__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>_283 = discriminant(_259)<br/></td></tr><tr><td align="left">switchInt(move _283)</td></tr></table>>];
    bb119__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_287)<br/>_287 = ((_259 as Continue).0: ())<br/>_258 = _287<br/>StorageDead(_287)<br/>_454 = discriminant(_259)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_277)<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/>_253 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_284)<br/>_284 = move ((_259 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_286)<br/>_286 = move _284<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _286)</td></tr></table>>];
    bb121__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageDead(_284)<br/>_472 = discriminant(_259)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_277)<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/>StorageDead(_258)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_255)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_419 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_292 = &amp;((*_419).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_420 = deref_copy (*_292)<br/>_488 = (((_420.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_291 = &amp;(*_488)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_421 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_294 = &amp;((*_421).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_422 = deref_copy (*_294)<br/>_489 = (((_422.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_293 = &amp;(*_489)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_297 = &amp;mut (*_43)<br/></td></tr><tr><td align="left">_296 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _297)</td></tr></table>>];
    bb123__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">_295 = &amp;mut (*_296)<br/>StorageDead(_297)<br/>StorageLive(_298)<br/>_298 = _18<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_423 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_300 = &amp;((*_423).9: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_299 = &amp;(*_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_424 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_302 = &amp;((*_424).7: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_301 = &amp;(*_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_425 = deref_copy (*_55)<br/>_490 = (((_425.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_305 = &amp;(*_490)<br/></td></tr><tr><td align="left">_304 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _305)</td></tr></table>>];
    bb124__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_303 = &amp;(*_304)<br/>StorageDead(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>_307 = &amp;_60<br/>_306 = &amp;(*_307)<br/>StorageLive(_308)<br/>_308 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">_290 = attempt_settle_revenue_to_insurance_fund(move _291, move _293, move _295, move _298, move _299, move _301, move _303, move _306, move _308)</td></tr></table>>];
    bb125__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_306)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/>StorageDead(_295)<br/>StorageDead(_293)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">_289 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _290)</td></tr></table>>];
    bb126__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>_309 = discriminant(_289)<br/></td></tr><tr><td align="left">switchInt(move _309)</td></tr></table>>];
    bb127__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_313)<br/>_313 = ((_289 as Continue).0: ())<br/>_288 = _313<br/>StorageDead(_313)<br/>_456 = discriminant(_289)<br/>StorageDead(_307)<br/>StorageDead(_304)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_296)<br/>StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>_253 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_310)<br/>_310 = move ((_289 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_312)<br/>_312 = move _310<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _312)</td></tr></table>>];
    bb129__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_310)<br/>_470 = discriminant(_289)<br/>StorageDead(_307)<br/>StorageDead(_304)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_296)<br/>StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_253)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>_426 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_427 = deref_copy ((*_426).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_491 = (((_427.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_317 = &amp;mut (*_491)<br/></td></tr><tr><td align="left">_316 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _317)</td></tr></table>>];
    bb131__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/></td></tr><tr><td align="left">_315 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _316)</td></tr></table>>];
    bb132__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>_318 = discriminant(_315)<br/></td></tr><tr><td align="left">switchInt(move _318)</td></tr></table>>];
    bb133__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_322)<br/>_322 = ((_315 as Continue).0: ())<br/>_314 = _322<br/>StorageDead(_322)<br/>_458 = discriminant(_315)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>_428 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_429 = deref_copy ((*_428).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_492 = (((_429.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_326 = &amp;mut (*_492)<br/></td></tr><tr><td align="left">_325 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _326)</td></tr></table>>];
    bb134__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_319)<br/>_319 = move ((_315 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_321)<br/>_321 = move _319<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _321)</td></tr></table>>];
    bb135__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_319)<br/>_468 = discriminant(_315)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/></td></tr><tr><td align="left">_324 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _325)</td></tr></table>>];
    bb137__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>_327 = discriminant(_324)<br/></td></tr><tr><td align="left">switchInt(move _327)</td></tr></table>>];
    bb138__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_331)<br/>_331 = ((_324 as Continue).0: ())<br/>_323 = _331<br/>StorageDead(_331)<br/>_460 = discriminant(_324)<br/>StorageDead(_324)<br/>StorageDead(_323)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = &amp;(*_43)<br/></td></tr><tr><td align="left">_336 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _337)</td></tr></table>>];
    bb139__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_328)<br/>_328 = move ((_324 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_330)<br/>_330 = move _328<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _330)</td></tr></table>>];
    bb140__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_328)<br/>_466 = discriminant(_324)<br/>StorageDead(_324)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">_335 = &amp;(*_336)<br/>StorageDead(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>_430 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_431 = deref_copy ((*_430).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_493 = (((_431.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_342 = &amp;(*_493)<br/></td></tr><tr><td align="left">_341 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _342)</td></tr></table>>];
    bb142__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">_340 = &amp;(*_341)<br/></td></tr><tr><td align="left">_339 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _340)</td></tr></table>>];
    bb143__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_340)<br/>_338 = ((*_339).2: u64)<br/></td></tr><tr><td align="left">_334 = validate_spot_market_vault_amount(move _335, move _338)</td></tr></table>>];
    bb144__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">_333 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _334)</td></tr></table>>];
    bb145__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>_343 = discriminant(_333)<br/></td></tr><tr><td align="left">switchInt(move _343)</td></tr></table>>];
    bb146__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_347)<br/>_347 = ((_333 as Continue).0: i64)<br/>_332 = _347<br/>StorageDead(_347)<br/>StorageDead(_341)<br/>StorageDead(_339)<br/>StorageDead(_336)<br/>StorageDead(_333)<br/>StorageDead(_332)<br/>_252 = const ()<br/>StorageDead(_252)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = _3<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>_432 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_433 = deref_copy ((*_432).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_494 = (((_433.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_356 = &amp;(*_494)<br/></td></tr><tr><td align="left">_355 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _356)</td></tr></table>>];
    bb147__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = ((_333 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_346)<br/>_346 = _344<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _346)</td></tr></table>>];
    bb148__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_344)<br/>StorageDead(_341)<br/>StorageDead(_339)<br/>StorageDead(_336)<br/>StorageDead(_333)<br/>StorageDead(_332)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">_354 = &amp;(*_355)<br/></td></tr><tr><td align="left">_353 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _354)</td></tr></table>>];
    bb150__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageDead(_354)<br/>_352 = ((*_353).2: u64)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_359 = &amp;mut (*_19)<br/></td></tr><tr><td align="left">_358 = &lt;RefMut&lt;'_, InsuranceFundStake&gt; as DerefMut&gt;::deref_mut(move _359)</td></tr></table>>];
    bb151__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">_357 = &amp;mut (*_358)<br/>StorageDead(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_362 = &amp;mut (*_31)<br/></td></tr><tr><td align="left">_361 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _362)</td></tr></table>>];
    bb152__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">_360 = &amp;mut (*_361)<br/>StorageDead(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>_365 = &amp;mut (*_43)<br/></td></tr><tr><td align="left">_364 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _365)</td></tr></table>>];
    bb153__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">_363 = &amp;mut (*_364)<br/>StorageDead(_365)<br/>StorageLive(_366)<br/>_366 = (_10.4: i64)<br/></td></tr><tr><td align="left">_350 = controller::insurance::add_insurance_fund_stake(move _351, move _352, move _357, move _360, move _363, move _366)</td></tr></table>>];
    bb154__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>StorageDead(_363)<br/>StorageDead(_360)<br/>StorageDead(_357)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">_349 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _350)</td></tr></table>>];
    bb155__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>_367 = discriminant(_349)<br/></td></tr><tr><td align="left">switchInt(move _367)</td></tr></table>>];
    bb156__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_371)<br/>_371 = ((_349 as Continue).0: ())<br/>_348 = _371<br/>StorageDead(_371)<br/>StorageDead(_364)<br/>StorageDead(_361)<br/>StorageDead(_358)<br/>StorageDead(_355)<br/>StorageDead(_353)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>_434 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_376 = &amp;((*_434).9: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_375 = &amp;(*_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>_435 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_378 = &amp;((*_435).8: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_436 = deref_copy (*_378)<br/>_495 = (((_436.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_377 = &amp;(*_495)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>_437 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_380 = &amp;((*_437).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_438 = deref_copy (*_380)<br/>_496 = (((_438.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_379 = &amp;(*_496)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>_439 = deref_copy (_1.1: &amp;mut instructions::if_staker::AddInsuranceFundStake&lt;'_&gt;)<br/>_384 = &amp;((*_439).4: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_383 = &amp;(*_384)<br/></td></tr><tr><td align="left">_382 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _383)</td></tr></table>>];
    bb157__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_368)<br/>_368 = ((_349 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_370)<br/>_370 = _368<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _370)</td></tr></table>>];
    bb158__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>StorageDead(_368)<br/>StorageDead(_364)<br/>StorageDead(_361)<br/>StorageDead(_358)<br/>StorageDead(_355)<br/>StorageDead(_353)<br/>StorageDead(_349)<br/>StorageDead(_348)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_381 = &amp;(*_382)<br/>StorageDead(_383)<br/>StorageLive(_385)<br/>_385 = _3<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = &amp;_60<br/>_386 = &amp;(*_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>_392 = &amp;(*_43)<br/></td></tr><tr><td align="left">_391 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _392)</td></tr></table>>];
    bb160__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">_390 = &amp;(*_391)<br/>StorageDead(_392)<br/></td></tr><tr><td align="left">_389 = SpotMarket::has_transfer_hook(move _390)</td></tr></table>>];
    bb161__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left">switchInt(move _389)</td></tr></table>>];
    bb162__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_390)<br/>StorageLive(_393)<br/>_393 = &amp;mut (*_56)<br/>_388 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _393)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_390)<br/>_388 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/></td></tr><tr><td align="left">_374 = receive(move _375, move _377, move _379, move _381, move _385, move _386, move _388)</td></tr></table>>];
    bb165__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>StorageDead(_386)<br/>StorageDead(_385)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_375)<br/></td></tr><tr><td align="left">_373 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _374)</td></tr></table>>];
    bb166__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>_394 = discriminant(_373)<br/></td></tr><tr><td align="left">switchInt(move _394)</td></tr></table>>];
    bb167__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_398)<br/>_398 = ((_373 as Continue).0: ())<br/>_372 = _398<br/>StorageDead(_398)<br/>_462 = discriminant(_373)<br/>StorageDead(_387)<br/>StorageDead(_384)<br/>StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_376)<br/>StorageDead(_373)<br/>StorageDead(_372)<br/>StorageLive(_399)<br/>_399 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _399)<br/>StorageDead(_399)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb168__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_395)<br/>_395 = move ((_373 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_397)<br/>_397 = move _395<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _397)</td></tr></table>>];
    bb169__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>StorageDead(_395)<br/>_464 = discriminant(_373)<br/>StorageDead(_387)<br/>StorageDead(_384)<br/>StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/>StorageDead(_376)<br/>StorageDead(_373)<br/>StorageDead(_372)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb171__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb172__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb176__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb177__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb178__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left">return</td></tr></table>>];
    bb181__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">181 (cleanup)</td></tr><tr><td align="left">drop(_229)</td></tr></table>>];
    bb182__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">182 (cleanup)</td></tr><tr><td align="left">drop(_189)</td></tr></table>>];
    bb183__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">183 (cleanup)</td></tr><tr><td align="left">drop(_170)</td></tr></table>>];
    bb184__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">184 (cleanup)</td></tr><tr><td align="left">drop(_131)</td></tr></table>>];
    bb185__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">185 (cleanup)</td></tr><tr><td align="left">drop(_103)</td></tr></table>>];
    bb186__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">186 (cleanup)</td></tr><tr><td align="left">drop(_84)</td></tr></table>>];
    bb187__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">187 (cleanup)</td></tr><tr><td align="left">drop(_44)</td></tr></table>>];
    bb188__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">188 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb189__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">189 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb190__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">190 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb191__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">191 (cleanup)</td></tr><tr><td align="left" balign="left">_476 = discriminant(_373)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">192 (cleanup)</td></tr><tr><td align="left" balign="left">_477 = discriminant(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb193__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">193 (cleanup)</td></tr><tr><td align="left" balign="left">_478 = discriminant(_315)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left" balign="left">_479 = discriminant(_289)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">195 (cleanup)</td></tr><tr><td align="left" balign="left">_480 = discriminant(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb196__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">196 (cleanup)</td></tr><tr><td align="left" balign="left">_481 = discriminant(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">197 (cleanup)</td></tr><tr><td align="left" balign="left">_482 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">198 (cleanup)</td></tr><tr><td align="left" balign="left">_483 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_1208 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">199 (cleanup)</td></tr><tr><td align="left" balign="left">_484 = discriminant(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1208 -> bb3__0_1208 [label="0"];
    bb0__0_1208 -> bb1__0_1208 [label="otherwise"];
    bb1__0_1208 -> bb2__0_1208 [label="return"];
    bb2__0_1208 -> bb180__0_1208 [label=""];
    bb3__0_1208 -> bb4__0_1208 [label="return"];
    bb4__0_1208 -> bb5__0_1208 [label="return"];
    bb4__0_1208 -> bb190__0_1208 [label="unwind"];
    bb5__0_1208 -> bb6__0_1208 [label="0"];
    bb5__0_1208 -> bb8__0_1208 [label="1"];
    bb5__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb6__0_1208 -> bb10__0_1208 [label="return"];
    bb8__0_1208 -> bb9__0_1208 [label="return"];
    bb8__0_1208 -> bb199__0_1208 [label="unwind"];
    bb9__0_1208 -> bb179__0_1208 [label=""];
    bb10__0_1208 -> bb11__0_1208 [label="return"];
    bb10__0_1208 -> bb190__0_1208 [label="unwind"];
    bb11__0_1208 -> bb12__0_1208 [label="return"];
    bb11__0_1208 -> bb190__0_1208 [label="unwind"];
    bb12__0_1208 -> bb13__0_1208 [label="0"];
    bb12__0_1208 -> bb14__0_1208 [label="1"];
    bb12__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb13__0_1208 -> bb16__0_1208 [label="return"];
    bb13__0_1208 -> bb189__0_1208 [label="unwind"];
    bb14__0_1208 -> bb15__0_1208 [label="return"];
    bb14__0_1208 -> bb198__0_1208 [label="unwind"];
    bb15__0_1208 -> bb178__0_1208 [label=""];
    bb16__0_1208 -> bb17__0_1208 [label="return"];
    bb16__0_1208 -> bb189__0_1208 [label="unwind"];
    bb17__0_1208 -> bb18__0_1208 [label="return"];
    bb17__0_1208 -> bb189__0_1208 [label="unwind"];
    bb18__0_1208 -> bb19__0_1208 [label="0"];
    bb18__0_1208 -> bb20__0_1208 [label="1"];
    bb18__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb19__0_1208 -> bb22__0_1208 [label="return"];
    bb19__0_1208 -> bb188__0_1208 [label="unwind"];
    bb20__0_1208 -> bb21__0_1208 [label="return"];
    bb20__0_1208 -> bb197__0_1208 [label="unwind"];
    bb21__0_1208 -> bb177__0_1208 [label=""];
    bb22__0_1208 -> bb23__0_1208 [label="return"];
    bb22__0_1208 -> bb188__0_1208 [label="unwind"];
    bb23__0_1208 -> bb24__0_1208 [label="return"];
    bb23__0_1208 -> bb188__0_1208 [label="unwind"];
    bb24__0_1208 -> bb25__0_1208 [label="0"];
    bb24__0_1208 -> bb26__0_1208 [label="1"];
    bb24__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb25__0_1208 -> bb28__0_1208 [label="return"];
    bb25__0_1208 -> bb187__0_1208 [label="unwind"];
    bb26__0_1208 -> bb27__0_1208 [label="return"];
    bb26__0_1208 -> bb196__0_1208 [label="unwind"];
    bb27__0_1208 -> bb176__0_1208 [label=""];
    bb28__0_1208 -> bb29__0_1208 [label="return"];
    bb28__0_1208 -> bb187__0_1208 [label="unwind"];
    bb29__0_1208 -> bb30__0_1208 [label="return"];
    bb29__0_1208 -> bb187__0_1208 [label="unwind"];
    bb30__0_1208 -> bb31__0_1208 [label="return"];
    bb30__0_1208 -> bb187__0_1208 [label="unwind"];
    bb31__0_1208 -> bb32__0_1208 [label="0"];
    bb31__0_1208 -> bb33__0_1208 [label="1"];
    bb31__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb32__0_1208 -> bb35__0_1208 [label="return"];
    bb32__0_1208 -> bb187__0_1208 [label="unwind"];
    bb33__0_1208 -> bb34__0_1208 [label="return"];
    bb33__0_1208 -> bb187__0_1208 [label="unwind"];
    bb34__0_1208 -> bb175__0_1208 [label=""];
    bb35__0_1208 -> bb36__0_1208 [label="return"];
    bb35__0_1208 -> bb187__0_1208 [label="unwind"];
    bb36__0_1208 -> bb38__0_1208 [label="0"];
    bb36__0_1208 -> bb37__0_1208 [label="otherwise"];
    bb37__0_1208 -> bb39__0_1208 [label="return"];
    bb37__0_1208 -> bb187__0_1208 [label="unwind"];
    bb38__0_1208 -> bb50__0_1208 [label=""];
    bb39__0_1208 -> bb40__0_1208 [label="return"];
    bb39__0_1208 -> bb187__0_1208 [label="unwind"];
    bb40__0_1208 -> bb41__0_1208 [label="return"];
    bb40__0_1208 -> bb187__0_1208 [label="unwind"];
    bb41__0_1208 -> bb42__0_1208 [label="return"];
    bb41__0_1208 -> bb186__0_1208 [label="unwind"];
    bb42__0_1208 -> bb43__0_1208 [label="return"];
    bb42__0_1208 -> bb186__0_1208 [label="unwind"];
    bb43__0_1208 -> bb44__0_1208 [label="return"];
    bb43__0_1208 -> bb187__0_1208 [label="unwind"];
    bb44__0_1208 -> bb45__0_1208 [label="return"];
    bb44__0_1208 -> bb187__0_1208 [label="unwind"];
    bb45__0_1208 -> bb46__0_1208 [label="return"];
    bb45__0_1208 -> bb187__0_1208 [label="unwind"];
    bb46__0_1208 -> bb47__0_1208 [label="return"];
    bb46__0_1208 -> bb185__0_1208 [label="unwind"];
    bb47__0_1208 -> bb48__0_1208 [label="return"];
    bb47__0_1208 -> bb185__0_1208 [label="unwind"];
    bb48__0_1208 -> bb49__0_1208 [label="return"];
    bb48__0_1208 -> bb187__0_1208 [label="unwind"];
    bb49__0_1208 -> bb50__0_1208 [label=""];
    bb50__0_1208 -> bb51__0_1208 [label="return"];
    bb50__0_1208 -> bb187__0_1208 [label="unwind"];
    bb51__0_1208 -> bb52__0_1208 [label="0"];
    bb51__0_1208 -> bb53__0_1208 [label="1"];
    bb51__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb52__0_1208 -> bb55__0_1208 [label="return"];
    bb52__0_1208 -> bb187__0_1208 [label="unwind"];
    bb53__0_1208 -> bb54__0_1208 [label="return"];
    bb53__0_1208 -> bb187__0_1208 [label="unwind"];
    bb54__0_1208 -> bb175__0_1208 [label=""];
    bb55__0_1208 -> bb57__0_1208 [label="0"];
    bb55__0_1208 -> bb56__0_1208 [label="otherwise"];
    bb56__0_1208 -> bb65__0_1208 [label=""];
    bb57__0_1208 -> bb58__0_1208 [label="return"];
    bb57__0_1208 -> bb187__0_1208 [label="unwind"];
    bb58__0_1208 -> bb59__0_1208 [label="return"];
    bb58__0_1208 -> bb187__0_1208 [label="unwind"];
    bb59__0_1208 -> bb60__0_1208 [label="return"];
    bb59__0_1208 -> bb187__0_1208 [label="unwind"];
    bb60__0_1208 -> bb61__0_1208 [label="return"];
    bb60__0_1208 -> bb184__0_1208 [label="unwind"];
    bb61__0_1208 -> bb62__0_1208 [label="return"];
    bb61__0_1208 -> bb184__0_1208 [label="unwind"];
    bb62__0_1208 -> bb63__0_1208 [label="return"];
    bb62__0_1208 -> bb187__0_1208 [label="unwind"];
    bb63__0_1208 -> bb64__0_1208 [label="return"];
    bb63__0_1208 -> bb187__0_1208 [label="unwind"];
    bb64__0_1208 -> bb65__0_1208 [label=""];
    bb65__0_1208 -> bb66__0_1208 [label="return"];
    bb65__0_1208 -> bb187__0_1208 [label="unwind"];
    bb66__0_1208 -> bb67__0_1208 [label="0"];
    bb66__0_1208 -> bb68__0_1208 [label="1"];
    bb66__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb67__0_1208 -> bb70__0_1208 [label="return"];
    bb67__0_1208 -> bb187__0_1208 [label="unwind"];
    bb68__0_1208 -> bb69__0_1208 [label="return"];
    bb68__0_1208 -> bb187__0_1208 [label="unwind"];
    bb69__0_1208 -> bb175__0_1208 [label=""];
    bb70__0_1208 -> bb71__0_1208 [label="return"];
    bb70__0_1208 -> bb187__0_1208 [label="unwind"];
    bb71__0_1208 -> bb73__0_1208 [label="0"];
    bb71__0_1208 -> bb72__0_1208 [label="otherwise"];
    bb72__0_1208 -> bb87__0_1208 [label=""];
    bb73__0_1208 -> bb74__0_1208 [label="return"];
    bb73__0_1208 -> bb187__0_1208 [label="unwind"];
    bb74__0_1208 -> bb75__0_1208 [label="return"];
    bb74__0_1208 -> bb187__0_1208 [label="unwind"];
    bb75__0_1208 -> bb76__0_1208 [label="return"];
    bb75__0_1208 -> bb187__0_1208 [label="unwind"];
    bb76__0_1208 -> bb77__0_1208 [label="return"];
    bb76__0_1208 -> bb183__0_1208 [label="unwind"];
    bb77__0_1208 -> bb78__0_1208 [label="return"];
    bb77__0_1208 -> bb183__0_1208 [label="unwind"];
    bb78__0_1208 -> bb79__0_1208 [label="return"];
    bb78__0_1208 -> bb187__0_1208 [label="unwind"];
    bb79__0_1208 -> bb80__0_1208 [label="return"];
    bb79__0_1208 -> bb187__0_1208 [label="unwind"];
    bb80__0_1208 -> bb81__0_1208 [label="return"];
    bb80__0_1208 -> bb187__0_1208 [label="unwind"];
    bb81__0_1208 -> bb82__0_1208 [label="return"];
    bb81__0_1208 -> bb187__0_1208 [label="unwind"];
    bb82__0_1208 -> bb83__0_1208 [label="return"];
    bb82__0_1208 -> bb187__0_1208 [label="unwind"];
    bb83__0_1208 -> bb84__0_1208 [label="return"];
    bb83__0_1208 -> bb182__0_1208 [label="unwind"];
    bb84__0_1208 -> bb85__0_1208 [label="return"];
    bb84__0_1208 -> bb182__0_1208 [label="unwind"];
    bb85__0_1208 -> bb86__0_1208 [label="return"];
    bb85__0_1208 -> bb187__0_1208 [label="unwind"];
    bb86__0_1208 -> bb87__0_1208 [label=""];
    bb87__0_1208 -> bb88__0_1208 [label="return"];
    bb87__0_1208 -> bb187__0_1208 [label="unwind"];
    bb88__0_1208 -> bb89__0_1208 [label="0"];
    bb88__0_1208 -> bb90__0_1208 [label="1"];
    bb88__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb89__0_1208 -> bb92__0_1208 [label="return"];
    bb89__0_1208 -> bb187__0_1208 [label="unwind"];
    bb90__0_1208 -> bb91__0_1208 [label="return"];
    bb90__0_1208 -> bb187__0_1208 [label="unwind"];
    bb91__0_1208 -> bb175__0_1208 [label=""];
    bb92__0_1208 -> bb97__0_1208 [label="0"];
    bb92__0_1208 -> bb93__0_1208 [label="otherwise"];
    bb93__0_1208 -> bb94__0_1208 [label="return"];
    bb93__0_1208 -> bb187__0_1208 [label="unwind"];
    bb94__0_1208 -> bb96__0_1208 [label="0"];
    bb94__0_1208 -> bb95__0_1208 [label="otherwise"];
    bb95__0_1208 -> bb106__0_1208 [label=""];
    bb96__0_1208 -> bb98__0_1208 [label=""];
    bb97__0_1208 -> bb98__0_1208 [label=""];
    bb98__0_1208 -> bb99__0_1208 [label="return"];
    bb98__0_1208 -> bb187__0_1208 [label="unwind"];
    bb99__0_1208 -> bb100__0_1208 [label="return"];
    bb99__0_1208 -> bb187__0_1208 [label="unwind"];
    bb100__0_1208 -> bb101__0_1208 [label="return"];
    bb100__0_1208 -> bb187__0_1208 [label="unwind"];
    bb101__0_1208 -> bb102__0_1208 [label="return"];
    bb101__0_1208 -> bb181__0_1208 [label="unwind"];
    bb102__0_1208 -> bb103__0_1208 [label="return"];
    bb102__0_1208 -> bb181__0_1208 [label="unwind"];
    bb103__0_1208 -> bb104__0_1208 [label="return"];
    bb103__0_1208 -> bb187__0_1208 [label="unwind"];
    bb104__0_1208 -> bb105__0_1208 [label="return"];
    bb104__0_1208 -> bb187__0_1208 [label="unwind"];
    bb105__0_1208 -> bb106__0_1208 [label=""];
    bb106__0_1208 -> bb107__0_1208 [label="return"];
    bb106__0_1208 -> bb187__0_1208 [label="unwind"];
    bb107__0_1208 -> bb108__0_1208 [label="0"];
    bb107__0_1208 -> bb109__0_1208 [label="1"];
    bb107__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb108__0_1208 -> bb111__0_1208 [label="return"];
    bb108__0_1208 -> bb187__0_1208 [label="unwind"];
    bb109__0_1208 -> bb110__0_1208 [label="return"];
    bb109__0_1208 -> bb187__0_1208 [label="unwind"];
    bb110__0_1208 -> bb175__0_1208 [label=""];
    bb111__0_1208 -> bb112__0_1208 [label="return"];
    bb111__0_1208 -> bb187__0_1208 [label="unwind"];
    bb112__0_1208 -> bb122__0_1208 [label="0"];
    bb112__0_1208 -> bb113__0_1208 [label="otherwise"];
    bb113__0_1208 -> bb114__0_1208 [label="return"];
    bb113__0_1208 -> bb187__0_1208 [label="unwind"];
    bb114__0_1208 -> bb115__0_1208 [label="return"];
    bb114__0_1208 -> bb187__0_1208 [label="unwind"];
    bb115__0_1208 -> bb116__0_1208 [label="return"];
    bb115__0_1208 -> bb187__0_1208 [label="unwind"];
    bb116__0_1208 -> bb117__0_1208 [label="return"];
    bb116__0_1208 -> bb187__0_1208 [label="unwind"];
    bb117__0_1208 -> bb118__0_1208 [label="return"];
    bb117__0_1208 -> bb187__0_1208 [label="unwind"];
    bb118__0_1208 -> bb119__0_1208 [label="0"];
    bb118__0_1208 -> bb120__0_1208 [label="1"];
    bb118__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb119__0_1208 -> bb130__0_1208 [label=""];
    bb120__0_1208 -> bb121__0_1208 [label="return"];
    bb120__0_1208 -> bb195__0_1208 [label="unwind"];
    bb121__0_1208 -> bb173__0_1208 [label=""];
    bb122__0_1208 -> bb123__0_1208 [label="return"];
    bb122__0_1208 -> bb187__0_1208 [label="unwind"];
    bb123__0_1208 -> bb124__0_1208 [label="return"];
    bb123__0_1208 -> bb187__0_1208 [label="unwind"];
    bb124__0_1208 -> bb125__0_1208 [label="return"];
    bb124__0_1208 -> bb187__0_1208 [label="unwind"];
    bb125__0_1208 -> bb126__0_1208 [label="return"];
    bb125__0_1208 -> bb187__0_1208 [label="unwind"];
    bb126__0_1208 -> bb127__0_1208 [label="0"];
    bb126__0_1208 -> bb128__0_1208 [label="1"];
    bb126__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb127__0_1208 -> bb130__0_1208 [label=""];
    bb128__0_1208 -> bb129__0_1208 [label="return"];
    bb128__0_1208 -> bb194__0_1208 [label="unwind"];
    bb129__0_1208 -> bb173__0_1208 [label=""];
    bb130__0_1208 -> bb131__0_1208 [label="return"];
    bb130__0_1208 -> bb187__0_1208 [label="unwind"];
    bb131__0_1208 -> bb132__0_1208 [label="return"];
    bb131__0_1208 -> bb187__0_1208 [label="unwind"];
    bb132__0_1208 -> bb133__0_1208 [label="0"];
    bb132__0_1208 -> bb134__0_1208 [label="1"];
    bb132__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb133__0_1208 -> bb136__0_1208 [label="return"];
    bb133__0_1208 -> bb187__0_1208 [label="unwind"];
    bb134__0_1208 -> bb135__0_1208 [label="return"];
    bb134__0_1208 -> bb193__0_1208 [label="unwind"];
    bb135__0_1208 -> bb174__0_1208 [label=""];
    bb136__0_1208 -> bb137__0_1208 [label="return"];
    bb136__0_1208 -> bb187__0_1208 [label="unwind"];
    bb137__0_1208 -> bb138__0_1208 [label="0"];
    bb137__0_1208 -> bb139__0_1208 [label="1"];
    bb137__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb138__0_1208 -> bb141__0_1208 [label="return"];
    bb138__0_1208 -> bb187__0_1208 [label="unwind"];
    bb139__0_1208 -> bb140__0_1208 [label="return"];
    bb139__0_1208 -> bb192__0_1208 [label="unwind"];
    bb140__0_1208 -> bb174__0_1208 [label=""];
    bb141__0_1208 -> bb142__0_1208 [label="return"];
    bb141__0_1208 -> bb187__0_1208 [label="unwind"];
    bb142__0_1208 -> bb143__0_1208 [label="return"];
    bb142__0_1208 -> bb187__0_1208 [label="unwind"];
    bb143__0_1208 -> bb144__0_1208 [label="return"];
    bb143__0_1208 -> bb187__0_1208 [label="unwind"];
    bb144__0_1208 -> bb145__0_1208 [label="return"];
    bb144__0_1208 -> bb187__0_1208 [label="unwind"];
    bb145__0_1208 -> bb146__0_1208 [label="0"];
    bb145__0_1208 -> bb147__0_1208 [label="1"];
    bb145__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb146__0_1208 -> bb149__0_1208 [label="return"];
    bb146__0_1208 -> bb187__0_1208 [label="unwind"];
    bb147__0_1208 -> bb148__0_1208 [label="return"];
    bb147__0_1208 -> bb187__0_1208 [label="unwind"];
    bb148__0_1208 -> bb174__0_1208 [label=""];
    bb149__0_1208 -> bb150__0_1208 [label="return"];
    bb149__0_1208 -> bb187__0_1208 [label="unwind"];
    bb150__0_1208 -> bb151__0_1208 [label="return"];
    bb150__0_1208 -> bb187__0_1208 [label="unwind"];
    bb151__0_1208 -> bb152__0_1208 [label="return"];
    bb151__0_1208 -> bb187__0_1208 [label="unwind"];
    bb152__0_1208 -> bb153__0_1208 [label="return"];
    bb152__0_1208 -> bb187__0_1208 [label="unwind"];
    bb153__0_1208 -> bb154__0_1208 [label="return"];
    bb153__0_1208 -> bb187__0_1208 [label="unwind"];
    bb154__0_1208 -> bb155__0_1208 [label="return"];
    bb154__0_1208 -> bb187__0_1208 [label="unwind"];
    bb155__0_1208 -> bb156__0_1208 [label="0"];
    bb155__0_1208 -> bb157__0_1208 [label="1"];
    bb155__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb156__0_1208 -> bb159__0_1208 [label="return"];
    bb156__0_1208 -> bb187__0_1208 [label="unwind"];
    bb157__0_1208 -> bb158__0_1208 [label="return"];
    bb157__0_1208 -> bb187__0_1208 [label="unwind"];
    bb158__0_1208 -> bb175__0_1208 [label=""];
    bb159__0_1208 -> bb160__0_1208 [label="return"];
    bb159__0_1208 -> bb187__0_1208 [label="unwind"];
    bb160__0_1208 -> bb161__0_1208 [label="return"];
    bb160__0_1208 -> bb187__0_1208 [label="unwind"];
    bb161__0_1208 -> bb163__0_1208 [label="0"];
    bb161__0_1208 -> bb162__0_1208 [label="otherwise"];
    bb162__0_1208 -> bb164__0_1208 [label=""];
    bb163__0_1208 -> bb164__0_1208 [label=""];
    bb164__0_1208 -> bb165__0_1208 [label="return"];
    bb164__0_1208 -> bb187__0_1208 [label="unwind"];
    bb165__0_1208 -> bb166__0_1208 [label="return"];
    bb165__0_1208 -> bb187__0_1208 [label="unwind"];
    bb166__0_1208 -> bb167__0_1208 [label="0"];
    bb166__0_1208 -> bb168__0_1208 [label="1"];
    bb166__0_1208 -> bb7__0_1208 [label="otherwise"];
    bb167__0_1208 -> bb170__0_1208 [label="return"];
    bb167__0_1208 -> bb188__0_1208 [label="unwind"];
    bb168__0_1208 -> bb169__0_1208 [label="return"];
    bb168__0_1208 -> bb191__0_1208 [label="unwind"];
    bb169__0_1208 -> bb175__0_1208 [label=""];
    bb170__0_1208 -> bb171__0_1208 [label="return"];
    bb170__0_1208 -> bb189__0_1208 [label="unwind"];
    bb171__0_1208 -> bb172__0_1208 [label="return"];
    bb171__0_1208 -> bb190__0_1208 [label="unwind"];
    bb172__0_1208 -> bb180__0_1208 [label=""];
    bb173__0_1208 -> bb174__0_1208 [label=""];
    bb174__0_1208 -> bb175__0_1208 [label=""];
    bb175__0_1208 -> bb176__0_1208 [label="return"];
    bb175__0_1208 -> bb188__0_1208 [label="unwind"];
    bb176__0_1208 -> bb177__0_1208 [label="return"];
    bb176__0_1208 -> bb189__0_1208 [label="unwind"];
    bb177__0_1208 -> bb178__0_1208 [label="return"];
    bb177__0_1208 -> bb190__0_1208 [label="unwind"];
    bb178__0_1208 -> bb179__0_1208 [label=""];
    bb179__0_1208 -> bb180__0_1208 [label=""];
    bb181__0_1208 -> bb187__0_1208 [label="return"];
    bb182__0_1208 -> bb187__0_1208 [label="return"];
    bb183__0_1208 -> bb187__0_1208 [label="return"];
    bb184__0_1208 -> bb187__0_1208 [label="return"];
    bb185__0_1208 -> bb187__0_1208 [label="return"];
    bb186__0_1208 -> bb187__0_1208 [label="return"];
    bb187__0_1208 -> bb188__0_1208 [label="return"];
    bb188__0_1208 -> bb189__0_1208 [label="return"];
    bb189__0_1208 -> bb190__0_1208 [label="return"];
    bb191__0_1208 -> bb187__0_1208 [label=""];
    bb192__0_1208 -> bb187__0_1208 [label=""];
    bb193__0_1208 -> bb187__0_1208 [label=""];
    bb194__0_1208 -> bb187__0_1208 [label=""];
    bb195__0_1208 -> bb187__0_1208 [label=""];
    bb196__0_1208 -> bb188__0_1208 [label=""];
    bb197__0_1208 -> bb189__0_1208 [label=""];
    bb198__0_1208 -> bb190__0_1208 [label=""];
    bb199__0_1208 -> bb190__0_1208 [label=""];
}
