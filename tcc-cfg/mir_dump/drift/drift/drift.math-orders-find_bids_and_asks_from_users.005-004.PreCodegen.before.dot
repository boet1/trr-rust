digraph Mir_0_2620 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn find_bids_and_asks_from_users(_1: &amp;ReErased state::perp_market::PerpMarket, _2: &amp;ReErased state::oracle::OraclePriceData, _3: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;, _4: u64, _5: i64) -&gt; std::result::Result&lt;(std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;), error::ErrorCode&gt;<br align="left"/>let mut _6: std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _7: std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _8: u16;<br align="left"/>let _9: u64;<br align="left"/>let _10: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: Closure(DefId(0:2621 ~ drift[d311]::math::orders::find_bids_and_asks_from_users::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u64, u64, controller::position::PositionDirection)), []), (&amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;)]);<br align="left"/>let mut _13: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _15: ();<br align="left"/>let mut _16: std::collections::btree_map::Values&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _17: std::collections::btree_map::Values&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _18: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _19: std::collections::btree_map::Values&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _20: ();<br align="left"/>let _21: ();<br align="left"/>let mut _22: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _23: &amp;ReErased mut std::collections::btree_map::Values&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _24: &amp;ReErased mut std::collections::btree_map::Values&lt;ReErased, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: !;<br align="left"/>let _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _28: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _30: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _31: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _33: Closure(DefId(0:15141 ~ drift[d311]::math::orders::find_bids_and_asks_from_users::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _39: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::user::Order&gt;&gt;;<br align="left"/>let mut _40: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::user::Order&gt;&gt;;<br align="left"/>let mut _41: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _42: &amp;ReErased [state::user::Order];<br align="left"/>let mut _43: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let _44: &amp;ReErased state::user::User;<br align="left"/>let mut _45: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _46: std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::user::Order&gt;&gt;;<br align="left"/>let _47: ();<br align="left"/>let mut _48: std::option::Option&lt;(usize, &amp;ReErased state::user::Order)&gt;;<br align="left"/>let mut _49: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::user::Order&gt;&gt;;<br align="left"/>let mut _50: &amp;ReErased mut std::iter::Enumerate&lt;std::slice::Iter&lt;ReErased, state::user::Order&gt;&gt;;<br align="left"/>let mut _51: isize;<br align="left"/>let mut _52: !;<br align="left"/>let _53: &amp;ReErased state::user::Order;<br align="left"/>let _54: ();<br align="left"/>let mut _55: bool;<br align="left"/>let mut _56: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _57: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _58: state::user::OrderStatus;<br align="left"/>let mut _59: !;<br align="left"/>let _60: ();<br align="left"/>let mut _61: bool;<br align="left"/>let mut _62: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _63: &amp;ReErased state::user::MarketType;<br align="left"/>let _64: state::user::MarketType;<br align="left"/>let mut _65: bool;<br align="left"/>let mut _66: u16;<br align="left"/>let mut _67: u16;<br align="left"/>let mut _68: !;<br align="left"/>let _69: ();<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: &amp;ReErased state::user::Order;<br align="left"/>let mut _72: bool;<br align="left"/>let mut _73: &amp;ReErased state::user::Order;<br align="left"/>let mut _74: bool;<br align="left"/>let mut _75: &amp;ReErased state::user::Order;<br align="left"/>let mut _76: !;<br align="left"/>let _77: ();<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _80: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _81: &amp;ReErased state::user::Order;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: bool;<br align="left"/>let mut _88: !;<br align="left"/>let _89: ();<br align="left"/>let mut _90: bool;<br align="left"/>let mut _91: i64;<br align="left"/>let mut _92: i64;<br align="left"/>let mut _93: bool;<br align="left"/>let mut _94: i64;<br align="left"/>let mut _95: !;<br align="left"/>let _96: i64;<br align="left"/>let mut _97: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _98: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _99: std::result::Result&lt;&amp;ReErased state::user::PerpPosition, error::ErrorCode&gt;;<br align="left"/>let mut _100: &amp;ReErased state::user::User;<br align="left"/>let _101: &amp;ReErased state::user::User;<br align="left"/>let mut _102: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _103: u16;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _109: u64;<br align="left"/>let mut _110: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _111: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _112: &amp;ReErased state::user::Order;<br align="left"/>let mut _113: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _114: i64;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: u64;<br align="left"/>let _120: u64;<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _122: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _123: &amp;ReErased state::user::Order;<br align="left"/>let mut _124: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _125: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _126: u64;<br align="left"/>let mut _127: u64;<br align="left"/>let mut _128: bool;<br align="left"/>let mut _129: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _130: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _135: u64;<br align="left"/>let _136: ();<br align="left"/>let mut _137: &amp;ReErased mut Closure(DefId(0:2621 ~ drift[d311]::math::orders::find_bids_and_asks_from_users::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((u64, u64, controller::position::PositionDirection)), []), (&amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, &amp;ReErased mut std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;)]);<br align="left"/>let mut _138: (u64, u64, controller::position::PositionDirection);<br align="left"/>let mut _139: u64;<br align="left"/>let mut _140: u64;<br align="left"/>let mut _141: controller::position::PositionDirection;<br align="left"/>let mut _142: (std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;);<br align="left"/>let mut _143: std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _144: std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _145: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _146: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _147: isize;<br align="left"/>let mut _148: isize;<br align="left"/>let mut _149: isize;<br align="left"/>let mut _150: isize;<br align="left"/>let mut _151: isize;<br align="left"/>debug perp_market =&gt; _1;<br align="left"/>debug oracle_price_date =&gt; _2;<br align="left"/>debug users =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug now =&gt; _5;<br align="left"/>debug bids =&gt; _6;<br align="left"/>debug asks =&gt; _7;<br align="left"/>debug market_index =&gt; _8;<br align="left"/>debug tick_size =&gt; _9;<br align="left"/>debug oracle_price =&gt; _10;<br align="left"/>debug insert_order =&gt; _12;<br align="left"/>debug iter =&gt; _19;<br align="left"/>debug account_loader =&gt; _27;<br align="left"/>debug user =&gt; _28;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug iter =&gt; _46;<br align="left"/>debug order =&gt; _53;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug existing_position =&gt; _96;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug base_amount =&gt; _109;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug limit_price =&gt; _120;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>>;
    bb0__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/></td></tr><tr><td align="left">_6 = Vec::&lt;Level&gt;::with_capacity(const 32_usize)</td></tr></table>>];
    bb1__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = Vec::&lt;Level&gt;::with_capacity(const 32_usize)</td></tr></table>>];
    bb2__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((*_1).21: u16)<br/>StorageLive(_9)<br/>_9 = (((*_1).1: state::perp_market::AMM).53: u64)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = ((*_2).0: i64)<br/>_10 = Option::&lt;i64&gt;::Some(move _11)<br/>StorageDead(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut _6<br/>StorageLive(_14)<br/>_14 = &amp;mut _7<br/>_12 = {closure@programs/drift/src/math/orders.rs:1236:28: 1236:94} { bids: move _13, asks: move _14 }<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;((*_3).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/></td></tr><tr><td align="left">_17 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;::values(move _18)</td></tr></table>>];
    bb3__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::collections::btree_map::Values&lt;'_, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt; as IntoIterator&gt;::into_iter(move _17)</td></tr></table>>];
    bb4__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_19)<br/>_19 = move _16<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;mut _19<br/>_23 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::collections::btree_map::Values&lt;'_, anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt; as Iterator&gt;::next(move _23)</td></tr></table>>];
    bb6__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb7__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_22 as Some).0: &amp;anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;(*_27)<br/></td></tr><tr><td align="left">_31 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _32)</td></tr></table>>];
    bb8__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb9__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_15 = const ()<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = move _6<br/>StorageLive(_144)<br/>_144 = move _7<br/>_142 = (move _143, move _144)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>_0 = std::result::Result::&lt;(Vec&lt;Level&gt;, Vec&lt;Level&gt;), error::ErrorCode&gt;::Ok(move _142)<br/>StorageDead(_142)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageLive(_33)<br/>_33 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_30 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _31, move _33)</td></tr></table>>];
    bb11__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb12__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_34 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb13__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = move ((_29 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_28 = move _38<br/>StorageDead(_38)<br/>_149 = discriminant(_29)<br/>StorageDead(_29)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = &amp;_28<br/></td></tr><tr><td align="left">_44 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _45)</td></tr></table>>];
    bb14__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Vec&lt;Level&gt;, Vec&lt;Level&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb15__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>_147 = discriminant(_29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_43 = &amp;((*_44).5: [state::user::Order; 32])<br/>_42 = move _43 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = core::slice::&lt;impl [Order]&gt;::iter(move _42)</td></tr></table>>];
    bb17__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::enumerate(move _41)</td></tr></table>>];
    bb18__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;Enumerate&lt;std::slice::Iter&lt;'_, Order&gt;&gt; as IntoIterator&gt;::into_iter(move _40)</td></tr></table>>];
    bb19__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_46)<br/>_46 = move _39<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;mut _46<br/>_49 = &amp;mut (*_50)<br/></td></tr><tr><td align="left">_48 = &lt;Enumerate&lt;std::slice::Iter&lt;'_, Order&gt;&gt; as Iterator&gt;::next(move _49)</td></tr></table>>];
    bb21__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_51 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb22__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = (((_48 as Some).0: (usize, &amp;state::user::Order)).1: &amp;state::user::Order)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;((*_53).12: state::user::OrderStatus)<br/>StorageLive(_57)<br/>_146 = const _<br/>_57 = &amp;(*_146)<br/></td></tr><tr><td align="left">_55 = &lt;OrderStatus as PartialEq&gt;::ne(move _56, move _57)</td></tr></table>>];
    bb23__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_21 = const ()<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb24__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb25__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>_54 = const ()<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;((*_53).14: state::user::MarketType)<br/>StorageLive(_63)<br/>_145 = const _<br/>_63 = &amp;(*_145)<br/></td></tr><tr><td align="left">_61 = &lt;state::user::MarketType as PartialEq&gt;::ne(move _62, move _63)</td></tr></table>>];
    bb27__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb28__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = ((*_53).11: u16)<br/>StorageLive(_67)<br/>_67 = _8<br/>_65 = Ne(move _66, move _67)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb30__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>_60 = const ()<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;(*_53)<br/></td></tr><tr><td align="left">_70 = Order::is_limit_order(move _71)</td></tr></table>>];
    bb32__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb33__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;(*_53)<br/></td></tr><tr><td align="left">_72 = Order::must_be_triggered(move _73)</td></tr></table>>];
    bb34__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb36__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = &amp;(*_53)<br/></td></tr><tr><td align="left">_74 = Order::triggered(move _75)</td></tr></table>>];
    bb37__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb38__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_69 = const ()<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;(*_53)<br/>StorageLive(_82)<br/>_82 = _4<br/></td></tr><tr><td align="left">_80 = Order::is_resting_limit_order(move _81, move _82)</td></tr></table>>];
    bb42__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _80)</td></tr></table>>];
    bb43__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_83 = discriminant(_79)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb44__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_79 as Continue).0: bool)<br/>_78 = _87<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb45__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_79 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Vec&lt;Level&gt;, Vec&lt;Level&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb46__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_77 = const ()<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _5<br/>StorageLive(_92)<br/>_92 = ((*_53).8: i64)<br/>_90 = Gt(move _91, move _92)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb48__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = ((*_53).8: i64)<br/>_93 = Ne(move _94, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb50__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">_89 = const ()<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_28<br/></td></tr><tr><td align="left">_101 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb54__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">_100 = &amp;(*_101)<br/>StorageDead(_102)<br/>StorageLive(_103)<br/>_103 = _8<br/></td></tr><tr><td align="left">_99 = User::get_perp_position(move _100, move _103)</td></tr></table>>];
    bb55__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;std::result::Result&lt;&amp;PerpPosition, error::ErrorCode&gt; as Try&gt;::branch(move _99)</td></tr></table>>];
    bb56__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_104 = discriminant(_98)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb57__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_98 as Continue).0: &amp;state::user::PerpPosition)<br/>_97 = _108<br/>StorageDead(_108)<br/>_96 = ((*_97).1: i64)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;(*_53)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = _96<br/>_113 = Option::&lt;i64&gt;::Some(move _114)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_111 = Order::get_base_asset_amount_unfilled(move _112, move _113)</td></tr></table>>];
    bb58__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_98 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Vec&lt;Level&gt;, Vec&lt;Level&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb59__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_110 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _111)</td></tr></table>>];
    bb61__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>_115 = discriminant(_110)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb62__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_110 as Continue).0: u64)<br/>_109 = _119<br/>StorageDead(_119)<br/>StorageDead(_110)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;(*_53)<br/>StorageLive(_124)<br/>_124 = _10<br/>StorageLive(_125)<br/>_125 = Option::&lt;u64&gt;::None<br/>StorageLive(_126)<br/>_126 = _4<br/>StorageLive(_127)<br/>_127 = _9<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(*_1)<br/></td></tr><tr><td align="left">_128 = PerpMarket::is_prediction_market(move _129)</td></tr></table>>];
    bb63__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_110 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Vec&lt;Level&gt;, Vec&lt;Level&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb64__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageLive(_130)<br/>_130 = Option::&lt;ProtectedMakerParams&gt;::None<br/></td></tr><tr><td align="left">_122 = Order::force_get_limit_price(move _123, move _124, move _125, move _126, move _127, move _128, move _130)</td></tr></table>>];
    bb66__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb67__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_131 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb68__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_121 as Continue).0: u64)<br/>_120 = _135<br/>StorageDead(_135)<br/>StorageDead(_121)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = &amp;mut _12<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = _109<br/>StorageLive(_140)<br/>_140 = _120<br/>StorageLive(_141)<br/>_141 = ((*_53).17: controller::position::PositionDirection)<br/>_138 = (move _139, move _140, move _141)<br/></td></tr><tr><td align="left">_136 = &lt;{closure@programs/drift/src/math/orders.rs:1236:28: 1236:94} as FnMut&lt;(u64, u64, controller::position::PositionDirection)&gt;&gt;::call_mut(move _137, move _138)</td></tr></table>>];
    bb69__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_134)<br/>_134 = _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(Vec&lt;Level&gt;, Vec&lt;Level&gt;), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb70__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>_47 = const ()<br/>StorageDead(_120)<br/>StorageDead(_109)<br/>StorageDead(_96)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>_20 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>_20 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb77__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb78__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb79__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left">return</td></tr></table>>];
    bb81__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">81 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb82__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">82 (cleanup)</td></tr><tr><td align="left">drop(_7)</td></tr></table>>];
    bb83__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">83 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb84__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">84 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb85__0_2620 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">85 (cleanup)</td></tr><tr><td align="left" balign="left">_151 = discriminant(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2620 -> bb1__0_2620 [label="return"];
    bb1__0_2620 -> bb2__0_2620 [label="return"];
    bb1__0_2620 -> bb83__0_2620 [label="unwind"];
    bb2__0_2620 -> bb3__0_2620 [label="return"];
    bb2__0_2620 -> bb82__0_2620 [label="unwind"];
    bb3__0_2620 -> bb4__0_2620 [label="return"];
    bb3__0_2620 -> bb82__0_2620 [label="unwind"];
    bb4__0_2620 -> bb5__0_2620 [label=""];
    bb5__0_2620 -> bb6__0_2620 [label="return"];
    bb5__0_2620 -> bb82__0_2620 [label="unwind"];
    bb6__0_2620 -> bb9__0_2620 [label="0"];
    bb6__0_2620 -> bb7__0_2620 [label="1"];
    bb6__0_2620 -> bb8__0_2620 [label="otherwise"];
    bb7__0_2620 -> bb10__0_2620 [label="return"];
    bb7__0_2620 -> bb82__0_2620 [label="unwind"];
    bb9__0_2620 -> bb80__0_2620 [label=""];
    bb10__0_2620 -> bb11__0_2620 [label="return"];
    bb10__0_2620 -> bb82__0_2620 [label="unwind"];
    bb11__0_2620 -> bb12__0_2620 [label="return"];
    bb11__0_2620 -> bb82__0_2620 [label="unwind"];
    bb12__0_2620 -> bb13__0_2620 [label="0"];
    bb12__0_2620 -> bb14__0_2620 [label="1"];
    bb12__0_2620 -> bb8__0_2620 [label="otherwise"];
    bb13__0_2620 -> bb16__0_2620 [label="return"];
    bb13__0_2620 -> bb81__0_2620 [label="unwind"];
    bb14__0_2620 -> bb15__0_2620 [label="return"];
    bb14__0_2620 -> bb85__0_2620 [label="unwind"];
    bb15__0_2620 -> bb77__0_2620 [label=""];
    bb16__0_2620 -> bb17__0_2620 [label="return"];
    bb16__0_2620 -> bb81__0_2620 [label="unwind"];
    bb17__0_2620 -> bb18__0_2620 [label="return"];
    bb17__0_2620 -> bb81__0_2620 [label="unwind"];
    bb18__0_2620 -> bb19__0_2620 [label="return"];
    bb18__0_2620 -> bb81__0_2620 [label="unwind"];
    bb19__0_2620 -> bb20__0_2620 [label=""];
    bb20__0_2620 -> bb21__0_2620 [label="return"];
    bb20__0_2620 -> bb81__0_2620 [label="unwind"];
    bb21__0_2620 -> bb23__0_2620 [label="0"];
    bb21__0_2620 -> bb22__0_2620 [label="1"];
    bb21__0_2620 -> bb8__0_2620 [label="otherwise"];
    bb22__0_2620 -> bb24__0_2620 [label="return"];
    bb22__0_2620 -> bb81__0_2620 [label="unwind"];
    bb23__0_2620 -> bb73__0_2620 [label="return"];
    bb23__0_2620 -> bb82__0_2620 [label="unwind"];
    bb24__0_2620 -> bb26__0_2620 [label="0"];
    bb24__0_2620 -> bb25__0_2620 [label="otherwise"];
    bb25__0_2620 -> bb72__0_2620 [label=""];
    bb26__0_2620 -> bb27__0_2620 [label="return"];
    bb26__0_2620 -> bb81__0_2620 [label="unwind"];
    bb27__0_2620 -> bb29__0_2620 [label="0"];
    bb27__0_2620 -> bb28__0_2620 [label="otherwise"];
    bb28__0_2620 -> bb30__0_2620 [label=""];
    bb29__0_2620 -> bb31__0_2620 [label="0"];
    bb29__0_2620 -> bb30__0_2620 [label="otherwise"];
    bb30__0_2620 -> bb72__0_2620 [label=""];
    bb31__0_2620 -> bb32__0_2620 [label="return"];
    bb31__0_2620 -> bb81__0_2620 [label="unwind"];
    bb32__0_2620 -> bb34__0_2620 [label="0"];
    bb32__0_2620 -> bb33__0_2620 [label="otherwise"];
    bb33__0_2620 -> bb35__0_2620 [label="return"];
    bb33__0_2620 -> bb81__0_2620 [label="unwind"];
    bb34__0_2620 -> bb39__0_2620 [label=""];
    bb35__0_2620 -> bb40__0_2620 [label="0"];
    bb35__0_2620 -> bb36__0_2620 [label="otherwise"];
    bb36__0_2620 -> bb37__0_2620 [label="return"];
    bb36__0_2620 -> bb81__0_2620 [label="unwind"];
    bb37__0_2620 -> bb39__0_2620 [label="0"];
    bb37__0_2620 -> bb38__0_2620 [label="otherwise"];
    bb38__0_2620 -> bb41__0_2620 [label=""];
    bb39__0_2620 -> bb72__0_2620 [label=""];
    bb40__0_2620 -> bb41__0_2620 [label=""];
    bb41__0_2620 -> bb42__0_2620 [label="return"];
    bb41__0_2620 -> bb81__0_2620 [label="unwind"];
    bb42__0_2620 -> bb43__0_2620 [label="return"];
    bb42__0_2620 -> bb81__0_2620 [label="unwind"];
    bb43__0_2620 -> bb44__0_2620 [label="0"];
    bb43__0_2620 -> bb45__0_2620 [label="1"];
    bb43__0_2620 -> bb8__0_2620 [label="otherwise"];
    bb44__0_2620 -> bb48__0_2620 [label="0"];
    bb44__0_2620 -> bb47__0_2620 [label="otherwise"];
    bb45__0_2620 -> bb46__0_2620 [label="return"];
    bb45__0_2620 -> bb81__0_2620 [label="unwind"];
    bb46__0_2620 -> bb76__0_2620 [label=""];
    bb47__0_2620 -> bb50__0_2620 [label="0"];
    bb47__0_2620 -> bb49__0_2620 [label="otherwise"];
    bb48__0_2620 -> bb72__0_2620 [label=""];
    bb49__0_2620 -> bb52__0_2620 [label="0"];
    bb49__0_2620 -> bb51__0_2620 [label="otherwise"];
    bb50__0_2620 -> bb53__0_2620 [label=""];
    bb51__0_2620 -> bb72__0_2620 [label=""];
    bb52__0_2620 -> bb53__0_2620 [label=""];
    bb53__0_2620 -> bb54__0_2620 [label="return"];
    bb53__0_2620 -> bb81__0_2620 [label="unwind"];
    bb54__0_2620 -> bb55__0_2620 [label="return"];
    bb54__0_2620 -> bb81__0_2620 [label="unwind"];
    bb55__0_2620 -> bb56__0_2620 [label="return"];
    bb55__0_2620 -> bb81__0_2620 [label="unwind"];
    bb56__0_2620 -> bb57__0_2620 [label="0"];
    bb56__0_2620 -> bb58__0_2620 [label="1"];
    bb56__0_2620 -> bb8__0_2620 [label="otherwise"];
    bb57__0_2620 -> bb60__0_2620 [label="return"];
    bb57__0_2620 -> bb81__0_2620 [label="unwind"];
    bb58__0_2620 -> bb59__0_2620 [label="return"];
    bb58__0_2620 -> bb81__0_2620 [label="unwind"];
    bb59__0_2620 -> bb75__0_2620 [label=""];
    bb60__0_2620 -> bb61__0_2620 [label="return"];
    bb60__0_2620 -> bb81__0_2620 [label="unwind"];
    bb61__0_2620 -> bb62__0_2620 [label="0"];
    bb61__0_2620 -> bb63__0_2620 [label="1"];
    bb61__0_2620 -> bb8__0_2620 [label="otherwise"];
    bb62__0_2620 -> bb65__0_2620 [label="return"];
    bb62__0_2620 -> bb81__0_2620 [label="unwind"];
    bb63__0_2620 -> bb64__0_2620 [label="return"];
    bb63__0_2620 -> bb81__0_2620 [label="unwind"];
    bb64__0_2620 -> bb74__0_2620 [label=""];
    bb65__0_2620 -> bb66__0_2620 [label="return"];
    bb65__0_2620 -> bb81__0_2620 [label="unwind"];
    bb66__0_2620 -> bb67__0_2620 [label="return"];
    bb66__0_2620 -> bb81__0_2620 [label="unwind"];
    bb67__0_2620 -> bb68__0_2620 [label="0"];
    bb67__0_2620 -> bb69__0_2620 [label="1"];
    bb67__0_2620 -> bb8__0_2620 [label="otherwise"];
    bb68__0_2620 -> bb71__0_2620 [label="return"];
    bb68__0_2620 -> bb81__0_2620 [label="unwind"];
    bb69__0_2620 -> bb70__0_2620 [label="return"];
    bb69__0_2620 -> bb81__0_2620 [label="unwind"];
    bb70__0_2620 -> bb74__0_2620 [label=""];
    bb71__0_2620 -> bb20__0_2620 [label=""];
    bb72__0_2620 -> bb20__0_2620 [label=""];
    bb73__0_2620 -> bb5__0_2620 [label=""];
    bb74__0_2620 -> bb75__0_2620 [label=""];
    bb75__0_2620 -> bb76__0_2620 [label=""];
    bb76__0_2620 -> bb77__0_2620 [label="return"];
    bb76__0_2620 -> bb82__0_2620 [label="unwind"];
    bb77__0_2620 -> bb78__0_2620 [label="return"];
    bb77__0_2620 -> bb83__0_2620 [label="unwind"];
    bb78__0_2620 -> bb79__0_2620 [label="return"];
    bb78__0_2620 -> bb84__0_2620 [label="unwind"];
    bb79__0_2620 -> bb80__0_2620 [label=""];
    bb81__0_2620 -> bb82__0_2620 [label="return"];
    bb82__0_2620 -> bb83__0_2620 [label="return"];
    bb83__0_2620 -> bb84__0_2620 [label="return"];
    bb85__0_2620 -> bb82__0_2620 [label=""];
}
