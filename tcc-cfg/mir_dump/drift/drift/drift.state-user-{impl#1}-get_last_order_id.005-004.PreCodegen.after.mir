// MIR for `state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::get_last_order_id` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::get_last_order_id(_1: &User) -> u32 {
    debug self => _1;
    let mut _0: u32;
    let mut _2: bool;
    let mut _3: u32;
    let mut _4: u32;
    let mut _5: (u32, bool);

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = ((*_1).15: u32);
        _2 = Eq(move _3, const 1_u32);
        switchInt(move _2) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_3);
        _0 = const _;
        goto -> bb4;
    }

    bb2: {
        StorageDead(_3);
        StorageLive(_4);
        _4 = ((*_1).15: u32);
        _5 = CheckedSub(_4, const 1_u32);
        assert(!move (_5.1: bool), "attempt to compute `{} - {}`, which would overflow", move _4, const 1_u32) -> [success: bb3, unwind continue];
    }

    bb3: {
        _0 = move (_5.0: u32);
        StorageDead(_4);
        goto -> bb4;
    }

    bb4: {
        StorageDead(_2);
        return;
    }
}
