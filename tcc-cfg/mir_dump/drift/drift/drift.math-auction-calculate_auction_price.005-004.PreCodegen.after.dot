digraph Mir_0_1903 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_auction_price(_1: &amp;ReErased state::user::Order, _2: u64, _3: u64, _4: std::option::Option&lt;i64&gt;, _5: bool) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let mut _6: isize;<br align="left"/>let mut _7: &amp;ReErased &amp;ReErased state::user::Order;<br align="left"/>let mut _8: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: &amp;ReErased state::user::Order;<br align="left"/>let mut _11: state::user::OrderBitFlag;<br align="left"/>let mut _12: &amp;ReErased state::user::Order;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _16: bool;<br align="left"/>let mut _17: &amp;ReErased state::user::Order;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: bool;<br align="left"/>let mut _21: state::user::Order;<br align="left"/>let mut _22: &amp;ReErased state::user::Order;<br align="left"/>let mut _23: u64;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased state::user::Order;<br align="left"/>let mut _28: u64;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: &amp;ReErased state::user::Order;<br align="left"/>let mut _31: u64;<br align="left"/>let mut _32: u64;<br align="left"/>let mut _33: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _34: bool;<br align="left"/>debug order =&gt; _1;<br align="left"/>debug slot =&gt; _2;<br align="left"/>debug tick_size =&gt; _3;<br align="left"/>debug valid_oracle_price =&gt; _4;<br align="left"/>debug is_prediction_market =&gt; _5;<br align="left"/>>;
    bb0__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_6 = discriminant(((*_1).13: state::user::OrderType))<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = &amp;(*_1)<br/>StorageLive(_31)<br/>_31 = _2<br/>StorageLive(_32)<br/>_32 = _3<br/>StorageLive(_33)<br/>_33 = _4<br/>StorageLive(_34)<br/>_34 = _5<br/></td></tr><tr><td align="left">_0 = calculate_auction_price_for_oracle_offset_auction(move _30, move _31, move _32, move _33, move _34)</td></tr></table>>];
    bb2__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = OrderBitFlag::OracleTriggerMarket<br/></td></tr><tr><td align="left">_9 = Order::is_bit_flag_set(move _10, move _11)</td></tr></table>>];
    bb4__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb5__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/>StorageLive(_12)<br/>_12 = &amp;(*_1)<br/>StorageLive(_13)<br/>_13 = _2<br/>StorageLive(_14)<br/>_14 = _3<br/>StorageLive(_15)<br/>_15 = _4<br/>StorageLive(_16)<br/>_16 = _5<br/></td></tr><tr><td align="left">_0 = calculate_auction_price_for_oracle_offset_auction(move _12, move _13, move _14, move _15, move _16)</td></tr></table>>];
    bb6__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = &amp;(*_1)<br/>StorageLive(_18)<br/>_18 = _2<br/>StorageLive(_19)<br/>_19 = _3<br/></td></tr><tr><td align="left">_0 = calculate_auction_price_for_fixed_auction(move _17, move _18, move _19)</td></tr></table>>];
    bb9__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = (*_1)<br/></td></tr><tr><td align="left">_20 = Order::has_oracle_price_offset(move _21)</td></tr></table>>];
    bb11__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb12__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_1)<br/>StorageLive(_23)<br/>_23 = _2<br/>StorageLive(_24)<br/>_24 = _3<br/>StorageLive(_25)<br/>_25 = _4<br/>StorageLive(_26)<br/>_26 = _5<br/></td></tr><tr><td align="left">_0 = calculate_auction_price_for_oracle_offset_auction(move _22, move _23, move _24, move _25, move _26)</td></tr></table>>];
    bb13__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_27)<br/>_27 = &amp;(*_1)<br/>StorageLive(_28)<br/>_28 = _2<br/>StorageLive(_29)<br/>_29 = _3<br/></td></tr><tr><td align="left">_0 = calculate_auction_price_for_fixed_auction(move _27, move _28, move _29)</td></tr></table>>];
    bb15__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1903 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1903 -> bb8__0_1903 [label="0"];
    bb0__0_1903 -> bb10__0_1903 [label="1"];
    bb0__0_1903 -> bb3__0_1903 [label="2"];
    bb0__0_1903 -> bb8__0_1903 [label="3"];
    bb0__0_1903 -> bb1__0_1903 [label="4"];
    bb0__0_1903 -> bb2__0_1903 [label="otherwise"];
    bb1__0_1903 -> bb17__0_1903 [label="return"];
    bb3__0_1903 -> bb4__0_1903 [label="return"];
    bb4__0_1903 -> bb6__0_1903 [label="0"];
    bb4__0_1903 -> bb5__0_1903 [label="otherwise"];
    bb5__0_1903 -> bb7__0_1903 [label="return"];
    bb6__0_1903 -> bb8__0_1903 [label=""];
    bb7__0_1903 -> bb18__0_1903 [label=""];
    bb8__0_1903 -> bb9__0_1903 [label="return"];
    bb9__0_1903 -> bb18__0_1903 [label=""];
    bb10__0_1903 -> bb11__0_1903 [label="return"];
    bb11__0_1903 -> bb14__0_1903 [label="0"];
    bb11__0_1903 -> bb12__0_1903 [label="otherwise"];
    bb12__0_1903 -> bb13__0_1903 [label="return"];
    bb13__0_1903 -> bb16__0_1903 [label=""];
    bb14__0_1903 -> bb15__0_1903 [label="return"];
    bb15__0_1903 -> bb16__0_1903 [label=""];
    bb16__0_1903 -> bb18__0_1903 [label=""];
    bb17__0_1903 -> bb18__0_1903 [label=""];
}
