digraph Mir_0_2223 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_filler_reward(_1: u64, _2: u64, _3: u64, _4: u64, _5: &amp;ReErased state::state::OrderFillerRewardStructure) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _6: u64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _11: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: u32;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: u64;<br align="left"/>let mut _20: u64;<br align="left"/>let mut _21: u32;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: u64;<br align="left"/>let _27: u128;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _29: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u128;<br align="left"/>let _35: u128;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _37: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: u128;<br align="left"/>let mut _53: u128;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: (u128, bool);<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: u128;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: u128;<br align="left"/>let _68: u128;<br align="left"/>let mut _69: u128;<br align="left"/>let mut _70: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _71: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _72: u64;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _74: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _75: u64;<br align="left"/>let mut _76: u64;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: u64;<br align="left"/>let mut _82: isize;<br align="left"/>let _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _84: !;<br align="left"/>let mut _85: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _86: u128;<br align="left"/>let _87: u64;<br align="left"/>let mut _88: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _89: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _92: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _93: u128;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _95: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _96: u128;<br align="left"/>let mut _97: &amp;ReErased u128;<br align="left"/>let _98: u128;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _100: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _101: u128;<br align="left"/>let mut _102: isize;<br align="left"/>let _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _104: !;<br align="left"/>let mut _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _106: u128;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: u128;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _115: !;<br align="left"/>let mut _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _117: u128;<br align="left"/>let mut _118: isize;<br align="left"/>let _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _120: !;<br align="left"/>let mut _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _122: u64;<br align="left"/>let _123: u64;<br align="left"/>let mut _124: u64;<br align="left"/>let mut _125: u64;<br align="left"/>let mut _126: u64;<br align="left"/>debug fee =&gt; _1;<br align="left"/>debug order_slot =&gt; _2;<br align="left"/>debug clock_slot =&gt; _3;<br align="left"/>debug multiplier =&gt; _4;<br align="left"/>debug filler_reward_structure =&gt; _5;<br align="left"/>debug size_filler_reward =&gt; _6;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug multiplier_precision =&gt; _27;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug min_time_filler_reward =&gt; _35;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug slots_since_order =&gt; _68;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug residual =&gt; _83;<br align="left"/>debug val =&gt; _86;<br align="left"/>debug time_filler_reward =&gt; _87;<br align="left"/>debug residual =&gt; _103;<br align="left"/>debug val =&gt; _106;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug residual =&gt; _114;<br align="left"/>debug val =&gt; _117;<br align="left"/>debug residual =&gt; _119;<br align="left"/>debug val =&gt; _122;<br align="left"/>debug fee =&gt; _123;<br align="left"/>>;
    bb0__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _1<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = ((*_5).0: u32)<br/>_13 = move _14 as u64 (IntToInt)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_11 = &lt;u64 as SafeMath&gt;::safe_mul(move _12, move _13)</td></tr></table>>];
    bb1__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb2__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_15 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb3__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_10 as Continue).0: u64)<br/>_9 = _19<br/>StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = ((*_5).1: u32)<br/>_20 = move _21 as u64 (IntToInt)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_8 = &lt;u64 as SafeMath&gt;::safe_div(move _9, move _20)</td></tr></table>>];
    bb4__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb6__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb8__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_22 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb9__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_7 as Continue).0: u64)<br/>_6 = _26<br/>StorageDead(_26)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/></td></tr><tr><td align="left">_29 = &lt;i128 as Cast&gt;::cast::&lt;u128&gt;(const _)</td></tr></table>>];
    bb10__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb11__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb13__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_30 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb14__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_28 as Continue).0: u128)<br/>_27 = _34<br/>StorageDead(_34)<br/>StorageDead(_28)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = ((*_5).2: u128)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _4<br/></td></tr><tr><td align="left">_46 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _47)</td></tr></table>>];
    bb15__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb16__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb18__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb19__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: u128)<br/>_44 = _52<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>_53 = _27<br/></td></tr><tr><td align="left">_43 = &lt;u128 as Ord&gt;::max(move _44, move _53)</td></tr></table>>];
    bb20__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb21__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_44)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = _27<br/>_56 = CheckedMul(_55, const 100_u128)<br/></td></tr><tr><td align="left">assert(!move (_56.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, move _55, const 100_u128)</td></tr></table>>];
    bb23__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_54 = move (_56.0: u128)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_42 = &lt;u128 as Ord&gt;::min(move _43, move _54)</td></tr></table>>];
    bb24__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_40 = &lt;u128 as SafeMath&gt;::safe_mul(move _41, move _42)</td></tr></table>>];
    bb25__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb26__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_57 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb27__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_39 as Continue).0: u128)<br/>_38 = _61<br/>StorageDead(_61)<br/>StorageLive(_62)<br/>_62 = _27<br/></td></tr><tr><td align="left">_37 = &lt;u128 as SafeMath&gt;::safe_div(move _38, move _62)</td></tr></table>>];
    bb28__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb29__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb31__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_63 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb32__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_36 as Continue).0: u128)<br/>_35 = _67<br/>StorageDead(_67)<br/>StorageDead(_45)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _3<br/>StorageLive(_76)<br/>_76 = _2<br/></td></tr><tr><td align="left">_74 = &lt;u64 as SafeMath&gt;::safe_sub(move _75, move _76)</td></tr></table>>];
    bb33__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb34__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb36__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_77 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb37__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_73 as Continue).0: u64)<br/>_72 = _81<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_71 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _72)</td></tr></table>>];
    bb38__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb39__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">_70 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _71)</td></tr></table>>];
    bb41__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_82 = discriminant(_70)<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb42__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_70 as Continue).0: u128)<br/>_69 = _86<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_68 = std::cmp::max::&lt;u128&gt;(const 1_u128, move _69)</td></tr></table>>];
    bb43__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_83)<br/>_83 = ((_70 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_85)<br/>_85 = _83<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _85)</td></tr></table>>];
    bb44__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = _68<br/></td></tr><tr><td align="left">_100 = &lt;u128 as SafeMath&gt;::safe_mul(move _101, const 100000000_u128)</td></tr></table>>];
    bb46__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb47__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_102 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb48__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_99 as Continue).0: u128)<br/>_98 = _106<br/>StorageDead(_106)<br/>_97 = &amp;_98<br/></td></tr><tr><td align="left">_96 = &lt;u128 as Roots&gt;::nth_root(move _97, const 4_u32)</td></tr></table>>];
    bb49__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_105)<br/>_105 = _103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _105)</td></tr></table>>];
    bb50__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageLive(_107)<br/>_107 = _35<br/></td></tr><tr><td align="left">_95 = &lt;u128 as SafeMath&gt;::safe_mul(move _96, move _107)</td></tr></table>>];
    bb52__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb53__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_108 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb54__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_94 as Continue).0: u128)<br/>_93 = _112<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_92 = &lt;u128 as SafeMath&gt;::safe_div(move _93, const 100_u128)</td></tr></table>>];
    bb55__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb56__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb58__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_113 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb59__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_91 as Continue).0: u128)<br/>_90 = _117<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_89 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _90)</td></tr></table>>];
    bb60__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_116)<br/>_116 = _114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _116)</td></tr></table>>];
    bb61__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/></td></tr><tr><td align="left">_88 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _89)</td></tr></table>>];
    bb63__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_118 = discriminant(_88)<br/></td></tr><tr><td align="left">switchInt(move _118)</td></tr></table>>];
    bb64__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_88 as Continue).0: u64)<br/>_87 = _122<br/>StorageDead(_122)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = _6<br/>StorageLive(_125)<br/>_125 = _87<br/></td></tr><tr><td align="left">_123 = std::cmp::min::&lt;u64&gt;(move _124, move _125)</td></tr></table>>];
    bb65__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_88 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_121)<br/>_121 = _119<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _121)</td></tr></table>>];
    bb66__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_126)<br/>_126 = _123<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _126)<br/>StorageDead(_126)<br/>StorageDead(_123)<br/>StorageDead(_87)<br/>StorageDead(_68)<br/>StorageDead(_35)<br/>StorageDead(_27)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2223 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2223 -> bb1__0_2223 [label="return"];
    bb1__0_2223 -> bb2__0_2223 [label="return"];
    bb2__0_2223 -> bb3__0_2223 [label="0"];
    bb2__0_2223 -> bb5__0_2223 [label="1"];
    bb2__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb3__0_2223 -> bb7__0_2223 [label="return"];
    bb5__0_2223 -> bb6__0_2223 [label="return"];
    bb6__0_2223 -> bb77__0_2223 [label=""];
    bb7__0_2223 -> bb8__0_2223 [label="return"];
    bb8__0_2223 -> bb9__0_2223 [label="0"];
    bb8__0_2223 -> bb10__0_2223 [label="1"];
    bb8__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb9__0_2223 -> bb12__0_2223 [label="return"];
    bb10__0_2223 -> bb11__0_2223 [label="return"];
    bb11__0_2223 -> bb77__0_2223 [label=""];
    bb12__0_2223 -> bb13__0_2223 [label="return"];
    bb13__0_2223 -> bb14__0_2223 [label="0"];
    bb13__0_2223 -> bb15__0_2223 [label="1"];
    bb13__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb14__0_2223 -> bb17__0_2223 [label="return"];
    bb15__0_2223 -> bb16__0_2223 [label="return"];
    bb16__0_2223 -> bb76__0_2223 [label=""];
    bb17__0_2223 -> bb18__0_2223 [label="return"];
    bb18__0_2223 -> bb19__0_2223 [label="0"];
    bb18__0_2223 -> bb20__0_2223 [label="1"];
    bb18__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb19__0_2223 -> bb22__0_2223 [label="return"];
    bb20__0_2223 -> bb21__0_2223 [label="return"];
    bb21__0_2223 -> bb73__0_2223 [label=""];
    bb22__0_2223 -> bb23__0_2223 [label="success"];
    bb23__0_2223 -> bb24__0_2223 [label="return"];
    bb24__0_2223 -> bb25__0_2223 [label="return"];
    bb25__0_2223 -> bb26__0_2223 [label="return"];
    bb26__0_2223 -> bb27__0_2223 [label="0"];
    bb26__0_2223 -> bb28__0_2223 [label="1"];
    bb26__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb27__0_2223 -> bb30__0_2223 [label="return"];
    bb28__0_2223 -> bb29__0_2223 [label="return"];
    bb29__0_2223 -> bb73__0_2223 [label=""];
    bb30__0_2223 -> bb31__0_2223 [label="return"];
    bb31__0_2223 -> bb32__0_2223 [label="0"];
    bb31__0_2223 -> bb33__0_2223 [label="1"];
    bb31__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb32__0_2223 -> bb35__0_2223 [label="return"];
    bb33__0_2223 -> bb34__0_2223 [label="return"];
    bb34__0_2223 -> bb74__0_2223 [label=""];
    bb35__0_2223 -> bb36__0_2223 [label="return"];
    bb36__0_2223 -> bb37__0_2223 [label="0"];
    bb36__0_2223 -> bb38__0_2223 [label="1"];
    bb36__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb37__0_2223 -> bb40__0_2223 [label="return"];
    bb38__0_2223 -> bb39__0_2223 [label="return"];
    bb39__0_2223 -> bb71__0_2223 [label=""];
    bb40__0_2223 -> bb41__0_2223 [label="return"];
    bb41__0_2223 -> bb42__0_2223 [label="0"];
    bb41__0_2223 -> bb43__0_2223 [label="1"];
    bb41__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb42__0_2223 -> bb45__0_2223 [label="return"];
    bb43__0_2223 -> bb44__0_2223 [label="return"];
    bb44__0_2223 -> bb71__0_2223 [label=""];
    bb45__0_2223 -> bb46__0_2223 [label="return"];
    bb46__0_2223 -> bb47__0_2223 [label="return"];
    bb47__0_2223 -> bb48__0_2223 [label="0"];
    bb47__0_2223 -> bb49__0_2223 [label="1"];
    bb47__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb48__0_2223 -> bb51__0_2223 [label="return"];
    bb49__0_2223 -> bb50__0_2223 [label="return"];
    bb50__0_2223 -> bb68__0_2223 [label=""];
    bb51__0_2223 -> bb52__0_2223 [label="return"];
    bb52__0_2223 -> bb53__0_2223 [label="return"];
    bb53__0_2223 -> bb54__0_2223 [label="0"];
    bb53__0_2223 -> bb55__0_2223 [label="1"];
    bb53__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb54__0_2223 -> bb57__0_2223 [label="return"];
    bb55__0_2223 -> bb56__0_2223 [label="return"];
    bb56__0_2223 -> bb68__0_2223 [label=""];
    bb57__0_2223 -> bb58__0_2223 [label="return"];
    bb58__0_2223 -> bb59__0_2223 [label="0"];
    bb58__0_2223 -> bb60__0_2223 [label="1"];
    bb58__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb59__0_2223 -> bb62__0_2223 [label="return"];
    bb60__0_2223 -> bb61__0_2223 [label="return"];
    bb61__0_2223 -> bb69__0_2223 [label=""];
    bb62__0_2223 -> bb63__0_2223 [label="return"];
    bb63__0_2223 -> bb64__0_2223 [label="0"];
    bb63__0_2223 -> bb65__0_2223 [label="1"];
    bb63__0_2223 -> bb4__0_2223 [label="otherwise"];
    bb64__0_2223 -> bb67__0_2223 [label="return"];
    bb65__0_2223 -> bb66__0_2223 [label="return"];
    bb66__0_2223 -> bb70__0_2223 [label=""];
    bb67__0_2223 -> bb79__0_2223 [label=""];
    bb68__0_2223 -> bb69__0_2223 [label=""];
    bb69__0_2223 -> bb70__0_2223 [label=""];
    bb70__0_2223 -> bb72__0_2223 [label=""];
    bb71__0_2223 -> bb72__0_2223 [label=""];
    bb72__0_2223 -> bb75__0_2223 [label=""];
    bb73__0_2223 -> bb74__0_2223 [label=""];
    bb74__0_2223 -> bb75__0_2223 [label=""];
    bb75__0_2223 -> bb76__0_2223 [label=""];
    bb76__0_2223 -> bb78__0_2223 [label=""];
    bb77__0_2223 -> bb78__0_2223 [label=""];
    bb78__0_2223 -> bb79__0_2223 [label=""];
}
