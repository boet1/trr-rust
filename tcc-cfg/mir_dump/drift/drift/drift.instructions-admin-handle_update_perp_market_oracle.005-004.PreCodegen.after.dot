digraph Mir_0_5617 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_update_perp_market_oracle(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;&gt;, _2: anchor_lang::prelude::Pubkey, _3: state::oracle::OracleSource, _4: bool) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _9: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _16: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _18: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _19: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _21: Closure(DefId(0:5618 ~ drift[d311]::instructions::admin::handle_update_perp_market_oracle::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _27: ();<br align="left"/>let mut _28: &amp;ReErased str;<br align="left"/>let _29: &amp;ReErased str;<br align="left"/>let mut _30: &amp;ReErased std::string::String;<br align="left"/>let _31: &amp;ReErased std::string::String;<br align="left"/>let _32: std::string::String;<br align="left"/>let _33: std::string::String;<br align="left"/>let mut _34: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _35: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _36: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _37: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _38: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _39: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _40: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _42: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _43: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _44: &amp;ReErased u16;<br align="left"/>let _45: &amp;ReErased u16;<br align="left"/>let _46: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _47: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _48: anchor_lang::prelude::Clock;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _50: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _55: anchor_lang::prelude::Clock;<br align="left"/>let _56: ();<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _58: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _59: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _60: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: ();<br align="left"/>let _66: ();<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _68: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _72: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _73: ();<br align="left"/>let _74: error::ErrorCode;<br align="left"/>let _75: ();<br align="left"/>let mut _76: &amp;ReErased str;<br align="left"/>let _77: &amp;ReErased str;<br align="left"/>let mut _78: &amp;ReErased std::string::String;<br align="left"/>let _79: &amp;ReErased std::string::String;<br align="left"/>let _80: std::string::String;<br align="left"/>let _81: std::string::String;<br align="left"/>let mut _82: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _85: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _86: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _89: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _90: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _91: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased error::ErrorCode;<br align="left"/>let _93: &amp;ReErased error::ErrorCode;<br align="left"/>let _94: ();<br align="left"/>let mut _95: &amp;ReErased str;<br align="left"/>let _96: &amp;ReErased str;<br align="left"/>let mut _97: &amp;ReErased std::string::String;<br align="left"/>let _98: &amp;ReErased std::string::String;<br align="left"/>let _99: std::string::String;<br align="left"/>let _100: std::string::String;<br align="left"/>let mut _101: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _102: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _103: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _104: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _105: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _106: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _107: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _108: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _109: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _110: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _112: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _113: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _115: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _116: error::ErrorCode;<br align="left"/>let mut _117: isize;<br align="left"/>let _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _119: !;<br align="left"/>let mut _120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _121: ();<br align="left"/>let _122: ();<br align="left"/>let mut _123: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _124: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _125: bool;<br align="left"/>let mut _126: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _127: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _128: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _129: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _130: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _131: ();<br align="left"/>let _132: error::ErrorCode;<br align="left"/>let _133: ();<br align="left"/>let mut _134: &amp;ReErased str;<br align="left"/>let _135: &amp;ReErased str;<br align="left"/>let mut _136: &amp;ReErased std::string::String;<br align="left"/>let _137: &amp;ReErased std::string::String;<br align="left"/>let _138: std::string::String;<br align="left"/>let _139: std::string::String;<br align="left"/>let mut _140: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _143: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _144: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _146: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _147: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _148: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _149: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased error::ErrorCode;<br align="left"/>let _151: &amp;ReErased error::ErrorCode;<br align="left"/>let _152: ();<br align="left"/>let mut _153: &amp;ReErased str;<br align="left"/>let _154: &amp;ReErased str;<br align="left"/>let mut _155: &amp;ReErased std::string::String;<br align="left"/>let _156: &amp;ReErased std::string::String;<br align="left"/>let _157: std::string::String;<br align="left"/>let _158: std::string::String;<br align="left"/>let mut _159: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _161: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _162: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _163: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _164: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _165: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _166: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _167: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _168: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _169: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _170: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _171: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _173: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _174: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _175: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _176: error::ErrorCode;<br align="left"/>let mut _177: isize;<br align="left"/>let _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _179: !;<br align="left"/>let mut _180: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _181: ();<br align="left"/>let _182: i64;<br align="left"/>let _183: i64;<br align="left"/>let mut _184: state::oracle::OraclePriceData;<br align="left"/>let mut _185: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _186: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _187: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _188: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _189: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _190: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _191: u64;<br align="left"/>let mut _192: isize;<br align="left"/>let _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _194: !;<br align="left"/>let mut _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _196: state::oracle::OraclePriceData;<br align="left"/>let _197: ();<br align="left"/>let mut _198: &amp;ReErased str;<br align="left"/>let _199: &amp;ReErased str;<br align="left"/>let mut _200: &amp;ReErased std::string::String;<br align="left"/>let _201: &amp;ReErased std::string::String;<br align="left"/>let _202: std::string::String;<br align="left"/>let _203: std::string::String;<br align="left"/>let mut _204: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _205: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _206: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _207: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _208: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _209: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _210: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _211: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _212: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _213: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _215: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _216: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _217: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _218: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _219: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _220: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _221: ();<br align="left"/>let mut _222: &amp;ReErased str;<br align="left"/>let _223: &amp;ReErased str;<br align="left"/>let mut _224: &amp;ReErased std::string::String;<br align="left"/>let _225: &amp;ReErased std::string::String;<br align="left"/>let _226: std::string::String;<br align="left"/>let _227: std::string::String;<br align="left"/>let mut _228: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _229: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _230: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _231: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _232: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _233: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _234: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _235: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _236: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _237: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _238: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _239: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _240: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _241: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _242: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _243: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _244: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _245: i64;<br align="left"/>let mut _246: state::oracle::OraclePriceData;<br align="left"/>let mut _247: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _248: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _249: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _250: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _251: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _252: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _253: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _254: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _255: u64;<br align="left"/>let mut _256: isize;<br align="left"/>let _257: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _258: !;<br align="left"/>let mut _259: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _260: state::oracle::OraclePriceData;<br align="left"/>let _261: ();<br align="left"/>let mut _262: &amp;ReErased str;<br align="left"/>let _263: &amp;ReErased str;<br align="left"/>let mut _264: &amp;ReErased std::string::String;<br align="left"/>let _265: &amp;ReErased std::string::String;<br align="left"/>let _266: std::string::String;<br align="left"/>let _267: std::string::String;<br align="left"/>let mut _268: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _269: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _270: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _271: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _272: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _273: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _274: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _275: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _276: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _277: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _278: &amp;ReErased i64;<br align="left"/>let _279: &amp;ReErased i64;<br align="left"/>let mut _280: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _281: &amp;ReErased i64;<br align="left"/>let _282: &amp;ReErased i64;<br align="left"/>let _283: ();<br align="left"/>let mut _284: bool;<br align="left"/>let _285: ();<br align="left"/>let mut _286: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _287: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _288: bool;<br align="left"/>let mut _289: i64;<br align="left"/>let mut _290: ();<br align="left"/>let _291: error::ErrorCode;<br align="left"/>let _292: ();<br align="left"/>let mut _293: &amp;ReErased str;<br align="left"/>let _294: &amp;ReErased str;<br align="left"/>let mut _295: &amp;ReErased std::string::String;<br align="left"/>let _296: &amp;ReErased std::string::String;<br align="left"/>let _297: std::string::String;<br align="left"/>let _298: std::string::String;<br align="left"/>let mut _299: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _300: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _301: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _302: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _303: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _304: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _305: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _306: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _307: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _308: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _309: &amp;ReErased error::ErrorCode;<br align="left"/>let _310: &amp;ReErased error::ErrorCode;<br align="left"/>let _311: ();<br align="left"/>let mut _312: &amp;ReErased str;<br align="left"/>let _313: &amp;ReErased str;<br align="left"/>let mut _314: error::ErrorCode;<br align="left"/>let mut _315: isize;<br align="left"/>let _316: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _317: !;<br align="left"/>let mut _318: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _319: ();<br align="left"/>let _320: i64;<br align="left"/>let mut _321: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _322: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _323: i64;<br align="left"/>let mut _324: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _325: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _326: i64;<br align="left"/>let mut _327: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _328: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _329: i64;<br align="left"/>let mut _330: i64;<br align="left"/>let mut _331: isize;<br align="left"/>let _332: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _333: !;<br align="left"/>let mut _334: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _335: i64;<br align="left"/>let mut _336: isize;<br align="left"/>let _337: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _338: !;<br align="left"/>let mut _339: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _340: i64;<br align="left"/>let mut _341: i64;<br align="left"/>let mut _342: isize;<br align="left"/>let _343: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _344: !;<br align="left"/>let mut _345: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _346: i64;<br align="left"/>let _347: ();<br align="left"/>let mut _348: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _349: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _350: bool;<br align="left"/>let mut _351: i64;<br align="left"/>let mut _352: i64;<br align="left"/>let mut _353: i64;<br align="left"/>let mut _354: bool;<br align="left"/>let mut _355: bool;<br align="left"/>let mut _356: bool;<br align="left"/>let mut _357: bool;<br align="left"/>let mut _358: ();<br align="left"/>let _359: error::ErrorCode;<br align="left"/>let _360: ();<br align="left"/>let mut _361: &amp;ReErased str;<br align="left"/>let _362: &amp;ReErased str;<br align="left"/>let mut _363: &amp;ReErased std::string::String;<br align="left"/>let _364: &amp;ReErased std::string::String;<br align="left"/>let _365: std::string::String;<br align="left"/>let _366: std::string::String;<br align="left"/>let mut _367: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _368: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _369: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _370: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _371: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _372: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _373: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _374: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _375: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _376: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _377: &amp;ReErased error::ErrorCode;<br align="left"/>let _378: &amp;ReErased error::ErrorCode;<br align="left"/>let _379: ();<br align="left"/>let mut _380: &amp;ReErased str;<br align="left"/>let _381: &amp;ReErased str;<br align="left"/>let mut _382: error::ErrorCode;<br align="left"/>let mut _383: isize;<br align="left"/>let _384: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _385: !;<br align="left"/>let mut _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _387: ();<br align="left"/>let mut _388: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _389: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _390: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _391: state::oracle::OracleSource;<br align="left"/>let mut _392: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _393: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _394: ();<br align="left"/>let mut _395: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _396: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _397: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _398: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _399: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _400: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _401: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _402: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _403: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _404: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _405: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _406: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _407: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _408: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _409: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _410: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _411: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _412: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _413: &amp;ReErased mut instructions::admin::AdminUpdatePerpMarketOracle&lt;ReErased&gt;;<br align="left"/>let mut _414: isize;<br align="left"/>let mut _415: isize;<br align="left"/>let mut _416: isize;<br align="left"/>let mut _417: isize;<br align="left"/>let mut _418: isize;<br align="left"/>let mut _419: isize;<br align="left"/>let mut _420: isize;<br align="left"/>let mut _421: isize;<br align="left"/>let mut _422: isize;<br align="left"/>let mut _423: isize;<br align="left"/>let mut _424: isize;<br align="left"/>let mut _425: isize;<br align="left"/>let mut _426: isize;<br align="left"/>let mut _427: isize;<br align="left"/>let mut _428: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug oracle =&gt; _2;<br align="left"/>debug oracle_source =&gt; _3;<br align="left"/>debug skip_invariant_check =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug perp_market =&gt; _15;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug res =&gt; _33;<br align="left"/>debug clock =&gt; _48;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug error_code =&gt; _74;<br align="left"/>debug res =&gt; _81;<br align="left"/>debug res =&gt; _100;<br align="left"/>debug residual =&gt; _118;<br align="left"/>debug val =&gt; _121;<br align="left"/>debug error_code =&gt; _132;<br align="left"/>debug res =&gt; _139;<br align="left"/>debug res =&gt; _158;<br align="left"/>debug residual =&gt; _178;<br align="left"/>debug val =&gt; _181;<br align="left"/>debug new_oracle_price =&gt; _182;<br align="left"/>debug _oracle_delay =&gt; _183;<br align="left"/>debug residual =&gt; _193;<br align="left"/>debug val =&gt; _196;<br align="left"/>debug res =&gt; _203;<br align="left"/>debug res =&gt; _227;<br align="left"/>debug old_oracle_price =&gt; _245;<br align="left"/>debug residual =&gt; _257;<br align="left"/>debug val =&gt; _260;<br align="left"/>debug res =&gt; _267;<br align="left"/>debug error_code =&gt; _291;<br align="left"/>debug res =&gt; _298;<br align="left"/>debug residual =&gt; _316;<br align="left"/>debug val =&gt; _319;<br align="left"/>debug oracle_change_divergence =&gt; _320;<br align="left"/>debug residual =&gt; _332;<br align="left"/>debug val =&gt; _335;<br align="left"/>debug residual =&gt; _337;<br align="left"/>debug val =&gt; _340;<br align="left"/>debug residual =&gt; _343;<br align="left"/>debug val =&gt; _346;<br align="left"/>debug error_code =&gt; _359;<br align="left"/>debug res =&gt; _366;<br align="left"/>debug residual =&gt; _384;<br align="left"/>debug val =&gt; _387;<br align="left"/>>;
    bb0__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_405 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_9 = &amp;((*_405).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_8 = &amp;(*_9)<br/></td></tr><tr><td align="left">_7 = constraints::perp_market_valid(move _8)</td></tr></table>>];
    bb1__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_414 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_406 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_20 = &amp;((*_406).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_19 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _20)</td></tr></table>>];
    bb4__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_424 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>_21 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_18 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _19, move _21)</td></tr></table>>];
    bb8__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb9__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_22 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = move ((_17 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_16 = move _26<br/>StorageDead(_26)<br/>_15 = &amp;mut _16<br/>_418 = discriminant(_17)<br/>StorageDead(_17)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_404 = const _<br/>_37 = &amp;(*_404)<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;(*_15)<br/></td></tr><tr><td align="left">_46 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _47)</td></tr></table>>];
    bb11__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb12__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>_416 = discriminant(_17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_45 = &amp;((*_46).21: u16)<br/>_44 = &amp;(*_45)<br/></td></tr><tr><td align="left">_43 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _44)</td></tr></table>>];
    bb14__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_42 = [move _43]<br/>StorageDead(_43)<br/>_41 = &amp;_42<br/>_40 = &amp;(*_41)<br/>_39 = move _40 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_34 = Arguments::&lt;'_&gt;::new_v1(move _35, move _39)</td></tr></table>>];
    bb15__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = format(move _34)</td></tr></table>>];
    bb16__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_37)<br/>_32 = move _33<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/></td></tr><tr><td align="left">_29 = &lt;String as Deref&gt;::deref(move _30)</td></tr></table>>];
    bb17__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_28 = &amp;(*_29)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_27 = solana_program::log::sol_log(move _28)</td></tr></table>>];
    bb18__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb19__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/></td></tr><tr><td align="left">_50 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb20__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb21__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_51 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb22__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = move ((_49 as Continue).0: anchor_lang::prelude::Clock)<br/>_48 = move _55<br/>StorageDead(_55)<br/>_420 = discriminant(_49)<br/>StorageDead(_49)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_407 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_60 = &amp;((*_407).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_59 = &amp;(*_60)<br/></td></tr><tr><td align="left">_58 = OracleMap::&lt;'_&gt;::validate_oracle_account_info(move _59)</td></tr></table>>];
    bb23__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = move ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_54)<br/>_54 = move _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb24__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>_422 = discriminant(_49)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb26__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_61 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb27__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_57 as Continue).0: ())<br/>_56 = _65<br/>StorageDead(_65)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_408 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_70 = &amp;(((*_408).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;_2<br/>_71 = &amp;_72<br/></td></tr><tr><td align="left">_69 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _70, move _71)</td></tr></table>>];
    bb28__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb29__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb31__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_73)<br/>_73 = ()<br/>_68 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_74)<br/>_74 = error::ErrorCode::DefaultError<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_403 = const _<br/>_85 = &amp;(*_403)<br/>_84 = &amp;(*_85)<br/>_83 = move _84 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_84)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_74<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_91 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _92)</td></tr></table>>];
    bb33__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_90 = [move _91]<br/>StorageDead(_91)<br/>_89 = &amp;_90<br/>_88 = &amp;(*_89)<br/>_87 = move _88 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_82 = Arguments::&lt;'_&gt;::new_v1(move _83, move _87)</td></tr></table>>];
    bb34__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = format(move _82)</td></tr></table>>];
    bb35__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_85)<br/>_80 = move _81<br/>StorageDead(_81)<br/>_79 = &amp;_80<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = &lt;String as Deref&gt;::deref(move _78)</td></tr></table>>];
    bb36__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_76 = &amp;(*_77)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_75 = solana_program::log::sol_log(move _76)</td></tr></table>>];
    bb37__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb38__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_402 = const _<br/>_104 = &amp;(*_402)<br/>_103 = &amp;(*_104)<br/>_102 = move _103 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_103)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_409 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_112 = &amp;(((*_409).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;&amp;anchor_lang::prelude::Pubkey&gt;(move _111)</td></tr></table>>];
    bb39__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_2<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_113 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::prelude::Pubkey&gt;(move _114)</td></tr></table>>];
    bb40__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_109 = [move _110, move _113]<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>_108 = &amp;_109<br/>_107 = &amp;(*_108)<br/>_106 = move _107 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_101 = Arguments::&lt;'_&gt;::new_v1(move _102, move _106)</td></tr></table>>];
    bb41__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_100 = format(move _101)</td></tr></table>>];
    bb42__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_115)<br/>StorageDead(_112)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_104)<br/>_99 = move _100<br/>StorageDead(_100)<br/>_98 = &amp;_99<br/>_97 = &amp;(*_98)<br/></td></tr><tr><td align="left">_96 = &lt;String as Deref&gt;::deref(move _97)</td></tr></table>>];
    bb43__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_95 = &amp;(*_96)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_94 = solana_program::log::sol_log(move _95)</td></tr></table>>];
    bb44__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb45__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageLive(_116)<br/>_116 = _74<br/>_68 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _116)<br/>StorageDead(_116)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb47__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_117 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _117)</td></tr></table>>];
    bb48__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_67 as Continue).0: ())<br/>_66 = _121<br/>StorageDead(_121)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_410 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_126 = &amp;(((*_410).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;(*_15)<br/></td></tr><tr><td align="left">_129 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _130)</td></tr></table>>];
    bb49__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_120)<br/>_120 = _118<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _120)</td></tr></table>>];
    bb50__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_128 = &amp;(((*_129).1: state::perp_market::AMM).0: anchor_lang::prelude::Pubkey)<br/>_127 = &amp;_128<br/></td></tr><tr><td align="left">_125 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _126, move _127)</td></tr></table>>];
    bb52__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb53__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_131)<br/>_131 = ()<br/>_124 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _131)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>StorageLive(_132)<br/>_132 = error::ErrorCode::DefaultError<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_401 = const _<br/>_143 = &amp;(*_401)<br/>_142 = &amp;(*_143)<br/>_141 = move _142 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_142)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_132<br/>_150 = &amp;(*_151)<br/></td></tr><tr><td align="left">_149 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _150)</td></tr></table>>];
    bb55__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_148 = [move _149]<br/>StorageDead(_149)<br/>_147 = &amp;_148<br/>_146 = &amp;(*_147)<br/>_145 = move _146 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_140 = Arguments::&lt;'_&gt;::new_v1(move _141, move _145)</td></tr></table>>];
    bb56__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = format(move _140)</td></tr></table>>];
    bb57__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_151)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_143)<br/>_138 = move _139<br/>StorageDead(_139)<br/>_137 = &amp;_138<br/>_136 = &amp;(*_137)<br/></td></tr><tr><td align="left">_135 = &lt;String as Deref&gt;::deref(move _136)</td></tr></table>>];
    bb58__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_134 = &amp;(*_135)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_133 = solana_program::log::sol_log(move _134)</td></tr></table>>];
    bb59__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_138)</td></tr></table>>];
    bb60__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_400 = const _<br/>_162 = &amp;(*_400)<br/>_161 = &amp;(*_162)<br/>_160 = move _161 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_161)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_411 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_170 = &amp;(((*_411).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>_169 = &amp;(*_170)<br/></td></tr><tr><td align="left">_168 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;&amp;anchor_lang::prelude::Pubkey&gt;(move _169)</td></tr></table>>];
    bb61__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_175 = &amp;(*_15)<br/></td></tr><tr><td align="left">_174 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _175)</td></tr></table>>];
    bb62__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_173 = &amp;(((*_174).1: state::perp_market::AMM).0: anchor_lang::prelude::Pubkey)<br/>_172 = &amp;(*_173)<br/></td></tr><tr><td align="left">_171 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::prelude::Pubkey&gt;(move _172)</td></tr></table>>];
    bb63__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_167 = [move _168, move _171]<br/>StorageDead(_171)<br/>StorageDead(_168)<br/>_166 = &amp;_167<br/>_165 = &amp;(*_166)<br/>_164 = move _165 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_159 = Arguments::&lt;'_&gt;::new_v1(move _160, move _164)</td></tr></table>>];
    bb64__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = format(move _159)</td></tr></table>>];
    bb65__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_174)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_162)<br/>_157 = move _158<br/>StorageDead(_158)<br/>_156 = &amp;_157<br/>_155 = &amp;(*_156)<br/></td></tr><tr><td align="left">_154 = &lt;String as Deref&gt;::deref(move _155)</td></tr></table>>];
    bb66__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_153 = &amp;(*_154)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_152 = solana_program::log::sol_log(move _153)</td></tr></table>>];
    bb67__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/></td></tr><tr><td align="left">drop(_157)</td></tr></table>>];
    bb68__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageLive(_176)<br/>_176 = _132<br/>_124 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _176)<br/>StorageDead(_176)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _124)</td></tr></table>>];
    bb70__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>_177 = discriminant(_123)<br/></td></tr><tr><td align="left">switchInt(move _177)</td></tr></table>>];
    bb71__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_181)<br/>_181 = ((_123 as Continue).0: ())<br/>_122 = _181<br/>StorageDead(_181)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_3<br/>_187 = &amp;(*_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_412 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_190 = &amp;((*_412).3: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_189 = &amp;(*_190)<br/>StorageLive(_191)<br/>_191 = (_48.0: u64)<br/></td></tr><tr><td align="left">_186 = get_oracle_price(move _187, move _189, move _191)</td></tr></table>>];
    bb72__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_178)<br/>_178 = ((_123 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_180)<br/>_180 = _178<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _180)</td></tr></table>>];
    bb73__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_178)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_185 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _186)</td></tr></table>>];
    bb75__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_192 = discriminant(_185)<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb76__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_196)<br/>_196 = ((_185 as Continue).0: state::oracle::OraclePriceData)<br/>_184 = _196<br/>StorageDead(_196)<br/>StorageLive(_182)<br/>_182 = (_184.0: i64)<br/>StorageLive(_183)<br/>_183 = (_184.2: i64)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_399 = const _<br/>_207 = &amp;(*_399)<br/>_206 = &amp;(*_207)<br/>_205 = move _206 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_206)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;(*_15)<br/></td></tr><tr><td align="left">_216 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _217)</td></tr></table>>];
    bb77__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_185 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_195)<br/>_195 = _193<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _195)</td></tr></table>>];
    bb78__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_215 = &amp;(((*_216).1: state::perp_market::AMM).0: anchor_lang::prelude::Pubkey)<br/>_214 = &amp;(*_215)<br/></td></tr><tr><td align="left">_213 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::prelude::Pubkey&gt;(move _214)</td></tr></table>>];
    bb80__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_220 = &amp;_2<br/>_219 = &amp;(*_220)<br/></td></tr><tr><td align="left">_218 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;anchor_lang::prelude::Pubkey&gt;(move _219)</td></tr></table>>];
    bb81__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>_212 = [move _213, move _218]<br/>StorageDead(_218)<br/>StorageDead(_213)<br/>_211 = &amp;_212<br/>_210 = &amp;(*_211)<br/>_209 = move _210 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_204 = Arguments::&lt;'_&gt;::new_v1(move _205, move _209)</td></tr></table>>];
    bb82__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = format(move _204)</td></tr></table>>];
    bb83__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_220)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageDead(_207)<br/>_202 = move _203<br/>StorageDead(_203)<br/>_201 = &amp;_202<br/>_200 = &amp;(*_201)<br/></td></tr><tr><td align="left">_199 = &lt;String as Deref&gt;::deref(move _200)</td></tr></table>>];
    bb84__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">_198 = &amp;(*_199)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_197 = solana_program::log::sol_log(move _198)</td></tr></table>>];
    bb85__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/></td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb86__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_398 = const _<br/>_231 = &amp;(*_398)<br/>_230 = &amp;(*_231)<br/>_229 = move _230 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_230)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;(*_15)<br/></td></tr><tr><td align="left">_240 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _241)</td></tr></table>>];
    bb87__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>_239 = &amp;(((*_240).1: state::perp_market::AMM).72: state::oracle::OracleSource)<br/>_238 = &amp;(*_239)<br/></td></tr><tr><td align="left">_237 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::oracle::OracleSource&gt;(move _238)</td></tr></table>>];
    bb88__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = &amp;_3<br/>_243 = &amp;(*_244)<br/></td></tr><tr><td align="left">_242 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;state::oracle::OracleSource&gt;(move _243)</td></tr></table>>];
    bb89__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>_236 = [move _237, move _242]<br/>StorageDead(_242)<br/>StorageDead(_237)<br/>_235 = &amp;_236<br/>_234 = &amp;(*_235)<br/>_233 = move _234 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_234)<br/></td></tr><tr><td align="left">_228 = Arguments::&lt;'_&gt;::new_v1(move _229, move _233)</td></tr></table>>];
    bb90__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">_227 = format(move _228)</td></tr></table>>];
    bb91__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_244)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>StorageDead(_236)<br/>StorageDead(_235)<br/>StorageDead(_231)<br/>_226 = move _227<br/>StorageDead(_227)<br/>_225 = &amp;_226<br/>_224 = &amp;(*_225)<br/></td></tr><tr><td align="left">_223 = &lt;String as Deref&gt;::deref(move _224)</td></tr></table>>];
    bb92__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_222 = &amp;(*_223)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_221 = solana_program::log::sol_log(move _222)</td></tr></table>>];
    bb93__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/></td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb94__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_225)<br/>StorageDead(_223)<br/>StorageDead(_221)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = &amp;(*_15)<br/></td></tr><tr><td align="left">_251 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _252)</td></tr></table>>];
    bb95__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>_250 = &amp;(((*_251).1: state::perp_market::AMM).72: state::oracle::OracleSource)<br/>_249 = &amp;(*_250)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_413 = deref_copy (_1.1: &amp;mut instructions::admin::AdminUpdatePerpMarketOracle&lt;'_&gt;)<br/>_254 = &amp;((*_413).4: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_253 = &amp;(*_254)<br/>StorageLive(_255)<br/>_255 = (_48.0: u64)<br/></td></tr><tr><td align="left">_248 = get_oracle_price(move _249, move _253, move _255)</td></tr></table>>];
    bb96__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">_247 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _248)</td></tr></table>>];
    bb97__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>_256 = discriminant(_247)<br/></td></tr><tr><td align="left">switchInt(move _256)</td></tr></table>>];
    bb98__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_260)<br/>_260 = ((_247 as Continue).0: state::oracle::OraclePriceData)<br/>_246 = _260<br/>StorageDead(_260)<br/>StorageLive(_245)<br/>_245 = (_246.0: i64)<br/>StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_397 = const _<br/>_271 = &amp;(*_397)<br/>_270 = &amp;(*_271)<br/>_269 = move _270 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_270)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>_279 = &amp;_245<br/>_278 = &amp;(*_279)<br/></td></tr><tr><td align="left">_277 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _278)</td></tr></table>>];
    bb99__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_257)<br/>_257 = ((_247 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_259)<br/>_259 = _257<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _259)</td></tr></table>>];
    bb100__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>_282 = &amp;_182<br/>_281 = &amp;(*_282)<br/></td></tr><tr><td align="left">_280 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _281)</td></tr></table>>];
    bb102__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>_276 = [move _277, move _280]<br/>StorageDead(_280)<br/>StorageDead(_277)<br/>_275 = &amp;_276<br/>_274 = &amp;(*_275)<br/>_273 = move _274 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_274)<br/></td></tr><tr><td align="left">_268 = Arguments::&lt;'_&gt;::new_v1(move _269, move _273)</td></tr></table>>];
    bb103__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_269)<br/></td></tr><tr><td align="left">_267 = format(move _268)</td></tr></table>>];
    bb104__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_282)<br/>StorageDead(_279)<br/>StorageDead(_276)<br/>StorageDead(_275)<br/>StorageDead(_271)<br/>_266 = move _267<br/>StorageDead(_267)<br/>_265 = &amp;_266<br/>_264 = &amp;(*_265)<br/></td></tr><tr><td align="left">_263 = &lt;String as Deref&gt;::deref(move _264)</td></tr></table>>];
    bb105__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">_262 = &amp;(*_263)<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">_261 = solana_program::log::sol_log(move _262)</td></tr></table>>];
    bb106__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/></td></tr><tr><td align="left">drop(_266)</td></tr></table>>];
    bb107__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_261)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = _4<br/></td></tr><tr><td align="left">switchInt(move _284)</td></tr></table>>];
    bb108__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = _182<br/>_288 = Gt(move _289, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _288)</td></tr></table>>];
    bb109__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageLive(_290)<br/>_290 = ()<br/>_287 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _290)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageLive(_291)<br/>_291 = error::ErrorCode::DefaultError<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_396 = const _<br/>_302 = &amp;(*_396)<br/>_301 = &amp;(*_302)<br/>_300 = move _301 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_301)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_310 = &amp;_291<br/>_309 = &amp;(*_310)<br/></td></tr><tr><td align="left">_308 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _309)</td></tr></table>>];
    bb111__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_309)<br/>_307 = [move _308]<br/>StorageDead(_308)<br/>_306 = &amp;_307<br/>_305 = &amp;(*_306)<br/>_304 = move _305 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_305)<br/></td></tr><tr><td align="left">_299 = Arguments::&lt;'_&gt;::new_v1(move _300, move _304)</td></tr></table>>];
    bb112__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">_298 = format(move _299)</td></tr></table>>];
    bb113__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_310)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_302)<br/>_297 = move _298<br/>StorageDead(_298)<br/>_296 = &amp;_297<br/>_295 = &amp;(*_296)<br/></td></tr><tr><td align="left">_294 = &lt;String as Deref&gt;::deref(move _295)</td></tr></table>>];
    bb114__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_293 = &amp;(*_294)<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">_292 = solana_program::log::sol_log(move _293)</td></tr></table>>];
    bb115__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/></td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb116__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_296)<br/>StorageDead(_294)<br/>StorageDead(_292)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>_313 = const &quot;invalid oracle price, must be greater than 0&quot;<br/>_312 = &amp;(*_313)<br/></td></tr><tr><td align="left">_311 = solana_program::log::sol_log(move _312)</td></tr></table>>];
    bb117__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_313)<br/>StorageDead(_311)<br/>StorageLive(_314)<br/>_314 = _291<br/>_287 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _314)<br/>StorageDead(_314)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/></td></tr><tr><td align="left">_286 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _287)</td></tr></table>>];
    bb119__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>_315 = discriminant(_286)<br/></td></tr><tr><td align="left">switchInt(move _315)</td></tr></table>>];
    bb120__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_319)<br/>_319 = ((_286 as Continue).0: ())<br/>_285 = _319<br/>StorageDead(_319)<br/>StorageDead(_286)<br/>StorageDead(_285)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = _182<br/>StorageLive(_330)<br/>_330 = _245<br/></td></tr><tr><td align="left">_328 = &lt;i64 as SafeMath&gt;::safe_sub(move _329, move _330)</td></tr></table>>];
    bb121__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_316)<br/>_316 = ((_286 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_318)<br/>_318 = _316<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _318)</td></tr></table>>];
    bb122__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageDead(_316)<br/>StorageDead(_286)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_329)<br/></td></tr><tr><td align="left">_327 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _328)</td></tr></table>>];
    bb124__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_331 = discriminant(_327)<br/></td></tr><tr><td align="left">switchInt(move _331)</td></tr></table>>];
    bb125__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_335)<br/>_335 = ((_327 as Continue).0: i64)<br/>_326 = _335<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">_325 = &lt;i64 as SafeMath&gt;::safe_mul(move _326, const _)</td></tr></table>>];
    bb126__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_332)<br/>_332 = ((_327 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_334)<br/>_334 = _332<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _334)</td></tr></table>>];
    bb127__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/></td></tr><tr><td align="left">_324 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _325)</td></tr></table>>];
    bb129__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>_336 = discriminant(_324)<br/></td></tr><tr><td align="left">switchInt(move _336)</td></tr></table>>];
    bb130__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_340)<br/>_340 = ((_324 as Continue).0: i64)<br/>_323 = _340<br/>StorageDead(_340)<br/>StorageLive(_341)<br/>_341 = _245<br/></td></tr><tr><td align="left">_322 = &lt;i64 as SafeMath&gt;::safe_div(move _323, move _341)</td></tr></table>>];
    bb131__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_337)<br/>_337 = ((_324 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_339)<br/>_339 = _337<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _339)</td></tr></table>>];
    bb132__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">_321 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _322)</td></tr></table>>];
    bb134__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>_342 = discriminant(_321)<br/></td></tr><tr><td align="left">switchInt(move _342)</td></tr></table>>];
    bb135__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_346)<br/>_346 = ((_321 as Continue).0: i64)<br/>_320 = _346<br/>StorageDead(_346)<br/>StorageDead(_327)<br/>StorageDead(_324)<br/>StorageDead(_321)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>_352 = _320<br/></td></tr><tr><td align="left">_351 = core::num::&lt;impl i64&gt;::abs(move _352)</td></tr></table>>];
    bb136__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_343)<br/>_343 = ((_321 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_345)<br/>_345 = _343<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _345)</td></tr></table>>];
    bb137__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>StorageLive(_353)<br/>_354 = Eq(const 10_i64, const 0_i64)<br/></td></tr><tr><td align="left">assert(!move _354, &quot;attempt to divide `{}` by zero&quot;, const _)</td></tr></table>>];
    bb139__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_355 = Eq(const 10_i64, const -1_i64)<br/>_356 = Eq(const _, const i64::MIN)<br/>_357 = BitAnd(move _355, move _356)<br/></td></tr><tr><td align="left">assert(!move _357, &quot;attempt to compute `{} / {}`, which would overflow&quot;, const _, const 10_i64)</td></tr></table>>];
    bb140__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">_353 = Div(const _, const 10_i64)<br/>_350 = Lt(move _351, move _353)<br/></td></tr><tr><td align="left">switchInt(move _350)</td></tr></table>>];
    bb141__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>StorageDead(_351)<br/>StorageLive(_358)<br/>_358 = ()<br/>_349 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _358)<br/>StorageDead(_358)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>StorageDead(_351)<br/>StorageLive(_359)<br/>_359 = error::ErrorCode::DefaultError<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_395 = const _<br/>_370 = &amp;(*_395)<br/>_369 = &amp;(*_370)<br/>_368 = move _369 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_369)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>_378 = &amp;_359<br/>_377 = &amp;(*_378)<br/></td></tr><tr><td align="left">_376 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _377)</td></tr></table>>];
    bb143__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>_375 = [move _376]<br/>StorageDead(_376)<br/>_374 = &amp;_375<br/>_373 = &amp;(*_374)<br/>_372 = move _373 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_373)<br/></td></tr><tr><td align="left">_367 = Arguments::&lt;'_&gt;::new_v1(move _368, move _372)</td></tr></table>>];
    bb144__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_368)<br/></td></tr><tr><td align="left">_366 = format(move _367)</td></tr></table>>];
    bb145__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>StorageDead(_378)<br/>StorageDead(_375)<br/>StorageDead(_374)<br/>StorageDead(_370)<br/>_365 = move _366<br/>StorageDead(_366)<br/>_364 = &amp;_365<br/>_363 = &amp;(*_364)<br/></td></tr><tr><td align="left">_362 = &lt;String as Deref&gt;::deref(move _363)</td></tr></table>>];
    bb146__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">_361 = &amp;(*_362)<br/>StorageDead(_363)<br/></td></tr><tr><td align="left">_360 = solana_program::log::sol_log(move _361)</td></tr></table>>];
    bb147__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/></td></tr><tr><td align="left">drop(_365)</td></tr></table>>];
    bb148__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_365)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>_381 = const &quot;invalid new oracle price, more than 10% divergence&quot;<br/>_380 = &amp;(*_381)<br/></td></tr><tr><td align="left">_379 = solana_program::log::sol_log(move _380)</td></tr></table>>];
    bb149__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageLive(_382)<br/>_382 = _359<br/>_349 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _382)<br/>StorageDead(_382)<br/>StorageDead(_359)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/></td></tr><tr><td align="left">_348 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _349)</td></tr></table>>];
    bb151__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>_383 = discriminant(_348)<br/></td></tr><tr><td align="left">switchInt(move _383)</td></tr></table>>];
    bb152__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_387)<br/>_387 = ((_348 as Continue).0: ())<br/>_347 = _387<br/>StorageDead(_387)<br/>StorageDead(_348)<br/>StorageDead(_347)<br/>_283 = const ()<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_384)<br/>_384 = ((_348 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_386)<br/>_386 = _384<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _386)</td></tr></table>>];
    bb154__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_384)<br/>StorageDead(_348)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">_283 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_283)<br/>StorageLive(_388)<br/>_388 = _2<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>_390 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_389 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _390)</td></tr></table>>];
    bb157__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/>(((*_389).1: state::perp_market::AMM).0: anchor_lang::prelude::Pubkey) = move _388<br/>StorageDead(_388)<br/>StorageDead(_389)<br/>StorageLive(_391)<br/>_391 = _3<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>_393 = &amp;mut (*_15)<br/></td></tr><tr><td align="left">_392 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _393)</td></tr></table>>];
    bb158__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>(((*_392).1: state::perp_market::AMM).72: state::oracle::OracleSource) = move _391<br/>StorageDead(_391)<br/>StorageDead(_392)<br/>StorageLive(_394)<br/>_394 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _394)<br/>StorageDead(_394)<br/>StorageDead(_245)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb159__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_322)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_324)<br/>StorageDead(_321)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb166__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left">return</td></tr></table>>];
    bb168__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">168 (cleanup)</td></tr><tr><td align="left">drop(_365)</td></tr></table>>];
    bb169__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">169 (cleanup)</td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb170__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">170 (cleanup)</td></tr><tr><td align="left">drop(_266)</td></tr></table>>];
    bb171__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">171 (cleanup)</td></tr><tr><td align="left">drop(_226)</td></tr></table>>];
    bb172__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">172 (cleanup)</td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb173__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">173 (cleanup)</td></tr><tr><td align="left">drop(_157)</td></tr></table>>];
    bb174__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">174 (cleanup)</td></tr><tr><td align="left">drop(_138)</td></tr></table>>];
    bb175__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">175 (cleanup)</td></tr><tr><td align="left">drop(_99)</td></tr></table>>];
    bb176__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">176 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb177__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">177 (cleanup)</td></tr><tr><td align="left">drop(_32)</td></tr></table>>];
    bb178__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">178 (cleanup)</td></tr><tr><td align="left">drop(_16)</td></tr></table>>];
    bb179__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">179 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb180__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">180 (cleanup)</td></tr><tr><td align="left" balign="left">_426 = discriminant(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">181 (cleanup)</td></tr><tr><td align="left" balign="left">_427 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_5617 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">182 (cleanup)</td></tr><tr><td align="left" balign="left">_428 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_5617 -> bb1__0_5617 [label="return"];
    bb1__0_5617 -> bb2__0_5617 [label="return"];
    bb1__0_5617 -> bb179__0_5617 [label="unwind"];
    bb2__0_5617 -> bb3__0_5617 [label="0"];
    bb2__0_5617 -> bb5__0_5617 [label="1"];
    bb2__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb3__0_5617 -> bb7__0_5617 [label="return"];
    bb5__0_5617 -> bb6__0_5617 [label="return"];
    bb5__0_5617 -> bb182__0_5617 [label="unwind"];
    bb6__0_5617 -> bb167__0_5617 [label=""];
    bb7__0_5617 -> bb8__0_5617 [label="return"];
    bb7__0_5617 -> bb179__0_5617 [label="unwind"];
    bb8__0_5617 -> bb9__0_5617 [label="return"];
    bb8__0_5617 -> bb179__0_5617 [label="unwind"];
    bb9__0_5617 -> bb10__0_5617 [label="0"];
    bb9__0_5617 -> bb11__0_5617 [label="1"];
    bb9__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb10__0_5617 -> bb13__0_5617 [label="return"];
    bb10__0_5617 -> bb178__0_5617 [label="unwind"];
    bb11__0_5617 -> bb12__0_5617 [label="return"];
    bb11__0_5617 -> bb181__0_5617 [label="unwind"];
    bb12__0_5617 -> bb166__0_5617 [label=""];
    bb13__0_5617 -> bb14__0_5617 [label="return"];
    bb13__0_5617 -> bb178__0_5617 [label="unwind"];
    bb14__0_5617 -> bb15__0_5617 [label="return"];
    bb14__0_5617 -> bb178__0_5617 [label="unwind"];
    bb15__0_5617 -> bb16__0_5617 [label="return"];
    bb15__0_5617 -> bb178__0_5617 [label="unwind"];
    bb16__0_5617 -> bb17__0_5617 [label="return"];
    bb16__0_5617 -> bb177__0_5617 [label="unwind"];
    bb17__0_5617 -> bb18__0_5617 [label="return"];
    bb17__0_5617 -> bb177__0_5617 [label="unwind"];
    bb18__0_5617 -> bb19__0_5617 [label="return"];
    bb18__0_5617 -> bb178__0_5617 [label="unwind"];
    bb19__0_5617 -> bb20__0_5617 [label="return"];
    bb19__0_5617 -> bb178__0_5617 [label="unwind"];
    bb20__0_5617 -> bb21__0_5617 [label="return"];
    bb20__0_5617 -> bb178__0_5617 [label="unwind"];
    bb21__0_5617 -> bb22__0_5617 [label="0"];
    bb21__0_5617 -> bb23__0_5617 [label="1"];
    bb21__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb22__0_5617 -> bb25__0_5617 [label="return"];
    bb22__0_5617 -> bb178__0_5617 [label="unwind"];
    bb23__0_5617 -> bb24__0_5617 [label="return"];
    bb23__0_5617 -> bb180__0_5617 [label="unwind"];
    bb24__0_5617 -> bb165__0_5617 [label=""];
    bb25__0_5617 -> bb26__0_5617 [label="return"];
    bb25__0_5617 -> bb178__0_5617 [label="unwind"];
    bb26__0_5617 -> bb27__0_5617 [label="0"];
    bb26__0_5617 -> bb28__0_5617 [label="1"];
    bb26__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb27__0_5617 -> bb30__0_5617 [label="return"];
    bb27__0_5617 -> bb178__0_5617 [label="unwind"];
    bb28__0_5617 -> bb29__0_5617 [label="return"];
    bb28__0_5617 -> bb178__0_5617 [label="unwind"];
    bb29__0_5617 -> bb165__0_5617 [label=""];
    bb30__0_5617 -> bb32__0_5617 [label="0"];
    bb30__0_5617 -> bb31__0_5617 [label="otherwise"];
    bb31__0_5617 -> bb46__0_5617 [label=""];
    bb32__0_5617 -> bb33__0_5617 [label="return"];
    bb32__0_5617 -> bb178__0_5617 [label="unwind"];
    bb33__0_5617 -> bb34__0_5617 [label="return"];
    bb33__0_5617 -> bb178__0_5617 [label="unwind"];
    bb34__0_5617 -> bb35__0_5617 [label="return"];
    bb34__0_5617 -> bb178__0_5617 [label="unwind"];
    bb35__0_5617 -> bb36__0_5617 [label="return"];
    bb35__0_5617 -> bb176__0_5617 [label="unwind"];
    bb36__0_5617 -> bb37__0_5617 [label="return"];
    bb36__0_5617 -> bb176__0_5617 [label="unwind"];
    bb37__0_5617 -> bb38__0_5617 [label="return"];
    bb37__0_5617 -> bb178__0_5617 [label="unwind"];
    bb38__0_5617 -> bb39__0_5617 [label="return"];
    bb38__0_5617 -> bb178__0_5617 [label="unwind"];
    bb39__0_5617 -> bb40__0_5617 [label="return"];
    bb39__0_5617 -> bb178__0_5617 [label="unwind"];
    bb40__0_5617 -> bb41__0_5617 [label="return"];
    bb40__0_5617 -> bb178__0_5617 [label="unwind"];
    bb41__0_5617 -> bb42__0_5617 [label="return"];
    bb41__0_5617 -> bb178__0_5617 [label="unwind"];
    bb42__0_5617 -> bb43__0_5617 [label="return"];
    bb42__0_5617 -> bb175__0_5617 [label="unwind"];
    bb43__0_5617 -> bb44__0_5617 [label="return"];
    bb43__0_5617 -> bb175__0_5617 [label="unwind"];
    bb44__0_5617 -> bb45__0_5617 [label="return"];
    bb44__0_5617 -> bb178__0_5617 [label="unwind"];
    bb45__0_5617 -> bb46__0_5617 [label=""];
    bb46__0_5617 -> bb47__0_5617 [label="return"];
    bb46__0_5617 -> bb178__0_5617 [label="unwind"];
    bb47__0_5617 -> bb48__0_5617 [label="0"];
    bb47__0_5617 -> bb49__0_5617 [label="1"];
    bb47__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb48__0_5617 -> bb51__0_5617 [label="return"];
    bb48__0_5617 -> bb178__0_5617 [label="unwind"];
    bb49__0_5617 -> bb50__0_5617 [label="return"];
    bb49__0_5617 -> bb178__0_5617 [label="unwind"];
    bb50__0_5617 -> bb165__0_5617 [label=""];
    bb51__0_5617 -> bb52__0_5617 [label="return"];
    bb51__0_5617 -> bb178__0_5617 [label="unwind"];
    bb52__0_5617 -> bb54__0_5617 [label="0"];
    bb52__0_5617 -> bb53__0_5617 [label="otherwise"];
    bb53__0_5617 -> bb69__0_5617 [label=""];
    bb54__0_5617 -> bb55__0_5617 [label="return"];
    bb54__0_5617 -> bb178__0_5617 [label="unwind"];
    bb55__0_5617 -> bb56__0_5617 [label="return"];
    bb55__0_5617 -> bb178__0_5617 [label="unwind"];
    bb56__0_5617 -> bb57__0_5617 [label="return"];
    bb56__0_5617 -> bb178__0_5617 [label="unwind"];
    bb57__0_5617 -> bb58__0_5617 [label="return"];
    bb57__0_5617 -> bb174__0_5617 [label="unwind"];
    bb58__0_5617 -> bb59__0_5617 [label="return"];
    bb58__0_5617 -> bb174__0_5617 [label="unwind"];
    bb59__0_5617 -> bb60__0_5617 [label="return"];
    bb59__0_5617 -> bb178__0_5617 [label="unwind"];
    bb60__0_5617 -> bb61__0_5617 [label="return"];
    bb60__0_5617 -> bb178__0_5617 [label="unwind"];
    bb61__0_5617 -> bb62__0_5617 [label="return"];
    bb61__0_5617 -> bb178__0_5617 [label="unwind"];
    bb62__0_5617 -> bb63__0_5617 [label="return"];
    bb62__0_5617 -> bb178__0_5617 [label="unwind"];
    bb63__0_5617 -> bb64__0_5617 [label="return"];
    bb63__0_5617 -> bb178__0_5617 [label="unwind"];
    bb64__0_5617 -> bb65__0_5617 [label="return"];
    bb64__0_5617 -> bb178__0_5617 [label="unwind"];
    bb65__0_5617 -> bb66__0_5617 [label="return"];
    bb65__0_5617 -> bb173__0_5617 [label="unwind"];
    bb66__0_5617 -> bb67__0_5617 [label="return"];
    bb66__0_5617 -> bb173__0_5617 [label="unwind"];
    bb67__0_5617 -> bb68__0_5617 [label="return"];
    bb67__0_5617 -> bb178__0_5617 [label="unwind"];
    bb68__0_5617 -> bb69__0_5617 [label=""];
    bb69__0_5617 -> bb70__0_5617 [label="return"];
    bb69__0_5617 -> bb178__0_5617 [label="unwind"];
    bb70__0_5617 -> bb71__0_5617 [label="0"];
    bb70__0_5617 -> bb72__0_5617 [label="1"];
    bb70__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb71__0_5617 -> bb74__0_5617 [label="return"];
    bb71__0_5617 -> bb178__0_5617 [label="unwind"];
    bb72__0_5617 -> bb73__0_5617 [label="return"];
    bb72__0_5617 -> bb178__0_5617 [label="unwind"];
    bb73__0_5617 -> bb165__0_5617 [label=""];
    bb74__0_5617 -> bb75__0_5617 [label="return"];
    bb74__0_5617 -> bb178__0_5617 [label="unwind"];
    bb75__0_5617 -> bb76__0_5617 [label="0"];
    bb75__0_5617 -> bb77__0_5617 [label="1"];
    bb75__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb76__0_5617 -> bb79__0_5617 [label="return"];
    bb76__0_5617 -> bb178__0_5617 [label="unwind"];
    bb77__0_5617 -> bb78__0_5617 [label="return"];
    bb77__0_5617 -> bb178__0_5617 [label="unwind"];
    bb78__0_5617 -> bb165__0_5617 [label=""];
    bb79__0_5617 -> bb80__0_5617 [label="return"];
    bb79__0_5617 -> bb178__0_5617 [label="unwind"];
    bb80__0_5617 -> bb81__0_5617 [label="return"];
    bb80__0_5617 -> bb178__0_5617 [label="unwind"];
    bb81__0_5617 -> bb82__0_5617 [label="return"];
    bb81__0_5617 -> bb178__0_5617 [label="unwind"];
    bb82__0_5617 -> bb83__0_5617 [label="return"];
    bb82__0_5617 -> bb178__0_5617 [label="unwind"];
    bb83__0_5617 -> bb84__0_5617 [label="return"];
    bb83__0_5617 -> bb172__0_5617 [label="unwind"];
    bb84__0_5617 -> bb85__0_5617 [label="return"];
    bb84__0_5617 -> bb172__0_5617 [label="unwind"];
    bb85__0_5617 -> bb86__0_5617 [label="return"];
    bb85__0_5617 -> bb178__0_5617 [label="unwind"];
    bb86__0_5617 -> bb87__0_5617 [label="return"];
    bb86__0_5617 -> bb178__0_5617 [label="unwind"];
    bb87__0_5617 -> bb88__0_5617 [label="return"];
    bb87__0_5617 -> bb178__0_5617 [label="unwind"];
    bb88__0_5617 -> bb89__0_5617 [label="return"];
    bb88__0_5617 -> bb178__0_5617 [label="unwind"];
    bb89__0_5617 -> bb90__0_5617 [label="return"];
    bb89__0_5617 -> bb178__0_5617 [label="unwind"];
    bb90__0_5617 -> bb91__0_5617 [label="return"];
    bb90__0_5617 -> bb178__0_5617 [label="unwind"];
    bb91__0_5617 -> bb92__0_5617 [label="return"];
    bb91__0_5617 -> bb171__0_5617 [label="unwind"];
    bb92__0_5617 -> bb93__0_5617 [label="return"];
    bb92__0_5617 -> bb171__0_5617 [label="unwind"];
    bb93__0_5617 -> bb94__0_5617 [label="return"];
    bb93__0_5617 -> bb178__0_5617 [label="unwind"];
    bb94__0_5617 -> bb95__0_5617 [label="return"];
    bb94__0_5617 -> bb178__0_5617 [label="unwind"];
    bb95__0_5617 -> bb96__0_5617 [label="return"];
    bb95__0_5617 -> bb178__0_5617 [label="unwind"];
    bb96__0_5617 -> bb97__0_5617 [label="return"];
    bb96__0_5617 -> bb178__0_5617 [label="unwind"];
    bb97__0_5617 -> bb98__0_5617 [label="0"];
    bb97__0_5617 -> bb99__0_5617 [label="1"];
    bb97__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb98__0_5617 -> bb101__0_5617 [label="return"];
    bb98__0_5617 -> bb178__0_5617 [label="unwind"];
    bb99__0_5617 -> bb100__0_5617 [label="return"];
    bb99__0_5617 -> bb178__0_5617 [label="unwind"];
    bb100__0_5617 -> bb164__0_5617 [label=""];
    bb101__0_5617 -> bb102__0_5617 [label="return"];
    bb101__0_5617 -> bb178__0_5617 [label="unwind"];
    bb102__0_5617 -> bb103__0_5617 [label="return"];
    bb102__0_5617 -> bb178__0_5617 [label="unwind"];
    bb103__0_5617 -> bb104__0_5617 [label="return"];
    bb103__0_5617 -> bb178__0_5617 [label="unwind"];
    bb104__0_5617 -> bb105__0_5617 [label="return"];
    bb104__0_5617 -> bb170__0_5617 [label="unwind"];
    bb105__0_5617 -> bb106__0_5617 [label="return"];
    bb105__0_5617 -> bb170__0_5617 [label="unwind"];
    bb106__0_5617 -> bb107__0_5617 [label="return"];
    bb106__0_5617 -> bb178__0_5617 [label="unwind"];
    bb107__0_5617 -> bb108__0_5617 [label="0"];
    bb107__0_5617 -> bb155__0_5617 [label="otherwise"];
    bb108__0_5617 -> bb110__0_5617 [label="0"];
    bb108__0_5617 -> bb109__0_5617 [label="otherwise"];
    bb109__0_5617 -> bb118__0_5617 [label=""];
    bb110__0_5617 -> bb111__0_5617 [label="return"];
    bb110__0_5617 -> bb178__0_5617 [label="unwind"];
    bb111__0_5617 -> bb112__0_5617 [label="return"];
    bb111__0_5617 -> bb178__0_5617 [label="unwind"];
    bb112__0_5617 -> bb113__0_5617 [label="return"];
    bb112__0_5617 -> bb178__0_5617 [label="unwind"];
    bb113__0_5617 -> bb114__0_5617 [label="return"];
    bb113__0_5617 -> bb169__0_5617 [label="unwind"];
    bb114__0_5617 -> bb115__0_5617 [label="return"];
    bb114__0_5617 -> bb169__0_5617 [label="unwind"];
    bb115__0_5617 -> bb116__0_5617 [label="return"];
    bb115__0_5617 -> bb178__0_5617 [label="unwind"];
    bb116__0_5617 -> bb117__0_5617 [label="return"];
    bb116__0_5617 -> bb178__0_5617 [label="unwind"];
    bb117__0_5617 -> bb118__0_5617 [label=""];
    bb118__0_5617 -> bb119__0_5617 [label="return"];
    bb118__0_5617 -> bb178__0_5617 [label="unwind"];
    bb119__0_5617 -> bb120__0_5617 [label="0"];
    bb119__0_5617 -> bb121__0_5617 [label="1"];
    bb119__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb120__0_5617 -> bb123__0_5617 [label="return"];
    bb120__0_5617 -> bb178__0_5617 [label="unwind"];
    bb121__0_5617 -> bb122__0_5617 [label="return"];
    bb121__0_5617 -> bb178__0_5617 [label="unwind"];
    bb122__0_5617 -> bb163__0_5617 [label=""];
    bb123__0_5617 -> bb124__0_5617 [label="return"];
    bb123__0_5617 -> bb178__0_5617 [label="unwind"];
    bb124__0_5617 -> bb125__0_5617 [label="0"];
    bb124__0_5617 -> bb126__0_5617 [label="1"];
    bb124__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb125__0_5617 -> bb128__0_5617 [label="return"];
    bb125__0_5617 -> bb178__0_5617 [label="unwind"];
    bb126__0_5617 -> bb127__0_5617 [label="return"];
    bb126__0_5617 -> bb178__0_5617 [label="unwind"];
    bb127__0_5617 -> bb160__0_5617 [label=""];
    bb128__0_5617 -> bb129__0_5617 [label="return"];
    bb128__0_5617 -> bb178__0_5617 [label="unwind"];
    bb129__0_5617 -> bb130__0_5617 [label="0"];
    bb129__0_5617 -> bb131__0_5617 [label="1"];
    bb129__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb130__0_5617 -> bb133__0_5617 [label="return"];
    bb130__0_5617 -> bb178__0_5617 [label="unwind"];
    bb131__0_5617 -> bb132__0_5617 [label="return"];
    bb131__0_5617 -> bb178__0_5617 [label="unwind"];
    bb132__0_5617 -> bb160__0_5617 [label=""];
    bb133__0_5617 -> bb134__0_5617 [label="return"];
    bb133__0_5617 -> bb178__0_5617 [label="unwind"];
    bb134__0_5617 -> bb135__0_5617 [label="0"];
    bb134__0_5617 -> bb136__0_5617 [label="1"];
    bb134__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb135__0_5617 -> bb138__0_5617 [label="return"];
    bb135__0_5617 -> bb178__0_5617 [label="unwind"];
    bb136__0_5617 -> bb137__0_5617 [label="return"];
    bb136__0_5617 -> bb178__0_5617 [label="unwind"];
    bb137__0_5617 -> bb161__0_5617 [label=""];
    bb138__0_5617 -> bb139__0_5617 [label="success"];
    bb138__0_5617 -> bb178__0_5617 [label="unwind"];
    bb139__0_5617 -> bb140__0_5617 [label="success"];
    bb139__0_5617 -> bb178__0_5617 [label="unwind"];
    bb140__0_5617 -> bb142__0_5617 [label="0"];
    bb140__0_5617 -> bb141__0_5617 [label="otherwise"];
    bb141__0_5617 -> bb150__0_5617 [label=""];
    bb142__0_5617 -> bb143__0_5617 [label="return"];
    bb142__0_5617 -> bb178__0_5617 [label="unwind"];
    bb143__0_5617 -> bb144__0_5617 [label="return"];
    bb143__0_5617 -> bb178__0_5617 [label="unwind"];
    bb144__0_5617 -> bb145__0_5617 [label="return"];
    bb144__0_5617 -> bb178__0_5617 [label="unwind"];
    bb145__0_5617 -> bb146__0_5617 [label="return"];
    bb145__0_5617 -> bb168__0_5617 [label="unwind"];
    bb146__0_5617 -> bb147__0_5617 [label="return"];
    bb146__0_5617 -> bb168__0_5617 [label="unwind"];
    bb147__0_5617 -> bb148__0_5617 [label="return"];
    bb147__0_5617 -> bb178__0_5617 [label="unwind"];
    bb148__0_5617 -> bb149__0_5617 [label="return"];
    bb148__0_5617 -> bb178__0_5617 [label="unwind"];
    bb149__0_5617 -> bb150__0_5617 [label=""];
    bb150__0_5617 -> bb151__0_5617 [label="return"];
    bb150__0_5617 -> bb178__0_5617 [label="unwind"];
    bb151__0_5617 -> bb152__0_5617 [label="0"];
    bb151__0_5617 -> bb153__0_5617 [label="1"];
    bb151__0_5617 -> bb4__0_5617 [label="otherwise"];
    bb152__0_5617 -> bb156__0_5617 [label=""];
    bb153__0_5617 -> bb154__0_5617 [label="return"];
    bb153__0_5617 -> bb178__0_5617 [label="unwind"];
    bb154__0_5617 -> bb162__0_5617 [label=""];
    bb155__0_5617 -> bb156__0_5617 [label=""];
    bb156__0_5617 -> bb157__0_5617 [label="return"];
    bb156__0_5617 -> bb178__0_5617 [label="unwind"];
    bb157__0_5617 -> bb158__0_5617 [label="return"];
    bb157__0_5617 -> bb178__0_5617 [label="unwind"];
    bb158__0_5617 -> bb159__0_5617 [label="return"];
    bb158__0_5617 -> bb179__0_5617 [label="unwind"];
    bb159__0_5617 -> bb167__0_5617 [label=""];
    bb160__0_5617 -> bb161__0_5617 [label=""];
    bb161__0_5617 -> bb162__0_5617 [label=""];
    bb162__0_5617 -> bb163__0_5617 [label=""];
    bb163__0_5617 -> bb164__0_5617 [label=""];
    bb164__0_5617 -> bb165__0_5617 [label=""];
    bb165__0_5617 -> bb166__0_5617 [label="return"];
    bb165__0_5617 -> bb179__0_5617 [label="unwind"];
    bb166__0_5617 -> bb167__0_5617 [label=""];
    bb168__0_5617 -> bb178__0_5617 [label="return"];
    bb169__0_5617 -> bb178__0_5617 [label="return"];
    bb170__0_5617 -> bb178__0_5617 [label="return"];
    bb171__0_5617 -> bb178__0_5617 [label="return"];
    bb172__0_5617 -> bb178__0_5617 [label="return"];
    bb173__0_5617 -> bb178__0_5617 [label="return"];
    bb174__0_5617 -> bb178__0_5617 [label="return"];
    bb175__0_5617 -> bb178__0_5617 [label="return"];
    bb176__0_5617 -> bb178__0_5617 [label="return"];
    bb177__0_5617 -> bb178__0_5617 [label="return"];
    bb178__0_5617 -> bb179__0_5617 [label="return"];
    bb180__0_5617 -> bb178__0_5617 [label=""];
    bb181__0_5617 -> bb179__0_5617 [label=""];
    bb182__0_5617 -> bb179__0_5617 [label=""];
}
