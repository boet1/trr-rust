digraph Mir_0_3640 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn order_params::OrderParams::derive_market_order_auction_params(_1: &amp;ReErased state::perp_market::PerpMarket, _2: controller::position::PositionDirection, _3: i64, _4: u64, _5: i64) -&gt; std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: (i64, i64);<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let _11: i64;<br align="left"/>let _12: i64;<br align="left"/>let mut _13: (i64, i64);<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i64, i64)&gt;;<br align="left"/>let mut _15: std::result::Result&lt;(i64, i64), error::ErrorCode&gt;;<br align="left"/>let mut _16: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _17: controller::position::PositionDirection;<br align="left"/>let mut _18: isize;<br align="left"/>let _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _20: !;<br align="left"/>let mut _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _22: (i64, i64);<br align="left"/>let _23: i64;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _25: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: i64;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: i64;<br align="left"/>let _33: i64;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _35: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _36: i64;<br align="left"/>let mut _37: i64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: i64;<br align="left"/>let mut _43: i64;<br align="left"/>let mut _44: i64;<br align="left"/>let _45: i64;<br align="left"/>let _46: i64;<br align="left"/>let mut _47: (i64, i64);<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i64, i64)&gt;;<br align="left"/>let mut _49: std::result::Result&lt;(i64, i64), error::ErrorCode&gt;;<br align="left"/>let mut _50: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _51: controller::position::PositionDirection;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: (i64, i64);<br align="left"/>let _57: i64;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _59: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _60: i64;<br align="left"/>let mut _61: i64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: i64;<br align="left"/>let _67: i64;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _69: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _70: i64;<br align="left"/>let mut _71: i64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: i64;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: i64;<br align="left"/>let _79: ();<br align="left"/>let mut _80: bool;<br align="left"/>let mut _81: i64;<br align="left"/>let _82: i64;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _84: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _85: i64;<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _87: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: i64;<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _94: i64;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: i64;<br align="left"/>let _100: ();<br align="left"/>let mut _101: bool;<br align="left"/>let mut _102: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _103: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _104: controller::position::PositionDirection;<br align="left"/>let mut _105: i64;<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _107: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _108: i64;<br align="left"/>let mut _109: i64;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: i64;<br align="left"/>let mut _115: i64;<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _117: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _118: i64;<br align="left"/>let mut _119: i64;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: i64;<br align="left"/>let mut _125: bool;<br align="left"/>let mut _126: i64;<br align="left"/>let mut _127: bool;<br align="left"/>let mut _128: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _129: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _130: controller::position::PositionDirection;<br align="left"/>let mut _131: i64;<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _133: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _134: i64;<br align="left"/>let mut _135: i64;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: i64;<br align="left"/>let mut _141: i64;<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _143: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _144: i64;<br align="left"/>let mut _145: i64;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _150: i64;<br align="left"/>let _151: ();<br align="left"/>let mut _152: bool;<br align="left"/>let mut _153: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _154: i64;<br align="left"/>let mut _155: i64;<br align="left"/>let mut _156: i64;<br align="left"/>let mut _157: i64;<br align="left"/>let _158: ();<br align="left"/>let mut _159: bool;<br align="left"/>let mut _160: u64;<br align="left"/>let _161: i64;<br align="left"/>let mut _162: u64;<br align="left"/>let mut _163: bool;<br align="left"/>let mut _164: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _165: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let _166: controller::position::PositionDirection;<br align="left"/>let mut _167: i64;<br align="left"/>let mut _168: i64;<br align="left"/>let mut _169: i64;<br align="left"/>let mut _170: i64;<br align="left"/>let mut _171: i64;<br align="left"/>let mut _172: i64;<br align="left"/>let mut _173: i64;<br align="left"/>let mut _174: i64;<br align="left"/>let mut _175: i64;<br align="left"/>let mut _176: i64;<br align="left"/>let mut _177: i64;<br align="left"/>let mut _178: i64;<br align="left"/>let _179: u8;<br align="left"/>let mut _180: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u8&gt;;<br align="left"/>let mut _181: std::result::Result&lt;u8, error::ErrorCode&gt;;<br align="left"/>let mut _182: u64;<br align="left"/>let mut _183: i64;<br align="left"/>let mut _184: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _185: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _186: i64;<br align="left"/>let mut _187: i64;<br align="left"/>let mut _188: isize;<br align="left"/>let _189: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _190: !;<br align="left"/>let mut _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _192: i64;<br align="left"/>let mut _193: u64;<br align="left"/>let mut _194: i64;<br align="left"/>let mut _195: state::perp_market::ContractTier;<br align="left"/>let mut _196: isize;<br align="left"/>let _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _198: !;<br align="left"/>let mut _199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _200: u8;<br align="left"/>let mut _201: (i64, i64, u8);<br align="left"/>let mut _202: i64;<br align="left"/>let mut _203: i64;<br align="left"/>let mut _204: u8;<br align="left"/>let mut _205: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _206: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _207: &amp;ReErased controller::position::PositionDirection;<br align="left"/>debug perp_market =&gt; _1;<br align="left"/>debug direction =&gt; _2;<br align="left"/>debug oracle_price =&gt; _3;<br align="left"/>debug limit_price =&gt; _4;<br align="left"/>debug start_buffer =&gt; _5;<br align="left"/>debug auction_start_price =&gt; _6;<br align="left"/>debug auction_end_price =&gt; _7;<br align="left"/>debug auction_start_price_offset =&gt; _11;<br align="left"/>debug auction_end_price_offset =&gt; _12;<br align="left"/>debug residual =&gt; _19;<br align="left"/>debug val =&gt; _22;<br align="left"/>debug auction_start_price =&gt; _23;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug auction_end_price =&gt; _33;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug auction_start_price_offset =&gt; _45;<br align="left"/>debug auction_end_price_offset =&gt; _46;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug auction_start_price =&gt; _57;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug auction_end_price =&gt; _67;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug start_buffer_price =&gt; _82;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>debug limit_price =&gt; _161;<br align="left"/>debug auction_duration =&gt; _179;<br align="left"/>debug residual =&gt; _189;<br align="left"/>debug val =&gt; _192;<br align="left"/>debug residual =&gt; _197;<br align="left"/>debug val =&gt; _200;<br align="left"/>>;
    bb0__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _4<br/>_9 = Ne(move _10, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_1)<br/>StorageLive(_17)<br/>_17 = _2<br/></td></tr><tr><td align="left">_15 = order_params::OrderParams::get_perp_baseline_start_end_price_offset(move _16, move _17, const 2_u64)</td></tr></table>>];
    bb2__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;(i64, i64), error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb3__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_18 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb4__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_14 as Continue).0: (i64, i64))<br/>_13 = _22<br/>StorageDead(_22)<br/>StorageLive(_11)<br/>_11 = (_13.0: i64)<br/>StorageLive(_12)<br/>_12 = (_13.1: i64)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _3<br/>StorageLive(_27)<br/>_27 = _11<br/></td></tr><tr><td align="left">_25 = &lt;i64 as SafeMath&gt;::safe_add(move _26, move _27)</td></tr></table>>];
    bb5__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_21)<br/>_21 = _19<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _21)</td></tr></table>>];
    bb7__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb9__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_28 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb10__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_24 as Continue).0: i64)<br/>_23 = _32<br/>StorageDead(_32)<br/>StorageDead(_24)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _3<br/>StorageLive(_37)<br/>_37 = _12<br/></td></tr><tr><td align="left">_35 = &lt;i64 as SafeMath&gt;::safe_add(move _36, move _37)</td></tr></table>>];
    bb11__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb12__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb14__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_38 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb15__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_34 as Continue).0: i64)<br/>_33 = _42<br/>StorageDead(_42)<br/>StorageDead(_34)<br/>StorageLive(_43)<br/>_43 = _23<br/>StorageLive(_44)<br/>_44 = _33<br/>_8 = (move _43, move _44)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_33)<br/>StorageDead(_23)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb17__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;(*_1)<br/>StorageLive(_51)<br/>_51 = _2<br/></td></tr><tr><td align="left">_49 = order_params::OrderParams::get_perp_baseline_start_end_price_offset(move _50, move _51, const 1_u64)</td></tr></table>>];
    bb19__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;(i64, i64), error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb20__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_52 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb21__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_48 as Continue).0: (i64, i64))<br/>_47 = _56<br/>StorageDead(_56)<br/>StorageLive(_45)<br/>_45 = (_47.0: i64)<br/>StorageLive(_46)<br/>_46 = (_47.1: i64)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _3<br/>StorageLive(_61)<br/>_61 = _45<br/></td></tr><tr><td align="left">_59 = &lt;i64 as SafeMath&gt;::safe_add(move _60, move _61)</td></tr></table>>];
    bb22__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb23__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb25__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_62 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb26__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_58 as Continue).0: i64)<br/>_57 = _66<br/>StorageDead(_66)<br/>StorageDead(_58)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _3<br/>StorageLive(_71)<br/>_71 = _46<br/></td></tr><tr><td align="left">_69 = &lt;i64 as SafeMath&gt;::safe_add(move _70, move _71)</td></tr></table>>];
    bb27__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb28__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb30__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_72 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb31__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_68 as Continue).0: i64)<br/>_67 = _76<br/>StorageDead(_76)<br/>StorageDead(_68)<br/>StorageLive(_77)<br/>_77 = _57<br/>StorageLive(_78)<br/>_78 = _67<br/>_8 = (move _77, move _78)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_67)<br/>StorageDead(_57)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb33__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_68)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_6)<br/>_6 = (_8.0: i64)<br/>StorageLive(_7)<br/>_7 = (_8.1: i64)<br/>StorageDead(_8)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _5<br/>_80 = Ne(move _81, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb35__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = _3<br/>StorageLive(_89)<br/>_89 = _5<br/></td></tr><tr><td align="left">_87 = &lt;i64 as SafeMath&gt;::safe_mul(move _88, move _89)</td></tr></table>>];
    bb36__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb37__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_90 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb38__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_86 as Continue).0: i64)<br/>_85 = _94<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_84 = &lt;i64 as SafeMath&gt;::safe_div(move _85, const _)</td></tr></table>>];
    bb39__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_93)<br/>_93 = _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb40__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb42__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_95 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb43__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_83 as Continue).0: i64)<br/>_82 = _99<br/>StorageDead(_99)<br/>StorageDead(_86)<br/>StorageDead(_83)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_102 = &amp;_2<br/>StorageLive(_103)<br/>_207 = const _<br/>_103 = &amp;(*_207)<br/></td></tr><tr><td align="left">_101 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _102, move _103)</td></tr></table>>];
    bb44__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb45__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb47__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = _6<br/>StorageLive(_109)<br/>_109 = _82<br/></td></tr><tr><td align="left">_107 = &lt;i64 as SafeMath&gt;::safe_sub(move _108, move _109)</td></tr></table>>];
    bb48__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb49__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_110 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb50__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_106 as Continue).0: i64)<br/>_105 = _114<br/>StorageDead(_114)<br/>_6 = move _105<br/>StorageDead(_105)<br/>StorageDead(_106)<br/>_100 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb52__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_105)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = _6<br/>StorageLive(_119)<br/>_119 = _82<br/></td></tr><tr><td align="left">_117 = &lt;i64 as SafeMath&gt;::safe_add(move _118, move _119)</td></tr></table>>];
    bb54__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb55__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_120 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb56__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_116 as Continue).0: i64)<br/>_115 = _124<br/>StorageDead(_124)<br/>_6 = move _115<br/>StorageDead(_115)<br/>StorageDead(_116)<br/>_100 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb58__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_115)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>_126 = _5<br/>_125 = Lt(move _126, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb60__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;_2<br/>StorageLive(_129)<br/>_206 = const _<br/>_129 = &amp;(*_206)<br/></td></tr><tr><td align="left">_127 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _128, move _129)</td></tr></table>>];
    bb61__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left">switchInt(move _127)</td></tr></table>>];
    bb62__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = _7<br/>StorageLive(_135)<br/>_135 = _82<br/></td></tr><tr><td align="left">_133 = &lt;i64 as SafeMath&gt;::safe_sub(move _134, move _135)</td></tr></table>>];
    bb63__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb64__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_136 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb65__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_132 as Continue).0: i64)<br/>_131 = _140<br/>StorageDead(_140)<br/>_7 = move _131<br/>StorageDead(_131)<br/>StorageDead(_132)<br/>_79 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb67__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_131)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>_144 = _7<br/>StorageLive(_145)<br/>_145 = _82<br/></td></tr><tr><td align="left">_143 = &lt;i64 as SafeMath&gt;::safe_add(move _144, move _145)</td></tr></table>>];
    bb69__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb70__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_146 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb71__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_142 as Continue).0: i64)<br/>_141 = _150<br/>StorageDead(_150)<br/>_7 = move _141<br/>StorageDead(_141)<br/>StorageDead(_142)<br/>_79 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_149)<br/>_149 = _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb73__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_141)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_79 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_79 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;(*_1)<br/></td></tr><tr><td align="left">_152 = PerpMarket::is_prediction_market(move _153)</td></tr></table>>];
    bb79__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left">switchInt(move _152)</td></tr></table>>];
    bb80__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = _6<br/></td></tr><tr><td align="left">_154 = &lt;i64 as Ord&gt;::min(move _155, const _)</td></tr></table>>];
    bb81__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_6 = move _154<br/>StorageDead(_154)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = _7<br/></td></tr><tr><td align="left">_156 = &lt;i64 as Ord&gt;::min(move _157, const _)</td></tr></table>>];
    bb82__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_7 = move _156<br/>StorageDead(_156)<br/>_151 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_151 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = _4<br/>_159 = Ne(move _160, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb85__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = _4<br/>_161 = move _162 as i64 (IntToInt)<br/>StorageDead(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = &amp;_2<br/>StorageLive(_165)<br/>_205 = const _<br/>_165 = &amp;(*_205)<br/></td></tr><tr><td align="left">_163 = &lt;controller::position::PositionDirection as PartialEq&gt;::eq(move _164, move _165)</td></tr></table>>];
    bb86__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb87__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_164)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = _6<br/>StorageLive(_169)<br/>_169 = _161<br/></td></tr><tr><td align="left">_167 = &lt;i64 as Ord&gt;::min(move _168, move _169)</td></tr></table>>];
    bb88__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/>_6 = move _167<br/>StorageDead(_167)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = _7<br/>StorageLive(_172)<br/>_172 = _161<br/></td></tr><tr><td align="left">_170 = &lt;i64 as Ord&gt;::min(move _171, move _172)</td></tr></table>>];
    bb89__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>StorageDead(_171)<br/>_7 = move _170<br/>StorageDead(_170)<br/>_158 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_164)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = _6<br/>StorageLive(_175)<br/>_175 = _161<br/></td></tr><tr><td align="left">_173 = &lt;i64 as Ord&gt;::max(move _174, move _175)</td></tr></table>>];
    bb91__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_174)<br/>_6 = move _173<br/>StorageDead(_173)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = _7<br/>StorageLive(_178)<br/>_178 = _161<br/></td></tr><tr><td align="left">_176 = &lt;i64 as Ord&gt;::max(move _177, move _178)</td></tr></table>>];
    bb92__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>_7 = move _176<br/>StorageDead(_176)<br/>_158 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>_158 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_158)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = _7<br/>StorageLive(_187)<br/>_187 = _6<br/></td></tr><tr><td align="left">_185 = &lt;i64 as SafeMath&gt;::safe_sub(move _186, move _187)</td></tr></table>>];
    bb96__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">_184 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _185)</td></tr></table>>];
    bb97__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_188 = discriminant(_184)<br/></td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb98__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_192)<br/>_192 = ((_184 as Continue).0: i64)<br/>_183 = _192<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">_182 = core::num::&lt;impl i64&gt;::unsigned_abs(move _183)</td></tr></table>>];
    bb99__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_189)<br/>_189 = ((_184 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_191)<br/>_191 = _189<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _191)</td></tr></table>>];
    bb100__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = _3<br/></td></tr><tr><td align="left">_193 = core::num::&lt;impl i64&gt;::unsigned_abs(move _194)</td></tr></table>>];
    bb102__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageLive(_195)<br/>_195 = ((*_1).24: state::perp_market::ContractTier)<br/></td></tr><tr><td align="left">_181 = get_auction_duration(move _182, move _193, move _195)</td></tr></table>>];
    bb103__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = &lt;std::result::Result&lt;u8, error::ErrorCode&gt; as Try&gt;::branch(move _181)</td></tr></table>>];
    bb104__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_196 = discriminant(_180)<br/></td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb105__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_180 as Continue).0: u8)<br/>_179 = _200<br/>StorageDead(_200)<br/>StorageDead(_184)<br/>StorageDead(_180)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = _6<br/>StorageLive(_203)<br/>_203 = _7<br/>StorageLive(_204)<br/>_204 = _179<br/>_201 = (move _202, move _203, move _204)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/>_0 = std::result::Result::&lt;(i64, i64, u8), error::ErrorCode&gt;::Ok(move _201)<br/>StorageDead(_201)<br/>StorageDead(_179)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_197)<br/>_197 = ((_180 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_199)<br/>_199 = _197<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _199)</td></tr></table>>];
    bb107__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_3640 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3640 -> bb18__0_3640 [label="0"];
    bb0__0_3640 -> bb1__0_3640 [label="otherwise"];
    bb1__0_3640 -> bb2__0_3640 [label="return"];
    bb2__0_3640 -> bb3__0_3640 [label="return"];
    bb3__0_3640 -> bb4__0_3640 [label="0"];
    bb3__0_3640 -> bb6__0_3640 [label="1"];
    bb3__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb4__0_3640 -> bb8__0_3640 [label="return"];
    bb6__0_3640 -> bb7__0_3640 [label="return"];
    bb7__0_3640 -> bb116__0_3640 [label=""];
    bb8__0_3640 -> bb9__0_3640 [label="return"];
    bb9__0_3640 -> bb10__0_3640 [label="0"];
    bb9__0_3640 -> bb11__0_3640 [label="1"];
    bb9__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb10__0_3640 -> bb13__0_3640 [label="return"];
    bb11__0_3640 -> bb12__0_3640 [label="return"];
    bb12__0_3640 -> bb115__0_3640 [label=""];
    bb13__0_3640 -> bb14__0_3640 [label="return"];
    bb14__0_3640 -> bb15__0_3640 [label="0"];
    bb14__0_3640 -> bb16__0_3640 [label="1"];
    bb14__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb15__0_3640 -> bb34__0_3640 [label=""];
    bb16__0_3640 -> bb17__0_3640 [label="return"];
    bb17__0_3640 -> bb115__0_3640 [label=""];
    bb18__0_3640 -> bb19__0_3640 [label="return"];
    bb19__0_3640 -> bb20__0_3640 [label="return"];
    bb20__0_3640 -> bb21__0_3640 [label="0"];
    bb20__0_3640 -> bb22__0_3640 [label="1"];
    bb20__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb21__0_3640 -> bb24__0_3640 [label="return"];
    bb22__0_3640 -> bb23__0_3640 [label="return"];
    bb23__0_3640 -> bb116__0_3640 [label=""];
    bb24__0_3640 -> bb25__0_3640 [label="return"];
    bb25__0_3640 -> bb26__0_3640 [label="0"];
    bb25__0_3640 -> bb27__0_3640 [label="1"];
    bb25__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb26__0_3640 -> bb29__0_3640 [label="return"];
    bb27__0_3640 -> bb28__0_3640 [label="return"];
    bb28__0_3640 -> bb114__0_3640 [label=""];
    bb29__0_3640 -> bb30__0_3640 [label="return"];
    bb30__0_3640 -> bb31__0_3640 [label="0"];
    bb30__0_3640 -> bb32__0_3640 [label="1"];
    bb30__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb31__0_3640 -> bb34__0_3640 [label=""];
    bb32__0_3640 -> bb33__0_3640 [label="return"];
    bb33__0_3640 -> bb114__0_3640 [label=""];
    bb34__0_3640 -> bb77__0_3640 [label="0"];
    bb34__0_3640 -> bb35__0_3640 [label="otherwise"];
    bb35__0_3640 -> bb36__0_3640 [label="return"];
    bb36__0_3640 -> bb37__0_3640 [label="return"];
    bb37__0_3640 -> bb38__0_3640 [label="0"];
    bb37__0_3640 -> bb39__0_3640 [label="1"];
    bb37__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb38__0_3640 -> bb41__0_3640 [label="return"];
    bb39__0_3640 -> bb40__0_3640 [label="return"];
    bb40__0_3640 -> bb111__0_3640 [label=""];
    bb41__0_3640 -> bb42__0_3640 [label="return"];
    bb42__0_3640 -> bb43__0_3640 [label="0"];
    bb42__0_3640 -> bb44__0_3640 [label="1"];
    bb42__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb43__0_3640 -> bb46__0_3640 [label="return"];
    bb44__0_3640 -> bb45__0_3640 [label="return"];
    bb45__0_3640 -> bb111__0_3640 [label=""];
    bb46__0_3640 -> bb53__0_3640 [label="0"];
    bb46__0_3640 -> bb47__0_3640 [label="otherwise"];
    bb47__0_3640 -> bb48__0_3640 [label="return"];
    bb48__0_3640 -> bb49__0_3640 [label="return"];
    bb49__0_3640 -> bb50__0_3640 [label="0"];
    bb49__0_3640 -> bb51__0_3640 [label="1"];
    bb49__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb50__0_3640 -> bb59__0_3640 [label=""];
    bb51__0_3640 -> bb52__0_3640 [label="return"];
    bb52__0_3640 -> bb110__0_3640 [label=""];
    bb53__0_3640 -> bb54__0_3640 [label="return"];
    bb54__0_3640 -> bb55__0_3640 [label="return"];
    bb55__0_3640 -> bb56__0_3640 [label="0"];
    bb55__0_3640 -> bb57__0_3640 [label="1"];
    bb55__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb56__0_3640 -> bb59__0_3640 [label=""];
    bb57__0_3640 -> bb58__0_3640 [label="return"];
    bb58__0_3640 -> bb110__0_3640 [label=""];
    bb59__0_3640 -> bb75__0_3640 [label="0"];
    bb59__0_3640 -> bb60__0_3640 [label="otherwise"];
    bb60__0_3640 -> bb61__0_3640 [label="return"];
    bb61__0_3640 -> bb68__0_3640 [label="0"];
    bb61__0_3640 -> bb62__0_3640 [label="otherwise"];
    bb62__0_3640 -> bb63__0_3640 [label="return"];
    bb63__0_3640 -> bb64__0_3640 [label="return"];
    bb64__0_3640 -> bb65__0_3640 [label="0"];
    bb64__0_3640 -> bb66__0_3640 [label="1"];
    bb64__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb65__0_3640 -> bb74__0_3640 [label=""];
    bb66__0_3640 -> bb67__0_3640 [label="return"];
    bb67__0_3640 -> bb109__0_3640 [label=""];
    bb68__0_3640 -> bb69__0_3640 [label="return"];
    bb69__0_3640 -> bb70__0_3640 [label="return"];
    bb70__0_3640 -> bb71__0_3640 [label="0"];
    bb70__0_3640 -> bb72__0_3640 [label="1"];
    bb70__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb71__0_3640 -> bb74__0_3640 [label=""];
    bb72__0_3640 -> bb73__0_3640 [label="return"];
    bb73__0_3640 -> bb109__0_3640 [label=""];
    bb74__0_3640 -> bb76__0_3640 [label=""];
    bb75__0_3640 -> bb76__0_3640 [label=""];
    bb76__0_3640 -> bb78__0_3640 [label=""];
    bb77__0_3640 -> bb78__0_3640 [label=""];
    bb78__0_3640 -> bb79__0_3640 [label="return"];
    bb79__0_3640 -> bb83__0_3640 [label="0"];
    bb79__0_3640 -> bb80__0_3640 [label="otherwise"];
    bb80__0_3640 -> bb81__0_3640 [label="return"];
    bb81__0_3640 -> bb82__0_3640 [label="return"];
    bb82__0_3640 -> bb84__0_3640 [label=""];
    bb83__0_3640 -> bb84__0_3640 [label=""];
    bb84__0_3640 -> bb94__0_3640 [label="0"];
    bb84__0_3640 -> bb85__0_3640 [label="otherwise"];
    bb85__0_3640 -> bb86__0_3640 [label="return"];
    bb86__0_3640 -> bb90__0_3640 [label="0"];
    bb86__0_3640 -> bb87__0_3640 [label="otherwise"];
    bb87__0_3640 -> bb88__0_3640 [label="return"];
    bb88__0_3640 -> bb89__0_3640 [label="return"];
    bb89__0_3640 -> bb93__0_3640 [label=""];
    bb90__0_3640 -> bb91__0_3640 [label="return"];
    bb91__0_3640 -> bb92__0_3640 [label="return"];
    bb92__0_3640 -> bb93__0_3640 [label=""];
    bb93__0_3640 -> bb95__0_3640 [label=""];
    bb94__0_3640 -> bb95__0_3640 [label=""];
    bb95__0_3640 -> bb96__0_3640 [label="return"];
    bb96__0_3640 -> bb97__0_3640 [label="return"];
    bb97__0_3640 -> bb98__0_3640 [label="0"];
    bb97__0_3640 -> bb99__0_3640 [label="1"];
    bb97__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb98__0_3640 -> bb101__0_3640 [label="return"];
    bb99__0_3640 -> bb100__0_3640 [label="return"];
    bb100__0_3640 -> bb108__0_3640 [label=""];
    bb101__0_3640 -> bb102__0_3640 [label="return"];
    bb102__0_3640 -> bb103__0_3640 [label="return"];
    bb103__0_3640 -> bb104__0_3640 [label="return"];
    bb104__0_3640 -> bb105__0_3640 [label="0"];
    bb104__0_3640 -> bb106__0_3640 [label="1"];
    bb104__0_3640 -> bb5__0_3640 [label="otherwise"];
    bb105__0_3640 -> bb117__0_3640 [label=""];
    bb106__0_3640 -> bb107__0_3640 [label="return"];
    bb107__0_3640 -> bb108__0_3640 [label=""];
    bb108__0_3640 -> bb113__0_3640 [label=""];
    bb109__0_3640 -> bb112__0_3640 [label=""];
    bb110__0_3640 -> bb112__0_3640 [label=""];
    bb111__0_3640 -> bb112__0_3640 [label=""];
    bb112__0_3640 -> bb113__0_3640 [label=""];
    bb113__0_3640 -> bb117__0_3640 [label=""];
    bb114__0_3640 -> bb116__0_3640 [label=""];
    bb115__0_3640 -> bb116__0_3640 [label=""];
    bb116__0_3640 -> bb117__0_3640 [label=""];
}
