digraph Mir_0_4680 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn program_entry(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8]) -&gt; std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt;<br align="left"/>let mut _4: usize;<br align="left"/>let mut _5: usize;<br align="left"/>let mut _6: bool;<br align="left"/>let _7: &amp;ReErased u8;<br align="left"/>let _8: &amp;ReErased [u8];<br align="left"/>let mut _9: ();<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _11: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _13: &amp;ReErased [u8];<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _18: ();<br align="left"/>let mut _19: ();<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _21: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased [u8];<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _28: ();<br align="left"/>let mut _29: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _30: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _32: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _33: &amp;ReErased [u8];<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: isize;<br align="left"/>let mut _36: isize;<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>let mut _43: isize;<br align="left"/>debug program_id =&gt; _1;<br align="left"/>debug accounts =&gt; _2;<br align="left"/>debug data =&gt; _3;<br align="left"/>debug discriminator =&gt; _7;<br align="left"/>debug payload =&gt; _8;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_4 = Len((*_3))<br/>_5 = const 5_usize<br/>_6 = Ge(move _4, move _5)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt((*_3)[0 of 5])</td></tr></table>>];
    bb2__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt((*_3)[1 of 5])</td></tr></table>>];
    bb3__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt((*_3)[2 of 5])</td></tr></table>>];
    bb4__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">switchInt((*_3)[3 of 5])</td></tr></table>>];
    bb5__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>_7 = &amp;(*_3)[4 of 5]<br/>StorageLive(_8)<br/>_8 = &amp;(*_3)[5:]<br/></td></tr><tr><td align="left">switchInt((*_7))</td></tr></table>>];
    bb6__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = anchor_lang::prelude::ProgramError::InvalidInstructionData<br/></td></tr><tr><td align="left">_29 = &lt;anchor_lang::prelude::ProgramError as Into&lt;anchor_lang::prelude::ProgramError&gt;&gt;::into(move _30)</td></tr></table>>];
    bb7__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_2)<br/>StorageLive(_13)<br/>_13 = &amp;(*_8)<br/></td></tr><tr><td align="left">_11 = admin::handle_update_mm_oracle_native(move _12, move _13)</td></tr></table>>];
    bb8__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb9__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_14 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb10__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_10 as Continue).0: ())<br/>_9 = _18<br/>StorageDead(_18)<br/>_0 = std::result::Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Ok(move _9)<br/>_34 = discriminant(_10)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_17)<br/>_17 = move _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb13__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>_40 = discriminant(_10)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/>StorageLive(_23)<br/>_23 = &amp;(*_8)<br/></td></tr><tr><td align="left">_21 = admin::handle_update_amm_spread_adjustment_native(move _22, move _23)</td></tr></table>>];
    bb15__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb16__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_24 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb17__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_20 as Continue).0: ())<br/>_19 = _28<br/>StorageDead(_28)<br/>_0 = std::result::Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Ok(move _19)<br/>_36 = discriminant(_20)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_27)<br/>_27 = move _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::prelude::ProgramError&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb19__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>_38 = discriminant(_20)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_0 = std::result::Result::&lt;(), anchor_lang::prelude::ProgramError&gt;::Err(move _29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = &amp;(*_1)<br/>StorageLive(_32)<br/>_32 = &amp;(*_2)<br/>StorageLive(_33)<br/>_33 = &amp;(*_3)<br/></td></tr><tr><td align="left">_0 = entry(move _31, move _32, move _33)</td></tr></table>>];
    bb23__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left">return</td></tr></table>>];
    bb26__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb27__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left" balign="left">_42 = discriminant(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_4680 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">28 (cleanup)</td></tr><tr><td align="left" balign="left">_43 = discriminant(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_4680 -> bb22__0_4680 [label="0"];
    bb0__0_4680 -> bb1__0_4680 [label="otherwise"];
    bb1__0_4680 -> bb2__0_4680 [label="255"];
    bb1__0_4680 -> bb22__0_4680 [label="otherwise"];
    bb2__0_4680 -> bb3__0_4680 [label="255"];
    bb2__0_4680 -> bb22__0_4680 [label="otherwise"];
    bb3__0_4680 -> bb4__0_4680 [label="255"];
    bb3__0_4680 -> bb22__0_4680 [label="otherwise"];
    bb4__0_4680 -> bb5__0_4680 [label="255"];
    bb4__0_4680 -> bb22__0_4680 [label="otherwise"];
    bb5__0_4680 -> bb7__0_4680 [label="0"];
    bb5__0_4680 -> bb14__0_4680 [label="1"];
    bb5__0_4680 -> bb6__0_4680 [label="otherwise"];
    bb6__0_4680 -> bb20__0_4680 [label="return"];
    bb6__0_4680 -> bb26__0_4680 [label="unwind"];
    bb7__0_4680 -> bb8__0_4680 [label="return"];
    bb8__0_4680 -> bb9__0_4680 [label="return"];
    bb8__0_4680 -> bb26__0_4680 [label="unwind"];
    bb9__0_4680 -> bb10__0_4680 [label="0"];
    bb9__0_4680 -> bb12__0_4680 [label="1"];
    bb9__0_4680 -> bb11__0_4680 [label="otherwise"];
    bb10__0_4680 -> bb21__0_4680 [label=""];
    bb12__0_4680 -> bb13__0_4680 [label="return"];
    bb12__0_4680 -> bb28__0_4680 [label="unwind"];
    bb13__0_4680 -> bb24__0_4680 [label=""];
    bb14__0_4680 -> bb15__0_4680 [label="return"];
    bb15__0_4680 -> bb16__0_4680 [label="return"];
    bb15__0_4680 -> bb26__0_4680 [label="unwind"];
    bb16__0_4680 -> bb17__0_4680 [label="0"];
    bb16__0_4680 -> bb18__0_4680 [label="1"];
    bb16__0_4680 -> bb11__0_4680 [label="otherwise"];
    bb17__0_4680 -> bb21__0_4680 [label=""];
    bb18__0_4680 -> bb19__0_4680 [label="return"];
    bb18__0_4680 -> bb27__0_4680 [label="unwind"];
    bb19__0_4680 -> bb24__0_4680 [label=""];
    bb20__0_4680 -> bb21__0_4680 [label=""];
    bb21__0_4680 -> bb25__0_4680 [label=""];
    bb22__0_4680 -> bb23__0_4680 [label="return"];
    bb23__0_4680 -> bb25__0_4680 [label=""];
    bb24__0_4680 -> bb25__0_4680 [label=""];
    bb27__0_4680 -> bb26__0_4680 [label=""];
    bb28__0_4680 -> bb26__0_4680 [label=""];
}
