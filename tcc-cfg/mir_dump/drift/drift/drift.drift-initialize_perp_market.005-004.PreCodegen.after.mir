// MIR for `drift::initialize_perp_market` after PreCodegen

fn drift::initialize_perp_market(_1: anchor_lang::context::Context<'_, '_, '_, '_, admin::InitializePerpMarket<'_>>, _2: u16, _3: u128, _4: u128, _5: i64, _6: u128, _7: state::oracle::OracleSource, _8: state::perp_market::ContractTier, _9: u32, _10: u32, _11: u32, _12: u32, _13: u32, _14: bool, _15: u32, _16: u32, _17: u128, _18: u64, _19: u64, _20: u64, _21: u64, _22: u64, _23: u128, _24: u8, _25: u8, _26: [u8; 32]) -> std::result::Result<(), anchor_lang::error::Error> {
    debug ctx => _1;
    debug market_index => _2;
    debug amm_base_asset_reserve => _3;
    debug amm_quote_asset_reserve => _4;
    debug amm_periodicity => _5;
    debug amm_peg_multiplier => _6;
    debug oracle_source => _7;
    debug contract_tier => _8;
    debug margin_ratio_initial => _9;
    debug margin_ratio_maintenance => _10;
    debug liquidator_fee => _11;
    debug if_liquidation_fee => _12;
    debug imf_factor => _13;
    debug active_status => _14;
    debug base_spread => _15;
    debug max_spread => _16;
    debug max_open_interest => _17;
    debug max_revenue_withdraw_per_period => _18;
    debug quote_max_insurance => _19;
    debug order_step_size => _20;
    debug order_tick_size => _21;
    debug min_order_size => _22;
    debug concentration_coef_scale => _23;
    debug curve_update_intensity => _24;
    debug amm_jit_intensity => _25;
    debug name => _26;
    let mut _0: std::result::Result<(), anchor_lang::error::Error>;
    let mut _27: anchor_lang::context::Context<'_, '_, '_, '_, instructions::admin::InitializePerpMarket<'_>>;
    let mut _28: u16;
    let mut _29: u128;
    let mut _30: u128;
    let mut _31: i64;
    let mut _32: u128;
    let mut _33: state::oracle::OracleSource;
    let mut _34: state::perp_market::ContractTier;
    let mut _35: u32;
    let mut _36: u32;
    let mut _37: u32;
    let mut _38: u32;
    let mut _39: u32;
    let mut _40: bool;
    let mut _41: u32;
    let mut _42: u32;
    let mut _43: u128;
    let mut _44: u64;
    let mut _45: u64;
    let mut _46: u64;
    let mut _47: u64;
    let mut _48: u64;
    let mut _49: u128;
    let mut _50: u8;
    let mut _51: u8;
    let mut _52: [u8; 32];

    bb0: {
        StorageLive(_27);
        _27 = move _1;
        StorageLive(_28);
        _28 = _2;
        StorageLive(_29);
        _29 = _3;
        StorageLive(_30);
        _30 = _4;
        StorageLive(_31);
        _31 = _5;
        StorageLive(_32);
        _32 = _6;
        StorageLive(_33);
        _33 = _7;
        StorageLive(_34);
        _34 = _8;
        StorageLive(_35);
        _35 = _9;
        StorageLive(_36);
        _36 = _10;
        StorageLive(_37);
        _37 = _11;
        StorageLive(_38);
        _38 = _12;
        StorageLive(_39);
        _39 = _13;
        StorageLive(_40);
        _40 = _14;
        StorageLive(_41);
        _41 = _15;
        StorageLive(_42);
        _42 = _16;
        StorageLive(_43);
        _43 = _17;
        StorageLive(_44);
        _44 = _18;
        StorageLive(_45);
        _45 = _19;
        StorageLive(_46);
        _46 = _20;
        StorageLive(_47);
        _47 = _21;
        StorageLive(_48);
        _48 = _22;
        StorageLive(_49);
        _49 = _23;
        StorageLive(_50);
        _50 = _24;
        StorageLive(_51);
        _51 = _25;
        StorageLive(_52);
        _52 = _26;
        _0 = admin::handle_initialize_perp_market(move _27, move _28, move _29, move _30, move _31, move _32, move _33, move _34, move _35, move _36, move _37, move _38, move _39, move _40, move _41, move _42, move _43, move _44, move _45, move _46, move _47, move _48, move _49, move _50, move _51, move _52) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_52);
        StorageDead(_51);
        StorageDead(_50);
        StorageDead(_49);
        StorageDead(_48);
        StorageDead(_47);
        StorageDead(_46);
        StorageDead(_45);
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_37);
        StorageDead(_36);
        StorageDead(_35);
        StorageDead(_34);
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        return;
    }
}
