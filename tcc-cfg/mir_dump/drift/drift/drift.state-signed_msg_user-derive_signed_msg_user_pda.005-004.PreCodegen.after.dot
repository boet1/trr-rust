digraph Mir_0_3987 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn derive_signed_msg_user_pda(_1: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;anchor_lang::prelude::Pubkey, error::ErrorCode&gt;<br align="left"/>let _2: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _3: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _4: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _5: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _6: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _7: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _8: &amp;ReErased [u8];<br align="left"/>let _9: &amp;ReErased [u8];<br align="left"/>let mut _10: &amp;ReErased str;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let _13: &amp;ReErased [u8];<br align="left"/>let mut _14: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _16: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _17: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _18: anchor_lang::prelude::Pubkey;<br align="left"/>debug user_account_pubkey =&gt; _1;<br align="left"/>debug signed_msg_pubkey =&gt; _2;<br align="left"/>>;
    bb0__0_3987 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = const _<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_9 = core::str::&lt;impl str&gt;::as_bytes(move _10)</td></tr></table>>];
    bb1__0_3987 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_8 = &amp;(*_9)<br/>StorageDead(_10)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;(*_1)<br/></td></tr><tr><td align="left">_13 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _14)</td></tr></table>>];
    bb2__0_3987 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_12 = &amp;(*_13)<br/>StorageDead(_14)<br/>_7 = [move _8, move _12]<br/>StorageDead(_12)<br/>StorageDead(_8)<br/>_6 = &amp;_7<br/>_5 = &amp;(*_6)<br/>_4 = move _5 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = const {alloc266: &amp;anchor_lang::prelude::Pubkey}<br/>_16 = &amp;(*_17)<br/>_15 = &amp;(*_16)<br/></td></tr><tr><td align="left">_3 = anchor_lang::prelude::Pubkey::find_program_address(move _4, move _15)</td></tr></table>>];
    bb3__0_3987 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_4)<br/>StorageLive(_2)<br/>_2 = (_3.0: anchor_lang::prelude::Pubkey)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageLive(_18)<br/>_18 = _2<br/>_0 = std::result::Result::&lt;anchor_lang::prelude::Pubkey, error::ErrorCode&gt;::Ok(move _18)<br/>StorageDead(_18)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3987 -> bb1__0_3987 [label="return"];
    bb1__0_3987 -> bb2__0_3987 [label="return"];
    bb2__0_3987 -> bb3__0_3987 [label="return"];
}
