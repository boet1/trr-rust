digraph Mir_0_1794 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn sanitize_new_price(_1: i64, _2: i64, _3: std::option::Option&lt;i64&gt;) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: bool;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: !;<br align="left"/>let mut _8: i64;<br align="left"/>let _9: i64;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _12: i64;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _18: i64;<br align="left"/>let _19: i64;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: i64;<br align="left"/>let _22: ();<br align="left"/>let mut _23: bool;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: i64;<br align="left"/>let _27: i64;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _29: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: i64;<br align="left"/>let _37: i64;<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: u64;<br align="left"/>let mut _40: i64;<br align="left"/>let mut _41: u64;<br align="left"/>let mut _42: i64;<br align="left"/>let mut _43: bool;<br align="left"/>let mut _44: i64;<br align="left"/>let mut _45: i64;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _47: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: isize;<br align="left"/>let _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _52: !;<br align="left"/>let mut _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _54: i64;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _56: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _57: i64;<br align="left"/>let mut _58: i64;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: i64;<br align="left"/>let mut _64: i64;<br align="left"/>debug new_price =&gt; _1;<br align="left"/>debug last_price_twap =&gt; _2;<br align="left"/>debug sanitize_clamp_denominator =&gt; _3;<br align="left"/>debug new_price_spread =&gt; _9;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>debug sanitize_clamp_denominator =&gt; _19;<br align="left"/>debug sanitize_clamp_denominator =&gt; _21;<br align="left"/>debug price_twap_price_band =&gt; _27;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug capped_update_price =&gt; _37;<br align="left"/>debug residual =&gt; _51;<br align="left"/>debug val =&gt; _54;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>>;
    bb0__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _2<br/>_5 = Eq(move _6, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _5)</td></tr></table>>];
    bb1__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = _1<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_4 = const ()<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _1<br/>StorageLive(_13)<br/>_13 = _2<br/></td></tr><tr><td align="left">_11 = &lt;i64 as SafeMath&gt;::safe_sub(move _12, move _13)</td></tr></table>>];
    bb3__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb4__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_14 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb5__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_10 as Continue).0: i64)<br/>_9 = _18<br/>StorageDead(_18)<br/>StorageDead(_10)<br/>StorageLive(_19)<br/>_20 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb6__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_17)<br/>_17 = _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb8__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_19 = const _<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_3 as Some).0: i64)<br/>_19 = _21<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _19<br/>_23 = Eq(move _24, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb12__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_26)<br/>_26 = _1<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _26)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_22 = const ()<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = _2<br/>StorageLive(_31)<br/>_31 = _19<br/></td></tr><tr><td align="left">_29 = &lt;i64 as SafeMath&gt;::safe_div(move _30, move _31)</td></tr></table>>];
    bb14__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb15__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_32 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb16__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_28 as Continue).0: i64)<br/>_27 = _36<br/>StorageDead(_36)<br/>StorageDead(_28)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _9<br/></td></tr><tr><td align="left">_39 = core::num::&lt;impl i64&gt;::unsigned_abs(move _40)</td></tr></table>>];
    bb17__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb18__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _27<br/></td></tr><tr><td align="left">_41 = core::num::&lt;impl i64&gt;::unsigned_abs(move _42)</td></tr></table>>];
    bb20__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_38 = Gt(move _39, move _41)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb21__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_44 = _1<br/>StorageLive(_45)<br/>_45 = _2<br/>_43 = Gt(move _44, move _45)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb22__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _2<br/>StorageLive(_49)<br/>_49 = _27<br/></td></tr><tr><td align="left">_47 = &lt;i64 as SafeMath&gt;::safe_add(move _48, move _49)</td></tr></table>>];
    bb23__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb24__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_50 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb25__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_46 as Continue).0: i64)<br/>_37 = _54<br/>StorageDead(_54)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_51)<br/>_51 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_53)<br/>_53 = _51<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _53)</td></tr></table>>];
    bb27__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_51)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _2<br/>StorageLive(_58)<br/>_58 = _27<br/></td></tr><tr><td align="left">_56 = &lt;i64 as SafeMath&gt;::safe_sub(move _57, move _58)</td></tr></table>>];
    bb29__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb30__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb31__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Continue).0: i64)<br/>_37 = _63<br/>StorageDead(_63)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb33__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>_37 = _1<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_64)<br/>_64 = _37<br/>_0 = std::result::Result::&lt;i64, error::ErrorCode&gt;::Ok(move _64)<br/>StorageDead(_64)<br/>StorageDead(_37)<br/>StorageDead(_27)<br/>StorageDead(_19)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1794 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1794 -> bb2__0_1794 [label="0"];
    bb0__0_1794 -> bb1__0_1794 [label="otherwise"];
    bb1__0_1794 -> bb41__0_1794 [label=""];
    bb2__0_1794 -> bb3__0_1794 [label="return"];
    bb3__0_1794 -> bb4__0_1794 [label="return"];
    bb4__0_1794 -> bb5__0_1794 [label="0"];
    bb4__0_1794 -> bb7__0_1794 [label="1"];
    bb4__0_1794 -> bb6__0_1794 [label="otherwise"];
    bb5__0_1794 -> bb10__0_1794 [label="1"];
    bb5__0_1794 -> bb9__0_1794 [label="otherwise"];
    bb7__0_1794 -> bb8__0_1794 [label="return"];
    bb8__0_1794 -> bb40__0_1794 [label=""];
    bb9__0_1794 -> bb11__0_1794 [label=""];
    bb10__0_1794 -> bb11__0_1794 [label=""];
    bb11__0_1794 -> bb13__0_1794 [label="0"];
    bb11__0_1794 -> bb12__0_1794 [label="otherwise"];
    bb12__0_1794 -> bb39__0_1794 [label=""];
    bb13__0_1794 -> bb14__0_1794 [label="return"];
    bb14__0_1794 -> bb15__0_1794 [label="return"];
    bb15__0_1794 -> bb16__0_1794 [label="0"];
    bb15__0_1794 -> bb17__0_1794 [label="1"];
    bb15__0_1794 -> bb6__0_1794 [label="otherwise"];
    bb16__0_1794 -> bb19__0_1794 [label="return"];
    bb17__0_1794 -> bb18__0_1794 [label="return"];
    bb18__0_1794 -> bb38__0_1794 [label=""];
    bb19__0_1794 -> bb20__0_1794 [label="return"];
    bb20__0_1794 -> bb35__0_1794 [label="0"];
    bb20__0_1794 -> bb21__0_1794 [label="otherwise"];
    bb21__0_1794 -> bb28__0_1794 [label="0"];
    bb21__0_1794 -> bb22__0_1794 [label="otherwise"];
    bb22__0_1794 -> bb23__0_1794 [label="return"];
    bb23__0_1794 -> bb24__0_1794 [label="return"];
    bb24__0_1794 -> bb25__0_1794 [label="0"];
    bb24__0_1794 -> bb26__0_1794 [label="1"];
    bb24__0_1794 -> bb6__0_1794 [label="otherwise"];
    bb25__0_1794 -> bb34__0_1794 [label=""];
    bb26__0_1794 -> bb27__0_1794 [label="return"];
    bb27__0_1794 -> bb37__0_1794 [label=""];
    bb28__0_1794 -> bb29__0_1794 [label="return"];
    bb29__0_1794 -> bb30__0_1794 [label="return"];
    bb30__0_1794 -> bb31__0_1794 [label="0"];
    bb30__0_1794 -> bb32__0_1794 [label="1"];
    bb30__0_1794 -> bb6__0_1794 [label="otherwise"];
    bb31__0_1794 -> bb34__0_1794 [label=""];
    bb32__0_1794 -> bb33__0_1794 [label="return"];
    bb33__0_1794 -> bb37__0_1794 [label=""];
    bb34__0_1794 -> bb36__0_1794 [label=""];
    bb35__0_1794 -> bb36__0_1794 [label=""];
    bb36__0_1794 -> bb41__0_1794 [label=""];
    bb37__0_1794 -> bb38__0_1794 [label=""];
    bb38__0_1794 -> bb39__0_1794 [label=""];
    bb39__0_1794 -> bb40__0_1794 [label=""];
    bb40__0_1794 -> bb41__0_1794 [label=""];
}
