digraph Mir_0_15028 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;OracleValidity as BorshSerialize&gt;::serialize(_1: &amp;ReErased math::oracle::OracleValidity, _2: &amp;ReErased mut W/#0) -&gt; std::result::Result&lt;(), std::io::Error&gt;<br align="left"/>let _3: u8;<br align="left"/>let mut _4: isize;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), std::io::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased mut W/#0;<br align="left"/>let mut _9: &amp;ReErased [u8];<br align="left"/>let mut _10: &amp;ReErased [u8; 1_usize];<br align="left"/>let _11: &amp;ReErased [u8; 1_usize];<br align="left"/>let _12: [u8; 1_usize];<br align="left"/>let mut _13: u8;<br align="left"/>let mut _14: isize;<br align="left"/>let _15: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;;<br align="left"/>let _18: ();<br align="left"/>let _19: ();<br align="left"/>let mut _20: isize;<br align="left"/>let mut _21: ();<br align="left"/>let mut _22: isize;<br align="left"/>let mut _23: isize;<br align="left"/>let mut _24: isize;<br align="left"/>let mut _25: isize;<br align="left"/>let mut _26: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug writer =&gt; _2;<br align="left"/>debug variant_idx =&gt; _3;<br align="left"/>debug residual =&gt; _15;<br align="left"/>debug val =&gt; _18;<br align="left"/>>;
    bb0__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_4 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_3 = const 6_u8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_3 = const 0_u8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_3 = const 1_u8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_3 = const 2_u8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb6__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_3 = const 3_u8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_3 = const 4_u8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_3 = const 5_u8<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;mut (*_2)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = _3<br/></td></tr><tr><td align="left">_12 = core::num::&lt;impl u8&gt;::to_le_bytes(move _13)</td></tr></table>>];
    bb10__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_11 = &amp;_12<br/>_10 = &amp;(*_11)<br/>_9 = move _10 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_7 = &lt;W as std::io::Write&gt;::write_all(move _8, move _9)</td></tr></table>>];
    bb11__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), std::io::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb12__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_14 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb13__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_6 as Continue).0: ())<br/>_5 = _18<br/>StorageDead(_18)<br/>_22 = discriminant(_6)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_19)<br/>_20 = discriminant((*_1))<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb14__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, std::io::Error&gt;)<br/>StorageLive(_17)<br/>_17 = move _15<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), std::io::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, std::io::Error&gt;&gt;&gt;::from_residual(move _17)</td></tr></table>>];
    bb15__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>_24 = discriminant(_6)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_19 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_19 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_19 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_19 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_19 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">_19 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_19 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageLive(_21)<br/>_21 = ()<br/>_0 = std::result::Result::&lt;(), std::io::Error&gt;::Ok(move _21)<br/>StorageDead(_21)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left">return</td></tr></table>>];
    bb25__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb26__0_15028 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left" balign="left">_26 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_15028 -> bb3__0_15028 [label="0"];
    bb0__0_15028 -> bb4__0_15028 [label="1"];
    bb0__0_15028 -> bb5__0_15028 [label="2"];
    bb0__0_15028 -> bb6__0_15028 [label="3"];
    bb0__0_15028 -> bb7__0_15028 [label="4"];
    bb0__0_15028 -> bb8__0_15028 [label="5"];
    bb0__0_15028 -> bb1__0_15028 [label="6"];
    bb0__0_15028 -> bb2__0_15028 [label="otherwise"];
    bb1__0_15028 -> bb9__0_15028 [label=""];
    bb3__0_15028 -> bb9__0_15028 [label=""];
    bb4__0_15028 -> bb9__0_15028 [label=""];
    bb5__0_15028 -> bb9__0_15028 [label=""];
    bb6__0_15028 -> bb9__0_15028 [label=""];
    bb7__0_15028 -> bb9__0_15028 [label=""];
    bb8__0_15028 -> bb9__0_15028 [label=""];
    bb9__0_15028 -> bb10__0_15028 [label="return"];
    bb10__0_15028 -> bb11__0_15028 [label="return"];
    bb11__0_15028 -> bb12__0_15028 [label="return"];
    bb11__0_15028 -> bb25__0_15028 [label="unwind"];
    bb12__0_15028 -> bb13__0_15028 [label="0"];
    bb12__0_15028 -> bb14__0_15028 [label="1"];
    bb12__0_15028 -> bb2__0_15028 [label="otherwise"];
    bb13__0_15028 -> bb17__0_15028 [label="0"];
    bb13__0_15028 -> bb18__0_15028 [label="1"];
    bb13__0_15028 -> bb19__0_15028 [label="2"];
    bb13__0_15028 -> bb20__0_15028 [label="3"];
    bb13__0_15028 -> bb21__0_15028 [label="4"];
    bb13__0_15028 -> bb22__0_15028 [label="5"];
    bb13__0_15028 -> bb16__0_15028 [label="6"];
    bb13__0_15028 -> bb2__0_15028 [label="otherwise"];
    bb14__0_15028 -> bb15__0_15028 [label="return"];
    bb14__0_15028 -> bb26__0_15028 [label="unwind"];
    bb15__0_15028 -> bb24__0_15028 [label=""];
    bb16__0_15028 -> bb23__0_15028 [label=""];
    bb17__0_15028 -> bb23__0_15028 [label=""];
    bb18__0_15028 -> bb23__0_15028 [label=""];
    bb19__0_15028 -> bb23__0_15028 [label=""];
    bb20__0_15028 -> bb23__0_15028 [label=""];
    bb21__0_15028 -> bb23__0_15028 [label=""];
    bb22__0_15028 -> bb23__0_15028 [label=""];
    bb23__0_15028 -> bb24__0_15028 [label=""];
    bb26__0_15028 -> bb25__0_15028 [label=""];
}
