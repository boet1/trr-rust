// MIR for `state::perp_market::<impl at programs/drift/src/state/perp_market.rs:1176:1: 1176:21>::default` before PreCodegen

fn state::perp_market::<impl at programs/drift/src/state/perp_market.rs:1176:1: 1176:21>::default() -> AMM {
    let mut _0: state::perp_market::AMM;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: state::oracle::HistoricalOracleData;
    let mut _3: state::perp_market::PoolBalance;
    let mut _4: state::oracle::OracleSource;
    let mut _5: [u8; 3];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <HistoricalOracleData as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <PoolBalance as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <state::oracle::OracleSource as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = [const 0_u8; 3];
        _0 = AMM { oracle: move _1, historical_oracle_data: move _2, base_asset_amount_per_lp: const 0_i128, quote_asset_amount_per_lp: const 0_i128, fee_pool: move _3, base_asset_reserve: const 0_u128, quote_asset_reserve: const 0_u128, concentration_coef: const 0_u128, min_base_asset_reserve: const 0_u128, max_base_asset_reserve: const 0_u128, sqrt_k: const 0_u128, peg_multiplier: const 0_u128, terminal_quote_asset_reserve: const 0_u128, base_asset_amount_long: const 0_i128, base_asset_amount_short: const 0_i128, base_asset_amount_with_amm: const 0_i128, base_asset_amount_with_unsettled_lp: const 0_i128, max_open_interest: const 0_u128, quote_asset_amount: const 0_i128, quote_entry_amount_long: const 0_i128, quote_entry_amount_short: const 0_i128, quote_break_even_amount_long: const 0_i128, quote_break_even_amount_short: const 0_i128, user_lp_shares: const 0_u128, last_funding_rate: const 0_i64, last_funding_rate_long: const 0_i64, last_funding_rate_short: const 0_i64, last_24h_avg_funding_rate: const 0_i64, total_fee: const 0_i128, total_mm_fee: const 0_i128, total_exchange_fee: const 0_u128, total_fee_minus_distributions: const 0_i128, total_fee_withdrawn: const 0_u128, total_liquidation_fee: const 0_u128, cumulative_funding_rate_long: const 0_i128, cumulative_funding_rate_short: const 0_i128, total_social_loss: const 0_u128, ask_base_asset_reserve: const 0_u128, ask_quote_asset_reserve: const 0_u128, bid_base_asset_reserve: const 0_u128, bid_quote_asset_reserve: const 0_u128, last_oracle_normalised_price: const 0_i64, last_oracle_reserve_price_spread_pct: const 0_i64, last_bid_price_twap: const 0_u64, last_ask_price_twap: const 0_u64, last_mark_price_twap: const 0_u64, last_mark_price_twap_5min: const 0_u64, last_update_slot: const 0_u64, last_oracle_conf_pct: const 0_u64, net_revenue_since_last_funding: const 0_i64, last_funding_rate_ts: const 0_i64, funding_period: const 0_i64, order_step_size: const 0_u64, order_tick_size: const 0_u64, min_order_size: const 1_u64, mm_oracle_slot: const 0_u64, volume_24h: const 0_u64, long_intensity_volume: const 0_u64, short_intensity_volume: const 0_u64, last_trade_ts: const 0_i64, mark_std: const 0_u64, oracle_std: const 0_u64, last_mark_price_twap_ts: const 0_i64, base_spread: const 0_u32, max_spread: const 0_u32, long_spread: const 0_u32, short_spread: const 0_u32, mm_oracle_price: const 0_i64, max_fill_reserve_fraction: const 0_u16, max_slippage_ratio: const 0_u16, curve_update_intensity: const 0_u8, amm_jit_intensity: const 0_u8, oracle_source: move _4, last_oracle_valid: const false, target_base_asset_amount_per_lp: const 0_i32, per_lp_base: const 0_i8, taker_speed_bump_override: const 0_i8, amm_spread_adjustment: const 0_i8, oracle_slot_delay_override: const 0_i8, mm_oracle_sequence_id: const 0_u64, net_unsettled_funding_pnl: const 0_i64, quote_asset_amount_with_unsettled_lp: const 0_i64, reference_price_offset: const 0_i32, amm_inventory_spread_adjustment: const 0_i8, padding: move _5, last_funding_oracle_twap: const 0_i64 };
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
