digraph Mir_0_2307 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_funding_payment_in_quote_precision(_1: i128, _2: i128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _3: i128;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: i128;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _12: i128;<br align="left"/>let _13: i128;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _15: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _16: i128;<br align="left"/>let mut _17: i128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: i128;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: i128;<br align="left"/>let mut _30: i128;<br align="left"/>debug funding_rate_delta =&gt; _1;<br align="left"/>debug base_asset_amount =&gt; _2;<br align="left"/>debug funding_payment =&gt; _3;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug funding_payment_collateral =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>>;
    bb0__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = _1<br/>StorageLive(_7)<br/>_7 = _2<br/></td></tr><tr><td align="left">_5 = _calculate_funding_payment(move _6, move _7)</td></tr></table>>];
    bb1__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: i128)<br/>_3 = _12<br/>StorageDead(_12)<br/>StorageDead(_4)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _3<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/></td></tr><tr><td align="left">_19 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb4__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_11)<br/>_11 = _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb8__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_20 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb9__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_18 as Continue).0: i128)<br/>_17 = _24<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_15 = &lt;i128 as SafeMath&gt;::safe_div(move _16, move _17)</td></tr></table>>];
    bb10__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb11__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb13__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_25 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb14__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_14 as Continue).0: i128)<br/>_13 = _29<br/>StorageDead(_29)<br/>StorageDead(_18)<br/>StorageDead(_14)<br/>StorageLive(_30)<br/>_30 = _13<br/>_0 = std::result::Result::&lt;i128, error::ErrorCode&gt;::Ok(move _30)<br/>StorageDead(_30)<br/>StorageDead(_13)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb16__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2307 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2307 -> bb1__0_2307 [label="return"];
    bb1__0_2307 -> bb2__0_2307 [label="return"];
    bb2__0_2307 -> bb3__0_2307 [label="0"];
    bb2__0_2307 -> bb5__0_2307 [label="1"];
    bb2__0_2307 -> bb4__0_2307 [label="otherwise"];
    bb3__0_2307 -> bb7__0_2307 [label="return"];
    bb5__0_2307 -> bb6__0_2307 [label="return"];
    bb6__0_2307 -> bb18__0_2307 [label=""];
    bb7__0_2307 -> bb8__0_2307 [label="return"];
    bb8__0_2307 -> bb9__0_2307 [label="0"];
    bb8__0_2307 -> bb10__0_2307 [label="1"];
    bb8__0_2307 -> bb4__0_2307 [label="otherwise"];
    bb9__0_2307 -> bb12__0_2307 [label="return"];
    bb10__0_2307 -> bb11__0_2307 [label="return"];
    bb11__0_2307 -> bb17__0_2307 [label=""];
    bb12__0_2307 -> bb13__0_2307 [label="return"];
    bb13__0_2307 -> bb14__0_2307 [label="0"];
    bb13__0_2307 -> bb15__0_2307 [label="1"];
    bb13__0_2307 -> bb4__0_2307 [label="otherwise"];
    bb14__0_2307 -> bb19__0_2307 [label=""];
    bb15__0_2307 -> bb16__0_2307 [label="return"];
    bb16__0_2307 -> bb17__0_2307 [label=""];
    bb17__0_2307 -> bb18__0_2307 [label=""];
    bb18__0_2307 -> bb19__0_2307 [label=""];
}
