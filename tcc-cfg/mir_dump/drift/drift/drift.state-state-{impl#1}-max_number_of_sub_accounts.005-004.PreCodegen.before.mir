// MIR for `state::state::<impl at programs/drift/src/state/state.rs:68:1: 68:11>::max_number_of_sub_accounts` before PreCodegen

fn state::state::<impl at programs/drift/src/state/state.rs:68:1: 68:11>::max_number_of_sub_accounts(_1: &state::state::State) -> u64 {
    debug self => _1;
    let mut _0: u64;
    let _2: ();
    let mut _3: bool;
    let mut _4: u16;
    let mut _5: !;
    let mut _6: u16;
    let mut _7: u64;
    let mut _8: u16;

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_1).22: u16);
        _3 = Le(move _4, const 5_u16);
        switchInt(move _3) -> [0: bb2, otherwise: bb1];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_6);
        _6 = ((*_1).22: u16);
        _0 = move _6 as u64 (IntToInt);
        StorageDead(_6);
        StorageDead(_3);
        StorageDead(_2);
        goto -> bb4;
    }

    bb2: {
        StorageDead(_4);
        _2 = const ();
        StorageDead(_3);
        StorageDead(_2);
        StorageLive(_7);
        StorageLive(_8);
        _8 = ((*_1).22: u16);
        _7 = move _8 as u64 (IntToInt);
        StorageDead(_8);
        _0 = core::num::<impl u64>::saturating_mul(move _7, const 100_u64) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_7);
        goto -> bb4;
    }

    bb4: {
        return;
    }
}
