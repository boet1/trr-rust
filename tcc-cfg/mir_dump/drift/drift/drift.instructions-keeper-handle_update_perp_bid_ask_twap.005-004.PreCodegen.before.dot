digraph Mir_0_9312 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_update_perp_bid_ask_twap(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _14: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _15: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _16: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _21: ();<br align="left"/>let _22: ();<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _24: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _26: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _28: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _33: ();<br align="left"/>let _34: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _35: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _38: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _40: Closure(DefId(0:9315 ~ drift[d311]::instructions::keeper::handle_update_perp_bid_ask_twap::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _46: anchor_lang::prelude::Clock;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _48: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _53: anchor_lang::prelude::Clock;<br align="left"/>let _54: i64;<br align="left"/>let _55: u64;<br align="left"/>let _56: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _57: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle_map::OracleMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _59: std::result::Result&lt;state::oracle_map::OracleMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _60: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _61: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _64: state::state::OracleGuardRails;<br align="left"/>let mut _65: &amp;ReErased state::state::State;<br align="left"/>let mut _66: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let _72: std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _74: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _75: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _76: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _77: Closure(DefId(0:9316 ~ drift[d311]::instructions::keeper::handle_update_perp_bid_ask_twap::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _78: isize;<br align="left"/>let _79: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _80: !;<br align="left"/>let mut _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _82: std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _83: ();<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _85: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _86: bool;<br align="left"/>let mut _87: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _88: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _89: ();<br align="left"/>let _90: error::ErrorCode;<br align="left"/>let _91: ();<br align="left"/>let mut _92: &amp;ReErased str;<br align="left"/>let _93: &amp;ReErased str;<br align="left"/>let mut _94: &amp;ReErased std::string::String;<br align="left"/>let _95: &amp;ReErased std::string::String;<br align="left"/>let _96: std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let mut _98: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _99: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _102: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _103: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _104: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _105: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _106: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _107: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _108: &amp;ReErased error::ErrorCode;<br align="left"/>let _109: &amp;ReErased error::ErrorCode;<br align="left"/>let _110: ();<br align="left"/>let mut _111: &amp;ReErased str;<br align="left"/>let _112: &amp;ReErased str;<br align="left"/>let mut _113: error::ErrorCode;<br align="left"/>let mut _114: isize;<br align="left"/>let _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _116: !;<br align="left"/>let mut _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _118: ();<br align="left"/>let _119: u64;<br align="left"/>let mut _120: (u64, bool);<br align="left"/>let _121: ();<br align="left"/>let mut _122: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _123: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _124: bool;<br align="left"/>let mut _125: u64;<br align="left"/>let mut _126: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _127: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _128: u64;<br align="left"/>let mut _129: ();<br align="left"/>let _130: error::ErrorCode;<br align="left"/>let _131: ();<br align="left"/>let mut _132: &amp;ReErased str;<br align="left"/>let _133: &amp;ReErased str;<br align="left"/>let mut _134: &amp;ReErased std::string::String;<br align="left"/>let _135: &amp;ReErased std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let _137: std::string::String;<br align="left"/>let mut _138: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _142: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _146: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _147: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased error::ErrorCode;<br align="left"/>let _149: &amp;ReErased error::ErrorCode;<br align="left"/>let _150: ();<br align="left"/>let mut _151: &amp;ReErased str;<br align="left"/>let _152: &amp;ReErased str;<br align="left"/>let mut _153: &amp;ReErased std::string::String;<br align="left"/>let _154: &amp;ReErased std::string::String;<br align="left"/>let _155: std::string::String;<br align="left"/>let _156: std::string::String;<br align="left"/>let mut _157: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _158: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _159: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _160: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _161: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _164: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _165: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _166: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _167: &amp;ReErased u64;<br align="left"/>let _168: &amp;ReErased u64;<br align="left"/>let _169: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _170: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _171: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased u64;<br align="left"/>let _173: &amp;ReErased u64;<br align="left"/>let mut _174: error::ErrorCode;<br align="left"/>let mut _175: isize;<br align="left"/>let _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _177: !;<br align="left"/>let mut _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _179: ();<br align="left"/>let _180: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _181: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _182: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _183: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _184: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _185: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _186: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _187: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _188: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _189: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _190: isize;<br align="left"/>let _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _194: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _195: state::oracle::MMOraclePriceData;<br align="left"/>let mut _196: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::MMOraclePriceData&gt;;<br align="left"/>let mut _197: std::result::Result&lt;state::oracle::MMOraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _198: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _199: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _200: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _201: state::oracle::OraclePriceData;<br align="left"/>let mut _202: u64;<br align="left"/>let mut _203: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _204: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _205: &amp;ReErased state::state::State;<br align="left"/>let mut _206: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _207: isize;<br align="left"/>let _208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _209: !;<br align="left"/>let mut _210: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _211: state::oracle::MMOraclePriceData;<br align="left"/>let _212: i128;<br align="left"/>let mut _213: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _214: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _215: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _216: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _217: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _218: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let _219: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _220: &amp;ReErased state::state::State;<br align="left"/>let _221: &amp;ReErased state::state::State;<br align="left"/>let mut _222: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _223: i64;<br align="left"/>let mut _224: u64;<br align="left"/>let mut _225: isize;<br align="left"/>let _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _227: !;<br align="left"/>let mut _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _229: i128;<br align="left"/>let _230: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _231: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _232: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _233: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _234: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _235: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::user_map::UserMap&lt;ReErased&gt;&gt;;<br align="left"/>let mut _236: std::result::Result&lt;state::user_map::UserMap&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _237: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _238: isize;<br align="left"/>let _239: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _240: !;<br align="left"/>let mut _241: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _242: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _243: u64;<br align="left"/>let mut _244: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _245: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _246: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _247: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _248: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _249: isize;<br align="left"/>let _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _251: !;<br align="left"/>let mut _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _253: u64;<br align="left"/>let _254: std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _255: std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _256: (std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;);<br align="left"/>let mut _257: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;)&gt;;<br align="left"/>let mut _258: std::result::Result&lt;(std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _259: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _260: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _261: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _262: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _263: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _264: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _265: u64;<br align="left"/>let mut _266: i64;<br align="left"/>let mut _267: isize;<br align="left"/>let _268: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _269: !;<br align="left"/>let mut _270: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _271: (std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;);<br align="left"/>let _272: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _273: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;u64&gt;&gt;;<br align="left"/>let mut _274: std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _275: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _276: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _277: u64;<br align="left"/>let mut _278: isize;<br align="left"/>let _279: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _280: !;<br align="left"/>let mut _281: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _282: std::option::Option&lt;u64&gt;;<br align="left"/>let _283: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _284: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;u64&gt;&gt;;<br align="left"/>let mut _285: std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _286: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let _287: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _288: u64;<br align="left"/>let mut _289: isize;<br align="left"/>let _290: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _291: !;<br align="left"/>let mut _292: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _293: std::option::Option&lt;u64&gt;;<br align="left"/>let _294: ();<br align="left"/>let mut _295: &amp;ReErased str;<br align="left"/>let _296: &amp;ReErased str;<br align="left"/>let mut _297: &amp;ReErased std::string::String;<br align="left"/>let _298: &amp;ReErased std::string::String;<br align="left"/>let _299: std::string::String;<br align="left"/>let _300: std::string::String;<br align="left"/>let mut _301: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _302: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _303: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _304: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _305: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _306: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _307: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _308: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _309: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _310: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _311: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _312: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _313: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _314: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _315: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _316: ();<br align="left"/>let mut _317: bool;<br align="left"/>let mut _318: &amp;ReErased state::perp_market::ContractType;<br align="left"/>let _319: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _320: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _321: &amp;ReErased state::perp_market::ContractType;<br align="left"/>let _322: state::perp_market::ContractType;<br align="left"/>let mut _323: bool;<br align="left"/>let mut _324: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _325: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _326: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _327: state::paused_operations::PerpOperation;<br align="left"/>let mut _328: bool;<br align="left"/>let mut _329: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _330: bool;<br align="left"/>let mut _331: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _332: !;<br align="left"/>let _333: ();<br align="left"/>let mut _334: &amp;ReErased str;<br align="left"/>let _335: &amp;ReErased str;<br align="left"/>let mut _336: ();<br align="left"/>let _337: u64;<br align="left"/>let mut _338: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _339: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _340: u64;<br align="left"/>let mut _341: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _342: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _343: i64;<br align="left"/>let mut _344: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _345: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _346: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _347: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;i64&gt;&gt;;<br align="left"/>let mut _348: std::result::Result&lt;std::option::Option&lt;i64&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _349: state::perp_market::PerpMarket;<br align="left"/>let mut _350: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _351: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _352: isize;<br align="left"/>let _353: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _354: !;<br align="left"/>let mut _355: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _356: std::option::Option&lt;i64&gt;;<br align="left"/>let _357: ();<br align="left"/>let mut _358: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _359: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _360: &amp;ReErased mut state::perp_market::AMM;<br align="left"/>let mut _361: &amp;ReErased mut state::perp_market::AMM;<br align="left"/>let mut _362: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _363: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _364: i64;<br align="left"/>let mut _365: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _366: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _367: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _368: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _369: isize;<br align="left"/>let _370: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _371: !;<br align="left"/>let mut _372: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _373: ();<br align="left"/>let _374: ();<br align="left"/>let mut _375: &amp;ReErased str;<br align="left"/>let _376: &amp;ReErased str;<br align="left"/>let mut _377: &amp;ReErased std::string::String;<br align="left"/>let _378: &amp;ReErased std::string::String;<br align="left"/>let _379: std::string::String;<br align="left"/>let _380: std::string::String;<br align="left"/>let mut _381: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _382: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _383: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _384: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let _385: [&amp;ReErased str; 6_usize];<br align="left"/>let mut _386: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _387: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let _388: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let _389: [core::fmt::rt::Argument&lt;ReErased&gt;; 6_usize];<br align="left"/>let mut _390: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _391: &amp;ReErased u64;<br align="left"/>let _392: &amp;ReErased u64;<br align="left"/>let mut _393: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _394: &amp;ReErased u64;<br align="left"/>let _395: &amp;ReErased u64;<br align="left"/>let _396: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _397: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _398: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _399: &amp;ReErased u64;<br align="left"/>let _400: &amp;ReErased u64;<br align="left"/>let mut _401: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _402: &amp;ReErased u64;<br align="left"/>let _403: &amp;ReErased u64;<br align="left"/>let _404: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _405: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _406: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _407: &amp;ReErased i64;<br align="left"/>let _408: &amp;ReErased i64;<br align="left"/>let mut _409: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _410: &amp;ReErased i64;<br align="left"/>let _411: &amp;ReErased i64;<br align="left"/>let _412: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _413: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _414: ();<br align="left"/>let mut _415: bool;<br align="left"/>let mut _416: u64;<br align="left"/>let mut _417: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _418: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _419: u64;<br align="left"/>let mut _420: bool;<br align="left"/>let mut _421: u64;<br align="left"/>let mut _422: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _423: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _424: u64;<br align="left"/>let _425: ();<br align="left"/>let mut _426: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _427: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _428: bool;<br align="left"/>let mut _429: i64;<br align="left"/>let mut _430: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _431: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _432: i64;<br align="left"/>let mut _433: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _434: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _435: i64;<br align="left"/>let mut _436: isize;<br align="left"/>let _437: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _438: !;<br align="left"/>let mut _439: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _440: i64;<br align="left"/>let mut _441: bool;<br align="left"/>let mut _442: u64;<br align="left"/>let mut _443: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _444: u64;<br align="left"/>let mut _445: bool;<br align="left"/>let mut _446: u64;<br align="left"/>let mut _447: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _448: u64;<br align="left"/>let mut _449: ();<br align="left"/>let _450: error::ErrorCode;<br align="left"/>let _451: ();<br align="left"/>let mut _452: &amp;ReErased str;<br align="left"/>let _453: &amp;ReErased str;<br align="left"/>let mut _454: &amp;ReErased std::string::String;<br align="left"/>let _455: &amp;ReErased std::string::String;<br align="left"/>let _456: std::string::String;<br align="left"/>let _457: std::string::String;<br align="left"/>let mut _458: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _459: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _460: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _461: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _462: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _463: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _464: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _465: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _466: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _467: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _468: &amp;ReErased error::ErrorCode;<br align="left"/>let _469: &amp;ReErased error::ErrorCode;<br align="left"/>let _470: ();<br align="left"/>let mut _471: &amp;ReErased str;<br align="left"/>let _472: &amp;ReErased str;<br align="left"/>let mut _473: &amp;ReErased std::string::String;<br align="left"/>let _474: &amp;ReErased std::string::String;<br align="left"/>let _475: std::string::String;<br align="left"/>let _476: std::string::String;<br align="left"/>let mut _477: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _478: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _479: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _480: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _481: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _482: error::ErrorCode;<br align="left"/>let mut _483: isize;<br align="left"/>let _484: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _485: !;<br align="left"/>let mut _486: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _487: ();<br align="left"/>let _488: bool;<br align="left"/>let mut _489: bool;<br align="left"/>let mut _490: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _491: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _492: &amp;ReErased state::state::State;<br align="left"/>let _493: &amp;ReErased state::state::State;<br align="left"/>let mut _494: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _495: isize;<br align="left"/>let _496: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _497: !;<br align="left"/>let mut _498: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _499: bool;<br align="left"/>let mut _500: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _501: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _502: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _503: state::paused_operations::PerpOperation;<br align="left"/>let _504: bool;<br align="left"/>let mut _505: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _506: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _507: u16;<br align="left"/>let mut _508: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _509: &amp;ReErased std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _510: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _511: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _512: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _513: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _514: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _515: i64;<br align="left"/>let mut _516: u64;<br align="left"/>let mut _517: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let _518: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let _519: &amp;ReErased state::state::State;<br align="left"/>let mut _520: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _521: bool;<br align="left"/>let mut _522: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _523: isize;<br align="left"/>let _524: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _525: !;<br align="left"/>let mut _526: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _527: bool;<br align="left"/>let mut _528: ();<br align="left"/>let mut _529: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _530: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _531: &amp;ReErased [&amp;ReErased str; 6_usize];<br align="left"/>let mut _532: &amp;ReErased state::perp_market::ContractType;<br align="left"/>let mut _533: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _534: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _535: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _536: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _537: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _538: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _539: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _540: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _541: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _542: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _543: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _544: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _545: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _546: &amp;ReErased mut instructions::keeper::UpdatePerpBidAskTwap&lt;ReErased&gt;;<br align="left"/>let mut _547: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _548: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _549: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _550: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _551: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _552: isize;<br align="left"/>let mut _553: isize;<br align="left"/>let mut _554: isize;<br align="left"/>let mut _555: isize;<br align="left"/>let mut _556: isize;<br align="left"/>let mut _557: isize;<br align="left"/>let mut _558: isize;<br align="left"/>let mut _559: isize;<br align="left"/>let mut _560: isize;<br align="left"/>let mut _561: isize;<br align="left"/>let mut _562: isize;<br align="left"/>let mut _563: isize;<br align="left"/>let mut _564: isize;<br align="left"/>let mut _565: isize;<br align="left"/>let mut _566: isize;<br align="left"/>let mut _567: isize;<br align="left"/>let mut _568: isize;<br align="left"/>let mut _569: isize;<br align="left"/>let mut _570: isize;<br align="left"/>let mut _571: isize;<br align="left"/>let mut _572: isize;<br align="left"/>let mut _573: isize;<br align="left"/>let mut _574: isize;<br align="left"/>let mut _575: isize;<br align="left"/>let mut _576: isize;<br align="left"/>let mut _577: isize;<br align="left"/>let mut _578: isize;<br align="left"/>let mut _579: isize;<br align="left"/>let mut _580: isize;<br align="left"/>let mut _581: isize;<br align="left"/>let mut _582: isize;<br align="left"/>let mut _583: isize;<br align="left"/>let mut _584: isize;<br align="left"/>let mut _585: isize;<br align="left"/>let mut _586: isize;<br align="left"/>let mut _587: isize;<br align="left"/>let mut _588: isize;<br align="left"/>let mut _589: isize;<br align="left"/>let mut _590: isize;<br align="left"/>let mut _591: isize;<br align="left"/>let mut _592: isize;<br align="left"/>let mut _593: isize;<br align="left"/>let mut _594: isize;<br align="left"/>let mut _595: isize;<br align="left"/>let mut _596: isize;<br align="left"/>let mut _597: isize;<br align="left"/>let mut _598: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _599: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _600: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _601: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _602: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _603: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug perp_market =&gt; _34;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug clock =&gt; _46;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug now =&gt; _54;<br align="left"/>debug slot =&gt; _55;<br align="left"/>debug state =&gt; _56;<br align="left"/>debug oracle_map =&gt; _57;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug keeper_stats =&gt; _72;<br align="left"/>debug residual =&gt; _79;<br align="left"/>debug val =&gt; _82;<br align="left"/>debug error_code =&gt; _90;<br align="left"/>debug res =&gt; _97;<br align="left"/>debug residual =&gt; _115;<br align="left"/>debug val =&gt; _118;<br align="left"/>debug min_if_stake =&gt; _119;<br align="left"/>debug error_code =&gt; _130;<br align="left"/>debug res =&gt; _137;<br align="left"/>debug res =&gt; _156;<br align="left"/>debug residual =&gt; _176;<br align="left"/>debug val =&gt; _179;<br align="left"/>debug oracle_price_data =&gt; _180;<br align="left"/>debug residual =&gt; _191;<br align="left"/>debug val =&gt; _194;<br align="left"/>debug mm_oracle_price_data =&gt; _195;<br align="left"/>debug residual =&gt; _208;<br align="left"/>debug val =&gt; _211;<br align="left"/>debug residual =&gt; _226;<br align="left"/>debug val =&gt; _229;<br align="left"/>debug remaining_accounts_iter =&gt; _230;<br align="left"/>debug makers =&gt; _234;<br align="left"/>debug residual =&gt; _239;<br align="left"/>debug val =&gt; _242;<br align="left"/>debug depth =&gt; _243;<br align="left"/>debug residual =&gt; _250;<br align="left"/>debug val =&gt; _253;<br align="left"/>debug bids =&gt; _254;<br align="left"/>debug asks =&gt; _255;<br align="left"/>debug residual =&gt; _268;<br align="left"/>debug val =&gt; _271;<br align="left"/>debug estimated_bid =&gt; _272;<br align="left"/>debug residual =&gt; _279;<br align="left"/>debug val =&gt; _282;<br align="left"/>debug estimated_ask =&gt; _283;<br align="left"/>debug residual =&gt; _290;<br align="left"/>debug val =&gt; _293;<br align="left"/>debug res =&gt; _300;<br align="left"/>debug before_bid_price_twap =&gt; _337;<br align="left"/>debug before_ask_price_twap =&gt; _340;<br align="left"/>debug before_mark_twap_ts =&gt; _343;<br align="left"/>debug sanitize_clamp_denominator =&gt; _346;<br align="left"/>debug residual =&gt; _353;<br align="left"/>debug val =&gt; _356;<br align="left"/>debug residual =&gt; _370;<br align="left"/>debug val =&gt; _373;<br align="left"/>debug res =&gt; _380;<br align="left"/>debug residual =&gt; _437;<br align="left"/>debug val =&gt; _440;<br align="left"/>debug error_code =&gt; _450;<br align="left"/>debug res =&gt; _457;<br align="left"/>debug res =&gt; _476;<br align="left"/>debug residual =&gt; _484;<br align="left"/>debug val =&gt; _487;<br align="left"/>debug funding_paused =&gt; _488;<br align="left"/>debug residual =&gt; _496;<br align="left"/>debug val =&gt; _499;<br align="left"/>debug residual =&gt; _524;<br align="left"/>debug val =&gt; _527;<br align="left"/>>;
    bb0__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_537 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_6 = &amp;((*_537).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_5 = &amp;(*_6)<br/></td></tr><tr><td align="left">_4 = constraints::perp_market_valid(move _5)</td></tr></table>>];
    bb1__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_552 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_538 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_16 = &amp;((*_538).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_539 = deref_copy (*_16)<br/>_598 = (((_539.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_15 = &amp;(*_598)<br/></td></tr><tr><td align="left">_14 = constraints::funding_not_paused(move _15)</td></tr></table>>];
    bb4__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_586 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_17 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_13 as Continue).0: ())<br/>_12 = _21<br/>StorageDead(_21)<br/>_554 = discriminant(_13)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_540 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_26 = &amp;((*_540).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_25 = &amp;(*_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_541 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_28 = &amp;((*_541).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_24 = constraints::valid_oracle_for_perp_market(move _25, move _27)</td></tr></table>>];
    bb10__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_584 = discriminant(_13)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb13__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_29 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb14__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_23 as Continue).0: ())<br/>_22 = _33<br/>StorageDead(_33)<br/>_556 = discriminant(_23)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_542 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_39 = &amp;((*_542).1: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_38 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load_mut(move _39)</td></tr></table>>];
    bb15__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = move ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_32)<br/>_32 = move _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb16__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>_582 = discriminant(_23)<br/>StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageLive(_40)<br/>_40 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;RefMut&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _38, move _40)</td></tr></table>>];
    bb18__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;RefMut&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb19__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_41 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb20__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = move ((_36 as Continue).0: std::cell::RefMut&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_35 = move _45<br/>StorageDead(_45)<br/>_34 = &amp;mut _35<br/>_560 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/></td></tr><tr><td align="left">_48 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb21__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb22__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>_558 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb24__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_49 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb25__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move ((_47 as Continue).0: anchor_lang::prelude::Clock)<br/>_46 = move _53<br/>StorageDead(_53)<br/>_562 = discriminant(_47)<br/>StorageDead(_47)<br/>StorageLive(_54)<br/>_54 = (_46.4: i64)<br/>StorageLive(_55)<br/>_55 = (_46.0: u64)<br/>StorageLive(_56)<br/>_543 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_56 = &amp;((*_543).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_544 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_61 = &amp;((*_544).2: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_60 = &amp;(*_61)<br/>StorageLive(_62)<br/>_62 = _55<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_545 = deref_copy (*_56)<br/>_599 = (((_545.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_66 = &amp;(*_599)<br/></td></tr><tr><td align="left">_65 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb26__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_52)<br/>_52 = move _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb27__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>_580 = discriminant(_47)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_64 = ((*_65).7: state::state::OracleGuardRails)<br/>_63 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _64)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_59 = OracleMap::&lt;'_&gt;::load_one(move _60, move _62, move _63)</td></tr></table>>];
    bb29__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;OracleMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb30__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_67 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb31__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = move ((_58 as Continue).0: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_57 = move _71<br/>StorageDead(_71)<br/>_566 = discriminant(_58)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_546 = deref_copy (_1.1: &amp;mut instructions::keeper::UpdatePerpBidAskTwap&lt;'_&gt;)<br/>_76 = &amp;((*_546).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/></td></tr><tr><td align="left">_75 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load(move _76)</td></tr></table>>];
    bb32__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb33__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>_564 = discriminant(_58)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_77)<br/>_77 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_74 = std::result::Result::&lt;Ref&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _75, move _77)</td></tr></table>>];
    bb35__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;Ref&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb36__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_78 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb37__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = move ((_73 as Continue).0: std::cell::Ref&lt;'_, state::user::UserStats&gt;)<br/>_72 = move _82<br/>StorageDead(_82)<br/>_570 = discriminant(_73)<br/>StorageDead(_73)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_72<br/></td></tr><tr><td align="left">_87 = &lt;Ref&lt;'_, UserStats&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb38__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_81)<br/>_81 = _79<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _81)</td></tr></table>>];
    bb39__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_79)<br/>_568 = discriminant(_73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_86 = ((*_87).14: bool)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb41__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_89)<br/>_89 = ()<br/>_85 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _89)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageLive(_90)<br/>_90 = error::ErrorCode::CantUpdatePerpBidAskTwap<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_536 = const _<br/>_101 = &amp;(*_536)<br/>_100 = &amp;(*_101)<br/>_99 = move _100 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_100)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;_90<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _108)</td></tr></table>>];
    bb43__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_106 = [move _107]<br/>StorageDead(_107)<br/>_105 = &amp;_106<br/>_104 = &amp;(*_105)<br/>_103 = move _104 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">_98 = Arguments::&lt;'_&gt;::new_v1(move _99, move _103)</td></tr></table>>];
    bb44__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = format(move _98)</td></tr></table>>];
    bb45__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_109)<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_101)<br/>_96 = move _97<br/>StorageDead(_97)<br/>_95 = &amp;_96<br/>_94 = &amp;(*_95)<br/></td></tr><tr><td align="left">_93 = &lt;String as Deref&gt;::deref(move _94)</td></tr></table>>];
    bb46__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">_92 = &amp;(*_93)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">_91 = solana_program::log::sol_log(move _92)</td></tr></table>>];
    bb47__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb48__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = const &quot;Keeper stats disable_update_perp_bid_ask_twap is true&quot;<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_110 = solana_program::log::sol_log(move _111)</td></tr></table>>];
    bb49__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageLive(_113)<br/>_113 = _90<br/>_85 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _113)<br/>StorageDead(_113)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb51__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_114 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _114)</td></tr></table>>];
    bb52__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_118)<br/>_118 = ((_84 as Continue).0: ())<br/>_83 = _118<br/>StorageDead(_118)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageLive(_119)<br/>_120 = CheckedMul(const 1000_u64, const _)<br/></td></tr><tr><td align="left">assert(!move (_120.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const 1000_u64, const _)</td></tr></table>>];
    bb53__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_117)<br/>_117 = _115<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _117)</td></tr></table>>];
    bb54__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_119 = move (_120.0: u64)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;_72<br/></td></tr><tr><td align="left">_126 = &lt;Ref&lt;'_, UserStats&gt; as Deref&gt;::deref(move _127)</td></tr></table>>];
    bb56__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_125 = ((*_126).10: u64)<br/>StorageLive(_128)<br/>_128 = _119<br/>_124 = Ge(move _125, move _128)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb57__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageLive(_129)<br/>_129 = ()<br/>_123 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _129)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/>StorageLive(_130)<br/>_130 = error::ErrorCode::CantUpdatePerpBidAskTwap<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_535 = const _<br/>_141 = &amp;(*_535)<br/>_140 = &amp;(*_141)<br/>_139 = move _140 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_140)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_130<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_147 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _148)</td></tr></table>>];
    bb59__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_146 = [move _147]<br/>StorageDead(_147)<br/>_145 = &amp;_146<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_138 = Arguments::&lt;'_&gt;::new_v1(move _139, move _143)</td></tr></table>>];
    bb60__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = format(move _138)</td></tr></table>>];
    bb61__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>_136 = move _137<br/>StorageDead(_137)<br/>_135 = &amp;_136<br/>_134 = &amp;(*_135)<br/></td></tr><tr><td align="left">_133 = &lt;String as Deref&gt;::deref(move _134)</td></tr></table>>];
    bb62__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_132 = &amp;(*_133)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_131 = solana_program::log::sol_log(move _132)</td></tr></table>>];
    bb63__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb64__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_534 = const _<br/>_160 = &amp;(*_534)<br/>_159 = &amp;(*_160)<br/>_158 = move _159 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_159)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;_72<br/></td></tr><tr><td align="left">_169 = &lt;Ref&lt;'_, UserStats&gt; as Deref&gt;::deref(move _170)</td></tr></table>>];
    bb65__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>_168 = &amp;((*_169).10: u64)<br/>_167 = &amp;(*_168)<br/></td></tr><tr><td align="left">_166 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _167)</td></tr></table>>];
    bb66__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = &amp;_119<br/>_172 = &amp;(*_173)<br/></td></tr><tr><td align="left">_171 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _172)</td></tr></table>>];
    bb67__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_165 = [move _166, move _171]<br/>StorageDead(_171)<br/>StorageDead(_166)<br/>_164 = &amp;_165<br/>_163 = &amp;(*_164)<br/>_162 = move _163 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_157 = Arguments::&lt;'_&gt;::new_v1(move _158, move _162)</td></tr></table>>];
    bb68__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_156 = format(move _157)</td></tr></table>>];
    bb69__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_173)<br/>StorageDead(_169)<br/>StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_160)<br/>_155 = move _156<br/>StorageDead(_156)<br/>_154 = &amp;_155<br/>_153 = &amp;(*_154)<br/></td></tr><tr><td align="left">_152 = &lt;String as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb70__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_151 = &amp;(*_152)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_150 = solana_program::log::sol_log(move _151)</td></tr></table>>];
    bb71__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb72__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageLive(_174)<br/>_174 = _130<br/>_123 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _174)<br/>StorageDead(_174)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _123)</td></tr></table>>];
    bb74__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_175 = discriminant(_122)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb75__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_179)<br/>_179 = ((_122 as Continue).0: ())<br/>_121 = _179<br/>StorageDead(_179)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;mut _57<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;(*_34)<br/></td></tr><tr><td align="left">_188 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _189)</td></tr></table>>];
    bb76__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_122 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_178)<br/>_178 = _176<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _178)</td></tr></table>>];
    bb77__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_187 = &amp;(*_188)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_186 = PerpMarket::oracle_id(move _187)</td></tr></table>>];
    bb79__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_185 = &amp;_186<br/>_184 = &amp;(*_185)<br/></td></tr><tr><td align="left">_182 = OracleMap::&lt;'_&gt;::get_price_data(move _183, move _184)</td></tr></table>>];
    bb80__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _182)</td></tr></table>>];
    bb81__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_190 = discriminant(_181)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb82__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = ((_181 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_180 = _194<br/>StorageDead(_194)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_181)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_200 = &amp;(*_34)<br/></td></tr><tr><td align="left">_199 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _200)</td></tr></table>>];
    bb83__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_181 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_193)<br/>_193 = _191<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _193)</td></tr></table>>];
    bb84__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_198 = &amp;(*_199)<br/>StorageDead(_200)<br/>StorageLive(_201)<br/>_201 = (*_180)<br/>StorageLive(_202)<br/>_202 = _55<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_547 = deref_copy (*_56)<br/>_600 = (((_547.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_206 = &amp;(*_600)<br/></td></tr><tr><td align="left">_205 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _206)</td></tr></table>>];
    bb86__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>_204 = &amp;(((*_205).7: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_203 = &amp;(*_204)<br/></td></tr><tr><td align="left">_197 = PerpMarket::get_mm_oracle_price_data(move _198, move _201, move _202, move _203)</td></tr></table>>];
    bb87__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_196 = &lt;std::result::Result&lt;MMOraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _197)</td></tr></table>>];
    bb88__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>_207 = discriminant(_196)<br/></td></tr><tr><td align="left">switchInt(move _207)</td></tr></table>>];
    bb89__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_196 as Continue).0: state::oracle::MMOraclePriceData)<br/>_195 = _211<br/>StorageDead(_211)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_199)<br/>StorageDead(_196)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_216 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _217)</td></tr></table>>];
    bb90__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ((_196 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_210)<br/>_210 = _208<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _210)</td></tr></table>>];
    bb91__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/>StorageDead(_208)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>StorageDead(_199)<br/>StorageDead(_196)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_215 = &amp;mut (*_216)<br/>StorageDead(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = &amp;_195<br/>_218 = &amp;(*_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_548 = deref_copy (*_56)<br/>_601 = (((_548.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_222 = &amp;(*_601)<br/></td></tr><tr><td align="left">_221 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _222)</td></tr></table>>];
    bb93__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_220 = &amp;(*_221)<br/>StorageDead(_222)<br/>StorageLive(_223)<br/>_223 = _54<br/>StorageLive(_224)<br/>_224 = _55<br/></td></tr><tr><td align="left">_214 = _update_amm(move _215, move _218, move _220, move _223, move _224)</td></tr></table>>];
    bb94__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">_213 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _214)</td></tr></table>>];
    bb95__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>_225 = discriminant(_213)<br/></td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb96__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_229)<br/>_229 = ((_213 as Continue).0: i128)<br/>_212 = _229<br/>StorageDead(_229)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>_549 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_233 = &amp;(*_549)<br/></td></tr><tr><td align="left">_232 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _233)</td></tr></table>>];
    bb97__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_226)<br/>_226 = ((_213 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_228)<br/>_228 = _226<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _228)</td></tr></table>>];
    bb98__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/></td></tr><tr><td align="left">_231 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _232)</td></tr></table>>];
    bb100__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>_230 = &amp;mut _231<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;mut (*_230)<br/></td></tr><tr><td align="left">_236 = load_user_map::&lt;'_, '_&gt;(move _237, const false)</td></tr></table>>];
    bb101__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/></td></tr><tr><td align="left">_235 = &lt;std::result::Result&lt;UserMap&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _236)</td></tr></table>>];
    bb102__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_238 = discriminant(_235)<br/></td></tr><tr><td align="left">switchInt(move _238)</td></tr></table>>];
    bb103__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_242)<br/>_242 = move ((_235 as Continue).0: state::user_map::UserMap&lt;'_&gt;)<br/>_234 = move _242<br/>StorageDead(_242)<br/>_574 = discriminant(_235)<br/>StorageDead(_235)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;(*_34)<br/></td></tr><tr><td align="left">_247 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _248)</td></tr></table>>];
    bb104__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_239)<br/>_239 = ((_235 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_241)<br/>_241 = _239<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _241)</td></tr></table>>];
    bb105__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_239)<br/>_572 = discriminant(_235)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_246 = &amp;(*_247)<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">_245 = PerpMarket::get_market_depth_for_funding_rate(move _246)</td></tr></table>>];
    bb107__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/></td></tr><tr><td align="left">_244 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _245)</td></tr></table>>];
    bb108__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>_249 = discriminant(_244)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb109__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_253)<br/>_253 = ((_244 as Continue).0: u64)<br/>_243 = _253<br/>StorageDead(_253)<br/>StorageDead(_247)<br/>StorageDead(_244)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_261 = &amp;(*_34)<br/></td></tr><tr><td align="left">_260 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _261)</td></tr></table>>];
    bb110__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>_250 = ((_244 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_252)<br/>_252 = _250<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _252)</td></tr></table>>];
    bb111__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_247)<br/>StorageDead(_244)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">_259 = &amp;(*_260)<br/>StorageDead(_261)<br/>StorageLive(_262)<br/>_262 = &amp;(*_180)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>_264 = &amp;_234<br/>_263 = &amp;(*_264)<br/>StorageLive(_265)<br/>_265 = _55<br/>StorageLive(_266)<br/>_266 = _54<br/></td></tr><tr><td align="left">_258 = find_bids_and_asks_from_users(move _259, move _262, move _263, move _265, move _266)</td></tr></table>>];
    bb113__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_262)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = &lt;std::result::Result&lt;(Vec&lt;Level&gt;, Vec&lt;Level&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _258)</td></tr></table>>];
    bb114__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>_267 = discriminant(_257)<br/></td></tr><tr><td align="left">switchInt(move _267)</td></tr></table>>];
    bb115__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = move ((_257 as Continue).0: (std::vec::Vec&lt;math::orders::Level&gt;, std::vec::Vec&lt;math::orders::Level&gt;))<br/>_256 = move _271<br/>StorageDead(_271)<br/>StorageLive(_254)<br/>_254 = move (_256.0: std::vec::Vec&lt;math::orders::Level&gt;)<br/>StorageLive(_255)<br/>_255 = move (_256.1: std::vec::Vec&lt;math::orders::Level&gt;)<br/>_578 = discriminant(_257)<br/>StorageDead(_264)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>_276 = &amp;_254<br/>_275 = &amp;(*_276)<br/>StorageLive(_277)<br/>_277 = _243<br/></td></tr><tr><td align="left">_274 = estimate_price_from_side(move _275, move _277)</td></tr></table>>];
    bb116__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = ((_257 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_270)<br/>_270 = _268<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _270)</td></tr></table>>];
    bb117__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>StorageDead(_268)<br/>_576 = discriminant(_257)<br/>StorageDead(_264)<br/>StorageDead(_260)<br/>StorageDead(_257)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_275)<br/></td></tr><tr><td align="left">_273 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _274)</td></tr></table>>];
    bb119__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_278 = discriminant(_273)<br/></td></tr><tr><td align="left">switchInt(move _278)</td></tr></table>>];
    bb120__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_282)<br/>_282 = ((_273 as Continue).0: std::option::Option&lt;u64&gt;)<br/>_272 = _282<br/>StorageDead(_282)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_287 = &amp;_255<br/>_286 = &amp;(*_287)<br/>StorageLive(_288)<br/>_288 = _243<br/></td></tr><tr><td align="left">_285 = estimate_price_from_side(move _286, move _288)</td></tr></table>>];
    bb121__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_279)<br/>_279 = ((_273 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_281)<br/>_281 = _279<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _281)</td></tr></table>>];
    bb122__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_279)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">_284 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _285)</td></tr></table>>];
    bb124__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>_289 = discriminant(_284)<br/></td></tr><tr><td align="left">switchInt(move _289)</td></tr></table>>];
    bb125__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_293)<br/>_293 = ((_284 as Continue).0: std::option::Option&lt;u64&gt;)<br/>_283 = _293<br/>StorageDead(_293)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>_533 = const _<br/>_304 = &amp;(*_533)<br/>_303 = &amp;(*_304)<br/>_302 = move _303 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_303)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>_312 = &amp;_272<br/>_311 = &amp;(*_312)<br/></td></tr><tr><td align="left">_310 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;Option&lt;u64&gt;&gt;(move _311)</td></tr></table>>];
    bb126__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_290)<br/>_290 = ((_284 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_292)<br/>_292 = _290<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _292)</td></tr></table>>];
    bb127__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_290)<br/>StorageDead(_287)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_315 = &amp;_283<br/>_314 = &amp;(*_315)<br/></td></tr><tr><td align="left">_313 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;Option&lt;u64&gt;&gt;(move _314)</td></tr></table>>];
    bb129__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>_309 = [move _310, move _313]<br/>StorageDead(_313)<br/>StorageDead(_310)<br/>_308 = &amp;_309<br/>_307 = &amp;(*_308)<br/>_306 = move _307 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_307)<br/></td></tr><tr><td align="left">_301 = Arguments::&lt;'_&gt;::new_v1(move _302, move _306)</td></tr></table>>];
    bb130__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">_300 = format(move _301)</td></tr></table>>];
    bb131__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_315)<br/>StorageDead(_312)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageDead(_304)<br/>_299 = move _300<br/>StorageDead(_300)<br/>_298 = &amp;_299<br/>_297 = &amp;(*_298)<br/></td></tr><tr><td align="left">_296 = &lt;String as Deref&gt;::deref(move _297)</td></tr></table>>];
    bb132__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">_295 = &amp;(*_296)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">_294 = solana_program::log::sol_log(move _295)</td></tr></table>>];
    bb133__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/></td></tr><tr><td align="left">drop(_299)</td></tr></table>>];
    bb134__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_298)<br/>StorageDead(_296)<br/>StorageDead(_294)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>_320 = &amp;(*_34)<br/></td></tr><tr><td align="left">_319 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _320)</td></tr></table>>];
    bb135__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>_318 = &amp;((*_319).23: state::perp_market::ContractType)<br/>StorageLive(_321)<br/>_532 = const _<br/>_321 = &amp;(*_532)<br/></td></tr><tr><td align="left">_317 = &lt;ContractType as PartialEq&gt;::eq(move _318, move _321)</td></tr></table>>];
    bb136__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left">switchInt(move _317)</td></tr></table>>];
    bb137__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>_326 = &amp;(*_34)<br/></td></tr><tr><td align="left">_325 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _326)</td></tr></table>>];
    bb138__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">_324 = &amp;(*_325)<br/>StorageDead(_326)<br/>StorageLive(_327)<br/>_327 = PerpOperation::AmmFill<br/></td></tr><tr><td align="left">_323 = PerpMarket::is_operation_paused(move _324, move _327)</td></tr></table>>];
    bb139__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left">switchInt(move _323)</td></tr></table>>];
    bb140__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_325)<br/>StorageDead(_324)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = &amp;_272<br/></td></tr><tr><td align="left">_328 = Option::&lt;u64&gt;::is_none(move _329)</td></tr></table>>];
    bb141__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left">switchInt(move _328)</td></tr></table>>];
    bb142__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>_331 = &amp;_283<br/></td></tr><tr><td align="left">_330 = Option::&lt;u64&gt;::is_none(move _331)</td></tr></table>>];
    bb144__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left">switchInt(move _330)</td></tr></table>>];
    bb145__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>_335 = const &quot;skipping mark twap update for disabled amm prediction market&quot;<br/>_334 = &amp;(*_335)<br/></td></tr><tr><td align="left">_333 = solana_program::log::sol_log(move _334)</td></tr></table>>];
    bb146__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_335)<br/>StorageDead(_333)<br/>StorageLive(_336)<br/>_336 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _336)<br/>StorageDead(_336)<br/>StorageDead(_330)<br/>StorageDead(_328)<br/>StorageDead(_323)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_325)<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageDead(_319)<br/>StorageDead(_318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">_316 = const ()<br/>StorageDead(_330)<br/>StorageDead(_328)<br/>StorageDead(_323)<br/>StorageDead(_317)<br/>StorageDead(_316)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = &amp;(*_34)<br/></td></tr><tr><td align="left">_338 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _339)</td></tr></table>>];
    bb151__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>_337 = (((*_338).1: state::perp_market::AMM).43: u64)<br/>StorageDead(_338)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>_342 = &amp;(*_34)<br/></td></tr><tr><td align="left">_341 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _342)</td></tr></table>>];
    bb152__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>_340 = (((*_341).1: state::perp_market::AMM).44: u64)<br/>StorageDead(_341)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>_345 = &amp;(*_34)<br/></td></tr><tr><td align="left">_344 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _345)</td></tr></table>>];
    bb153__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>_343 = (((*_344).1: state::perp_market::AMM).62: i64)<br/>StorageDead(_344)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;(*_34)<br/></td></tr><tr><td align="left">_350 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _351)</td></tr></table>>];
    bb154__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">_349 = (*_350)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">_348 = PerpMarket::get_sanitize_clamp_denominator(move _349)</td></tr></table>>];
    bb155__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/></td></tr><tr><td align="left">_347 = &lt;std::result::Result&lt;Option&lt;i64&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _348)</td></tr></table>>];
    bb156__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>_352 = discriminant(_347)<br/></td></tr><tr><td align="left">switchInt(move _352)</td></tr></table>>];
    bb157__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_356)<br/>_356 = ((_347 as Continue).0: std::option::Option&lt;i64&gt;)<br/>_346 = _356<br/>StorageDead(_356)<br/>StorageDead(_350)<br/>StorageDead(_347)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>_363 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_362 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _363)</td></tr></table>>];
    bb158__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_353)<br/>_353 = ((_347 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_355)<br/>_355 = _353<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _355)</td></tr></table>>];
    bb159__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>StorageDead(_353)<br/>StorageDead(_350)<br/>StorageDead(_347)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>_361 = &amp;mut ((*_362).1: state::perp_market::AMM)<br/>_360 = &amp;mut (*_361)<br/>StorageLive(_364)<br/>_364 = _54<br/>StorageLive(_365)<br/>_365 = &amp;(*_180)<br/>StorageLive(_366)<br/>_366 = _272<br/>StorageLive(_367)<br/>_367 = _283<br/>StorageLive(_368)<br/>_368 = _346<br/></td></tr><tr><td align="left">_359 = update_mark_twap_crank(move _360, move _364, move _365, move _366, move _367, move _368)</td></tr></table>>];
    bb161__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_366)<br/>StorageDead(_365)<br/>StorageDead(_364)<br/>StorageDead(_360)<br/></td></tr><tr><td align="left">_358 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _359)</td></tr></table>>];
    bb162__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>_369 = discriminant(_358)<br/></td></tr><tr><td align="left">switchInt(move _369)</td></tr></table>>];
    bb163__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_373)<br/>_373 = ((_358 as Continue).0: ())<br/>_357 = _373<br/>StorageDead(_373)<br/>StorageDead(_362)<br/>StorageDead(_361)<br/>StorageDead(_358)<br/>StorageDead(_357)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>_531 = const _<br/>_384 = &amp;(*_531)<br/>_383 = &amp;(*_384)<br/>_382 = move _383 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_383)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>_392 = &amp;_337<br/>_391 = &amp;(*_392)<br/></td></tr><tr><td align="left">_390 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _391)</td></tr></table>>];
    bb164__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_370)<br/>_370 = ((_358 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_372)<br/>_372 = _370<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _372)</td></tr></table>>];
    bb165__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/>StorageDead(_370)<br/>StorageDead(_362)<br/>StorageDead(_361)<br/>StorageDead(_358)<br/>StorageDead(_357)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>_397 = &amp;(*_34)<br/></td></tr><tr><td align="left">_396 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _397)</td></tr></table>>];
    bb167__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_397)<br/>_395 = &amp;(((*_396).1: state::perp_market::AMM).43: u64)<br/>_394 = &amp;(*_395)<br/></td></tr><tr><td align="left">_393 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _394)</td></tr></table>>];
    bb168__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_400 = &amp;_340<br/>_399 = &amp;(*_400)<br/></td></tr><tr><td align="left">_398 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _399)</td></tr></table>>];
    bb169__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>_405 = &amp;(*_34)<br/></td></tr><tr><td align="left">_404 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _405)</td></tr></table>>];
    bb170__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>_403 = &amp;(((*_404).1: state::perp_market::AMM).44: u64)<br/>_402 = &amp;(*_403)<br/></td></tr><tr><td align="left">_401 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _402)</td></tr></table>>];
    bb171__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = &amp;_343<br/>_407 = &amp;(*_408)<br/></td></tr><tr><td align="left">_406 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _407)</td></tr></table>>];
    bb172__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>_413 = &amp;(*_34)<br/></td></tr><tr><td align="left">_412 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _413)</td></tr></table>>];
    bb173__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>_411 = &amp;(((*_412).1: state::perp_market::AMM).62: i64)<br/>_410 = &amp;(*_411)<br/></td></tr><tr><td align="left">_409 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _410)</td></tr></table>>];
    bb174__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>_389 = [move _390, move _393, move _398, move _401, move _406, move _409]<br/>StorageDead(_409)<br/>StorageDead(_406)<br/>StorageDead(_401)<br/>StorageDead(_398)<br/>StorageDead(_393)<br/>StorageDead(_390)<br/>_388 = &amp;_389<br/>_387 = &amp;(*_388)<br/>_386 = move _387 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_387)<br/></td></tr><tr><td align="left">_381 = Arguments::&lt;'_&gt;::new_v1(move _382, move _386)</td></tr></table>>];
    bb175__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">_380 = format(move _381)</td></tr></table>>];
    bb176__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>StorageDead(_412)<br/>StorageDead(_411)<br/>StorageDead(_408)<br/>StorageDead(_404)<br/>StorageDead(_403)<br/>StorageDead(_400)<br/>StorageDead(_396)<br/>StorageDead(_395)<br/>StorageDead(_392)<br/>StorageDead(_389)<br/>StorageDead(_388)<br/>StorageDead(_384)<br/>_379 = move _380<br/>StorageDead(_380)<br/>_378 = &amp;_379<br/>_377 = &amp;(*_378)<br/></td></tr><tr><td align="left">_376 = &lt;String as Deref&gt;::deref(move _377)</td></tr></table>>];
    bb177__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">_375 = &amp;(*_376)<br/>StorageDead(_377)<br/></td></tr><tr><td align="left">_374 = solana_program::log::sol_log(move _375)</td></tr></table>>];
    bb178__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/></td></tr><tr><td align="left">drop(_379)</td></tr></table>>];
    bb179__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/>StorageDead(_378)<br/>StorageDead(_376)<br/>StorageDead(_374)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_418 = &amp;(*_34)<br/></td></tr><tr><td align="left">_417 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _418)</td></tr></table>>];
    bb180__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>_416 = (((*_417).1: state::perp_market::AMM).43: u64)<br/>StorageLive(_419)<br/>_419 = _337<br/>_415 = Eq(move _416, move _419)<br/></td></tr><tr><td align="left">switchInt(move _415)</td></tr></table>>];
    bb181__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_423 = &amp;(*_34)<br/></td></tr><tr><td align="left">_422 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _423)</td></tr></table>>];
    bb183__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>_421 = (((*_422).1: state::perp_market::AMM).44: u64)<br/>StorageLive(_424)<br/>_424 = _340<br/>_420 = Eq(move _421, move _424)<br/></td></tr><tr><td align="left">switchInt(move _420)</td></tr></table>>];
    bb184__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_422)<br/>StorageDead(_421)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>_434 = &amp;(*_34)<br/></td></tr><tr><td align="left">_433 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _434)</td></tr></table>>];
    bb185__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/>_432 = (((*_433).1: state::perp_market::AMM).62: i64)<br/>StorageLive(_435)<br/>_435 = _343<br/></td></tr><tr><td align="left">_431 = &lt;i64 as SafeMath&gt;::safe_sub(move _432, move _435)</td></tr></table>>];
    bb186__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_432)<br/></td></tr><tr><td align="left">_430 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _431)</td></tr></table>>];
    bb187__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>_436 = discriminant(_430)<br/></td></tr><tr><td align="left">switchInt(move _436)</td></tr></table>>];
    bb188__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_440)<br/>_440 = ((_430 as Continue).0: i64)<br/>_429 = _440<br/>StorageDead(_440)<br/>_428 = Ge(move _429, const 60_i64)<br/></td></tr><tr><td align="left">switchInt(move _428)</td></tr></table>>];
    bb189__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_437)<br/>_437 = ((_430 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_439)<br/>_439 = _437<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _439)</td></tr></table>>];
    bb190__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageDead(_437)<br/>StorageDead(_433)<br/>StorageDead(_430)<br/>StorageDead(_429)<br/>StorageDead(_428)<br/>StorageDead(_427)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_430)<br/>StorageDead(_429)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_430)<br/>StorageDead(_429)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>_443 = _272<br/></td></tr><tr><td align="left">_442 = Option::&lt;u64&gt;::unwrap_or(move _443, const 0_u64)</td></tr></table>>];
    bb193__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>StorageLive(_444)<br/>_444 = _337<br/>_441 = Eq(move _442, move _444)<br/></td></tr><tr><td align="left">switchInt(move _441)</td></tr></table>>];
    bb194__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageDead(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageDead(_442)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>_447 = _283<br/></td></tr><tr><td align="left">_446 = Option::&lt;u64&gt;::unwrap_or(move _447, const 0_u64)</td></tr></table>>];
    bb196__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageLive(_448)<br/>_448 = _340<br/>_445 = Eq(move _446, move _448)<br/></td></tr><tr><td align="left">switchInt(move _445)</td></tr></table>>];
    bb197__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_446)<br/>StorageLive(_449)<br/>_449 = ()<br/>_427 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _449)<br/>StorageDead(_449)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb198__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_446)<br/>StorageLive(_450)<br/>_450 = error::ErrorCode::CantUpdatePerpBidAskTwap<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>StorageLive(_457)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>_530 = const _<br/>_461 = &amp;(*_530)<br/>_460 = &amp;(*_461)<br/>_459 = move _460 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_460)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>_469 = &amp;_450<br/>_468 = &amp;(*_469)<br/></td></tr><tr><td align="left">_467 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _468)</td></tr></table>>];
    bb199__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>_466 = [move _467]<br/>StorageDead(_467)<br/>_465 = &amp;_466<br/>_464 = &amp;(*_465)<br/>_463 = move _464 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_464)<br/></td></tr><tr><td align="left">_458 = Arguments::&lt;'_&gt;::new_v1(move _459, move _463)</td></tr></table>>];
    bb200__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageDead(_459)<br/></td></tr><tr><td align="left">_457 = format(move _458)</td></tr></table>>];
    bb201__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>StorageDead(_469)<br/>StorageDead(_466)<br/>StorageDead(_465)<br/>StorageDead(_461)<br/>_456 = move _457<br/>StorageDead(_457)<br/>_455 = &amp;_456<br/>_454 = &amp;(*_455)<br/></td></tr><tr><td align="left">_453 = &lt;String as Deref&gt;::deref(move _454)</td></tr></table>>];
    bb202__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">_452 = &amp;(*_453)<br/>StorageDead(_454)<br/></td></tr><tr><td align="left">_451 = solana_program::log::sol_log(move _452)</td></tr></table>>];
    bb203__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/></td></tr><tr><td align="left">drop(_456)</td></tr></table>>];
    bb204__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageDead(_455)<br/>StorageDead(_453)<br/>StorageDead(_451)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>StorageLive(_480)<br/>_529 = const _<br/>_480 = &amp;(*_529)<br/>_479 = &amp;(*_480)<br/>_478 = move _479 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_479)<br/></td></tr><tr><td align="left">_477 = Arguments::&lt;'_&gt;::new_const(move _478)</td></tr></table>>];
    bb205__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/></td></tr><tr><td align="left">_476 = format(move _477)</td></tr></table>>];
    bb206__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>StorageDead(_480)<br/>_475 = move _476<br/>StorageDead(_476)<br/>_474 = &amp;_475<br/>_473 = &amp;(*_474)<br/></td></tr><tr><td align="left">_472 = &lt;String as Deref&gt;::deref(move _473)</td></tr></table>>];
    bb207__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">_471 = &amp;(*_472)<br/>StorageDead(_473)<br/></td></tr><tr><td align="left">_470 = solana_program::log::sol_log(move _471)</td></tr></table>>];
    bb208__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/></td></tr><tr><td align="left">drop(_475)</td></tr></table>>];
    bb209__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_474)<br/>StorageDead(_472)<br/>StorageDead(_470)<br/>StorageLive(_482)<br/>_482 = _450<br/>_427 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _482)<br/>StorageDead(_482)<br/>StorageDead(_450)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb210__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_441)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">_426 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _427)</td></tr></table>>];
    bb211__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>_483 = discriminant(_426)<br/></td></tr><tr><td align="left">switchInt(move _483)</td></tr></table>>];
    bb212__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageLive(_487)<br/>_487 = ((_426 as Continue).0: ())<br/>_425 = _487<br/>StorageDead(_487)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>_414 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageLive(_484)<br/>_484 = ((_426 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_486)<br/>_486 = _484<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _486)</td></tr></table>>];
    bb214__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>StorageDead(_484)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_422)<br/>StorageDead(_421)<br/>_414 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>_550 = deref_copy (*_56)<br/>_602 = (((_550.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_494 = &amp;(*_602)<br/></td></tr><tr><td align="left">_493 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _494)</td></tr></table>>];
    bb217__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">_492 = &amp;(*_493)<br/>StorageDead(_494)<br/></td></tr><tr><td align="left">_491 = state::state::State::funding_paused(move _492)</td></tr></table>>];
    bb218__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/></td></tr><tr><td align="left">_490 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _491)</td></tr></table>>];
    bb219__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_495 = discriminant(_490)<br/></td></tr><tr><td align="left">switchInt(move _495)</td></tr></table>>];
    bb220__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_499)<br/>_499 = ((_490 as Continue).0: bool)<br/>_489 = _499<br/>StorageDead(_499)<br/></td></tr><tr><td align="left">switchInt(move _489)</td></tr></table>>];
    bb221__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_496)<br/>_496 = ((_490 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_498)<br/>_498 = _496<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _498)</td></tr></table>>];
    bb222__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_498)<br/>StorageDead(_496)<br/>StorageDead(_493)<br/>StorageDead(_490)<br/>StorageDead(_489)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_490)<br/>_488 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_490)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>_502 = &amp;(*_34)<br/></td></tr><tr><td align="left">_501 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _502)</td></tr></table>>];
    bb225__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">_500 = &amp;(*_501)<br/>StorageDead(_502)<br/>StorageLive(_503)<br/>_503 = PerpOperation::UpdateFunding<br/></td></tr><tr><td align="left">_488 = PerpMarket::is_operation_paused(move _500, move _503)</td></tr></table>>];
    bb226__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>StorageDead(_501)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>_509 = &amp;(*_34)<br/></td></tr><tr><td align="left">_508 = &lt;RefMut&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _509)</td></tr></table>>];
    bb228__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_509)<br/>_507 = ((*_508).21: u16)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>_512 = &amp;mut (*_34)<br/></td></tr><tr><td align="left">_511 = &lt;RefMut&lt;'_, PerpMarket&gt; as DerefMut&gt;::deref_mut(move _512)</td></tr></table>>];
    bb229__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">_510 = &amp;mut (*_511)<br/>StorageDead(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>_514 = &amp;mut _57<br/>_513 = &amp;mut (*_514)<br/>StorageLive(_515)<br/>_515 = _54<br/>StorageLive(_516)<br/>_516 = _55<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>_551 = deref_copy (*_56)<br/>_603 = (((_551.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_520 = &amp;(*_603)<br/></td></tr><tr><td align="left">_519 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _520)</td></tr></table>>];
    bb230__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_520)<br/>_518 = &amp;((*_519).7: state::state::OracleGuardRails)<br/>_517 = &amp;(*_518)<br/>StorageLive(_521)<br/>_521 = _488<br/>StorageLive(_522)<br/>_522 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">_506 = controller::funding::update_funding_rate(move _507, move _510, move _513, move _515, move _516, move _517, move _521, move _522)</td></tr></table>>];
    bb231__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/>StorageDead(_521)<br/>StorageDead(_517)<br/>StorageDead(_516)<br/>StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_510)<br/>StorageDead(_507)<br/></td></tr><tr><td align="left">_505 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _506)</td></tr></table>>];
    bb232__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/>_523 = discriminant(_505)<br/></td></tr><tr><td align="left">switchInt(move _523)</td></tr></table>>];
    bb233__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageLive(_527)<br/>_527 = ((_505 as Continue).0: bool)<br/>_504 = _527<br/>StorageDead(_527)<br/>StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_514)<br/>StorageDead(_511)<br/>StorageDead(_508)<br/>StorageDead(_505)<br/>StorageDead(_504)<br/>StorageLive(_528)<br/>_528 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _528)<br/>StorageDead(_528)<br/>StorageDead(_488)<br/>StorageDead(_346)<br/>StorageDead(_343)<br/>StorageDead(_340)<br/>StorageDead(_337)<br/>StorageDead(_283)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">drop(_255)</td></tr></table>>];
    bb234__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageLive(_524)<br/>_524 = ((_505 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_526)<br/>_526 = _524<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _526)</td></tr></table>>];
    bb235__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>StorageDead(_524)<br/>StorageDead(_519)<br/>StorageDead(_518)<br/>StorageDead(_514)<br/>StorageDead(_511)<br/>StorageDead(_508)<br/>StorageDead(_505)<br/>StorageDead(_504)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb236__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">drop(_254)</td></tr></table>>];
    bb237__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_243)<br/></td></tr><tr><td align="left">drop(_234)</td></tr></table>>];
    bb238__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/>StorageDead(_195)<br/>StorageDead(_180)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb239__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb240__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb241__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb243__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_425)<br/>StorageDead(_420)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageDead(_343)<br/>StorageDead(_340)<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/></td></tr><tr><td align="left">drop(_255)</td></tr></table>>];
    bb247__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/></td></tr><tr><td align="left">drop(_254)</td></tr></table>>];
    bb248__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/></td></tr><tr><td align="left">drop(_234)</td></tr></table>>];
    bb250__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_231)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb254__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb255__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb256__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb257__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb258__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left">return</td></tr></table>>];
    bb260__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">260 (cleanup)</td></tr><tr><td align="left">drop(_475)</td></tr></table>>];
    bb261__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">261 (cleanup)</td></tr><tr><td align="left">drop(_456)</td></tr></table>>];
    bb262__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">262 (cleanup)</td></tr><tr><td align="left">drop(_379)</td></tr></table>>];
    bb263__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">263 (cleanup)</td></tr><tr><td align="left">drop(_299)</td></tr></table>>];
    bb264__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">264 (cleanup)</td></tr><tr><td align="left">drop(_255)</td></tr></table>>];
    bb265__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">265 (cleanup)</td></tr><tr><td align="left">drop(_254)</td></tr></table>>];
    bb266__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">266 (cleanup)</td></tr><tr><td align="left">drop(_234)</td></tr></table>>];
    bb267__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">267 (cleanup)</td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb268__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">268 (cleanup)</td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb269__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">269 (cleanup)</td></tr><tr><td align="left">drop(_96)</td></tr></table>>];
    bb270__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">270 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb271__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">271 (cleanup)</td></tr><tr><td align="left">drop(_57)</td></tr></table>>];
    bb272__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">272 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb273__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">273 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb274__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">274 (cleanup)</td></tr><tr><td align="left" balign="left">_589 = discriminant(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">275 (cleanup)</td></tr><tr><td align="left" balign="left">_590 = discriminant(_235)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">276 (cleanup)</td></tr><tr><td align="left" balign="left">_591 = discriminant(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">277 (cleanup)</td></tr><tr><td align="left" balign="left">_592 = discriminant(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">278 (cleanup)</td></tr><tr><td align="left" balign="left">_593 = discriminant(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">279 (cleanup)</td></tr><tr><td align="left" balign="left">_594 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">280 (cleanup)</td></tr><tr><td align="left" balign="left">_595 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">281 (cleanup)</td></tr><tr><td align="left" balign="left">_596 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_9312 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">282 (cleanup)</td></tr><tr><td align="left" balign="left">_597 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9312 -> bb1__0_9312 [label="return"];
    bb1__0_9312 -> bb2__0_9312 [label="return"];
    bb1__0_9312 -> bb273__0_9312 [label="unwind"];
    bb2__0_9312 -> bb3__0_9312 [label="0"];
    bb2__0_9312 -> bb5__0_9312 [label="1"];
    bb2__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb3__0_9312 -> bb7__0_9312 [label="return"];
    bb5__0_9312 -> bb6__0_9312 [label="return"];
    bb5__0_9312 -> bb282__0_9312 [label="unwind"];
    bb6__0_9312 -> bb259__0_9312 [label=""];
    bb7__0_9312 -> bb8__0_9312 [label="return"];
    bb7__0_9312 -> bb273__0_9312 [label="unwind"];
    bb8__0_9312 -> bb9__0_9312 [label="0"];
    bb8__0_9312 -> bb10__0_9312 [label="1"];
    bb8__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb9__0_9312 -> bb12__0_9312 [label="return"];
    bb10__0_9312 -> bb11__0_9312 [label="return"];
    bb10__0_9312 -> bb281__0_9312 [label="unwind"];
    bb11__0_9312 -> bb259__0_9312 [label=""];
    bb12__0_9312 -> bb13__0_9312 [label="return"];
    bb12__0_9312 -> bb273__0_9312 [label="unwind"];
    bb13__0_9312 -> bb14__0_9312 [label="0"];
    bb13__0_9312 -> bb15__0_9312 [label="1"];
    bb13__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb14__0_9312 -> bb17__0_9312 [label="return"];
    bb15__0_9312 -> bb16__0_9312 [label="return"];
    bb15__0_9312 -> bb280__0_9312 [label="unwind"];
    bb16__0_9312 -> bb259__0_9312 [label=""];
    bb17__0_9312 -> bb18__0_9312 [label="return"];
    bb17__0_9312 -> bb273__0_9312 [label="unwind"];
    bb18__0_9312 -> bb19__0_9312 [label="return"];
    bb18__0_9312 -> bb273__0_9312 [label="unwind"];
    bb19__0_9312 -> bb20__0_9312 [label="0"];
    bb19__0_9312 -> bb21__0_9312 [label="1"];
    bb19__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb20__0_9312 -> bb23__0_9312 [label="return"];
    bb20__0_9312 -> bb272__0_9312 [label="unwind"];
    bb21__0_9312 -> bb22__0_9312 [label="return"];
    bb21__0_9312 -> bb279__0_9312 [label="unwind"];
    bb22__0_9312 -> bb258__0_9312 [label=""];
    bb23__0_9312 -> bb24__0_9312 [label="return"];
    bb23__0_9312 -> bb272__0_9312 [label="unwind"];
    bb24__0_9312 -> bb25__0_9312 [label="0"];
    bb24__0_9312 -> bb26__0_9312 [label="1"];
    bb24__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb25__0_9312 -> bb28__0_9312 [label="return"];
    bb25__0_9312 -> bb272__0_9312 [label="unwind"];
    bb26__0_9312 -> bb27__0_9312 [label="return"];
    bb26__0_9312 -> bb278__0_9312 [label="unwind"];
    bb27__0_9312 -> bb257__0_9312 [label=""];
    bb28__0_9312 -> bb29__0_9312 [label="return"];
    bb28__0_9312 -> bb272__0_9312 [label="unwind"];
    bb29__0_9312 -> bb30__0_9312 [label="return"];
    bb29__0_9312 -> bb272__0_9312 [label="unwind"];
    bb30__0_9312 -> bb31__0_9312 [label="0"];
    bb30__0_9312 -> bb32__0_9312 [label="1"];
    bb30__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb31__0_9312 -> bb34__0_9312 [label="return"];
    bb31__0_9312 -> bb271__0_9312 [label="unwind"];
    bb32__0_9312 -> bb33__0_9312 [label="return"];
    bb32__0_9312 -> bb277__0_9312 [label="unwind"];
    bb33__0_9312 -> bb256__0_9312 [label=""];
    bb34__0_9312 -> bb35__0_9312 [label="return"];
    bb34__0_9312 -> bb271__0_9312 [label="unwind"];
    bb35__0_9312 -> bb36__0_9312 [label="return"];
    bb35__0_9312 -> bb271__0_9312 [label="unwind"];
    bb36__0_9312 -> bb37__0_9312 [label="0"];
    bb36__0_9312 -> bb38__0_9312 [label="1"];
    bb36__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb37__0_9312 -> bb40__0_9312 [label="return"];
    bb37__0_9312 -> bb270__0_9312 [label="unwind"];
    bb38__0_9312 -> bb39__0_9312 [label="return"];
    bb38__0_9312 -> bb276__0_9312 [label="unwind"];
    bb39__0_9312 -> bb255__0_9312 [label=""];
    bb40__0_9312 -> bb41__0_9312 [label="0"];
    bb40__0_9312 -> bb42__0_9312 [label="otherwise"];
    bb41__0_9312 -> bb50__0_9312 [label=""];
    bb42__0_9312 -> bb43__0_9312 [label="return"];
    bb42__0_9312 -> bb270__0_9312 [label="unwind"];
    bb43__0_9312 -> bb44__0_9312 [label="return"];
    bb43__0_9312 -> bb270__0_9312 [label="unwind"];
    bb44__0_9312 -> bb45__0_9312 [label="return"];
    bb44__0_9312 -> bb270__0_9312 [label="unwind"];
    bb45__0_9312 -> bb46__0_9312 [label="return"];
    bb45__0_9312 -> bb269__0_9312 [label="unwind"];
    bb46__0_9312 -> bb47__0_9312 [label="return"];
    bb46__0_9312 -> bb269__0_9312 [label="unwind"];
    bb47__0_9312 -> bb48__0_9312 [label="return"];
    bb47__0_9312 -> bb270__0_9312 [label="unwind"];
    bb48__0_9312 -> bb49__0_9312 [label="return"];
    bb48__0_9312 -> bb270__0_9312 [label="unwind"];
    bb49__0_9312 -> bb50__0_9312 [label=""];
    bb50__0_9312 -> bb51__0_9312 [label="return"];
    bb50__0_9312 -> bb270__0_9312 [label="unwind"];
    bb51__0_9312 -> bb52__0_9312 [label="0"];
    bb51__0_9312 -> bb53__0_9312 [label="1"];
    bb51__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb52__0_9312 -> bb55__0_9312 [label="success"];
    bb52__0_9312 -> bb270__0_9312 [label="unwind"];
    bb53__0_9312 -> bb54__0_9312 [label="return"];
    bb53__0_9312 -> bb270__0_9312 [label="unwind"];
    bb54__0_9312 -> bb254__0_9312 [label=""];
    bb55__0_9312 -> bb56__0_9312 [label="return"];
    bb55__0_9312 -> bb270__0_9312 [label="unwind"];
    bb56__0_9312 -> bb58__0_9312 [label="0"];
    bb56__0_9312 -> bb57__0_9312 [label="otherwise"];
    bb57__0_9312 -> bb73__0_9312 [label=""];
    bb58__0_9312 -> bb59__0_9312 [label="return"];
    bb58__0_9312 -> bb270__0_9312 [label="unwind"];
    bb59__0_9312 -> bb60__0_9312 [label="return"];
    bb59__0_9312 -> bb270__0_9312 [label="unwind"];
    bb60__0_9312 -> bb61__0_9312 [label="return"];
    bb60__0_9312 -> bb270__0_9312 [label="unwind"];
    bb61__0_9312 -> bb62__0_9312 [label="return"];
    bb61__0_9312 -> bb268__0_9312 [label="unwind"];
    bb62__0_9312 -> bb63__0_9312 [label="return"];
    bb62__0_9312 -> bb268__0_9312 [label="unwind"];
    bb63__0_9312 -> bb64__0_9312 [label="return"];
    bb63__0_9312 -> bb270__0_9312 [label="unwind"];
    bb64__0_9312 -> bb65__0_9312 [label="return"];
    bb64__0_9312 -> bb270__0_9312 [label="unwind"];
    bb65__0_9312 -> bb66__0_9312 [label="return"];
    bb65__0_9312 -> bb270__0_9312 [label="unwind"];
    bb66__0_9312 -> bb67__0_9312 [label="return"];
    bb66__0_9312 -> bb270__0_9312 [label="unwind"];
    bb67__0_9312 -> bb68__0_9312 [label="return"];
    bb67__0_9312 -> bb270__0_9312 [label="unwind"];
    bb68__0_9312 -> bb69__0_9312 [label="return"];
    bb68__0_9312 -> bb270__0_9312 [label="unwind"];
    bb69__0_9312 -> bb70__0_9312 [label="return"];
    bb69__0_9312 -> bb267__0_9312 [label="unwind"];
    bb70__0_9312 -> bb71__0_9312 [label="return"];
    bb70__0_9312 -> bb267__0_9312 [label="unwind"];
    bb71__0_9312 -> bb72__0_9312 [label="return"];
    bb71__0_9312 -> bb270__0_9312 [label="unwind"];
    bb72__0_9312 -> bb73__0_9312 [label=""];
    bb73__0_9312 -> bb74__0_9312 [label="return"];
    bb73__0_9312 -> bb270__0_9312 [label="unwind"];
    bb74__0_9312 -> bb75__0_9312 [label="0"];
    bb74__0_9312 -> bb76__0_9312 [label="1"];
    bb74__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb75__0_9312 -> bb78__0_9312 [label="return"];
    bb75__0_9312 -> bb270__0_9312 [label="unwind"];
    bb76__0_9312 -> bb77__0_9312 [label="return"];
    bb76__0_9312 -> bb270__0_9312 [label="unwind"];
    bb77__0_9312 -> bb253__0_9312 [label=""];
    bb78__0_9312 -> bb79__0_9312 [label="return"];
    bb78__0_9312 -> bb270__0_9312 [label="unwind"];
    bb79__0_9312 -> bb80__0_9312 [label="return"];
    bb79__0_9312 -> bb270__0_9312 [label="unwind"];
    bb80__0_9312 -> bb81__0_9312 [label="return"];
    bb80__0_9312 -> bb270__0_9312 [label="unwind"];
    bb81__0_9312 -> bb82__0_9312 [label="0"];
    bb81__0_9312 -> bb83__0_9312 [label="1"];
    bb81__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb82__0_9312 -> bb85__0_9312 [label="return"];
    bb82__0_9312 -> bb270__0_9312 [label="unwind"];
    bb83__0_9312 -> bb84__0_9312 [label="return"];
    bb83__0_9312 -> bb270__0_9312 [label="unwind"];
    bb84__0_9312 -> bb252__0_9312 [label=""];
    bb85__0_9312 -> bb86__0_9312 [label="return"];
    bb85__0_9312 -> bb270__0_9312 [label="unwind"];
    bb86__0_9312 -> bb87__0_9312 [label="return"];
    bb86__0_9312 -> bb270__0_9312 [label="unwind"];
    bb87__0_9312 -> bb88__0_9312 [label="return"];
    bb87__0_9312 -> bb270__0_9312 [label="unwind"];
    bb88__0_9312 -> bb89__0_9312 [label="0"];
    bb88__0_9312 -> bb90__0_9312 [label="1"];
    bb88__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb89__0_9312 -> bb92__0_9312 [label="return"];
    bb89__0_9312 -> bb270__0_9312 [label="unwind"];
    bb90__0_9312 -> bb91__0_9312 [label="return"];
    bb90__0_9312 -> bb270__0_9312 [label="unwind"];
    bb91__0_9312 -> bb251__0_9312 [label=""];
    bb92__0_9312 -> bb93__0_9312 [label="return"];
    bb92__0_9312 -> bb270__0_9312 [label="unwind"];
    bb93__0_9312 -> bb94__0_9312 [label="return"];
    bb93__0_9312 -> bb270__0_9312 [label="unwind"];
    bb94__0_9312 -> bb95__0_9312 [label="return"];
    bb94__0_9312 -> bb270__0_9312 [label="unwind"];
    bb95__0_9312 -> bb96__0_9312 [label="0"];
    bb95__0_9312 -> bb97__0_9312 [label="1"];
    bb95__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb96__0_9312 -> bb99__0_9312 [label="return"];
    bb96__0_9312 -> bb270__0_9312 [label="unwind"];
    bb97__0_9312 -> bb98__0_9312 [label="return"];
    bb97__0_9312 -> bb270__0_9312 [label="unwind"];
    bb98__0_9312 -> bb251__0_9312 [label=""];
    bb99__0_9312 -> bb100__0_9312 [label="return"];
    bb99__0_9312 -> bb270__0_9312 [label="unwind"];
    bb100__0_9312 -> bb101__0_9312 [label="return"];
    bb100__0_9312 -> bb270__0_9312 [label="unwind"];
    bb101__0_9312 -> bb102__0_9312 [label="return"];
    bb101__0_9312 -> bb270__0_9312 [label="unwind"];
    bb102__0_9312 -> bb103__0_9312 [label="0"];
    bb102__0_9312 -> bb104__0_9312 [label="1"];
    bb102__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb103__0_9312 -> bb106__0_9312 [label="return"];
    bb103__0_9312 -> bb266__0_9312 [label="unwind"];
    bb104__0_9312 -> bb105__0_9312 [label="return"];
    bb104__0_9312 -> bb275__0_9312 [label="unwind"];
    bb105__0_9312 -> bb250__0_9312 [label=""];
    bb106__0_9312 -> bb107__0_9312 [label="return"];
    bb106__0_9312 -> bb266__0_9312 [label="unwind"];
    bb107__0_9312 -> bb108__0_9312 [label="return"];
    bb107__0_9312 -> bb266__0_9312 [label="unwind"];
    bb108__0_9312 -> bb109__0_9312 [label="0"];
    bb108__0_9312 -> bb110__0_9312 [label="1"];
    bb108__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb109__0_9312 -> bb112__0_9312 [label="return"];
    bb109__0_9312 -> bb266__0_9312 [label="unwind"];
    bb110__0_9312 -> bb111__0_9312 [label="return"];
    bb110__0_9312 -> bb266__0_9312 [label="unwind"];
    bb111__0_9312 -> bb249__0_9312 [label=""];
    bb112__0_9312 -> bb113__0_9312 [label="return"];
    bb112__0_9312 -> bb266__0_9312 [label="unwind"];
    bb113__0_9312 -> bb114__0_9312 [label="return"];
    bb113__0_9312 -> bb266__0_9312 [label="unwind"];
    bb114__0_9312 -> bb115__0_9312 [label="0"];
    bb114__0_9312 -> bb116__0_9312 [label="1"];
    bb114__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb115__0_9312 -> bb118__0_9312 [label="return"];
    bb115__0_9312 -> bb264__0_9312 [label="unwind"];
    bb116__0_9312 -> bb117__0_9312 [label="return"];
    bb116__0_9312 -> bb274__0_9312 [label="unwind"];
    bb117__0_9312 -> bb249__0_9312 [label=""];
    bb118__0_9312 -> bb119__0_9312 [label="return"];
    bb118__0_9312 -> bb264__0_9312 [label="unwind"];
    bb119__0_9312 -> bb120__0_9312 [label="0"];
    bb119__0_9312 -> bb121__0_9312 [label="1"];
    bb119__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb120__0_9312 -> bb123__0_9312 [label="return"];
    bb120__0_9312 -> bb264__0_9312 [label="unwind"];
    bb121__0_9312 -> bb122__0_9312 [label="return"];
    bb121__0_9312 -> bb264__0_9312 [label="unwind"];
    bb122__0_9312 -> bb246__0_9312 [label=""];
    bb123__0_9312 -> bb124__0_9312 [label="return"];
    bb123__0_9312 -> bb264__0_9312 [label="unwind"];
    bb124__0_9312 -> bb125__0_9312 [label="0"];
    bb124__0_9312 -> bb126__0_9312 [label="1"];
    bb124__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb125__0_9312 -> bb128__0_9312 [label="return"];
    bb125__0_9312 -> bb264__0_9312 [label="unwind"];
    bb126__0_9312 -> bb127__0_9312 [label="return"];
    bb126__0_9312 -> bb264__0_9312 [label="unwind"];
    bb127__0_9312 -> bb245__0_9312 [label=""];
    bb128__0_9312 -> bb129__0_9312 [label="return"];
    bb128__0_9312 -> bb264__0_9312 [label="unwind"];
    bb129__0_9312 -> bb130__0_9312 [label="return"];
    bb129__0_9312 -> bb264__0_9312 [label="unwind"];
    bb130__0_9312 -> bb131__0_9312 [label="return"];
    bb130__0_9312 -> bb264__0_9312 [label="unwind"];
    bb131__0_9312 -> bb132__0_9312 [label="return"];
    bb131__0_9312 -> bb263__0_9312 [label="unwind"];
    bb132__0_9312 -> bb133__0_9312 [label="return"];
    bb132__0_9312 -> bb263__0_9312 [label="unwind"];
    bb133__0_9312 -> bb134__0_9312 [label="return"];
    bb133__0_9312 -> bb264__0_9312 [label="unwind"];
    bb134__0_9312 -> bb135__0_9312 [label="return"];
    bb134__0_9312 -> bb264__0_9312 [label="unwind"];
    bb135__0_9312 -> bb136__0_9312 [label="return"];
    bb135__0_9312 -> bb264__0_9312 [label="unwind"];
    bb136__0_9312 -> bb149__0_9312 [label="0"];
    bb136__0_9312 -> bb137__0_9312 [label="otherwise"];
    bb137__0_9312 -> bb138__0_9312 [label="return"];
    bb137__0_9312 -> bb264__0_9312 [label="unwind"];
    bb138__0_9312 -> bb139__0_9312 [label="return"];
    bb138__0_9312 -> bb264__0_9312 [label="unwind"];
    bb139__0_9312 -> bb148__0_9312 [label="0"];
    bb139__0_9312 -> bb140__0_9312 [label="otherwise"];
    bb140__0_9312 -> bb141__0_9312 [label="return"];
    bb140__0_9312 -> bb264__0_9312 [label="unwind"];
    bb141__0_9312 -> bb143__0_9312 [label="0"];
    bb141__0_9312 -> bb142__0_9312 [label="otherwise"];
    bb142__0_9312 -> bb145__0_9312 [label=""];
    bb143__0_9312 -> bb144__0_9312 [label="return"];
    bb143__0_9312 -> bb264__0_9312 [label="unwind"];
    bb144__0_9312 -> bb147__0_9312 [label="0"];
    bb144__0_9312 -> bb145__0_9312 [label="otherwise"];
    bb145__0_9312 -> bb146__0_9312 [label="return"];
    bb145__0_9312 -> bb264__0_9312 [label="unwind"];
    bb146__0_9312 -> bb245__0_9312 [label=""];
    bb147__0_9312 -> bb150__0_9312 [label=""];
    bb148__0_9312 -> bb150__0_9312 [label=""];
    bb149__0_9312 -> bb150__0_9312 [label=""];
    bb150__0_9312 -> bb151__0_9312 [label="return"];
    bb150__0_9312 -> bb264__0_9312 [label="unwind"];
    bb151__0_9312 -> bb152__0_9312 [label="return"];
    bb151__0_9312 -> bb264__0_9312 [label="unwind"];
    bb152__0_9312 -> bb153__0_9312 [label="return"];
    bb152__0_9312 -> bb264__0_9312 [label="unwind"];
    bb153__0_9312 -> bb154__0_9312 [label="return"];
    bb153__0_9312 -> bb264__0_9312 [label="unwind"];
    bb154__0_9312 -> bb155__0_9312 [label="return"];
    bb154__0_9312 -> bb264__0_9312 [label="unwind"];
    bb155__0_9312 -> bb156__0_9312 [label="return"];
    bb155__0_9312 -> bb264__0_9312 [label="unwind"];
    bb156__0_9312 -> bb157__0_9312 [label="0"];
    bb156__0_9312 -> bb158__0_9312 [label="1"];
    bb156__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb157__0_9312 -> bb160__0_9312 [label="return"];
    bb157__0_9312 -> bb264__0_9312 [label="unwind"];
    bb158__0_9312 -> bb159__0_9312 [label="return"];
    bb158__0_9312 -> bb264__0_9312 [label="unwind"];
    bb159__0_9312 -> bb244__0_9312 [label=""];
    bb160__0_9312 -> bb161__0_9312 [label="return"];
    bb160__0_9312 -> bb264__0_9312 [label="unwind"];
    bb161__0_9312 -> bb162__0_9312 [label="return"];
    bb161__0_9312 -> bb264__0_9312 [label="unwind"];
    bb162__0_9312 -> bb163__0_9312 [label="0"];
    bb162__0_9312 -> bb164__0_9312 [label="1"];
    bb162__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb163__0_9312 -> bb166__0_9312 [label="return"];
    bb163__0_9312 -> bb264__0_9312 [label="unwind"];
    bb164__0_9312 -> bb165__0_9312 [label="return"];
    bb164__0_9312 -> bb264__0_9312 [label="unwind"];
    bb165__0_9312 -> bb244__0_9312 [label=""];
    bb166__0_9312 -> bb167__0_9312 [label="return"];
    bb166__0_9312 -> bb264__0_9312 [label="unwind"];
    bb167__0_9312 -> bb168__0_9312 [label="return"];
    bb167__0_9312 -> bb264__0_9312 [label="unwind"];
    bb168__0_9312 -> bb169__0_9312 [label="return"];
    bb168__0_9312 -> bb264__0_9312 [label="unwind"];
    bb169__0_9312 -> bb170__0_9312 [label="return"];
    bb169__0_9312 -> bb264__0_9312 [label="unwind"];
    bb170__0_9312 -> bb171__0_9312 [label="return"];
    bb170__0_9312 -> bb264__0_9312 [label="unwind"];
    bb171__0_9312 -> bb172__0_9312 [label="return"];
    bb171__0_9312 -> bb264__0_9312 [label="unwind"];
    bb172__0_9312 -> bb173__0_9312 [label="return"];
    bb172__0_9312 -> bb264__0_9312 [label="unwind"];
    bb173__0_9312 -> bb174__0_9312 [label="return"];
    bb173__0_9312 -> bb264__0_9312 [label="unwind"];
    bb174__0_9312 -> bb175__0_9312 [label="return"];
    bb174__0_9312 -> bb264__0_9312 [label="unwind"];
    bb175__0_9312 -> bb176__0_9312 [label="return"];
    bb175__0_9312 -> bb264__0_9312 [label="unwind"];
    bb176__0_9312 -> bb177__0_9312 [label="return"];
    bb176__0_9312 -> bb262__0_9312 [label="unwind"];
    bb177__0_9312 -> bb178__0_9312 [label="return"];
    bb177__0_9312 -> bb262__0_9312 [label="unwind"];
    bb178__0_9312 -> bb179__0_9312 [label="return"];
    bb178__0_9312 -> bb264__0_9312 [label="unwind"];
    bb179__0_9312 -> bb180__0_9312 [label="return"];
    bb179__0_9312 -> bb264__0_9312 [label="unwind"];
    bb180__0_9312 -> bb182__0_9312 [label="0"];
    bb180__0_9312 -> bb181__0_9312 [label="otherwise"];
    bb181__0_9312 -> bb184__0_9312 [label=""];
    bb182__0_9312 -> bb183__0_9312 [label="return"];
    bb182__0_9312 -> bb264__0_9312 [label="unwind"];
    bb183__0_9312 -> bb215__0_9312 [label="0"];
    bb183__0_9312 -> bb184__0_9312 [label="otherwise"];
    bb184__0_9312 -> bb185__0_9312 [label="return"];
    bb184__0_9312 -> bb264__0_9312 [label="unwind"];
    bb185__0_9312 -> bb186__0_9312 [label="return"];
    bb185__0_9312 -> bb264__0_9312 [label="unwind"];
    bb186__0_9312 -> bb187__0_9312 [label="return"];
    bb186__0_9312 -> bb264__0_9312 [label="unwind"];
    bb187__0_9312 -> bb188__0_9312 [label="0"];
    bb187__0_9312 -> bb189__0_9312 [label="1"];
    bb187__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb188__0_9312 -> bb192__0_9312 [label="0"];
    bb188__0_9312 -> bb191__0_9312 [label="otherwise"];
    bb189__0_9312 -> bb190__0_9312 [label="return"];
    bb189__0_9312 -> bb264__0_9312 [label="unwind"];
    bb190__0_9312 -> bb243__0_9312 [label=""];
    bb191__0_9312 -> bb194__0_9312 [label=""];
    bb192__0_9312 -> bb193__0_9312 [label="return"];
    bb192__0_9312 -> bb264__0_9312 [label="unwind"];
    bb193__0_9312 -> bb195__0_9312 [label="0"];
    bb193__0_9312 -> bb194__0_9312 [label="otherwise"];
    bb194__0_9312 -> bb197__0_9312 [label=""];
    bb195__0_9312 -> bb196__0_9312 [label="return"];
    bb195__0_9312 -> bb264__0_9312 [label="unwind"];
    bb196__0_9312 -> bb198__0_9312 [label="0"];
    bb196__0_9312 -> bb197__0_9312 [label="otherwise"];
    bb197__0_9312 -> bb210__0_9312 [label=""];
    bb198__0_9312 -> bb199__0_9312 [label="return"];
    bb198__0_9312 -> bb264__0_9312 [label="unwind"];
    bb199__0_9312 -> bb200__0_9312 [label="return"];
    bb199__0_9312 -> bb264__0_9312 [label="unwind"];
    bb200__0_9312 -> bb201__0_9312 [label="return"];
    bb200__0_9312 -> bb264__0_9312 [label="unwind"];
    bb201__0_9312 -> bb202__0_9312 [label="return"];
    bb201__0_9312 -> bb261__0_9312 [label="unwind"];
    bb202__0_9312 -> bb203__0_9312 [label="return"];
    bb202__0_9312 -> bb261__0_9312 [label="unwind"];
    bb203__0_9312 -> bb204__0_9312 [label="return"];
    bb203__0_9312 -> bb264__0_9312 [label="unwind"];
    bb204__0_9312 -> bb205__0_9312 [label="return"];
    bb204__0_9312 -> bb264__0_9312 [label="unwind"];
    bb205__0_9312 -> bb206__0_9312 [label="return"];
    bb205__0_9312 -> bb264__0_9312 [label="unwind"];
    bb206__0_9312 -> bb207__0_9312 [label="return"];
    bb206__0_9312 -> bb260__0_9312 [label="unwind"];
    bb207__0_9312 -> bb208__0_9312 [label="return"];
    bb207__0_9312 -> bb260__0_9312 [label="unwind"];
    bb208__0_9312 -> bb209__0_9312 [label="return"];
    bb208__0_9312 -> bb264__0_9312 [label="unwind"];
    bb209__0_9312 -> bb210__0_9312 [label=""];
    bb210__0_9312 -> bb211__0_9312 [label="return"];
    bb210__0_9312 -> bb264__0_9312 [label="unwind"];
    bb211__0_9312 -> bb212__0_9312 [label="0"];
    bb211__0_9312 -> bb213__0_9312 [label="1"];
    bb211__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb212__0_9312 -> bb216__0_9312 [label=""];
    bb213__0_9312 -> bb214__0_9312 [label="return"];
    bb213__0_9312 -> bb264__0_9312 [label="unwind"];
    bb214__0_9312 -> bb243__0_9312 [label=""];
    bb215__0_9312 -> bb216__0_9312 [label=""];
    bb216__0_9312 -> bb217__0_9312 [label="return"];
    bb216__0_9312 -> bb264__0_9312 [label="unwind"];
    bb217__0_9312 -> bb218__0_9312 [label="return"];
    bb217__0_9312 -> bb264__0_9312 [label="unwind"];
    bb218__0_9312 -> bb219__0_9312 [label="return"];
    bb218__0_9312 -> bb264__0_9312 [label="unwind"];
    bb219__0_9312 -> bb220__0_9312 [label="0"];
    bb219__0_9312 -> bb221__0_9312 [label="1"];
    bb219__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb220__0_9312 -> bb224__0_9312 [label="0"];
    bb220__0_9312 -> bb223__0_9312 [label="otherwise"];
    bb221__0_9312 -> bb222__0_9312 [label="return"];
    bb221__0_9312 -> bb264__0_9312 [label="unwind"];
    bb222__0_9312 -> bb242__0_9312 [label=""];
    bb223__0_9312 -> bb227__0_9312 [label=""];
    bb224__0_9312 -> bb225__0_9312 [label="return"];
    bb224__0_9312 -> bb264__0_9312 [label="unwind"];
    bb225__0_9312 -> bb226__0_9312 [label="return"];
    bb225__0_9312 -> bb264__0_9312 [label="unwind"];
    bb226__0_9312 -> bb227__0_9312 [label=""];
    bb227__0_9312 -> bb228__0_9312 [label="return"];
    bb227__0_9312 -> bb264__0_9312 [label="unwind"];
    bb228__0_9312 -> bb229__0_9312 [label="return"];
    bb228__0_9312 -> bb264__0_9312 [label="unwind"];
    bb229__0_9312 -> bb230__0_9312 [label="return"];
    bb229__0_9312 -> bb264__0_9312 [label="unwind"];
    bb230__0_9312 -> bb231__0_9312 [label="return"];
    bb230__0_9312 -> bb264__0_9312 [label="unwind"];
    bb231__0_9312 -> bb232__0_9312 [label="return"];
    bb231__0_9312 -> bb264__0_9312 [label="unwind"];
    bb232__0_9312 -> bb233__0_9312 [label="0"];
    bb232__0_9312 -> bb234__0_9312 [label="1"];
    bb232__0_9312 -> bb4__0_9312 [label="otherwise"];
    bb233__0_9312 -> bb236__0_9312 [label="return"];
    bb233__0_9312 -> bb265__0_9312 [label="unwind"];
    bb234__0_9312 -> bb235__0_9312 [label="return"];
    bb234__0_9312 -> bb264__0_9312 [label="unwind"];
    bb235__0_9312 -> bb242__0_9312 [label=""];
    bb236__0_9312 -> bb237__0_9312 [label="return"];
    bb236__0_9312 -> bb266__0_9312 [label="unwind"];
    bb237__0_9312 -> bb238__0_9312 [label="return"];
    bb237__0_9312 -> bb270__0_9312 [label="unwind"];
    bb238__0_9312 -> bb239__0_9312 [label="return"];
    bb238__0_9312 -> bb271__0_9312 [label="unwind"];
    bb239__0_9312 -> bb240__0_9312 [label="return"];
    bb239__0_9312 -> bb272__0_9312 [label="unwind"];
    bb240__0_9312 -> bb241__0_9312 [label="return"];
    bb240__0_9312 -> bb273__0_9312 [label="unwind"];
    bb241__0_9312 -> bb259__0_9312 [label=""];
    bb242__0_9312 -> bb244__0_9312 [label=""];
    bb243__0_9312 -> bb244__0_9312 [label=""];
    bb244__0_9312 -> bb245__0_9312 [label=""];
    bb245__0_9312 -> bb246__0_9312 [label=""];
    bb246__0_9312 -> bb247__0_9312 [label="return"];
    bb246__0_9312 -> bb265__0_9312 [label="unwind"];
    bb247__0_9312 -> bb248__0_9312 [label="return"];
    bb247__0_9312 -> bb266__0_9312 [label="unwind"];
    bb248__0_9312 -> bb249__0_9312 [label=""];
    bb249__0_9312 -> bb250__0_9312 [label="return"];
    bb249__0_9312 -> bb270__0_9312 [label="unwind"];
    bb250__0_9312 -> bb251__0_9312 [label=""];
    bb251__0_9312 -> bb252__0_9312 [label=""];
    bb252__0_9312 -> bb253__0_9312 [label=""];
    bb253__0_9312 -> bb254__0_9312 [label=""];
    bb254__0_9312 -> bb255__0_9312 [label="return"];
    bb254__0_9312 -> bb271__0_9312 [label="unwind"];
    bb255__0_9312 -> bb256__0_9312 [label="return"];
    bb255__0_9312 -> bb272__0_9312 [label="unwind"];
    bb256__0_9312 -> bb257__0_9312 [label=""];
    bb257__0_9312 -> bb258__0_9312 [label="return"];
    bb257__0_9312 -> bb273__0_9312 [label="unwind"];
    bb258__0_9312 -> bb259__0_9312 [label=""];
    bb260__0_9312 -> bb264__0_9312 [label="return"];
    bb261__0_9312 -> bb264__0_9312 [label="return"];
    bb262__0_9312 -> bb264__0_9312 [label="return"];
    bb263__0_9312 -> bb264__0_9312 [label="return"];
    bb264__0_9312 -> bb265__0_9312 [label="return"];
    bb265__0_9312 -> bb266__0_9312 [label="return"];
    bb266__0_9312 -> bb270__0_9312 [label="return"];
    bb267__0_9312 -> bb270__0_9312 [label="return"];
    bb268__0_9312 -> bb270__0_9312 [label="return"];
    bb269__0_9312 -> bb270__0_9312 [label="return"];
    bb270__0_9312 -> bb271__0_9312 [label="return"];
    bb271__0_9312 -> bb272__0_9312 [label="return"];
    bb272__0_9312 -> bb273__0_9312 [label="return"];
    bb274__0_9312 -> bb266__0_9312 [label=""];
    bb275__0_9312 -> bb270__0_9312 [label=""];
    bb276__0_9312 -> bb271__0_9312 [label=""];
    bb277__0_9312 -> bb272__0_9312 [label=""];
    bb278__0_9312 -> bb272__0_9312 [label=""];
    bb279__0_9312 -> bb273__0_9312 [label=""];
    bb280__0_9312 -> bb273__0_9312 [label=""];
    bb281__0_9312 -> bb273__0_9312 [label=""];
    bb282__0_9312 -> bb273__0_9312 [label=""];
}
