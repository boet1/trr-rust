digraph Mir_0_1362 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::fill_spot_order(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::FillOrder&lt;ReErased&gt;&gt;, _2: u32, _3: u16, _4: instructions::keeper::SpotFulfillmentType) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: anchor_lang::prelude::Clock;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _7: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _12: anchor_lang::prelude::Clock;<br align="left"/>let _13: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _14: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _15: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _16: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _17: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _18: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _19: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _20: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _23: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _24: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _25: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _26: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _27: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _28: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _29: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _30: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _31: std::boxed::Box&lt;[u16], std::alloc::Global&gt;;<br align="left"/>let mut _32: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: usize;<br align="left"/>let mut _35: *mut u8;<br align="left"/>let mut _36: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _37: u16;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: anchor_lang::prelude::Clock;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _41: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _46: anchor_lang::prelude::Clock;<br align="left"/>let mut _47: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _53: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _54: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _55: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let mut _56: isize;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;)&gt;;<br align="left"/>let mut _58: std::result::Result&lt;(state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _59: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _64: (state::user_map::UserMap&lt;ReErased&gt;, state::user_map::UserStatsMap&lt;ReErased&gt;);<br align="left"/>let mut _65: state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _66: state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _67: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _68: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _69: isize;<br align="left"/>let mut _70: std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let _71: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _73: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _74: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased u16;<br align="left"/>let _76: &amp;ReErased u16;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _82: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _83: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _84: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _85: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _91: std::boxed::Box&lt;state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _92: state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _93: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _94: std::result::Result&lt;state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _95: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _96: &amp;ReErased state::state::State;<br align="left"/>let _97: &amp;ReErased state::state::State;<br align="left"/>let mut _98: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _99: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _100: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _101: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _102: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _103: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _104: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _105: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _106: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _107: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _108: i64;<br align="left"/>let mut _109: isize;<br align="left"/>let _110: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _113: state::fulfillment_params::serum::SerumFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _114: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _116: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _117: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased u16;<br align="left"/>let _119: &amp;ReErased u16;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _125: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _127: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _128: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _129: isize;<br align="left"/>let _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _131: !;<br align="left"/>let mut _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _133: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _134: std::boxed::Box&lt;state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _135: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _136: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _137: std::result::Result&lt;state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _138: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _139: &amp;ReErased state::state::State;<br align="left"/>let _140: &amp;ReErased state::state::State;<br align="left"/>let mut _141: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _142: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _143: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _144: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _145: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _146: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _147: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _148: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _149: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _150: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _151: isize;<br align="left"/>let _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _153: !;<br align="left"/>let mut _154: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _155: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _156: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _157: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _158: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _159: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _160: &amp;ReErased u16;<br align="left"/>let _161: &amp;ReErased u16;<br align="left"/>let mut _162: isize;<br align="left"/>let _163: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _164: !;<br align="left"/>let mut _165: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _166: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _167: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _168: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _169: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _170: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _171: isize;<br align="left"/>let _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _173: !;<br align="left"/>let mut _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _175: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _176: std::boxed::Box&lt;state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _177: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _178: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;&gt;;<br align="left"/>let mut _179: std::result::Result&lt;state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _180: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _181: &amp;ReErased state::state::State;<br align="left"/>let _182: &amp;ReErased state::state::State;<br align="left"/>let mut _183: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _184: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _185: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _186: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _187: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _188: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _189: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _190: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _191: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _192: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _193: i64;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let _199: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _201: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _202: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _203: &amp;ReErased u16;<br align="left"/>let _204: &amp;ReErased u16;<br align="left"/>let mut _205: isize;<br align="left"/>let _206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _207: !;<br align="left"/>let mut _208: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _209: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _210: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _211: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _212: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _213: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _214: isize;<br align="left"/>let _215: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _216: !;<br align="left"/>let mut _217: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _218: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _219: std::boxed::Box&lt;state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _220: state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;;<br align="left"/>let mut _221: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;&gt;;<br align="left"/>let mut _222: std::result::Result&lt;state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _223: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _224: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _225: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _226: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _227: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _228: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _229: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _230: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _231: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _232: isize;<br align="left"/>let _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _234: !;<br align="left"/>let mut _235: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _236: state::fulfillment_params::drift::MatchFulfillmentParams&lt;ReErased&gt;;<br align="left"/>let _237: u64;<br align="left"/>let mut _238: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _239: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _240: u32;<br align="left"/>let mut _241: &amp;ReErased state::state::State;<br align="left"/>let _242: &amp;ReErased state::state::State;<br align="left"/>let mut _243: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _244: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _245: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _246: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _247: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _248: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _249: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _250: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _251: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _252: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _253: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _254: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _255: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _256: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _257: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _258: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _259: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let _260: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _261: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let _262: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _263: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _264: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _265: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _266: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _267: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _268: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _269: &amp;ReErased mut std::boxed::Box&lt;dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased, std::alloc::Global&gt;;<br align="left"/>let mut _270: isize;<br align="left"/>let _271: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _272: !;<br align="left"/>let mut _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _274: u64;<br align="left"/>let _275: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _276: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _277: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _278: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _279: &amp;ReErased u16;<br align="left"/>let _280: &amp;ReErased u16;<br align="left"/>let mut _281: isize;<br align="left"/>let _282: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _283: !;<br align="left"/>let mut _284: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _285: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _286: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _287: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _288: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _289: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _290: isize;<br align="left"/>let _291: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _292: !;<br align="left"/>let mut _293: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _294: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _295: ();<br align="left"/>let mut _296: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _297: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _298: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _299: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _300: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _301: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _302: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _303: isize;<br align="left"/>let _304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _305: !;<br align="left"/>let mut _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _307: ();<br align="left"/>let mut _308: ();<br align="left"/>let mut _309: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _310: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _311: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _312: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _313: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _314: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _315: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _316: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _317: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _318: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _319: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _320: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _321: &amp;ReErased mut instructions::keeper::FillOrder&lt;ReErased&gt;;<br align="left"/>let mut _322: bool;<br align="left"/>let mut _323: bool;<br align="left"/>let mut _324: bool;<br align="left"/>let mut _325: bool;<br align="left"/>let mut _326: bool;<br align="left"/>let mut _327: bool;<br align="left"/>let mut _328: isize;<br align="left"/>let mut _329: isize;<br align="left"/>let mut _330: isize;<br align="left"/>let mut _331: isize;<br align="left"/>let mut _332: isize;<br align="left"/>let mut _333: isize;<br align="left"/>let mut _334: isize;<br align="left"/>let mut _335: isize;<br align="left"/>let mut _336: isize;<br align="left"/>let mut _337: isize;<br align="left"/>let mut _338: isize;<br align="left"/>let mut _339: isize;<br align="left"/>let mut _340: isize;<br align="left"/>let mut _341: isize;<br align="left"/>let mut _342: isize;<br align="left"/>let mut _343: isize;<br align="left"/>let mut _344: isize;<br align="left"/>let mut _345: isize;<br align="left"/>let mut _346: isize;<br align="left"/>let mut _347: isize;<br align="left"/>let mut _348: isize;<br align="left"/>let mut _349: isize;<br align="left"/>let mut _350: isize;<br align="left"/>let mut _351: isize;<br align="left"/>let mut _352: isize;<br align="left"/>let mut _353: isize;<br align="left"/>let mut _354: isize;<br align="left"/>let mut _355: isize;<br align="left"/>let mut _356: isize;<br align="left"/>let mut _357: isize;<br align="left"/>let mut _358: isize;<br align="left"/>let mut _359: isize;<br align="left"/>let mut _360: isize;<br align="left"/>let mut _361: isize;<br align="left"/>let mut _362: isize;<br align="left"/>let mut _363: isize;<br align="left"/>let mut _364: isize;<br align="left"/>let mut _365: isize;<br align="left"/>let mut _366: isize;<br align="left"/>let mut _367: isize;<br align="left"/>let mut _368: isize;<br align="left"/>let mut _369: isize;<br align="left"/>let mut _370: isize;<br align="left"/>let mut _371: isize;<br align="left"/>let mut _372: isize;<br align="left"/>let mut _373: isize;<br align="left"/>let mut _374: isize;<br align="left"/>let mut _375: isize;<br align="left"/>let mut _376: isize;<br align="left"/>let mut _377: isize;<br align="left"/>let mut _378: isize;<br align="left"/>let mut _379: isize;<br align="left"/>let mut _380: isize;<br align="left"/>let mut _381: isize;<br align="left"/>let mut _382: isize;<br align="left"/>let mut _383: isize;<br align="left"/>let mut _384: isize;<br align="left"/>let mut _385: isize;<br align="left"/>let mut _386: isize;<br align="left"/>let mut _387: isize;<br align="left"/>let mut _388: isize;<br align="left"/>let mut _389: isize;<br align="left"/>let mut _390: isize;<br align="left"/>let mut _391: isize;<br align="left"/>let mut _392: isize;<br align="left"/>let mut _393: isize;<br align="left"/>let mut _394: isize;<br align="left"/>let mut _395: isize;<br align="left"/>let mut _396: isize;<br align="left"/>let mut _397: isize;<br align="left"/>let mut _398: isize;<br align="left"/>let mut _399: isize;<br align="left"/>let mut _400: isize;<br align="left"/>let mut _401: isize;<br align="left"/>let mut _402: isize;<br align="left"/>let mut _403: isize;<br align="left"/>let mut _404: isize;<br align="left"/>let mut _405: isize;<br align="left"/>let mut _406: isize;<br align="left"/>let mut _407: isize;<br align="left"/>let mut _408: isize;<br align="left"/>let mut _409: isize;<br align="left"/>let mut _410: isize;<br align="left"/>let mut _411: isize;<br align="left"/>let mut _412: isize;<br align="left"/>let mut _413: isize;<br align="left"/>let mut _414: isize;<br align="left"/>let mut _415: isize;<br align="left"/>let mut _416: isize;<br align="left"/>let mut _417: isize;<br align="left"/>let mut _418: isize;<br align="left"/>let mut _419: isize;<br align="left"/>let mut _420: *const [u16; 2_usize];<br align="left"/>let mut _421: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _422: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _423: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _424: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _425: *const dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _426: *const ();<br align="left"/>let mut _427: usize;<br align="left"/>let mut _428: usize;<br align="left"/>let mut _429: usize;<br align="left"/>let mut _430: usize;<br align="left"/>let mut _431: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug order_id =&gt; _2;<br align="left"/>debug market_index =&gt; _3;<br align="left"/>debug fulfillment_type =&gt; _4;<br align="left"/>debug clock =&gt; _5;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug remaining_accounts_iter =&gt; _13;<br align="left"/>debug perp_market_map =&gt; _17;<br align="left"/>debug spot_market_map =&gt; _18;<br align="left"/>debug oracle_map =&gt; _19;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug makers_and_referrer =&gt; _53;<br align="left"/>debug makers_and_referrer_stats =&gt; _54;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug fulfillment_params =&gt; _67;<br align="left"/>debug base_market =&gt; _71;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug quote_market =&gt; _82;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug residual =&gt; _110;<br align="left"/>debug val =&gt; _113;<br align="left"/>debug base_market =&gt; _114;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug quote_market =&gt; _125;<br align="left"/>debug residual =&gt; _130;<br align="left"/>debug val =&gt; _133;<br align="left"/>debug residual =&gt; _152;<br align="left"/>debug val =&gt; _155;<br align="left"/>debug base_market =&gt; _156;<br align="left"/>debug residual =&gt; _163;<br align="left"/>debug val =&gt; _166;<br align="left"/>debug quote_market =&gt; _167;<br align="left"/>debug residual =&gt; _172;<br align="left"/>debug val =&gt; _175;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug base_market =&gt; _199;<br align="left"/>debug residual =&gt; _206;<br align="left"/>debug val =&gt; _209;<br align="left"/>debug quote_market =&gt; _210;<br align="left"/>debug residual =&gt; _215;<br align="left"/>debug val =&gt; _218;<br align="left"/>debug residual =&gt; _233;<br align="left"/>debug val =&gt; _236;<br align="left"/>debug residual =&gt; _271;<br align="left"/>debug val =&gt; _274;<br align="left"/>debug base_market =&gt; _275;<br align="left"/>debug residual =&gt; _282;<br align="left"/>debug val =&gt; _285;<br align="left"/>debug quote_market =&gt; _286;<br align="left"/>debug residual =&gt; _291;<br align="left"/>debug val =&gt; _294;<br align="left"/>debug residual =&gt; _304;<br align="left"/>debug val =&gt; _307;<br align="left"/>>;
    bb0__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_323 = const false<br/>_322 = const false<br/>_327 = const false<br/>_326 = const false<br/>_325 = const false<br/>_324 = const false<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_8 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_6 as Continue).0: anchor_lang::prelude::Clock)<br/>_5 = move _12<br/>StorageDead(_12)<br/>_328 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_309 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_16 = &amp;(*_309)<br/></td></tr><tr><td align="left">_15 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _16)</td></tr></table>>];
    bb4__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_398 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _15)</td></tr></table>>];
    bb8__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = &amp;mut _14<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;mut (*_13)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/></td></tr><tr><td align="left">_26 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb9__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_25 = &amp;_26<br/>_24 = &amp;(*_25)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_33 = SizeOf([u16; 2])<br/>_34 = AlignOf([u16; 2])<br/></td></tr><tr><td align="left">_35 = alloc::alloc::exchange_malloc(move _33, move _34)</td></tr></table>>];
    bb10__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ShallowInitBox(move _35, [u16; 2])<br/>StorageLive(_37)<br/>_37 = _3<br/>_420 = (((_36.0: std::ptr::Unique&lt;[u16; 2]&gt;).0: std::ptr::NonNull&lt;[u16; 2]&gt;).0: *const [u16; 2])<br/>_426 = _420 as *const () (PtrToPtr)<br/>_427 = _426 as usize (Transmute)<br/>_428 = AlignOf([u16; 2])<br/>_429 = Sub(_428, const 1_usize)<br/>_430 = BitAnd(_427, _429)<br/>_431 = Eq(_430, const 0_usize)<br/></td></tr><tr><td align="left">assert(_431, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _428, _427)</td></tr></table>>];
    bb11__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = get_writable_spot_market_set_from_many(move _30)</td></tr></table>>];
    bb12__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/></td></tr><tr><td align="left">_41 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb13__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb14__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_322 = const true<br/>_323 = const true<br/>StorageDead(_41)<br/>_42 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb15__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_40 as Continue).0: anchor_lang::prelude::Clock)<br/>_39 = move _46<br/>StorageDead(_46)<br/>_38 = (_39.0: u64)<br/>StorageLive(_47)<br/>_47 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_22 = load_maps(move _23, move _24, move _27, move _38, move _47)</td></tr></table>>];
    bb16__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = move ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_45)<br/>_45 = move _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb17__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_38)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_38)<br/>StorageDead(_27)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb19__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_48 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb20__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = move ((_21 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_20 = move _52<br/>StorageDead(_52)<br/>StorageLive(_17)<br/>_17 = move (_20.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_18)<br/>_18 = move (_20.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_19)<br/>_19 = move (_20.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_332 = discriminant(_21)<br/>_334 = discriminant(_40)<br/>_322 = const false<br/>_323 = const false<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb21__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb22__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>_330 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb24__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageLive(_55)<br/>_56 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb25__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/></td></tr><tr><td align="left">_65 = UserMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb26__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_58 = load_user_maps::&lt;'_, '_&gt;(move _59, const true)</td></tr></table>>];
    bb27__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;(UserMap&lt;'_&gt;, UserStatsMap&lt;'_&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb28__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_60 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb29__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_57 as Continue).0: (state::user_map::UserMap&lt;'_&gt;, state::user_map::UserStatsMap&lt;'_&gt;))<br/>_55 = move _64<br/>StorageDead(_64)<br/>_338 = discriminant(_57)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_63)<br/>_63 = _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb31__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_336 = discriminant(_57)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/></td></tr><tr><td align="left">_66 = UserStatsMap::&lt;'_&gt;::empty()</td></tr></table>>];
    bb33__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_55 = (move _65, move _66)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = move (_55.0: state::user_map::UserMap&lt;'_&gt;)<br/>StorageLive(_54)<br/>_54 = move (_55.1: state::user_map::UserStatsMap&lt;'_&gt;)<br/>StorageDead(_55)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_69 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb35__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = &amp;_18<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = &amp;_3<br/>_203 = &amp;(*_204)<br/></td></tr><tr><td align="left">_201 = SpotMarketMap::&lt;'_&gt;::get_ref(move _202, move _203)</td></tr></table>>];
    bb36__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = &amp;_18<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;_3<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_73 = SpotMarketMap::&lt;'_&gt;::get_ref(move _74, move _75)</td></tr></table>>];
    bb37__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb38__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_77 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb39__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = move ((_72 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_71 = move _81<br/>StorageDead(_81)<br/>_342 = discriminant(_72)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_18<br/></td></tr><tr><td align="left">_84 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _85)</td></tr></table>>];
    bb40__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb41__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/>_340 = discriminant(_72)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">_83 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _84)</td></tr></table>>];
    bb43__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_86 = discriminant(_83)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb44__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = move ((_83 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_82 = move _90<br/>StorageDead(_90)<br/>_346 = discriminant(_83)<br/>StorageDead(_83)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_95 = &amp;mut (*_13)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_310 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_99 = &amp;((*_310).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_311 = deref_copy (*_99)<br/>_421 = (((_311.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_98 = &amp;(*_421)<br/></td></tr><tr><td align="left">_97 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _98)</td></tr></table>>];
    bb45__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_83 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb46__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/>_344 = discriminant(_83)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb47__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_96 = &amp;(*_97)<br/>StorageDead(_98)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;_71<br/>_102 = &amp;(*_103)<br/></td></tr><tr><td align="left">_101 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _102)</td></tr></table>>];
    bb48__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">_100 = &amp;(*_101)<br/>StorageDead(_102)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_82<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _106)</td></tr></table>>];
    bb49__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_104 = &amp;(*_105)<br/>StorageDead(_106)<br/>StorageLive(_108)<br/>_108 = (_5.4: i64)<br/></td></tr><tr><td align="left">_94 = SerumFulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _95, move _96, move _100, move _104, move _108)</td></tr></table>>];
    bb50__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_93 = &lt;std::result::Result&lt;SerumFulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _94)</td></tr></table>>];
    bb51__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">_327 = const true<br/>StorageDead(_94)<br/>_109 = discriminant(_93)<br/></td></tr><tr><td align="left">switchInt(move _109)</td></tr></table>>];
    bb52__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = move ((_93 as Continue).0: state::fulfillment_params::serum::SerumFulfillmentParams&lt;'_, '_&gt;)<br/>_92 = move _113<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_91 = Box::&lt;SerumFulfillmentParams&lt;'_, '_&gt;&gt;::new(move _92)</td></tr></table>>];
    bb53__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_93 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_112)<br/>_112 = _110<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _112)</td></tr></table>>];
    bb54__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb55__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_70 = move _91 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb56__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb57__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_68 = move _70 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>_348 = discriminant(_93)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>_327 = const false<br/>StorageDead(_93)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = &amp;_18<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;_3<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_116 = SpotMarketMap::&lt;'_&gt;::get_ref(move _117, move _118)</td></tr></table>>];
    bb59__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb60__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_120 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb61__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = move ((_115 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_114 = move _124<br/>StorageDead(_124)<br/>_352 = discriminant(_115)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;_18<br/></td></tr><tr><td align="left">_127 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _128)</td></tr></table>>];
    bb62__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb63__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>_350 = discriminant(_115)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb65__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_129 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb66__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = move ((_126 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_125 = move _133<br/>StorageDead(_133)<br/>_356 = discriminant(_126)<br/>StorageDead(_126)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = &amp;mut (*_13)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_312 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_142 = &amp;((*_312).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_313 = deref_copy (*_142)<br/>_422 = (((_313.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_141 = &amp;(*_422)<br/></td></tr><tr><td align="left">_140 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _141)</td></tr></table>>];
    bb67__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_132)<br/>_132 = _130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _132)</td></tr></table>>];
    bb68__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>_354 = discriminant(_126)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb69__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_139 = &amp;(*_140)<br/>StorageDead(_141)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = &amp;_114<br/>_145 = &amp;(*_146)<br/></td></tr><tr><td align="left">_144 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _145)</td></tr></table>>];
    bb70__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_143 = &amp;(*_144)<br/>StorageDead(_145)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;_125<br/>_149 = &amp;(*_150)<br/></td></tr><tr><td align="left">_148 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _149)</td></tr></table>>];
    bb71__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">_147 = &amp;(*_148)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">_137 = PhoenixFulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _138, move _139, move _143, move _147)</td></tr></table>>];
    bb72__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_143)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = &lt;std::result::Result&lt;PhoenixFulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _137)</td></tr></table>>];
    bb73__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_326 = const true<br/>StorageDead(_137)<br/>_151 = discriminant(_136)<br/></td></tr><tr><td align="left">switchInt(move _151)</td></tr></table>>];
    bb74__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = move ((_136 as Continue).0: state::fulfillment_params::phoenix::PhoenixFulfillmentParams&lt;'_, '_&gt;)<br/>_135 = move _155<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">_134 = Box::&lt;PhoenixFulfillmentParams&lt;'_, '_&gt;&gt;::new(move _135)</td></tr></table>>];
    bb75__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_136 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_154)<br/>_154 = _152<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _154)</td></tr></table>>];
    bb76__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb77__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_68 = move _134 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb78__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb79__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_358 = discriminant(_136)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>_326 = const false<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>_159 = &amp;_18<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = &amp;_3<br/>_160 = &amp;(*_161)<br/></td></tr><tr><td align="left">_158 = SpotMarketMap::&lt;'_&gt;::get_ref(move _159, move _160)</td></tr></table>>];
    bb81__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_157 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _158)</td></tr></table>>];
    bb82__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>_162 = discriminant(_157)<br/></td></tr><tr><td align="left">switchInt(move _162)</td></tr></table>>];
    bb83__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_166)<br/>_166 = move ((_157 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_156 = move _166<br/>StorageDead(_166)<br/>_362 = discriminant(_157)<br/>StorageDead(_161)<br/>StorageDead(_157)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = &amp;_18<br/></td></tr><tr><td align="left">_169 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _170)</td></tr></table>>];
    bb84__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_157 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_165)<br/>_165 = _163<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _165)</td></tr></table>>];
    bb85__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_163)<br/>_360 = discriminant(_157)<br/>StorageDead(_161)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/></td></tr><tr><td align="left">_168 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _169)</td></tr></table>>];
    bb87__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>_171 = discriminant(_168)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb88__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>_175 = move ((_168 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_167 = move _175<br/>StorageDead(_175)<br/>_366 = discriminant(_168)<br/>StorageDead(_168)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = &amp;mut (*_13)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_314 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_184 = &amp;((*_314).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_315 = deref_copy (*_184)<br/>_423 = (((_315.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_183 = &amp;(*_423)<br/></td></tr><tr><td align="left">_182 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _183)</td></tr></table>>];
    bb89__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_168 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_174)<br/>_174 = _172<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _174)</td></tr></table>>];
    bb90__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>_364 = discriminant(_168)<br/>StorageDead(_168)<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb91__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_181 = &amp;(*_182)<br/>StorageDead(_183)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_156<br/>_187 = &amp;(*_188)<br/></td></tr><tr><td align="left">_186 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _187)</td></tr></table>>];
    bb92__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_185 = &amp;(*_186)<br/>StorageDead(_187)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = &amp;_167<br/>_191 = &amp;(*_192)<br/></td></tr><tr><td align="left">_190 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _191)</td></tr></table>>];
    bb93__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">_189 = &amp;(*_190)<br/>StorageDead(_191)<br/>StorageLive(_193)<br/>_193 = (_5.4: i64)<br/></td></tr><tr><td align="left">_179 = OpenbookV2FulfillmentParams::&lt;'_, '_&gt;::new::&lt;'_&gt;(move _180, move _181, move _185, move _189, move _193)</td></tr></table>>];
    bb94__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/>StorageDead(_181)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">_178 = &lt;std::result::Result&lt;OpenbookV2FulfillmentParams&lt;'_, '_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _179)</td></tr></table>>];
    bb95__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_325 = const true<br/>StorageDead(_179)<br/>_194 = discriminant(_178)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb96__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = move ((_178 as Continue).0: state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;'_, '_&gt;)<br/>_177 = move _198<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_176 = Box::&lt;OpenbookV2FulfillmentParams&lt;'_, '_&gt;&gt;::new(move _177)</td></tr></table>>];
    bb97__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_178 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb98__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">drop(_167)</td></tr></table>>];
    bb99__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_68 = move _176 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_177)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">drop(_167)</td></tr></table>>];
    bb100__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb101__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_368 = discriminant(_178)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>_325 = const false<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_203)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb103__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_205 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _205)</td></tr></table>>];
    bb104__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = move ((_200 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_199 = move _209<br/>StorageDead(_209)<br/>_372 = discriminant(_200)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;_18<br/></td></tr><tr><td align="left">_212 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _213)</td></tr></table>>];
    bb105__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_208)<br/>_208 = _206<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _208)</td></tr></table>>];
    bb106__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_208)<br/>StorageDead(_206)<br/>_370 = discriminant(_200)<br/>StorageDead(_204)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/></td></tr><tr><td align="left">_211 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _212)</td></tr></table>>];
    bb108__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>_214 = discriminant(_211)<br/></td></tr><tr><td align="left">switchInt(move _214)</td></tr></table>>];
    bb109__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_218)<br/>_218 = move ((_211 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_210 = move _218<br/>StorageDead(_218)<br/>_376 = discriminant(_211)<br/>StorageDead(_211)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>_223 = &amp;mut (*_13)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = &amp;_199<br/>_226 = &amp;(*_227)<br/></td></tr><tr><td align="left">_225 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _226)</td></tr></table>>];
    bb110__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_215)<br/>_215 = ((_211 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_217)<br/>_217 = _215<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _217)</td></tr></table>>];
    bb111__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_215)<br/>_374 = discriminant(_211)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb112__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">_224 = &amp;(*_225)<br/>StorageDead(_226)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = &amp;_210<br/>_230 = &amp;(*_231)<br/></td></tr><tr><td align="left">_229 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _230)</td></tr></table>>];
    bb113__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">_228 = &amp;(*_229)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_222 = MatchFulfillmentParams::&lt;'_&gt;::new::&lt;'_&gt;(move _223, move _224, move _228)</td></tr></table>>];
    bb114__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_221 = &lt;std::result::Result&lt;MatchFulfillmentParams&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _222)</td></tr></table>>];
    bb115__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">_324 = const true<br/>StorageDead(_222)<br/>_232 = discriminant(_221)<br/></td></tr><tr><td align="left">switchInt(move _232)</td></tr></table>>];
    bb116__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = move ((_221 as Continue).0: state::fulfillment_params::drift::MatchFulfillmentParams&lt;'_&gt;)<br/>_220 = move _236<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_219 = Box::&lt;MatchFulfillmentParams&lt;'_&gt;&gt;::new(move _220)</td></tr></table>>];
    bb117__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_221 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_235)<br/>_235 = _233<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _235)</td></tr></table>>];
    bb118__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_220)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_210)</td></tr></table>>];
    bb119__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">_68 = move _219 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_220)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_210)</td></tr></table>>];
    bb120__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/></td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb121__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_378 = discriminant(_221)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>_324 = const false<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">_67 = move _68 as std::boxed::Box&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt; (PointerCoercion(Unsize))<br/>StorageDead(_68)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>_240 = _2<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_316 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_244 = &amp;((*_316).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_317 = deref_copy (*_244)<br/>_424 = (((_317.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_243 = &amp;(*_424)<br/></td></tr><tr><td align="left">_242 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _243)</td></tr></table>>];
    bb123__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">_241 = &amp;(*_242)<br/>StorageDead(_243)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_318 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_246 = &amp;((*_318).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_245 = &amp;(*_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_319 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_248 = &amp;((*_319).5: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_247 = &amp;(*_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = &amp;_18<br/>_249 = &amp;(*_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = &amp;_17<br/>_251 = &amp;(*_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_254 = &amp;mut _19<br/>_253 = &amp;mut (*_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>_320 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_256 = &amp;((*_320).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_255 = &amp;(*_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>_321 = deref_copy (_1.1: &amp;mut instructions::keeper::FillOrder&lt;'_&gt;)<br/>_258 = &amp;((*_321).3: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_257 = &amp;(*_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>_260 = &amp;_53<br/>_259 = &amp;(*_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = &amp;_54<br/>_261 = &amp;(*_262)<br/>StorageLive(_263)<br/>_263 = Option::&lt;u32&gt;::None<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;_5<br/>_264 = &amp;(*_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = &amp;mut _67<br/></td></tr><tr><td align="left">_268 = &lt;Box&lt;dyn SpotFulfillmentParams&gt; as AsMut&lt;dyn SpotFulfillmentParams&gt;&gt;::as_mut(move _269)</td></tr></table>>];
    bb124__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">_267 = &amp;mut (*_268)<br/>_266 = move _267 as &amp;mut dyn state::spot_fulfillment_params::SpotFulfillmentParams (PointerCoercion(Unsize))<br/>StorageDead(_269)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">_239 = controller::orders::fill_spot_order(move _240, move _241, move _245, move _247, move _249, move _251, move _253, move _255, move _257, move _259, move _261, move _263, move _264, move _266)</td></tr></table>>];
    bb125__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_263)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_249)<br/>StorageDead(_247)<br/>StorageDead(_245)<br/>StorageDead(_241)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">_238 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _239)</td></tr></table>>];
    bb126__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>_270 = discriminant(_238)<br/></td></tr><tr><td align="left">switchInt(move _270)</td></tr></table>>];
    bb127__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageLive(_274)<br/>_274 = ((_238 as Continue).0: u64)<br/>_237 = _274<br/>StorageDead(_274)<br/>StorageDead(_268)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_242)<br/>StorageDead(_238)<br/>StorageDead(_237)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_278 = &amp;_18<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_280 = &amp;_3<br/>_279 = &amp;(*_280)<br/></td></tr><tr><td align="left">_277 = SpotMarketMap::&lt;'_&gt;::get_ref(move _278, move _279)</td></tr></table>>];
    bb128__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = ((_238 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_273)<br/>_273 = _271<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _273)</td></tr></table>>];
    bb129__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_268)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_242)<br/>StorageDead(_238)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">_276 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _277)</td></tr></table>>];
    bb131__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>_281 = discriminant(_276)<br/></td></tr><tr><td align="left">switchInt(move _281)</td></tr></table>>];
    bb132__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageLive(_285)<br/>_285 = move ((_276 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_275 = move _285<br/>StorageDead(_285)<br/>_382 = discriminant(_276)<br/>StorageDead(_280)<br/>StorageDead(_276)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = &amp;_18<br/></td></tr><tr><td align="left">_288 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _289)</td></tr></table>>];
    bb133__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_282)<br/>_282 = ((_276 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_284)<br/>_284 = _282<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _284)</td></tr></table>>];
    bb134__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_282)<br/>_380 = discriminant(_276)<br/>StorageDead(_280)<br/>StorageDead(_276)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/></td></tr><tr><td align="left">_287 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _288)</td></tr></table>>];
    bb136__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>_290 = discriminant(_287)<br/></td></tr><tr><td align="left">switchInt(move _290)</td></tr></table>>];
    bb137__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_294)<br/>_294 = move ((_287 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_286 = move _294<br/>StorageDead(_294)<br/>_386 = discriminant(_287)<br/>StorageDead(_287)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>_425 = (((_67.0: std::ptr::Unique&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt;).0: std::ptr::NonNull&lt;dyn state::spot_fulfillment_params::SpotFulfillmentParams&gt;).0: *const dyn state::spot_fulfillment_params::SpotFulfillmentParams)<br/>_298 = &amp;(*_425)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_300 = &amp;_275<br/>_299 = &amp;(*_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_302 = &amp;_286<br/>_301 = &amp;(*_302)<br/></td></tr><tr><td align="left">_297 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::validate_vault_amounts(move _298, move _299, move _301)</td></tr></table>>];
    bb138__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_291)<br/>_291 = ((_287 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_293)<br/>_293 = _291<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _293)</td></tr></table>>];
    bb139__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>StorageDead(_291)<br/>_384 = discriminant(_287)<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageDead(_299)<br/>StorageDead(_298)<br/></td></tr><tr><td align="left">_296 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _297)</td></tr></table>>];
    bb141__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>_303 = discriminant(_296)<br/></td></tr><tr><td align="left">switchInt(move _303)</td></tr></table>>];
    bb142__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = ((_296 as Continue).0: ())<br/>_295 = _307<br/>StorageDead(_307)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_296)<br/>StorageDead(_295)<br/>StorageLive(_308)<br/>_308 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _308)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">drop(_286)</td></tr></table>>];
    bb143__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageLive(_304)<br/>_304 = ((_296 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_306)<br/>_306 = _304<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _306)</td></tr></table>>];
    bb144__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_304)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_296)<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">drop(_286)</td></tr></table>>];
    bb145__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/></td></tr><tr><td align="left">drop(_275)</td></tr></table>>];
    bb146__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/></td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb147__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb148__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb149__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb150__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb151__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb152__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/></td></tr><tr><td align="left">drop(_275)</td></tr></table>>];
    bb154__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb156__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_210)<br/></td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb157__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>_388 = discriminant(_221)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_225)<br/>_324 = const false<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb160__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_390 = discriminant(_178)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_186)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>_325 = const false<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb163__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_392 = discriminant(_136)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>_326 = const false<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb166__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>_394 = discriminant(_93)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>_327 = const false<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb171__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb172__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb174__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb175__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb176__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb177__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">_396 = discriminant(_40)<br/>_322 = const false<br/>_323 = const false<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb178__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb179__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left">return</td></tr></table>>];
    bb183__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">183 (cleanup)</td></tr><tr><td align="left">drop(_286)</td></tr></table>>];
    bb184__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">184 (cleanup)</td></tr><tr><td align="left">drop(_275)</td></tr></table>>];
    bb185__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">185 (cleanup)</td></tr><tr><td align="left">drop(_67)</td></tr></table>>];
    bb186__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">186 (cleanup)</td></tr><tr><td align="left">drop(_210)</td></tr></table>>];
    bb187__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">187 (cleanup)</td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb188__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">188 (cleanup)</td></tr><tr><td align="left">drop(_210)</td></tr></table>>];
    bb189__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">189 (cleanup)</td></tr><tr><td align="left">drop(_199)</td></tr></table>>];
    bb190__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">190 (cleanup)</td></tr><tr><td align="left">drop(_167)</td></tr></table>>];
    bb191__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">191 (cleanup)</td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb192__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">192 (cleanup)</td></tr><tr><td align="left">drop(_167)</td></tr></table>>];
    bb193__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">193 (cleanup)</td></tr><tr><td align="left">drop(_156)</td></tr></table>>];
    bb194__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">194 (cleanup)</td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb195__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">195 (cleanup)</td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb196__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">196 (cleanup)</td></tr><tr><td align="left">drop(_125)</td></tr></table>>];
    bb197__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">197 (cleanup)</td></tr><tr><td align="left">drop(_114)</td></tr></table>>];
    bb198__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">198 (cleanup)</td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb199__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">199 (cleanup)</td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb200__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">200 (cleanup)</td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb201__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">201 (cleanup)</td></tr><tr><td align="left">drop(_71)</td></tr></table>>];
    bb202__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">202 (cleanup)</td></tr><tr><td align="left">drop(_54)</td></tr></table>>];
    bb203__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">203 (cleanup)</td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb204__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">204 (cleanup)</td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb205__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">205 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb206__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">206 (cleanup)</td></tr><tr><td align="left">drop(_19)</td></tr></table>>];
    bb207__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">207 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb208__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">208 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb209__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">209 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb210__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">210 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb211__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">211 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb212__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">212 (cleanup)</td></tr><tr><td align="left" balign="left">_400 = discriminant(_287)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">213 (cleanup)</td></tr><tr><td align="left" balign="left">_401 = discriminant(_276)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">214 (cleanup)</td></tr><tr><td align="left" balign="left">_402 = discriminant(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">215 (cleanup)</td></tr><tr><td align="left" balign="left">_403 = discriminant(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb216__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">216 (cleanup)</td></tr><tr><td align="left" balign="left">_404 = discriminant(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">217 (cleanup)</td></tr><tr><td align="left" balign="left">_405 = discriminant(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">218 (cleanup)</td></tr><tr><td align="left" balign="left">_406 = discriminant(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">219 (cleanup)</td></tr><tr><td align="left" balign="left">_407 = discriminant(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">220 (cleanup)</td></tr><tr><td align="left" balign="left">_408 = discriminant(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">221 (cleanup)</td></tr><tr><td align="left" balign="left">_409 = discriminant(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">222 (cleanup)</td></tr><tr><td align="left" balign="left">_410 = discriminant(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">223 (cleanup)</td></tr><tr><td align="left" balign="left">_411 = discriminant(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">224 (cleanup)</td></tr><tr><td align="left" balign="left">_412 = discriminant(_83)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">225 (cleanup)</td></tr><tr><td align="left" balign="left">_413 = discriminant(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">226 (cleanup)</td></tr><tr><td align="left" balign="left">_414 = discriminant(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">227 (cleanup)</td></tr><tr><td align="left" balign="left">_417 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">228 (cleanup)</td></tr><tr><td align="left" balign="left">_418 = discriminant(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">229 (cleanup)</td></tr><tr><td align="left" balign="left">_419 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_1362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">(*_420) = [const _, move _37]<br/>StorageDead(_37)<br/>_32 = move _36<br/>_31 = move _32 as std::boxed::Box&lt;[u16]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = std::slice::&lt;impl [u16]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _31)</td></tr></table>>];
    bb0__0_1362 -> bb1__0_1362 [label="return"];
    bb1__0_1362 -> bb2__0_1362 [label="return"];
    bb1__0_1362 -> bb211__0_1362 [label="unwind"];
    bb2__0_1362 -> bb3__0_1362 [label="0"];
    bb2__0_1362 -> bb5__0_1362 [label="1"];
    bb2__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb3__0_1362 -> bb7__0_1362 [label="return"];
    bb5__0_1362 -> bb6__0_1362 [label="return"];
    bb5__0_1362 -> bb229__0_1362 [label="unwind"];
    bb6__0_1362 -> bb181__0_1362 [label=""];
    bb7__0_1362 -> bb8__0_1362 [label="return"];
    bb8__0_1362 -> bb9__0_1362 [label="return"];
    bb9__0_1362 -> bb10__0_1362 [label="return"];
    bb9__0_1362 -> bb210__0_1362 [label="unwind"];
    bb10__0_1362 -> bb230__0_1362 [label="success"];
    bb11__0_1362 -> bb12__0_1362 [label="return"];
    bb11__0_1362 -> bb210__0_1362 [label="unwind"];
    bb12__0_1362 -> bb13__0_1362 [label="return"];
    bb12__0_1362 -> bb209__0_1362 [label="unwind"];
    bb13__0_1362 -> bb14__0_1362 [label="return"];
    bb13__0_1362 -> bb209__0_1362 [label="unwind"];
    bb14__0_1362 -> bb15__0_1362 [label="0"];
    bb14__0_1362 -> bb16__0_1362 [label="1"];
    bb14__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb15__0_1362 -> bb18__0_1362 [label="return"];
    bb15__0_1362 -> bb228__0_1362 [label="unwind"];
    bb16__0_1362 -> bb17__0_1362 [label="return"];
    bb16__0_1362 -> bb228__0_1362 [label="unwind"];
    bb17__0_1362 -> bb177__0_1362 [label=""];
    bb18__0_1362 -> bb19__0_1362 [label="return"];
    bb18__0_1362 -> bb228__0_1362 [label="unwind"];
    bb19__0_1362 -> bb20__0_1362 [label="0"];
    bb19__0_1362 -> bb21__0_1362 [label="1"];
    bb19__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb20__0_1362 -> bb23__0_1362 [label="return"];
    bb20__0_1362 -> bb205__0_1362 [label="unwind"];
    bb21__0_1362 -> bb22__0_1362 [label="return"];
    bb21__0_1362 -> bb227__0_1362 [label="unwind"];
    bb22__0_1362 -> bb177__0_1362 [label=""];
    bb23__0_1362 -> bb24__0_1362 [label="return"];
    bb23__0_1362 -> bb206__0_1362 [label="unwind"];
    bb24__0_1362 -> bb26__0_1362 [label="1"];
    bb24__0_1362 -> bb25__0_1362 [label="otherwise"];
    bb25__0_1362 -> bb32__0_1362 [label="return"];
    bb25__0_1362 -> bb206__0_1362 [label="unwind"];
    bb26__0_1362 -> bb27__0_1362 [label="return"];
    bb26__0_1362 -> bb206__0_1362 [label="unwind"];
    bb27__0_1362 -> bb28__0_1362 [label="return"];
    bb27__0_1362 -> bb206__0_1362 [label="unwind"];
    bb28__0_1362 -> bb29__0_1362 [label="0"];
    bb28__0_1362 -> bb30__0_1362 [label="1"];
    bb28__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb29__0_1362 -> bb34__0_1362 [label=""];
    bb30__0_1362 -> bb31__0_1362 [label="return"];
    bb30__0_1362 -> bb226__0_1362 [label="unwind"];
    bb31__0_1362 -> bb173__0_1362 [label=""];
    bb32__0_1362 -> bb33__0_1362 [label="return"];
    bb32__0_1362 -> bb204__0_1362 [label="unwind"];
    bb33__0_1362 -> bb34__0_1362 [label=""];
    bb34__0_1362 -> bb36__0_1362 [label="0"];
    bb34__0_1362 -> bb35__0_1362 [label="1"];
    bb34__0_1362 -> bb58__0_1362 [label="2"];
    bb34__0_1362 -> bb80__0_1362 [label="3"];
    bb34__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb35__0_1362 -> bb102__0_1362 [label="return"];
    bb35__0_1362 -> bb202__0_1362 [label="unwind"];
    bb36__0_1362 -> bb37__0_1362 [label="return"];
    bb36__0_1362 -> bb202__0_1362 [label="unwind"];
    bb37__0_1362 -> bb38__0_1362 [label="return"];
    bb37__0_1362 -> bb202__0_1362 [label="unwind"];
    bb38__0_1362 -> bb39__0_1362 [label="0"];
    bb38__0_1362 -> bb40__0_1362 [label="1"];
    bb38__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb39__0_1362 -> bb42__0_1362 [label="return"];
    bb39__0_1362 -> bb201__0_1362 [label="unwind"];
    bb40__0_1362 -> bb41__0_1362 [label="return"];
    bb40__0_1362 -> bb225__0_1362 [label="unwind"];
    bb41__0_1362 -> bb167__0_1362 [label=""];
    bb42__0_1362 -> bb43__0_1362 [label="return"];
    bb42__0_1362 -> bb201__0_1362 [label="unwind"];
    bb43__0_1362 -> bb44__0_1362 [label="0"];
    bb43__0_1362 -> bb45__0_1362 [label="1"];
    bb43__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb44__0_1362 -> bb47__0_1362 [label="return"];
    bb44__0_1362 -> bb200__0_1362 [label="unwind"];
    bb45__0_1362 -> bb46__0_1362 [label="return"];
    bb45__0_1362 -> bb224__0_1362 [label="unwind"];
    bb46__0_1362 -> bb167__0_1362 [label="return"];
    bb46__0_1362 -> bb202__0_1362 [label="unwind"];
    bb47__0_1362 -> bb48__0_1362 [label="return"];
    bb47__0_1362 -> bb200__0_1362 [label="unwind"];
    bb48__0_1362 -> bb49__0_1362 [label="return"];
    bb48__0_1362 -> bb200__0_1362 [label="unwind"];
    bb49__0_1362 -> bb50__0_1362 [label="return"];
    bb49__0_1362 -> bb200__0_1362 [label="unwind"];
    bb50__0_1362 -> bb51__0_1362 [label="return"];
    bb50__0_1362 -> bb200__0_1362 [label="unwind"];
    bb51__0_1362 -> bb52__0_1362 [label="0"];
    bb51__0_1362 -> bb53__0_1362 [label="1"];
    bb51__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb52__0_1362 -> bb55__0_1362 [label="return"];
    bb52__0_1362 -> bb198__0_1362 [label="unwind"];
    bb53__0_1362 -> bb54__0_1362 [label="return"];
    bb53__0_1362 -> bb198__0_1362 [label="unwind"];
    bb54__0_1362 -> bb165__0_1362 [label="return"];
    bb54__0_1362 -> bb199__0_1362 [label="unwind"];
    bb55__0_1362 -> bb56__0_1362 [label="return"];
    bb55__0_1362 -> bb199__0_1362 [label="unwind"];
    bb56__0_1362 -> bb57__0_1362 [label="return"];
    bb56__0_1362 -> bb223__0_1362 [label="unwind"];
    bb57__0_1362 -> bb122__0_1362 [label=""];
    bb58__0_1362 -> bb59__0_1362 [label="return"];
    bb58__0_1362 -> bb202__0_1362 [label="unwind"];
    bb59__0_1362 -> bb60__0_1362 [label="return"];
    bb59__0_1362 -> bb202__0_1362 [label="unwind"];
    bb60__0_1362 -> bb61__0_1362 [label="0"];
    bb60__0_1362 -> bb62__0_1362 [label="1"];
    bb60__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb61__0_1362 -> bb64__0_1362 [label="return"];
    bb61__0_1362 -> bb197__0_1362 [label="unwind"];
    bb62__0_1362 -> bb63__0_1362 [label="return"];
    bb62__0_1362 -> bb222__0_1362 [label="unwind"];
    bb63__0_1362 -> bb164__0_1362 [label=""];
    bb64__0_1362 -> bb65__0_1362 [label="return"];
    bb64__0_1362 -> bb197__0_1362 [label="unwind"];
    bb65__0_1362 -> bb66__0_1362 [label="0"];
    bb65__0_1362 -> bb67__0_1362 [label="1"];
    bb65__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb66__0_1362 -> bb69__0_1362 [label="return"];
    bb66__0_1362 -> bb196__0_1362 [label="unwind"];
    bb67__0_1362 -> bb68__0_1362 [label="return"];
    bb67__0_1362 -> bb221__0_1362 [label="unwind"];
    bb68__0_1362 -> bb164__0_1362 [label="return"];
    bb68__0_1362 -> bb202__0_1362 [label="unwind"];
    bb69__0_1362 -> bb70__0_1362 [label="return"];
    bb69__0_1362 -> bb196__0_1362 [label="unwind"];
    bb70__0_1362 -> bb71__0_1362 [label="return"];
    bb70__0_1362 -> bb196__0_1362 [label="unwind"];
    bb71__0_1362 -> bb72__0_1362 [label="return"];
    bb71__0_1362 -> bb196__0_1362 [label="unwind"];
    bb72__0_1362 -> bb73__0_1362 [label="return"];
    bb72__0_1362 -> bb196__0_1362 [label="unwind"];
    bb73__0_1362 -> bb74__0_1362 [label="0"];
    bb73__0_1362 -> bb75__0_1362 [label="1"];
    bb73__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb74__0_1362 -> bb77__0_1362 [label="return"];
    bb74__0_1362 -> bb194__0_1362 [label="unwind"];
    bb75__0_1362 -> bb76__0_1362 [label="return"];
    bb75__0_1362 -> bb194__0_1362 [label="unwind"];
    bb76__0_1362 -> bb162__0_1362 [label="return"];
    bb76__0_1362 -> bb195__0_1362 [label="unwind"];
    bb77__0_1362 -> bb78__0_1362 [label="return"];
    bb77__0_1362 -> bb195__0_1362 [label="unwind"];
    bb78__0_1362 -> bb79__0_1362 [label="return"];
    bb78__0_1362 -> bb220__0_1362 [label="unwind"];
    bb79__0_1362 -> bb122__0_1362 [label=""];
    bb80__0_1362 -> bb81__0_1362 [label="return"];
    bb80__0_1362 -> bb202__0_1362 [label="unwind"];
    bb81__0_1362 -> bb82__0_1362 [label="return"];
    bb81__0_1362 -> bb202__0_1362 [label="unwind"];
    bb82__0_1362 -> bb83__0_1362 [label="0"];
    bb82__0_1362 -> bb84__0_1362 [label="1"];
    bb82__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb83__0_1362 -> bb86__0_1362 [label="return"];
    bb83__0_1362 -> bb193__0_1362 [label="unwind"];
    bb84__0_1362 -> bb85__0_1362 [label="return"];
    bb84__0_1362 -> bb219__0_1362 [label="unwind"];
    bb85__0_1362 -> bb161__0_1362 [label=""];
    bb86__0_1362 -> bb87__0_1362 [label="return"];
    bb86__0_1362 -> bb193__0_1362 [label="unwind"];
    bb87__0_1362 -> bb88__0_1362 [label="0"];
    bb87__0_1362 -> bb89__0_1362 [label="1"];
    bb87__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb88__0_1362 -> bb91__0_1362 [label="return"];
    bb88__0_1362 -> bb192__0_1362 [label="unwind"];
    bb89__0_1362 -> bb90__0_1362 [label="return"];
    bb89__0_1362 -> bb218__0_1362 [label="unwind"];
    bb90__0_1362 -> bb161__0_1362 [label="return"];
    bb90__0_1362 -> bb202__0_1362 [label="unwind"];
    bb91__0_1362 -> bb92__0_1362 [label="return"];
    bb91__0_1362 -> bb192__0_1362 [label="unwind"];
    bb92__0_1362 -> bb93__0_1362 [label="return"];
    bb92__0_1362 -> bb192__0_1362 [label="unwind"];
    bb93__0_1362 -> bb94__0_1362 [label="return"];
    bb93__0_1362 -> bb192__0_1362 [label="unwind"];
    bb94__0_1362 -> bb95__0_1362 [label="return"];
    bb94__0_1362 -> bb192__0_1362 [label="unwind"];
    bb95__0_1362 -> bb96__0_1362 [label="0"];
    bb95__0_1362 -> bb97__0_1362 [label="1"];
    bb95__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb96__0_1362 -> bb99__0_1362 [label="return"];
    bb96__0_1362 -> bb190__0_1362 [label="unwind"];
    bb97__0_1362 -> bb98__0_1362 [label="return"];
    bb97__0_1362 -> bb190__0_1362 [label="unwind"];
    bb98__0_1362 -> bb159__0_1362 [label="return"];
    bb98__0_1362 -> bb191__0_1362 [label="unwind"];
    bb99__0_1362 -> bb100__0_1362 [label="return"];
    bb99__0_1362 -> bb191__0_1362 [label="unwind"];
    bb100__0_1362 -> bb101__0_1362 [label="return"];
    bb100__0_1362 -> bb217__0_1362 [label="unwind"];
    bb101__0_1362 -> bb122__0_1362 [label=""];
    bb102__0_1362 -> bb103__0_1362 [label="return"];
    bb102__0_1362 -> bb202__0_1362 [label="unwind"];
    bb103__0_1362 -> bb104__0_1362 [label="0"];
    bb103__0_1362 -> bb105__0_1362 [label="1"];
    bb103__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb104__0_1362 -> bb107__0_1362 [label="return"];
    bb104__0_1362 -> bb189__0_1362 [label="unwind"];
    bb105__0_1362 -> bb106__0_1362 [label="return"];
    bb105__0_1362 -> bb216__0_1362 [label="unwind"];
    bb106__0_1362 -> bb158__0_1362 [label=""];
    bb107__0_1362 -> bb108__0_1362 [label="return"];
    bb107__0_1362 -> bb189__0_1362 [label="unwind"];
    bb108__0_1362 -> bb109__0_1362 [label="0"];
    bb108__0_1362 -> bb110__0_1362 [label="1"];
    bb108__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb109__0_1362 -> bb112__0_1362 [label="return"];
    bb109__0_1362 -> bb188__0_1362 [label="unwind"];
    bb110__0_1362 -> bb111__0_1362 [label="return"];
    bb110__0_1362 -> bb215__0_1362 [label="unwind"];
    bb111__0_1362 -> bb158__0_1362 [label="return"];
    bb111__0_1362 -> bb202__0_1362 [label="unwind"];
    bb112__0_1362 -> bb113__0_1362 [label="return"];
    bb112__0_1362 -> bb188__0_1362 [label="unwind"];
    bb113__0_1362 -> bb114__0_1362 [label="return"];
    bb113__0_1362 -> bb188__0_1362 [label="unwind"];
    bb114__0_1362 -> bb115__0_1362 [label="return"];
    bb114__0_1362 -> bb188__0_1362 [label="unwind"];
    bb115__0_1362 -> bb116__0_1362 [label="0"];
    bb115__0_1362 -> bb117__0_1362 [label="1"];
    bb115__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb116__0_1362 -> bb119__0_1362 [label="return"];
    bb116__0_1362 -> bb186__0_1362 [label="unwind"];
    bb117__0_1362 -> bb118__0_1362 [label="return"];
    bb117__0_1362 -> bb186__0_1362 [label="unwind"];
    bb118__0_1362 -> bb156__0_1362 [label="return"];
    bb118__0_1362 -> bb187__0_1362 [label="unwind"];
    bb119__0_1362 -> bb120__0_1362 [label="return"];
    bb119__0_1362 -> bb187__0_1362 [label="unwind"];
    bb120__0_1362 -> bb121__0_1362 [label="return"];
    bb120__0_1362 -> bb214__0_1362 [label="unwind"];
    bb121__0_1362 -> bb122__0_1362 [label=""];
    bb122__0_1362 -> bb123__0_1362 [label="return"];
    bb122__0_1362 -> bb185__0_1362 [label="unwind"];
    bb123__0_1362 -> bb124__0_1362 [label="return"];
    bb123__0_1362 -> bb185__0_1362 [label="unwind"];
    bb124__0_1362 -> bb125__0_1362 [label="return"];
    bb124__0_1362 -> bb185__0_1362 [label="unwind"];
    bb125__0_1362 -> bb126__0_1362 [label="return"];
    bb125__0_1362 -> bb185__0_1362 [label="unwind"];
    bb126__0_1362 -> bb127__0_1362 [label="0"];
    bb126__0_1362 -> bb128__0_1362 [label="1"];
    bb126__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb127__0_1362 -> bb130__0_1362 [label="return"];
    bb127__0_1362 -> bb185__0_1362 [label="unwind"];
    bb128__0_1362 -> bb129__0_1362 [label="return"];
    bb128__0_1362 -> bb185__0_1362 [label="unwind"];
    bb129__0_1362 -> bb155__0_1362 [label=""];
    bb130__0_1362 -> bb131__0_1362 [label="return"];
    bb130__0_1362 -> bb185__0_1362 [label="unwind"];
    bb131__0_1362 -> bb132__0_1362 [label="0"];
    bb131__0_1362 -> bb133__0_1362 [label="1"];
    bb131__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb132__0_1362 -> bb135__0_1362 [label="return"];
    bb132__0_1362 -> bb184__0_1362 [label="unwind"];
    bb133__0_1362 -> bb134__0_1362 [label="return"];
    bb133__0_1362 -> bb213__0_1362 [label="unwind"];
    bb134__0_1362 -> bb154__0_1362 [label=""];
    bb135__0_1362 -> bb136__0_1362 [label="return"];
    bb135__0_1362 -> bb184__0_1362 [label="unwind"];
    bb136__0_1362 -> bb137__0_1362 [label="0"];
    bb136__0_1362 -> bb138__0_1362 [label="1"];
    bb136__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb137__0_1362 -> bb140__0_1362 [label="return"];
    bb137__0_1362 -> bb183__0_1362 [label="unwind"];
    bb138__0_1362 -> bb139__0_1362 [label="return"];
    bb138__0_1362 -> bb212__0_1362 [label="unwind"];
    bb139__0_1362 -> bb153__0_1362 [label=""];
    bb140__0_1362 -> bb141__0_1362 [label="return"];
    bb140__0_1362 -> bb183__0_1362 [label="unwind"];
    bb141__0_1362 -> bb142__0_1362 [label="0"];
    bb141__0_1362 -> bb143__0_1362 [label="1"];
    bb141__0_1362 -> bb4__0_1362 [label="otherwise"];
    bb142__0_1362 -> bb145__0_1362 [label="return"];
    bb142__0_1362 -> bb184__0_1362 [label="unwind"];
    bb143__0_1362 -> bb144__0_1362 [label="return"];
    bb143__0_1362 -> bb183__0_1362 [label="unwind"];
    bb144__0_1362 -> bb153__0_1362 [label="return"];
    bb144__0_1362 -> bb184__0_1362 [label="unwind"];
    bb145__0_1362 -> bb146__0_1362 [label="return"];
    bb145__0_1362 -> bb185__0_1362 [label="unwind"];
    bb146__0_1362 -> bb147__0_1362 [label="return"];
    bb146__0_1362 -> bb202__0_1362 [label="unwind"];
    bb147__0_1362 -> bb148__0_1362 [label="return"];
    bb147__0_1362 -> bb203__0_1362 [label="unwind"];
    bb148__0_1362 -> bb149__0_1362 [label="return"];
    bb148__0_1362 -> bb206__0_1362 [label="unwind"];
    bb149__0_1362 -> bb150__0_1362 [label="return"];
    bb149__0_1362 -> bb207__0_1362 [label="unwind"];
    bb150__0_1362 -> bb151__0_1362 [label="return"];
    bb150__0_1362 -> bb208__0_1362 [label="unwind"];
    bb151__0_1362 -> bb152__0_1362 [label="return"];
    bb151__0_1362 -> bb211__0_1362 [label="unwind"];
    bb152__0_1362 -> bb182__0_1362 [label=""];
    bb153__0_1362 -> bb154__0_1362 [label="return"];
    bb153__0_1362 -> bb185__0_1362 [label="unwind"];
    bb154__0_1362 -> bb155__0_1362 [label=""];
    bb155__0_1362 -> bb170__0_1362 [label="return"];
    bb155__0_1362 -> bb202__0_1362 [label="unwind"];
    bb156__0_1362 -> bb157__0_1362 [label="return"];
    bb156__0_1362 -> bb214__0_1362 [label="unwind"];
    bb157__0_1362 -> bb169__0_1362 [label=""];
    bb158__0_1362 -> bb169__0_1362 [label=""];
    bb159__0_1362 -> bb160__0_1362 [label="return"];
    bb159__0_1362 -> bb217__0_1362 [label="unwind"];
    bb160__0_1362 -> bb169__0_1362 [label=""];
    bb161__0_1362 -> bb169__0_1362 [label=""];
    bb162__0_1362 -> bb163__0_1362 [label="return"];
    bb162__0_1362 -> bb220__0_1362 [label="unwind"];
    bb163__0_1362 -> bb169__0_1362 [label=""];
    bb164__0_1362 -> bb169__0_1362 [label=""];
    bb165__0_1362 -> bb166__0_1362 [label="return"];
    bb165__0_1362 -> bb223__0_1362 [label="unwind"];
    bb166__0_1362 -> bb168__0_1362 [label=""];
    bb167__0_1362 -> bb168__0_1362 [label=""];
    bb168__0_1362 -> bb169__0_1362 [label=""];
    bb169__0_1362 -> bb170__0_1362 [label=""];
    bb170__0_1362 -> bb171__0_1362 [label="return"];
    bb170__0_1362 -> bb203__0_1362 [label="unwind"];
    bb171__0_1362 -> bb172__0_1362 [label="return"];
    bb171__0_1362 -> bb206__0_1362 [label="unwind"];
    bb172__0_1362 -> bb173__0_1362 [label=""];
    bb173__0_1362 -> bb174__0_1362 [label="return"];
    bb173__0_1362 -> bb207__0_1362 [label="unwind"];
    bb174__0_1362 -> bb175__0_1362 [label="return"];
    bb174__0_1362 -> bb208__0_1362 [label="unwind"];
    bb175__0_1362 -> bb176__0_1362 [label="return"];
    bb175__0_1362 -> bb211__0_1362 [label="unwind"];
    bb176__0_1362 -> bb180__0_1362 [label=""];
    bb177__0_1362 -> bb178__0_1362 [label="return"];
    bb177__0_1362 -> bb210__0_1362 [label="unwind"];
    bb178__0_1362 -> bb179__0_1362 [label="return"];
    bb178__0_1362 -> bb211__0_1362 [label="unwind"];
    bb179__0_1362 -> bb180__0_1362 [label=""];
    bb180__0_1362 -> bb181__0_1362 [label=""];
    bb181__0_1362 -> bb182__0_1362 [label=""];
    bb183__0_1362 -> bb184__0_1362 [label="return"];
    bb184__0_1362 -> bb185__0_1362 [label="return"];
    bb185__0_1362 -> bb202__0_1362 [label="return"];
    bb186__0_1362 -> bb187__0_1362 [label="return"];
    bb187__0_1362 -> bb214__0_1362 [label="return"];
    bb188__0_1362 -> bb189__0_1362 [label="return"];
    bb189__0_1362 -> bb202__0_1362 [label="return"];
    bb190__0_1362 -> bb191__0_1362 [label="return"];
    bb191__0_1362 -> bb217__0_1362 [label="return"];
    bb192__0_1362 -> bb193__0_1362 [label="return"];
    bb193__0_1362 -> bb202__0_1362 [label="return"];
    bb194__0_1362 -> bb195__0_1362 [label="return"];
    bb195__0_1362 -> bb220__0_1362 [label="return"];
    bb196__0_1362 -> bb197__0_1362 [label="return"];
    bb197__0_1362 -> bb202__0_1362 [label="return"];
    bb198__0_1362 -> bb199__0_1362 [label="return"];
    bb199__0_1362 -> bb223__0_1362 [label="return"];
    bb200__0_1362 -> bb201__0_1362 [label="return"];
    bb201__0_1362 -> bb202__0_1362 [label="return"];
    bb202__0_1362 -> bb203__0_1362 [label="return"];
    bb203__0_1362 -> bb206__0_1362 [label="return"];
    bb204__0_1362 -> bb206__0_1362 [label="return"];
    bb205__0_1362 -> bb206__0_1362 [label="return"];
    bb206__0_1362 -> bb207__0_1362 [label="return"];
    bb207__0_1362 -> bb208__0_1362 [label="return"];
    bb208__0_1362 -> bb211__0_1362 [label="return"];
    bb209__0_1362 -> bb210__0_1362 [label="return"];
    bb210__0_1362 -> bb211__0_1362 [label="return"];
    bb212__0_1362 -> bb184__0_1362 [label=""];
    bb213__0_1362 -> bb185__0_1362 [label=""];
    bb214__0_1362 -> bb202__0_1362 [label=""];
    bb215__0_1362 -> bb189__0_1362 [label=""];
    bb216__0_1362 -> bb202__0_1362 [label=""];
    bb217__0_1362 -> bb202__0_1362 [label=""];
    bb218__0_1362 -> bb193__0_1362 [label=""];
    bb219__0_1362 -> bb202__0_1362 [label=""];
    bb220__0_1362 -> bb202__0_1362 [label=""];
    bb221__0_1362 -> bb197__0_1362 [label=""];
    bb222__0_1362 -> bb202__0_1362 [label=""];
    bb223__0_1362 -> bb202__0_1362 [label=""];
    bb224__0_1362 -> bb201__0_1362 [label=""];
    bb225__0_1362 -> bb202__0_1362 [label=""];
    bb226__0_1362 -> bb206__0_1362 [label=""];
    bb227__0_1362 -> bb228__0_1362 [label=""];
    bb228__0_1362 -> bb209__0_1362 [label=""];
    bb229__0_1362 -> bb211__0_1362 [label=""];
    bb230__0_1362 -> bb11__0_1362 [label="return"];
    bb230__0_1362 -> bb210__0_1362 [label="unwind"];
}
