digraph Mir_0_559 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::orders::fill_spot_order(_1: u32, _2: &amp;ReErased state::state::State, _3: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, _4: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, _5: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _6: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _7: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _8: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, _9: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, _10: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;, _11: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;, _12: std::option::Option&lt;u32&gt;, _13: &amp;ReErased anchor_lang::prelude::Clock, _14: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _15: i64;<br align="left"/>let _16: u64;<br align="left"/>let _17: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _19: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _20: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _21: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _22: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _24: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _25: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _27: Closure(DefId(0:4718 ~ drift[d311]::controller::orders::fill_spot_order::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _33: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _34: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _35: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _36: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _37: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _39: Closure(DefId(0:4719 ~ drift[d311]::controller::orders::fill_spot_order::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _45: usize;<br align="left"/>let mut _46: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _47: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _48: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _49: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _50: std::slice::Iter&lt;ReErased, state::user::Order&gt;;<br align="left"/>let mut _51: &amp;ReErased [state::user::Order];<br align="left"/>let mut _52: &amp;ReErased [state::user::Order; 32_usize];<br align="left"/>let _53: &amp;ReErased state::user::User;<br align="left"/>let mut _54: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _55: Closure(DefId(0:560 ~ drift[d311]::controller::orders::fill_spot_order::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::Order,)) -&gt; bool, []), (&amp;ReErased u32,)]);<br align="left"/>let mut _56: &amp;ReErased u32;<br align="left"/>let mut _57: Closure(DefId(0:4720 ~ drift[d311]::controller::orders::fill_spot_order::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: usize;<br align="left"/>let _63: state::user::OrderStatus;<br align="left"/>let _64: u16;<br align="left"/>let _65: state::user::MarketType;<br align="left"/>let _66: controller::position::PositionDirection;<br align="left"/>let mut _67: (state::user::OrderStatus, u16, state::user::MarketType, controller::position::PositionDirection);<br align="left"/>let mut _68: state::user::OrderStatus;<br align="left"/>let mut _69: &amp;ReErased state::user::User;<br align="left"/>let mut _70: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _71: usize;<br align="left"/>let mut _72: usize;<br align="left"/>let mut _73: bool;<br align="left"/>let mut _74: u16;<br align="left"/>let mut _75: &amp;ReErased state::user::User;<br align="left"/>let mut _76: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _77: usize;<br align="left"/>let mut _78: usize;<br align="left"/>let mut _79: bool;<br align="left"/>let mut _80: state::user::MarketType;<br align="left"/>let mut _81: &amp;ReErased state::user::User;<br align="left"/>let mut _82: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _83: usize;<br align="left"/>let mut _84: usize;<br align="left"/>let mut _85: bool;<br align="left"/>let mut _86: controller::position::PositionDirection;<br align="left"/>let mut _87: &amp;ReErased state::user::User;<br align="left"/>let mut _88: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _89: usize;<br align="left"/>let mut _90: usize;<br align="left"/>let mut _91: bool;<br align="left"/>let _92: ();<br align="left"/>let _93: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _95: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _96: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _97: &amp;ReErased u16;<br align="left"/>let _98: &amp;ReErased u16;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _104: ();<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _106: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _107: bool;<br align="left"/>let mut _108: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _109: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _110: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _111: ();<br align="left"/>let _112: error::ErrorCode;<br align="left"/>let _113: ();<br align="left"/>let mut _114: &amp;ReErased str;<br align="left"/>let _115: &amp;ReErased str;<br align="left"/>let mut _116: &amp;ReErased std::string::String;<br align="left"/>let _117: &amp;ReErased std::string::String;<br align="left"/>let _118: std::string::String;<br align="left"/>let _119: std::string::String;<br align="left"/>let mut _120: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _122: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _123: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _124: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _125: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _126: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _127: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _128: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _129: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _130: &amp;ReErased error::ErrorCode;<br align="left"/>let _131: &amp;ReErased error::ErrorCode;<br align="left"/>let _132: ();<br align="left"/>let mut _133: &amp;ReErased str;<br align="left"/>let _134: &amp;ReErased str;<br align="left"/>let mut _135: error::ErrorCode;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: ();<br align="left"/>let _141: ();<br align="left"/>let mut _142: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _143: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _144: bool;<br align="left"/>let mut _145: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _146: &amp;ReErased state::user::MarketType;<br align="left"/>let _147: state::user::MarketType;<br align="left"/>let mut _148: ();<br align="left"/>let _149: error::ErrorCode;<br align="left"/>let _150: ();<br align="left"/>let mut _151: &amp;ReErased str;<br align="left"/>let _152: &amp;ReErased str;<br align="left"/>let mut _153: &amp;ReErased std::string::String;<br align="left"/>let _154: &amp;ReErased std::string::String;<br align="left"/>let _155: std::string::String;<br align="left"/>let _156: std::string::String;<br align="left"/>let mut _157: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _158: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _159: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _160: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _161: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _164: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _165: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _166: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _167: &amp;ReErased error::ErrorCode;<br align="left"/>let _168: &amp;ReErased error::ErrorCode;<br align="left"/>let _169: ();<br align="left"/>let mut _170: &amp;ReErased str;<br align="left"/>let _171: &amp;ReErased str;<br align="left"/>let mut _172: error::ErrorCode;<br align="left"/>let mut _173: isize;<br align="left"/>let _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _175: !;<br align="left"/>let mut _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _177: ();<br align="left"/>let _178: ();<br align="left"/>let mut _179: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _180: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _181: bool;<br align="left"/>let mut _182: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _183: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _184: state::user::OrderStatus;<br align="left"/>let mut _185: ();<br align="left"/>let _186: error::ErrorCode;<br align="left"/>let _187: ();<br align="left"/>let mut _188: &amp;ReErased str;<br align="left"/>let _189: &amp;ReErased str;<br align="left"/>let mut _190: &amp;ReErased std::string::String;<br align="left"/>let _191: &amp;ReErased std::string::String;<br align="left"/>let _192: std::string::String;<br align="left"/>let _193: std::string::String;<br align="left"/>let mut _194: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _195: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _196: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _197: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _198: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _199: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _200: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _201: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _202: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _203: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _204: &amp;ReErased error::ErrorCode;<br align="left"/>let _205: &amp;ReErased error::ErrorCode;<br align="left"/>let _206: ();<br align="left"/>let mut _207: &amp;ReErased str;<br align="left"/>let _208: &amp;ReErased str;<br align="left"/>let mut _209: error::ErrorCode;<br align="left"/>let mut _210: isize;<br align="left"/>let _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _212: !;<br align="left"/>let mut _213: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _214: ();<br align="left"/>let _215: ();<br align="left"/>let mut _216: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _217: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _218: bool;<br align="left"/>let mut _219: &amp;ReErased state::user::Order;<br align="left"/>let _220: &amp;ReErased state::user::User;<br align="left"/>let mut _221: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _222: usize;<br align="left"/>let mut _223: usize;<br align="left"/>let mut _224: bool;<br align="left"/>let mut _225: bool;<br align="left"/>let mut _226: &amp;ReErased state::user::Order;<br align="left"/>let _227: &amp;ReErased state::user::User;<br align="left"/>let mut _228: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _229: usize;<br align="left"/>let mut _230: usize;<br align="left"/>let mut _231: bool;<br align="left"/>let mut _232: ();<br align="left"/>let _233: error::ErrorCode;<br align="left"/>let _234: ();<br align="left"/>let mut _235: &amp;ReErased str;<br align="left"/>let _236: &amp;ReErased str;<br align="left"/>let mut _237: &amp;ReErased std::string::String;<br align="left"/>let _238: &amp;ReErased std::string::String;<br align="left"/>let _239: std::string::String;<br align="left"/>let _240: std::string::String;<br align="left"/>let mut _241: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _242: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _243: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _244: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _245: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _246: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _247: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _248: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _249: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _250: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _251: &amp;ReErased error::ErrorCode;<br align="left"/>let _252: &amp;ReErased error::ErrorCode;<br align="left"/>let _253: ();<br align="left"/>let mut _254: &amp;ReErased str;<br align="left"/>let _255: &amp;ReErased str;<br align="left"/>let mut _256: error::ErrorCode;<br align="left"/>let mut _257: isize;<br align="left"/>let _258: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _259: !;<br align="left"/>let mut _260: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _261: ();<br align="left"/>let _262: ();<br align="left"/>let mut _263: bool;<br align="left"/>let mut _264: &amp;ReErased state::user::User;<br align="left"/>let _265: &amp;ReErased state::user::User;<br align="left"/>let mut _266: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _267: !;<br align="left"/>let _268: ();<br align="left"/>let mut _269: &amp;ReErased str;<br align="left"/>let _270: &amp;ReErased str;<br align="left"/>let _271: ();<br align="left"/>let mut _272: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _273: &amp;ReErased mut state::user::User;<br align="left"/>let mut _274: &amp;ReErased mut state::user::User;<br align="left"/>let mut _275: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _276: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _277: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _278: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _279: u32;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: !;<br align="left"/>let _282: ();<br align="left"/>let mut _283: &amp;ReErased str;<br align="left"/>let _284: &amp;ReErased str;<br align="left"/>let _285: bool;<br align="left"/>let mut _286: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _287: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _288: bool;<br align="left"/>let mut _289: &amp;ReErased std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _290: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _291: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _292: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _293: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _294: (std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;, std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;);<br align="left"/>let mut _295: bool;<br align="left"/>let mut _296: bool;<br align="left"/>let _297: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _298: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _299: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _300: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _301: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _302: Closure(DefId(0:4721 ~ drift[d311]::controller::orders::fill_spot_order::{closure#4}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _303: isize;<br align="left"/>let _304: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _305: !;<br align="left"/>let mut _306: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _307: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _308: ();<br align="left"/>let mut _309: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _310: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _311: bool;<br align="left"/>let mut _312: u8;<br align="left"/>let mut _313: &amp;ReErased state::user::User;<br align="left"/>let mut _314: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _315: ();<br align="left"/>let _316: error::ErrorCode;<br align="left"/>let _317: ();<br align="left"/>let mut _318: &amp;ReErased str;<br align="left"/>let _319: &amp;ReErased str;<br align="left"/>let mut _320: &amp;ReErased std::string::String;<br align="left"/>let _321: &amp;ReErased std::string::String;<br align="left"/>let _322: std::string::String;<br align="left"/>let _323: std::string::String;<br align="left"/>let mut _324: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _325: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _326: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _327: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _328: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _329: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _330: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _331: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _332: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _333: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _334: &amp;ReErased error::ErrorCode;<br align="left"/>let _335: &amp;ReErased error::ErrorCode;<br align="left"/>let _336: ();<br align="left"/>let mut _337: &amp;ReErased str;<br align="left"/>let _338: &amp;ReErased str;<br align="left"/>let mut _339: &amp;ReErased std::string::String;<br align="left"/>let _340: &amp;ReErased std::string::String;<br align="left"/>let _341: std::string::String;<br align="left"/>let _342: std::string::String;<br align="left"/>let mut _343: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _344: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _345: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _346: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _347: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _348: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _349: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _350: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _351: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _352: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _353: &amp;ReErased u8;<br align="left"/>let _354: &amp;ReErased u8;<br align="left"/>let _355: &amp;ReErased state::user::User;<br align="left"/>let mut _356: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _357: error::ErrorCode;<br align="left"/>let mut _358: isize;<br align="left"/>let _359: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _360: !;<br align="left"/>let mut _361: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _362: ();<br align="left"/>let mut _363: bool;<br align="left"/>let mut _364: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _365: &amp;ReErased state::user::User;<br align="left"/>let mut _366: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _367: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _368: &amp;ReErased state::user::User;<br align="left"/>let mut _369: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _370: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _371: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _372: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _373: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _374: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _375: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _376: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _377: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _378: Closure(DefId(0:4722 ~ drift[d311]::controller::orders::fill_spot_order::{closure#5}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _379: isize;<br align="left"/>let _380: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _381: !;<br align="left"/>let mut _382: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _383: std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _384: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _385: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _386: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _387: std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let _388: i64;<br align="left"/>let mut _389: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _390: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _391: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _392: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _393: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _394: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _395: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _396: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _397: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _398: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _399: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _400: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _401: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _402: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _403: &amp;ReErased u16;<br align="left"/>let _404: &amp;ReErased u16;<br align="left"/>let mut _405: isize;<br align="left"/>let _406: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _407: !;<br align="left"/>let mut _408: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _409: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _410: isize;<br align="left"/>let _411: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _412: !;<br align="left"/>let mut _413: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _414: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _415: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _416: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;&gt;;<br align="left"/>let mut _417: std::result::Result&lt;std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _418: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _419: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _420: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _421: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _422: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _423: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _424: &amp;ReErased state::user::Order;<br align="left"/>let _425: &amp;ReErased state::user::Order;<br align="left"/>let _426: &amp;ReErased state::user::User;<br align="left"/>let mut _427: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _428: usize;<br align="left"/>let mut _429: usize;<br align="left"/>let mut _430: bool;<br align="left"/>let mut _431: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _432: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _433: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _434: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _435: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _436: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _437: u64;<br align="left"/>let mut _438: i64;<br align="left"/>let mut _439: std::option::Option&lt;u32&gt;;<br align="left"/>let mut _440: i64;<br align="left"/>let mut _441: u64;<br align="left"/>let mut _442: isize;<br align="left"/>let _443: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _444: !;<br align="left"/>let mut _445: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _446: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let _447: bool;<br align="left"/>let _448: ();<br align="left"/>let mut _449: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _450: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _451: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _452: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _453: isize;<br align="left"/>let _454: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _455: !;<br align="left"/>let mut _456: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _457: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _458: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _459: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _460: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _461: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _462: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _463: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _464: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _465: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _466: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _467: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _468: isize;<br align="left"/>let _469: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _470: !;<br align="left"/>let mut _471: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _472: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _473: ();<br align="left"/>let mut _474: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _475: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _476: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _477: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _478: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _479: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _480: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _481: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _482: i64;<br align="left"/>let mut _483: isize;<br align="left"/>let _484: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _485: !;<br align="left"/>let mut _486: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _487: ();<br align="left"/>let mut _488: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _489: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _490: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _491: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _492: &amp;ReErased u16;<br align="left"/>let _493: &amp;ReErased u16;<br align="left"/>let mut _494: isize;<br align="left"/>let _495: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _496: !;<br align="left"/>let mut _497: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _498: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _499: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _500: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _501: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _502: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _503: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _504: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _505: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _506: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _507: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _508: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _509: isize;<br align="left"/>let _510: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _511: !;<br align="left"/>let mut _512: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _513: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _514: ();<br align="left"/>let mut _515: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _516: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _517: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _518: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _519: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _520: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _521: std::option::Option&lt;&amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _522: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _523: i64;<br align="left"/>let mut _524: isize;<br align="left"/>let _525: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _526: !;<br align="left"/>let mut _527: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _528: ();<br align="left"/>let mut _529: i64;<br align="left"/>let mut _530: i64;<br align="left"/>let _531: ();<br align="left"/>let mut _532: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _533: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _534: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _535: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _536: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _537: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _538: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _539: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _540: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _541: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _542: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _543: isize;<br align="left"/>let _544: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _545: !;<br align="left"/>let mut _546: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _547: ();<br align="left"/>let _548: bool;<br align="left"/>let mut _549: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _550: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _551: i64;<br align="left"/>let mut _552: i64;<br align="left"/>let mut _553: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _554: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _555: i64;<br align="left"/>let mut _556: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _557: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _558: u64;<br align="left"/>let mut _559: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _560: isize;<br align="left"/>let _561: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _562: !;<br align="left"/>let mut _563: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _564: i64;<br align="left"/>let mut _565: isize;<br align="left"/>let _566: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _567: !;<br align="left"/>let mut _568: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _569: bool;<br align="left"/>let mut _570: bool;<br align="left"/>let mut _571: !;<br align="left"/>let _572: ();<br align="left"/>let mut _573: std::option::Option&lt;&amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _574: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _575: isize;<br align="left"/>let _576: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _577: ();<br align="left"/>let mut _578: &amp;ReErased mut state::user::User;<br align="left"/>let mut _579: &amp;ReErased mut state::user::User;<br align="left"/>let mut _580: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _581: u64;<br align="left"/>let _582: bool;<br align="left"/>let mut _583: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _584: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _585: &amp;ReErased state::user::User;<br align="left"/>let _586: &amp;ReErased state::user::User;<br align="left"/>let mut _587: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _588: usize;<br align="left"/>let mut _589: i64;<br align="left"/>let mut _590: isize;<br align="left"/>let _591: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _592: !;<br align="left"/>let mut _593: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _594: bool;<br align="left"/>let _595: bool;<br align="left"/>let mut _596: bool;<br align="left"/>let mut _597: &amp;ReErased state::user::User;<br align="left"/>let mut _598: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _599: usize;<br align="left"/>let mut _600: usize;<br align="left"/>let mut _601: bool;<br align="left"/>let _602: u16;<br align="left"/>let mut _603: &amp;ReErased state::user::User;<br align="left"/>let mut _604: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _605: usize;<br align="left"/>let mut _606: usize;<br align="left"/>let mut _607: bool;<br align="left"/>let _608: usize;<br align="left"/>let mut _609: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _610: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _611: &amp;ReErased state::user::User;<br align="left"/>let _612: &amp;ReErased state::user::User;<br align="left"/>let mut _613: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _614: u16;<br align="left"/>let mut _615: isize;<br align="left"/>let _616: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _617: !;<br align="left"/>let mut _618: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _619: usize;<br align="left"/>let _620: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _621: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _622: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _623: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _624: &amp;ReErased u16;<br align="left"/>let _625: &amp;ReErased u16;<br align="left"/>let mut _626: isize;<br align="left"/>let _627: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _628: !;<br align="left"/>let mut _629: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _630: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _631: i128;<br align="left"/>let mut _632: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _633: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _634: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _635: &amp;ReErased state::user::User;<br align="left"/>let mut _636: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _637: usize;<br align="left"/>let mut _638: usize;<br align="left"/>let mut _639: bool;<br align="left"/>let mut _640: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _641: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _642: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _643: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _644: isize;<br align="left"/>let _645: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _646: !;<br align="left"/>let mut _647: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _648: i128;<br align="left"/>let mut _649: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _650: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _651: &amp;ReErased state::user::Order;<br align="left"/>let _652: &amp;ReErased state::user::Order;<br align="left"/>let _653: &amp;ReErased state::user::User;<br align="left"/>let mut _654: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _655: usize;<br align="left"/>let mut _656: usize;<br align="left"/>let mut _657: bool;<br align="left"/>let mut _658: i64;<br align="left"/>let mut _659: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _660: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _661: i128;<br align="left"/>let mut _662: isize;<br align="left"/>let _663: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _664: !;<br align="left"/>let mut _665: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _666: i64;<br align="left"/>let mut _667: u64;<br align="left"/>let mut _668: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _669: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _670: isize;<br align="left"/>let _671: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _672: !;<br align="left"/>let mut _673: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _674: bool;<br align="left"/>let _675: ();<br align="left"/>let mut _676: bool;<br align="left"/>let mut _677: bool;<br align="left"/>let mut _678: !;<br align="left"/>let _679: u64;<br align="left"/>let mut _680: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _681: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _682: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _683: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _684: isize;<br align="left"/>let _685: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _686: !;<br align="left"/>let mut _687: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _688: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _689: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _690: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _691: &amp;ReErased mut state::user::User;<br align="left"/>let mut _692: &amp;ReErased mut state::user::User;<br align="left"/>let mut _693: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _694: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _695: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _696: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _697: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _698: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _699: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _700: u64;<br align="left"/>let mut _701: u64;<br align="left"/>let mut _702: isize;<br align="left"/>let _703: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _704: !;<br align="left"/>let mut _705: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _706: u64;<br align="left"/>let _707: state::events::OrderActionExplanation;<br align="left"/>let mut _708: bool;<br align="left"/>let _709: ();<br align="left"/>let mut _710: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _711: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _712: usize;<br align="left"/>let mut _713: &amp;ReErased mut state::user::User;<br align="left"/>let mut _714: &amp;ReErased mut state::user::User;<br align="left"/>let mut _715: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _716: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _717: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _718: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _719: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _720: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _721: i64;<br align="left"/>let mut _722: u64;<br align="left"/>let mut _723: state::events::OrderActionExplanation;<br align="left"/>let mut _724: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _725: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _726: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _727: u64;<br align="left"/>let mut _728: isize;<br align="left"/>let _729: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _730: !;<br align="left"/>let mut _731: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _732: ();<br align="left"/>let _733: ();<br align="left"/>let mut _734: bool;<br align="left"/>let mut _735: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let _736: enumflags2::BitFlags&lt;state::state::ExchangeStatus&gt;;<br align="left"/>let mut _737: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, enumflags2::BitFlags&lt;state::state::ExchangeStatus&gt;&gt;;<br align="left"/>let mut _738: std::result::Result&lt;enumflags2::BitFlags&lt;state::state::ExchangeStatus&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _739: &amp;ReErased state::state::State;<br align="left"/>let mut _740: isize;<br align="left"/>let _741: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _742: !;<br align="left"/>let mut _743: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _744: enumflags2::BitFlags&lt;state::state::ExchangeStatus&gt;;<br align="left"/>let _745: ();<br align="left"/>let mut _746: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _747: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _748: bool;<br align="left"/>let mut _749: enumflags2::BitFlags&lt;state::state::ExchangeStatus&gt;;<br align="left"/>let mut _750: enumflags2::BitFlags&lt;state::state::ExchangeStatus&gt;;<br align="left"/>let mut _751: state::state::ExchangeStatus;<br align="left"/>let mut _752: state::state::ExchangeStatus;<br align="left"/>let mut _753: ();<br align="left"/>let _754: error::ErrorCode;<br align="left"/>let _755: ();<br align="left"/>let mut _756: &amp;ReErased str;<br align="left"/>let _757: &amp;ReErased str;<br align="left"/>let mut _758: &amp;ReErased std::string::String;<br align="left"/>let _759: &amp;ReErased std::string::String;<br align="left"/>let _760: std::string::String;<br align="left"/>let _761: std::string::String;<br align="left"/>let mut _762: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _763: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _764: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _765: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _766: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _767: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _768: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _769: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _770: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _771: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _772: &amp;ReErased error::ErrorCode;<br align="left"/>let _773: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _774: error::ErrorCode;<br align="left"/>let mut _775: isize;<br align="left"/>let _776: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _777: !;<br align="left"/>let mut _778: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _779: ();<br align="left"/>let _780: u64;<br align="left"/>let _781: u64;<br align="left"/>let mut _782: (u64, u64);<br align="left"/>let mut _783: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64)&gt;;<br align="left"/>let mut _784: std::result::Result&lt;(u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _785: &amp;ReErased mut state::user::User;<br align="left"/>let mut _786: &amp;ReErased mut state::user::User;<br align="left"/>let mut _787: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _788: usize;<br align="left"/>let mut _789: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _790: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _791: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _792: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _793: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _794: &amp;ReErased state::user_map::UserMap&lt;ReErased&gt;;<br align="left"/>let mut _795: &amp;ReErased state::user_map::UserStatsMap&lt;ReErased&gt;;<br align="left"/>let mut _796: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)];<br align="left"/>let _797: &amp;ReErased [(anchor_lang::prelude::Pubkey, usize, u64)];<br align="left"/>let mut _798: &amp;ReErased std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let _799: &amp;ReErased std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64), std::alloc::Global&gt;;<br align="left"/>let mut _800: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _801: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _802: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _803: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _804: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _805: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _806: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _807: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _808: std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _809: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _810: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _811: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _812: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _813: i64;<br align="left"/>let mut _814: u64;<br align="left"/>let mut _815: &amp;ReErased state::state::FeeStructure;<br align="left"/>let _816: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _817: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _818: &amp;ReErased mut dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _819: bool;<br align="left"/>let mut _820: isize;<br align="left"/>let _821: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _822: !;<br align="left"/>let mut _823: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _824: (u64, u64);<br align="left"/>let _825: ();<br align="left"/>let mut _826: bool;<br align="left"/>let mut _827: u64;<br align="left"/>let _828: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _829: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _830: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _831: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _832: &amp;ReErased u16;<br align="left"/>let _833: &amp;ReErased u16;<br align="left"/>let mut _834: isize;<br align="left"/>let _835: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _836: !;<br align="left"/>let mut _837: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _838: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _839: u64;<br align="left"/>let mut _840: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _841: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _842: u64;<br align="left"/>let mut _843: u64;<br align="left"/>let mut _844: u64;<br align="left"/>let mut _845: state::spot_market::SpotMarket;<br align="left"/>let mut _846: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _847: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _848: isize;<br align="left"/>let _849: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _850: !;<br align="left"/>let mut _851: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _852: u64;<br align="left"/>let _853: i64;<br align="left"/>let mut _854: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _855: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _856: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _857: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _858: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _859: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _860: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _861: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _862: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _863: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _864: isize;<br align="left"/>let _865: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _866: !;<br align="left"/>let mut _867: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _868: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _869: i64;<br align="left"/>let mut _870: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _871: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _872: ();<br align="left"/>let mut _873: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _874: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _875: u64;<br align="left"/>let mut _876: i64;<br align="left"/>let mut _877: i64;<br align="left"/>let mut _878: u32;<br align="left"/>let mut _879: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _880: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _881: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _882: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _883: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _884: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _885: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _886: math::margin::MarginRequirementType;<br align="left"/>let mut _887: isize;<br align="left"/>let _888: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _889: !;<br align="left"/>let mut _890: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _891: u32;<br align="left"/>let mut _892: u64;<br align="left"/>let mut _893: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _894: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _895: bool;<br align="left"/>let mut _896: &amp;ReErased dyn [Binder(Trait(state::spot_fulfillment_params::SpotFulfillmentParams), [])] + ReErased;<br align="left"/>let mut _897: controller::position::PositionDirection;<br align="left"/>let mut _898: isize;<br align="left"/>let _899: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _900: !;<br align="left"/>let mut _901: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _902: ();<br align="left"/>let _903: bool;<br align="left"/>let mut _904: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _905: &amp;ReErased state::user::User;<br align="left"/>let mut _906: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _907: usize;<br align="left"/>let mut _908: usize;<br align="left"/>let mut _909: bool;<br align="left"/>let mut _910: &amp;ReErased state::user::OrderStatus;<br align="left"/>let _911: state::user::OrderStatus;<br align="left"/>let _912: bool;<br align="left"/>let mut _913: &amp;ReErased state::user::User;<br align="left"/>let mut _914: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _915: usize;<br align="left"/>let mut _916: usize;<br align="left"/>let mut _917: bool;<br align="left"/>let _918: bool;<br align="left"/>let mut _919: bool;<br align="left"/>let mut _920: bool;<br align="left"/>let _921: u16;<br align="left"/>let mut _922: &amp;ReErased state::user::User;<br align="left"/>let mut _923: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _924: usize;<br align="left"/>let mut _925: usize;<br align="left"/>let mut _926: bool;<br align="left"/>let _927: usize;<br align="left"/>let mut _928: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _929: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _930: &amp;ReErased state::user::User;<br align="left"/>let _931: &amp;ReErased state::user::User;<br align="left"/>let mut _932: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _933: u16;<br align="left"/>let mut _934: isize;<br align="left"/>let _935: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _936: !;<br align="left"/>let mut _937: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _938: usize;<br align="left"/>let _939: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _940: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _941: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _942: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _943: &amp;ReErased u16;<br align="left"/>let _944: &amp;ReErased u16;<br align="left"/>let mut _945: isize;<br align="left"/>let _946: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _947: !;<br align="left"/>let mut _948: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _949: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _950: i128;<br align="left"/>let mut _951: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _952: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _953: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _954: &amp;ReErased state::user::User;<br align="left"/>let mut _955: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _956: usize;<br align="left"/>let mut _957: usize;<br align="left"/>let mut _958: bool;<br align="left"/>let mut _959: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _960: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _961: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _962: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _963: isize;<br align="left"/>let _964: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _965: !;<br align="left"/>let mut _966: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _967: i128;<br align="left"/>let mut _968: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _969: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _970: &amp;ReErased state::user::Order;<br align="left"/>let _971: &amp;ReErased state::user::Order;<br align="left"/>let _972: &amp;ReErased state::user::User;<br align="left"/>let mut _973: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _974: usize;<br align="left"/>let mut _975: usize;<br align="left"/>let mut _976: bool;<br align="left"/>let mut _977: i64;<br align="left"/>let mut _978: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _979: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _980: i128;<br align="left"/>let mut _981: isize;<br align="left"/>let _982: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _983: !;<br align="left"/>let mut _984: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _985: i64;<br align="left"/>let mut _986: u64;<br align="left"/>let mut _987: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _988: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _989: isize;<br align="left"/>let _990: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _991: !;<br align="left"/>let mut _992: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _993: bool;<br align="left"/>let _994: bool;<br align="left"/>let mut _995: bool;<br align="left"/>let _996: u16;<br align="left"/>let mut _997: &amp;ReErased state::user::User;<br align="left"/>let mut _998: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _999: usize;<br align="left"/>let mut _1000: usize;<br align="left"/>let mut _1001: bool;<br align="left"/>let _1002: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1003: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1004: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1005: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1006: &amp;ReErased u16;<br align="left"/>let _1007: &amp;ReErased u16;<br align="left"/>let mut _1008: isize;<br align="left"/>let _1009: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1010: !;<br align="left"/>let mut _1011: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1012: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1013: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1014: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1015: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1016: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1017: isize;<br align="left"/>let _1018: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1019: !;<br align="left"/>let mut _1020: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1021: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1022: std::option::Option&lt;u64&gt;;<br align="left"/>let _1023: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1024: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _1025: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;)&gt;;<br align="left"/>let mut _1026: std::result::Result&lt;(std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;), error::ErrorCode&gt;;<br align="left"/>let mut _1027: &amp;ReErased state::user::User;<br align="left"/>let _1028: &amp;ReErased state::user::User;<br align="left"/>let mut _1029: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1030: usize;<br align="left"/>let mut _1031: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _1032: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1033: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1034: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1035: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _1036: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1037: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1038: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1039: isize;<br align="left"/>let _1040: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1041: !;<br align="left"/>let mut _1042: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1043: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;);<br align="left"/>let mut _1044: bool;<br align="left"/>let mut _1045: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1046: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _1047: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1048: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1049: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _1050: std::option::Option&lt;u64&gt;;<br align="left"/>let _1051: ();<br align="left"/>let mut _1052: bool;<br align="left"/>let mut _1053: bool;<br align="left"/>let _1054: u64;<br align="left"/>let mut _1055: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1056: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1057: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1058: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1059: isize;<br align="left"/>let _1060: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1061: !;<br align="left"/>let mut _1062: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1063: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1064: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1065: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1066: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1067: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1068: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1069: std::option::Option&lt;&amp;ReErased mut state::user::User&gt;;<br align="left"/>let mut _1070: &amp;ReErased mut std::option::Option&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _1071: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1072: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1073: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1074: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1075: u64;<br align="left"/>let mut _1076: u64;<br align="left"/>let mut _1077: isize;<br align="left"/>let _1078: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1079: !;<br align="left"/>let mut _1080: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1081: u64;<br align="left"/>let _1082: state::events::OrderActionExplanation;<br align="left"/>let mut _1083: bool;<br align="left"/>let mut _1084: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1085: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1086: usize;<br align="left"/>let mut _1087: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1088: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1089: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1090: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _1091: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1092: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1093: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1094: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1095: i64;<br align="left"/>let mut _1096: u64;<br align="left"/>let mut _1097: state::events::OrderActionExplanation;<br align="left"/>let mut _1098: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _1099: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _1100: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1101: u64;<br align="left"/>let mut _1102: isize;<br align="left"/>let _1103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1104: !;<br align="left"/>let mut _1105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1106: ();<br align="left"/>let _1107: ();<br align="left"/>let mut _1108: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1109: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1110: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _1111: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1112: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1113: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1114: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1115: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1116: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1117: &amp;ReErased u16;<br align="left"/>let _1118: &amp;ReErased u16;<br align="left"/>let mut _1119: isize;<br align="left"/>let _1120: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1121: !;<br align="left"/>let mut _1122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1123: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1124: isize;<br align="left"/>let _1125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1126: !;<br align="left"/>let mut _1127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1128: ();<br align="left"/>let _1129: ();<br align="left"/>let mut _1130: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1131: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1132: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _1133: u64;<br align="left"/>let mut _1134: u64;<br align="left"/>let mut _1135: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1136: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1137: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _1138: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _1139: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1142: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1143: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1144: &amp;ReErased state::user::OrderStatus;<br align="left"/>let mut _1145: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1146: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _1147: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1148: bool;<br align="left"/>let mut _1149: bool;<br align="left"/>let mut _1150: bool;<br align="left"/>let mut _1151: isize;<br align="left"/>let mut _1152: isize;<br align="left"/>let mut _1153: isize;<br align="left"/>let mut _1154: isize;<br align="left"/>let mut _1155: isize;<br align="left"/>let mut _1156: isize;<br align="left"/>let mut _1157: isize;<br align="left"/>let mut _1158: isize;<br align="left"/>let mut _1159: isize;<br align="left"/>let mut _1160: isize;<br align="left"/>let mut _1161: isize;<br align="left"/>let mut _1162: isize;<br align="left"/>let mut _1163: isize;<br align="left"/>let mut _1164: isize;<br align="left"/>let mut _1165: isize;<br align="left"/>let mut _1166: isize;<br align="left"/>let mut _1167: isize;<br align="left"/>let mut _1168: isize;<br align="left"/>let mut _1169: isize;<br align="left"/>let mut _1170: isize;<br align="left"/>let mut _1171: isize;<br align="left"/>let mut _1172: isize;<br align="left"/>let mut _1173: isize;<br align="left"/>let mut _1174: isize;<br align="left"/>let mut _1175: isize;<br align="left"/>let mut _1176: isize;<br align="left"/>let mut _1177: isize;<br align="left"/>let mut _1178: isize;<br align="left"/>let mut _1179: isize;<br align="left"/>let mut _1180: isize;<br align="left"/>let mut _1181: isize;<br align="left"/>let mut _1182: isize;<br align="left"/>let mut _1183: isize;<br align="left"/>let mut _1184: isize;<br align="left"/>let mut _1185: isize;<br align="left"/>let mut _1186: isize;<br align="left"/>let mut _1187: isize;<br align="left"/>let mut _1188: isize;<br align="left"/>let mut _1189: isize;<br align="left"/>let mut _1190: isize;<br align="left"/>let mut _1191: isize;<br align="left"/>let mut _1192: isize;<br align="left"/>let mut _1193: isize;<br align="left"/>let mut _1194: isize;<br align="left"/>let mut _1195: isize;<br align="left"/>let mut _1196: isize;<br align="left"/>let mut _1197: isize;<br align="left"/>let mut _1198: isize;<br align="left"/>let mut _1199: isize;<br align="left"/>let mut _1200: isize;<br align="left"/>let mut _1201: isize;<br align="left"/>let mut _1202: isize;<br align="left"/>let mut _1203: isize;<br align="left"/>let mut _1204: isize;<br align="left"/>let mut _1205: isize;<br align="left"/>let mut _1206: isize;<br align="left"/>let mut _1207: isize;<br align="left"/>let mut _1208: isize;<br align="left"/>let mut _1209: isize;<br align="left"/>let mut _1210: isize;<br align="left"/>let mut _1211: isize;<br align="left"/>let mut _1212: isize;<br align="left"/>let mut _1213: isize;<br align="left"/>let mut _1214: isize;<br align="left"/>let mut _1215: isize;<br align="left"/>let mut _1216: isize;<br align="left"/>let mut _1217: isize;<br align="left"/>let mut _1218: isize;<br align="left"/>let mut _1219: isize;<br align="left"/>let mut _1220: isize;<br align="left"/>let mut _1221: isize;<br align="left"/>let mut _1222: isize;<br align="left"/>let mut _1223: isize;<br align="left"/>let mut _1224: isize;<br align="left"/>let mut _1225: isize;<br align="left"/>let mut _1226: isize;<br align="left"/>let mut _1227: isize;<br align="left"/>let mut _1228: isize;<br align="left"/>let mut _1229: isize;<br align="left"/>let mut _1230: isize;<br align="left"/>let mut _1231: isize;<br align="left"/>let mut _1232: isize;<br align="left"/>let mut _1233: isize;<br align="left"/>let mut _1234: isize;<br align="left"/>let mut _1235: isize;<br align="left"/>debug order_id =&gt; _1;<br align="left"/>debug state =&gt; _2;<br align="left"/>debug user =&gt; _3;<br align="left"/>debug user_stats =&gt; _4;<br align="left"/>debug spot_market_map =&gt; _5;<br align="left"/>debug perp_market_map =&gt; _6;<br align="left"/>debug oracle_map =&gt; _7;<br align="left"/>debug filler =&gt; _8;<br align="left"/>debug filler_stats =&gt; _9;<br align="left"/>debug makers_and_referrer =&gt; _10;<br align="left"/>debug makers_and_referrer_stats =&gt; _11;<br align="left"/>debug jit_maker_order_id =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug fulfillment_params =&gt; _14;<br align="left"/>debug now =&gt; _15;<br align="left"/>debug slot =&gt; _16;<br align="left"/>debug filler_key =&gt; _17;<br align="left"/>debug user_key =&gt; _19;<br align="left"/>debug user =&gt; _21;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug user_stats =&gt; _33;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug order_index =&gt; _45;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug order_status =&gt; _63;<br align="left"/>debug order_market_index =&gt; _64;<br align="left"/>debug order_market_type =&gt; _65;<br align="left"/>debug order_direction =&gt; _66;<br align="left"/>debug spot_market =&gt; _93;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug error_code =&gt; _112;<br align="left"/>debug res =&gt; _119;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug error_code =&gt; _149;<br align="left"/>debug res =&gt; _156;<br align="left"/>debug residual =&gt; _174;<br align="left"/>debug val =&gt; _177;<br align="left"/>debug error_code =&gt; _186;<br align="left"/>debug res =&gt; _193;<br align="left"/>debug residual =&gt; _211;<br align="left"/>debug val =&gt; _214;<br align="left"/>debug error_code =&gt; _233;<br align="left"/>debug res =&gt; _240;<br align="left"/>debug residual =&gt; _258;<br align="left"/>debug val =&gt; _261;<br align="left"/>debug is_filler_taker =&gt; _285;<br align="left"/>debug is_filler_maker =&gt; _288;<br align="left"/>debug filler =&gt; _292;<br align="left"/>debug filler_stats =&gt; _293;<br align="left"/>debug filler =&gt; _297;<br align="left"/>debug residual =&gt; _304;<br align="left"/>debug val =&gt; _307;<br align="left"/>debug error_code =&gt; _316;<br align="left"/>debug res =&gt; _323;<br align="left"/>debug res =&gt; _342;<br align="left"/>debug residual =&gt; _359;<br align="left"/>debug val =&gt; _362;<br align="left"/>debug residual =&gt; _380;<br align="left"/>debug val =&gt; _383;<br align="left"/>debug oracle_price =&gt; _388;<br align="left"/>debug residual =&gt; _406;<br align="left"/>debug val =&gt; _409;<br align="left"/>debug residual =&gt; _411;<br align="left"/>debug val =&gt; _414;<br align="left"/>debug maker_order_info =&gt; _415;<br align="left"/>debug residual =&gt; _443;<br align="left"/>debug val =&gt; _446;<br align="left"/>debug oracle_stale_for_margin =&gt; _447;<br align="left"/>debug quote_market =&gt; _449;<br align="left"/>debug residual =&gt; _454;<br align="left"/>debug val =&gt; _457;<br align="left"/>debug oracle_price_data =&gt; _458;<br align="left"/>debug residual =&gt; _469;<br align="left"/>debug val =&gt; _472;<br align="left"/>debug residual =&gt; _484;<br align="left"/>debug val =&gt; _487;<br align="left"/>debug base_market =&gt; _488;<br align="left"/>debug residual =&gt; _495;<br align="left"/>debug val =&gt; _498;<br align="left"/>debug oracle_price_data =&gt; _499;<br align="left"/>debug residual =&gt; _510;<br align="left"/>debug val =&gt; _513;<br align="left"/>debug residual =&gt; _525;<br align="left"/>debug val =&gt; _528;<br align="left"/>debug residual =&gt; _544;<br align="left"/>debug val =&gt; _547;<br align="left"/>debug oracle_too_divergent_with_twap_5min =&gt; _548;<br align="left"/>debug residual =&gt; _561;<br align="left"/>debug val =&gt; _564;<br align="left"/>debug residual =&gt; _566;<br align="left"/>debug val =&gt; _569;<br align="left"/>debug filler =&gt; _576;<br align="left"/>debug should_expire_order =&gt; _582;<br align="left"/>debug residual =&gt; _591;<br align="left"/>debug val =&gt; _594;<br align="left"/>debug should_cancel_reduce_only =&gt; _595;<br align="left"/>debug market_index =&gt; _602;<br align="left"/>debug position_index =&gt; _608;<br align="left"/>debug residual =&gt; _616;<br align="left"/>debug val =&gt; _619;<br align="left"/>debug spot_market =&gt; _620;<br align="left"/>debug residual =&gt; _627;<br align="left"/>debug val =&gt; _630;<br align="left"/>debug signed_token_amount =&gt; _631;<br align="left"/>debug residual =&gt; _645;<br align="left"/>debug val =&gt; _648;<br align="left"/>debug residual =&gt; _663;<br align="left"/>debug val =&gt; _666;<br align="left"/>debug residual =&gt; _671;<br align="left"/>debug val =&gt; _674;<br align="left"/>debug filler_reward =&gt; _679;<br align="left"/>debug quote_market =&gt; _680;<br align="left"/>debug residual =&gt; _685;<br align="left"/>debug val =&gt; _688;<br align="left"/>debug residual =&gt; _703;<br align="left"/>debug val =&gt; _706;<br align="left"/>debug explanation =&gt; _707;<br align="left"/>debug residual =&gt; _729;<br align="left"/>debug val =&gt; _732;<br align="left"/>debug exchange_status =&gt; _736;<br align="left"/>debug residual =&gt; _741;<br align="left"/>debug val =&gt; _744;<br align="left"/>debug error_code =&gt; _754;<br align="left"/>debug res =&gt; _761;<br align="left"/>debug residual =&gt; _776;<br align="left"/>debug val =&gt; _779;<br align="left"/>debug base_asset_amount =&gt; _780;<br align="left"/>debug quote_asset_amount =&gt; _781;<br align="left"/>debug residual =&gt; _821;<br align="left"/>debug val =&gt; _824;<br align="left"/>debug spot_market =&gt; _828;<br align="left"/>debug residual =&gt; _835;<br align="left"/>debug val =&gt; _838;<br align="left"/>debug fill_price =&gt; _839;<br align="left"/>debug residual =&gt; _849;<br align="left"/>debug val =&gt; _852;<br align="left"/>debug oracle_price =&gt; _853;<br align="left"/>debug residual =&gt; _865;<br align="left"/>debug val =&gt; _868;<br align="left"/>debug oracle_twap_5min =&gt; _869;<br align="left"/>debug residual =&gt; _888;<br align="left"/>debug val =&gt; _891;<br align="left"/>debug residual =&gt; _899;<br align="left"/>debug val =&gt; _902;<br align="left"/>debug is_open =&gt; _903;<br align="left"/>debug is_reduce_only =&gt; _912;<br align="left"/>debug should_cancel_reduce_only =&gt; _918;<br align="left"/>debug market_index =&gt; _921;<br align="left"/>debug position_index =&gt; _927;<br align="left"/>debug residual =&gt; _935;<br align="left"/>debug val =&gt; _938;<br align="left"/>debug spot_market =&gt; _939;<br align="left"/>debug residual =&gt; _946;<br align="left"/>debug val =&gt; _949;<br align="left"/>debug signed_token_amount =&gt; _950;<br align="left"/>debug residual =&gt; _964;<br align="left"/>debug val =&gt; _967;<br align="left"/>debug residual =&gt; _982;<br align="left"/>debug val =&gt; _985;<br align="left"/>debug residual =&gt; _990;<br align="left"/>debug val =&gt; _993;<br align="left"/>debug should_cancel_for_no_borrow_liquidity =&gt; _994;<br align="left"/>debug market_index =&gt; _996;<br align="left"/>debug base_market =&gt; _1002;<br align="left"/>debug residual =&gt; _1009;<br align="left"/>debug val =&gt; _1012;<br align="left"/>debug quote_market =&gt; _1013;<br align="left"/>debug residual =&gt; _1018;<br align="left"/>debug val =&gt; _1021;<br align="left"/>debug max_base_asset_amount =&gt; _1022;<br align="left"/>debug max_quote_asset_amount =&gt; _1023;<br align="left"/>debug residual =&gt; _1040;<br align="left"/>debug val =&gt; _1043;<br align="left"/>debug filler_reward =&gt; _1054;<br align="left"/>debug quote_market =&gt; _1055;<br align="left"/>debug residual =&gt; _1060;<br align="left"/>debug val =&gt; _1063;<br align="left"/>debug residual =&gt; _1078;<br align="left"/>debug val =&gt; _1081;<br align="left"/>debug explanation =&gt; _1082;<br align="left"/>debug residual =&gt; _1103;<br align="left"/>debug val =&gt; _1106;<br align="left"/>debug residual =&gt; _1120;<br align="left"/>debug val =&gt; _1123;<br align="left"/>debug residual =&gt; _1125;<br align="left"/>debug val =&gt; _1128;<br align="left"/>>;
    bb0__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1148 = const false<br/>_1150 = const false<br/>_1149 = const false<br/>StorageLive(_15)<br/>_15 = ((*_13).4: i64)<br/>StorageLive(_16)<br/>_16 = ((*_13).0: u64)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;(*_8)<br/></td></tr><tr><td align="left">_17 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _18)</td></tr></table>>];
    bb1__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;(*_3)<br/></td></tr><tr><td align="left">_19 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _20)</td></tr></table>>];
    bb2__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;(*_3)<br/></td></tr><tr><td align="left">_25 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _26)</td></tr></table>>];
    bb3__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>_27 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_24 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _25, move _27)</td></tr></table>>];
    bb4__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb5__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_28 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb6__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_23 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_22 = move _32<br/>StorageDead(_32)<br/>_21 = &amp;mut _22<br/>_1153 = discriminant(_23)<br/>StorageDead(_23)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = &amp;(*_4)<br/></td></tr><tr><td align="left">_37 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _38)</td></tr></table>>];
    bb7__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb8__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb9__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>_1151 = discriminant(_23)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageLive(_39)<br/>_39 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_36 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _37, move _39)</td></tr></table>>];
    bb11__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _36)</td></tr></table>>];
    bb12__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_40 = discriminant(_35)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb13__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = move ((_35 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_34 = move _44<br/>StorageDead(_44)<br/>_33 = &amp;mut _34<br/>_1157 = discriminant(_35)<br/>StorageDead(_35)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_21)<br/></td></tr><tr><td align="left">_53 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _54)</td></tr></table>>];
    bb14__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_35 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb15__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_1155 = discriminant(_35)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_52 = &amp;((*_53).5: [state::user::Order; 32])<br/>_51 = move _52 as &amp;[state::user::Order] (PointerCoercion(Unsize))<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = core::slice::&lt;impl [Order]&gt;::iter(move _51)</td></tr></table>>];
    bb17__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_49 = &amp;mut _50<br/>StorageDead(_51)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_1<br/>_55 = {closure@programs/drift/src/controller/orders.rs:3716:19: 3716:26} { order_id: move _56 }<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_48 = &lt;std::slice::Iter&lt;'_, Order&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/controller/orders.rs:3716:19: 3716:26}&gt;(move _49, move _55)</td></tr></table>>];
    bb18__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_49)<br/>StorageLive(_57)<br/>_57 = {closure@programs/drift/src/error.rs:647:9: 647:11}<br/></td></tr><tr><td align="left">_47 = Option::&lt;usize&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/error.rs:647:9: 647:11}&gt;(move _48, move _57)</td></tr></table>>];
    bb19__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_46 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _47)</td></tr></table>>];
    bb20__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_58 = discriminant(_46)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb21__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_46 as Continue).0: usize)<br/>_45 = _62<br/>StorageDead(_62)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_21)<br/></td></tr><tr><td align="left">_69 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb22__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_46 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb23__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>_71 = _45<br/>_72 = Len(((*_69).5: [state::user::Order; 32]))<br/>_73 = Lt(_71, _72)<br/></td></tr><tr><td align="left">assert(move _73, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _72, _71)</td></tr></table>>];
    bb25__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_68 = (((*_69).5: [state::user::Order; 32])[_71].12: state::user::OrderStatus)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = &amp;(*_21)<br/></td></tr><tr><td align="left">_75 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb26__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageLive(_77)<br/>_77 = _45<br/>_78 = Len(((*_75).5: [state::user::Order; 32]))<br/>_79 = Lt(_77, _78)<br/></td></tr><tr><td align="left">assert(move _79, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _78, _77)</td></tr></table>>];
    bb27__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_74 = (((*_75).5: [state::user::Order; 32])[_77].11: u16)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;(*_21)<br/></td></tr><tr><td align="left">_81 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _82)</td></tr></table>>];
    bb28__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_83)<br/>_83 = _45<br/>_84 = Len(((*_81).5: [state::user::Order; 32]))<br/>_85 = Lt(_83, _84)<br/></td></tr><tr><td align="left">assert(move _85, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _84, _83)</td></tr></table>>];
    bb29__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_80 = (((*_81).5: [state::user::Order; 32])[_83].14: state::user::MarketType)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;(*_21)<br/></td></tr><tr><td align="left">_87 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb30__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageLive(_89)<br/>_89 = _45<br/>_90 = Len(((*_87).5: [state::user::Order; 32]))<br/>_91 = Lt(_89, _90)<br/></td></tr><tr><td align="left">assert(move _91, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _90, _89)</td></tr></table>>];
    bb31__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_86 = (((*_87).5: [state::user::Order; 32])[_89].17: controller::position::PositionDirection)<br/>_67 = (move _68, move _74, move _80, move _86)<br/>StorageDead(_86)<br/>StorageDead(_80)<br/>StorageDead(_74)<br/>StorageDead(_68)<br/>StorageLive(_63)<br/>_63 = (_67.0: state::user::OrderStatus)<br/>StorageLive(_64)<br/>_64 = (_67.1: u16)<br/>StorageLive(_65)<br/>_65 = (_67.2: state::user::MarketType)<br/>StorageLive(_66)<br/>_66 = (_67.3: controller::position::PositionDirection)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;(*_5)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>_98 = &amp;_64<br/>_97 = &amp;(*_98)<br/></td></tr><tr><td align="left">_95 = SpotMarketMap::&lt;'_&gt;::get_ref(move _96, move _97)</td></tr></table>>];
    bb32__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb33__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_99 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb34__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = move ((_94 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_93 = move _103<br/>StorageDead(_103)<br/>_1161 = discriminant(_94)<br/>StorageDead(_98)<br/>StorageDead(_94)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_93<br/></td></tr><tr><td align="left">_109 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _110)</td></tr></table>>];
    bb35__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb36__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>_1159 = discriminant(_94)<br/>StorageDead(_98)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_108 = &amp;(*_109)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_107 = SpotMarket::fills_enabled(move _108)</td></tr></table>>];
    bb38__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb39__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageLive(_111)<br/>_111 = ()<br/>_106 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _111)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageLive(_112)<br/>_112 = error::ErrorCode::MarketFillOrderPaused<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_1147 = const _<br/>_123 = &amp;(*_1147)<br/>_122 = &amp;(*_123)<br/>_121 = move _122 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_122)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = &amp;_112<br/>_130 = &amp;(*_131)<br/></td></tr><tr><td align="left">_129 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _130)</td></tr></table>>];
    bb41__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_128 = [move _129]<br/>StorageDead(_129)<br/>_127 = &amp;_128<br/>_126 = &amp;(*_127)<br/>_125 = move _126 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_120 = Arguments::&lt;'_&gt;::new_v1(move _121, move _125)</td></tr></table>>];
    bb42__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = format(move _120)</td></tr></table>>];
    bb43__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_131)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_123)<br/>_118 = move _119<br/>StorageDead(_119)<br/>_117 = &amp;_118<br/>_116 = &amp;(*_117)<br/></td></tr><tr><td align="left">_115 = &lt;String as Deref&gt;::deref(move _116)</td></tr></table>>];
    bb44__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">_114 = &amp;(*_115)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">_113 = solana_program::log::sol_log(move _114)</td></tr></table>>];
    bb45__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">drop(_118)</td></tr></table>>];
    bb46__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_113)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = const &quot;Market unavailable for fills&quot;<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = solana_program::log::sol_log(move _133)</td></tr></table>>];
    bb47__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageLive(_135)<br/>_135 = _112<br/>_106 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _135)<br/>StorageDead(_135)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb49__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_136 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb50__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_105 as Continue).0: ())<br/>_104 = _140<br/>StorageDead(_140)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>_92 = const ()<br/></td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb51__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb52__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb53__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;_65<br/>StorageLive(_146)<br/>_1146 = const _<br/>_146 = &amp;(*_1146)<br/></td></tr><tr><td align="left">_144 = &lt;state::user::MarketType as PartialEq&gt;::eq(move _145, move _146)</td></tr></table>>];
    bb54__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left">switchInt(move _144)</td></tr></table>>];
    bb55__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_148)<br/>_148 = ()<br/>_143 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _148)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_149)<br/>_149 = error::ErrorCode::InvalidOrderMarketType<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_1145 = const _<br/>_160 = &amp;(*_1145)<br/>_159 = &amp;(*_160)<br/>_158 = move _159 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_159)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;_149<br/>_167 = &amp;(*_168)<br/></td></tr><tr><td align="left">_166 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _167)</td></tr></table>>];
    bb57__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_165 = [move _166]<br/>StorageDead(_166)<br/>_164 = &amp;_165<br/>_163 = &amp;(*_164)<br/>_162 = move _163 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_157 = Arguments::&lt;'_&gt;::new_v1(move _158, move _162)</td></tr></table>>];
    bb58__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_156 = format(move _157)</td></tr></table>>];
    bb59__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_160)<br/>_155 = move _156<br/>StorageDead(_156)<br/>_154 = &amp;_155<br/>_153 = &amp;(*_154)<br/></td></tr><tr><td align="left">_152 = &lt;String as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb60__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_151 = &amp;(*_152)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_150 = solana_program::log::sol_log(move _151)</td></tr></table>>];
    bb61__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb62__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>_171 = const &quot;must be spot order&quot;<br/>_170 = &amp;(*_171)<br/></td></tr><tr><td align="left">_169 = solana_program::log::sol_log(move _170)</td></tr></table>>];
    bb63__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_171)<br/>StorageDead(_169)<br/>StorageLive(_172)<br/>_172 = _149<br/>_143 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _172)<br/>StorageDead(_172)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">_142 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _143)</td></tr></table>>];
    bb65__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>_173 = discriminant(_142)<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb66__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_177)<br/>_177 = ((_142 as Continue).0: ())<br/>_141 = _177<br/>StorageDead(_177)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = &amp;_63<br/>StorageLive(_183)<br/>_1144 = const _<br/>_183 = &amp;(*_1144)<br/></td></tr><tr><td align="left">_181 = &lt;OrderStatus as PartialEq&gt;::eq(move _182, move _183)</td></tr></table>>];
    bb67__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_142 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_176)<br/>_176 = _174<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _176)</td></tr></table>>];
    bb68__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left">switchInt(move _181)</td></tr></table>>];
    bb70__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_185)<br/>_185 = ()<br/>_180 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _185)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_186)<br/>_186 = error::ErrorCode::OrderNotOpen<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_1143 = const _<br/>_197 = &amp;(*_1143)<br/>_196 = &amp;(*_197)<br/>_195 = move _196 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_196)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = &amp;_186<br/>_204 = &amp;(*_205)<br/></td></tr><tr><td align="left">_203 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _204)</td></tr></table>>];
    bb72__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_202 = [move _203]<br/>StorageDead(_203)<br/>_201 = &amp;_202<br/>_200 = &amp;(*_201)<br/>_199 = move _200 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_194 = Arguments::&lt;'_&gt;::new_v1(move _195, move _199)</td></tr></table>>];
    bb73__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">_193 = format(move _194)</td></tr></table>>];
    bb74__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_205)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_197)<br/>_192 = move _193<br/>StorageDead(_193)<br/>_191 = &amp;_192<br/>_190 = &amp;(*_191)<br/></td></tr><tr><td align="left">_189 = &lt;String as Deref&gt;::deref(move _190)</td></tr></table>>];
    bb75__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_188 = &amp;(*_189)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">_187 = solana_program::log::sol_log(move _188)</td></tr></table>>];
    bb76__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/></td></tr><tr><td align="left">drop(_192)</td></tr></table>>];
    bb77__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>_208 = const &quot;Order not open&quot;<br/>_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = solana_program::log::sol_log(move _207)</td></tr></table>>];
    bb78__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageLive(_209)<br/>_209 = _186<br/>_180 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _209)<br/>StorageDead(_209)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _180)</td></tr></table>>];
    bb80__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_210 = discriminant(_179)<br/></td></tr><tr><td align="left">switchInt(move _210)</td></tr></table>>];
    bb81__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_179 as Continue).0: ())<br/>_178 = _214<br/>StorageDead(_214)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = &amp;(*_21)<br/></td></tr><tr><td align="left">_220 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb82__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_211)<br/>_211 = ((_179 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_213)<br/>_213 = _211<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _213)</td></tr></table>>];
    bb83__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_179)<br/>StorageDead(_178)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageLive(_222)<br/>_222 = _45<br/>_223 = Len(((*_220).5: [state::user::Order; 32]))<br/>_224 = Lt(_222, _223)<br/></td></tr><tr><td align="left">assert(move _224, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _223, _222)</td></tr></table>>];
    bb85__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">_219 = &amp;((*_220).5: [state::user::Order; 32])[_222]<br/></td></tr><tr><td align="left">_218 = Order::must_be_triggered(move _219)</td></tr></table>>];
    bb86__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb87__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;(*_21)<br/></td></tr><tr><td align="left">_227 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _228)</td></tr></table>>];
    bb88__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>StorageLive(_229)<br/>_229 = _45<br/>_230 = Len(((*_227).5: [state::user::Order; 32]))<br/>_231 = Lt(_229, _230)<br/></td></tr><tr><td align="left">assert(move _231, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _230, _229)</td></tr></table>>];
    bb90__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_226 = &amp;((*_227).5: [state::user::Order; 32])[_229]<br/></td></tr><tr><td align="left">_225 = Order::triggered(move _226)</td></tr></table>>];
    bb91__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left">switchInt(move _225)</td></tr></table>>];
    bb92__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageLive(_232)<br/>_232 = ()<br/>_217 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _232)<br/>StorageDead(_232)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageLive(_233)<br/>_233 = error::ErrorCode::OrderMustBeTriggeredFirst<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_1142 = const _<br/>_244 = &amp;(*_1142)<br/>_243 = &amp;(*_244)<br/>_242 = move _243 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_243)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = &amp;_233<br/>_251 = &amp;(*_252)<br/></td></tr><tr><td align="left">_250 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _251)</td></tr></table>>];
    bb94__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_251)<br/>_249 = [move _250]<br/>StorageDead(_250)<br/>_248 = &amp;_249<br/>_247 = &amp;(*_248)<br/>_246 = move _247 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_241 = Arguments::&lt;'_&gt;::new_v1(move _242, move _246)</td></tr></table>>];
    bb95__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">_240 = format(move _241)</td></tr></table>>];
    bb96__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_241)<br/>StorageDead(_252)<br/>StorageDead(_249)<br/>StorageDead(_248)<br/>StorageDead(_244)<br/>_239 = move _240<br/>StorageDead(_240)<br/>_238 = &amp;_239<br/>_237 = &amp;(*_238)<br/></td></tr><tr><td align="left">_236 = &lt;String as Deref&gt;::deref(move _237)</td></tr></table>>];
    bb97__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">_235 = &amp;(*_236)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">_234 = solana_program::log::sol_log(move _235)</td></tr></table>>];
    bb98__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/></td></tr><tr><td align="left">drop(_239)</td></tr></table>>];
    bb99__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>StorageDead(_238)<br/>StorageDead(_236)<br/>StorageDead(_234)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = const &quot;Order must be triggered first&quot;<br/>_254 = &amp;(*_255)<br/></td></tr><tr><td align="left">_253 = solana_program::log::sol_log(move _254)</td></tr></table>>];
    bb100__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageLive(_256)<br/>_256 = _233<br/>_217 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _256)<br/>StorageDead(_256)<br/>StorageDead(_233)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">_216 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _217)</td></tr></table>>];
    bb102__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>_257 = discriminant(_216)<br/></td></tr><tr><td align="left">switchInt(move _257)</td></tr></table>>];
    bb103__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_261)<br/>_261 = ((_216 as Continue).0: ())<br/>_215 = _261<br/>StorageDead(_261)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = &amp;(*_21)<br/></td></tr><tr><td align="left">_265 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _266)</td></tr></table>>];
    bb104__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_258)<br/>_258 = ((_216 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_260)<br/>_260 = _258<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _260)</td></tr></table>>];
    bb105__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_216)<br/>StorageDead(_215)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">_264 = &amp;(*_265)<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_263 = User::is_bankrupt(move _264)</td></tr></table>>];
    bb107__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left">switchInt(move _263)</td></tr></table>>];
    bb108__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_264)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_270 = const &quot;User is bankrupt&quot;<br/>_269 = &amp;(*_270)<br/></td></tr><tr><td align="left">_268 = solana_program::log::sol_log(move _269)</td></tr></table>>];
    bb109__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_270)<br/>StorageDead(_268)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const 0_u64)<br/>StorageDead(_263)<br/>StorageDead(_262)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_264)<br/>_262 = const ()<br/>StorageDead(_263)<br/>StorageDead(_262)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_274 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _275)</td></tr></table>>];
    bb111__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">_273 = &amp;mut (*_274)<br/>StorageDead(_275)<br/>StorageLive(_276)<br/>_276 = &amp;(*_6)<br/>StorageLive(_277)<br/>_277 = &amp;(*_5)<br/>StorageLive(_278)<br/>_278 = &amp;mut (*_7)<br/>StorageLive(_279)<br/>_279 = ((*_2).11: u32)<br/></td></tr><tr><td align="left">_272 = validate_user_not_being_liquidated(move _273, move _276, move _277, move _278, move _279)</td></tr></table>>];
    bb112__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_278)<br/>StorageDead(_277)<br/>StorageDead(_276)<br/>StorageDead(_273)<br/>_280 = discriminant(_272)<br/></td></tr><tr><td align="left">switchInt(move _280)</td></tr></table>>];
    bb113__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>_284 = const &quot;User is being liquidated&quot;<br/>_283 = &amp;(*_284)<br/></td></tr><tr><td align="left">_282 = solana_program::log::sol_log(move _283)</td></tr></table>>];
    bb114__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_271 = const ()<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = &amp;_19<br/>StorageLive(_287)<br/>_287 = &amp;_17<br/></td></tr><tr><td align="left">_285 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _286, move _287)</td></tr></table>>];
    bb115__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageDead(_284)<br/>StorageDead(_282)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const 0_u64)<br/>StorageDead(_274)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>_289 = &amp;((*_10).0: std::collections::BTreeMap&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>_291 = &amp;_17<br/>_290 = &amp;(*_291)<br/></td></tr><tr><td align="left">_288 = BTreeMap::&lt;anchor_lang::prelude::Pubkey, anchor_lang::prelude::AccountLoader&lt;'_, User&gt;&gt;::contains_key::&lt;anchor_lang::prelude::Pubkey&gt;(move _289, move _290)</td></tr></table>>];
    bb117__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageDead(_289)<br/>StorageDead(_291)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_295 = _288<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb118__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_296)<br/>_296 = _285<br/></td></tr><tr><td align="left">switchInt(move _296)</td></tr></table>>];
    bb119__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_301 = &amp;(*_8)<br/></td></tr><tr><td align="left">_300 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _301)</td></tr></table>>];
    bb120__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>StorageLive(_302)<br/>_302 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_299 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _300, move _302)</td></tr></table>>];
    bb121__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">_298 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _299)</td></tr></table>>];
    bb122__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_303 = discriminant(_298)<br/></td></tr><tr><td align="left">switchInt(move _303)</td></tr></table>>];
    bb123__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageLive(_307)<br/>_307 = move ((_298 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_1148 = const true<br/>_297 = move _307<br/>StorageDead(_307)<br/>_1165 = discriminant(_298)<br/>StorageDead(_298)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>_314 = &amp;_297<br/></td></tr><tr><td align="left">_313 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _314)</td></tr></table>>];
    bb124__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_304)<br/>_304 = ((_298 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_306)<br/>_306 = _304<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _306)</td></tr></table>>];
    bb125__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_304)<br/>_1163 = discriminant(_298)<br/>StorageDead(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>_312 = ((*_313).27: u8)<br/>_311 = Eq(move _312, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _311)</td></tr></table>>];
    bb127__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_312)<br/>StorageLive(_315)<br/>_315 = ()<br/>_310 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _315)<br/>StorageDead(_315)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_312)<br/>StorageLive(_316)<br/>_316 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>_1141 = const _<br/>_327 = &amp;(*_1141)<br/>_326 = &amp;(*_327)<br/>_325 = move _326 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_326)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>_335 = &amp;_316<br/>_334 = &amp;(*_335)<br/></td></tr><tr><td align="left">_333 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _334)</td></tr></table>>];
    bb129__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>_332 = [move _333]<br/>StorageDead(_333)<br/>_331 = &amp;_332<br/>_330 = &amp;(*_331)<br/>_329 = move _330 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">_324 = Arguments::&lt;'_&gt;::new_v1(move _325, move _329)</td></tr></table>>];
    bb130__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">_323 = format(move _324)</td></tr></table>>];
    bb131__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_335)<br/>StorageDead(_332)<br/>StorageDead(_331)<br/>StorageDead(_327)<br/>_322 = move _323<br/>StorageDead(_323)<br/>_321 = &amp;_322<br/>_320 = &amp;(*_321)<br/></td></tr><tr><td align="left">_319 = &lt;String as Deref&gt;::deref(move _320)</td></tr></table>>];
    bb132__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">_318 = &amp;(*_319)<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">_317 = solana_program::log::sol_log(move _318)</td></tr></table>>];
    bb133__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/></td></tr><tr><td align="left">drop(_322)</td></tr></table>>];
    bb134__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_321)<br/>StorageDead(_319)<br/>StorageDead(_317)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_1140 = const _<br/>_346 = &amp;(*_1140)<br/>_345 = &amp;(*_346)<br/>_344 = move _345 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_345)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>_356 = &amp;_297<br/></td></tr><tr><td align="left">_355 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _356)</td></tr></table>>];
    bb135__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>_354 = &amp;((*_355).27: u8)<br/>_353 = &amp;(*_354)<br/></td></tr><tr><td align="left">_352 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _353)</td></tr></table>>];
    bb136__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>_351 = [move _352]<br/>StorageDead(_352)<br/>_350 = &amp;_351<br/>_349 = &amp;(*_350)<br/>_348 = move _349 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_349)<br/></td></tr><tr><td align="left">_343 = Arguments::&lt;'_&gt;::new_v1(move _344, move _348)</td></tr></table>>];
    bb137__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">_342 = format(move _343)</td></tr></table>>];
    bb138__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>StorageDead(_355)<br/>StorageDead(_354)<br/>StorageDead(_351)<br/>StorageDead(_350)<br/>StorageDead(_346)<br/>_341 = move _342<br/>StorageDead(_342)<br/>_340 = &amp;_341<br/>_339 = &amp;(*_340)<br/></td></tr><tr><td align="left">_338 = &lt;String as Deref&gt;::deref(move _339)</td></tr></table>>];
    bb139__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">_337 = &amp;(*_338)<br/>StorageDead(_339)<br/></td></tr><tr><td align="left">_336 = solana_program::log::sol_log(move _337)</td></tr></table>>];
    bb140__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/></td></tr><tr><td align="left">drop(_341)</td></tr></table>>];
    bb141__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageDead(_340)<br/>StorageDead(_338)<br/>StorageDead(_336)<br/>StorageLive(_357)<br/>_357 = _316<br/>_310 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _357)<br/>StorageDead(_357)<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_311)<br/></td></tr><tr><td align="left">_309 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _310)</td></tr></table>>];
    bb143__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>_358 = discriminant(_309)<br/></td></tr><tr><td align="left">switchInt(move _358)</td></tr></table>>];
    bb144__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_362)<br/>_362 = ((_309 as Continue).0: ())<br/>_308 = _362<br/>StorageDead(_362)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_366 = &amp;_297<br/></td></tr><tr><td align="left">_365 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _366)</td></tr></table>>];
    bb145__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_359)<br/>_359 = ((_309 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_361)<br/>_361 = _359<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _361)</td></tr></table>>];
    bb146__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>StorageDead(_359)<br/>StorageDead(_309)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>_364 = &amp;((*_365).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = &amp;(*_21)<br/></td></tr><tr><td align="left">_368 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _369)</td></tr></table>>];
    bb148__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_369)<br/>_367 = &amp;((*_368).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_363 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _364, move _367)</td></tr></table>>];
    bb149__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left">switchInt(move _363)</td></tr></table>>];
    bb150__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_364)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>_1148 = const false<br/>_371 = move _297<br/>_370 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::Some(move _371)<br/>StorageDead(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>_377 = &amp;(*_9)<br/></td></tr><tr><td align="left">_376 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load_mut(move _377)</td></tr></table>>];
    bb151__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>StorageLive(_378)<br/>_378 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_375 = std::result::Result::&lt;RefMut&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _376, move _378)</td></tr></table>>];
    bb152__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">_374 = &lt;std::result::Result&lt;RefMut&lt;'_, UserStats&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _375)</td></tr></table>>];
    bb153__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>_379 = discriminant(_374)<br/></td></tr><tr><td align="left">switchInt(move _379)</td></tr></table>>];
    bb154__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_383)<br/>_383 = move ((_374 as Continue).0: std::cell::RefMut&lt;'_, state::user::UserStats&gt;)<br/>_373 = move _383<br/>StorageDead(_383)<br/>_372 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::Some(move _373)<br/>StorageDead(_373)<br/>_294 = (move _370, move _372)<br/>StorageDead(_372)<br/>StorageDead(_370)<br/>_1167 = discriminant(_374)<br/>StorageDead(_374)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageLive(_380)<br/>_380 = ((_374 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_382)<br/>_382 = _380<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _382)</td></tr></table>>];
    bb156__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_382)<br/>StorageDead(_380)<br/>StorageDead(_373)<br/>StorageDead(_372)<br/></td></tr><tr><td align="left">drop(_370)</td></tr></table>>];
    bb157__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_364)<br/>StorageLive(_384)<br/>_384 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::None<br/>StorageLive(_385)<br/>_385 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/>_294 = (move _384, move _385)<br/>StorageDead(_385)<br/>StorageDead(_384)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/></td></tr><tr><td align="left">switchInt(_1148)</td></tr></table>>];
    bb159__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_1148 = const false<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_386)<br/>_386 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::None<br/>StorageLive(_387)<br/>_387 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::None<br/>_294 = (move _386, move _387)<br/>StorageDead(_387)<br/>StorageDead(_386)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_295)<br/>StorageLive(_292)<br/>_292 = move (_294.0: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::User&gt;&gt;)<br/>StorageLive(_293)<br/>_293 = move (_294.1: std::option::Option&lt;std::cell::RefMut&lt;'_, state::user::UserStats&gt;&gt;)<br/>StorageDead(_294)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>_392 = &amp;mut (*_7)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>_402 = &amp;(*_5)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;_64<br/>_403 = &amp;(*_404)<br/></td></tr><tr><td align="left">_401 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _402, move _403)</td></tr></table>>];
    bb162__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">_400 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _401)</td></tr></table>>];
    bb163__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">_1150 = const true<br/>StorageDead(_401)<br/>_405 = discriminant(_400)<br/></td></tr><tr><td align="left">switchInt(move _405)</td></tr></table>>];
    bb164__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_409)<br/>_409 = move ((_400 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_399 = move _409<br/>StorageDead(_409)<br/>_398 = &amp;_399<br/></td></tr><tr><td align="left">_397 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _398)</td></tr></table>>];
    bb165__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_406)<br/>_406 = ((_400 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_408)<br/>_408 = _406<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _408)</td></tr></table>>];
    bb166__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_406)<br/>StorageDead(_398)<br/>StorageDead(_396)<br/>StorageDead(_393)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_396 = &amp;(*_397)<br/>StorageDead(_398)<br/></td></tr><tr><td align="left">_395 = SpotMarket::oracle_id(move _396)</td></tr></table>>];
    bb168__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_396)<br/>_394 = &amp;_395<br/>_393 = &amp;(*_394)<br/></td></tr><tr><td align="left">_391 = OracleMap::&lt;'_&gt;::get_price_data(move _392, move _393)</td></tr></table>>];
    bb169__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_392)<br/></td></tr><tr><td align="left">_390 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _391)</td></tr></table>>];
    bb170__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>_410 = discriminant(_390)<br/></td></tr><tr><td align="left">switchInt(move _410)</td></tr></table>>];
    bb171__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_414)<br/>_414 = ((_390 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_389 = _414<br/>StorageDead(_414)<br/>_388 = ((*_389).0: i64)<br/></td></tr><tr><td align="left">drop(_399)</td></tr></table>>];
    bb172__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_411)<br/>_411 = ((_390 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_413)<br/>_413 = _411<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _413)</td></tr></table>>];
    bb173__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">drop(_399)</td></tr></table>>];
    bb174__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>StorageLive(_428)<br/>_428 = _45<br/>_429 = Len(((*_426).5: [state::user::Order; 32]))<br/>_430 = Lt(_428, _429)<br/></td></tr><tr><td align="left">assert(move _430, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _429, _428)</td></tr></table>>];
    bb175__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">_425 = &amp;((*_426).5: [state::user::Order; 32])[_428]<br/>_424 = &amp;(*_425)<br/>StorageLive(_431)<br/>StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>_434 = &amp;mut _292<br/></td></tr><tr><td align="left">_433 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_deref_mut(move _434)</td></tr></table>>];
    bb176__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/>_432 = &amp;mut _433<br/>_431 = &amp;mut (*_432)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;_17<br/>_435 = &amp;(*_436)<br/>StorageLive(_437)<br/>_437 = (((*_2).6: state::state::FeeStructure).3: u64)<br/>StorageLive(_438)<br/>_438 = _388<br/>StorageLive(_439)<br/>_439 = _12<br/>StorageLive(_440)<br/>_440 = _15<br/>StorageLive(_441)<br/>_441 = _16<br/></td></tr><tr><td align="left">_417 = get_spot_maker_orders_info(move _418, move _419, move _420, move _421, move _422, move _424, move _431, move _435, move _437, move _438, move _439, move _440, move _441)</td></tr></table>>];
    bb177__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_441)<br/>StorageDead(_440)<br/>StorageDead(_439)<br/>StorageDead(_438)<br/>StorageDead(_437)<br/>StorageDead(_435)<br/>StorageDead(_431)<br/>StorageDead(_424)<br/>StorageDead(_422)<br/>StorageDead(_421)<br/>StorageDead(_420)<br/>StorageDead(_419)<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">_416 = &lt;std::result::Result&lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _417)</td></tr></table>>];
    bb178__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>_442 = discriminant(_416)<br/></td></tr><tr><td align="left">switchInt(move _442)</td></tr></table>>];
    bb179__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_446)<br/>_446 = move ((_416 as Continue).0: std::vec::Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt;)<br/>_415 = move _446<br/>StorageDead(_446)<br/>_1173 = discriminant(_416)<br/>StorageDead(_436)<br/>StorageDead(_433)<br/>StorageDead(_432)<br/>StorageDead(_428)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>StorageDead(_423)<br/>StorageDead(_416)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>_452 = &amp;(*_5)<br/></td></tr><tr><td align="left">_451 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _452)</td></tr></table>>];
    bb180__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_443)<br/>_443 = ((_416 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_445)<br/>_445 = _443<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _445)</td></tr></table>>];
    bb181__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>StorageDead(_443)<br/>_1171 = discriminant(_416)<br/>StorageDead(_436)<br/>StorageDead(_433)<br/>StorageDead(_432)<br/>StorageDead(_428)<br/>StorageDead(_426)<br/>StorageDead(_425)<br/>StorageDead(_423)<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/></td></tr><tr><td align="left">_450 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _451)</td></tr></table>>];
    bb183__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>_453 = discriminant(_450)<br/></td></tr><tr><td align="left">switchInt(move _453)</td></tr></table>>];
    bb184__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_457)<br/>_457 = move ((_450 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_449 = move _457<br/>StorageDead(_457)<br/>_1177 = discriminant(_450)<br/>StorageDead(_450)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>_461 = &amp;mut (*_7)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>_467 = &amp;_449<br/></td></tr><tr><td align="left">_466 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _467)</td></tr></table>>];
    bb185__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageLive(_454)<br/>_454 = ((_450 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_456)<br/>_456 = _454<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _456)</td></tr></table>>];
    bb186__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_456)<br/>StorageDead(_454)<br/>_1175 = discriminant(_450)<br/>StorageDead(_450)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">_465 = &amp;(*_466)<br/>StorageDead(_467)<br/></td></tr><tr><td align="left">_464 = SpotMarket::oracle_id(move _465)</td></tr></table>>];
    bb188__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>_463 = &amp;_464<br/>_462 = &amp;(*_463)<br/></td></tr><tr><td align="left">_460 = OracleMap::&lt;'_&gt;::get_price_data(move _461, move _462)</td></tr></table>>];
    bb189__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_462)<br/>StorageDead(_461)<br/></td></tr><tr><td align="left">_459 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _460)</td></tr></table>>];
    bb190__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>_468 = discriminant(_459)<br/></td></tr><tr><td align="left">switchInt(move _468)</td></tr></table>>];
    bb191__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageLive(_472)<br/>_472 = ((_459 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_458 = _472<br/>StorageDead(_472)<br/>StorageDead(_466)<br/>StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_459)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>_479 = &amp;mut _449<br/>_478 = &amp;mut (*_479)<br/></td></tr><tr><td align="left">_477 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _478)</td></tr></table>>];
    bb192__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageLive(_469)<br/>_469 = ((_459 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_471)<br/>_471 = _469<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _471)</td></tr></table>>];
    bb193__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_471)<br/>StorageDead(_469)<br/>StorageDead(_466)<br/>StorageDead(_464)<br/>StorageDead(_463)<br/>StorageDead(_459)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">_476 = &amp;mut (*_477)<br/>StorageDead(_478)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>_481 = &amp;(*_458)<br/>_480 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _481)<br/>StorageDead(_481)<br/>StorageLive(_482)<br/>_482 = _15<br/></td></tr><tr><td align="left">_475 = controller::spot_balance::update_spot_market_cumulative_interest(move _476, move _480, move _482)</td></tr></table>>];
    bb195__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_482)<br/>StorageDead(_480)<br/>StorageDead(_476)<br/></td></tr><tr><td align="left">_474 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _475)</td></tr></table>>];
    bb196__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>_483 = discriminant(_474)<br/></td></tr><tr><td align="left">switchInt(move _483)</td></tr></table>>];
    bb197__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_487)<br/>_487 = ((_474 as Continue).0: ())<br/>_473 = _487<br/>StorageDead(_487)<br/>StorageDead(_479)<br/>StorageDead(_477)<br/>StorageDead(_474)<br/>StorageDead(_473)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>_491 = &amp;(*_5)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>_493 = &amp;_64<br/>_492 = &amp;(*_493)<br/></td></tr><tr><td align="left">_490 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _491, move _492)</td></tr></table>>];
    bb198__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_484)<br/>_484 = ((_474 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_486)<br/>_486 = _484<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _486)</td></tr></table>>];
    bb199__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/>StorageDead(_484)<br/>StorageDead(_479)<br/>StorageDead(_477)<br/>StorageDead(_474)<br/>StorageDead(_473)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_492)<br/>StorageDead(_491)<br/></td></tr><tr><td align="left">_489 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _490)</td></tr></table>>];
    bb201__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/>_494 = discriminant(_489)<br/></td></tr><tr><td align="left">switchInt(move _494)</td></tr></table>>];
    bb202__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageLive(_498)<br/>_498 = move ((_489 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_488 = move _498<br/>StorageDead(_498)<br/>_1181 = discriminant(_489)<br/>StorageDead(_493)<br/>StorageDead(_489)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>_502 = &amp;mut (*_7)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_508 = &amp;_488<br/></td></tr><tr><td align="left">_507 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _508)</td></tr></table>>];
    bb203__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageLive(_495)<br/>_495 = ((_489 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_497)<br/>_497 = _495<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _497)</td></tr></table>>];
    bb204__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_497)<br/>StorageDead(_495)<br/>_1179 = discriminant(_489)<br/>StorageDead(_493)<br/>StorageDead(_489)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">_506 = &amp;(*_507)<br/>StorageDead(_508)<br/></td></tr><tr><td align="left">_505 = SpotMarket::oracle_id(move _506)</td></tr></table>>];
    bb206__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_506)<br/>_504 = &amp;_505<br/>_503 = &amp;(*_504)<br/></td></tr><tr><td align="left">_501 = OracleMap::&lt;'_&gt;::get_price_data(move _502, move _503)</td></tr></table>>];
    bb207__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>StorageDead(_502)<br/></td></tr><tr><td align="left">_500 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _501)</td></tr></table>>];
    bb208__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>_509 = discriminant(_500)<br/></td></tr><tr><td align="left">switchInt(move _509)</td></tr></table>>];
    bb209__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageLive(_513)<br/>_513 = ((_500 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_499 = _513<br/>StorageDead(_513)<br/>StorageDead(_507)<br/>StorageDead(_505)<br/>StorageDead(_504)<br/>StorageDead(_500)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>_520 = &amp;mut _488<br/>_519 = &amp;mut (*_520)<br/></td></tr><tr><td align="left">_518 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _519)</td></tr></table>>];
    bb210__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageLive(_510)<br/>_510 = ((_500 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_512)<br/>_512 = _510<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _512)</td></tr></table>>];
    bb211__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/>StorageDead(_510)<br/>StorageDead(_507)<br/>StorageDead(_505)<br/>StorageDead(_504)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">_517 = &amp;mut (*_518)<br/>StorageDead(_519)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>_522 = &amp;(*_499)<br/>_521 = Option::&lt;&amp;OraclePriceData&gt;::Some(move _522)<br/>StorageDead(_522)<br/>StorageLive(_523)<br/>_523 = _15<br/></td></tr><tr><td align="left">_516 = controller::spot_balance::update_spot_market_cumulative_interest(move _517, move _521, move _523)</td></tr></table>>];
    bb213__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_517)<br/></td></tr><tr><td align="left">_515 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _516)</td></tr></table>>];
    bb214__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>_524 = discriminant(_515)<br/></td></tr><tr><td align="left">switchInt(move _524)</td></tr></table>>];
    bb215__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageLive(_528)<br/>_528 = ((_515 as Continue).0: ())<br/>_514 = _528<br/>StorageDead(_528)<br/>StorageDead(_520)<br/>StorageDead(_518)<br/>StorageDead(_515)<br/>StorageDead(_514)<br/>StorageLive(_529)<br/>_529 = ((*_499).2: i64)<br/>StorageLive(_530)<br/>_530 = ((((*_2).7: state::state::OracleGuardRails).1: state::state::ValidityGuardRails).1: i64)<br/>_447 = Gt(move _529, move _530)<br/>StorageDead(_530)<br/>StorageDead(_529)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>_534 = &amp;(*_14)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>_538 = &amp;_488<br/>_537 = &amp;(*_538)<br/></td></tr><tr><td align="left">_536 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _537)</td></tr></table>>];
    bb216__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageLive(_525)<br/>_525 = ((_515 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_527)<br/>_527 = _525<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _527)</td></tr></table>>];
    bb217__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>StorageDead(_525)<br/>StorageDead(_520)<br/>StorageDead(_518)<br/>StorageDead(_515)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">_535 = &amp;(*_536)<br/>StorageDead(_537)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>_542 = &amp;_449<br/>_541 = &amp;(*_542)<br/></td></tr><tr><td align="left">_540 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _541)</td></tr></table>>];
    bb219__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">_539 = &amp;(*_540)<br/>StorageDead(_541)<br/></td></tr><tr><td align="left">_533 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::validate_markets(move _534, move _535, move _539)</td></tr></table>>];
    bb220__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/>StorageDead(_535)<br/>StorageDead(_534)<br/></td></tr><tr><td align="left">_532 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _533)</td></tr></table>>];
    bb221__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>_543 = discriminant(_532)<br/></td></tr><tr><td align="left">switchInt(move _543)</td></tr></table>>];
    bb222__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_547)<br/>_547 = ((_532 as Continue).0: ())<br/>_531 = _547<br/>StorageDead(_547)<br/>StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_538)<br/>StorageDead(_536)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>_551 = ((*_499).0: i64)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>_554 = &amp;_488<br/></td></tr><tr><td align="left">_553 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _554)</td></tr></table>>];
    bb223__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_544)<br/>_544 = ((_532 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_546)<br/>_546 = _544<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _546)</td></tr></table>>];
    bb224__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_546)<br/>StorageDead(_544)<br/>StorageDead(_542)<br/>StorageDead(_540)<br/>StorageDead(_538)<br/>StorageDead(_536)<br/>StorageDead(_532)<br/>StorageDead(_531)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_554)<br/>_552 = (((*_553).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>_559 = &amp;((*_2).7: state::state::OracleGuardRails)<br/></td></tr><tr><td align="left">_558 = state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(move _559)</td></tr></table>>];
    bb226__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_559)<br/></td></tr><tr><td align="left">_557 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _558)</td></tr></table>>];
    bb227__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/></td></tr><tr><td align="left">_556 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _557)</td></tr></table>>];
    bb228__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>_560 = discriminant(_556)<br/></td></tr><tr><td align="left">switchInt(move _560)</td></tr></table>>];
    bb229__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_564)<br/>_564 = ((_556 as Continue).0: i64)<br/>_555 = _564<br/>StorageDead(_564)<br/></td></tr><tr><td align="left">_550 = math::orders::is_oracle_too_divergent_with_twap_5min(move _551, move _552, move _555)</td></tr></table>>];
    bb230__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_561)<br/>_561 = ((_556 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_563)<br/>_563 = _561<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _563)</td></tr></table>>];
    bb231__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_563)<br/>StorageDead(_561)<br/>StorageDead(_555)<br/>StorageDead(_552)<br/>StorageDead(_551)<br/>StorageDead(_550)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_555)<br/>StorageDead(_552)<br/>StorageDead(_551)<br/></td></tr><tr><td align="left">_549 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _550)</td></tr></table>>];
    bb233__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_550)<br/>_565 = discriminant(_549)<br/></td></tr><tr><td align="left">switchInt(move _565)</td></tr></table>>];
    bb234__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageLive(_569)<br/>_569 = ((_549 as Continue).0: bool)<br/>_548 = _569<br/>StorageDead(_569)<br/>StorageDead(_556)<br/>StorageDead(_553)<br/>StorageDead(_549)<br/>StorageLive(_570)<br/>_570 = _548<br/></td></tr><tr><td align="left">switchInt(move _570)</td></tr></table>>];
    bb235__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageLive(_566)<br/>_566 = ((_549 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_568)<br/>_568 = _566<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _568)</td></tr></table>>];
    bb236__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_568)<br/>StorageDead(_566)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>_574 = &amp;mut _292<br/></td></tr><tr><td align="left">_573 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_mut(move _574)</td></tr></table>>];
    bb238__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">_448 = const ()<br/>StorageDead(_570)<br/>StorageDead(_548)<br/>StorageDead(_499)<br/></td></tr><tr><td align="left">drop(_488)</td></tr></table>>];
    bb239__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/>_575 = discriminant(_573)<br/></td></tr><tr><td align="left">switchInt(move _575)</td></tr></table>>];
    bb240__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageLive(_576)<br/>_576 = move ((_573 as Some).0: &amp;mut std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>_580 = &amp;mut (*_576)<br/></td></tr><tr><td align="left">_579 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _580)</td></tr></table>>];
    bb241__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">_578 = &amp;mut (*_579)<br/>StorageDead(_580)<br/>StorageLive(_581)<br/>_581 = _16<br/></td></tr><tr><td align="left">_577 = User::update_last_active_slot(move _578, move _581)</td></tr></table>>];
    bb242__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>StorageDead(_578)<br/>StorageDead(_579)<br/>StorageDead(_577)<br/>_572 = const ()<br/>StorageDead(_576)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb243__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">_572 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_573)<br/>StorageDead(_572)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const 0_u64)<br/>StorageDead(_570)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>StorageDead(_458)<br/></td></tr><tr><td align="left">drop(_449)</td></tr></table>>];
    bb246__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>_587 = &amp;(*_21)<br/></td></tr><tr><td align="left">_586 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _587)</td></tr></table>>];
    bb247__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">_585 = &amp;(*_586)<br/>StorageDead(_587)<br/>StorageLive(_588)<br/>_588 = _45<br/>StorageLive(_589)<br/>_589 = _15<br/></td></tr><tr><td align="left">_584 = math::orders::should_expire_order_before_fill(move _585, move _588, move _589)</td></tr></table>>];
    bb248__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_589)<br/>StorageDead(_588)<br/>StorageDead(_585)<br/></td></tr><tr><td align="left">_583 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _584)</td></tr></table>>];
    bb249__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_584)<br/>_590 = discriminant(_583)<br/></td></tr><tr><td align="left">switchInt(move _590)</td></tr></table>>];
    bb250__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_594)<br/>_594 = ((_583 as Continue).0: bool)<br/>_582 = _594<br/>StorageDead(_594)<br/>StorageDead(_586)<br/>StorageDead(_583)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>_598 = &amp;(*_21)<br/></td></tr><tr><td align="left">_597 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _598)</td></tr></table>>];
    bb251__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageLive(_591)<br/>_591 = ((_583 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_593)<br/>_593 = _591<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _593)</td></tr></table>>];
    bb252__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_593)<br/>StorageDead(_591)<br/>StorageDead(_586)<br/>StorageDead(_583)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_598)<br/>StorageLive(_599)<br/>_599 = _45<br/>_600 = Len(((*_597).5: [state::user::Order; 32]))<br/>_601 = Lt(_599, _600)<br/></td></tr><tr><td align="left">assert(move _601, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _600, _599)</td></tr></table>>];
    bb254__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">_596 = (((*_597).5: [state::user::Order; 32])[_599].18: bool)<br/></td></tr><tr><td align="left">switchInt(move _596)</td></tr></table>>];
    bb255__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>StorageDead(_597)<br/>StorageLive(_602)<br/>StorageLive(_603)<br/>StorageLive(_604)<br/>_604 = &amp;(*_21)<br/></td></tr><tr><td align="left">_603 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _604)</td></tr></table>>];
    bb256__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_604)<br/>StorageLive(_605)<br/>_605 = _45<br/>_606 = Len(((*_603).5: [state::user::Order; 32]))<br/>_607 = Lt(_605, _606)<br/></td></tr><tr><td align="left">assert(move _607, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _606, _605)</td></tr></table>>];
    bb257__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">_602 = (((*_603).5: [state::user::Order; 32])[_605].11: u16)<br/>StorageDead(_605)<br/>StorageDead(_603)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>_613 = &amp;(*_21)<br/></td></tr><tr><td align="left">_612 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _613)</td></tr></table>>];
    bb258__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">_611 = &amp;(*_612)<br/>StorageDead(_613)<br/>StorageLive(_614)<br/>_614 = _602<br/></td></tr><tr><td align="left">_610 = User::get_spot_position_index(move _611, move _614)</td></tr></table>>];
    bb259__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_614)<br/>StorageDead(_611)<br/></td></tr><tr><td align="left">_609 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _610)</td></tr></table>>];
    bb260__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_610)<br/>_615 = discriminant(_609)<br/></td></tr><tr><td align="left">switchInt(move _615)</td></tr></table>>];
    bb261__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageLive(_619)<br/>_619 = ((_609 as Continue).0: usize)<br/>_608 = _619<br/>StorageDead(_619)<br/>StorageDead(_612)<br/>StorageDead(_609)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>_623 = &amp;(*_5)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>_625 = &amp;_602<br/>_624 = &amp;(*_625)<br/></td></tr><tr><td align="left">_622 = SpotMarketMap::&lt;'_&gt;::get_ref(move _623, move _624)</td></tr></table>>];
    bb262__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageLive(_616)<br/>_616 = ((_609 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_618)<br/>_618 = _616<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _618)</td></tr></table>>];
    bb263__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_618)<br/>StorageDead(_616)<br/>StorageDead(_612)<br/>StorageDead(_609)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>StorageDead(_623)<br/></td></tr><tr><td align="left">_621 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _622)</td></tr></table>>];
    bb265__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/>_626 = discriminant(_621)<br/></td></tr><tr><td align="left">switchInt(move _626)</td></tr></table>>];
    bb266__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageLive(_630)<br/>_630 = move ((_621 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_620 = move _630<br/>StorageDead(_630)<br/>_1185 = discriminant(_621)<br/>StorageDead(_625)<br/>StorageDead(_621)<br/>StorageLive(_631)<br/>StorageLive(_632)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>_636 = &amp;(*_21)<br/></td></tr><tr><td align="left">_635 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _636)</td></tr></table>>];
    bb267__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageLive(_627)<br/>_627 = ((_621 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_629)<br/>_629 = _627<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _629)</td></tr></table>>];
    bb268__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_629)<br/>StorageDead(_627)<br/>_1183 = discriminant(_621)<br/>StorageDead(_625)<br/>StorageDead(_621)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb269__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_636)<br/>StorageLive(_637)<br/>_637 = _608<br/>_638 = Len(((*_635).3: [state::user::SpotPosition; 8]))<br/>_639 = Lt(_637, _638)<br/></td></tr><tr><td align="left">assert(move _639, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _638, _637)</td></tr></table>>];
    bb270__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">_634 = &amp;((*_635).3: [state::user::SpotPosition; 8])[_637]<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>_643 = &amp;_620<br/>_642 = &amp;(*_643)<br/></td></tr><tr><td align="left">_641 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _642)</td></tr></table>>];
    bb271__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">_640 = &amp;(*_641)<br/>StorageDead(_642)<br/></td></tr><tr><td align="left">_633 = SpotPosition::get_signed_token_amount(move _634, move _640)</td></tr></table>>];
    bb272__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_640)<br/>StorageDead(_634)<br/></td></tr><tr><td align="left">_632 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _633)</td></tr></table>>];
    bb273__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_633)<br/>_644 = discriminant(_632)<br/></td></tr><tr><td align="left">switchInt(move _644)</td></tr></table>>];
    bb274__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageLive(_648)<br/>_648 = ((_632 as Continue).0: i128)<br/>_631 = _648<br/>StorageDead(_648)<br/>StorageDead(_643)<br/>StorageDead(_641)<br/>StorageDead(_637)<br/>StorageDead(_635)<br/>StorageDead(_632)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>_654 = &amp;(*_21)<br/></td></tr><tr><td align="left">_653 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _654)</td></tr></table>>];
    bb275__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageLive(_645)<br/>_645 = ((_632 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_647)<br/>_647 = _645<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _647)</td></tr></table>>];
    bb276__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>StorageDead(_645)<br/>StorageDead(_643)<br/>StorageDead(_641)<br/>StorageDead(_637)<br/>StorageDead(_635)<br/>StorageDead(_632)<br/>StorageDead(_631)<br/></td></tr><tr><td align="left">drop(_620)</td></tr></table>>];
    bb277__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_654)<br/>StorageLive(_655)<br/>_655 = _45<br/>_656 = Len(((*_653).5: [state::user::Order; 32]))<br/>_657 = Lt(_655, _656)<br/></td></tr><tr><td align="left">assert(move _657, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _656, _655)</td></tr></table>>];
    bb278__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">_652 = &amp;((*_653).5: [state::user::Order; 32])[_655]<br/>_651 = &amp;(*_652)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>_661 = _631<br/></td></tr><tr><td align="left">_660 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _661)</td></tr></table>>];
    bb279__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_661)<br/></td></tr><tr><td align="left">_659 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _660)</td></tr></table>>];
    bb280__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_660)<br/>_662 = discriminant(_659)<br/></td></tr><tr><td align="left">switchInt(move _662)</td></tr></table>>];
    bb281__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageLive(_666)<br/>_666 = ((_659 as Continue).0: i64)<br/>_658 = _666<br/>StorageDead(_666)<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>StorageLive(_669)<br/>_669 = &amp;_620<br/></td></tr><tr><td align="left">_668 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _669)</td></tr></table>>];
    bb282__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageLive(_663)<br/>_663 = ((_659 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_665)<br/>_665 = _663<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _665)</td></tr></table>>];
    bb283__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_665)<br/>StorageDead(_663)<br/>StorageDead(_658)<br/>StorageDead(_651)<br/>StorageDead(_650)<br/>StorageDead(_631)<br/></td></tr><tr><td align="left">drop(_620)</td></tr></table>>];
    bb284__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/>_667 = ((*_668).25: u64)<br/></td></tr><tr><td align="left">_650 = math::orders::should_cancel_reduce_only_order(move _651, move _658, move _667)</td></tr></table>>];
    bb285__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/>StorageDead(_658)<br/>StorageDead(_651)<br/></td></tr><tr><td align="left">_649 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _650)</td></tr></table>>];
    bb286__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_650)<br/>_670 = discriminant(_649)<br/></td></tr><tr><td align="left">switchInt(move _670)</td></tr></table>>];
    bb287__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageLive(_674)<br/>_674 = ((_649 as Continue).0: bool)<br/>_595 = _674<br/>StorageDead(_674)<br/>StorageDead(_631)<br/></td></tr><tr><td align="left">drop(_620)</td></tr></table>>];
    bb288__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageLive(_671)<br/>_671 = ((_649 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_673)<br/>_673 = _671<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _673)</td></tr></table>>];
    bb289__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_673)<br/>StorageDead(_671)<br/>StorageDead(_631)<br/></td></tr><tr><td align="left">drop(_620)</td></tr></table>>];
    bb290__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>StorageDead(_608)<br/>StorageDead(_602)<br/>StorageDead(_668)<br/>StorageDead(_659)<br/>StorageDead(_655)<br/>StorageDead(_653)<br/>StorageDead(_652)<br/>StorageDead(_649)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb291__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>StorageDead(_597)<br/>_595 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb292__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>_676 = _582<br/></td></tr><tr><td align="left">switchInt(move _676)</td></tr></table>>];
    bb293__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageLive(_677)<br/>_677 = _595<br/></td></tr><tr><td align="left">switchInt(move _677)</td></tr></table>>];
    bb294__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>_683 = &amp;(*_5)<br/></td></tr><tr><td align="left">_682 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _683)</td></tr></table>>];
    bb295__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageDead(_683)<br/></td></tr><tr><td align="left">_681 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _682)</td></tr></table>>];
    bb296__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/>_684 = discriminant(_681)<br/></td></tr><tr><td align="left">switchInt(move _684)</td></tr></table>>];
    bb297__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageLive(_688)<br/>_688 = move ((_681 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_680 = move _688<br/>StorageDead(_688)<br/>_1189 = discriminant(_681)<br/>StorageDead(_681)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>_693 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_692 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _693)</td></tr></table>>];
    bb298__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageLive(_685)<br/>_685 = ((_681 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_687)<br/>_687 = _685<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _687)</td></tr></table>>];
    bb299__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_687)<br/>StorageDead(_685)<br/>_1187 = discriminant(_681)<br/>StorageDead(_681)<br/>StorageDead(_680)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb300__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">_691 = &amp;mut (*_692)<br/>StorageDead(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>_695 = &amp;mut _292<br/></td></tr><tr><td align="left">_694 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_deref_mut(move _695)</td></tr></table>>];
    bb301__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_695)<br/>StorageLive(_696)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>_699 = &amp;mut _680<br/>_698 = &amp;mut (*_699)<br/></td></tr><tr><td align="left">_697 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _698)</td></tr></table>>];
    bb302__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">_696 = &amp;mut (*_697)<br/>StorageDead(_698)<br/>StorageLive(_700)<br/>_700 = (((*_2).6: state::state::FeeStructure).3: u64)<br/>StorageLive(_701)<br/>_701 = _16<br/></td></tr><tr><td align="left">_690 = pay_keeper_flat_reward_for_spot(move _691, move _694, move _696, move _700, move _701)</td></tr></table>>];
    bb303__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/>StorageDead(_700)<br/>StorageDead(_696)<br/>StorageDead(_694)<br/>StorageDead(_691)<br/></td></tr><tr><td align="left">_689 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _690)</td></tr></table>>];
    bb304__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/>_702 = discriminant(_689)<br/></td></tr><tr><td align="left">switchInt(move _702)</td></tr></table>>];
    bb305__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageLive(_706)<br/>_706 = ((_689 as Continue).0: u64)<br/>_679 = _706<br/>StorageDead(_706)<br/></td></tr><tr><td align="left">drop(_680)</td></tr></table>>];
    bb306__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageLive(_703)<br/>_703 = ((_689 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_705)<br/>_705 = _703<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _705)</td></tr></table>>];
    bb307__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageDead(_703)<br/></td></tr><tr><td align="left">drop(_680)</td></tr></table>>];
    bb308__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>StorageDead(_699)<br/>StorageDead(_697)<br/>StorageDead(_692)<br/>StorageDead(_689)<br/>StorageLive(_707)<br/>StorageLive(_708)<br/>_708 = _582<br/></td></tr><tr><td align="left">switchInt(move _708)</td></tr></table>>];
    bb309__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">_707 = OrderActionExplanation::OrderExpired<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">_707 = OrderActionExplanation::ReduceOnlyOrderIncreasedPosition<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_708)<br/>StorageLive(_709)<br/>StorageLive(_710)<br/>StorageLive(_711)<br/>StorageLive(_712)<br/>_712 = _45<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>_715 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_714 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _715)</td></tr></table>>];
    bb312__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">_713 = &amp;mut (*_714)<br/>StorageDead(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>_717 = &amp;_19<br/>_716 = &amp;(*_717)<br/>StorageLive(_718)<br/>_718 = &amp;(*_6)<br/>StorageLive(_719)<br/>_719 = &amp;(*_5)<br/>StorageLive(_720)<br/>_720 = &amp;mut (*_7)<br/>StorageLive(_721)<br/>_721 = _15<br/>StorageLive(_722)<br/>_722 = _16<br/>StorageLive(_723)<br/>_723 = _707<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>_726 = &amp;_17<br/>_725 = &amp;(*_726)<br/>_724 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _725)<br/>StorageDead(_725)<br/>StorageLive(_727)<br/>_727 = _679<br/></td></tr><tr><td align="left">_711 = controller::orders::cancel_order(move _712, move _713, move _716, move _718, move _719, move _720, move _721, move _722, move _723, move _724, move _727, const false)</td></tr></table>>];
    bb313__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_727)<br/>StorageDead(_724)<br/>StorageDead(_723)<br/>StorageDead(_722)<br/>StorageDead(_721)<br/>StorageDead(_720)<br/>StorageDead(_719)<br/>StorageDead(_718)<br/>StorageDead(_716)<br/>StorageDead(_713)<br/>StorageDead(_712)<br/></td></tr><tr><td align="left">_710 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _711)</td></tr></table>>];
    bb314__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_711)<br/>_728 = discriminant(_710)<br/></td></tr><tr><td align="left">switchInt(move _728)</td></tr></table>>];
    bb315__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageLive(_732)<br/>_732 = ((_710 as Continue).0: ())<br/>_709 = _732<br/>StorageDead(_732)<br/>StorageDead(_726)<br/>StorageDead(_717)<br/>StorageDead(_714)<br/>StorageDead(_710)<br/>StorageDead(_709)<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(const 0_u64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageLive(_729)<br/>_729 = ((_710 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_731)<br/>_731 = _729<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _731)</td></tr></table>>];
    bb317__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_731)<br/>StorageDead(_729)<br/>StorageDead(_726)<br/>StorageDead(_717)<br/>StorageDead(_714)<br/>StorageDead(_710)<br/>StorageDead(_709)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb318__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">_675 = const ()<br/>StorageDead(_677)<br/>StorageDead(_676)<br/>StorageDead(_675)<br/>StorageLive(_733)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>_735 = &amp;(*_14)<br/></td></tr><tr><td align="left">_734 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::is_external(move _735)</td></tr></table>>];
    bb319__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left">switchInt(move _734)</td></tr></table>>];
    bb320__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_735)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>_739 = &amp;(*_2)<br/></td></tr><tr><td align="left">_738 = state::state::State::get_exchange_status(move _739)</td></tr></table>>];
    bb321__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_739)<br/></td></tr><tr><td align="left">_737 = &lt;std::result::Result&lt;BitFlags&lt;state::state::ExchangeStatus&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _738)</td></tr></table>>];
    bb322__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>_740 = discriminant(_737)<br/></td></tr><tr><td align="left">switchInt(move _740)</td></tr></table>>];
    bb323__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageLive(_744)<br/>_744 = ((_737 as Continue).0: enumflags2::BitFlags&lt;state::state::ExchangeStatus&gt;)<br/>_736 = _744<br/>StorageDead(_744)<br/>StorageDead(_737)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>StorageLive(_747)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>_749 = _736<br/>StorageLive(_750)<br/>StorageLive(_751)<br/>_751 = state::state::ExchangeStatus::DepositPaused<br/>StorageLive(_752)<br/>_752 = state::state::ExchangeStatus::WithdrawPaused<br/></td></tr><tr><td align="left">_750 = &lt;state::state::ExchangeStatus as BitOr&gt;::bitor(move _751, move _752)</td></tr></table>>];
    bb324__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageLive(_741)<br/>_741 = ((_737 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_743)<br/>_743 = _741<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _743)</td></tr></table>>];
    bb325__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageDead(_743)<br/>StorageDead(_741)<br/>StorageDead(_737)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb326__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_752)<br/>StorageDead(_751)<br/></td></tr><tr><td align="left">_748 = BitFlags::&lt;state::state::ExchangeStatus&gt;::contains::&lt;BitFlags&lt;state::state::ExchangeStatus&gt;&gt;(move _749, move _750)</td></tr></table>>];
    bb327__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left">switchInt(move _748)</td></tr></table>>];
    bb328__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_750)<br/>StorageDead(_749)<br/>StorageLive(_754)<br/>_754 = error::ErrorCode::ExchangePaused<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>StorageLive(_759)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>StorageLive(_762)<br/>StorageLive(_763)<br/>StorageLive(_764)<br/>StorageLive(_765)<br/>_1139 = const _<br/>_765 = &amp;(*_1139)<br/>_764 = &amp;(*_765)<br/>_763 = move _764 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_764)<br/>StorageLive(_767)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>_773 = &amp;_754<br/>_772 = &amp;(*_773)<br/></td></tr><tr><td align="left">_771 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _772)</td></tr></table>>];
    bb329__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_750)<br/>StorageDead(_749)<br/>StorageLive(_753)<br/>_753 = ()<br/>_747 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _753)<br/>StorageDead(_753)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb330__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/>_770 = [move _771]<br/>StorageDead(_771)<br/>_769 = &amp;_770<br/>_768 = &amp;(*_769)<br/>_767 = move _768 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_768)<br/></td></tr><tr><td align="left">_762 = Arguments::&lt;'_&gt;::new_v1(move _763, move _767)</td></tr></table>>];
    bb331__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_767)<br/>StorageDead(_763)<br/></td></tr><tr><td align="left">_761 = format(move _762)</td></tr></table>>];
    bb332__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>StorageDead(_773)<br/>StorageDead(_770)<br/>StorageDead(_769)<br/>StorageDead(_765)<br/>_760 = move _761<br/>StorageDead(_761)<br/>_759 = &amp;_760<br/>_758 = &amp;(*_759)<br/></td></tr><tr><td align="left">_757 = &lt;String as Deref&gt;::deref(move _758)</td></tr></table>>];
    bb333__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">_756 = &amp;(*_757)<br/>StorageDead(_758)<br/></td></tr><tr><td align="left">_755 = solana_program::log::sol_log(move _756)</td></tr></table>>];
    bb334__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_756)<br/></td></tr><tr><td align="left">drop(_760)</td></tr></table>>];
    bb335__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">StorageDead(_760)<br/>StorageDead(_759)<br/>StorageDead(_757)<br/>StorageDead(_755)<br/>StorageLive(_774)<br/>_774 = _754<br/>_747 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _774)<br/>StorageDead(_774)<br/>StorageDead(_754)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb336__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_748)<br/></td></tr><tr><td align="left">_746 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _747)</td></tr></table>>];
    bb337__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_747)<br/>_775 = discriminant(_746)<br/></td></tr><tr><td align="left">switchInt(move _775)</td></tr></table>>];
    bb338__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageLive(_779)<br/>_779 = ((_746 as Continue).0: ())<br/>_745 = _779<br/>StorageDead(_779)<br/>StorageDead(_746)<br/>StorageDead(_745)<br/>_733 = const ()<br/>StorageDead(_736)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageLive(_776)<br/>_776 = ((_746 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_778)<br/>_778 = _776<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _778)</td></tr></table>>];
    bb340__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_778)<br/>StorageDead(_776)<br/>StorageDead(_746)<br/>StorageDead(_745)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb341__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageDead(_735)<br/>_733 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb342__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageDead(_734)<br/>StorageDead(_733)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>StorageLive(_787)<br/>_787 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_786 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _787)</td></tr></table>>];
    bb343__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">_785 = &amp;mut (*_786)<br/>StorageDead(_787)<br/>StorageLive(_788)<br/>_788 = _45<br/>StorageLive(_789)<br/>StorageLive(_790)<br/>_790 = &amp;_19<br/>_789 = &amp;(*_790)<br/>StorageLive(_791)<br/>StorageLive(_792)<br/>StorageLive(_793)<br/>_793 = &amp;mut (*_33)<br/></td></tr><tr><td align="left">_792 = &lt;RefMut&lt;'_, UserStats&gt; as DerefMut&gt;::deref_mut(move _793)</td></tr></table>>];
    bb344__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">_791 = &amp;mut (*_792)<br/>StorageDead(_793)<br/>StorageLive(_794)<br/>_794 = &amp;(*_10)<br/>StorageLive(_795)<br/>_795 = &amp;(*_11)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>StorageLive(_799)<br/>_799 = &amp;_415<br/>_798 = &amp;(*_799)<br/></td></tr><tr><td align="left">_797 = &lt;Vec&lt;(anchor_lang::prelude::Pubkey, usize, u64)&gt; as Deref&gt;::deref(move _798)</td></tr></table>>];
    bb345__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">_796 = &amp;(*_797)<br/>StorageDead(_798)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>StorageLive(_802)<br/>StorageLive(_803)<br/>_803 = &amp;mut _292<br/></td></tr><tr><td align="left">_802 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_deref_mut(move _803)</td></tr></table>>];
    bb346__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_803)<br/>_801 = &amp;mut _802<br/>_800 = &amp;mut (*_801)<br/>StorageLive(_804)<br/>StorageLive(_805)<br/>_805 = &amp;_17<br/>_804 = &amp;(*_805)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>_809 = &amp;mut _293<br/></td></tr><tr><td align="left">_808 = Option::&lt;RefMut&lt;'_, UserStats&gt;&gt;::as_deref_mut(move _809)</td></tr></table>>];
    bb347__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_809)<br/>_807 = &amp;mut _808<br/>_806 = &amp;mut (*_807)<br/>StorageLive(_810)<br/>_810 = &amp;(*_5)<br/>StorageLive(_811)<br/>_811 = &amp;(*_6)<br/>StorageLive(_812)<br/>_812 = &amp;mut (*_7)<br/>StorageLive(_813)<br/>_813 = _15<br/>StorageLive(_814)<br/>_814 = _16<br/>StorageLive(_815)<br/>StorageLive(_816)<br/>_816 = &amp;((*_2).6: state::state::FeeStructure)<br/>_815 = &amp;(*_816)<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>_818 = &amp;mut (*_14)<br/>_817 = move _818 as &amp;mut dyn state::spot_fulfillment_params::SpotFulfillmentParams (PointerCoercion(Unsize))<br/>StorageDead(_818)<br/>StorageLive(_819)<br/>_819 = _447<br/></td></tr><tr><td align="left">_784 = fulfill_spot_order(move _785, move _788, move _789, move _791, move _794, move _795, move _796, move _800, move _804, move _806, move _810, move _811, move _812, move _813, move _814, move _815, move _817, move _819)</td></tr></table>>];
    bb348__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_819)<br/>StorageDead(_817)<br/>StorageDead(_815)<br/>StorageDead(_814)<br/>StorageDead(_813)<br/>StorageDead(_812)<br/>StorageDead(_811)<br/>StorageDead(_810)<br/>StorageDead(_806)<br/>StorageDead(_804)<br/>StorageDead(_800)<br/>StorageDead(_796)<br/>StorageDead(_795)<br/>StorageDead(_794)<br/>StorageDead(_791)<br/>StorageDead(_789)<br/>StorageDead(_788)<br/>StorageDead(_785)<br/></td></tr><tr><td align="left">_783 = &lt;std::result::Result&lt;(u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _784)</td></tr></table>>];
    bb349__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_784)<br/>_820 = discriminant(_783)<br/></td></tr><tr><td align="left">switchInt(move _820)</td></tr></table>>];
    bb350__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageLive(_824)<br/>_824 = ((_783 as Continue).0: (u64, u64))<br/>_782 = _824<br/>StorageDead(_824)<br/>StorageLive(_780)<br/>_780 = (_782.0: u64)<br/>StorageLive(_781)<br/>_781 = (_782.1: u64)<br/>StorageDead(_816)<br/>StorageDead(_808)<br/>StorageDead(_807)<br/>StorageDead(_805)<br/>StorageDead(_802)<br/>StorageDead(_801)<br/>StorageDead(_799)<br/>StorageDead(_797)<br/>StorageDead(_792)<br/>StorageDead(_790)<br/>StorageDead(_786)<br/>StorageDead(_783)<br/>StorageDead(_782)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>_827 = _780<br/>_826 = Ne(move _827, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _826)</td></tr></table>>];
    bb351__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageLive(_821)<br/>_821 = ((_783 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_823)<br/>_823 = _821<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _823)</td></tr></table>>];
    bb352__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_823)<br/>StorageDead(_821)<br/>StorageDead(_816)<br/>StorageDead(_808)<br/>StorageDead(_807)<br/>StorageDead(_805)<br/>StorageDead(_802)<br/>StorageDead(_801)<br/>StorageDead(_799)<br/>StorageDead(_797)<br/>StorageDead(_792)<br/>StorageDead(_790)<br/>StorageDead(_786)<br/>StorageDead(_783)<br/>StorageDead(_782)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb353__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_827)<br/>StorageLive(_828)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>StorageLive(_831)<br/>_831 = &amp;(*_5)<br/>StorageLive(_832)<br/>StorageLive(_833)<br/>_833 = &amp;_64<br/>_832 = &amp;(*_833)<br/></td></tr><tr><td align="left">_830 = SpotMarketMap::&lt;'_&gt;::get_ref(move _831, move _832)</td></tr></table>>];
    bb354__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_827)<br/>_825 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb355__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_832)<br/>StorageDead(_831)<br/></td></tr><tr><td align="left">_829 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _830)</td></tr></table>>];
    bb356__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_830)<br/>_834 = discriminant(_829)<br/></td></tr><tr><td align="left">switchInt(move _834)</td></tr></table>>];
    bb357__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageLive(_838)<br/>_838 = move ((_829 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_828 = move _838<br/>StorageDead(_838)<br/>_1193 = discriminant(_829)<br/>StorageDead(_833)<br/>StorageDead(_829)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>StorageLive(_842)<br/>_842 = _781<br/>StorageLive(_843)<br/>_843 = _780<br/>StorageLive(_844)<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>StorageLive(_847)<br/>_847 = &amp;_828<br/></td></tr><tr><td align="left">_846 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _847)</td></tr></table>>];
    bb358__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_835)<br/>_835 = ((_829 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_837)<br/>_837 = _835<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _837)</td></tr></table>>];
    bb359__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_837)<br/>StorageDead(_835)<br/>_1191 = discriminant(_829)<br/>StorageDead(_833)<br/>StorageDead(_829)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb360__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">_845 = (*_846)<br/>StorageDead(_847)<br/></td></tr><tr><td align="left">_844 = SpotMarket::get_precision(move _845)</td></tr></table>>];
    bb361__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_845)<br/></td></tr><tr><td align="left">_841 = math::orders::calculate_fill_price(move _842, move _843, move _844)</td></tr></table>>];
    bb362__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_844)<br/>StorageDead(_843)<br/>StorageDead(_842)<br/></td></tr><tr><td align="left">_840 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _841)</td></tr></table>>];
    bb363__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">StorageDead(_841)<br/>_848 = discriminant(_840)<br/></td></tr><tr><td align="left">switchInt(move _848)</td></tr></table>>];
    bb364__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageLive(_852)<br/>_852 = ((_840 as Continue).0: u64)<br/>_839 = _852<br/>StorageDead(_852)<br/>StorageDead(_846)<br/>StorageDead(_840)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>StorageLive(_856)<br/>StorageLive(_857)<br/>_857 = &amp;mut (*_7)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>StorageLive(_861)<br/>StorageLive(_862)<br/>StorageLive(_863)<br/>_863 = &amp;_828<br/></td></tr><tr><td align="left">_862 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _863)</td></tr></table>>];
    bb365__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageLive(_849)<br/>_849 = ((_840 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_851)<br/>_851 = _849<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _851)</td></tr></table>>];
    bb366__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_851)<br/>StorageDead(_849)<br/>StorageDead(_846)<br/>StorageDead(_840)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb367__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">_861 = &amp;(*_862)<br/>StorageDead(_863)<br/></td></tr><tr><td align="left">_860 = SpotMarket::oracle_id(move _861)</td></tr></table>>];
    bb368__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_861)<br/>_859 = &amp;_860<br/>_858 = &amp;(*_859)<br/></td></tr><tr><td align="left">_856 = OracleMap::&lt;'_&gt;::get_price_data(move _857, move _858)</td></tr></table>>];
    bb369__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_858)<br/>StorageDead(_857)<br/></td></tr><tr><td align="left">_855 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _856)</td></tr></table>>];
    bb370__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/>_864 = discriminant(_855)<br/></td></tr><tr><td align="left">switchInt(move _864)</td></tr></table>>];
    bb371__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageLive(_868)<br/>_868 = ((_855 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_854 = _868<br/>StorageDead(_868)<br/>_853 = ((*_854).0: i64)<br/>StorageDead(_862)<br/>StorageDead(_860)<br/>StorageDead(_859)<br/>StorageDead(_855)<br/>StorageDead(_854)<br/>StorageLive(_869)<br/>StorageLive(_870)<br/>StorageLive(_871)<br/>_871 = &amp;_828<br/></td></tr><tr><td align="left">_870 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _871)</td></tr></table>>];
    bb372__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageLive(_865)<br/>_865 = ((_855 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_867)<br/>_867 = _865<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _867)</td></tr></table>>];
    bb373__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_867)<br/>StorageDead(_865)<br/>StorageDead(_862)<br/>StorageDead(_860)<br/>StorageDead(_859)<br/>StorageDead(_855)<br/>StorageDead(_854)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb374__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_871)<br/>_869 = (((*_870).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageDead(_870)<br/>StorageLive(_872)<br/>StorageLive(_873)<br/>StorageLive(_874)<br/>StorageLive(_875)<br/>_875 = _839<br/>StorageLive(_876)<br/>_876 = _853<br/>StorageLive(_877)<br/>_877 = _869<br/>StorageLive(_878)<br/>StorageLive(_879)<br/>StorageLive(_880)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>StorageLive(_883)<br/>_883 = &amp;_828<br/></td></tr><tr><td align="left">_882 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _883)</td></tr></table>>];
    bb375__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">_881 = &amp;(*_882)<br/>StorageDead(_883)<br/>StorageLive(_884)<br/>StorageLive(_885)<br/>_1138 = const _<br/>_885 = &amp;(*_1138)<br/>_884 = &amp;(*_885)<br/></td></tr><tr><td align="left">_880 = SpotMarket::get_margin_ratio(move _881, move _884)</td></tr></table>>];
    bb376__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_884)<br/>StorageDead(_881)<br/></td></tr><tr><td align="left">_879 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _880)</td></tr></table>>];
    bb377__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_880)<br/>_887 = discriminant(_879)<br/></td></tr><tr><td align="left">switchInt(move _887)</td></tr></table>>];
    bb378__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageLive(_891)<br/>_891 = ((_879 as Continue).0: u32)<br/>_878 = _891<br/>StorageDead(_891)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>_893 = &amp;((*_2).7: state::state::OracleGuardRails)<br/></td></tr><tr><td align="left">_892 = state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(move _893)</td></tr></table>>];
    bb379__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageLive(_888)<br/>_888 = ((_879 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_890)<br/>_890 = _888<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _890)</td></tr></table>>];
    bb380__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_890)<br/>StorageDead(_888)<br/>StorageDead(_878)<br/>StorageDead(_877)<br/>StorageDead(_876)<br/>StorageDead(_875)<br/>StorageDead(_874)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb381__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_893)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>_896 = &amp;(*_14)<br/></td></tr><tr><td align="left">_895 = &lt;dyn SpotFulfillmentParams as SpotFulfillmentParams&gt;::is_external(move _896)</td></tr></table>>];
    bb382__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left">switchInt(move _895)</td></tr></table>>];
    bb383__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>StorageLive(_897)<br/>_897 = _66<br/>_894 = Option::&lt;controller::position::PositionDirection&gt;::Some(move _897)<br/>StorageDead(_897)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb384__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>_894 = Option::&lt;controller::position::PositionDirection&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">StorageDead(_895)<br/></td></tr><tr><td align="left">_874 = math::orders::validate_fill_price_within_price_bands(move _875, move _876, move _877, move _878, move _892, const false, move _894)</td></tr></table>>];
    bb386__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_894)<br/>StorageDead(_892)<br/>StorageDead(_878)<br/>StorageDead(_877)<br/>StorageDead(_876)<br/>StorageDead(_875)<br/></td></tr><tr><td align="left">_873 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _874)</td></tr></table>>];
    bb387__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_874)<br/>_898 = discriminant(_873)<br/></td></tr><tr><td align="left">switchInt(move _898)</td></tr></table>>];
    bb388__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageLive(_902)<br/>_902 = ((_873 as Continue).0: ())<br/>_872 = _902<br/>StorageDead(_902)<br/>StorageDead(_885)<br/>StorageDead(_882)<br/>StorageDead(_879)<br/>StorageDead(_873)<br/>StorageDead(_872)<br/>_825 = const ()<br/>StorageDead(_869)<br/>StorageDead(_853)<br/>StorageDead(_839)<br/></td></tr><tr><td align="left">drop(_828)</td></tr></table>>];
    bb389__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageLive(_899)<br/>_899 = ((_873 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_901)<br/>_901 = _899<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _901)</td></tr></table>>];
    bb390__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_901)<br/>StorageDead(_899)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb391__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_828)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb392__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_826)<br/>StorageDead(_825)<br/>StorageLive(_903)<br/>StorageLive(_904)<br/>StorageLive(_905)<br/>StorageLive(_906)<br/>_906 = &amp;(*_21)<br/></td></tr><tr><td align="left">_905 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _906)</td></tr></table>>];
    bb393__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageDead(_906)<br/>StorageLive(_907)<br/>_907 = _45<br/>_908 = Len(((*_905).5: [state::user::Order; 32]))<br/>_909 = Lt(_907, _908)<br/></td></tr><tr><td align="left">assert(move _909, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _908, _907)</td></tr></table>>];
    bb394__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">_904 = &amp;(((*_905).5: [state::user::Order; 32])[_907].12: state::user::OrderStatus)<br/>StorageLive(_910)<br/>_1137 = const _<br/>_910 = &amp;(*_1137)<br/></td></tr><tr><td align="left">_903 = &lt;OrderStatus as PartialEq&gt;::eq(move _904, move _910)</td></tr></table>>];
    bb395__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_910)<br/>StorageDead(_904)<br/>StorageDead(_907)<br/>StorageDead(_905)<br/>StorageLive(_912)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>_914 = &amp;(*_21)<br/></td></tr><tr><td align="left">_913 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _914)</td></tr></table>>];
    bb396__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_914)<br/>StorageLive(_915)<br/>_915 = _45<br/>_916 = Len(((*_913).5: [state::user::Order; 32]))<br/>_917 = Lt(_915, _916)<br/></td></tr><tr><td align="left">assert(move _917, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _916, _915)</td></tr></table>>];
    bb397__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">_912 = (((*_913).5: [state::user::Order; 32])[_915].18: bool)<br/>StorageDead(_915)<br/>StorageDead(_913)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>_919 = _903<br/></td></tr><tr><td align="left">switchInt(move _919)</td></tr></table>>];
    bb398__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageLive(_920)<br/>_920 = _912<br/></td></tr><tr><td align="left">switchInt(move _920)</td></tr></table>>];
    bb399__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageLive(_921)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>_923 = &amp;(*_21)<br/></td></tr><tr><td align="left">_922 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _923)</td></tr></table>>];
    bb400__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_923)<br/>StorageLive(_924)<br/>_924 = _45<br/>_925 = Len(((*_922).5: [state::user::Order; 32]))<br/>_926 = Lt(_924, _925)<br/></td></tr><tr><td align="left">assert(move _926, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _925, _924)</td></tr></table>>];
    bb401__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">_921 = (((*_922).5: [state::user::Order; 32])[_924].11: u16)<br/>StorageDead(_924)<br/>StorageDead(_922)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>StorageLive(_929)<br/>StorageLive(_930)<br/>StorageLive(_931)<br/>StorageLive(_932)<br/>_932 = &amp;(*_21)<br/></td></tr><tr><td align="left">_931 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _932)</td></tr></table>>];
    bb402__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">_930 = &amp;(*_931)<br/>StorageDead(_932)<br/>StorageLive(_933)<br/>_933 = _921<br/></td></tr><tr><td align="left">_929 = User::get_spot_position_index(move _930, move _933)</td></tr></table>>];
    bb403__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_933)<br/>StorageDead(_930)<br/></td></tr><tr><td align="left">_928 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _929)</td></tr></table>>];
    bb404__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageDead(_929)<br/>_934 = discriminant(_928)<br/></td></tr><tr><td align="left">switchInt(move _934)</td></tr></table>>];
    bb405__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageLive(_938)<br/>_938 = ((_928 as Continue).0: usize)<br/>_927 = _938<br/>StorageDead(_938)<br/>StorageDead(_931)<br/>StorageDead(_928)<br/>StorageLive(_939)<br/>StorageLive(_940)<br/>StorageLive(_941)<br/>StorageLive(_942)<br/>_942 = &amp;(*_5)<br/>StorageLive(_943)<br/>StorageLive(_944)<br/>_944 = &amp;_921<br/>_943 = &amp;(*_944)<br/></td></tr><tr><td align="left">_941 = SpotMarketMap::&lt;'_&gt;::get_ref(move _942, move _943)</td></tr></table>>];
    bb406__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageLive(_935)<br/>_935 = ((_928 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_937)<br/>_937 = _935<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _937)</td></tr></table>>];
    bb407__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_937)<br/>StorageDead(_935)<br/>StorageDead(_931)<br/>StorageDead(_928)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb408__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_943)<br/>StorageDead(_942)<br/></td></tr><tr><td align="left">_940 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _941)</td></tr></table>>];
    bb409__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageDead(_941)<br/>_945 = discriminant(_940)<br/></td></tr><tr><td align="left">switchInt(move _945)</td></tr></table>>];
    bb410__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageLive(_949)<br/>_949 = move ((_940 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_939 = move _949<br/>StorageDead(_949)<br/>_1197 = discriminant(_940)<br/>StorageDead(_944)<br/>StorageDead(_940)<br/>StorageLive(_950)<br/>StorageLive(_951)<br/>StorageLive(_952)<br/>StorageLive(_953)<br/>StorageLive(_954)<br/>StorageLive(_955)<br/>_955 = &amp;(*_21)<br/></td></tr><tr><td align="left">_954 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _955)</td></tr></table>>];
    bb411__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageLive(_946)<br/>_946 = ((_940 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_948)<br/>_948 = _946<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _948)</td></tr></table>>];
    bb412__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_948)<br/>StorageDead(_946)<br/>_1195 = discriminant(_940)<br/>StorageDead(_944)<br/>StorageDead(_940)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb413__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_955)<br/>StorageLive(_956)<br/>_956 = _927<br/>_957 = Len(((*_954).3: [state::user::SpotPosition; 8]))<br/>_958 = Lt(_956, _957)<br/></td></tr><tr><td align="left">assert(move _958, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _957, _956)</td></tr></table>>];
    bb414__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">_953 = &amp;((*_954).3: [state::user::SpotPosition; 8])[_956]<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>StorageLive(_961)<br/>StorageLive(_962)<br/>_962 = &amp;_939<br/>_961 = &amp;(*_962)<br/></td></tr><tr><td align="left">_960 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _961)</td></tr></table>>];
    bb415__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">_959 = &amp;(*_960)<br/>StorageDead(_961)<br/></td></tr><tr><td align="left">_952 = SpotPosition::get_signed_token_amount(move _953, move _959)</td></tr></table>>];
    bb416__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_959)<br/>StorageDead(_953)<br/></td></tr><tr><td align="left">_951 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _952)</td></tr></table>>];
    bb417__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_952)<br/>_963 = discriminant(_951)<br/></td></tr><tr><td align="left">switchInt(move _963)</td></tr></table>>];
    bb418__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageLive(_967)<br/>_967 = ((_951 as Continue).0: i128)<br/>_950 = _967<br/>StorageDead(_967)<br/>StorageDead(_962)<br/>StorageDead(_960)<br/>StorageDead(_956)<br/>StorageDead(_954)<br/>StorageDead(_951)<br/>StorageLive(_968)<br/>StorageLive(_969)<br/>StorageLive(_970)<br/>StorageLive(_971)<br/>StorageLive(_972)<br/>StorageLive(_973)<br/>_973 = &amp;(*_21)<br/></td></tr><tr><td align="left">_972 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _973)</td></tr></table>>];
    bb419__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageLive(_964)<br/>_964 = ((_951 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_966)<br/>_966 = _964<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _966)</td></tr></table>>];
    bb420__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageDead(_966)<br/>StorageDead(_964)<br/>StorageDead(_962)<br/>StorageDead(_960)<br/>StorageDead(_956)<br/>StorageDead(_954)<br/>StorageDead(_951)<br/>StorageDead(_950)<br/></td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb421__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_973)<br/>StorageLive(_974)<br/>_974 = _45<br/>_975 = Len(((*_972).5: [state::user::Order; 32]))<br/>_976 = Lt(_974, _975)<br/></td></tr><tr><td align="left">assert(move _976, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _975, _974)</td></tr></table>>];
    bb422__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">_971 = &amp;((*_972).5: [state::user::Order; 32])[_974]<br/>_970 = &amp;(*_971)<br/>StorageLive(_977)<br/>StorageLive(_978)<br/>StorageLive(_979)<br/>StorageLive(_980)<br/>_980 = _950<br/></td></tr><tr><td align="left">_979 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(move _980)</td></tr></table>>];
    bb423__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_980)<br/></td></tr><tr><td align="left">_978 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _979)</td></tr></table>>];
    bb424__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_979)<br/>_981 = discriminant(_978)<br/></td></tr><tr><td align="left">switchInt(move _981)</td></tr></table>>];
    bb425__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageLive(_985)<br/>_985 = ((_978 as Continue).0: i64)<br/>_977 = _985<br/>StorageDead(_985)<br/>StorageLive(_986)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>_988 = &amp;_939<br/></td></tr><tr><td align="left">_987 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _988)</td></tr></table>>];
    bb426__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageLive(_982)<br/>_982 = ((_978 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_984)<br/>_984 = _982<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _984)</td></tr></table>>];
    bb427__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_984)<br/>StorageDead(_982)<br/>StorageDead(_977)<br/>StorageDead(_970)<br/>StorageDead(_969)<br/>StorageDead(_950)<br/></td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb428__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_988)<br/>_986 = ((*_987).25: u64)<br/></td></tr><tr><td align="left">_969 = math::orders::should_cancel_reduce_only_order(move _970, move _977, move _986)</td></tr></table>>];
    bb429__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_986)<br/>StorageDead(_977)<br/>StorageDead(_970)<br/></td></tr><tr><td align="left">_968 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _969)</td></tr></table>>];
    bb430__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_969)<br/>_989 = discriminant(_968)<br/></td></tr><tr><td align="left">switchInt(move _989)</td></tr></table>>];
    bb431__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageLive(_993)<br/>_993 = ((_968 as Continue).0: bool)<br/>_918 = _993<br/>StorageDead(_993)<br/>StorageDead(_950)<br/></td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb432__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageLive(_990)<br/>_990 = ((_968 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_992)<br/>_992 = _990<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _992)</td></tr></table>>];
    bb433__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_992)<br/>StorageDead(_990)<br/>StorageDead(_950)<br/></td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb434__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_939)<br/>StorageDead(_927)<br/>StorageDead(_921)<br/>StorageDead(_987)<br/>StorageDead(_978)<br/>StorageDead(_974)<br/>StorageDead(_972)<br/>StorageDead(_971)<br/>StorageDead(_968)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb435__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">_918 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb436__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_920)<br/>StorageDead(_919)<br/>StorageLive(_994)<br/>StorageLive(_995)<br/>_995 = _903<br/></td></tr><tr><td align="left">switchInt(move _995)</td></tr></table>>];
    bb437__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageLive(_996)<br/>StorageLive(_997)<br/>StorageLive(_998)<br/>_998 = &amp;(*_21)<br/></td></tr><tr><td align="left">_997 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _998)</td></tr></table>>];
    bb438__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageDead(_998)<br/>StorageLive(_999)<br/>_999 = _45<br/>_1000 = Len(((*_997).5: [state::user::Order; 32]))<br/>_1001 = Lt(_999, _1000)<br/></td></tr><tr><td align="left">assert(move _1001, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _1000, _999)</td></tr></table>>];
    bb439__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">_996 = (((*_997).5: [state::user::Order; 32])[_999].11: u16)<br/>StorageDead(_999)<br/>StorageDead(_997)<br/>StorageLive(_1002)<br/>StorageLive(_1003)<br/>StorageLive(_1004)<br/>StorageLive(_1005)<br/>_1005 = &amp;(*_5)<br/>StorageLive(_1006)<br/>StorageLive(_1007)<br/>_1007 = &amp;_996<br/>_1006 = &amp;(*_1007)<br/></td></tr><tr><td align="left">_1004 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1005, move _1006)</td></tr></table>>];
    bb440__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_1006)<br/>StorageDead(_1005)<br/></td></tr><tr><td align="left">_1003 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1004)</td></tr></table>>];
    bb441__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageDead(_1004)<br/>_1008 = discriminant(_1003)<br/></td></tr><tr><td align="left">switchInt(move _1008)</td></tr></table>>];
    bb442__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageLive(_1012)<br/>_1012 = move ((_1003 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1002 = move _1012<br/>StorageDead(_1012)<br/>_1201 = discriminant(_1003)<br/>StorageDead(_1007)<br/>StorageDead(_1003)<br/>StorageLive(_1013)<br/>StorageLive(_1014)<br/>StorageLive(_1015)<br/>StorageLive(_1016)<br/>_1016 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1015 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _1016)</td></tr></table>>];
    bb443__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageLive(_1009)<br/>_1009 = ((_1003 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1011)<br/>_1011 = _1009<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1011)</td></tr></table>>];
    bb444__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageDead(_1011)<br/>StorageDead(_1009)<br/>_1199 = discriminant(_1003)<br/>StorageDead(_1007)<br/>StorageDead(_1003)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb445__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1016)<br/></td></tr><tr><td align="left">_1014 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1015)</td></tr></table>>];
    bb446__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_1015)<br/>_1017 = discriminant(_1014)<br/></td></tr><tr><td align="left">switchInt(move _1017)</td></tr></table>>];
    bb447__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageLive(_1021)<br/>_1021 = move ((_1014 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1013 = move _1021<br/>StorageDead(_1021)<br/>_1205 = discriminant(_1014)<br/>StorageDead(_1014)<br/>StorageLive(_1024)<br/>StorageLive(_1025)<br/>StorageLive(_1026)<br/>StorageLive(_1027)<br/>StorageLive(_1028)<br/>StorageLive(_1029)<br/>_1029 = &amp;(*_21)<br/></td></tr><tr><td align="left">_1028 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _1029)</td></tr></table>>];
    bb448__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageLive(_1018)<br/>_1018 = ((_1014 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1020)<br/>_1020 = _1018<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1020)</td></tr></table>>];
    bb449__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1020)<br/>StorageDead(_1018)<br/>_1203 = discriminant(_1014)<br/>StorageDead(_1014)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb450__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">_1027 = &amp;(*_1028)<br/>StorageDead(_1029)<br/>StorageLive(_1030)<br/>_1030 = _45<br/>StorageLive(_1031)<br/>StorageLive(_1032)<br/>StorageLive(_1033)<br/>StorageLive(_1034)<br/>_1034 = &amp;_1002<br/>_1033 = &amp;(*_1034)<br/></td></tr><tr><td align="left">_1032 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1033)</td></tr></table>>];
    bb451__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">_1031 = &amp;(*_1032)<br/>StorageDead(_1033)<br/>StorageLive(_1035)<br/>StorageLive(_1036)<br/>StorageLive(_1037)<br/>StorageLive(_1038)<br/>_1038 = &amp;_1013<br/>_1037 = &amp;(*_1038)<br/></td></tr><tr><td align="left">_1036 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1037)</td></tr></table>>];
    bb452__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">_1035 = &amp;(*_1036)<br/>StorageDead(_1037)<br/></td></tr><tr><td align="left">_1026 = math::orders::get_max_fill_amounts(move _1027, move _1030, move _1031, move _1035, const false)</td></tr></table>>];
    bb453__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageDead(_1035)<br/>StorageDead(_1031)<br/>StorageDead(_1030)<br/>StorageDead(_1027)<br/></td></tr><tr><td align="left">_1025 = &lt;std::result::Result&lt;(Option&lt;u64&gt;, Option&lt;u64&gt;), error::ErrorCode&gt; as Try&gt;::branch(move _1026)</td></tr></table>>];
    bb454__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1026)<br/>_1039 = discriminant(_1025)<br/></td></tr><tr><td align="left">switchInt(move _1039)</td></tr></table>>];
    bb455__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageLive(_1043)<br/>_1043 = ((_1025 as Continue).0: (std::option::Option&lt;u64&gt;, std::option::Option&lt;u64&gt;))<br/>_1024 = _1043<br/>StorageDead(_1043)<br/>StorageLive(_1022)<br/>_1022 = (_1024.0: std::option::Option&lt;u64&gt;)<br/>StorageLive(_1023)<br/>_1023 = (_1024.1: std::option::Option&lt;u64&gt;)<br/>StorageDead(_1038)<br/>StorageDead(_1036)<br/>StorageDead(_1034)<br/>StorageDead(_1032)<br/>StorageDead(_1028)<br/>StorageDead(_1025)<br/>StorageDead(_1024)<br/>StorageLive(_1044)<br/>StorageLive(_1045)<br/>_1045 = &amp;_1022<br/>StorageLive(_1046)<br/>_1136 = const _<br/>_1046 = &amp;(*_1136)<br/></td></tr><tr><td align="left">_1044 = &lt;Option&lt;u64&gt; as PartialEq&gt;::eq(move _1045, move _1046)</td></tr></table>>];
    bb456__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageLive(_1040)<br/>_1040 = ((_1025 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1042)<br/>_1042 = _1040<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1042)</td></tr></table>>];
    bb457__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageDead(_1042)<br/>StorageDead(_1040)<br/>StorageDead(_1038)<br/>StorageDead(_1036)<br/>StorageDead(_1034)<br/>StorageDead(_1032)<br/>StorageDead(_1028)<br/>StorageDead(_1025)<br/>StorageDead(_1024)<br/></td></tr><tr><td align="left">drop(_1013)</td></tr></table>>];
    bb458__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left">switchInt(move _1044)</td></tr></table>>];
    bb459__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1046)<br/>StorageDead(_1045)<br/>_994 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb460__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_1046)<br/>StorageDead(_1045)<br/>StorageLive(_1048)<br/>_1048 = &amp;_1023<br/>StorageLive(_1049)<br/>_1135 = const _<br/>_1049 = &amp;(*_1135)<br/></td></tr><tr><td align="left">_994 = &lt;Option&lt;u64&gt; as PartialEq&gt;::eq(move _1048, move _1049)</td></tr></table>>];
    bb461__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageDead(_1049)<br/>StorageDead(_1048)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb462__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageDead(_1044)<br/>StorageDead(_1023)<br/>StorageDead(_1022)<br/></td></tr><tr><td align="left">drop(_1013)</td></tr></table>>];
    bb463__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageDead(_1013)<br/></td></tr><tr><td align="left">drop(_1002)</td></tr></table>>];
    bb464__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_1002)<br/>StorageDead(_996)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb465__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">_994 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb466__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_995)<br/>StorageLive(_1051)<br/>StorageLive(_1052)<br/>_1052 = _918<br/></td></tr><tr><td align="left">switchInt(move _1052)</td></tr></table>>];
    bb467__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageLive(_1053)<br/>_1053 = _994<br/></td></tr><tr><td align="left">switchInt(move _1053)</td></tr></table>>];
    bb468__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">StorageLive(_1054)<br/>StorageLive(_1055)<br/>StorageLive(_1056)<br/>StorageLive(_1057)<br/>StorageLive(_1058)<br/>_1058 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1057 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market_mut(move _1058)</td></tr></table>>];
    bb469__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1058)<br/></td></tr><tr><td align="left">_1056 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1057)</td></tr></table>>];
    bb470__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1057)<br/>_1059 = discriminant(_1056)<br/></td></tr><tr><td align="left">switchInt(move _1059)</td></tr></table>>];
    bb471__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageLive(_1063)<br/>_1063 = move ((_1056 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1055 = move _1063<br/>StorageDead(_1063)<br/>_1209 = discriminant(_1056)<br/>StorageDead(_1056)<br/>StorageLive(_1064)<br/>StorageLive(_1065)<br/>StorageLive(_1066)<br/>StorageLive(_1067)<br/>StorageLive(_1068)<br/>_1068 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_1067 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1068)</td></tr></table>>];
    bb472__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageLive(_1060)<br/>_1060 = ((_1056 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1062)<br/>_1062 = _1060<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1062)</td></tr></table>>];
    bb473__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1062)<br/>StorageDead(_1060)<br/>_1207 = discriminant(_1056)<br/>StorageDead(_1056)<br/>StorageDead(_1055)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb474__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">_1066 = &amp;mut (*_1067)<br/>StorageDead(_1068)<br/>StorageLive(_1069)<br/>StorageLive(_1070)<br/>_1070 = &amp;mut _292<br/></td></tr><tr><td align="left">_1069 = Option::&lt;RefMut&lt;'_, User&gt;&gt;::as_deref_mut(move _1070)</td></tr></table>>];
    bb475__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1070)<br/>StorageLive(_1071)<br/>StorageLive(_1072)<br/>StorageLive(_1073)<br/>StorageLive(_1074)<br/>_1074 = &amp;mut _1055<br/>_1073 = &amp;mut (*_1074)<br/></td></tr><tr><td align="left">_1072 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1073)</td></tr></table>>];
    bb476__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">_1071 = &amp;mut (*_1072)<br/>StorageDead(_1073)<br/>StorageLive(_1075)<br/>_1075 = (((*_2).6: state::state::FeeStructure).3: u64)<br/>StorageLive(_1076)<br/>_1076 = _16<br/></td></tr><tr><td align="left">_1065 = pay_keeper_flat_reward_for_spot(move _1066, move _1069, move _1071, move _1075, move _1076)</td></tr></table>>];
    bb477__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1076)<br/>StorageDead(_1075)<br/>StorageDead(_1071)<br/>StorageDead(_1069)<br/>StorageDead(_1066)<br/></td></tr><tr><td align="left">_1064 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1065)</td></tr></table>>];
    bb478__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_1065)<br/>_1077 = discriminant(_1064)<br/></td></tr><tr><td align="left">switchInt(move _1077)</td></tr></table>>];
    bb479__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageLive(_1081)<br/>_1081 = ((_1064 as Continue).0: u64)<br/>_1054 = _1081<br/>StorageDead(_1081)<br/></td></tr><tr><td align="left">drop(_1055)</td></tr></table>>];
    bb480__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageLive(_1078)<br/>_1078 = ((_1064 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1080)<br/>_1080 = _1078<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1080)</td></tr></table>>];
    bb481__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1080)<br/>StorageDead(_1078)<br/></td></tr><tr><td align="left">drop(_1055)</td></tr></table>>];
    bb482__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_1055)<br/>StorageDead(_1074)<br/>StorageDead(_1072)<br/>StorageDead(_1067)<br/>StorageDead(_1064)<br/>StorageLive(_1082)<br/>StorageLive(_1083)<br/>_1083 = _918<br/></td></tr><tr><td align="left">switchInt(move _1083)</td></tr></table>>];
    bb483__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">_1082 = OrderActionExplanation::ReduceOnlyOrderIncreasedPosition<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb484__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">_1082 = OrderActionExplanation::NoBorrowLiquidity<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb485__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_1083)<br/>StorageLive(_1084)<br/>StorageLive(_1085)<br/>StorageLive(_1086)<br/>_1086 = _45<br/>StorageLive(_1087)<br/>StorageLive(_1088)<br/>StorageLive(_1089)<br/>_1089 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_1088 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1089)</td></tr></table>>];
    bb486__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">_1087 = &amp;mut (*_1088)<br/>StorageDead(_1089)<br/>StorageLive(_1090)<br/>StorageLive(_1091)<br/>_1091 = &amp;_19<br/>_1090 = &amp;(*_1091)<br/>StorageLive(_1092)<br/>_1092 = &amp;(*_6)<br/>StorageLive(_1093)<br/>_1093 = &amp;(*_5)<br/>StorageLive(_1094)<br/>_1094 = &amp;mut (*_7)<br/>StorageLive(_1095)<br/>_1095 = _15<br/>StorageLive(_1096)<br/>_1096 = _16<br/>StorageLive(_1097)<br/>_1097 = _1082<br/>StorageLive(_1098)<br/>StorageLive(_1099)<br/>StorageLive(_1100)<br/>_1100 = &amp;_17<br/>_1099 = &amp;(*_1100)<br/>_1098 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _1099)<br/>StorageDead(_1099)<br/>StorageLive(_1101)<br/>_1101 = _1054<br/></td></tr><tr><td align="left">_1085 = controller::orders::cancel_order(move _1086, move _1087, move _1090, move _1092, move _1093, move _1094, move _1095, move _1096, move _1097, move _1098, move _1101, const false)</td></tr></table>>];
    bb487__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_1101)<br/>StorageDead(_1098)<br/>StorageDead(_1097)<br/>StorageDead(_1096)<br/>StorageDead(_1095)<br/>StorageDead(_1094)<br/>StorageDead(_1093)<br/>StorageDead(_1092)<br/>StorageDead(_1090)<br/>StorageDead(_1087)<br/>StorageDead(_1086)<br/></td></tr><tr><td align="left">_1084 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1085)</td></tr></table>>];
    bb488__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_1085)<br/>_1102 = discriminant(_1084)<br/></td></tr><tr><td align="left">switchInt(move _1102)</td></tr></table>>];
    bb489__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">StorageLive(_1106)<br/>_1106 = ((_1084 as Continue).0: ())<br/>_1051 = _1106<br/>StorageDead(_1106)<br/>StorageDead(_1082)<br/>StorageDead(_1054)<br/>StorageDead(_1100)<br/>StorageDead(_1091)<br/>StorageDead(_1088)<br/>StorageDead(_1084)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb490__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageLive(_1103)<br/>_1103 = ((_1084 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1105)<br/>_1105 = _1103<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1105)</td></tr></table>>];
    bb491__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_1105)<br/>StorageDead(_1103)<br/>StorageDead(_1082)<br/>StorageDead(_1054)<br/>StorageDead(_1100)<br/>StorageDead(_1091)<br/>StorageDead(_1088)<br/>StorageDead(_1084)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb492__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">_1051 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb493__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageDead(_1053)<br/>StorageDead(_1052)<br/>StorageDead(_1051)<br/>StorageLive(_1107)<br/>StorageLive(_1108)<br/>StorageLive(_1109)<br/>StorageLive(_1110)<br/>StorageLive(_1111)<br/>StorageLive(_1112)<br/>StorageLive(_1113)<br/>StorageLive(_1114)<br/>StorageLive(_1115)<br/>StorageLive(_1116)<br/>_1116 = &amp;(*_5)<br/>StorageLive(_1117)<br/>StorageLive(_1118)<br/>_1118 = &amp;_64<br/>_1117 = &amp;(*_1118)<br/></td></tr><tr><td align="left">_1115 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1116, move _1117)</td></tr></table>>];
    bb494__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_1117)<br/>StorageDead(_1116)<br/></td></tr><tr><td align="left">_1114 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1115)</td></tr></table>>];
    bb495__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">_1149 = const true<br/>StorageDead(_1115)<br/>_1119 = discriminant(_1114)<br/></td></tr><tr><td align="left">switchInt(move _1119)</td></tr></table>>];
    bb496__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageLive(_1123)<br/>_1123 = move ((_1114 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1113 = move _1123<br/>StorageDead(_1123)<br/>_1112 = &amp;_1113<br/></td></tr><tr><td align="left">_1111 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1112)</td></tr></table>>];
    bb497__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageLive(_1120)<br/>_1120 = ((_1114 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1122)<br/>_1122 = _1120<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1122)</td></tr></table>>];
    bb498__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_1122)<br/>StorageDead(_1120)<br/>StorageDead(_1112)<br/>StorageDead(_1110)<br/>StorageDead(_1109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb499__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">_1110 = &amp;(*_1111)<br/>StorageDead(_1112)<br/></td></tr><tr><td align="left">_1109 = SpotMarket::validate_max_token_deposits_and_borrows(move _1110, const false)</td></tr></table>>];
    bb500__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageDead(_1110)<br/></td></tr><tr><td align="left">_1108 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1109)</td></tr></table>>];
    bb501__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageDead(_1109)<br/>_1124 = discriminant(_1108)<br/></td></tr><tr><td align="left">switchInt(move _1124)</td></tr></table>>];
    bb502__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageLive(_1128)<br/>_1128 = ((_1108 as Continue).0: ())<br/>_1107 = _1128<br/>StorageDead(_1128)<br/></td></tr><tr><td align="left">drop(_1113)</td></tr></table>>];
    bb503__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageLive(_1125)<br/>_1125 = ((_1108 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1127)<br/>_1127 = _1125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1127)</td></tr></table>>];
    bb504__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_1127)<br/>StorageDead(_1125)<br/></td></tr><tr><td align="left">drop(_1113)</td></tr></table>>];
    bb505__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">_1130 = &amp;mut (*_1131)<br/>StorageDead(_1132)<br/>StorageLive(_1133)<br/>_1133 = _16<br/></td></tr><tr><td align="left">_1129 = User::update_last_active_slot(move _1130, move _1133)</td></tr></table>>];
    bb506__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_1133)<br/>StorageDead(_1130)<br/>StorageDead(_1131)<br/>StorageDead(_1129)<br/>StorageLive(_1134)<br/>_1134 = _780<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _1134)<br/>StorageDead(_1134)<br/>StorageDead(_994)<br/>StorageDead(_918)<br/>StorageDead(_912)<br/>StorageDead(_903)<br/>StorageDead(_781)<br/>StorageDead(_780)<br/>StorageDead(_595)<br/>StorageDead(_582)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">drop(_415)</td></tr></table>>];
    bb507__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/>StorageDead(_388)<br/></td></tr><tr><td align="left">drop(_293)</td></tr></table>>];
    bb508__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/></td></tr><tr><td align="left">drop(_292)</td></tr></table>>];
    bb509__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_288)<br/>StorageDead(_285)<br/>StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb510__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb511__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb512__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageDead(_1055)<br/>StorageDead(_1074)<br/>StorageDead(_1072)<br/>StorageDead(_1067)<br/>StorageDead(_1064)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb513__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">StorageDead(_1054)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb514__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_1053)<br/>StorageDead(_1052)<br/>StorageDead(_1051)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb515__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageDead(_1013)<br/></td></tr><tr><td align="left">drop(_1002)</td></tr></table>>];
    bb516__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageDead(_1002)<br/>StorageDead(_996)<br/>StorageDead(_995)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb517__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_994)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb518__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">StorageDead(_939)<br/>StorageDead(_927)<br/>StorageDead(_921)<br/>StorageDead(_987)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb519__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_939)<br/>StorageDead(_927)<br/>StorageDead(_921)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb520__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">StorageDead(_978)<br/>StorageDead(_974)<br/>StorageDead(_972)<br/>StorageDead(_971)<br/>StorageDead(_968)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb521__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">StorageDead(_939)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb522__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageDead(_927)<br/>StorageDead(_921)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb523__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_920)<br/>StorageDead(_919)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb524__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageDead(_918)<br/>StorageDead(_912)<br/>StorageDead(_903)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb525__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageDead(_885)<br/>StorageDead(_882)<br/>StorageDead(_879)<br/>StorageDead(_873)<br/>StorageDead(_872)<br/>StorageDead(_869)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb526__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageDead(_853)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb527__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/></td></tr><tr><td align="left">drop(_828)</td></tr></table>>];
    bb528__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left" balign="left">StorageDead(_828)<br/>StorageDead(_826)<br/>StorageDead(_825)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb529__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">StorageDead(_781)<br/>StorageDead(_780)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb530__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageDead(_736)<br/>StorageDead(_734)<br/>StorageDead(_733)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb531__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageDead(_707)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb532__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>StorageDead(_699)<br/>StorageDead(_697)<br/>StorageDead(_692)<br/>StorageDead(_689)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb533__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageDead(_679)<br/>StorageDead(_677)<br/>StorageDead(_676)<br/>StorageDead(_675)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb534__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>StorageDead(_608)<br/>StorageDead(_602)<br/>StorageDead(_668)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb535__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/>StorageDead(_608)<br/>StorageDead(_602)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb536__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left" balign="left">StorageDead(_659)<br/>StorageDead(_655)<br/>StorageDead(_653)<br/>StorageDead(_652)<br/>StorageDead(_649)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb537__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">537</td></tr><tr><td align="left" balign="left">StorageDead(_620)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb538__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">538</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/>StorageDead(_602)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb539__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">539</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb540__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">540</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb541__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">541</td></tr><tr><td align="left" balign="left">StorageDead(_582)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb542__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">542</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>StorageDead(_553)<br/>StorageDead(_549)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb543__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageDead(_548)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb544__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/></td></tr><tr><td align="left">drop(_488)</td></tr></table>>];
    bb545__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">545</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb546__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">546</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/></td></tr><tr><td align="left">drop(_449)</td></tr></table>>];
    bb547__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">547</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb548__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">548</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/></td></tr><tr><td align="left">drop(_415)</td></tr></table>>];
    bb549__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">549</td></tr><tr><td align="left" balign="left">StorageDead(_415)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb550__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">550</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/></td></tr><tr><td align="left">drop(_293)</td></tr></table>>];
    bb551__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">551</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/></td></tr><tr><td align="left">drop(_292)</td></tr></table>>];
    bb552__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb553__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>_1217 = discriminant(_374)<br/>StorageDead(_374)<br/>StorageDead(_363)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb554__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">_1148 = const false<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb555__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb556__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb557__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb558__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb559__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb560__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb561__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left">return</td></tr></table>>];
    bb562__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">562 (cleanup)</td></tr><tr><td align="left">drop(_1113)</td></tr></table>>];
    bb563__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">563 (cleanup)</td></tr><tr><td align="left">drop(_1055)</td></tr></table>>];
    bb564__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">564 (cleanup)</td></tr><tr><td align="left">drop(_1013)</td></tr></table>>];
    bb565__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">565 (cleanup)</td></tr><tr><td align="left">drop(_1002)</td></tr></table>>];
    bb566__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">566 (cleanup)</td></tr><tr><td align="left">drop(_939)</td></tr></table>>];
    bb567__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">567 (cleanup)</td></tr><tr><td align="left">drop(_828)</td></tr></table>>];
    bb568__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">568 (cleanup)</td></tr><tr><td align="left">drop(_760)</td></tr></table>>];
    bb569__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">569 (cleanup)</td></tr><tr><td align="left">drop(_680)</td></tr></table>>];
    bb570__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">570 (cleanup)</td></tr><tr><td align="left">drop(_620)</td></tr></table>>];
    bb571__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">571 (cleanup)</td></tr><tr><td align="left">drop(_488)</td></tr></table>>];
    bb572__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">572 (cleanup)</td></tr><tr><td align="left">drop(_449)</td></tr></table>>];
    bb573__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">573 (cleanup)</td></tr><tr><td align="left">drop(_415)</td></tr></table>>];
    bb574__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">574 (cleanup)</td></tr><tr><td align="left">drop(_399)</td></tr></table>>];
    bb575__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">575 (cleanup)</td></tr><tr><td align="left">drop(_293)</td></tr></table>>];
    bb576__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">576 (cleanup)</td></tr><tr><td align="left">drop(_292)</td></tr></table>>];
    bb577__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">577 (cleanup)</td></tr><tr><td align="left">drop(_370)</td></tr></table>>];
    bb578__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">578 (cleanup)</td></tr><tr><td align="left">drop(_370)</td></tr></table>>];
    bb579__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">579 (cleanup)</td></tr><tr><td align="left">drop(_341)</td></tr></table>>];
    bb580__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">580 (cleanup)</td></tr><tr><td align="left">drop(_322)</td></tr></table>>];
    bb581__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">581 (cleanup)</td></tr><tr><td align="left">drop(_239)</td></tr></table>>];
    bb582__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">582 (cleanup)</td></tr><tr><td align="left">drop(_192)</td></tr></table>>];
    bb583__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">583 (cleanup)</td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb584__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">584 (cleanup)</td></tr><tr><td align="left">drop(_118)</td></tr></table>>];
    bb585__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">585 (cleanup)</td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb586__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">586 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb587__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">587 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb588__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">588 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb589__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">589</td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb590__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">590</td></tr><tr><td align="left" balign="left">_1169 = discriminant(_400)<br/>StorageDead(_404)<br/>_1150 = const false<br/>StorageDead(_400)<br/>StorageDead(_399)<br/>StorageDead(_397)<br/>StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_390)<br/>StorageDead(_389)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_418 = &amp;(*_6)<br/>StorageLive(_419)<br/>_419 = &amp;(*_5)<br/>StorageLive(_420)<br/>_420 = &amp;mut (*_7)<br/>StorageLive(_421)<br/>_421 = &amp;(*_10)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_423 = &amp;_19<br/>_422 = &amp;(*_423)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>_427 = &amp;(*_21)<br/></td></tr><tr><td align="left">_426 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _427)</td></tr></table>>];
    bb591__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">591</td></tr><tr><td align="left" balign="left">_1211 = discriminant(_1114)<br/>StorageDead(_1118)<br/>_1149 = const false<br/>StorageDead(_1114)<br/>StorageDead(_1113)<br/>StorageDead(_1111)<br/>StorageDead(_1108)<br/>StorageDead(_1107)<br/>StorageLive(_1129)<br/>StorageLive(_1130)<br/>StorageLive(_1131)<br/>StorageLive(_1132)<br/>_1132 = &amp;mut (*_21)<br/></td></tr><tr><td align="left">_1131 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _1132)</td></tr></table>>];
    bb592__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">592</td></tr><tr><td align="left" balign="left">_1213 = discriminant(_1114)<br/>StorageDead(_1118)<br/>_1149 = const false<br/>StorageDead(_1114)<br/>StorageDead(_1113)<br/>StorageDead(_1111)<br/>StorageDead(_1108)<br/>StorageDead(_1107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb593__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">593</td></tr><tr><td align="left" balign="left">_1215 = discriminant(_400)<br/>StorageDead(_404)<br/>_1150 = const false<br/>StorageDead(_400)<br/>StorageDead(_399)<br/>StorageDead(_397)<br/>StorageDead(_395)<br/>StorageDead(_394)<br/>StorageDead(_390)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb594__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">594</td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb595__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">595</td></tr><tr><td align="left">switchInt(_1148)</td></tr></table>>];
    bb596__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">596 (cleanup)</td></tr><tr><td align="left" balign="left">_1219 = discriminant(_1114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb597__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">597 (cleanup)</td></tr><tr><td align="left" balign="left">_1220 = discriminant(_1056)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb598__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">598 (cleanup)</td></tr><tr><td align="left" balign="left">_1221 = discriminant(_1014)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb599__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">599 (cleanup)</td></tr><tr><td align="left" balign="left">_1222 = discriminant(_1003)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb600__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">600 (cleanup)</td></tr><tr><td align="left" balign="left">_1223 = discriminant(_940)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb601__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">601 (cleanup)</td></tr><tr><td align="left" balign="left">_1224 = discriminant(_829)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb602__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">602 (cleanup)</td></tr><tr><td align="left" balign="left">_1225 = discriminant(_681)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb603__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">603 (cleanup)</td></tr><tr><td align="left" balign="left">_1226 = discriminant(_621)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb604__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">604 (cleanup)</td></tr><tr><td align="left" balign="left">_1227 = discriminant(_489)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb605__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">605 (cleanup)</td></tr><tr><td align="left" balign="left">_1228 = discriminant(_450)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb606__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">606 (cleanup)</td></tr><tr><td align="left" balign="left">_1229 = discriminant(_416)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb607__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">607 (cleanup)</td></tr><tr><td align="left" balign="left">_1230 = discriminant(_400)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb608__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">608 (cleanup)</td></tr><tr><td align="left" balign="left">_1231 = discriminant(_374)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb609__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">609 (cleanup)</td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb610__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">610 (cleanup)</td></tr><tr><td align="left">switchInt(_1148)</td></tr></table>>];
    bb611__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">611 (cleanup)</td></tr><tr><td align="left" balign="left">_1232 = discriminant(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb612__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">612 (cleanup)</td></tr><tr><td align="left" balign="left">_1233 = discriminant(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb613__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">613 (cleanup)</td></tr><tr><td align="left" balign="left">_1234 = discriminant(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb614__0_559 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">614 (cleanup)</td></tr><tr><td align="left" balign="left">_1235 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_559 -> bb1__0_559 [label="return"];
    bb1__0_559 -> bb2__0_559 [label="return"];
    bb2__0_559 -> bb3__0_559 [label="return"];
    bb3__0_559 -> bb4__0_559 [label="return"];
    bb3__0_559 -> bb588__0_559 [label="unwind"];
    bb4__0_559 -> bb5__0_559 [label="return"];
    bb4__0_559 -> bb588__0_559 [label="unwind"];
    bb5__0_559 -> bb6__0_559 [label="0"];
    bb5__0_559 -> bb8__0_559 [label="1"];
    bb5__0_559 -> bb7__0_559 [label="otherwise"];
    bb6__0_559 -> bb10__0_559 [label="return"];
    bb6__0_559 -> bb587__0_559 [label="unwind"];
    bb8__0_559 -> bb9__0_559 [label="return"];
    bb8__0_559 -> bb614__0_559 [label="unwind"];
    bb9__0_559 -> bb560__0_559 [label=""];
    bb10__0_559 -> bb11__0_559 [label="return"];
    bb10__0_559 -> bb587__0_559 [label="unwind"];
    bb11__0_559 -> bb12__0_559 [label="return"];
    bb11__0_559 -> bb587__0_559 [label="unwind"];
    bb12__0_559 -> bb13__0_559 [label="0"];
    bb12__0_559 -> bb14__0_559 [label="1"];
    bb12__0_559 -> bb7__0_559 [label="otherwise"];
    bb13__0_559 -> bb16__0_559 [label="return"];
    bb13__0_559 -> bb586__0_559 [label="unwind"];
    bb14__0_559 -> bb15__0_559 [label="return"];
    bb14__0_559 -> bb613__0_559 [label="unwind"];
    bb15__0_559 -> bb559__0_559 [label=""];
    bb16__0_559 -> bb17__0_559 [label="return"];
    bb16__0_559 -> bb586__0_559 [label="unwind"];
    bb17__0_559 -> bb18__0_559 [label="return"];
    bb17__0_559 -> bb586__0_559 [label="unwind"];
    bb18__0_559 -> bb19__0_559 [label="return"];
    bb18__0_559 -> bb586__0_559 [label="unwind"];
    bb19__0_559 -> bb20__0_559 [label="return"];
    bb19__0_559 -> bb586__0_559 [label="unwind"];
    bb20__0_559 -> bb21__0_559 [label="0"];
    bb20__0_559 -> bb22__0_559 [label="1"];
    bb20__0_559 -> bb7__0_559 [label="otherwise"];
    bb21__0_559 -> bb24__0_559 [label="return"];
    bb21__0_559 -> bb586__0_559 [label="unwind"];
    bb22__0_559 -> bb23__0_559 [label="return"];
    bb22__0_559 -> bb586__0_559 [label="unwind"];
    bb23__0_559 -> bb558__0_559 [label=""];
    bb24__0_559 -> bb25__0_559 [label="success"];
    bb24__0_559 -> bb586__0_559 [label="unwind"];
    bb25__0_559 -> bb26__0_559 [label="return"];
    bb25__0_559 -> bb586__0_559 [label="unwind"];
    bb26__0_559 -> bb27__0_559 [label="success"];
    bb26__0_559 -> bb586__0_559 [label="unwind"];
    bb27__0_559 -> bb28__0_559 [label="return"];
    bb27__0_559 -> bb586__0_559 [label="unwind"];
    bb28__0_559 -> bb29__0_559 [label="success"];
    bb28__0_559 -> bb586__0_559 [label="unwind"];
    bb29__0_559 -> bb30__0_559 [label="return"];
    bb29__0_559 -> bb586__0_559 [label="unwind"];
    bb30__0_559 -> bb31__0_559 [label="success"];
    bb30__0_559 -> bb586__0_559 [label="unwind"];
    bb31__0_559 -> bb32__0_559 [label="return"];
    bb31__0_559 -> bb586__0_559 [label="unwind"];
    bb32__0_559 -> bb33__0_559 [label="return"];
    bb32__0_559 -> bb586__0_559 [label="unwind"];
    bb33__0_559 -> bb34__0_559 [label="0"];
    bb33__0_559 -> bb35__0_559 [label="1"];
    bb33__0_559 -> bb7__0_559 [label="otherwise"];
    bb34__0_559 -> bb37__0_559 [label="return"];
    bb34__0_559 -> bb585__0_559 [label="unwind"];
    bb35__0_559 -> bb36__0_559 [label="return"];
    bb35__0_559 -> bb612__0_559 [label="unwind"];
    bb36__0_559 -> bb556__0_559 [label=""];
    bb37__0_559 -> bb38__0_559 [label="return"];
    bb37__0_559 -> bb585__0_559 [label="unwind"];
    bb38__0_559 -> bb40__0_559 [label="0"];
    bb38__0_559 -> bb39__0_559 [label="otherwise"];
    bb39__0_559 -> bb48__0_559 [label=""];
    bb40__0_559 -> bb41__0_559 [label="return"];
    bb40__0_559 -> bb585__0_559 [label="unwind"];
    bb41__0_559 -> bb42__0_559 [label="return"];
    bb41__0_559 -> bb585__0_559 [label="unwind"];
    bb42__0_559 -> bb43__0_559 [label="return"];
    bb42__0_559 -> bb585__0_559 [label="unwind"];
    bb43__0_559 -> bb44__0_559 [label="return"];
    bb43__0_559 -> bb584__0_559 [label="unwind"];
    bb44__0_559 -> bb45__0_559 [label="return"];
    bb44__0_559 -> bb584__0_559 [label="unwind"];
    bb45__0_559 -> bb46__0_559 [label="return"];
    bb45__0_559 -> bb585__0_559 [label="unwind"];
    bb46__0_559 -> bb47__0_559 [label="return"];
    bb46__0_559 -> bb585__0_559 [label="unwind"];
    bb47__0_559 -> bb48__0_559 [label=""];
    bb48__0_559 -> bb49__0_559 [label="return"];
    bb48__0_559 -> bb585__0_559 [label="unwind"];
    bb49__0_559 -> bb50__0_559 [label="0"];
    bb49__0_559 -> bb51__0_559 [label="1"];
    bb49__0_559 -> bb7__0_559 [label="otherwise"];
    bb50__0_559 -> bb53__0_559 [label="return"];
    bb50__0_559 -> bb586__0_559 [label="unwind"];
    bb51__0_559 -> bb52__0_559 [label="return"];
    bb51__0_559 -> bb585__0_559 [label="unwind"];
    bb52__0_559 -> bb556__0_559 [label="return"];
    bb52__0_559 -> bb586__0_559 [label="unwind"];
    bb53__0_559 -> bb54__0_559 [label="return"];
    bb53__0_559 -> bb586__0_559 [label="unwind"];
    bb54__0_559 -> bb56__0_559 [label="0"];
    bb54__0_559 -> bb55__0_559 [label="otherwise"];
    bb55__0_559 -> bb64__0_559 [label=""];
    bb56__0_559 -> bb57__0_559 [label="return"];
    bb56__0_559 -> bb586__0_559 [label="unwind"];
    bb57__0_559 -> bb58__0_559 [label="return"];
    bb57__0_559 -> bb586__0_559 [label="unwind"];
    bb58__0_559 -> bb59__0_559 [label="return"];
    bb58__0_559 -> bb586__0_559 [label="unwind"];
    bb59__0_559 -> bb60__0_559 [label="return"];
    bb59__0_559 -> bb583__0_559 [label="unwind"];
    bb60__0_559 -> bb61__0_559 [label="return"];
    bb60__0_559 -> bb583__0_559 [label="unwind"];
    bb61__0_559 -> bb62__0_559 [label="return"];
    bb61__0_559 -> bb586__0_559 [label="unwind"];
    bb62__0_559 -> bb63__0_559 [label="return"];
    bb62__0_559 -> bb586__0_559 [label="unwind"];
    bb63__0_559 -> bb64__0_559 [label=""];
    bb64__0_559 -> bb65__0_559 [label="return"];
    bb64__0_559 -> bb586__0_559 [label="unwind"];
    bb65__0_559 -> bb66__0_559 [label="0"];
    bb65__0_559 -> bb67__0_559 [label="1"];
    bb65__0_559 -> bb7__0_559 [label="otherwise"];
    bb66__0_559 -> bb69__0_559 [label="return"];
    bb66__0_559 -> bb586__0_559 [label="unwind"];
    bb67__0_559 -> bb68__0_559 [label="return"];
    bb67__0_559 -> bb586__0_559 [label="unwind"];
    bb68__0_559 -> bb557__0_559 [label=""];
    bb69__0_559 -> bb71__0_559 [label="0"];
    bb69__0_559 -> bb70__0_559 [label="otherwise"];
    bb70__0_559 -> bb79__0_559 [label=""];
    bb71__0_559 -> bb72__0_559 [label="return"];
    bb71__0_559 -> bb586__0_559 [label="unwind"];
    bb72__0_559 -> bb73__0_559 [label="return"];
    bb72__0_559 -> bb586__0_559 [label="unwind"];
    bb73__0_559 -> bb74__0_559 [label="return"];
    bb73__0_559 -> bb586__0_559 [label="unwind"];
    bb74__0_559 -> bb75__0_559 [label="return"];
    bb74__0_559 -> bb582__0_559 [label="unwind"];
    bb75__0_559 -> bb76__0_559 [label="return"];
    bb75__0_559 -> bb582__0_559 [label="unwind"];
    bb76__0_559 -> bb77__0_559 [label="return"];
    bb76__0_559 -> bb586__0_559 [label="unwind"];
    bb77__0_559 -> bb78__0_559 [label="return"];
    bb77__0_559 -> bb586__0_559 [label="unwind"];
    bb78__0_559 -> bb79__0_559 [label=""];
    bb79__0_559 -> bb80__0_559 [label="return"];
    bb79__0_559 -> bb586__0_559 [label="unwind"];
    bb80__0_559 -> bb81__0_559 [label="0"];
    bb80__0_559 -> bb82__0_559 [label="1"];
    bb80__0_559 -> bb7__0_559 [label="otherwise"];
    bb81__0_559 -> bb84__0_559 [label="return"];
    bb81__0_559 -> bb586__0_559 [label="unwind"];
    bb82__0_559 -> bb83__0_559 [label="return"];
    bb82__0_559 -> bb586__0_559 [label="unwind"];
    bb83__0_559 -> bb557__0_559 [label=""];
    bb84__0_559 -> bb85__0_559 [label="success"];
    bb84__0_559 -> bb586__0_559 [label="unwind"];
    bb85__0_559 -> bb86__0_559 [label="return"];
    bb85__0_559 -> bb586__0_559 [label="unwind"];
    bb86__0_559 -> bb88__0_559 [label="0"];
    bb86__0_559 -> bb87__0_559 [label="otherwise"];
    bb87__0_559 -> bb89__0_559 [label="return"];
    bb87__0_559 -> bb586__0_559 [label="unwind"];
    bb88__0_559 -> bb92__0_559 [label=""];
    bb89__0_559 -> bb90__0_559 [label="success"];
    bb89__0_559 -> bb586__0_559 [label="unwind"];
    bb90__0_559 -> bb91__0_559 [label="return"];
    bb90__0_559 -> bb586__0_559 [label="unwind"];
    bb91__0_559 -> bb93__0_559 [label="0"];
    bb91__0_559 -> bb92__0_559 [label="otherwise"];
    bb92__0_559 -> bb101__0_559 [label=""];
    bb93__0_559 -> bb94__0_559 [label="return"];
    bb93__0_559 -> bb586__0_559 [label="unwind"];
    bb94__0_559 -> bb95__0_559 [label="return"];
    bb94__0_559 -> bb586__0_559 [label="unwind"];
    bb95__0_559 -> bb96__0_559 [label="return"];
    bb95__0_559 -> bb586__0_559 [label="unwind"];
    bb96__0_559 -> bb97__0_559 [label="return"];
    bb96__0_559 -> bb581__0_559 [label="unwind"];
    bb97__0_559 -> bb98__0_559 [label="return"];
    bb97__0_559 -> bb581__0_559 [label="unwind"];
    bb98__0_559 -> bb99__0_559 [label="return"];
    bb98__0_559 -> bb586__0_559 [label="unwind"];
    bb99__0_559 -> bb100__0_559 [label="return"];
    bb99__0_559 -> bb586__0_559 [label="unwind"];
    bb100__0_559 -> bb101__0_559 [label=""];
    bb101__0_559 -> bb102__0_559 [label="return"];
    bb101__0_559 -> bb586__0_559 [label="unwind"];
    bb102__0_559 -> bb103__0_559 [label="0"];
    bb102__0_559 -> bb104__0_559 [label="1"];
    bb102__0_559 -> bb7__0_559 [label="otherwise"];
    bb103__0_559 -> bb106__0_559 [label="return"];
    bb103__0_559 -> bb586__0_559 [label="unwind"];
    bb104__0_559 -> bb105__0_559 [label="return"];
    bb104__0_559 -> bb586__0_559 [label="unwind"];
    bb105__0_559 -> bb557__0_559 [label=""];
    bb106__0_559 -> bb107__0_559 [label="return"];
    bb106__0_559 -> bb586__0_559 [label="unwind"];
    bb107__0_559 -> bb110__0_559 [label="0"];
    bb107__0_559 -> bb108__0_559 [label="otherwise"];
    bb108__0_559 -> bb109__0_559 [label="return"];
    bb108__0_559 -> bb586__0_559 [label="unwind"];
    bb109__0_559 -> bb557__0_559 [label=""];
    bb110__0_559 -> bb111__0_559 [label="return"];
    bb110__0_559 -> bb586__0_559 [label="unwind"];
    bb111__0_559 -> bb112__0_559 [label="return"];
    bb111__0_559 -> bb586__0_559 [label="unwind"];
    bb112__0_559 -> bb114__0_559 [label="0"];
    bb112__0_559 -> bb113__0_559 [label="1"];
    bb112__0_559 -> bb7__0_559 [label="otherwise"];
    bb113__0_559 -> bb115__0_559 [label="return"];
    bb113__0_559 -> bb586__0_559 [label="unwind"];
    bb114__0_559 -> bb116__0_559 [label="return"];
    bb114__0_559 -> bb586__0_559 [label="unwind"];
    bb115__0_559 -> bb557__0_559 [label=""];
    bb116__0_559 -> bb117__0_559 [label="return"];
    bb116__0_559 -> bb586__0_559 [label="unwind"];
    bb117__0_559 -> bb118__0_559 [label="0"];
    bb117__0_559 -> bb160__0_559 [label="otherwise"];
    bb118__0_559 -> bb119__0_559 [label="0"];
    bb118__0_559 -> bb160__0_559 [label="otherwise"];
    bb119__0_559 -> bb120__0_559 [label="return"];
    bb119__0_559 -> bb586__0_559 [label="unwind"];
    bb120__0_559 -> bb121__0_559 [label="return"];
    bb120__0_559 -> bb586__0_559 [label="unwind"];
    bb121__0_559 -> bb122__0_559 [label="return"];
    bb121__0_559 -> bb586__0_559 [label="unwind"];
    bb122__0_559 -> bb123__0_559 [label="0"];
    bb122__0_559 -> bb124__0_559 [label="1"];
    bb122__0_559 -> bb7__0_559 [label="otherwise"];
    bb123__0_559 -> bb126__0_559 [label="return"];
    bb123__0_559 -> bb610__0_559 [label="unwind"];
    bb124__0_559 -> bb125__0_559 [label="return"];
    bb124__0_559 -> bb611__0_559 [label="unwind"];
    bb125__0_559 -> bb554__0_559 [label=""];
    bb126__0_559 -> bb128__0_559 [label="0"];
    bb126__0_559 -> bb127__0_559 [label="otherwise"];
    bb127__0_559 -> bb142__0_559 [label=""];
    bb128__0_559 -> bb129__0_559 [label="return"];
    bb128__0_559 -> bb610__0_559 [label="unwind"];
    bb129__0_559 -> bb130__0_559 [label="return"];
    bb129__0_559 -> bb610__0_559 [label="unwind"];
    bb130__0_559 -> bb131__0_559 [label="return"];
    bb130__0_559 -> bb610__0_559 [label="unwind"];
    bb131__0_559 -> bb132__0_559 [label="return"];
    bb131__0_559 -> bb580__0_559 [label="unwind"];
    bb132__0_559 -> bb133__0_559 [label="return"];
    bb132__0_559 -> bb580__0_559 [label="unwind"];
    bb133__0_559 -> bb134__0_559 [label="return"];
    bb133__0_559 -> bb610__0_559 [label="unwind"];
    bb134__0_559 -> bb135__0_559 [label="return"];
    bb134__0_559 -> bb610__0_559 [label="unwind"];
    bb135__0_559 -> bb136__0_559 [label="return"];
    bb135__0_559 -> bb610__0_559 [label="unwind"];
    bb136__0_559 -> bb137__0_559 [label="return"];
    bb136__0_559 -> bb610__0_559 [label="unwind"];
    bb137__0_559 -> bb138__0_559 [label="return"];
    bb137__0_559 -> bb610__0_559 [label="unwind"];
    bb138__0_559 -> bb139__0_559 [label="return"];
    bb138__0_559 -> bb579__0_559 [label="unwind"];
    bb139__0_559 -> bb140__0_559 [label="return"];
    bb139__0_559 -> bb579__0_559 [label="unwind"];
    bb140__0_559 -> bb141__0_559 [label="return"];
    bb140__0_559 -> bb610__0_559 [label="unwind"];
    bb141__0_559 -> bb142__0_559 [label=""];
    bb142__0_559 -> bb143__0_559 [label="return"];
    bb142__0_559 -> bb610__0_559 [label="unwind"];
    bb143__0_559 -> bb144__0_559 [label="0"];
    bb143__0_559 -> bb145__0_559 [label="1"];
    bb143__0_559 -> bb7__0_559 [label="otherwise"];
    bb144__0_559 -> bb147__0_559 [label="return"];
    bb144__0_559 -> bb610__0_559 [label="unwind"];
    bb145__0_559 -> bb146__0_559 [label="return"];
    bb145__0_559 -> bb610__0_559 [label="unwind"];
    bb146__0_559 -> bb595__0_559 [label=""];
    bb147__0_559 -> bb148__0_559 [label="return"];
    bb147__0_559 -> bb610__0_559 [label="unwind"];
    bb148__0_559 -> bb149__0_559 [label="return"];
    bb148__0_559 -> bb610__0_559 [label="unwind"];
    bb149__0_559 -> bb157__0_559 [label="0"];
    bb149__0_559 -> bb150__0_559 [label="otherwise"];
    bb150__0_559 -> bb151__0_559 [label="return"];
    bb150__0_559 -> bb578__0_559 [label="unwind"];
    bb151__0_559 -> bb152__0_559 [label="return"];
    bb151__0_559 -> bb578__0_559 [label="unwind"];
    bb152__0_559 -> bb153__0_559 [label="return"];
    bb152__0_559 -> bb578__0_559 [label="unwind"];
    bb153__0_559 -> bb154__0_559 [label="0"];
    bb153__0_559 -> bb155__0_559 [label="1"];
    bb153__0_559 -> bb7__0_559 [label="otherwise"];
    bb154__0_559 -> bb158__0_559 [label=""];
    bb155__0_559 -> bb156__0_559 [label="return"];
    bb155__0_559 -> bb577__0_559 [label="unwind"];
    bb156__0_559 -> bb553__0_559 [label="return"];
    bb156__0_559 -> bb608__0_559 [label="unwind"];
    bb157__0_559 -> bb158__0_559 [label=""];
    bb158__0_559 -> bb159__0_559 [label="0"];
    bb158__0_559 -> bb589__0_559 [label="otherwise"];
    bb159__0_559 -> bb161__0_559 [label=""];
    bb160__0_559 -> bb161__0_559 [label=""];
    bb161__0_559 -> bb162__0_559 [label="return"];
    bb161__0_559 -> bb575__0_559 [label="unwind"];
    bb162__0_559 -> bb163__0_559 [label="return"];
    bb162__0_559 -> bb575__0_559 [label="unwind"];
    bb163__0_559 -> bb164__0_559 [label="0"];
    bb163__0_559 -> bb165__0_559 [label="1"];
    bb163__0_559 -> bb7__0_559 [label="otherwise"];
    bb164__0_559 -> bb167__0_559 [label="return"];
    bb164__0_559 -> bb574__0_559 [label="unwind"];
    bb165__0_559 -> bb166__0_559 [label="return"];
    bb165__0_559 -> bb607__0_559 [label="unwind"];
    bb166__0_559 -> bb593__0_559 [label=""];
    bb167__0_559 -> bb168__0_559 [label="return"];
    bb167__0_559 -> bb574__0_559 [label="unwind"];
    bb168__0_559 -> bb169__0_559 [label="return"];
    bb168__0_559 -> bb574__0_559 [label="unwind"];
    bb169__0_559 -> bb170__0_559 [label="return"];
    bb169__0_559 -> bb574__0_559 [label="unwind"];
    bb170__0_559 -> bb171__0_559 [label="0"];
    bb170__0_559 -> bb172__0_559 [label="1"];
    bb170__0_559 -> bb7__0_559 [label="otherwise"];
    bb171__0_559 -> bb590__0_559 [label="return"];
    bb171__0_559 -> bb607__0_559 [label="unwind"];
    bb172__0_559 -> bb173__0_559 [label="return"];
    bb172__0_559 -> bb574__0_559 [label="unwind"];
    bb173__0_559 -> bb593__0_559 [label="return"];
    bb173__0_559 -> bb607__0_559 [label="unwind"];
    bb174__0_559 -> bb175__0_559 [label="success"];
    bb174__0_559 -> bb575__0_559 [label="unwind"];
    bb175__0_559 -> bb176__0_559 [label="return"];
    bb175__0_559 -> bb575__0_559 [label="unwind"];
    bb176__0_559 -> bb177__0_559 [label="return"];
    bb176__0_559 -> bb575__0_559 [label="unwind"];
    bb177__0_559 -> bb178__0_559 [label="return"];
    bb177__0_559 -> bb575__0_559 [label="unwind"];
    bb178__0_559 -> bb179__0_559 [label="0"];
    bb178__0_559 -> bb180__0_559 [label="1"];
    bb178__0_559 -> bb7__0_559 [label="otherwise"];
    bb179__0_559 -> bb182__0_559 [label="return"];
    bb179__0_559 -> bb573__0_559 [label="unwind"];
    bb180__0_559 -> bb181__0_559 [label="return"];
    bb180__0_559 -> bb606__0_559 [label="unwind"];
    bb181__0_559 -> bb549__0_559 [label=""];
    bb182__0_559 -> bb183__0_559 [label="return"];
    bb182__0_559 -> bb573__0_559 [label="unwind"];
    bb183__0_559 -> bb184__0_559 [label="0"];
    bb183__0_559 -> bb185__0_559 [label="1"];
    bb183__0_559 -> bb7__0_559 [label="otherwise"];
    bb184__0_559 -> bb187__0_559 [label="return"];
    bb184__0_559 -> bb572__0_559 [label="unwind"];
    bb185__0_559 -> bb186__0_559 [label="return"];
    bb185__0_559 -> bb605__0_559 [label="unwind"];
    bb186__0_559 -> bb547__0_559 [label=""];
    bb187__0_559 -> bb188__0_559 [label="return"];
    bb187__0_559 -> bb572__0_559 [label="unwind"];
    bb188__0_559 -> bb189__0_559 [label="return"];
    bb188__0_559 -> bb572__0_559 [label="unwind"];
    bb189__0_559 -> bb190__0_559 [label="return"];
    bb189__0_559 -> bb572__0_559 [label="unwind"];
    bb190__0_559 -> bb191__0_559 [label="0"];
    bb190__0_559 -> bb192__0_559 [label="1"];
    bb190__0_559 -> bb7__0_559 [label="otherwise"];
    bb191__0_559 -> bb194__0_559 [label="return"];
    bb191__0_559 -> bb572__0_559 [label="unwind"];
    bb192__0_559 -> bb193__0_559 [label="return"];
    bb192__0_559 -> bb572__0_559 [label="unwind"];
    bb193__0_559 -> bb546__0_559 [label=""];
    bb194__0_559 -> bb195__0_559 [label="return"];
    bb194__0_559 -> bb572__0_559 [label="unwind"];
    bb195__0_559 -> bb196__0_559 [label="return"];
    bb195__0_559 -> bb572__0_559 [label="unwind"];
    bb196__0_559 -> bb197__0_559 [label="0"];
    bb196__0_559 -> bb198__0_559 [label="1"];
    bb196__0_559 -> bb7__0_559 [label="otherwise"];
    bb197__0_559 -> bb200__0_559 [label="return"];
    bb197__0_559 -> bb572__0_559 [label="unwind"];
    bb198__0_559 -> bb199__0_559 [label="return"];
    bb198__0_559 -> bb572__0_559 [label="unwind"];
    bb199__0_559 -> bb546__0_559 [label=""];
    bb200__0_559 -> bb201__0_559 [label="return"];
    bb200__0_559 -> bb572__0_559 [label="unwind"];
    bb201__0_559 -> bb202__0_559 [label="0"];
    bb201__0_559 -> bb203__0_559 [label="1"];
    bb201__0_559 -> bb7__0_559 [label="otherwise"];
    bb202__0_559 -> bb205__0_559 [label="return"];
    bb202__0_559 -> bb571__0_559 [label="unwind"];
    bb203__0_559 -> bb204__0_559 [label="return"];
    bb203__0_559 -> bb604__0_559 [label="unwind"];
    bb204__0_559 -> bb545__0_559 [label=""];
    bb205__0_559 -> bb206__0_559 [label="return"];
    bb205__0_559 -> bb571__0_559 [label="unwind"];
    bb206__0_559 -> bb207__0_559 [label="return"];
    bb206__0_559 -> bb571__0_559 [label="unwind"];
    bb207__0_559 -> bb208__0_559 [label="return"];
    bb207__0_559 -> bb571__0_559 [label="unwind"];
    bb208__0_559 -> bb209__0_559 [label="0"];
    bb208__0_559 -> bb210__0_559 [label="1"];
    bb208__0_559 -> bb7__0_559 [label="otherwise"];
    bb209__0_559 -> bb212__0_559 [label="return"];
    bb209__0_559 -> bb571__0_559 [label="unwind"];
    bb210__0_559 -> bb211__0_559 [label="return"];
    bb210__0_559 -> bb571__0_559 [label="unwind"];
    bb211__0_559 -> bb544__0_559 [label=""];
    bb212__0_559 -> bb213__0_559 [label="return"];
    bb212__0_559 -> bb571__0_559 [label="unwind"];
    bb213__0_559 -> bb214__0_559 [label="return"];
    bb213__0_559 -> bb571__0_559 [label="unwind"];
    bb214__0_559 -> bb215__0_559 [label="0"];
    bb214__0_559 -> bb216__0_559 [label="1"];
    bb214__0_559 -> bb7__0_559 [label="otherwise"];
    bb215__0_559 -> bb218__0_559 [label="return"];
    bb215__0_559 -> bb571__0_559 [label="unwind"];
    bb216__0_559 -> bb217__0_559 [label="return"];
    bb216__0_559 -> bb571__0_559 [label="unwind"];
    bb217__0_559 -> bb544__0_559 [label=""];
    bb218__0_559 -> bb219__0_559 [label="return"];
    bb218__0_559 -> bb571__0_559 [label="unwind"];
    bb219__0_559 -> bb220__0_559 [label="return"];
    bb219__0_559 -> bb571__0_559 [label="unwind"];
    bb220__0_559 -> bb221__0_559 [label="return"];
    bb220__0_559 -> bb571__0_559 [label="unwind"];
    bb221__0_559 -> bb222__0_559 [label="0"];
    bb221__0_559 -> bb223__0_559 [label="1"];
    bb221__0_559 -> bb7__0_559 [label="otherwise"];
    bb222__0_559 -> bb225__0_559 [label="return"];
    bb222__0_559 -> bb571__0_559 [label="unwind"];
    bb223__0_559 -> bb224__0_559 [label="return"];
    bb223__0_559 -> bb571__0_559 [label="unwind"];
    bb224__0_559 -> bb544__0_559 [label=""];
    bb225__0_559 -> bb226__0_559 [label="return"];
    bb225__0_559 -> bb571__0_559 [label="unwind"];
    bb226__0_559 -> bb227__0_559 [label="return"];
    bb226__0_559 -> bb571__0_559 [label="unwind"];
    bb227__0_559 -> bb228__0_559 [label="return"];
    bb227__0_559 -> bb571__0_559 [label="unwind"];
    bb228__0_559 -> bb229__0_559 [label="0"];
    bb228__0_559 -> bb230__0_559 [label="1"];
    bb228__0_559 -> bb7__0_559 [label="otherwise"];
    bb229__0_559 -> bb232__0_559 [label="return"];
    bb229__0_559 -> bb571__0_559 [label="unwind"];
    bb230__0_559 -> bb231__0_559 [label="return"];
    bb230__0_559 -> bb571__0_559 [label="unwind"];
    bb231__0_559 -> bb542__0_559 [label=""];
    bb232__0_559 -> bb233__0_559 [label="return"];
    bb232__0_559 -> bb571__0_559 [label="unwind"];
    bb233__0_559 -> bb234__0_559 [label="0"];
    bb233__0_559 -> bb235__0_559 [label="1"];
    bb233__0_559 -> bb7__0_559 [label="otherwise"];
    bb234__0_559 -> bb238__0_559 [label="0"];
    bb234__0_559 -> bb237__0_559 [label="otherwise"];
    bb235__0_559 -> bb236__0_559 [label="return"];
    bb235__0_559 -> bb571__0_559 [label="unwind"];
    bb236__0_559 -> bb542__0_559 [label=""];
    bb237__0_559 -> bb239__0_559 [label="return"];
    bb237__0_559 -> bb571__0_559 [label="unwind"];
    bb238__0_559 -> bb245__0_559 [label="return"];
    bb238__0_559 -> bb572__0_559 [label="unwind"];
    bb239__0_559 -> bb240__0_559 [label="1"];
    bb239__0_559 -> bb243__0_559 [label="otherwise"];
    bb240__0_559 -> bb241__0_559 [label="return"];
    bb240__0_559 -> bb571__0_559 [label="unwind"];
    bb241__0_559 -> bb242__0_559 [label="return"];
    bb241__0_559 -> bb571__0_559 [label="unwind"];
    bb242__0_559 -> bb244__0_559 [label=""];
    bb243__0_559 -> bb244__0_559 [label=""];
    bb244__0_559 -> bb543__0_559 [label=""];
    bb245__0_559 -> bb246__0_559 [label="return"];
    bb245__0_559 -> bb573__0_559 [label="unwind"];
    bb246__0_559 -> bb247__0_559 [label="return"];
    bb246__0_559 -> bb573__0_559 [label="unwind"];
    bb247__0_559 -> bb248__0_559 [label="return"];
    bb247__0_559 -> bb573__0_559 [label="unwind"];
    bb248__0_559 -> bb249__0_559 [label="return"];
    bb248__0_559 -> bb573__0_559 [label="unwind"];
    bb249__0_559 -> bb250__0_559 [label="0"];
    bb249__0_559 -> bb251__0_559 [label="1"];
    bb249__0_559 -> bb7__0_559 [label="otherwise"];
    bb250__0_559 -> bb253__0_559 [label="return"];
    bb250__0_559 -> bb573__0_559 [label="unwind"];
    bb251__0_559 -> bb252__0_559 [label="return"];
    bb251__0_559 -> bb573__0_559 [label="unwind"];
    bb252__0_559 -> bb541__0_559 [label=""];
    bb253__0_559 -> bb254__0_559 [label="success"];
    bb253__0_559 -> bb573__0_559 [label="unwind"];
    bb254__0_559 -> bb291__0_559 [label="0"];
    bb254__0_559 -> bb255__0_559 [label="otherwise"];
    bb255__0_559 -> bb256__0_559 [label="return"];
    bb255__0_559 -> bb573__0_559 [label="unwind"];
    bb256__0_559 -> bb257__0_559 [label="success"];
    bb256__0_559 -> bb573__0_559 [label="unwind"];
    bb257__0_559 -> bb258__0_559 [label="return"];
    bb257__0_559 -> bb573__0_559 [label="unwind"];
    bb258__0_559 -> bb259__0_559 [label="return"];
    bb258__0_559 -> bb573__0_559 [label="unwind"];
    bb259__0_559 -> bb260__0_559 [label="return"];
    bb259__0_559 -> bb573__0_559 [label="unwind"];
    bb260__0_559 -> bb261__0_559 [label="0"];
    bb260__0_559 -> bb262__0_559 [label="1"];
    bb260__0_559 -> bb7__0_559 [label="otherwise"];
    bb261__0_559 -> bb264__0_559 [label="return"];
    bb261__0_559 -> bb573__0_559 [label="unwind"];
    bb262__0_559 -> bb263__0_559 [label="return"];
    bb262__0_559 -> bb573__0_559 [label="unwind"];
    bb263__0_559 -> bb538__0_559 [label=""];
    bb264__0_559 -> bb265__0_559 [label="return"];
    bb264__0_559 -> bb573__0_559 [label="unwind"];
    bb265__0_559 -> bb266__0_559 [label="0"];
    bb265__0_559 -> bb267__0_559 [label="1"];
    bb265__0_559 -> bb7__0_559 [label="otherwise"];
    bb266__0_559 -> bb269__0_559 [label="return"];
    bb266__0_559 -> bb570__0_559 [label="unwind"];
    bb267__0_559 -> bb268__0_559 [label="return"];
    bb267__0_559 -> bb603__0_559 [label="unwind"];
    bb268__0_559 -> bb537__0_559 [label=""];
    bb269__0_559 -> bb270__0_559 [label="success"];
    bb269__0_559 -> bb570__0_559 [label="unwind"];
    bb270__0_559 -> bb271__0_559 [label="return"];
    bb270__0_559 -> bb570__0_559 [label="unwind"];
    bb271__0_559 -> bb272__0_559 [label="return"];
    bb271__0_559 -> bb570__0_559 [label="unwind"];
    bb272__0_559 -> bb273__0_559 [label="return"];
    bb272__0_559 -> bb570__0_559 [label="unwind"];
    bb273__0_559 -> bb274__0_559 [label="0"];
    bb273__0_559 -> bb275__0_559 [label="1"];
    bb273__0_559 -> bb7__0_559 [label="otherwise"];
    bb274__0_559 -> bb277__0_559 [label="return"];
    bb274__0_559 -> bb570__0_559 [label="unwind"];
    bb275__0_559 -> bb276__0_559 [label="return"];
    bb275__0_559 -> bb570__0_559 [label="unwind"];
    bb276__0_559 -> bb537__0_559 [label="return"];
    bb276__0_559 -> bb573__0_559 [label="unwind"];
    bb277__0_559 -> bb278__0_559 [label="success"];
    bb277__0_559 -> bb570__0_559 [label="unwind"];
    bb278__0_559 -> bb279__0_559 [label="return"];
    bb278__0_559 -> bb570__0_559 [label="unwind"];
    bb279__0_559 -> bb280__0_559 [label="return"];
    bb279__0_559 -> bb570__0_559 [label="unwind"];
    bb280__0_559 -> bb281__0_559 [label="0"];
    bb280__0_559 -> bb282__0_559 [label="1"];
    bb280__0_559 -> bb7__0_559 [label="otherwise"];
    bb281__0_559 -> bb284__0_559 [label="return"];
    bb281__0_559 -> bb570__0_559 [label="unwind"];
    bb282__0_559 -> bb283__0_559 [label="return"];
    bb282__0_559 -> bb570__0_559 [label="unwind"];
    bb283__0_559 -> bb535__0_559 [label="return"];
    bb283__0_559 -> bb573__0_559 [label="unwind"];
    bb284__0_559 -> bb285__0_559 [label="return"];
    bb284__0_559 -> bb570__0_559 [label="unwind"];
    bb285__0_559 -> bb286__0_559 [label="return"];
    bb285__0_559 -> bb570__0_559 [label="unwind"];
    bb286__0_559 -> bb287__0_559 [label="0"];
    bb286__0_559 -> bb288__0_559 [label="1"];
    bb286__0_559 -> bb7__0_559 [label="otherwise"];
    bb287__0_559 -> bb290__0_559 [label="return"];
    bb287__0_559 -> bb573__0_559 [label="unwind"];
    bb288__0_559 -> bb289__0_559 [label="return"];
    bb288__0_559 -> bb570__0_559 [label="unwind"];
    bb289__0_559 -> bb534__0_559 [label="return"];
    bb289__0_559 -> bb573__0_559 [label="unwind"];
    bb290__0_559 -> bb292__0_559 [label=""];
    bb291__0_559 -> bb292__0_559 [label=""];
    bb292__0_559 -> bb293__0_559 [label="0"];
    bb292__0_559 -> bb294__0_559 [label="otherwise"];
    bb293__0_559 -> bb318__0_559 [label="0"];
    bb293__0_559 -> bb294__0_559 [label="otherwise"];
    bb294__0_559 -> bb295__0_559 [label="return"];
    bb294__0_559 -> bb573__0_559 [label="unwind"];
    bb295__0_559 -> bb296__0_559 [label="return"];
    bb295__0_559 -> bb573__0_559 [label="unwind"];
    bb296__0_559 -> bb297__0_559 [label="0"];
    bb296__0_559 -> bb298__0_559 [label="1"];
    bb296__0_559 -> bb7__0_559 [label="otherwise"];
    bb297__0_559 -> bb300__0_559 [label="return"];
    bb297__0_559 -> bb569__0_559 [label="unwind"];
    bb298__0_559 -> bb299__0_559 [label="return"];
    bb298__0_559 -> bb602__0_559 [label="unwind"];
    bb299__0_559 -> bb533__0_559 [label=""];
    bb300__0_559 -> bb301__0_559 [label="return"];
    bb300__0_559 -> bb569__0_559 [label="unwind"];
    bb301__0_559 -> bb302__0_559 [label="return"];
    bb301__0_559 -> bb569__0_559 [label="unwind"];
    bb302__0_559 -> bb303__0_559 [label="return"];
    bb302__0_559 -> bb569__0_559 [label="unwind"];
    bb303__0_559 -> bb304__0_559 [label="return"];
    bb303__0_559 -> bb569__0_559 [label="unwind"];
    bb304__0_559 -> bb305__0_559 [label="0"];
    bb304__0_559 -> bb306__0_559 [label="1"];
    bb304__0_559 -> bb7__0_559 [label="otherwise"];
    bb305__0_559 -> bb308__0_559 [label="return"];
    bb305__0_559 -> bb573__0_559 [label="unwind"];
    bb306__0_559 -> bb307__0_559 [label="return"];
    bb306__0_559 -> bb569__0_559 [label="unwind"];
    bb307__0_559 -> bb532__0_559 [label="return"];
    bb307__0_559 -> bb573__0_559 [label="unwind"];
    bb308__0_559 -> bb310__0_559 [label="0"];
    bb308__0_559 -> bb309__0_559 [label="otherwise"];
    bb309__0_559 -> bb311__0_559 [label=""];
    bb310__0_559 -> bb311__0_559 [label=""];
    bb311__0_559 -> bb312__0_559 [label="return"];
    bb311__0_559 -> bb573__0_559 [label="unwind"];
    bb312__0_559 -> bb313__0_559 [label="return"];
    bb312__0_559 -> bb573__0_559 [label="unwind"];
    bb313__0_559 -> bb314__0_559 [label="return"];
    bb313__0_559 -> bb573__0_559 [label="unwind"];
    bb314__0_559 -> bb315__0_559 [label="0"];
    bb314__0_559 -> bb316__0_559 [label="1"];
    bb314__0_559 -> bb7__0_559 [label="otherwise"];
    bb315__0_559 -> bb531__0_559 [label=""];
    bb316__0_559 -> bb317__0_559 [label="return"];
    bb316__0_559 -> bb573__0_559 [label="unwind"];
    bb317__0_559 -> bb531__0_559 [label=""];
    bb318__0_559 -> bb319__0_559 [label="return"];
    bb318__0_559 -> bb573__0_559 [label="unwind"];
    bb319__0_559 -> bb341__0_559 [label="0"];
    bb319__0_559 -> bb320__0_559 [label="otherwise"];
    bb320__0_559 -> bb321__0_559 [label="return"];
    bb320__0_559 -> bb573__0_559 [label="unwind"];
    bb321__0_559 -> bb322__0_559 [label="return"];
    bb321__0_559 -> bb573__0_559 [label="unwind"];
    bb322__0_559 -> bb323__0_559 [label="0"];
    bb322__0_559 -> bb324__0_559 [label="1"];
    bb322__0_559 -> bb7__0_559 [label="otherwise"];
    bb323__0_559 -> bb326__0_559 [label="return"];
    bb323__0_559 -> bb573__0_559 [label="unwind"];
    bb324__0_559 -> bb325__0_559 [label="return"];
    bb324__0_559 -> bb573__0_559 [label="unwind"];
    bb325__0_559 -> bb530__0_559 [label=""];
    bb326__0_559 -> bb327__0_559 [label="return"];
    bb326__0_559 -> bb573__0_559 [label="unwind"];
    bb327__0_559 -> bb329__0_559 [label="0"];
    bb327__0_559 -> bb328__0_559 [label="otherwise"];
    bb328__0_559 -> bb330__0_559 [label="return"];
    bb328__0_559 -> bb573__0_559 [label="unwind"];
    bb329__0_559 -> bb336__0_559 [label=""];
    bb330__0_559 -> bb331__0_559 [label="return"];
    bb330__0_559 -> bb573__0_559 [label="unwind"];
    bb331__0_559 -> bb332__0_559 [label="return"];
    bb331__0_559 -> bb573__0_559 [label="unwind"];
    bb332__0_559 -> bb333__0_559 [label="return"];
    bb332__0_559 -> bb568__0_559 [label="unwind"];
    bb333__0_559 -> bb334__0_559 [label="return"];
    bb333__0_559 -> bb568__0_559 [label="unwind"];
    bb334__0_559 -> bb335__0_559 [label="return"];
    bb334__0_559 -> bb573__0_559 [label="unwind"];
    bb335__0_559 -> bb336__0_559 [label=""];
    bb336__0_559 -> bb337__0_559 [label="return"];
    bb336__0_559 -> bb573__0_559 [label="unwind"];
    bb337__0_559 -> bb338__0_559 [label="0"];
    bb337__0_559 -> bb339__0_559 [label="1"];
    bb337__0_559 -> bb7__0_559 [label="otherwise"];
    bb338__0_559 -> bb342__0_559 [label=""];
    bb339__0_559 -> bb340__0_559 [label="return"];
    bb339__0_559 -> bb573__0_559 [label="unwind"];
    bb340__0_559 -> bb530__0_559 [label=""];
    bb341__0_559 -> bb342__0_559 [label=""];
    bb342__0_559 -> bb343__0_559 [label="return"];
    bb342__0_559 -> bb573__0_559 [label="unwind"];
    bb343__0_559 -> bb344__0_559 [label="return"];
    bb343__0_559 -> bb573__0_559 [label="unwind"];
    bb344__0_559 -> bb345__0_559 [label="return"];
    bb344__0_559 -> bb573__0_559 [label="unwind"];
    bb345__0_559 -> bb346__0_559 [label="return"];
    bb345__0_559 -> bb573__0_559 [label="unwind"];
    bb346__0_559 -> bb347__0_559 [label="return"];
    bb346__0_559 -> bb573__0_559 [label="unwind"];
    bb347__0_559 -> bb348__0_559 [label="return"];
    bb347__0_559 -> bb573__0_559 [label="unwind"];
    bb348__0_559 -> bb349__0_559 [label="return"];
    bb348__0_559 -> bb573__0_559 [label="unwind"];
    bb349__0_559 -> bb350__0_559 [label="0"];
    bb349__0_559 -> bb351__0_559 [label="1"];
    bb349__0_559 -> bb7__0_559 [label="otherwise"];
    bb350__0_559 -> bb354__0_559 [label="0"];
    bb350__0_559 -> bb353__0_559 [label="otherwise"];
    bb351__0_559 -> bb352__0_559 [label="return"];
    bb351__0_559 -> bb573__0_559 [label="unwind"];
    bb352__0_559 -> bb540__0_559 [label=""];
    bb353__0_559 -> bb355__0_559 [label="return"];
    bb353__0_559 -> bb573__0_559 [label="unwind"];
    bb354__0_559 -> bb392__0_559 [label=""];
    bb355__0_559 -> bb356__0_559 [label="return"];
    bb355__0_559 -> bb573__0_559 [label="unwind"];
    bb356__0_559 -> bb357__0_559 [label="0"];
    bb356__0_559 -> bb358__0_559 [label="1"];
    bb356__0_559 -> bb7__0_559 [label="otherwise"];
    bb357__0_559 -> bb360__0_559 [label="return"];
    bb357__0_559 -> bb567__0_559 [label="unwind"];
    bb358__0_559 -> bb359__0_559 [label="return"];
    bb358__0_559 -> bb601__0_559 [label="unwind"];
    bb359__0_559 -> bb528__0_559 [label=""];
    bb360__0_559 -> bb361__0_559 [label="return"];
    bb360__0_559 -> bb567__0_559 [label="unwind"];
    bb361__0_559 -> bb362__0_559 [label="return"];
    bb361__0_559 -> bb567__0_559 [label="unwind"];
    bb362__0_559 -> bb363__0_559 [label="return"];
    bb362__0_559 -> bb567__0_559 [label="unwind"];
    bb363__0_559 -> bb364__0_559 [label="0"];
    bb363__0_559 -> bb365__0_559 [label="1"];
    bb363__0_559 -> bb7__0_559 [label="otherwise"];
    bb364__0_559 -> bb367__0_559 [label="return"];
    bb364__0_559 -> bb567__0_559 [label="unwind"];
    bb365__0_559 -> bb366__0_559 [label="return"];
    bb365__0_559 -> bb567__0_559 [label="unwind"];
    bb366__0_559 -> bb527__0_559 [label=""];
    bb367__0_559 -> bb368__0_559 [label="return"];
    bb367__0_559 -> bb567__0_559 [label="unwind"];
    bb368__0_559 -> bb369__0_559 [label="return"];
    bb368__0_559 -> bb567__0_559 [label="unwind"];
    bb369__0_559 -> bb370__0_559 [label="return"];
    bb369__0_559 -> bb567__0_559 [label="unwind"];
    bb370__0_559 -> bb371__0_559 [label="0"];
    bb370__0_559 -> bb372__0_559 [label="1"];
    bb370__0_559 -> bb7__0_559 [label="otherwise"];
    bb371__0_559 -> bb374__0_559 [label="return"];
    bb371__0_559 -> bb567__0_559 [label="unwind"];
    bb372__0_559 -> bb373__0_559 [label="return"];
    bb372__0_559 -> bb567__0_559 [label="unwind"];
    bb373__0_559 -> bb526__0_559 [label=""];
    bb374__0_559 -> bb375__0_559 [label="return"];
    bb374__0_559 -> bb567__0_559 [label="unwind"];
    bb375__0_559 -> bb376__0_559 [label="return"];
    bb375__0_559 -> bb567__0_559 [label="unwind"];
    bb376__0_559 -> bb377__0_559 [label="return"];
    bb376__0_559 -> bb567__0_559 [label="unwind"];
    bb377__0_559 -> bb378__0_559 [label="0"];
    bb377__0_559 -> bb379__0_559 [label="1"];
    bb377__0_559 -> bb7__0_559 [label="otherwise"];
    bb378__0_559 -> bb381__0_559 [label="return"];
    bb378__0_559 -> bb567__0_559 [label="unwind"];
    bb379__0_559 -> bb380__0_559 [label="return"];
    bb379__0_559 -> bb567__0_559 [label="unwind"];
    bb380__0_559 -> bb525__0_559 [label=""];
    bb381__0_559 -> bb382__0_559 [label="return"];
    bb381__0_559 -> bb567__0_559 [label="unwind"];
    bb382__0_559 -> bb384__0_559 [label="0"];
    bb382__0_559 -> bb383__0_559 [label="otherwise"];
    bb383__0_559 -> bb385__0_559 [label=""];
    bb384__0_559 -> bb385__0_559 [label=""];
    bb385__0_559 -> bb386__0_559 [label="return"];
    bb385__0_559 -> bb567__0_559 [label="unwind"];
    bb386__0_559 -> bb387__0_559 [label="return"];
    bb386__0_559 -> bb567__0_559 [label="unwind"];
    bb387__0_559 -> bb388__0_559 [label="0"];
    bb387__0_559 -> bb389__0_559 [label="1"];
    bb387__0_559 -> bb7__0_559 [label="otherwise"];
    bb388__0_559 -> bb391__0_559 [label="return"];
    bb388__0_559 -> bb573__0_559 [label="unwind"];
    bb389__0_559 -> bb390__0_559 [label="return"];
    bb389__0_559 -> bb567__0_559 [label="unwind"];
    bb390__0_559 -> bb525__0_559 [label=""];
    bb391__0_559 -> bb392__0_559 [label=""];
    bb392__0_559 -> bb393__0_559 [label="return"];
    bb392__0_559 -> bb573__0_559 [label="unwind"];
    bb393__0_559 -> bb394__0_559 [label="success"];
    bb393__0_559 -> bb573__0_559 [label="unwind"];
    bb394__0_559 -> bb395__0_559 [label="return"];
    bb394__0_559 -> bb573__0_559 [label="unwind"];
    bb395__0_559 -> bb396__0_559 [label="return"];
    bb395__0_559 -> bb573__0_559 [label="unwind"];
    bb396__0_559 -> bb397__0_559 [label="success"];
    bb396__0_559 -> bb573__0_559 [label="unwind"];
    bb397__0_559 -> bb435__0_559 [label="0"];
    bb397__0_559 -> bb398__0_559 [label="otherwise"];
    bb398__0_559 -> bb435__0_559 [label="0"];
    bb398__0_559 -> bb399__0_559 [label="otherwise"];
    bb399__0_559 -> bb400__0_559 [label="return"];
    bb399__0_559 -> bb573__0_559 [label="unwind"];
    bb400__0_559 -> bb401__0_559 [label="success"];
    bb400__0_559 -> bb573__0_559 [label="unwind"];
    bb401__0_559 -> bb402__0_559 [label="return"];
    bb401__0_559 -> bb573__0_559 [label="unwind"];
    bb402__0_559 -> bb403__0_559 [label="return"];
    bb402__0_559 -> bb573__0_559 [label="unwind"];
    bb403__0_559 -> bb404__0_559 [label="return"];
    bb403__0_559 -> bb573__0_559 [label="unwind"];
    bb404__0_559 -> bb405__0_559 [label="0"];
    bb404__0_559 -> bb406__0_559 [label="1"];
    bb404__0_559 -> bb7__0_559 [label="otherwise"];
    bb405__0_559 -> bb408__0_559 [label="return"];
    bb405__0_559 -> bb573__0_559 [label="unwind"];
    bb406__0_559 -> bb407__0_559 [label="return"];
    bb406__0_559 -> bb573__0_559 [label="unwind"];
    bb407__0_559 -> bb522__0_559 [label=""];
    bb408__0_559 -> bb409__0_559 [label="return"];
    bb408__0_559 -> bb573__0_559 [label="unwind"];
    bb409__0_559 -> bb410__0_559 [label="0"];
    bb409__0_559 -> bb411__0_559 [label="1"];
    bb409__0_559 -> bb7__0_559 [label="otherwise"];
    bb410__0_559 -> bb413__0_559 [label="return"];
    bb410__0_559 -> bb566__0_559 [label="unwind"];
    bb411__0_559 -> bb412__0_559 [label="return"];
    bb411__0_559 -> bb600__0_559 [label="unwind"];
    bb412__0_559 -> bb521__0_559 [label=""];
    bb413__0_559 -> bb414__0_559 [label="success"];
    bb413__0_559 -> bb566__0_559 [label="unwind"];
    bb414__0_559 -> bb415__0_559 [label="return"];
    bb414__0_559 -> bb566__0_559 [label="unwind"];
    bb415__0_559 -> bb416__0_559 [label="return"];
    bb415__0_559 -> bb566__0_559 [label="unwind"];
    bb416__0_559 -> bb417__0_559 [label="return"];
    bb416__0_559 -> bb566__0_559 [label="unwind"];
    bb417__0_559 -> bb418__0_559 [label="0"];
    bb417__0_559 -> bb419__0_559 [label="1"];
    bb417__0_559 -> bb7__0_559 [label="otherwise"];
    bb418__0_559 -> bb421__0_559 [label="return"];
    bb418__0_559 -> bb566__0_559 [label="unwind"];
    bb419__0_559 -> bb420__0_559 [label="return"];
    bb419__0_559 -> bb566__0_559 [label="unwind"];
    bb420__0_559 -> bb521__0_559 [label="return"];
    bb420__0_559 -> bb573__0_559 [label="unwind"];
    bb421__0_559 -> bb422__0_559 [label="success"];
    bb421__0_559 -> bb566__0_559 [label="unwind"];
    bb422__0_559 -> bb423__0_559 [label="return"];
    bb422__0_559 -> bb566__0_559 [label="unwind"];
    bb423__0_559 -> bb424__0_559 [label="return"];
    bb423__0_559 -> bb566__0_559 [label="unwind"];
    bb424__0_559 -> bb425__0_559 [label="0"];
    bb424__0_559 -> bb426__0_559 [label="1"];
    bb424__0_559 -> bb7__0_559 [label="otherwise"];
    bb425__0_559 -> bb428__0_559 [label="return"];
    bb425__0_559 -> bb566__0_559 [label="unwind"];
    bb426__0_559 -> bb427__0_559 [label="return"];
    bb426__0_559 -> bb566__0_559 [label="unwind"];
    bb427__0_559 -> bb519__0_559 [label="return"];
    bb427__0_559 -> bb573__0_559 [label="unwind"];
    bb428__0_559 -> bb429__0_559 [label="return"];
    bb428__0_559 -> bb566__0_559 [label="unwind"];
    bb429__0_559 -> bb430__0_559 [label="return"];
    bb429__0_559 -> bb566__0_559 [label="unwind"];
    bb430__0_559 -> bb431__0_559 [label="0"];
    bb430__0_559 -> bb432__0_559 [label="1"];
    bb430__0_559 -> bb7__0_559 [label="otherwise"];
    bb431__0_559 -> bb434__0_559 [label="return"];
    bb431__0_559 -> bb573__0_559 [label="unwind"];
    bb432__0_559 -> bb433__0_559 [label="return"];
    bb432__0_559 -> bb566__0_559 [label="unwind"];
    bb433__0_559 -> bb518__0_559 [label="return"];
    bb433__0_559 -> bb573__0_559 [label="unwind"];
    bb434__0_559 -> bb436__0_559 [label=""];
    bb435__0_559 -> bb436__0_559 [label=""];
    bb436__0_559 -> bb465__0_559 [label="0"];
    bb436__0_559 -> bb437__0_559 [label="otherwise"];
    bb437__0_559 -> bb438__0_559 [label="return"];
    bb437__0_559 -> bb573__0_559 [label="unwind"];
    bb438__0_559 -> bb439__0_559 [label="success"];
    bb438__0_559 -> bb573__0_559 [label="unwind"];
    bb439__0_559 -> bb440__0_559 [label="return"];
    bb439__0_559 -> bb573__0_559 [label="unwind"];
    bb440__0_559 -> bb441__0_559 [label="return"];
    bb440__0_559 -> bb573__0_559 [label="unwind"];
    bb441__0_559 -> bb442__0_559 [label="0"];
    bb441__0_559 -> bb443__0_559 [label="1"];
    bb441__0_559 -> bb7__0_559 [label="otherwise"];
    bb442__0_559 -> bb445__0_559 [label="return"];
    bb442__0_559 -> bb565__0_559 [label="unwind"];
    bb443__0_559 -> bb444__0_559 [label="return"];
    bb443__0_559 -> bb599__0_559 [label="unwind"];
    bb444__0_559 -> bb516__0_559 [label=""];
    bb445__0_559 -> bb446__0_559 [label="return"];
    bb445__0_559 -> bb565__0_559 [label="unwind"];
    bb446__0_559 -> bb447__0_559 [label="0"];
    bb446__0_559 -> bb448__0_559 [label="1"];
    bb446__0_559 -> bb7__0_559 [label="otherwise"];
    bb447__0_559 -> bb450__0_559 [label="return"];
    bb447__0_559 -> bb564__0_559 [label="unwind"];
    bb448__0_559 -> bb449__0_559 [label="return"];
    bb448__0_559 -> bb598__0_559 [label="unwind"];
    bb449__0_559 -> bb515__0_559 [label=""];
    bb450__0_559 -> bb451__0_559 [label="return"];
    bb450__0_559 -> bb564__0_559 [label="unwind"];
    bb451__0_559 -> bb452__0_559 [label="return"];
    bb451__0_559 -> bb564__0_559 [label="unwind"];
    bb452__0_559 -> bb453__0_559 [label="return"];
    bb452__0_559 -> bb564__0_559 [label="unwind"];
    bb453__0_559 -> bb454__0_559 [label="return"];
    bb453__0_559 -> bb564__0_559 [label="unwind"];
    bb454__0_559 -> bb455__0_559 [label="0"];
    bb454__0_559 -> bb456__0_559 [label="1"];
    bb454__0_559 -> bb7__0_559 [label="otherwise"];
    bb455__0_559 -> bb458__0_559 [label="return"];
    bb455__0_559 -> bb564__0_559 [label="unwind"];
    bb456__0_559 -> bb457__0_559 [label="return"];
    bb456__0_559 -> bb564__0_559 [label="unwind"];
    bb457__0_559 -> bb515__0_559 [label="return"];
    bb457__0_559 -> bb565__0_559 [label="unwind"];
    bb458__0_559 -> bb460__0_559 [label="0"];
    bb458__0_559 -> bb459__0_559 [label="otherwise"];
    bb459__0_559 -> bb462__0_559 [label=""];
    bb460__0_559 -> bb461__0_559 [label="return"];
    bb460__0_559 -> bb564__0_559 [label="unwind"];
    bb461__0_559 -> bb462__0_559 [label=""];
    bb462__0_559 -> bb463__0_559 [label="return"];
    bb462__0_559 -> bb565__0_559 [label="unwind"];
    bb463__0_559 -> bb464__0_559 [label="return"];
    bb463__0_559 -> bb573__0_559 [label="unwind"];
    bb464__0_559 -> bb466__0_559 [label=""];
    bb465__0_559 -> bb466__0_559 [label=""];
    bb466__0_559 -> bb467__0_559 [label="0"];
    bb466__0_559 -> bb468__0_559 [label="otherwise"];
    bb467__0_559 -> bb492__0_559 [label="0"];
    bb467__0_559 -> bb468__0_559 [label="otherwise"];
    bb468__0_559 -> bb469__0_559 [label="return"];
    bb468__0_559 -> bb573__0_559 [label="unwind"];
    bb469__0_559 -> bb470__0_559 [label="return"];
    bb469__0_559 -> bb573__0_559 [label="unwind"];
    bb470__0_559 -> bb471__0_559 [label="0"];
    bb470__0_559 -> bb472__0_559 [label="1"];
    bb470__0_559 -> bb7__0_559 [label="otherwise"];
    bb471__0_559 -> bb474__0_559 [label="return"];
    bb471__0_559 -> bb563__0_559 [label="unwind"];
    bb472__0_559 -> bb473__0_559 [label="return"];
    bb472__0_559 -> bb597__0_559 [label="unwind"];
    bb473__0_559 -> bb513__0_559 [label=""];
    bb474__0_559 -> bb475__0_559 [label="return"];
    bb474__0_559 -> bb563__0_559 [label="unwind"];
    bb475__0_559 -> bb476__0_559 [label="return"];
    bb475__0_559 -> bb563__0_559 [label="unwind"];
    bb476__0_559 -> bb477__0_559 [label="return"];
    bb476__0_559 -> bb563__0_559 [label="unwind"];
    bb477__0_559 -> bb478__0_559 [label="return"];
    bb477__0_559 -> bb563__0_559 [label="unwind"];
    bb478__0_559 -> bb479__0_559 [label="0"];
    bb478__0_559 -> bb480__0_559 [label="1"];
    bb478__0_559 -> bb7__0_559 [label="otherwise"];
    bb479__0_559 -> bb482__0_559 [label="return"];
    bb479__0_559 -> bb573__0_559 [label="unwind"];
    bb480__0_559 -> bb481__0_559 [label="return"];
    bb480__0_559 -> bb563__0_559 [label="unwind"];
    bb481__0_559 -> bb512__0_559 [label="return"];
    bb481__0_559 -> bb573__0_559 [label="unwind"];
    bb482__0_559 -> bb484__0_559 [label="0"];
    bb482__0_559 -> bb483__0_559 [label="otherwise"];
    bb483__0_559 -> bb485__0_559 [label=""];
    bb484__0_559 -> bb485__0_559 [label=""];
    bb485__0_559 -> bb486__0_559 [label="return"];
    bb485__0_559 -> bb573__0_559 [label="unwind"];
    bb486__0_559 -> bb487__0_559 [label="return"];
    bb486__0_559 -> bb573__0_559 [label="unwind"];
    bb487__0_559 -> bb488__0_559 [label="return"];
    bb487__0_559 -> bb573__0_559 [label="unwind"];
    bb488__0_559 -> bb489__0_559 [label="0"];
    bb488__0_559 -> bb490__0_559 [label="1"];
    bb488__0_559 -> bb7__0_559 [label="otherwise"];
    bb489__0_559 -> bb493__0_559 [label=""];
    bb490__0_559 -> bb491__0_559 [label="return"];
    bb490__0_559 -> bb573__0_559 [label="unwind"];
    bb491__0_559 -> bb514__0_559 [label=""];
    bb492__0_559 -> bb493__0_559 [label=""];
    bb493__0_559 -> bb494__0_559 [label="return"];
    bb493__0_559 -> bb573__0_559 [label="unwind"];
    bb494__0_559 -> bb495__0_559 [label="return"];
    bb494__0_559 -> bb573__0_559 [label="unwind"];
    bb495__0_559 -> bb496__0_559 [label="0"];
    bb495__0_559 -> bb497__0_559 [label="1"];
    bb495__0_559 -> bb7__0_559 [label="otherwise"];
    bb496__0_559 -> bb499__0_559 [label="return"];
    bb496__0_559 -> bb562__0_559 [label="unwind"];
    bb497__0_559 -> bb498__0_559 [label="return"];
    bb497__0_559 -> bb596__0_559 [label="unwind"];
    bb498__0_559 -> bb592__0_559 [label=""];
    bb499__0_559 -> bb500__0_559 [label="return"];
    bb499__0_559 -> bb562__0_559 [label="unwind"];
    bb500__0_559 -> bb501__0_559 [label="return"];
    bb500__0_559 -> bb562__0_559 [label="unwind"];
    bb501__0_559 -> bb502__0_559 [label="0"];
    bb501__0_559 -> bb503__0_559 [label="1"];
    bb501__0_559 -> bb7__0_559 [label="otherwise"];
    bb502__0_559 -> bb591__0_559 [label="return"];
    bb502__0_559 -> bb596__0_559 [label="unwind"];
    bb503__0_559 -> bb504__0_559 [label="return"];
    bb503__0_559 -> bb562__0_559 [label="unwind"];
    bb504__0_559 -> bb592__0_559 [label="return"];
    bb504__0_559 -> bb596__0_559 [label="unwind"];
    bb505__0_559 -> bb506__0_559 [label="return"];
    bb505__0_559 -> bb573__0_559 [label="unwind"];
    bb506__0_559 -> bb507__0_559 [label="return"];
    bb506__0_559 -> bb575__0_559 [label="unwind"];
    bb507__0_559 -> bb508__0_559 [label="return"];
    bb507__0_559 -> bb576__0_559 [label="unwind"];
    bb508__0_559 -> bb509__0_559 [label="return"];
    bb508__0_559 -> bb586__0_559 [label="unwind"];
    bb509__0_559 -> bb510__0_559 [label="return"];
    bb509__0_559 -> bb587__0_559 [label="unwind"];
    bb510__0_559 -> bb511__0_559 [label="return"];
    bb510__0_559 -> bb588__0_559 [label="unwind"];
    bb511__0_559 -> bb561__0_559 [label=""];
    bb512__0_559 -> bb513__0_559 [label=""];
    bb513__0_559 -> bb514__0_559 [label=""];
    bb514__0_559 -> bb517__0_559 [label=""];
    bb515__0_559 -> bb516__0_559 [label="return"];
    bb515__0_559 -> bb573__0_559 [label="unwind"];
    bb516__0_559 -> bb517__0_559 [label=""];
    bb517__0_559 -> bb524__0_559 [label=""];
    bb518__0_559 -> bb520__0_559 [label=""];
    bb519__0_559 -> bb520__0_559 [label=""];
    bb520__0_559 -> bb523__0_559 [label=""];
    bb521__0_559 -> bb522__0_559 [label=""];
    bb522__0_559 -> bb523__0_559 [label=""];
    bb523__0_559 -> bb524__0_559 [label=""];
    bb524__0_559 -> bb529__0_559 [label=""];
    bb525__0_559 -> bb526__0_559 [label=""];
    bb526__0_559 -> bb527__0_559 [label=""];
    bb527__0_559 -> bb528__0_559 [label="return"];
    bb527__0_559 -> bb573__0_559 [label="unwind"];
    bb528__0_559 -> bb529__0_559 [label=""];
    bb529__0_559 -> bb540__0_559 [label=""];
    bb530__0_559 -> bb540__0_559 [label=""];
    bb531__0_559 -> bb533__0_559 [label=""];
    bb532__0_559 -> bb533__0_559 [label=""];
    bb533__0_559 -> bb540__0_559 [label=""];
    bb534__0_559 -> bb536__0_559 [label=""];
    bb535__0_559 -> bb536__0_559 [label=""];
    bb536__0_559 -> bb539__0_559 [label=""];
    bb537__0_559 -> bb538__0_559 [label=""];
    bb538__0_559 -> bb539__0_559 [label=""];
    bb539__0_559 -> bb540__0_559 [label=""];
    bb540__0_559 -> bb541__0_559 [label=""];
    bb541__0_559 -> bb548__0_559 [label=""];
    bb542__0_559 -> bb543__0_559 [label=""];
    bb543__0_559 -> bb544__0_559 [label=""];
    bb544__0_559 -> bb545__0_559 [label="return"];
    bb544__0_559 -> bb572__0_559 [label="unwind"];
    bb545__0_559 -> bb546__0_559 [label=""];
    bb546__0_559 -> bb547__0_559 [label="return"];
    bb546__0_559 -> bb573__0_559 [label="unwind"];
    bb547__0_559 -> bb548__0_559 [label=""];
    bb548__0_559 -> bb549__0_559 [label="return"];
    bb548__0_559 -> bb575__0_559 [label="unwind"];
    bb549__0_559 -> bb550__0_559 [label=""];
    bb550__0_559 -> bb551__0_559 [label="return"];
    bb550__0_559 -> bb576__0_559 [label="unwind"];
    bb551__0_559 -> bb552__0_559 [label="return"];
    bb551__0_559 -> bb586__0_559 [label="unwind"];
    bb552__0_559 -> bb555__0_559 [label=""];
    bb553__0_559 -> bb595__0_559 [label=""];
    bb554__0_559 -> bb555__0_559 [label=""];
    bb555__0_559 -> bb557__0_559 [label=""];
    bb556__0_559 -> bb557__0_559 [label=""];
    bb557__0_559 -> bb558__0_559 [label=""];
    bb558__0_559 -> bb559__0_559 [label="return"];
    bb558__0_559 -> bb587__0_559 [label="unwind"];
    bb559__0_559 -> bb560__0_559 [label="return"];
    bb559__0_559 -> bb588__0_559 [label="unwind"];
    bb560__0_559 -> bb561__0_559 [label=""];
    bb562__0_559 -> bb596__0_559 [label="return"];
    bb563__0_559 -> bb573__0_559 [label="return"];
    bb564__0_559 -> bb565__0_559 [label="return"];
    bb565__0_559 -> bb573__0_559 [label="return"];
    bb566__0_559 -> bb573__0_559 [label="return"];
    bb567__0_559 -> bb573__0_559 [label="return"];
    bb568__0_559 -> bb573__0_559 [label="return"];
    bb569__0_559 -> bb573__0_559 [label="return"];
    bb570__0_559 -> bb573__0_559 [label="return"];
    bb571__0_559 -> bb572__0_559 [label="return"];
    bb572__0_559 -> bb573__0_559 [label="return"];
    bb573__0_559 -> bb575__0_559 [label="return"];
    bb574__0_559 -> bb607__0_559 [label="return"];
    bb575__0_559 -> bb576__0_559 [label="return"];
    bb576__0_559 -> bb586__0_559 [label="return"];
    bb577__0_559 -> bb608__0_559 [label="return"];
    bb578__0_559 -> bb610__0_559 [label="return"];
    bb579__0_559 -> bb610__0_559 [label="return"];
    bb580__0_559 -> bb610__0_559 [label="return"];
    bb581__0_559 -> bb586__0_559 [label="return"];
    bb582__0_559 -> bb586__0_559 [label="return"];
    bb583__0_559 -> bb586__0_559 [label="return"];
    bb584__0_559 -> bb585__0_559 [label="return"];
    bb585__0_559 -> bb586__0_559 [label="return"];
    bb586__0_559 -> bb587__0_559 [label="return"];
    bb587__0_559 -> bb588__0_559 [label="return"];
    bb589__0_559 -> bb159__0_559 [label="return"];
    bb589__0_559 -> bb586__0_559 [label="unwind"];
    bb590__0_559 -> bb174__0_559 [label="return"];
    bb590__0_559 -> bb575__0_559 [label="unwind"];
    bb591__0_559 -> bb505__0_559 [label="return"];
    bb591__0_559 -> bb573__0_559 [label="unwind"];
    bb592__0_559 -> bb517__0_559 [label=""];
    bb593__0_559 -> bb550__0_559 [label=""];
    bb594__0_559 -> bb554__0_559 [label="return"];
    bb594__0_559 -> bb586__0_559 [label="unwind"];
    bb595__0_559 -> bb554__0_559 [label="0"];
    bb595__0_559 -> bb594__0_559 [label="otherwise"];
    bb596__0_559 -> bb573__0_559 [label=""];
    bb597__0_559 -> bb573__0_559 [label=""];
    bb598__0_559 -> bb565__0_559 [label=""];
    bb599__0_559 -> bb573__0_559 [label=""];
    bb600__0_559 -> bb573__0_559 [label=""];
    bb601__0_559 -> bb573__0_559 [label=""];
    bb602__0_559 -> bb573__0_559 [label=""];
    bb603__0_559 -> bb573__0_559 [label=""];
    bb604__0_559 -> bb572__0_559 [label=""];
    bb605__0_559 -> bb573__0_559 [label=""];
    bb606__0_559 -> bb575__0_559 [label=""];
    bb607__0_559 -> bb575__0_559 [label=""];
    bb608__0_559 -> bb610__0_559 [label=""];
    bb609__0_559 -> bb586__0_559 [label="return"];
    bb610__0_559 -> bb586__0_559 [label="0"];
    bb610__0_559 -> bb609__0_559 [label="otherwise"];
    bb611__0_559 -> bb586__0_559 [label=""];
    bb612__0_559 -> bb586__0_559 [label=""];
    bb613__0_559 -> bb587__0_559 [label=""];
    bb614__0_559 -> bb588__0_559 [label=""];
}
