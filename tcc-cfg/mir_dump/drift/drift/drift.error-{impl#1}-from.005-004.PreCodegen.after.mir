// MIR for `error::<impl at programs/drift/src/error.rs:5:1: 5:14>::from` after PreCodegen

fn error::<impl at programs/drift/src/error.rs:5:1: 5:14>::from(_1: error::ErrorCode) -> u32 {
    debug e => _1;
    let mut _0: u32;
    let mut _2: u32;
    let _3: error::ErrorCode;
    let mut _4: u32;
    let mut _5: u32;
    let mut _6: bool;
    let mut _7: (u32, bool);

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = _1;
        _4 = discriminant(_3);
        _5 = _4 as u32 (IntToInt);
        _6 = Le(_5, const 316_u32);
        assume(move _6);
        _2 = move _4 as u32 (IntToInt);
        StorageDead(_3);
        _7 = CheckedAdd(_2, const _);
        assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _2, const _) -> [success: bb1, unwind continue];
    }

    bb1: {
        _0 = move (_7.0: u32);
        StorageDead(_2);
        return;
    }
}
