digraph Mir_0_1792 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_mark_twap(_1: &amp;ReErased mut state::perp_market::AMM, _2: i64, _3: u64, _4: u64, _5: std::option::Option&lt;u64&gt;, _6: std::option::Option&lt;i64&gt;) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let _7: i64;<br align="left"/>let _8: i64;<br align="left"/>let mut _9: (i64, i64);<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _12: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _15: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: i64;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _24: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _28: !;<br align="left"/>let mut _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _30: i64;<br align="left"/>let mut _31: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _32: isize;<br align="left"/>let _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _36: i64;<br align="left"/>let mut _37: i64;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _39: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _40: i64;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _42: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: i64;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _51: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i64;<br align="left"/>let mut _58: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: i64;<br align="left"/>let _64: ();<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _66: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: i64;<br align="left"/>let mut _70: ();<br align="left"/>let _71: error::ErrorCode;<br align="left"/>let _72: ();<br align="left"/>let mut _73: &amp;ReErased str;<br align="left"/>let _74: &amp;ReErased str;<br align="left"/>let mut _75: &amp;ReErased std::string::String;<br align="left"/>let _76: &amp;ReErased std::string::String;<br align="left"/>let _77: std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let mut _79: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _88: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased error::ErrorCode;<br align="left"/>let _90: &amp;ReErased error::ErrorCode;<br align="left"/>let _91: ();<br align="left"/>let mut _92: &amp;ReErased str;<br align="left"/>let _93: &amp;ReErased str;<br align="left"/>let mut _94: error::ErrorCode;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: ();<br align="left"/>let _100: i64;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _102: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _103: i64;<br align="left"/>let mut _104: i64;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: i64;<br align="left"/>let _110: i64;<br align="left"/>let _111: i64;<br align="left"/>let mut _112: (i64, i64);<br align="left"/>let mut _113: bool;<br align="left"/>let mut _114: i64;<br align="left"/>let mut _115: i64;<br align="left"/>let mut _116: i64;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _118: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _119: i64;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: i64;<br align="left"/>let mut _125: i64;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _127: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _128: isize;<br align="left"/>let _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let mut _131: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _132: i64;<br align="left"/>let _133: ();<br align="left"/>let mut _134: &amp;ReErased str;<br align="left"/>let _135: &amp;ReErased str;<br align="left"/>let mut _136: &amp;ReErased std::string::String;<br align="left"/>let _137: &amp;ReErased std::string::String;<br align="left"/>let _138: std::string::String;<br align="left"/>let _139: std::string::String;<br align="left"/>let mut _140: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _141: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _143: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _144: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _146: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _147: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _148: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _149: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _150: &amp;ReErased i64;<br align="left"/>let _151: &amp;ReErased i64;<br align="left"/>let _152: i64;<br align="left"/>let mut _153: i64;<br align="left"/>let mut _154: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _155: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _156: i64;<br align="left"/>let mut _157: i64;<br align="left"/>let mut _158: isize;<br align="left"/>let _159: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _160: !;<br align="left"/>let mut _161: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _162: i64;<br align="left"/>let mut _163: i64;<br align="left"/>let mut _164: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _165: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _166: i64;<br align="left"/>let mut _167: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _168: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _169: i64;<br align="left"/>let mut _170: isize;<br align="left"/>let _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _172: !;<br align="left"/>let mut _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _174: i64;<br align="left"/>let mut _175: i64;<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _177: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _178: u64;<br align="left"/>let mut _179: isize;<br align="left"/>let _180: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _181: !;<br align="left"/>let mut _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _183: i64;<br align="left"/>let mut _184: i64;<br align="left"/>let mut _185: i64;<br align="left"/>let mut _186: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _187: i64;<br align="left"/>let mut _188: i64;<br align="left"/>let mut _189: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _190: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _191: i64;<br align="left"/>let mut _192: i64;<br align="left"/>let mut _193: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _194: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _195: u64;<br align="left"/>let mut _196: isize;<br align="left"/>let _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _198: !;<br align="left"/>let mut _199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _200: i64;<br align="left"/>let mut _201: isize;<br align="left"/>let _202: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _203: !;<br align="left"/>let mut _204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _205: i64;<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _210: i64;<br align="left"/>let mut _211: i64;<br align="left"/>let mut _212: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _213: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _214: i64;<br align="left"/>let mut _215: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _216: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _217: i64;<br align="left"/>let mut _218: isize;<br align="left"/>let _219: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _220: !;<br align="left"/>let mut _221: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _222: i64;<br align="left"/>let mut _223: i64;<br align="left"/>let mut _224: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _225: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _226: u64;<br align="left"/>let mut _227: isize;<br align="left"/>let _228: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _229: !;<br align="left"/>let mut _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _231: i64;<br align="left"/>let mut _232: i64;<br align="left"/>let mut _233: i64;<br align="left"/>let mut _234: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _235: i64;<br align="left"/>let mut _236: i64;<br align="left"/>let mut _237: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _238: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _239: i64;<br align="left"/>let mut _240: i64;<br align="left"/>let mut _241: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _242: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _243: u64;<br align="left"/>let mut _244: isize;<br align="left"/>let _245: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _246: !;<br align="left"/>let mut _247: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _248: i64;<br align="left"/>let mut _249: isize;<br align="left"/>let _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _251: !;<br align="left"/>let mut _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _253: i64;<br align="left"/>let mut _254: isize;<br align="left"/>let _255: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _256: !;<br align="left"/>let mut _257: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _258: i64;<br align="left"/>let mut _259: i64;<br align="left"/>let mut _260: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _261: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _262: u64;<br align="left"/>let mut _263: isize;<br align="left"/>let _264: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _265: !;<br align="left"/>let mut _266: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _267: i64;<br align="left"/>let mut _268: i64;<br align="left"/>let mut _269: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _270: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _271: u64;<br align="left"/>let mut _272: isize;<br align="left"/>let _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _274: !;<br align="left"/>let mut _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _276: i64;<br align="left"/>let _277: i64;<br align="left"/>let mut _278: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _279: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _280: i64;<br align="left"/>let mut _281: i64;<br align="left"/>let mut _282: i64;<br align="left"/>let mut _283: i64;<br align="left"/>let mut _284: i64;<br align="left"/>let mut _285: isize;<br align="left"/>let _286: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _287: !;<br align="left"/>let mut _288: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _289: i64;<br align="left"/>let mut _290: u64;<br align="left"/>let mut _291: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _292: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _293: i64;<br align="left"/>let mut _294: isize;<br align="left"/>let _295: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _296: !;<br align="left"/>let mut _297: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _298: u64;<br align="left"/>let _299: i64;<br align="left"/>let mut _300: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _301: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _302: i64;<br align="left"/>let mut _303: i64;<br align="left"/>let mut _304: i64;<br align="left"/>let mut _305: i64;<br align="left"/>let mut _306: i64;<br align="left"/>let mut _307: isize;<br align="left"/>let _308: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _309: !;<br align="left"/>let mut _310: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _311: i64;<br align="left"/>let mut _312: u64;<br align="left"/>let mut _313: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _314: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _315: i64;<br align="left"/>let mut _316: isize;<br align="left"/>let _317: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _318: !;<br align="left"/>let mut _319: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _320: u64;<br align="left"/>let _321: i64;<br align="left"/>let mut _322: i64;<br align="left"/>let mut _323: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _324: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _325: i64;<br align="left"/>let mut _326: i64;<br align="left"/>let mut _327: isize;<br align="left"/>let _328: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _329: !;<br align="left"/>let mut _330: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _331: i64;<br align="left"/>let mut _332: bool;<br align="left"/>let mut _333: bool;<br align="left"/>let mut _334: bool;<br align="left"/>let mut _335: bool;<br align="left"/>let _336: u64;<br align="left"/>let mut _337: isize;<br align="left"/>let _338: u64;<br align="left"/>let mut _339: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _340: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _341: u64;<br align="left"/>let mut _342: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _343: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _344: u64;<br align="left"/>let mut _345: u64;<br align="left"/>let mut _346: isize;<br align="left"/>let _347: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _348: !;<br align="left"/>let mut _349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _350: u64;<br align="left"/>let mut _351: isize;<br align="left"/>let _352: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _353: !;<br align="left"/>let mut _354: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _355: u64;<br align="left"/>let _356: bool;<br align="left"/>let mut _357: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _358: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _359: &amp;ReErased mut state::perp_market::AMM;<br align="left"/>let mut _360: i64;<br align="left"/>let mut _361: u64;<br align="left"/>let mut _362: u64;<br align="left"/>let mut _363: u64;<br align="left"/>let mut _364: isize;<br align="left"/>let _365: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _366: !;<br align="left"/>let mut _367: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _368: bool;<br align="left"/>let mut _369: u64;<br align="left"/>let mut _370: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _371: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _372: i64;<br align="left"/>let mut _373: isize;<br align="left"/>let _374: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _375: !;<br align="left"/>let mut _376: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _377: u64;<br align="left"/>let mut _378: u64;<br align="left"/>let mut _379: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _380: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _381: i64;<br align="left"/>let mut _382: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _383: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _384: i64;<br align="left"/>let mut _385: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _386: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _387: i64;<br align="left"/>let mut _388: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _389: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _390: i64;<br align="left"/>let mut _391: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _392: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _393: i64;<br align="left"/>let mut _394: i64;<br align="left"/>let mut _395: isize;<br align="left"/>let _396: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _397: !;<br align="left"/>let mut _398: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _399: i64;<br align="left"/>let mut _400: isize;<br align="left"/>let _401: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _402: !;<br align="left"/>let mut _403: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _404: i64;<br align="left"/>let mut _405: isize;<br align="left"/>let _406: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _407: !;<br align="left"/>let mut _408: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _409: i64;<br align="left"/>let mut _410: i64;<br align="left"/>let mut _411: i64;<br align="left"/>let mut _412: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _413: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _414: u64;<br align="left"/>let mut _415: isize;<br align="left"/>let _416: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _417: !;<br align="left"/>let mut _418: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _419: i64;<br align="left"/>let mut _420: i64;<br align="left"/>let mut _421: i64;<br align="left"/>let mut _422: isize;<br align="left"/>let _423: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _424: !;<br align="left"/>let mut _425: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _426: i64;<br align="left"/>let mut _427: isize;<br align="left"/>let _428: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _429: !;<br align="left"/>let mut _430: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _431: u64;<br align="left"/>let mut _432: i64;<br align="left"/>let mut _433: i64;<br align="left"/>let mut _434: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _435: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug now =&gt; _2;<br align="left"/>debug bid_price =&gt; _3;<br align="left"/>debug ask_price =&gt; _4;<br align="left"/>debug precomputed_trade_price =&gt; _5;<br align="left"/>debug sanitize_clamp =&gt; _6;<br align="left"/>debug bid_price_capped_update =&gt; _7;<br align="left"/>debug ask_price_capped_update =&gt; _8;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug residual =&gt; _27;<br align="left"/>debug val =&gt; _30;<br align="left"/>debug residual =&gt; _33;<br align="left"/>debug val =&gt; _36;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug error_code =&gt; _71;<br align="left"/>debug res =&gt; _78;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug last_valid_trade_since_oracle_twap_update =&gt; _100;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug last_bid_price_twap =&gt; _110;<br align="left"/>debug last_ask_price_twap =&gt; _111;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug residual =&gt; _129;<br align="left"/>debug val =&gt; _132;<br align="left"/>debug res =&gt; _139;<br align="left"/>debug from_start_valid =&gt; _152;<br align="left"/>debug residual =&gt; _159;<br align="left"/>debug val =&gt; _162;<br align="left"/>debug residual =&gt; _171;<br align="left"/>debug val =&gt; _174;<br align="left"/>debug residual =&gt; _180;<br align="left"/>debug val =&gt; _183;<br align="left"/>debug residual =&gt; _197;<br align="left"/>debug val =&gt; _200;<br align="left"/>debug residual =&gt; _202;<br align="left"/>debug val =&gt; _205;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug residual =&gt; _219;<br align="left"/>debug val =&gt; _222;<br align="left"/>debug residual =&gt; _228;<br align="left"/>debug val =&gt; _231;<br align="left"/>debug residual =&gt; _245;<br align="left"/>debug val =&gt; _248;<br align="left"/>debug residual =&gt; _250;<br align="left"/>debug val =&gt; _253;<br align="left"/>debug residual =&gt; _255;<br align="left"/>debug val =&gt; _258;<br align="left"/>debug residual =&gt; _264;<br align="left"/>debug val =&gt; _267;<br align="left"/>debug residual =&gt; _273;<br align="left"/>debug val =&gt; _276;<br align="left"/>debug bid_twap =&gt; _277;<br align="left"/>debug residual =&gt; _286;<br align="left"/>debug val =&gt; _289;<br align="left"/>debug residual =&gt; _295;<br align="left"/>debug val =&gt; _298;<br align="left"/>debug ask_twap =&gt; _299;<br align="left"/>debug residual =&gt; _308;<br align="left"/>debug val =&gt; _311;<br align="left"/>debug residual =&gt; _317;<br align="left"/>debug val =&gt; _320;<br align="left"/>debug mid_twap =&gt; _321;<br align="left"/>debug residual =&gt; _328;<br align="left"/>debug val =&gt; _331;<br align="left"/>debug trade_price =&gt; _336;<br align="left"/>debug trade_price =&gt; _338;<br align="left"/>debug residual =&gt; _347;<br align="left"/>debug val =&gt; _350;<br align="left"/>debug residual =&gt; _352;<br align="left"/>debug val =&gt; _355;<br align="left"/>debug residual =&gt; _365;<br align="left"/>debug val =&gt; _368;<br align="left"/>debug residual =&gt; _374;<br align="left"/>debug val =&gt; _377;<br align="left"/>debug residual =&gt; _396;<br align="left"/>debug val =&gt; _399;<br align="left"/>debug residual =&gt; _401;<br align="left"/>debug val =&gt; _404;<br align="left"/>debug residual =&gt; _406;<br align="left"/>debug val =&gt; _409;<br align="left"/>debug residual =&gt; _416;<br align="left"/>debug val =&gt; _419;<br align="left"/>debug residual =&gt; _423;<br align="left"/>debug val =&gt; _426;<br align="left"/>debug residual =&gt; _428;<br align="left"/>debug val =&gt; _431;<br align="left"/>>;
    bb0__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _3<br/></td></tr><tr><td align="left">_15 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _16)</td></tr></table>>];
    bb1__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb2__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb3__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_14 as Continue).0: i64)<br/>_13 = _21<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = ((*_1).43: u64)<br/></td></tr><tr><td align="left">_24 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _25)</td></tr></table>>];
    bb4__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb6__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb8__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_26 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb9__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_23 as Continue).0: i64)<br/>_22 = _30<br/>StorageDead(_30)<br/>StorageLive(_31)<br/>_31 = _6<br/></td></tr><tr><td align="left">_12 = sanitize_new_price(move _13, move _22, move _31)</td></tr></table>>];
    bb10__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_29)<br/>_29 = _27<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _29)</td></tr></table>>];
    bb11__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_22)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_22)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_11 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _12)</td></tr></table>>];
    bb13__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>_32 = discriminant(_11)<br/></td></tr><tr><td align="left">switchInt(move _32)</td></tr></table>>];
    bb14__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_11 as Continue).0: i64)<br/>_10 = _36<br/>StorageDead(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _4<br/></td></tr><tr><td align="left">_42 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _43)</td></tr></table>>];
    bb15__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_11 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_35)<br/>_35 = _33<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _35)</td></tr></table>>];
    bb16__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb18__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_44 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb19__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_41 as Continue).0: i64)<br/>_40 = _48<br/>StorageDead(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = ((*_1).44: u64)<br/></td></tr><tr><td align="left">_51 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _52)</td></tr></table>>];
    bb20__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb21__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb23__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_53 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb24__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_50 as Continue).0: i64)<br/>_49 = _57<br/>StorageDead(_57)<br/>StorageLive(_58)<br/>_58 = _6<br/></td></tr><tr><td align="left">_39 = sanitize_new_price(move _40, move _49, move _58)</td></tr></table>>];
    bb25__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb26__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_49)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_49)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb28__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_59 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb29__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_38 as Continue).0: i64)<br/>_37 = _63<br/>StorageDead(_63)<br/>_9 = (move _10, move _37)<br/>StorageDead(_37)<br/>StorageDead(_10)<br/>StorageLive(_7)<br/>_7 = (_9.0: i64)<br/>StorageLive(_8)<br/>_8 = (_9.1: i64)<br/>StorageDead(_50)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_23)<br/>StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _7<br/>StorageLive(_69)<br/>_69 = _8<br/>_67 = Le(move _68, move _69)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb30__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb31__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_70)<br/>_70 = ()<br/>_66 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _70)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_68)<br/>StorageLive(_71)<br/>_71 = error::ErrorCode::InvalidMarkTwapUpdateDetected<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_435 = const _<br/>_82 = &amp;(*_435)<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_71<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _89)</td></tr></table>>];
    bb34__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = [move _88]<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_79 = Arguments::&lt;'_&gt;::new_v1(move _80, move _84)</td></tr></table>>];
    bb35__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = format(move _79)</td></tr></table>>];
    bb36__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>_77 = move _78<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = &lt;String as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb37__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_72 = solana_program::log::sol_log(move _73)</td></tr></table>>];
    bb38__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb39__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = const &quot;bid_price_capped_update not &lt;= ask_price_capped_update,&quot;<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_91 = solana_program::log::sol_log(move _92)</td></tr></table>>];
    bb40__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_93)<br/>StorageDead(_91)<br/>StorageLive(_94)<br/>_94 = _71<br/>_66 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _94)<br/>StorageDead(_94)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb42__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_95 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb43__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_65 as Continue).0: ())<br/>_64 = _99<br/>StorageDead(_99)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = (((*_1).1: state::oracle::HistoricalOracleData).5: i64)<br/>StorageLive(_104)<br/>_104 = ((*_1).62: i64)<br/></td></tr><tr><td align="left">_102 = &lt;i64 as SafeMath&gt;::safe_sub(move _103, move _104)</td></tr></table>>];
    bb44__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb45__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb47__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_105 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb48__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_101 as Continue).0: i64)<br/>_100 = _109<br/>StorageDead(_109)<br/>StorageDead(_101)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = _100<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = ((*_1).51: i64)<br/></td></tr><tr><td align="left">_118 = &lt;i64 as SafeMath&gt;::safe_div(move _119, const 60_i64)</td></tr></table>>];
    bb49__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb50__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb52__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_120 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb53__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_117 as Continue).0: i64)<br/>_116 = _124<br/>StorageDead(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/></td></tr><tr><td align="left">_127 = &lt;i128 as Cast&gt;::cast::&lt;i64&gt;(const _)</td></tr></table>>];
    bb54__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb55__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb57__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_128 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb58__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_126 as Continue).0: i64)<br/>_125 = _132<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_115 = &lt;i64 as Ord&gt;::max(move _116, move _125)</td></tr></table>>];
    bb59__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_131)<br/>_131 = _129<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _131)</td></tr></table>>];
    bb60__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>StorageDead(_116)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_116)<br/>_113 = Gt(move _114, move _115)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb62__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_434 = const _<br/>_143 = &amp;(*_434)<br/>_142 = &amp;(*_143)<br/>_141 = move _142 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_142)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_100<br/>_150 = &amp;(*_151)<br/></td></tr><tr><td align="left">_149 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _150)</td></tr></table>>];
    bb63__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>_148 = [move _149]<br/>StorageDead(_149)<br/>_147 = &amp;_148<br/>_146 = &amp;(*_147)<br/>_145 = move _146 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_140 = Arguments::&lt;'_&gt;::new_v1(move _141, move _145)</td></tr></table>>];
    bb64__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">_139 = format(move _140)</td></tr></table>>];
    bb65__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_151)<br/>StorageDead(_148)<br/>StorageDead(_147)<br/>StorageDead(_143)<br/>_138 = move _139<br/>StorageDead(_139)<br/>_137 = &amp;_138<br/>_136 = &amp;(*_137)<br/></td></tr><tr><td align="left">_135 = &lt;String as Deref&gt;::deref(move _136)</td></tr></table>>];
    bb66__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_134 = &amp;(*_135)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">_133 = solana_program::log::sol_log(move _134)</td></tr></table>>];
    bb67__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/></td></tr><tr><td align="left">drop(_138)</td></tr></table>>];
    bb68__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_137)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_156 = ((*_1).51: i64)<br/>StorageLive(_157)<br/>_157 = _100<br/></td></tr><tr><td align="left">_155 = &lt;i64 as SafeMath&gt;::safe_sub(move _156, move _157)</td></tr></table>>];
    bb69__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/></td></tr><tr><td align="left">_154 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _155)</td></tr></table>>];
    bb70__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>_158 = discriminant(_154)<br/></td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb71__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_154 as Continue).0: i64)<br/>_153 = _162<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_152 = std::cmp::max::&lt;i64&gt;(const 0_i64, move _153)</td></tr></table>>];
    bb72__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>_159 = ((_154 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_161)<br/>_161 = _159<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _161)</td></tr></table>>];
    bb73__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_153)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_154)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/></td></tr><tr><td align="left">_168 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _169)</td></tr></table>>];
    bb75__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/></td></tr><tr><td align="left">_167 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _168)</td></tr></table>>];
    bb76__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_170 = discriminant(_167)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb77__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_167 as Continue).0: i64)<br/>_166 = _174<br/>StorageDead(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_178 = ((*_1).43: u64)<br/></td></tr><tr><td align="left">_177 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _178)</td></tr></table>>];
    bb78__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_167 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_173)<br/>_173 = _171<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _173)</td></tr></table>>];
    bb79__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_166)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb81__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_179 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _179)</td></tr></table>>];
    bb82__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_176 as Continue).0: i64)<br/>_175 = _183<br/>StorageDead(_183)<br/>StorageLive(_184)<br/>_184 = _100<br/>StorageLive(_185)<br/>_185 = _152<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = ((*_1).43: u64)<br/></td></tr><tr><td align="left">_194 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _195)</td></tr></table>>];
    bb83__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_182)<br/>_182 = _180<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _182)</td></tr></table>>];
    bb84__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_175)<br/>StorageDead(_166)<br/>StorageDead(_165)<br/>StorageDead(_163)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/></td></tr><tr><td align="left">_193 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _194)</td></tr></table>>];
    bb86__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>_196 = discriminant(_193)<br/></td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb87__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_193 as Continue).0: i64)<br/>_192 = _200<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">_190 = &lt;i64 as SafeMath&gt;::safe_sub(move _191, move _192)</td></tr></table>>];
    bb88__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_197)<br/>_197 = ((_193 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_199)<br/>_199 = _197<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _199)</td></tr></table>>];
    bb89__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">_189 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _190)</td></tr></table>>];
    bb91__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>_201 = discriminant(_189)<br/></td></tr><tr><td align="left">switchInt(move _201)</td></tr></table>>];
    bb92__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_189 as Continue).0: i64)<br/>_188 = _205<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_187 = core::num::&lt;impl i64&gt;::signum(move _188)</td></tr></table>>];
    bb93__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_202)<br/>_202 = ((_189 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_204)<br/>_204 = _202<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _204)</td></tr></table>>];
    bb94__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_186 = Option::&lt;i64&gt;::Some(move _187)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_165 = calculate_weighted_average(move _166, move _175, move _184, move _185, move _186)</td></tr></table>>];
    bb96__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_175)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">_164 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _165)</td></tr></table>>];
    bb97__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>_206 = discriminant(_164)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb98__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_164 as Continue).0: i64)<br/>_163 = _210<br/>StorageDead(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>_217 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/></td></tr><tr><td align="left">_216 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _217)</td></tr></table>>];
    bb99__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_164 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_209)<br/>_209 = _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb100__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/></td></tr><tr><td align="left">_215 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _216)</td></tr></table>>];
    bb102__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>_218 = discriminant(_215)<br/></td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb103__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_222)<br/>_222 = ((_215 as Continue).0: i64)<br/>_214 = _222<br/>StorageDead(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = ((*_1).44: u64)<br/></td></tr><tr><td align="left">_225 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _226)</td></tr></table>>];
    bb104__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_215 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_221)<br/>_221 = _219<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _221)</td></tr></table>>];
    bb105__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_163)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _225)</td></tr></table>>];
    bb107__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>_227 = discriminant(_224)<br/></td></tr><tr><td align="left">switchInt(move _227)</td></tr></table>>];
    bb108__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_231)<br/>_231 = ((_224 as Continue).0: i64)<br/>_223 = _231<br/>StorageDead(_231)<br/>StorageLive(_232)<br/>_232 = _100<br/>StorageLive(_233)<br/>_233 = _152<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = (((*_1).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>_243 = ((*_1).44: u64)<br/></td></tr><tr><td align="left">_242 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _243)</td></tr></table>>];
    bb109__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_228)<br/>_228 = ((_224 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_230)<br/>_230 = _228<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _230)</td></tr></table>>];
    bb110__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_223)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/>StorageDead(_211)<br/>StorageDead(_163)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/></td></tr><tr><td align="left">_241 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _242)</td></tr></table>>];
    bb112__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>_244 = discriminant(_241)<br/></td></tr><tr><td align="left">switchInt(move _244)</td></tr></table>>];
    bb113__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_248)<br/>_248 = ((_241 as Continue).0: i64)<br/>_240 = _248<br/>StorageDead(_248)<br/></td></tr><tr><td align="left">_238 = &lt;i64 as SafeMath&gt;::safe_sub(move _239, move _240)</td></tr></table>>];
    bb114__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>_245 = ((_241 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_247)<br/>_247 = _245<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _247)</td></tr></table>>];
    bb115__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_245)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _238)</td></tr></table>>];
    bb117__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_249 = discriminant(_237)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb118__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageLive(_253)<br/>_253 = ((_237 as Continue).0: i64)<br/>_236 = _253<br/>StorageDead(_253)<br/></td></tr><tr><td align="left">_235 = core::num::&lt;impl i64&gt;::signum(move _236)</td></tr></table>>];
    bb119__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>_250 = ((_237 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_252)<br/>_252 = _250<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _252)</td></tr></table>>];
    bb120__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_234 = Option::&lt;i64&gt;::Some(move _235)<br/>StorageDead(_235)<br/></td></tr><tr><td align="left">_213 = calculate_weighted_average(move _214, move _223, move _232, move _233, move _234)</td></tr></table>>];
    bb122__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>StorageDead(_223)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">_212 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _213)</td></tr></table>>];
    bb123__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_254 = discriminant(_212)<br/></td></tr><tr><td align="left">switchInt(move _254)</td></tr></table>>];
    bb124__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_258)<br/>_258 = ((_212 as Continue).0: i64)<br/>_211 = _258<br/>StorageDead(_258)<br/>_112 = (move _163, move _211)<br/>StorageDead(_211)<br/>StorageDead(_163)<br/>StorageDead(_152)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/>StorageDead(_224)<br/>StorageDead(_215)<br/>StorageDead(_212)<br/>StorageDead(_193)<br/>StorageDead(_189)<br/>StorageDead(_176)<br/>StorageDead(_167)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_255)<br/>_255 = ((_212 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_257)<br/>_257 = _255<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _257)</td></tr></table>>];
    bb126__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_262 = ((*_1).43: u64)<br/></td></tr><tr><td align="left">_261 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _262)</td></tr></table>>];
    bb128__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/></td></tr><tr><td align="left">_260 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _261)</td></tr></table>>];
    bb129__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>_263 = discriminant(_260)<br/></td></tr><tr><td align="left">switchInt(move _263)</td></tr></table>>];
    bb130__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_267)<br/>_267 = ((_260 as Continue).0: i64)<br/>_259 = _267<br/>StorageDead(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>_271 = ((*_1).44: u64)<br/></td></tr><tr><td align="left">_270 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _271)</td></tr></table>>];
    bb131__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_264)<br/>_264 = ((_260 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_266)<br/>_266 = _264<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _266)</td></tr></table>>];
    bb132__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_266)<br/>StorageDead(_264)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/></td></tr><tr><td align="left">_269 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _270)</td></tr></table>>];
    bb134__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_270)<br/>_272 = discriminant(_269)<br/></td></tr><tr><td align="left">switchInt(move _272)</td></tr></table>>];
    bb135__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_276)<br/>_276 = ((_269 as Continue).0: i64)<br/>_268 = _276<br/>StorageDead(_276)<br/>_112 = (move _259, move _268)<br/>StorageDead(_268)<br/>StorageDead(_259)<br/>StorageDead(_269)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageLive(_273)<br/>_273 = ((_269 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_275)<br/>_275 = _273<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _275)</td></tr></table>>];
    bb137__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageDead(_273)<br/>StorageDead(_268)<br/>StorageDead(_259)<br/>StorageDead(_269)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageLive(_110)<br/>_110 = (_112.0: i64)<br/>StorageLive(_111)<br/>_111 = (_112.1: i64)<br/>StorageDead(_112)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>_280 = _7<br/>StorageLive(_281)<br/>_281 = _2<br/>StorageLive(_282)<br/>_282 = _110<br/>StorageLive(_283)<br/>_283 = ((*_1).62: i64)<br/>StorageLive(_284)<br/>_284 = ((*_1).51: i64)<br/></td></tr><tr><td align="left">_279 = calculate_new_twap(move _280, move _281, move _282, move _283, move _284)</td></tr></table>>];
    bb139__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageDead(_281)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">_278 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _279)</td></tr></table>>];
    bb140__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>_285 = discriminant(_278)<br/></td></tr><tr><td align="left">switchInt(move _285)</td></tr></table>>];
    bb141__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_289)<br/>_289 = ((_278 as Continue).0: i64)<br/>_277 = _289<br/>StorageDead(_289)<br/>StorageDead(_278)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>_293 = _277<br/></td></tr><tr><td align="left">_292 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _293)</td></tr></table>>];
    bb142__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_286)<br/>_286 = ((_278 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_288)<br/>_288 = _286<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _288)</td></tr></table>>];
    bb143__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_286)<br/>StorageDead(_278)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/></td></tr><tr><td align="left">_291 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _292)</td></tr></table>>];
    bb145__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>_294 = discriminant(_291)<br/></td></tr><tr><td align="left">switchInt(move _294)</td></tr></table>>];
    bb146__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageLive(_298)<br/>_298 = ((_291 as Continue).0: u64)<br/>_290 = _298<br/>StorageDead(_298)<br/>((*_1).43: u64) = move _290<br/>StorageDead(_290)<br/>StorageDead(_291)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>_302 = _8<br/>StorageLive(_303)<br/>_303 = _2<br/>StorageLive(_304)<br/>_304 = _111<br/>StorageLive(_305)<br/>_305 = ((*_1).62: i64)<br/>StorageLive(_306)<br/>_306 = ((*_1).51: i64)<br/></td></tr><tr><td align="left">_301 = calculate_new_twap(move _302, move _303, move _304, move _305, move _306)</td></tr></table>>];
    bb147__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_295)<br/>_295 = ((_291 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_297)<br/>_297 = _295<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _297)</td></tr></table>>];
    bb148__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_290)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb149__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_305)<br/>StorageDead(_304)<br/>StorageDead(_303)<br/>StorageDead(_302)<br/></td></tr><tr><td align="left">_300 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _301)</td></tr></table>>];
    bb150__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>_307 = discriminant(_300)<br/></td></tr><tr><td align="left">switchInt(move _307)</td></tr></table>>];
    bb151__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageLive(_311)<br/>_311 = ((_300 as Continue).0: i64)<br/>_299 = _311<br/>StorageDead(_311)<br/>StorageDead(_300)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>_315 = _299<br/></td></tr><tr><td align="left">_314 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _315)</td></tr></table>>];
    bb152__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_308)<br/>_308 = ((_300 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_310)<br/>_310 = _308<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _310)</td></tr></table>>];
    bb153__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_308)<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/></td></tr><tr><td align="left">_313 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _314)</td></tr></table>>];
    bb155__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>_316 = discriminant(_313)<br/></td></tr><tr><td align="left">switchInt(move _316)</td></tr></table>>];
    bb156__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_320)<br/>_320 = ((_313 as Continue).0: u64)<br/>_312 = _320<br/>StorageDead(_320)<br/>((*_1).44: u64) = move _312<br/>StorageDead(_312)<br/>StorageDead(_313)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>_325 = _277<br/>StorageLive(_326)<br/>_326 = _299<br/></td></tr><tr><td align="left">_324 = &lt;i64 as SafeMath&gt;::safe_add(move _325, move _326)</td></tr></table>>];
    bb157__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_317)<br/>_317 = ((_313 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_319)<br/>_319 = _317<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _319)</td></tr></table>>];
    bb158__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageDead(_317)<br/>StorageDead(_312)<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">_323 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _324)</td></tr></table>>];
    bb160__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>_327 = discriminant(_323)<br/></td></tr><tr><td align="left">switchInt(move _327)</td></tr></table>>];
    bb161__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageLive(_331)<br/>_331 = ((_323 as Continue).0: i64)<br/>_322 = _331<br/>StorageDead(_331)<br/>_332 = Eq(const 2_i64, const 0_i64)<br/></td></tr><tr><td align="left">assert(!move _332, &quot;attempt to divide `{}` by zero&quot;, _322)</td></tr></table>>];
    bb162__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_328)<br/>_328 = ((_323 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_330)<br/>_330 = _328<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _330)</td></tr></table>>];
    bb163__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageDead(_328)<br/>StorageDead(_322)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">_333 = Eq(const 2_i64, const -1_i64)<br/>_334 = Eq(_322, const i64::MIN)<br/>_335 = BitAnd(move _333, move _334)<br/></td></tr><tr><td align="left">assert(!move _335, &quot;attempt to compute `{} / {}`, which would overflow&quot;, _322, const 2_i64)</td></tr></table>>];
    bb165__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">_321 = Div(move _322, const 2_i64)<br/>StorageDead(_322)<br/>StorageDead(_323)<br/>StorageLive(_336)<br/>_337 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _337)</td></tr></table>>];
    bb166__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>_344 = _3<br/>StorageLive(_345)<br/>_345 = _4<br/></td></tr><tr><td align="left">_343 = &lt;u64 as SafeMath&gt;::safe_add(move _344, move _345)</td></tr></table>>];
    bb167__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_338)<br/>_338 = ((_5 as Some).0: u64)<br/>_336 = _338<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_344)<br/></td></tr><tr><td align="left">_342 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _343)</td></tr></table>>];
    bb169__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>_346 = discriminant(_342)<br/></td></tr><tr><td align="left">switchInt(move _346)</td></tr></table>>];
    bb170__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageLive(_350)<br/>_350 = ((_342 as Continue).0: u64)<br/>_341 = _350<br/>StorageDead(_350)<br/></td></tr><tr><td align="left">_340 = &lt;u64 as SafeMath&gt;::safe_div(move _341, const 2_u64)</td></tr></table>>];
    bb171__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_347)<br/>_347 = ((_342 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_349)<br/>_349 = _347<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _349)</td></tr></table>>];
    bb172__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_349)<br/>StorageDead(_347)<br/>StorageDead(_341)<br/>StorageDead(_340)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/></td></tr><tr><td align="left">_339 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _340)</td></tr></table>>];
    bb174__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>_351 = discriminant(_339)<br/></td></tr><tr><td align="left">switchInt(move _351)</td></tr></table>>];
    bb175__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = ((_339 as Continue).0: u64)<br/>_336 = _355<br/>StorageDead(_355)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageLive(_352)<br/>_352 = ((_339 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_354)<br/>_354 = _352<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _354)</td></tr></table>>];
    bb177__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_354)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb178__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_359 = &amp;mut (*_1)<br/>StorageLive(_360)<br/>_360 = _2<br/>StorageLive(_361)<br/>_361 = _336<br/>StorageLive(_362)<br/>_362 = ((*_1).45: u64)<br/>StorageLive(_363)<br/>_363 = ((*_1).46: u64)<br/></td></tr><tr><td align="left">_358 = update_amm_mark_std(move _359, move _360, move _361, move _362, move _363)</td></tr></table>>];
    bb179__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_363)<br/>StorageDead(_362)<br/>StorageDead(_361)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/></td></tr><tr><td align="left">_357 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _358)</td></tr></table>>];
    bb180__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/>_364 = discriminant(_357)<br/></td></tr><tr><td align="left">switchInt(move _364)</td></tr></table>>];
    bb181__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageLive(_368)<br/>_368 = ((_357 as Continue).0: bool)<br/>_356 = _368<br/>StorageDead(_368)<br/>StorageDead(_357)<br/>StorageDead(_356)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>_372 = _321<br/></td></tr><tr><td align="left">_371 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _372)</td></tr></table>>];
    bb182__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageLive(_365)<br/>_365 = ((_357 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_367)<br/>_367 = _365<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _367)</td></tr></table>>];
    bb183__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_357)<br/>StorageDead(_356)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_372)<br/></td></tr><tr><td align="left">_370 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _371)</td></tr></table>>];
    bb185__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_371)<br/>_373 = discriminant(_370)<br/></td></tr><tr><td align="left">switchInt(move _373)</td></tr></table>>];
    bb186__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageLive(_377)<br/>_377 = ((_370 as Continue).0: u64)<br/>_369 = _377<br/>StorageDead(_377)<br/>((*_1).45: u64) = move _369<br/>StorageDead(_369)<br/>StorageDead(_370)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>_393 = _7<br/>StorageLive(_394)<br/>_394 = _8<br/></td></tr><tr><td align="left">_392 = &lt;i64 as SafeMath&gt;::safe_add(move _393, move _394)</td></tr></table>>];
    bb187__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageLive(_374)<br/>_374 = ((_370 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_376)<br/>_376 = _374<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _376)</td></tr></table>>];
    bb188__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>StorageDead(_374)<br/>StorageDead(_369)<br/>StorageDead(_370)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_393)<br/></td></tr><tr><td align="left">_391 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _392)</td></tr></table>>];
    bb190__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>_395 = discriminant(_391)<br/></td></tr><tr><td align="left">switchInt(move _395)</td></tr></table>>];
    bb191__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageLive(_399)<br/>_399 = ((_391 as Continue).0: i64)<br/>_390 = _399<br/>StorageDead(_399)<br/></td></tr><tr><td align="left">_389 = &lt;i64 as SafeMath&gt;::safe_div(move _390, const 2_i64)</td></tr></table>>];
    bb192__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>_396 = ((_391 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_398)<br/>_398 = _396<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _398)</td></tr></table>>];
    bb193__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_396)<br/>StorageDead(_390)<br/>StorageDead(_389)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb194__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/></td></tr><tr><td align="left">_388 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _389)</td></tr></table>>];
    bb195__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>_400 = discriminant(_388)<br/></td></tr><tr><td align="left">switchInt(move _400)</td></tr></table>>];
    bb196__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageLive(_404)<br/>_404 = ((_388 as Continue).0: i64)<br/>_387 = _404<br/>StorageDead(_404)<br/></td></tr><tr><td align="left">_386 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _387)</td></tr></table>>];
    bb197__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_401)<br/>_401 = ((_388 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_403)<br/>_403 = _401<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _403)</td></tr></table>>];
    bb198__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_401)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/></td></tr><tr><td align="left">_385 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _386)</td></tr></table>>];
    bb200__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>_405 = discriminant(_385)<br/></td></tr><tr><td align="left">switchInt(move _405)</td></tr></table>>];
    bb201__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_409)<br/>_409 = ((_385 as Continue).0: i64)<br/>_384 = _409<br/>StorageDead(_409)<br/>StorageLive(_410)<br/>_410 = _2<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = ((*_1).46: u64)<br/></td></tr><tr><td align="left">_413 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _414)</td></tr></table>>];
    bb202__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageLive(_406)<br/>_406 = ((_385 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_408)<br/>_408 = _406<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _408)</td></tr></table>>];
    bb203__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_406)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/></td></tr><tr><td align="left">_412 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _413)</td></tr></table>>];
    bb205__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>_415 = discriminant(_412)<br/></td></tr><tr><td align="left">switchInt(move _415)</td></tr></table>>];
    bb206__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageLive(_419)<br/>_419 = ((_412 as Continue).0: i64)<br/>_411 = _419<br/>StorageDead(_419)<br/>StorageLive(_420)<br/>_420 = ((*_1).62: i64)<br/>StorageLive(_421)<br/>_421 = const _ as i64 (IntToInt)<br/></td></tr><tr><td align="left">_383 = calculate_new_twap(move _384, move _410, move _411, move _420, move _421)</td></tr></table>>];
    bb207__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageLive(_416)<br/>_416 = ((_412 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_418)<br/>_418 = _416<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _418)</td></tr></table>>];
    bb208__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_416)<br/>StorageDead(_411)<br/>StorageDead(_410)<br/>StorageDead(_384)<br/>StorageDead(_383)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>StorageDead(_420)<br/>StorageDead(_411)<br/>StorageDead(_410)<br/>StorageDead(_384)<br/></td></tr><tr><td align="left">_382 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _383)</td></tr></table>>];
    bb210__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>_422 = discriminant(_382)<br/></td></tr><tr><td align="left">switchInt(move _422)</td></tr></table>>];
    bb211__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageLive(_426)<br/>_426 = ((_382 as Continue).0: i64)<br/>_381 = _426<br/>StorageDead(_426)<br/></td></tr><tr><td align="left">_380 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _381)</td></tr></table>>];
    bb212__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageLive(_423)<br/>_423 = ((_382 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_425)<br/>_425 = _423<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _425)</td></tr></table>>];
    bb213__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_425)<br/>StorageDead(_423)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb214__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/></td></tr><tr><td align="left">_379 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _380)</td></tr></table>>];
    bb215__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>_427 = discriminant(_379)<br/></td></tr><tr><td align="left">switchInt(move _427)</td></tr></table>>];
    bb216__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageLive(_431)<br/>_431 = ((_379 as Continue).0: u64)<br/>_378 = _431<br/>StorageDead(_431)<br/>((*_1).46: u64) = move _378<br/>StorageDead(_378)<br/>StorageDead(_412)<br/>StorageDead(_391)<br/>StorageDead(_388)<br/>StorageDead(_385)<br/>StorageDead(_382)<br/>StorageDead(_379)<br/>StorageLive(_432)<br/>_432 = _2<br/>((*_1).62: i64) = move _432<br/>StorageDead(_432)<br/>StorageLive(_433)<br/>_433 = _321<br/></td></tr><tr><td align="left">_0 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _433)</td></tr></table>>];
    bb217__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_428)<br/>_428 = ((_379 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_430)<br/>_430 = _428<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _430)</td></tr></table>>];
    bb218__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_433)<br/>StorageDead(_336)<br/>StorageDead(_321)<br/>StorageDead(_299)<br/>StorageDead(_277)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_100)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>StorageDead(_380)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb221__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageDead(_412)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb222__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_387)<br/>StorageDead(_386)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>StorageDead(_378)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb224__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>StorageDead(_388)<br/>StorageDead(_385)<br/>StorageDead(_382)<br/>StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_339)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb230__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb231__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_235)<br/>StorageDead(_234)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>StorageDead(_223)<br/>StorageDead(_214)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb232__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_163)<br/>StorageDead(_152)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb233__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb235__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_175)<br/>StorageDead(_166)<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb236__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_152)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb238__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb243__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_10)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left">return</td></tr></table>>];
    bb250__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">250 (cleanup)</td></tr><tr><td align="left">drop(_138)</td></tr></table>>];
    bb251__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">251 (cleanup)</td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb252__0_1792 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">252 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1792 -> bb1__0_1792 [label="return"];
    bb1__0_1792 -> bb2__0_1792 [label="return"];
    bb2__0_1792 -> bb3__0_1792 [label="0"];
    bb2__0_1792 -> bb5__0_1792 [label="1"];
    bb2__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb3__0_1792 -> bb7__0_1792 [label="return"];
    bb5__0_1792 -> bb6__0_1792 [label="return"];
    bb6__0_1792 -> bb248__0_1792 [label=""];
    bb7__0_1792 -> bb8__0_1792 [label="return"];
    bb8__0_1792 -> bb9__0_1792 [label="0"];
    bb8__0_1792 -> bb10__0_1792 [label="1"];
    bb8__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb9__0_1792 -> bb12__0_1792 [label="return"];
    bb10__0_1792 -> bb11__0_1792 [label="return"];
    bb11__0_1792 -> bb246__0_1792 [label=""];
    bb12__0_1792 -> bb13__0_1792 [label="return"];
    bb13__0_1792 -> bb14__0_1792 [label="0"];
    bb13__0_1792 -> bb15__0_1792 [label="1"];
    bb13__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb14__0_1792 -> bb17__0_1792 [label="return"];
    bb15__0_1792 -> bb16__0_1792 [label="return"];
    bb16__0_1792 -> bb246__0_1792 [label=""];
    bb17__0_1792 -> bb18__0_1792 [label="return"];
    bb18__0_1792 -> bb19__0_1792 [label="0"];
    bb18__0_1792 -> bb20__0_1792 [label="1"];
    bb18__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb19__0_1792 -> bb22__0_1792 [label="return"];
    bb20__0_1792 -> bb21__0_1792 [label="return"];
    bb21__0_1792 -> bb245__0_1792 [label=""];
    bb22__0_1792 -> bb23__0_1792 [label="return"];
    bb23__0_1792 -> bb24__0_1792 [label="0"];
    bb23__0_1792 -> bb25__0_1792 [label="1"];
    bb23__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb24__0_1792 -> bb27__0_1792 [label="return"];
    bb25__0_1792 -> bb26__0_1792 [label="return"];
    bb26__0_1792 -> bb244__0_1792 [label=""];
    bb27__0_1792 -> bb28__0_1792 [label="return"];
    bb28__0_1792 -> bb29__0_1792 [label="0"];
    bb28__0_1792 -> bb30__0_1792 [label="1"];
    bb28__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb29__0_1792 -> bb33__0_1792 [label="0"];
    bb29__0_1792 -> bb32__0_1792 [label="otherwise"];
    bb30__0_1792 -> bb31__0_1792 [label="return"];
    bb31__0_1792 -> bb244__0_1792 [label=""];
    bb32__0_1792 -> bb41__0_1792 [label=""];
    bb33__0_1792 -> bb34__0_1792 [label="return"];
    bb34__0_1792 -> bb35__0_1792 [label="return"];
    bb35__0_1792 -> bb36__0_1792 [label="return"];
    bb36__0_1792 -> bb37__0_1792 [label="return"];
    bb36__0_1792 -> bb251__0_1792 [label="unwind"];
    bb37__0_1792 -> bb38__0_1792 [label="return"];
    bb37__0_1792 -> bb251__0_1792 [label="unwind"];
    bb38__0_1792 -> bb39__0_1792 [label="return"];
    bb38__0_1792 -> bb252__0_1792 [label="unwind"];
    bb39__0_1792 -> bb40__0_1792 [label="return"];
    bb40__0_1792 -> bb41__0_1792 [label=""];
    bb41__0_1792 -> bb42__0_1792 [label="return"];
    bb42__0_1792 -> bb43__0_1792 [label="0"];
    bb42__0_1792 -> bb44__0_1792 [label="1"];
    bb42__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb43__0_1792 -> bb46__0_1792 [label="return"];
    bb44__0_1792 -> bb45__0_1792 [label="return"];
    bb45__0_1792 -> bb243__0_1792 [label=""];
    bb46__0_1792 -> bb47__0_1792 [label="return"];
    bb47__0_1792 -> bb48__0_1792 [label="0"];
    bb47__0_1792 -> bb49__0_1792 [label="1"];
    bb47__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb48__0_1792 -> bb51__0_1792 [label="return"];
    bb49__0_1792 -> bb50__0_1792 [label="return"];
    bb50__0_1792 -> bb242__0_1792 [label=""];
    bb51__0_1792 -> bb52__0_1792 [label="return"];
    bb52__0_1792 -> bb53__0_1792 [label="0"];
    bb52__0_1792 -> bb54__0_1792 [label="1"];
    bb52__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb53__0_1792 -> bb56__0_1792 [label="return"];
    bb54__0_1792 -> bb55__0_1792 [label="return"];
    bb55__0_1792 -> bb240__0_1792 [label=""];
    bb56__0_1792 -> bb57__0_1792 [label="return"];
    bb57__0_1792 -> bb58__0_1792 [label="0"];
    bb57__0_1792 -> bb59__0_1792 [label="1"];
    bb57__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb58__0_1792 -> bb61__0_1792 [label="return"];
    bb59__0_1792 -> bb60__0_1792 [label="return"];
    bb60__0_1792 -> bb240__0_1792 [label=""];
    bb61__0_1792 -> bb127__0_1792 [label="0"];
    bb61__0_1792 -> bb62__0_1792 [label="otherwise"];
    bb62__0_1792 -> bb63__0_1792 [label="return"];
    bb63__0_1792 -> bb64__0_1792 [label="return"];
    bb64__0_1792 -> bb65__0_1792 [label="return"];
    bb65__0_1792 -> bb66__0_1792 [label="return"];
    bb65__0_1792 -> bb250__0_1792 [label="unwind"];
    bb66__0_1792 -> bb67__0_1792 [label="return"];
    bb66__0_1792 -> bb250__0_1792 [label="unwind"];
    bb67__0_1792 -> bb68__0_1792 [label="return"];
    bb67__0_1792 -> bb252__0_1792 [label="unwind"];
    bb68__0_1792 -> bb69__0_1792 [label="return"];
    bb69__0_1792 -> bb70__0_1792 [label="return"];
    bb70__0_1792 -> bb71__0_1792 [label="0"];
    bb70__0_1792 -> bb72__0_1792 [label="1"];
    bb70__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb71__0_1792 -> bb74__0_1792 [label="return"];
    bb72__0_1792 -> bb73__0_1792 [label="return"];
    bb73__0_1792 -> bb241__0_1792 [label=""];
    bb74__0_1792 -> bb75__0_1792 [label="return"];
    bb75__0_1792 -> bb76__0_1792 [label="return"];
    bb76__0_1792 -> bb77__0_1792 [label="0"];
    bb76__0_1792 -> bb78__0_1792 [label="1"];
    bb76__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb77__0_1792 -> bb80__0_1792 [label="return"];
    bb78__0_1792 -> bb79__0_1792 [label="return"];
    bb79__0_1792 -> bb239__0_1792 [label=""];
    bb80__0_1792 -> bb81__0_1792 [label="return"];
    bb81__0_1792 -> bb82__0_1792 [label="0"];
    bb81__0_1792 -> bb83__0_1792 [label="1"];
    bb81__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb82__0_1792 -> bb85__0_1792 [label="return"];
    bb83__0_1792 -> bb84__0_1792 [label="return"];
    bb84__0_1792 -> bb238__0_1792 [label=""];
    bb85__0_1792 -> bb86__0_1792 [label="return"];
    bb86__0_1792 -> bb87__0_1792 [label="0"];
    bb86__0_1792 -> bb88__0_1792 [label="1"];
    bb86__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb87__0_1792 -> bb90__0_1792 [label="return"];
    bb88__0_1792 -> bb89__0_1792 [label="return"];
    bb89__0_1792 -> bb235__0_1792 [label=""];
    bb90__0_1792 -> bb91__0_1792 [label="return"];
    bb91__0_1792 -> bb92__0_1792 [label="0"];
    bb91__0_1792 -> bb93__0_1792 [label="1"];
    bb91__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb92__0_1792 -> bb95__0_1792 [label="return"];
    bb93__0_1792 -> bb94__0_1792 [label="return"];
    bb94__0_1792 -> bb235__0_1792 [label=""];
    bb95__0_1792 -> bb96__0_1792 [label="return"];
    bb96__0_1792 -> bb97__0_1792 [label="return"];
    bb97__0_1792 -> bb98__0_1792 [label="0"];
    bb97__0_1792 -> bb99__0_1792 [label="1"];
    bb97__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb98__0_1792 -> bb101__0_1792 [label="return"];
    bb99__0_1792 -> bb100__0_1792 [label="return"];
    bb100__0_1792 -> bb236__0_1792 [label=""];
    bb101__0_1792 -> bb102__0_1792 [label="return"];
    bb102__0_1792 -> bb103__0_1792 [label="0"];
    bb102__0_1792 -> bb104__0_1792 [label="1"];
    bb102__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb103__0_1792 -> bb106__0_1792 [label="return"];
    bb104__0_1792 -> bb105__0_1792 [label="return"];
    bb105__0_1792 -> bb234__0_1792 [label=""];
    bb106__0_1792 -> bb107__0_1792 [label="return"];
    bb107__0_1792 -> bb108__0_1792 [label="0"];
    bb107__0_1792 -> bb109__0_1792 [label="1"];
    bb107__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb108__0_1792 -> bb111__0_1792 [label="return"];
    bb109__0_1792 -> bb110__0_1792 [label="return"];
    bb110__0_1792 -> bb233__0_1792 [label=""];
    bb111__0_1792 -> bb112__0_1792 [label="return"];
    bb112__0_1792 -> bb113__0_1792 [label="0"];
    bb112__0_1792 -> bb114__0_1792 [label="1"];
    bb112__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb113__0_1792 -> bb116__0_1792 [label="return"];
    bb114__0_1792 -> bb115__0_1792 [label="return"];
    bb115__0_1792 -> bb231__0_1792 [label=""];
    bb116__0_1792 -> bb117__0_1792 [label="return"];
    bb117__0_1792 -> bb118__0_1792 [label="0"];
    bb117__0_1792 -> bb119__0_1792 [label="1"];
    bb117__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb118__0_1792 -> bb121__0_1792 [label="return"];
    bb119__0_1792 -> bb120__0_1792 [label="return"];
    bb120__0_1792 -> bb231__0_1792 [label=""];
    bb121__0_1792 -> bb122__0_1792 [label="return"];
    bb122__0_1792 -> bb123__0_1792 [label="return"];
    bb123__0_1792 -> bb124__0_1792 [label="0"];
    bb123__0_1792 -> bb125__0_1792 [label="1"];
    bb123__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb124__0_1792 -> bb138__0_1792 [label=""];
    bb125__0_1792 -> bb126__0_1792 [label="return"];
    bb126__0_1792 -> bb232__0_1792 [label=""];
    bb127__0_1792 -> bb128__0_1792 [label="return"];
    bb128__0_1792 -> bb129__0_1792 [label="return"];
    bb129__0_1792 -> bb130__0_1792 [label="0"];
    bb129__0_1792 -> bb131__0_1792 [label="1"];
    bb129__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb130__0_1792 -> bb133__0_1792 [label="return"];
    bb131__0_1792 -> bb132__0_1792 [label="return"];
    bb132__0_1792 -> bb230__0_1792 [label=""];
    bb133__0_1792 -> bb134__0_1792 [label="return"];
    bb134__0_1792 -> bb135__0_1792 [label="0"];
    bb134__0_1792 -> bb136__0_1792 [label="1"];
    bb134__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb135__0_1792 -> bb138__0_1792 [label=""];
    bb136__0_1792 -> bb137__0_1792 [label="return"];
    bb137__0_1792 -> bb230__0_1792 [label=""];
    bb138__0_1792 -> bb139__0_1792 [label="return"];
    bb139__0_1792 -> bb140__0_1792 [label="return"];
    bb140__0_1792 -> bb141__0_1792 [label="0"];
    bb140__0_1792 -> bb142__0_1792 [label="1"];
    bb140__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb141__0_1792 -> bb144__0_1792 [label="return"];
    bb142__0_1792 -> bb143__0_1792 [label="return"];
    bb143__0_1792 -> bb229__0_1792 [label=""];
    bb144__0_1792 -> bb145__0_1792 [label="return"];
    bb145__0_1792 -> bb146__0_1792 [label="0"];
    bb145__0_1792 -> bb147__0_1792 [label="1"];
    bb145__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb146__0_1792 -> bb149__0_1792 [label="return"];
    bb147__0_1792 -> bb148__0_1792 [label="return"];
    bb148__0_1792 -> bb229__0_1792 [label=""];
    bb149__0_1792 -> bb150__0_1792 [label="return"];
    bb150__0_1792 -> bb151__0_1792 [label="0"];
    bb150__0_1792 -> bb152__0_1792 [label="1"];
    bb150__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb151__0_1792 -> bb154__0_1792 [label="return"];
    bb152__0_1792 -> bb153__0_1792 [label="return"];
    bb153__0_1792 -> bb228__0_1792 [label=""];
    bb154__0_1792 -> bb155__0_1792 [label="return"];
    bb155__0_1792 -> bb156__0_1792 [label="0"];
    bb155__0_1792 -> bb157__0_1792 [label="1"];
    bb155__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb156__0_1792 -> bb159__0_1792 [label="return"];
    bb157__0_1792 -> bb158__0_1792 [label="return"];
    bb158__0_1792 -> bb228__0_1792 [label=""];
    bb159__0_1792 -> bb160__0_1792 [label="return"];
    bb160__0_1792 -> bb161__0_1792 [label="0"];
    bb160__0_1792 -> bb162__0_1792 [label="1"];
    bb160__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb161__0_1792 -> bb164__0_1792 [label="success"];
    bb162__0_1792 -> bb163__0_1792 [label="return"];
    bb163__0_1792 -> bb227__0_1792 [label=""];
    bb164__0_1792 -> bb165__0_1792 [label="success"];
    bb165__0_1792 -> bb166__0_1792 [label="0"];
    bb165__0_1792 -> bb167__0_1792 [label="1"];
    bb165__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb166__0_1792 -> bb168__0_1792 [label="return"];
    bb167__0_1792 -> bb178__0_1792 [label=""];
    bb168__0_1792 -> bb169__0_1792 [label="return"];
    bb169__0_1792 -> bb170__0_1792 [label="0"];
    bb169__0_1792 -> bb171__0_1792 [label="1"];
    bb169__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb170__0_1792 -> bb173__0_1792 [label="return"];
    bb171__0_1792 -> bb172__0_1792 [label="return"];
    bb172__0_1792 -> bb225__0_1792 [label=""];
    bb173__0_1792 -> bb174__0_1792 [label="return"];
    bb174__0_1792 -> bb175__0_1792 [label="0"];
    bb174__0_1792 -> bb176__0_1792 [label="1"];
    bb174__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb175__0_1792 -> bb178__0_1792 [label=""];
    bb176__0_1792 -> bb177__0_1792 [label="return"];
    bb177__0_1792 -> bb225__0_1792 [label=""];
    bb178__0_1792 -> bb179__0_1792 [label="return"];
    bb179__0_1792 -> bb180__0_1792 [label="return"];
    bb180__0_1792 -> bb181__0_1792 [label="0"];
    bb180__0_1792 -> bb182__0_1792 [label="1"];
    bb180__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb181__0_1792 -> bb184__0_1792 [label="return"];
    bb182__0_1792 -> bb183__0_1792 [label="return"];
    bb183__0_1792 -> bb226__0_1792 [label=""];
    bb184__0_1792 -> bb185__0_1792 [label="return"];
    bb185__0_1792 -> bb186__0_1792 [label="0"];
    bb185__0_1792 -> bb187__0_1792 [label="1"];
    bb185__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb186__0_1792 -> bb189__0_1792 [label="return"];
    bb187__0_1792 -> bb188__0_1792 [label="return"];
    bb188__0_1792 -> bb226__0_1792 [label=""];
    bb189__0_1792 -> bb190__0_1792 [label="return"];
    bb190__0_1792 -> bb191__0_1792 [label="0"];
    bb190__0_1792 -> bb192__0_1792 [label="1"];
    bb190__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb191__0_1792 -> bb194__0_1792 [label="return"];
    bb192__0_1792 -> bb193__0_1792 [label="return"];
    bb193__0_1792 -> bb222__0_1792 [label=""];
    bb194__0_1792 -> bb195__0_1792 [label="return"];
    bb195__0_1792 -> bb196__0_1792 [label="0"];
    bb195__0_1792 -> bb197__0_1792 [label="1"];
    bb195__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb196__0_1792 -> bb199__0_1792 [label="return"];
    bb197__0_1792 -> bb198__0_1792 [label="return"];
    bb198__0_1792 -> bb222__0_1792 [label=""];
    bb199__0_1792 -> bb200__0_1792 [label="return"];
    bb200__0_1792 -> bb201__0_1792 [label="0"];
    bb200__0_1792 -> bb202__0_1792 [label="1"];
    bb200__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb201__0_1792 -> bb204__0_1792 [label="return"];
    bb202__0_1792 -> bb203__0_1792 [label="return"];
    bb203__0_1792 -> bb223__0_1792 [label=""];
    bb204__0_1792 -> bb205__0_1792 [label="return"];
    bb205__0_1792 -> bb206__0_1792 [label="0"];
    bb205__0_1792 -> bb207__0_1792 [label="1"];
    bb205__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb206__0_1792 -> bb209__0_1792 [label="return"];
    bb207__0_1792 -> bb208__0_1792 [label="return"];
    bb208__0_1792 -> bb220__0_1792 [label=""];
    bb209__0_1792 -> bb210__0_1792 [label="return"];
    bb210__0_1792 -> bb211__0_1792 [label="0"];
    bb210__0_1792 -> bb212__0_1792 [label="1"];
    bb210__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb211__0_1792 -> bb214__0_1792 [label="return"];
    bb212__0_1792 -> bb213__0_1792 [label="return"];
    bb213__0_1792 -> bb220__0_1792 [label=""];
    bb214__0_1792 -> bb215__0_1792 [label="return"];
    bb215__0_1792 -> bb216__0_1792 [label="0"];
    bb215__0_1792 -> bb217__0_1792 [label="1"];
    bb215__0_1792 -> bb4__0_1792 [label="otherwise"];
    bb216__0_1792 -> bb219__0_1792 [label="return"];
    bb217__0_1792 -> bb218__0_1792 [label="return"];
    bb218__0_1792 -> bb221__0_1792 [label=""];
    bb219__0_1792 -> bb249__0_1792 [label=""];
    bb220__0_1792 -> bb221__0_1792 [label=""];
    bb221__0_1792 -> bb224__0_1792 [label=""];
    bb222__0_1792 -> bb223__0_1792 [label=""];
    bb223__0_1792 -> bb224__0_1792 [label=""];
    bb224__0_1792 -> bb226__0_1792 [label=""];
    bb225__0_1792 -> bb226__0_1792 [label=""];
    bb226__0_1792 -> bb227__0_1792 [label=""];
    bb227__0_1792 -> bb228__0_1792 [label=""];
    bb228__0_1792 -> bb229__0_1792 [label=""];
    bb229__0_1792 -> bb242__0_1792 [label=""];
    bb230__0_1792 -> bb241__0_1792 [label=""];
    bb231__0_1792 -> bb232__0_1792 [label=""];
    bb232__0_1792 -> bb233__0_1792 [label=""];
    bb233__0_1792 -> bb234__0_1792 [label=""];
    bb234__0_1792 -> bb237__0_1792 [label=""];
    bb235__0_1792 -> bb236__0_1792 [label=""];
    bb236__0_1792 -> bb237__0_1792 [label=""];
    bb237__0_1792 -> bb238__0_1792 [label=""];
    bb238__0_1792 -> bb239__0_1792 [label=""];
    bb239__0_1792 -> bb241__0_1792 [label=""];
    bb240__0_1792 -> bb241__0_1792 [label=""];
    bb241__0_1792 -> bb242__0_1792 [label=""];
    bb242__0_1792 -> bb243__0_1792 [label=""];
    bb243__0_1792 -> bb249__0_1792 [label=""];
    bb244__0_1792 -> bb245__0_1792 [label=""];
    bb245__0_1792 -> bb247__0_1792 [label=""];
    bb246__0_1792 -> bb247__0_1792 [label=""];
    bb247__0_1792 -> bb248__0_1792 [label=""];
    bb248__0_1792 -> bb249__0_1792 [label=""];
    bb250__0_1792 -> bb252__0_1792 [label="return"];
    bb251__0_1792 -> bb252__0_1792 [label="return"];
}
