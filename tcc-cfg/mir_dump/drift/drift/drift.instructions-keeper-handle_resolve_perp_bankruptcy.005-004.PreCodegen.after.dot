digraph Mir_0_9298 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_resolve_perp_bankruptcy(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;&gt;, _2: u16, _3: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: ();<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _8: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _9: isize;<br align="left"/>let _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _11: !;<br align="left"/>let mut _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _13: ();<br align="left"/>let _14: anchor_lang::prelude::Clock;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _16: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _21: anchor_lang::prelude::Clock;<br align="left"/>let _22: i64;<br align="left"/>let _23: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _25: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _27: ();<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _29: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _30: bool;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _32: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _33: ();<br align="left"/>let _34: error::ErrorCode;<br align="left"/>let _35: ();<br align="left"/>let mut _36: &amp;ReErased str;<br align="left"/>let _37: &amp;ReErased str;<br align="left"/>let mut _38: &amp;ReErased std::string::String;<br align="left"/>let _39: &amp;ReErased std::string::String;<br align="left"/>let _40: std::string::String;<br align="left"/>let _41: std::string::String;<br align="left"/>let mut _42: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _43: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _44: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _45: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _46: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _47: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _48: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _49: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _50: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _51: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased error::ErrorCode;<br align="left"/>let _53: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _54: error::ErrorCode;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: ();<br align="left"/>let _60: ();<br align="left"/>let mut _61: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _62: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _63: bool;<br align="left"/>let mut _64: u16;<br align="left"/>let mut _65: ();<br align="left"/>let _66: error::ErrorCode;<br align="left"/>let _67: ();<br align="left"/>let mut _68: &amp;ReErased str;<br align="left"/>let _69: &amp;ReErased str;<br align="left"/>let mut _70: &amp;ReErased std::string::String;<br align="left"/>let _71: &amp;ReErased std::string::String;<br align="left"/>let _72: std::string::String;<br align="left"/>let _73: std::string::String;<br align="left"/>let mut _74: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _76: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _77: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _78: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _80: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _81: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _82: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _83: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased error::ErrorCode;<br align="left"/>let _85: &amp;ReErased error::ErrorCode;<br align="left"/>let mut _86: error::ErrorCode;<br align="left"/>let mut _87: isize;<br align="left"/>let _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _89: !;<br align="left"/>let mut _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _91: ();<br align="left"/>let _92: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _93: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _95: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _96: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _97: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _98: Closure(DefId(0:9301 ~ drift[d311]::instructions::keeper::handle_resolve_perp_bankruptcy::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _104: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _105: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _107: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _108: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _109: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _110: Closure(DefId(0:9302 ~ drift[d311]::instructions::keeper::handle_resolve_perp_bankruptcy::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _116: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _117: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _118: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _119: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _120: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _121: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _122: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _123: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _124: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _125: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _126: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _127: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _128: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _129: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _130: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _131: u16;<br align="left"/>let mut _132: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _133: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _134: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _135: u16;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _138: state::state::OracleGuardRails;<br align="left"/>let mut _139: &amp;ReErased state::state::State;<br align="left"/>let mut _140: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _146: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _147: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _148: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _149: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _155: ();<br align="left"/>let _156: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _157: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _158: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _159: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _160: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _161: &amp;ReErased u16;<br align="left"/>let _162: &amp;ReErased u16;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _168: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _169: &amp;ReErased std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _170: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _171: bool;<br align="left"/>let mut _172: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _173: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _174: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _175: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _176: ();<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _178: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _179: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _180: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _181: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _182: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _183: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _184: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _185: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _186: i64;<br align="left"/>let mut _187: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _188: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _189: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _190: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _191: &amp;ReErased state::state::State;<br align="left"/>let _192: &amp;ReErased state::state::State;<br align="left"/>let mut _193: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _194: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _195: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _196: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _197: isize;<br align="left"/>let _198: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _199: !;<br align="left"/>let mut _200: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _201: ();<br align="left"/>let _202: ();<br align="left"/>let mut _203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _204: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _205: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _210: ();<br align="left"/>let _211: ();<br align="left"/>let mut _212: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _213: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _214: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _215: isize;<br align="left"/>let _216: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _219: ();<br align="left"/>let _220: i64;<br align="left"/>let mut _221: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _222: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _223: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _224: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _225: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _226: u64;<br align="left"/>let mut _227: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _228: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _229: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _230: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _231: isize;<br align="left"/>let _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _233: !;<br align="left"/>let mut _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _235: i64;<br align="left"/>let _236: u64;<br align="left"/>let mut _237: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _238: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _239: u16;<br align="left"/>let mut _240: &amp;ReErased mut state::user::User;<br align="left"/>let mut _241: &amp;ReErased mut state::user::User;<br align="left"/>let mut _242: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _243: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _244: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _245: &amp;ReErased mut state::user::User;<br align="left"/>let mut _246: &amp;ReErased mut state::user::User;<br align="left"/>let mut _247: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _248: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _249: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _250: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _251: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _252: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _253: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _254: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _255: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _256: i64;<br align="left"/>let mut _257: u64;<br align="left"/>let mut _258: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _259: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _260: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _261: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _262: isize;<br align="left"/>let _263: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _264: !;<br align="left"/>let mut _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _266: u64;<br align="left"/>let _267: ();<br align="left"/>let mut _268: bool;<br align="left"/>let mut _269: u64;<br align="left"/>let _270: ();<br align="left"/>let mut _271: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _272: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _273: bool;<br align="left"/>let mut _274: u64;<br align="left"/>let mut _275: u64;<br align="left"/>let mut _276: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _277: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _278: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _279: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _280: ();<br align="left"/>let _281: error::ErrorCode;<br align="left"/>let _282: ();<br align="left"/>let mut _283: &amp;ReErased str;<br align="left"/>let _284: &amp;ReErased str;<br align="left"/>let mut _285: &amp;ReErased std::string::String;<br align="left"/>let _286: &amp;ReErased std::string::String;<br align="left"/>let _287: std::string::String;<br align="left"/>let _288: std::string::String;<br align="left"/>let mut _289: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _290: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _291: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _292: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _293: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _294: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _295: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _296: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _297: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _298: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _299: &amp;ReErased error::ErrorCode;<br align="left"/>let _300: &amp;ReErased error::ErrorCode;<br align="left"/>let _301: ();<br align="left"/>let mut _302: &amp;ReErased str;<br align="left"/>let _303: &amp;ReErased str;<br align="left"/>let mut _304: &amp;ReErased std::string::String;<br align="left"/>let _305: &amp;ReErased std::string::String;<br align="left"/>let _306: std::string::String;<br align="left"/>let _307: std::string::String;<br align="left"/>let mut _308: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _309: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _310: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _311: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _312: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _313: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _314: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _315: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _316: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _317: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _318: &amp;ReErased u64;<br align="left"/>let _319: &amp;ReErased u64;<br align="left"/>let mut _320: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _321: &amp;ReErased u64;<br align="left"/>let _322: &amp;ReErased u64;<br align="left"/>let _323: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _324: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _325: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _326: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _327: error::ErrorCode;<br align="left"/>let mut _328: isize;<br align="left"/>let _329: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _330: !;<br align="left"/>let mut _331: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _332: ();<br align="left"/>let _333: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _334: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _335: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _336: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _337: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _338: &amp;ReErased u16;<br align="left"/>let _339: &amp;ReErased u16;<br align="left"/>let mut _340: isize;<br align="left"/>let _341: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _342: !;<br align="left"/>let mut _343: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _344: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _345: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _346: &amp;ReErased std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _347: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _348: bool;<br align="left"/>let mut _349: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _350: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _351: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _352: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let _353: ();<br align="left"/>let mut _354: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _355: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _356: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _357: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _358: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _359: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _360: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _361: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _362: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _363: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _364: u8;<br align="left"/>let mut _365: &amp;ReErased state::state::State;<br align="left"/>let mut _366: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _367: u64;<br align="left"/>let mut _368: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _369: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _370: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _371: isize;<br align="left"/>let _372: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _373: !;<br align="left"/>let mut _374: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _375: ();<br align="left"/>let _376: ();<br align="left"/>let mut _377: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _378: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _379: bool;<br align="left"/>let mut _380: u64;<br align="left"/>let mut _381: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _382: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _383: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _384: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _385: ();<br align="left"/>let _386: error::ErrorCode;<br align="left"/>let _387: ();<br align="left"/>let mut _388: &amp;ReErased str;<br align="left"/>let _389: &amp;ReErased str;<br align="left"/>let mut _390: &amp;ReErased std::string::String;<br align="left"/>let _391: &amp;ReErased std::string::String;<br align="left"/>let _392: std::string::String;<br align="left"/>let _393: std::string::String;<br align="left"/>let mut _394: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _395: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _396: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _397: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _398: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _399: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _400: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _401: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _402: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _403: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _404: &amp;ReErased error::ErrorCode;<br align="left"/>let _405: &amp;ReErased error::ErrorCode;<br align="left"/>let _406: ();<br align="left"/>let mut _407: &amp;ReErased str;<br align="left"/>let _408: &amp;ReErased str;<br align="left"/>let mut _409: error::ErrorCode;<br align="left"/>let mut _410: isize;<br align="left"/>let _411: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _412: !;<br align="left"/>let mut _413: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _414: ();<br align="left"/>let _415: ();<br align="left"/>let _416: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _417: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _418: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _419: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _420: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _421: &amp;ReErased u16;<br align="left"/>let _422: &amp;ReErased u16;<br align="left"/>let mut _423: isize;<br align="left"/>let _424: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _425: !;<br align="left"/>let mut _426: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _427: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _428: ();<br align="left"/>let mut _429: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _430: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _431: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _432: isize;<br align="left"/>let _433: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _434: !;<br align="left"/>let mut _435: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _436: ();<br align="left"/>let _437: i64;<br align="left"/>let mut _438: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _439: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _440: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _441: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _442: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _443: u64;<br align="left"/>let mut _444: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _445: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _446: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _447: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _448: isize;<br align="left"/>let _449: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _450: !;<br align="left"/>let mut _451: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _452: i64;<br align="left"/>let mut _453: ();<br align="left"/>let mut _454: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _455: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _456: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _457: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _458: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _459: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _460: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _461: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _462: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _463: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _464: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _465: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _466: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _467: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _468: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _469: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _470: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _471: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _472: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _473: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _474: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _475: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _476: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _477: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _478: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _479: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _480: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _481: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _482: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _483: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _484: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _485: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _486: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _487: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _488: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _489: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _490: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _491: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _492: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _493: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _494: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _495: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _496: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _497: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _498: &amp;ReErased mut instructions::keeper::ResolveBankruptcy&lt;ReErased&gt;;<br align="left"/>let mut _499: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _500: isize;<br align="left"/>let mut _501: isize;<br align="left"/>let mut _502: isize;<br align="left"/>let mut _503: isize;<br align="left"/>let mut _504: isize;<br align="left"/>let mut _505: isize;<br align="left"/>let mut _506: isize;<br align="left"/>let mut _507: isize;<br align="left"/>let mut _508: isize;<br align="left"/>let mut _509: isize;<br align="left"/>let mut _510: isize;<br align="left"/>let mut _511: isize;<br align="left"/>let mut _512: isize;<br align="left"/>let mut _513: isize;<br align="left"/>let mut _514: isize;<br align="left"/>let mut _515: isize;<br align="left"/>let mut _516: isize;<br align="left"/>let mut _517: isize;<br align="left"/>let mut _518: isize;<br align="left"/>let mut _519: isize;<br align="left"/>let mut _520: isize;<br align="left"/>let mut _521: isize;<br align="left"/>let mut _522: isize;<br align="left"/>let mut _523: isize;<br align="left"/>let mut _524: isize;<br align="left"/>let mut _525: isize;<br align="left"/>let mut _526: isize;<br align="left"/>let mut _527: isize;<br align="left"/>let mut _528: isize;<br align="left"/>let mut _529: isize;<br align="left"/>let mut _530: isize;<br align="left"/>let mut _531: isize;<br align="left"/>let mut _532: isize;<br align="left"/>let mut _533: isize;<br align="left"/>let mut _534: isize;<br align="left"/>let mut _535: isize;<br align="left"/>let mut _536: isize;<br align="left"/>let mut _537: isize;<br align="left"/>let mut _538: isize;<br align="left"/>let mut _539: isize;<br align="left"/>let mut _540: isize;<br align="left"/>let mut _541: isize;<br align="left"/>let mut _542: isize;<br align="left"/>let mut _543: isize;<br align="left"/>let mut _544: isize;<br align="left"/>let mut _545: isize;<br align="left"/>let mut _546: isize;<br align="left"/>let mut _547: isize;<br align="left"/>let mut _548: isize;<br align="left"/>let mut _549: isize;<br align="left"/>let mut _550: isize;<br align="left"/>let mut _551: isize;<br align="left"/>let mut _552: isize;<br align="left"/>let mut _553: isize;<br align="left"/>let mut _554: isize;<br align="left"/>let mut _555: isize;<br align="left"/>let mut _556: isize;<br align="left"/>let mut _557: isize;<br align="left"/>let mut _558: isize;<br align="left"/>let mut _559: isize;<br align="left"/>let mut _560: isize;<br align="left"/>let mut _561: isize;<br align="left"/>let mut _562: isize;<br align="left"/>let mut _563: isize;<br align="left"/>let mut _564: isize;<br align="left"/>let mut _565: isize;<br align="left"/>let mut _566: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _567: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _568: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _569: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _570: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _571: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _572: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _573: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _574: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _575: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _576: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _577: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _578: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _579: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _580: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _581: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _582: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug quote_spot_market_index =&gt; _2;<br align="left"/>debug market_index =&gt; _3;<br align="left"/>debug residual =&gt; _10;<br align="left"/>debug val =&gt; _13;<br align="left"/>debug clock =&gt; _14;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug now =&gt; _22;<br align="left"/>debug user_key =&gt; _23;<br align="left"/>debug liquidator_key =&gt; _25;<br align="left"/>debug error_code =&gt; _34;<br align="left"/>debug res =&gt; _41;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug error_code =&gt; _66;<br align="left"/>debug res =&gt; _73;<br align="left"/>debug residual =&gt; _88;<br align="left"/>debug val =&gt; _91;<br align="left"/>debug user =&gt; _92;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug liquidator =&gt; _104;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug state =&gt; _116;<br align="left"/>debug remaining_accounts_iter =&gt; _117;<br align="left"/>debug perp_market_map =&gt; _121;<br align="left"/>debug spot_market_map =&gt; _122;<br align="left"/>debug oracle_map =&gt; _123;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug mint =&gt; _146;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug spot_market =&gt; _156;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug transfer_hook_remaining_accounts_iter =&gt; _168;<br align="left"/>debug remaining_accounts =&gt; _170;<br align="left"/>debug residual =&gt; _198;<br align="left"/>debug val =&gt; _201;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug residual =&gt; _216;<br align="left"/>debug val =&gt; _219;<br align="left"/>debug residual =&gt; _232;<br align="left"/>debug val =&gt; _235;<br align="left"/>debug pay_from_insurance =&gt; _236;<br align="left"/>debug residual =&gt; _263;<br align="left"/>debug val =&gt; _266;<br align="left"/>debug error_code =&gt; _281;<br align="left"/>debug res =&gt; _288;<br align="left"/>debug res =&gt; _307;<br align="left"/>debug residual =&gt; _329;<br align="left"/>debug val =&gt; _332;<br align="left"/>debug spot_market =&gt; _333;<br align="left"/>debug residual =&gt; _341;<br align="left"/>debug val =&gt; _344;<br align="left"/>debug transfer_hook_remaining_accounts_iter =&gt; _345;<br align="left"/>debug remaining_accounts =&gt; _347;<br align="left"/>debug residual =&gt; _372;<br align="left"/>debug val =&gt; _375;<br align="left"/>debug error_code =&gt; _386;<br align="left"/>debug res =&gt; _393;<br align="left"/>debug residual =&gt; _411;<br align="left"/>debug val =&gt; _414;<br align="left"/>debug spot_market =&gt; _416;<br align="left"/>debug residual =&gt; _424;<br align="left"/>debug val =&gt; _427;<br align="left"/>debug residual =&gt; _433;<br align="left"/>debug val =&gt; _436;<br align="left"/>debug residual =&gt; _449;<br align="left"/>debug val =&gt; _452;<br align="left"/>>;
    bb0__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_459 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_8 = &amp;((*_459).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_460 = deref_copy (*_8)<br/>_566 = (((_460.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_7 = &amp;(*_566)<br/></td></tr><tr><td align="left">_6 = constraints::withdraw_not_paused(move _7)</td></tr></table>>];
    bb1__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb2__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_9 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb3__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_5 as Continue).0: ())<br/>_4 = _13<br/>StorageDead(_13)<br/>_500 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/></td></tr><tr><td align="left">_16 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>_10 = move ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_12)<br/>_12 = move _10<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _12)</td></tr></table>>];
    bb6__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_550 = discriminant(_5)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb8__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_17 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = move ((_15 as Continue).0: anchor_lang::prelude::Clock)<br/>_14 = move _21<br/>StorageDead(_21)<br/>_502 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_22)<br/>_22 = (_14.4: i64)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_461 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_24 = &amp;((*_461).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _24)</td></tr></table>>];
    bb10__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = move ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_20)<br/>_20 = move _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>_548 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_462 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_26 = &amp;((*_462).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _26)</td></tr></table>>];
    bb13__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;_23<br/>StorageLive(_32)<br/>_32 = &amp;_25<br/></td></tr><tr><td align="left">_30 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _31, move _32)</td></tr></table>>];
    bb14__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb15__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_33)<br/>_33 = ()<br/>_29 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _33)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageLive(_34)<br/>_34 = error::ErrorCode::UserCantLiquidateThemself<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_458 = const _<br/>_45 = &amp;(*_458)<br/>_44 = &amp;(*_45)<br/>_43 = move _44 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_44)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_34<br/>_52 = &amp;(*_53)<br/></td></tr><tr><td align="left">_51 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _52)</td></tr></table>>];
    bb17__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_50 = [move _51]<br/>StorageDead(_51)<br/>_49 = &amp;_50<br/>_48 = &amp;(*_49)<br/>_47 = move _48 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_42 = Arguments::&lt;'_&gt;::new_v1(move _43, move _47)</td></tr></table>>];
    bb18__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = format(move _42)</td></tr></table>>];
    bb19__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_45)<br/>_40 = move _41<br/>StorageDead(_41)<br/>_39 = &amp;_40<br/>_38 = &amp;(*_39)<br/></td></tr><tr><td align="left">_37 = &lt;String as Deref&gt;::deref(move _38)</td></tr></table>>];
    bb20__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_36 = &amp;(*_37)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_35 = solana_program::log::sol_log(move _36)</td></tr></table>>];
    bb21__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb22__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_35)<br/>StorageLive(_54)<br/>_54 = _34<br/>_29 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _54)<br/>StorageDead(_54)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb24__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_55 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb25__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_28 as Continue).0: ())<br/>_27 = _59<br/>StorageDead(_59)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _2<br/>_63 = Eq(move _64, const _)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb26__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb27__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = ()<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _65)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageLive(_66)<br/>_66 = error::ErrorCode::InvalidSpotMarketAccount<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>_457 = const _<br/>_77 = &amp;(*_457)<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = &amp;_66<br/>_84 = &amp;(*_85)<br/></td></tr><tr><td align="left">_83 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _84)</td></tr></table>>];
    bb30__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = [move _83]<br/>StorageDead(_83)<br/>_81 = &amp;_82<br/>_80 = &amp;(*_81)<br/>_79 = move _80 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_74 = Arguments::&lt;'_&gt;::new_v1(move _75, move _79)</td></tr></table>>];
    bb31__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = format(move _74)</td></tr></table>>];
    bb32__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>_72 = move _73<br/>StorageDead(_73)<br/>_71 = &amp;_72<br/>_70 = &amp;(*_71)<br/></td></tr><tr><td align="left">_69 = &lt;String as Deref&gt;::deref(move _70)</td></tr></table>>];
    bb33__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_68 = &amp;(*_69)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_67 = solana_program::log::sol_log(move _68)</td></tr></table>>];
    bb34__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb35__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageLive(_86)<br/>_86 = _66<br/>_62 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _86)<br/>StorageDead(_86)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/></td></tr><tr><td align="left">_61 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _62)</td></tr></table>>];
    bb37__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_87 = discriminant(_61)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb38__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = ((_61 as Continue).0: ())<br/>_60 = _91<br/>StorageDead(_91)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_463 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_97 = &amp;((*_463).4: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_96 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _97)</td></tr></table>>];
    bb39__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_61 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_90)<br/>_90 = _88<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _90)</td></tr></table>>];
    bb40__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageLive(_98)<br/>_98 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_95 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _96, move _98)</td></tr></table>>];
    bb42__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb43__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_99 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb44__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = move ((_94 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_93 = move _103<br/>StorageDead(_103)<br/>_92 = &amp;mut _93<br/>_506 = discriminant(_94)<br/>StorageDead(_94)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_464 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_109 = &amp;((*_464).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_108 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _109)</td></tr></table>>];
    bb45__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb46__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>_504 = discriminant(_94)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_110)<br/>_110 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_107 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _108, move _110)</td></tr></table>>];
    bb48__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb49__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>_111 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb50__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = move ((_106 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_105 = move _115<br/>StorageDead(_115)<br/>_104 = &amp;mut _105<br/>_510 = discriminant(_106)<br/>StorageDead(_106)<br/>StorageLive(_116)<br/>_465 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_116 = &amp;((*_465).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_466 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_120 = &amp;(*_466)<br/></td></tr><tr><td align="left">_119 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _120)</td></tr></table>>];
    bb51__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb52__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>_508 = discriminant(_106)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _119)</td></tr></table>>];
    bb54__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_117 = &amp;mut _118<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;mut (*_117)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_131 = _3<br/></td></tr><tr><td align="left">_130 = get_writable_perp_market_set(move _131)</td></tr></table>>];
    bb55__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_129 = &amp;_130<br/>_128 = &amp;(*_129)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = _2<br/></td></tr><tr><td align="left">_134 = get_writable_spot_market_set(move _135)</td></tr></table>>];
    bb56__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_133 = &amp;_134<br/>_132 = &amp;(*_133)<br/>StorageLive(_136)<br/>_136 = (_14.0: u64)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_467 = deref_copy (*_116)<br/>_567 = (((_467.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_140 = &amp;(*_567)<br/></td></tr><tr><td align="left">_139 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _140)</td></tr></table>>];
    bb57__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>_138 = ((*_139).7: state::state::OracleGuardRails)<br/>_137 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _138)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_126 = load_maps(move _127, move _128, move _132, move _136, move _137)</td></tr></table>>];
    bb58__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_132)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _126)</td></tr></table>>];
    bb59__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_141 = discriminant(_125)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb60__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = move ((_125 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_124 = move _145<br/>StorageDead(_145)<br/>StorageLive(_121)<br/>_121 = move (_124.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_122)<br/>_122 = move (_124.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_123)<br/>_123 = move (_124.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_514 = discriminant(_125)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">drop(_134)</td></tr></table>>];
    bb61__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_125 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb62__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/>_512 = discriminant(_125)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">drop(_134)</td></tr></table>>];
    bb63__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb64__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;mut (*_117)<br/></td></tr><tr><td align="left">_148 = get_token_mint(move _149)</td></tr></table>>];
    bb65__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/></td></tr><tr><td align="left">_147 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _148)</td></tr></table>>];
    bb66__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_150 = discriminant(_147)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb67__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = move ((_147 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_146 = move _154<br/>StorageDead(_154)<br/>StorageDead(_147)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_160 = &amp;_122<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_2<br/>_161 = &amp;(*_162)<br/></td></tr><tr><td align="left">_159 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _160, move _161)</td></tr></table>>];
    bb68__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_147 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb69__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/></td></tr><tr><td align="left">_158 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _159)</td></tr></table>>];
    bb71__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>_163 = discriminant(_158)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb72__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = move ((_158 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_157 = move _167<br/>StorageDead(_167)<br/>_156 = &amp;mut _157<br/>_518 = discriminant(_158)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;(*_117)<br/></td></tr><tr><td align="left">_168 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Clone&gt;::clone(move _169)</td></tr></table>>];
    bb73__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_158 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb74__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/>_516 = discriminant(_158)<br/>StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;(*_156)<br/></td></tr><tr><td align="left">_173 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _174)</td></tr></table>>];
    bb76__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_172 = &amp;(*_173)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">_171 = SpotMarket::has_transfer_hook(move _172)</td></tr></table>>];
    bb77__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb78__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_175)<br/>_175 = &amp;mut _168<br/>_170 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _175)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/>_170 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_468 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_180 = &amp;((*_468).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_469 = deref_copy (*_180)<br/>_568 = (((_469.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_179 = &amp;(*_568)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_470 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_182 = &amp;((*_470).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_471 = deref_copy (*_182)<br/>_569 = (((_471.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_181 = &amp;(*_569)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>_185 = &amp;mut (*_156)<br/></td></tr><tr><td align="left">_184 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _185)</td></tr></table>>];
    bb81__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">_183 = &amp;mut (*_184)<br/>StorageDead(_185)<br/>StorageLive(_186)<br/>_186 = _22<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_472 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_188 = &amp;((*_472).9: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_187 = &amp;(*_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_473 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_190 = &amp;((*_473).8: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_189 = &amp;(*_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_474 = deref_copy (*_116)<br/>_570 = (((_474.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_193 = &amp;(*_570)<br/></td></tr><tr><td align="left">_192 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _193)</td></tr></table>>];
    bb82__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">_191 = &amp;(*_192)<br/>StorageDead(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;_146<br/>_194 = &amp;(*_195)<br/>StorageLive(_196)<br/>_196 = move _170<br/></td></tr><tr><td align="left">_178 = attempt_settle_revenue_to_insurance_fund(move _179, move _181, move _183, move _186, move _187, move _189, move _191, move _194, move _196)</td></tr></table>>];
    bb83__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_191)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/>StorageDead(_186)<br/>StorageDead(_183)<br/>StorageDead(_181)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb84__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_197 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _197)</td></tr></table>>];
    bb85__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_201)<br/>_201 = ((_177 as Continue).0: ())<br/>_176 = _201<br/>StorageDead(_201)<br/>_520 = discriminant(_177)<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_475 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_476 = deref_copy ((*_475).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_571 = (((_476.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_205 = &amp;mut (*_571)<br/></td></tr><tr><td align="left">_204 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _205)</td></tr></table>>];
    bb86__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = move ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_200)<br/>_200 = move _198<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _200)</td></tr></table>>];
    bb87__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_198)<br/>_546 = discriminant(_177)<br/>StorageDead(_195)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_188)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _204)</td></tr></table>>];
    bb89__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_206 = discriminant(_203)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb90__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_203 as Continue).0: ())<br/>_202 = _210<br/>StorageDead(_210)<br/>_522 = discriminant(_203)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_477 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_478 = deref_copy ((*_477).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_572 = (((_478.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_214 = &amp;mut (*_572)<br/></td></tr><tr><td align="left">_213 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _214)</td></tr></table>>];
    bb91__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = move ((_203 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_209)<br/>_209 = move _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb92__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>_544 = discriminant(_203)<br/>StorageDead(_203)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/></td></tr><tr><td align="left">_212 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _213)</td></tr></table>>];
    bb94__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_215 = discriminant(_212)<br/></td></tr><tr><td align="left">switchInt(move _215)</td></tr></table>>];
    bb95__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_212 as Continue).0: ())<br/>_211 = _219<br/>StorageDead(_219)<br/>_524 = discriminant(_212)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>_225 = &amp;(*_156)<br/></td></tr><tr><td align="left">_224 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _225)</td></tr></table>>];
    bb96__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = move ((_212 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_218)<br/>_218 = move _216<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _218)</td></tr></table>>];
    bb97__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/>_542 = discriminant(_212)<br/>StorageDead(_212)<br/>StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_223 = &amp;(*_224)<br/>StorageDead(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_479 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_480 = deref_copy ((*_479).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_573 = (((_480.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_230 = &amp;(*_573)<br/></td></tr><tr><td align="left">_229 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _230)</td></tr></table>>];
    bb99__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_228 = &amp;(*_229)<br/></td></tr><tr><td align="left">_227 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _228)</td></tr></table>>];
    bb100__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_228)<br/>_226 = ((*_227).2: u64)<br/></td></tr><tr><td align="left">_222 = validate_spot_market_vault_amount(move _223, move _226)</td></tr></table>>];
    bb101__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_221 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _222)</td></tr></table>>];
    bb102__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>_231 = discriminant(_221)<br/></td></tr><tr><td align="left">switchInt(move _231)</td></tr></table>>];
    bb103__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageLive(_235)<br/>_235 = ((_221 as Continue).0: i64)<br/>_220 = _235<br/>StorageDead(_235)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>_155 = const ()<br/>StorageDead(_170)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">drop(_157)</td></tr></table>>];
    bb104__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>_232 = ((_221 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_234)<br/>_234 = _232<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _234)</td></tr></table>>];
    bb105__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = _3<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>_242 = &amp;mut (*_92)<br/></td></tr><tr><td align="left">_241 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _242)</td></tr></table>>];
    bb107__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_240 = &amp;mut (*_241)<br/>StorageDead(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = &amp;_23<br/>_243 = &amp;(*_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = &amp;mut (*_104)<br/></td></tr><tr><td align="left">_246 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _247)</td></tr></table>>];
    bb108__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_245 = &amp;mut (*_246)<br/>StorageDead(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>_249 = &amp;_25<br/>_248 = &amp;(*_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>_251 = &amp;_121<br/>_250 = &amp;(*_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;_122<br/>_252 = &amp;(*_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>_255 = &amp;mut _123<br/>_254 = &amp;mut (*_255)<br/>StorageLive(_256)<br/>_256 = _22<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_481 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_482 = deref_copy ((*_481).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_574 = (((_482.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_261 = &amp;(*_574)<br/></td></tr><tr><td align="left">_260 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _261)</td></tr></table>>];
    bb109__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">_259 = &amp;(*_260)<br/></td></tr><tr><td align="left">_258 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _259)</td></tr></table>>];
    bb110__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_261)<br/>StorageDead(_259)<br/>_257 = ((*_258).2: u64)<br/></td></tr><tr><td align="left">_238 = controller::liquidation::resolve_perp_bankruptcy(move _239, move _240, move _243, move _245, move _248, move _250, move _252, move _254, move _256, move _257)</td></tr></table>>];
    bb111__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_248)<br/>StorageDead(_245)<br/>StorageDead(_243)<br/>StorageDead(_240)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _238)</td></tr></table>>];
    bb112__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_262 = discriminant(_237)<br/></td></tr><tr><td align="left">switchInt(move _262)</td></tr></table>>];
    bb113__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_266)<br/>_266 = ((_237 as Continue).0: u64)<br/>_236 = _266<br/>StorageDead(_266)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = _236<br/>_268 = Gt(move _269, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _268)</td></tr></table>>];
    bb114__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_263)<br/>_263 = ((_237 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_265)<br/>_265 = _263<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _265)</td></tr></table>>];
    bb115__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_263)<br/>StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_249)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>_274 = _236<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>_483 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_484 = deref_copy ((*_483).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_575 = (((_484.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_279 = &amp;(*_575)<br/></td></tr><tr><td align="left">_278 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _279)</td></tr></table>>];
    bb117__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>_267 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_277 = &amp;(*_278)<br/></td></tr><tr><td align="left">_276 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _277)</td></tr></table>>];
    bb119__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_279)<br/>StorageDead(_277)<br/>_275 = ((*_276).2: u64)<br/>_273 = Lt(move _274, move _275)<br/></td></tr><tr><td align="left">switchInt(move _273)</td></tr></table>>];
    bb120__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_275)<br/>StorageDead(_274)<br/>StorageLive(_280)<br/>_280 = ()<br/>_272 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _280)<br/>StorageDead(_280)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_278)<br/>StorageDead(_276)<br/>StorageDead(_275)<br/>StorageDead(_274)<br/>StorageLive(_281)<br/>_281 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>_456 = const _<br/>_292 = &amp;(*_456)<br/>_291 = &amp;(*_292)<br/>_290 = move _291 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_291)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>_300 = &amp;_281<br/>_299 = &amp;(*_300)<br/></td></tr><tr><td align="left">_298 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _299)</td></tr></table>>];
    bb122__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>_297 = [move _298]<br/>StorageDead(_298)<br/>_296 = &amp;_297<br/>_295 = &amp;(*_296)<br/>_294 = move _295 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">_289 = Arguments::&lt;'_&gt;::new_v1(move _290, move _294)</td></tr></table>>];
    bb123__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">_288 = format(move _289)</td></tr></table>>];
    bb124__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_300)<br/>StorageDead(_297)<br/>StorageDead(_296)<br/>StorageDead(_292)<br/>_287 = move _288<br/>StorageDead(_288)<br/>_286 = &amp;_287<br/>_285 = &amp;(*_286)<br/></td></tr><tr><td align="left">_284 = &lt;String as Deref&gt;::deref(move _285)</td></tr></table>>];
    bb125__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">_283 = &amp;(*_284)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">_282 = solana_program::log::sol_log(move _283)</td></tr></table>>];
    bb126__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/></td></tr><tr><td align="left">drop(_287)</td></tr></table>>];
    bb127__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_286)<br/>StorageDead(_284)<br/>StorageDead(_282)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>_455 = const _<br/>_311 = &amp;(*_455)<br/>_310 = &amp;(*_311)<br/>_309 = move _310 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_310)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = &amp;_236<br/>_318 = &amp;(*_319)<br/></td></tr><tr><td align="left">_317 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _318)</td></tr></table>>];
    bb128__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>_485 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_486 = deref_copy ((*_485).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_576 = (((_486.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_326 = &amp;(*_576)<br/></td></tr><tr><td align="left">_325 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _326)</td></tr></table>>];
    bb129__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_324 = &amp;(*_325)<br/></td></tr><tr><td align="left">_323 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _324)</td></tr></table>>];
    bb130__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_324)<br/>_322 = &amp;((*_323).2: u64)<br/>_321 = &amp;(*_322)<br/></td></tr><tr><td align="left">_320 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u64&gt;(move _321)</td></tr></table>>];
    bb131__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>_316 = [move _317, move _320]<br/>StorageDead(_320)<br/>StorageDead(_317)<br/>_315 = &amp;_316<br/>_314 = &amp;(*_315)<br/>_313 = move _314 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">_308 = Arguments::&lt;'_&gt;::new_v1(move _309, move _313)</td></tr></table>>];
    bb132__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">_307 = format(move _308)</td></tr></table>>];
    bb133__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>StorageDead(_325)<br/>StorageDead(_323)<br/>StorageDead(_322)<br/>StorageDead(_319)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageDead(_311)<br/>_306 = move _307<br/>StorageDead(_307)<br/>_305 = &amp;_306<br/>_304 = &amp;(*_305)<br/></td></tr><tr><td align="left">_303 = &lt;String as Deref&gt;::deref(move _304)</td></tr></table>>];
    bb134__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">_302 = &amp;(*_303)<br/>StorageDead(_304)<br/></td></tr><tr><td align="left">_301 = solana_program::log::sol_log(move _302)</td></tr></table>>];
    bb135__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_302)<br/></td></tr><tr><td align="left">drop(_306)</td></tr></table>>];
    bb136__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_306)<br/>StorageDead(_305)<br/>StorageDead(_303)<br/>StorageDead(_301)<br/>StorageLive(_327)<br/>_327 = _281<br/>_272 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _327)<br/>StorageDead(_327)<br/>StorageDead(_281)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/></td></tr><tr><td align="left">_271 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _272)</td></tr></table>>];
    bb138__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>_328 = discriminant(_271)<br/></td></tr><tr><td align="left">switchInt(move _328)</td></tr></table>>];
    bb139__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_332)<br/>_332 = ((_271 as Continue).0: ())<br/>_270 = _332<br/>StorageDead(_332)<br/>StorageDead(_271)<br/>StorageDead(_270)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>_337 = &amp;_122<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = &amp;_2<br/>_338 = &amp;(*_339)<br/></td></tr><tr><td align="left">_336 = SpotMarketMap::&lt;'_&gt;::get_ref(move _337, move _338)</td></tr></table>>];
    bb140__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_329)<br/>_329 = ((_271 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_331)<br/>_331 = _329<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _331)</td></tr></table>>];
    bb141__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/>StorageDead(_329)<br/>StorageDead(_271)<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_337)<br/></td></tr><tr><td align="left">_335 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _336)</td></tr></table>>];
    bb143__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_336)<br/>_340 = discriminant(_335)<br/></td></tr><tr><td align="left">switchInt(move _340)</td></tr></table>>];
    bb144__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageLive(_344)<br/>_344 = move ((_335 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_334 = move _344<br/>StorageDead(_344)<br/>_333 = &amp;_334<br/>_528 = discriminant(_335)<br/>StorageDead(_339)<br/>StorageDead(_335)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>_346 = &amp;(*_117)<br/></td></tr><tr><td align="left">_345 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Clone&gt;::clone(move _346)</td></tr></table>>];
    bb145__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageLive(_341)<br/>_341 = ((_335 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_343)<br/>_343 = _341<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _343)</td></tr></table>>];
    bb146__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>StorageDead(_341)<br/>_526 = discriminant(_335)<br/>StorageDead(_339)<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;(*_333)<br/></td></tr><tr><td align="left">_350 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _351)</td></tr></table>>];
    bb148__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">_349 = &amp;(*_350)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">_348 = SpotMarket::has_transfer_hook(move _349)</td></tr></table>>];
    bb149__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left">switchInt(move _348)</td></tr></table>>];
    bb150__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_349)<br/>StorageLive(_352)<br/>_352 = &amp;mut _345<br/>_347 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _352)<br/>StorageDead(_352)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_349)<br/>_347 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>_487 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_357 = &amp;((*_487).9: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_356 = &amp;(*_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>_488 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_359 = &amp;((*_488).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_489 = deref_copy (*_359)<br/>_577 = (((_489.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_358 = &amp;(*_577)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>_490 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_361 = &amp;((*_490).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_491 = deref_copy (*_361)<br/>_578 = (((_491.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_360 = &amp;(*_578)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>_492 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_363 = &amp;((*_492).8: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_362 = &amp;(*_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_493 = deref_copy (*_116)<br/>_579 = (((_493.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_366 = &amp;(*_579)<br/></td></tr><tr><td align="left">_365 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _366)</td></tr></table>>];
    bb153__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>_364 = ((*_365).15: u8)<br/>StorageLive(_367)<br/>_367 = _236<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = &amp;_146<br/>_368 = &amp;(*_369)<br/>StorageLive(_370)<br/>_370 = move _347<br/></td></tr><tr><td align="left">_355 = send_from_program_vault(move _356, move _358, move _360, move _362, move _364, move _367, move _368, move _370)</td></tr></table>>];
    bb154__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>StorageDead(_368)<br/>StorageDead(_367)<br/>StorageDead(_364)<br/>StorageDead(_362)<br/>StorageDead(_360)<br/>StorageDead(_358)<br/>StorageDead(_356)<br/></td></tr><tr><td align="left">_354 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _355)</td></tr></table>>];
    bb155__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>_371 = discriminant(_354)<br/></td></tr><tr><td align="left">switchInt(move _371)</td></tr></table>>];
    bb156__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageLive(_375)<br/>_375 = ((_354 as Continue).0: ())<br/>_353 = _375<br/>StorageDead(_375)<br/>_530 = discriminant(_354)<br/>StorageDead(_369)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_359)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>_494 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_495 = deref_copy ((*_494).7: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_580 = (((_495.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_384 = &amp;(*_580)<br/></td></tr><tr><td align="left">_383 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _384)</td></tr></table>>];
    bb157__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_372)<br/>_372 = move ((_354 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_374)<br/>_374 = move _372<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _374)</td></tr></table>>];
    bb158__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_374)<br/>StorageDead(_372)<br/>_540 = discriminant(_354)<br/>StorageDead(_369)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_361)<br/>StorageDead(_359)<br/>StorageDead(_357)<br/>StorageDead(_354)<br/>StorageDead(_353)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">_382 = &amp;(*_383)<br/></td></tr><tr><td align="left">_381 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _382)</td></tr></table>>];
    bb160__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_382)<br/>_380 = ((*_381).2: u64)<br/>_379 = Gt(move _380, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _379)</td></tr></table>>];
    bb161__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>StorageLive(_385)<br/>_385 = ()<br/>_378 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _385)<br/>StorageDead(_385)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_380)<br/>StorageLive(_386)<br/>_386 = error::ErrorCode::InvalidIFDetected<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>_454 = const _<br/>_397 = &amp;(*_454)<br/>_396 = &amp;(*_397)<br/>_395 = move _396 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_396)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>_405 = &amp;_386<br/>_404 = &amp;(*_405)<br/></td></tr><tr><td align="left">_403 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _404)</td></tr></table>>];
    bb163__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>_402 = [move _403]<br/>StorageDead(_403)<br/>_401 = &amp;_402<br/>_400 = &amp;(*_401)<br/>_399 = move _400 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">_394 = Arguments::&lt;'_&gt;::new_v1(move _395, move _399)</td></tr></table>>];
    bb164__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_399)<br/>StorageDead(_395)<br/></td></tr><tr><td align="left">_393 = format(move _394)</td></tr></table>>];
    bb165__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_405)<br/>StorageDead(_402)<br/>StorageDead(_401)<br/>StorageDead(_397)<br/>_392 = move _393<br/>StorageDead(_393)<br/>_391 = &amp;_392<br/>_390 = &amp;(*_391)<br/></td></tr><tr><td align="left">_389 = &lt;String as Deref&gt;::deref(move _390)</td></tr></table>>];
    bb166__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">_388 = &amp;(*_389)<br/>StorageDead(_390)<br/></td></tr><tr><td align="left">_387 = solana_program::log::sol_log(move _388)</td></tr></table>>];
    bb167__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/></td></tr><tr><td align="left">drop(_392)</td></tr></table>>];
    bb168__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_392)<br/>StorageDead(_391)<br/>StorageDead(_389)<br/>StorageDead(_387)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_408 = const &quot;insurance_fund_vault.amount must remain &gt; 0&quot;<br/>_407 = &amp;(*_408)<br/></td></tr><tr><td align="left">_406 = solana_program::log::sol_log(move _407)</td></tr></table>>];
    bb169__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_407)<br/>StorageDead(_408)<br/>StorageDead(_406)<br/>StorageLive(_409)<br/>_409 = _386<br/>_378 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _409)<br/>StorageDead(_409)<br/>StorageDead(_386)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/></td></tr><tr><td align="left">_377 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _378)</td></tr></table>>];
    bb171__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>_410 = discriminant(_377)<br/></td></tr><tr><td align="left">switchInt(move _410)</td></tr></table>>];
    bb172__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_414)<br/>_414 = ((_377 as Continue).0: ())<br/>_376 = _414<br/>StorageDead(_414)<br/>StorageDead(_377)<br/>StorageDead(_376)<br/>_267 = const ()<br/>StorageDead(_347)<br/>StorageDead(_345)<br/></td></tr><tr><td align="left">drop(_334)</td></tr></table>>];
    bb173__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_411)<br/>_411 = ((_377 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_413)<br/>_413 = _411<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _413)</td></tr></table>>];
    bb174__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>StorageDead(_411)<br/>StorageDead(_377)<br/>StorageDead(_376)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb175__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_333)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_267)<br/>StorageLive(_415)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>_420 = &amp;_122<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>_422 = &amp;_2<br/>_421 = &amp;(*_422)<br/></td></tr><tr><td align="left">_419 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _420, move _421)</td></tr></table>>];
    bb177__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_421)<br/>StorageDead(_420)<br/></td></tr><tr><td align="left">_418 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _419)</td></tr></table>>];
    bb178__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>_423 = discriminant(_418)<br/></td></tr><tr><td align="left">switchInt(move _423)</td></tr></table>>];
    bb179__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_427)<br/>_427 = move ((_418 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_417 = move _427<br/>StorageDead(_427)<br/>_416 = &amp;mut _417<br/>_534 = discriminant(_418)<br/>StorageDead(_422)<br/>StorageDead(_418)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>_496 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_497 = deref_copy ((*_496).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_581 = (((_497.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_431 = &amp;mut (*_581)<br/></td></tr><tr><td align="left">_430 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _431)</td></tr></table>>];
    bb180__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageLive(_424)<br/>_424 = ((_418 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_426)<br/>_426 = _424<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _426)</td></tr></table>>];
    bb181__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/>StorageDead(_424)<br/>_532 = discriminant(_418)<br/>StorageDead(_422)<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/></td></tr><tr><td align="left">_429 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _430)</td></tr></table>>];
    bb183__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>_432 = discriminant(_429)<br/></td></tr><tr><td align="left">switchInt(move _432)</td></tr></table>>];
    bb184__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_436)<br/>_436 = ((_429 as Continue).0: ())<br/>_428 = _436<br/>StorageDead(_436)<br/>_536 = discriminant(_429)<br/>StorageDead(_429)<br/>StorageDead(_428)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>_442 = &amp;(*_416)<br/></td></tr><tr><td align="left">_441 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _442)</td></tr></table>>];
    bb185__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageLive(_433)<br/>_433 = move ((_429 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_435)<br/>_435 = move _433<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _435)</td></tr></table>>];
    bb186__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_433)<br/>_538 = discriminant(_429)<br/>StorageDead(_429)<br/>StorageDead(_428)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">_440 = &amp;(*_441)<br/>StorageDead(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>_498 = deref_copy (_1.1: &amp;mut instructions::keeper::ResolveBankruptcy&lt;'_&gt;)<br/>_499 = deref_copy ((*_498).6: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_582 = (((_499.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_447 = &amp;(*_582)<br/></td></tr><tr><td align="left">_446 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _447)</td></tr></table>>];
    bb188__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">_445 = &amp;(*_446)<br/></td></tr><tr><td align="left">_444 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _445)</td></tr></table>>];
    bb189__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_447)<br/>StorageDead(_445)<br/>_443 = ((*_444).2: u64)<br/></td></tr><tr><td align="left">_439 = validate_spot_market_vault_amount(move _440, move _443)</td></tr></table>>];
    bb190__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>StorageDead(_440)<br/></td></tr><tr><td align="left">_438 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _439)</td></tr></table>>];
    bb191__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>_448 = discriminant(_438)<br/></td></tr><tr><td align="left">switchInt(move _448)</td></tr></table>>];
    bb192__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageLive(_452)<br/>_452 = ((_438 as Continue).0: i64)<br/>_437 = _452<br/>StorageDead(_452)<br/>StorageDead(_446)<br/>StorageDead(_444)<br/>StorageDead(_441)<br/>StorageDead(_438)<br/>StorageDead(_437)<br/>_415 = const ()<br/></td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb193__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageLive(_449)<br/>_449 = ((_438 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_451)<br/>_451 = _449<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _451)</td></tr></table>>];
    bb194__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_451)<br/>StorageDead(_449)<br/>StorageDead(_446)<br/>StorageDead(_444)<br/>StorageDead(_441)<br/>StorageDead(_438)<br/>StorageDead(_437)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageLive(_453)<br/>_453 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _453)<br/>StorageDead(_453)<br/>StorageDead(_236)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb196__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">drop(_122)</td></tr></table>>];
    bb197__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb198__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_105)</td></tr></table>>];
    bb199__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb200__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb201__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb202__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb203__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageDead(_345)<br/></td></tr><tr><td align="left">drop(_334)</td></tr></table>>];
    bb204__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_333)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>StorageDead(_267)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">drop(_157)</td></tr></table>>];
    bb208__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb209__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/></td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb210__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">drop(_122)</td></tr></table>>];
    bb211__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/></td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb212__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb214__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb215__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_105)</td></tr></table>>];
    bb216__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb217__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left">return</td></tr></table>>];
    bb221__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">221 (cleanup)</td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb222__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">222 (cleanup)</td></tr><tr><td align="left">drop(_392)</td></tr></table>>];
    bb223__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">223 (cleanup)</td></tr><tr><td align="left">drop(_334)</td></tr></table>>];
    bb224__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">224 (cleanup)</td></tr><tr><td align="left">drop(_306)</td></tr></table>>];
    bb225__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">225 (cleanup)</td></tr><tr><td align="left">drop(_287)</td></tr></table>>];
    bb226__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">226 (cleanup)</td></tr><tr><td align="left">drop(_157)</td></tr></table>>];
    bb227__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">227 (cleanup)</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb228__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">228 (cleanup)</td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb229__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">229 (cleanup)</td></tr><tr><td align="left">drop(_122)</td></tr></table>>];
    bb230__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">230 (cleanup)</td></tr><tr><td align="left">drop(_121)</td></tr></table>>];
    bb231__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">231 (cleanup)</td></tr><tr><td align="left">drop(_134)</td></tr></table>>];
    bb232__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">232 (cleanup)</td></tr><tr><td align="left">drop(_130)</td></tr></table>>];
    bb233__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">233 (cleanup)</td></tr><tr><td align="left">drop(_105)</td></tr></table>>];
    bb234__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">234 (cleanup)</td></tr><tr><td align="left">drop(_93)</td></tr></table>>];
    bb235__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">235 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb236__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">236 (cleanup)</td></tr><tr><td align="left">drop(_40)</td></tr></table>>];
    bb237__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">237 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb238__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">238 (cleanup)</td></tr><tr><td align="left" balign="left">_552 = discriminant(_429)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb239__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">239 (cleanup)</td></tr><tr><td align="left" balign="left">_553 = discriminant(_418)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">240 (cleanup)</td></tr><tr><td align="left" balign="left">_554 = discriminant(_354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">241 (cleanup)</td></tr><tr><td align="left" balign="left">_555 = discriminant(_335)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">242 (cleanup)</td></tr><tr><td align="left" balign="left">_556 = discriminant(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb243__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">243 (cleanup)</td></tr><tr><td align="left" balign="left">_557 = discriminant(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb244__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">244 (cleanup)</td></tr><tr><td align="left" balign="left">_558 = discriminant(_177)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb245__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">245 (cleanup)</td></tr><tr><td align="left" balign="left">_559 = discriminant(_158)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">246 (cleanup)</td></tr><tr><td align="left" balign="left">_561 = discriminant(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">247 (cleanup)</td></tr><tr><td align="left" balign="left">_562 = discriminant(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">248 (cleanup)</td></tr><tr><td align="left" balign="left">_563 = discriminant(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">249 (cleanup)</td></tr><tr><td align="left" balign="left">_564 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb250__0_9298 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">250 (cleanup)</td></tr><tr><td align="left" balign="left">_565 = discriminant(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9298 -> bb1__0_9298 [label="return"];
    bb1__0_9298 -> bb2__0_9298 [label="return"];
    bb1__0_9298 -> bb237__0_9298 [label="unwind"];
    bb2__0_9298 -> bb3__0_9298 [label="0"];
    bb2__0_9298 -> bb5__0_9298 [label="1"];
    bb2__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb3__0_9298 -> bb7__0_9298 [label="return"];
    bb5__0_9298 -> bb6__0_9298 [label="return"];
    bb5__0_9298 -> bb250__0_9298 [label="unwind"];
    bb6__0_9298 -> bb220__0_9298 [label=""];
    bb7__0_9298 -> bb8__0_9298 [label="return"];
    bb7__0_9298 -> bb237__0_9298 [label="unwind"];
    bb8__0_9298 -> bb9__0_9298 [label="0"];
    bb8__0_9298 -> bb10__0_9298 [label="1"];
    bb8__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb9__0_9298 -> bb12__0_9298 [label="return"];
    bb10__0_9298 -> bb11__0_9298 [label="return"];
    bb10__0_9298 -> bb249__0_9298 [label="unwind"];
    bb11__0_9298 -> bb219__0_9298 [label=""];
    bb12__0_9298 -> bb13__0_9298 [label="return"];
    bb13__0_9298 -> bb14__0_9298 [label="return"];
    bb14__0_9298 -> bb16__0_9298 [label="0"];
    bb14__0_9298 -> bb15__0_9298 [label="otherwise"];
    bb15__0_9298 -> bb23__0_9298 [label=""];
    bb16__0_9298 -> bb17__0_9298 [label="return"];
    bb17__0_9298 -> bb18__0_9298 [label="return"];
    bb18__0_9298 -> bb19__0_9298 [label="return"];
    bb19__0_9298 -> bb20__0_9298 [label="return"];
    bb19__0_9298 -> bb236__0_9298 [label="unwind"];
    bb20__0_9298 -> bb21__0_9298 [label="return"];
    bb20__0_9298 -> bb236__0_9298 [label="unwind"];
    bb21__0_9298 -> bb22__0_9298 [label="return"];
    bb21__0_9298 -> bb237__0_9298 [label="unwind"];
    bb22__0_9298 -> bb23__0_9298 [label=""];
    bb23__0_9298 -> bb24__0_9298 [label="return"];
    bb24__0_9298 -> bb25__0_9298 [label="0"];
    bb24__0_9298 -> bb26__0_9298 [label="1"];
    bb24__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb25__0_9298 -> bb29__0_9298 [label="0"];
    bb25__0_9298 -> bb28__0_9298 [label="otherwise"];
    bb26__0_9298 -> bb27__0_9298 [label="return"];
    bb27__0_9298 -> bb218__0_9298 [label=""];
    bb28__0_9298 -> bb36__0_9298 [label=""];
    bb29__0_9298 -> bb30__0_9298 [label="return"];
    bb30__0_9298 -> bb31__0_9298 [label="return"];
    bb31__0_9298 -> bb32__0_9298 [label="return"];
    bb32__0_9298 -> bb33__0_9298 [label="return"];
    bb32__0_9298 -> bb235__0_9298 [label="unwind"];
    bb33__0_9298 -> bb34__0_9298 [label="return"];
    bb33__0_9298 -> bb235__0_9298 [label="unwind"];
    bb34__0_9298 -> bb35__0_9298 [label="return"];
    bb34__0_9298 -> bb237__0_9298 [label="unwind"];
    bb35__0_9298 -> bb36__0_9298 [label=""];
    bb36__0_9298 -> bb37__0_9298 [label="return"];
    bb37__0_9298 -> bb38__0_9298 [label="0"];
    bb37__0_9298 -> bb39__0_9298 [label="1"];
    bb37__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb38__0_9298 -> bb41__0_9298 [label="return"];
    bb39__0_9298 -> bb40__0_9298 [label="return"];
    bb40__0_9298 -> bb218__0_9298 [label=""];
    bb41__0_9298 -> bb42__0_9298 [label="return"];
    bb41__0_9298 -> bb237__0_9298 [label="unwind"];
    bb42__0_9298 -> bb43__0_9298 [label="return"];
    bb42__0_9298 -> bb237__0_9298 [label="unwind"];
    bb43__0_9298 -> bb44__0_9298 [label="0"];
    bb43__0_9298 -> bb45__0_9298 [label="1"];
    bb43__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb44__0_9298 -> bb47__0_9298 [label="return"];
    bb44__0_9298 -> bb234__0_9298 [label="unwind"];
    bb45__0_9298 -> bb46__0_9298 [label="return"];
    bb45__0_9298 -> bb248__0_9298 [label="unwind"];
    bb46__0_9298 -> bb217__0_9298 [label=""];
    bb47__0_9298 -> bb48__0_9298 [label="return"];
    bb47__0_9298 -> bb234__0_9298 [label="unwind"];
    bb48__0_9298 -> bb49__0_9298 [label="return"];
    bb48__0_9298 -> bb234__0_9298 [label="unwind"];
    bb49__0_9298 -> bb50__0_9298 [label="0"];
    bb49__0_9298 -> bb51__0_9298 [label="1"];
    bb49__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb50__0_9298 -> bb53__0_9298 [label="return"];
    bb50__0_9298 -> bb233__0_9298 [label="unwind"];
    bb51__0_9298 -> bb52__0_9298 [label="return"];
    bb51__0_9298 -> bb247__0_9298 [label="unwind"];
    bb52__0_9298 -> bb216__0_9298 [label=""];
    bb53__0_9298 -> bb54__0_9298 [label="return"];
    bb53__0_9298 -> bb233__0_9298 [label="unwind"];
    bb54__0_9298 -> bb55__0_9298 [label="return"];
    bb54__0_9298 -> bb233__0_9298 [label="unwind"];
    bb55__0_9298 -> bb56__0_9298 [label="return"];
    bb55__0_9298 -> bb232__0_9298 [label="unwind"];
    bb56__0_9298 -> bb57__0_9298 [label="return"];
    bb56__0_9298 -> bb231__0_9298 [label="unwind"];
    bb57__0_9298 -> bb58__0_9298 [label="return"];
    bb57__0_9298 -> bb231__0_9298 [label="unwind"];
    bb58__0_9298 -> bb59__0_9298 [label="return"];
    bb58__0_9298 -> bb231__0_9298 [label="unwind"];
    bb59__0_9298 -> bb60__0_9298 [label="0"];
    bb59__0_9298 -> bb61__0_9298 [label="1"];
    bb59__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb60__0_9298 -> bb63__0_9298 [label="return"];
    bb60__0_9298 -> bb227__0_9298 [label="unwind"];
    bb61__0_9298 -> bb62__0_9298 [label="return"];
    bb61__0_9298 -> bb246__0_9298 [label="unwind"];
    bb62__0_9298 -> bb213__0_9298 [label="return"];
    bb62__0_9298 -> bb232__0_9298 [label="unwind"];
    bb63__0_9298 -> bb64__0_9298 [label="return"];
    bb63__0_9298 -> bb228__0_9298 [label="unwind"];
    bb64__0_9298 -> bb65__0_9298 [label="return"];
    bb64__0_9298 -> bb228__0_9298 [label="unwind"];
    bb65__0_9298 -> bb66__0_9298 [label="return"];
    bb65__0_9298 -> bb228__0_9298 [label="unwind"];
    bb66__0_9298 -> bb67__0_9298 [label="0"];
    bb66__0_9298 -> bb68__0_9298 [label="1"];
    bb66__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb67__0_9298 -> bb70__0_9298 [label="return"];
    bb67__0_9298 -> bb228__0_9298 [label="unwind"];
    bb68__0_9298 -> bb69__0_9298 [label="return"];
    bb68__0_9298 -> bb228__0_9298 [label="unwind"];
    bb69__0_9298 -> bb209__0_9298 [label=""];
    bb70__0_9298 -> bb71__0_9298 [label="return"];
    bb70__0_9298 -> bb228__0_9298 [label="unwind"];
    bb71__0_9298 -> bb72__0_9298 [label="0"];
    bb71__0_9298 -> bb73__0_9298 [label="1"];
    bb71__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb72__0_9298 -> bb75__0_9298 [label="return"];
    bb72__0_9298 -> bb226__0_9298 [label="unwind"];
    bb73__0_9298 -> bb74__0_9298 [label="return"];
    bb73__0_9298 -> bb245__0_9298 [label="unwind"];
    bb74__0_9298 -> bb208__0_9298 [label=""];
    bb75__0_9298 -> bb76__0_9298 [label="return"];
    bb75__0_9298 -> bb226__0_9298 [label="unwind"];
    bb76__0_9298 -> bb77__0_9298 [label="return"];
    bb76__0_9298 -> bb226__0_9298 [label="unwind"];
    bb77__0_9298 -> bb79__0_9298 [label="0"];
    bb77__0_9298 -> bb78__0_9298 [label="otherwise"];
    bb78__0_9298 -> bb80__0_9298 [label=""];
    bb79__0_9298 -> bb80__0_9298 [label=""];
    bb80__0_9298 -> bb81__0_9298 [label="return"];
    bb80__0_9298 -> bb226__0_9298 [label="unwind"];
    bb81__0_9298 -> bb82__0_9298 [label="return"];
    bb81__0_9298 -> bb226__0_9298 [label="unwind"];
    bb82__0_9298 -> bb83__0_9298 [label="return"];
    bb82__0_9298 -> bb226__0_9298 [label="unwind"];
    bb83__0_9298 -> bb84__0_9298 [label="return"];
    bb83__0_9298 -> bb226__0_9298 [label="unwind"];
    bb84__0_9298 -> bb85__0_9298 [label="0"];
    bb84__0_9298 -> bb86__0_9298 [label="1"];
    bb84__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb85__0_9298 -> bb88__0_9298 [label="return"];
    bb85__0_9298 -> bb226__0_9298 [label="unwind"];
    bb86__0_9298 -> bb87__0_9298 [label="return"];
    bb86__0_9298 -> bb244__0_9298 [label="unwind"];
    bb87__0_9298 -> bb207__0_9298 [label=""];
    bb88__0_9298 -> bb89__0_9298 [label="return"];
    bb88__0_9298 -> bb226__0_9298 [label="unwind"];
    bb89__0_9298 -> bb90__0_9298 [label="0"];
    bb89__0_9298 -> bb91__0_9298 [label="1"];
    bb89__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb90__0_9298 -> bb93__0_9298 [label="return"];
    bb90__0_9298 -> bb226__0_9298 [label="unwind"];
    bb91__0_9298 -> bb92__0_9298 [label="return"];
    bb91__0_9298 -> bb243__0_9298 [label="unwind"];
    bb92__0_9298 -> bb207__0_9298 [label=""];
    bb93__0_9298 -> bb94__0_9298 [label="return"];
    bb93__0_9298 -> bb226__0_9298 [label="unwind"];
    bb94__0_9298 -> bb95__0_9298 [label="0"];
    bb94__0_9298 -> bb96__0_9298 [label="1"];
    bb94__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb95__0_9298 -> bb98__0_9298 [label="return"];
    bb95__0_9298 -> bb226__0_9298 [label="unwind"];
    bb96__0_9298 -> bb97__0_9298 [label="return"];
    bb96__0_9298 -> bb242__0_9298 [label="unwind"];
    bb97__0_9298 -> bb207__0_9298 [label=""];
    bb98__0_9298 -> bb99__0_9298 [label="return"];
    bb98__0_9298 -> bb226__0_9298 [label="unwind"];
    bb99__0_9298 -> bb100__0_9298 [label="return"];
    bb99__0_9298 -> bb226__0_9298 [label="unwind"];
    bb100__0_9298 -> bb101__0_9298 [label="return"];
    bb100__0_9298 -> bb226__0_9298 [label="unwind"];
    bb101__0_9298 -> bb102__0_9298 [label="return"];
    bb101__0_9298 -> bb226__0_9298 [label="unwind"];
    bb102__0_9298 -> bb103__0_9298 [label="0"];
    bb102__0_9298 -> bb104__0_9298 [label="1"];
    bb102__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb103__0_9298 -> bb106__0_9298 [label="return"];
    bb103__0_9298 -> bb228__0_9298 [label="unwind"];
    bb104__0_9298 -> bb105__0_9298 [label="return"];
    bb104__0_9298 -> bb226__0_9298 [label="unwind"];
    bb105__0_9298 -> bb207__0_9298 [label=""];
    bb106__0_9298 -> bb107__0_9298 [label="return"];
    bb106__0_9298 -> bb228__0_9298 [label="unwind"];
    bb107__0_9298 -> bb108__0_9298 [label="return"];
    bb107__0_9298 -> bb228__0_9298 [label="unwind"];
    bb108__0_9298 -> bb109__0_9298 [label="return"];
    bb108__0_9298 -> bb228__0_9298 [label="unwind"];
    bb109__0_9298 -> bb110__0_9298 [label="return"];
    bb109__0_9298 -> bb228__0_9298 [label="unwind"];
    bb110__0_9298 -> bb111__0_9298 [label="return"];
    bb110__0_9298 -> bb228__0_9298 [label="unwind"];
    bb111__0_9298 -> bb112__0_9298 [label="return"];
    bb111__0_9298 -> bb228__0_9298 [label="unwind"];
    bb112__0_9298 -> bb113__0_9298 [label="0"];
    bb112__0_9298 -> bb114__0_9298 [label="1"];
    bb112__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb113__0_9298 -> bb117__0_9298 [label="0"];
    bb113__0_9298 -> bb116__0_9298 [label="otherwise"];
    bb114__0_9298 -> bb115__0_9298 [label="return"];
    bb114__0_9298 -> bb228__0_9298 [label="unwind"];
    bb115__0_9298 -> bb206__0_9298 [label=""];
    bb116__0_9298 -> bb118__0_9298 [label="return"];
    bb116__0_9298 -> bb228__0_9298 [label="unwind"];
    bb117__0_9298 -> bb176__0_9298 [label=""];
    bb118__0_9298 -> bb119__0_9298 [label="return"];
    bb118__0_9298 -> bb228__0_9298 [label="unwind"];
    bb119__0_9298 -> bb121__0_9298 [label="0"];
    bb119__0_9298 -> bb120__0_9298 [label="otherwise"];
    bb120__0_9298 -> bb137__0_9298 [label=""];
    bb121__0_9298 -> bb122__0_9298 [label="return"];
    bb121__0_9298 -> bb228__0_9298 [label="unwind"];
    bb122__0_9298 -> bb123__0_9298 [label="return"];
    bb122__0_9298 -> bb228__0_9298 [label="unwind"];
    bb123__0_9298 -> bb124__0_9298 [label="return"];
    bb123__0_9298 -> bb228__0_9298 [label="unwind"];
    bb124__0_9298 -> bb125__0_9298 [label="return"];
    bb124__0_9298 -> bb225__0_9298 [label="unwind"];
    bb125__0_9298 -> bb126__0_9298 [label="return"];
    bb125__0_9298 -> bb225__0_9298 [label="unwind"];
    bb126__0_9298 -> bb127__0_9298 [label="return"];
    bb126__0_9298 -> bb228__0_9298 [label="unwind"];
    bb127__0_9298 -> bb128__0_9298 [label="return"];
    bb127__0_9298 -> bb228__0_9298 [label="unwind"];
    bb128__0_9298 -> bb129__0_9298 [label="return"];
    bb128__0_9298 -> bb228__0_9298 [label="unwind"];
    bb129__0_9298 -> bb130__0_9298 [label="return"];
    bb129__0_9298 -> bb228__0_9298 [label="unwind"];
    bb130__0_9298 -> bb131__0_9298 [label="return"];
    bb130__0_9298 -> bb228__0_9298 [label="unwind"];
    bb131__0_9298 -> bb132__0_9298 [label="return"];
    bb131__0_9298 -> bb228__0_9298 [label="unwind"];
    bb132__0_9298 -> bb133__0_9298 [label="return"];
    bb132__0_9298 -> bb228__0_9298 [label="unwind"];
    bb133__0_9298 -> bb134__0_9298 [label="return"];
    bb133__0_9298 -> bb224__0_9298 [label="unwind"];
    bb134__0_9298 -> bb135__0_9298 [label="return"];
    bb134__0_9298 -> bb224__0_9298 [label="unwind"];
    bb135__0_9298 -> bb136__0_9298 [label="return"];
    bb135__0_9298 -> bb228__0_9298 [label="unwind"];
    bb136__0_9298 -> bb137__0_9298 [label=""];
    bb137__0_9298 -> bb138__0_9298 [label="return"];
    bb137__0_9298 -> bb228__0_9298 [label="unwind"];
    bb138__0_9298 -> bb139__0_9298 [label="0"];
    bb138__0_9298 -> bb140__0_9298 [label="1"];
    bb138__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb139__0_9298 -> bb142__0_9298 [label="return"];
    bb139__0_9298 -> bb228__0_9298 [label="unwind"];
    bb140__0_9298 -> bb141__0_9298 [label="return"];
    bb140__0_9298 -> bb228__0_9298 [label="unwind"];
    bb141__0_9298 -> bb205__0_9298 [label=""];
    bb142__0_9298 -> bb143__0_9298 [label="return"];
    bb142__0_9298 -> bb228__0_9298 [label="unwind"];
    bb143__0_9298 -> bb144__0_9298 [label="0"];
    bb143__0_9298 -> bb145__0_9298 [label="1"];
    bb143__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb144__0_9298 -> bb147__0_9298 [label="return"];
    bb144__0_9298 -> bb223__0_9298 [label="unwind"];
    bb145__0_9298 -> bb146__0_9298 [label="return"];
    bb145__0_9298 -> bb241__0_9298 [label="unwind"];
    bb146__0_9298 -> bb204__0_9298 [label=""];
    bb147__0_9298 -> bb148__0_9298 [label="return"];
    bb147__0_9298 -> bb223__0_9298 [label="unwind"];
    bb148__0_9298 -> bb149__0_9298 [label="return"];
    bb148__0_9298 -> bb223__0_9298 [label="unwind"];
    bb149__0_9298 -> bb151__0_9298 [label="0"];
    bb149__0_9298 -> bb150__0_9298 [label="otherwise"];
    bb150__0_9298 -> bb152__0_9298 [label=""];
    bb151__0_9298 -> bb152__0_9298 [label=""];
    bb152__0_9298 -> bb153__0_9298 [label="return"];
    bb152__0_9298 -> bb223__0_9298 [label="unwind"];
    bb153__0_9298 -> bb154__0_9298 [label="return"];
    bb153__0_9298 -> bb223__0_9298 [label="unwind"];
    bb154__0_9298 -> bb155__0_9298 [label="return"];
    bb154__0_9298 -> bb223__0_9298 [label="unwind"];
    bb155__0_9298 -> bb156__0_9298 [label="0"];
    bb155__0_9298 -> bb157__0_9298 [label="1"];
    bb155__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb156__0_9298 -> bb159__0_9298 [label="return"];
    bb156__0_9298 -> bb223__0_9298 [label="unwind"];
    bb157__0_9298 -> bb158__0_9298 [label="return"];
    bb157__0_9298 -> bb240__0_9298 [label="unwind"];
    bb158__0_9298 -> bb203__0_9298 [label=""];
    bb159__0_9298 -> bb160__0_9298 [label="return"];
    bb159__0_9298 -> bb223__0_9298 [label="unwind"];
    bb160__0_9298 -> bb162__0_9298 [label="0"];
    bb160__0_9298 -> bb161__0_9298 [label="otherwise"];
    bb161__0_9298 -> bb170__0_9298 [label=""];
    bb162__0_9298 -> bb163__0_9298 [label="return"];
    bb162__0_9298 -> bb223__0_9298 [label="unwind"];
    bb163__0_9298 -> bb164__0_9298 [label="return"];
    bb163__0_9298 -> bb223__0_9298 [label="unwind"];
    bb164__0_9298 -> bb165__0_9298 [label="return"];
    bb164__0_9298 -> bb223__0_9298 [label="unwind"];
    bb165__0_9298 -> bb166__0_9298 [label="return"];
    bb165__0_9298 -> bb222__0_9298 [label="unwind"];
    bb166__0_9298 -> bb167__0_9298 [label="return"];
    bb166__0_9298 -> bb222__0_9298 [label="unwind"];
    bb167__0_9298 -> bb168__0_9298 [label="return"];
    bb167__0_9298 -> bb223__0_9298 [label="unwind"];
    bb168__0_9298 -> bb169__0_9298 [label="return"];
    bb168__0_9298 -> bb223__0_9298 [label="unwind"];
    bb169__0_9298 -> bb170__0_9298 [label=""];
    bb170__0_9298 -> bb171__0_9298 [label="return"];
    bb170__0_9298 -> bb223__0_9298 [label="unwind"];
    bb171__0_9298 -> bb172__0_9298 [label="0"];
    bb171__0_9298 -> bb173__0_9298 [label="1"];
    bb171__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb172__0_9298 -> bb175__0_9298 [label="return"];
    bb172__0_9298 -> bb228__0_9298 [label="unwind"];
    bb173__0_9298 -> bb174__0_9298 [label="return"];
    bb173__0_9298 -> bb223__0_9298 [label="unwind"];
    bb174__0_9298 -> bb203__0_9298 [label=""];
    bb175__0_9298 -> bb176__0_9298 [label=""];
    bb176__0_9298 -> bb177__0_9298 [label="return"];
    bb176__0_9298 -> bb228__0_9298 [label="unwind"];
    bb177__0_9298 -> bb178__0_9298 [label="return"];
    bb177__0_9298 -> bb228__0_9298 [label="unwind"];
    bb178__0_9298 -> bb179__0_9298 [label="0"];
    bb178__0_9298 -> bb180__0_9298 [label="1"];
    bb178__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb179__0_9298 -> bb182__0_9298 [label="return"];
    bb179__0_9298 -> bb221__0_9298 [label="unwind"];
    bb180__0_9298 -> bb181__0_9298 [label="return"];
    bb180__0_9298 -> bb239__0_9298 [label="unwind"];
    bb181__0_9298 -> bb202__0_9298 [label=""];
    bb182__0_9298 -> bb183__0_9298 [label="return"];
    bb182__0_9298 -> bb221__0_9298 [label="unwind"];
    bb183__0_9298 -> bb184__0_9298 [label="0"];
    bb183__0_9298 -> bb185__0_9298 [label="1"];
    bb183__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb184__0_9298 -> bb187__0_9298 [label="return"];
    bb184__0_9298 -> bb221__0_9298 [label="unwind"];
    bb185__0_9298 -> bb186__0_9298 [label="return"];
    bb185__0_9298 -> bb238__0_9298 [label="unwind"];
    bb186__0_9298 -> bb201__0_9298 [label=""];
    bb187__0_9298 -> bb188__0_9298 [label="return"];
    bb187__0_9298 -> bb221__0_9298 [label="unwind"];
    bb188__0_9298 -> bb189__0_9298 [label="return"];
    bb188__0_9298 -> bb221__0_9298 [label="unwind"];
    bb189__0_9298 -> bb190__0_9298 [label="return"];
    bb189__0_9298 -> bb221__0_9298 [label="unwind"];
    bb190__0_9298 -> bb191__0_9298 [label="return"];
    bb190__0_9298 -> bb221__0_9298 [label="unwind"];
    bb191__0_9298 -> bb192__0_9298 [label="0"];
    bb191__0_9298 -> bb193__0_9298 [label="1"];
    bb191__0_9298 -> bb4__0_9298 [label="otherwise"];
    bb192__0_9298 -> bb195__0_9298 [label="return"];
    bb192__0_9298 -> bb228__0_9298 [label="unwind"];
    bb193__0_9298 -> bb194__0_9298 [label="return"];
    bb193__0_9298 -> bb221__0_9298 [label="unwind"];
    bb194__0_9298 -> bb201__0_9298 [label=""];
    bb195__0_9298 -> bb196__0_9298 [label="return"];
    bb195__0_9298 -> bb229__0_9298 [label="unwind"];
    bb196__0_9298 -> bb197__0_9298 [label="return"];
    bb196__0_9298 -> bb230__0_9298 [label="unwind"];
    bb197__0_9298 -> bb198__0_9298 [label="return"];
    bb197__0_9298 -> bb233__0_9298 [label="unwind"];
    bb198__0_9298 -> bb199__0_9298 [label="return"];
    bb198__0_9298 -> bb234__0_9298 [label="unwind"];
    bb199__0_9298 -> bb200__0_9298 [label="return"];
    bb199__0_9298 -> bb237__0_9298 [label="unwind"];
    bb200__0_9298 -> bb220__0_9298 [label=""];
    bb201__0_9298 -> bb202__0_9298 [label="return"];
    bb201__0_9298 -> bb228__0_9298 [label="unwind"];
    bb202__0_9298 -> bb206__0_9298 [label=""];
    bb203__0_9298 -> bb204__0_9298 [label="return"];
    bb203__0_9298 -> bb228__0_9298 [label="unwind"];
    bb204__0_9298 -> bb205__0_9298 [label=""];
    bb205__0_9298 -> bb206__0_9298 [label=""];
    bb206__0_9298 -> bb209__0_9298 [label=""];
    bb207__0_9298 -> bb208__0_9298 [label="return"];
    bb207__0_9298 -> bb228__0_9298 [label="unwind"];
    bb208__0_9298 -> bb209__0_9298 [label=""];
    bb209__0_9298 -> bb210__0_9298 [label="return"];
    bb209__0_9298 -> bb229__0_9298 [label="unwind"];
    bb210__0_9298 -> bb211__0_9298 [label="return"];
    bb210__0_9298 -> bb230__0_9298 [label="unwind"];
    bb211__0_9298 -> bb212__0_9298 [label="return"];
    bb211__0_9298 -> bb233__0_9298 [label="unwind"];
    bb212__0_9298 -> bb215__0_9298 [label=""];
    bb213__0_9298 -> bb214__0_9298 [label="return"];
    bb213__0_9298 -> bb233__0_9298 [label="unwind"];
    bb214__0_9298 -> bb215__0_9298 [label=""];
    bb215__0_9298 -> bb216__0_9298 [label="return"];
    bb215__0_9298 -> bb234__0_9298 [label="unwind"];
    bb216__0_9298 -> bb217__0_9298 [label="return"];
    bb216__0_9298 -> bb237__0_9298 [label="unwind"];
    bb217__0_9298 -> bb218__0_9298 [label=""];
    bb218__0_9298 -> bb219__0_9298 [label=""];
    bb219__0_9298 -> bb220__0_9298 [label=""];
    bb221__0_9298 -> bb228__0_9298 [label="return"];
    bb222__0_9298 -> bb223__0_9298 [label="return"];
    bb223__0_9298 -> bb228__0_9298 [label="return"];
    bb224__0_9298 -> bb228__0_9298 [label="return"];
    bb225__0_9298 -> bb228__0_9298 [label="return"];
    bb226__0_9298 -> bb228__0_9298 [label="return"];
    bb227__0_9298 -> bb228__0_9298 [label="return"];
    bb228__0_9298 -> bb229__0_9298 [label="return"];
    bb229__0_9298 -> bb230__0_9298 [label="return"];
    bb230__0_9298 -> bb233__0_9298 [label="return"];
    bb231__0_9298 -> bb232__0_9298 [label="return"];
    bb232__0_9298 -> bb233__0_9298 [label="return"];
    bb233__0_9298 -> bb234__0_9298 [label="return"];
    bb234__0_9298 -> bb237__0_9298 [label="return"];
    bb235__0_9298 -> bb237__0_9298 [label="return"];
    bb236__0_9298 -> bb237__0_9298 [label="return"];
    bb238__0_9298 -> bb221__0_9298 [label=""];
    bb239__0_9298 -> bb228__0_9298 [label=""];
    bb240__0_9298 -> bb223__0_9298 [label=""];
    bb241__0_9298 -> bb228__0_9298 [label=""];
    bb242__0_9298 -> bb226__0_9298 [label=""];
    bb243__0_9298 -> bb226__0_9298 [label=""];
    bb244__0_9298 -> bb226__0_9298 [label=""];
    bb245__0_9298 -> bb228__0_9298 [label=""];
    bb246__0_9298 -> bb231__0_9298 [label=""];
    bb247__0_9298 -> bb234__0_9298 [label=""];
    bb248__0_9298 -> bb237__0_9298 [label=""];
    bb249__0_9298 -> bb237__0_9298 [label=""];
    bb250__0_9298 -> bb237__0_9298 [label=""];
}
