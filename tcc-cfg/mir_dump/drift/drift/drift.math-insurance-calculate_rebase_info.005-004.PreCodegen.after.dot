digraph Mir_0_2337 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_rebase_info(_1: u128, _2: u64) -&gt; std::result::Result&lt;(u32, u128), error::ErrorCode&gt;<br align="left"/>let _3: u128;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _6: u128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: u128;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _17: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _23: u128;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: u128;<br align="left"/>let _29: u32;<br align="left"/>let mut _30: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _31: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u32;<br align="left"/>let _39: u128;<br align="left"/>let mut _40: u32;<br align="left"/>let mut _41: (u32, u128);<br align="left"/>let mut _42: u32;<br align="left"/>let mut _43: u128;<br align="left"/>debug total_if_shares =&gt; _1;<br align="left"/>debug insurance_fund_vault_balance =&gt; _2;<br align="left"/>debug rebase_divisor_full =&gt; _3;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>debug expo_diff =&gt; _29;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug rebase_divisor =&gt; _39;<br align="left"/>>;
    bb0__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _1<br/></td></tr><tr><td align="left">_8 = &lt;u128 as SafeMath&gt;::safe_div(move _9, const 10_u128)</td></tr></table>>];
    bb1__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: u128)<br/>_6 = _14<br/>StorageDead(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/></td></tr><tr><td align="left">_17 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _18)</td></tr></table>>];
    bb4__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_19 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_16 as Continue).0: u128)<br/>_15 = _23<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_5 = &lt;u128 as SafeMath&gt;::safe_div(move _6, move _15)</td></tr></table>>];
    bb10__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_22)<br/>_22 = _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb13__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_24 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb14__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_4 as Continue).0: u128)<br/>_3 = _28<br/>StorageDead(_28)<br/>StorageDead(_16)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _3<br/></td></tr><tr><td align="left">_32 = log10_iter(move _33)</td></tr></table>>];
    bb15__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb16__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;u128 as Cast&gt;::cast::&lt;u32&gt;(move _32)</td></tr></table>>];
    bb18__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">_30 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _31)</td></tr></table>>];
    bb19__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>_34 = discriminant(_30)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb20__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_30 as Continue).0: u32)<br/>_29 = _38<br/>StorageDead(_38)<br/>StorageDead(_30)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = _29<br/></td></tr><tr><td align="left">_39 = core::num::&lt;impl u128&gt;::pow(const 10_u128, move _40)</td></tr></table>>];
    bb21__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_30 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u32, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb22__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _29<br/>StorageLive(_43)<br/>_43 = _39<br/>_41 = (move _42, move _43)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>_0 = std::result::Result::&lt;(u32, u128), error::ErrorCode&gt;::Ok(move _41)<br/>StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_29)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2337 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2337 -> bb1__0_2337 [label="return"];
    bb1__0_2337 -> bb2__0_2337 [label="return"];
    bb2__0_2337 -> bb3__0_2337 [label="0"];
    bb2__0_2337 -> bb5__0_2337 [label="1"];
    bb2__0_2337 -> bb4__0_2337 [label="otherwise"];
    bb3__0_2337 -> bb7__0_2337 [label="return"];
    bb5__0_2337 -> bb6__0_2337 [label="return"];
    bb6__0_2337 -> bb25__0_2337 [label=""];
    bb7__0_2337 -> bb8__0_2337 [label="return"];
    bb8__0_2337 -> bb9__0_2337 [label="0"];
    bb8__0_2337 -> bb10__0_2337 [label="1"];
    bb8__0_2337 -> bb4__0_2337 [label="otherwise"];
    bb9__0_2337 -> bb12__0_2337 [label="return"];
    bb10__0_2337 -> bb11__0_2337 [label="return"];
    bb11__0_2337 -> bb24__0_2337 [label=""];
    bb12__0_2337 -> bb13__0_2337 [label="return"];
    bb13__0_2337 -> bb14__0_2337 [label="0"];
    bb13__0_2337 -> bb15__0_2337 [label="1"];
    bb13__0_2337 -> bb4__0_2337 [label="otherwise"];
    bb14__0_2337 -> bb17__0_2337 [label="return"];
    bb15__0_2337 -> bb16__0_2337 [label="return"];
    bb16__0_2337 -> bb24__0_2337 [label=""];
    bb17__0_2337 -> bb18__0_2337 [label="return"];
    bb18__0_2337 -> bb19__0_2337 [label="return"];
    bb19__0_2337 -> bb20__0_2337 [label="0"];
    bb19__0_2337 -> bb21__0_2337 [label="1"];
    bb19__0_2337 -> bb4__0_2337 [label="otherwise"];
    bb20__0_2337 -> bb23__0_2337 [label="return"];
    bb21__0_2337 -> bb22__0_2337 [label="return"];
    bb22__0_2337 -> bb26__0_2337 [label=""];
    bb23__0_2337 -> bb27__0_2337 [label=""];
    bb24__0_2337 -> bb25__0_2337 [label=""];
    bb25__0_2337 -> bb26__0_2337 [label=""];
    bb26__0_2337 -> bb27__0_2337 [label=""];
}
