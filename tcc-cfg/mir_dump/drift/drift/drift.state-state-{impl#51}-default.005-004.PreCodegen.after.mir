// MIR for `state::state::<impl at programs/drift/src/state/state.rs:178:59: 178:66>::default` after PreCodegen

fn state::state::<impl at programs/drift/src/state/state.rs:178:59: 178:66>::default() -> ValidityGuardRails {
    let mut _0: state::state::ValidityGuardRails;
    let mut _1: i64;
    let mut _2: i64;
    let mut _3: u64;
    let mut _4: i64;

    bb0: {
        StorageLive(_1);
        _1 = <i64 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <i64 as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <u64 as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <i64 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        _0 = ValidityGuardRails { slots_before_stale_for_amm: move _1, slots_before_stale_for_margin: move _2, confidence_interval_max_size: move _3, too_volatile_ratio: move _4 };
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
