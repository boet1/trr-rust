digraph Mir_0_2796 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_accumulated_interest(_1: &amp;ReErased state::spot_market::SpotMarket, _2: i64) -&gt; std::result::Result&lt;math::spot_balance::InterestAccumulated, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: i64;<br align="left"/>let mut _6: i64;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: i64;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: math::spot_balance::InterestAccumulated;<br align="left"/>let _17: u128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _20: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: u128;<br align="left"/>let _26: ();<br align="left"/>let mut _27: bool;<br align="left"/>let mut _28: u128;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: math::spot_balance::InterestAccumulated;<br align="left"/>let _31: u128;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _33: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _34: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _35: u128;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: u128;<br align="left"/>let _41: u64;<br align="left"/>let mut _42: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _43: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _47: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _48: i64;<br align="left"/>let mut _49: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _50: error::ErrorCode;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: u64;<br align="left"/>let mut _56: u64;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u64;<br align="left"/>let _62: u128;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _64: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _65: u128;<br align="left"/>let mut _66: u128;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: u128;<br align="left"/>let _73: u128;<br align="left"/>let mut _74: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _75: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _78: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: u128;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: u128;<br align="left"/>let mut _86: isize;<br align="left"/>let _87: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _88: !;<br align="left"/>let mut _89: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _90: u128;<br align="left"/>let _91: u128;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _93: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _94: u128;<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _96: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _97: u128;<br align="left"/>let mut _98: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _99: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _100: u128;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _102: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _103: u128;<br align="left"/>let mut _104: u128;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: u128;<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: u128;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: u128;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: u128;<br align="left"/>let _125: u128;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _127: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _128: u128;<br align="left"/>let mut _129: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _130: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _131: u128;<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _133: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _134: u128;<br align="left"/>let mut _135: u128;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: u128;<br align="left"/>let mut _141: isize;<br align="left"/>let _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _143: !;<br align="left"/>let mut _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _145: u128;<br align="left"/>let mut _146: isize;<br align="left"/>let _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _148: !;<br align="left"/>let mut _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _150: u128;<br align="left"/>let mut _151: math::spot_balance::InterestAccumulated;<br align="left"/>let mut _152: u128;<br align="left"/>let mut _153: u128;<br align="left"/>debug spot_market =&gt; _1;<br align="left"/>debug now =&gt; _2;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug utilization =&gt; _17;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug borrow_rate =&gt; _31;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug time_since_last_update =&gt; _41;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>debug modified_borrow_rate =&gt; _62;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug modified_deposit_rate =&gt; _73;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug residual =&gt; _87;<br align="left"/>debug val =&gt; _90;<br align="left"/>debug borrow_interest =&gt; _91;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug deposit_interest =&gt; _125;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>debug residual =&gt; _142;<br align="left"/>debug val =&gt; _145;<br align="left"/>debug residual =&gt; _147;<br align="left"/>debug val =&gt; _150;<br align="left"/>>;
    bb0__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _2<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = ((*_1).22: u64)<br/></td></tr><tr><td align="left">_8 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _9)</td></tr></table>>];
    bb1__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: i64)<br/>_6 = _14<br/>StorageDead(_14)<br/>_4 = Le(move _5, move _6)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb4__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_16)<br/>_16 = InterestAccumulated { borrow_interest: const 0_u128, deposit_interest: const 0_u128 }<br/>_0 = std::result::Result::&lt;InterestAccumulated, error::ErrorCode&gt;::Ok(move _16)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;(*_1)<br/></td></tr><tr><td align="left">_19 = calculate_spot_market_utilization(move _20)</td></tr></table>>];
    bb9__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb10__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_21 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb11__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_18 as Continue).0: u128)<br/>_17 = _25<br/>StorageDead(_25)<br/>StorageDead(_18)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _17<br/>_27 = Eq(move _28, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb12__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb13__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_30)<br/>_30 = InterestAccumulated { borrow_interest: const 0_u128, deposit_interest: const 0_u128 }<br/>_0 = std::result::Result::&lt;InterestAccumulated, error::ErrorCode&gt;::Ok(move _30)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = const ()<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(*_1)<br/>StorageLive(_35)<br/>_35 = _17<br/></td></tr><tr><td align="left">_33 = calculate_borrow_rate(move _34, move _35)</td></tr></table>>];
    bb16__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb17__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_36 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb18__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_32 as Continue).0: u128)<br/>_31 = _40<br/>StorageDead(_40)<br/>StorageDead(_32)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = _2<br/></td></tr><tr><td align="left">_47 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _48)</td></tr></table>>];
    bb19__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb20__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = error::ErrorCode::UnableToCastUnixTime<br/>_49 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Err(move _50)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_46 = std::result::Result::&lt;u64, error::ErrorCode&gt;::or::&lt;error::ErrorCode&gt;(move _47, move _49)</td></tr></table>>];
    bb22__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb23__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_51 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb24__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_45 as Continue).0: u64)<br/>_44 = _55<br/>StorageDead(_55)<br/>StorageLive(_56)<br/>_56 = ((*_1).22: u64)<br/></td></tr><tr><td align="left">_43 = &lt;u64 as SafeMath&gt;::safe_sub(move _44, move _56)</td></tr></table>>];
    bb25__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb26__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _43)</td></tr></table>>];
    bb28__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>_57 = discriminant(_42)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb29__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_42 as Continue).0: u64)<br/>_41 = _61<br/>StorageDead(_61)<br/>StorageDead(_45)<br/>StorageDead(_42)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _31<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = _41<br/>_66 = move _67 as u128 (IntToInt)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_64 = &lt;u128 as SafeMath&gt;::safe_mul(move _65, move _66)</td></tr></table>>];
    bb30__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_42 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb31__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb33__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_68 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb34__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_63 as Continue).0: u128)<br/>_62 = _72<br/>StorageDead(_72)<br/>StorageDead(_63)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>_79 = _62<br/>StorageLive(_80)<br/>_80 = _17<br/></td></tr><tr><td align="left">_78 = &lt;u128 as SafeMath&gt;::safe_mul(move _79, move _80)</td></tr></table>>];
    bb35__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb36__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb38__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_81 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb39__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_77 as Continue).0: u128)<br/>_76 = _85<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_75 = &lt;u128 as SafeMath&gt;::safe_div(move _76, const _)</td></tr></table>>];
    bb40__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb41__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">_74 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _75)</td></tr></table>>];
    bb43__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>_86 = discriminant(_74)<br/></td></tr><tr><td align="left">switchInt(move _86)</td></tr></table>>];
    bb44__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_74 as Continue).0: u128)<br/>_73 = _90<br/>StorageDead(_90)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = ((*_1).14: u128)<br/>StorageLive(_104)<br/>_104 = _62<br/></td></tr><tr><td align="left">_102 = &lt;u128 as SafeMath&gt;::safe_mul(move _103, move _104)</td></tr></table>>];
    bb45__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_74 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_89)<br/>_89 = _87<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _89)</td></tr></table>>];
    bb46__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb48__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_105 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb49__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_101 as Continue).0: u128)<br/>_100 = _109<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_99 = &lt;u128 as SafeMath&gt;::safe_div(move _100, const _)</td></tr></table>>];
    bb50__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb51__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _99)</td></tr></table>>];
    bb53__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>_110 = discriminant(_98)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb54__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_98 as Continue).0: u128)<br/>_97 = _114<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_96 = &lt;u128 as SafeMath&gt;::safe_div(move _97, const _)</td></tr></table>>];
    bb55__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_98 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb56__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb58__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_115 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb59__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_95 as Continue).0: u128)<br/>_94 = _119<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_93 = &lt;u128 as SafeMath&gt;::safe_add(move _94, const 1_u128)</td></tr></table>>];
    bb60__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb61__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb63__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_120 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb64__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_92 as Continue).0: u128)<br/>_91 = _124<br/>StorageDead(_124)<br/>StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = ((*_1).13: u128)<br/>StorageLive(_135)<br/>_135 = _73<br/></td></tr><tr><td align="left">_133 = &lt;u128 as SafeMath&gt;::safe_mul(move _134, move _135)</td></tr></table>>];
    bb65__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb66__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb68__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_136 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb69__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_132 as Continue).0: u128)<br/>_131 = _140<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">_130 = &lt;u128 as SafeMath&gt;::safe_div(move _131, const _)</td></tr></table>>];
    bb70__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb71__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/></td></tr><tr><td align="left">_129 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _130)</td></tr></table>>];
    bb73__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_141 = discriminant(_129)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb74__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_129 as Continue).0: u128)<br/>_128 = _145<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">_127 = &lt;u128 as SafeMath&gt;::safe_div(move _128, const _)</td></tr></table>>];
    bb75__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_129 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_144)<br/>_144 = _142<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _144)</td></tr></table>>];
    bb76__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb78__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_146 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb79__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_126 as Continue).0: u128)<br/>_125 = _150<br/>StorageDead(_150)<br/>StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>_152 = _91<br/>StorageLive(_153)<br/>_153 = _125<br/>_151 = InterestAccumulated { borrow_interest: move _152, deposit_interest: move _153 }<br/>StorageDead(_153)<br/>StorageDead(_152)<br/>_0 = std::result::Result::&lt;InterestAccumulated, error::ErrorCode&gt;::Ok(move _151)<br/>StorageDead(_151)<br/>StorageDead(_125)<br/>StorageDead(_91)<br/>StorageDead(_73)<br/>StorageDead(_62)<br/>StorageDead(_41)<br/>StorageDead(_31)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_149)<br/>_149 = _147<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;InterestAccumulated, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _149)</td></tr></table>>];
    bb81__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_129)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_98)<br/>StorageDead(_95)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2796 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2796 -> bb1__0_2796 [label="return"];
    bb1__0_2796 -> bb2__0_2796 [label="return"];
    bb2__0_2796 -> bb3__0_2796 [label="0"];
    bb2__0_2796 -> bb5__0_2796 [label="1"];
    bb2__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb3__0_2796 -> bb8__0_2796 [label="0"];
    bb3__0_2796 -> bb7__0_2796 [label="otherwise"];
    bb5__0_2796 -> bb6__0_2796 [label="return"];
    bb6__0_2796 -> bb95__0_2796 [label=""];
    bb7__0_2796 -> bb95__0_2796 [label=""];
    bb8__0_2796 -> bb9__0_2796 [label="return"];
    bb9__0_2796 -> bb10__0_2796 [label="return"];
    bb10__0_2796 -> bb11__0_2796 [label="0"];
    bb10__0_2796 -> bb12__0_2796 [label="1"];
    bb10__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb11__0_2796 -> bb15__0_2796 [label="0"];
    bb11__0_2796 -> bb14__0_2796 [label="otherwise"];
    bb12__0_2796 -> bb13__0_2796 [label="return"];
    bb13__0_2796 -> bb94__0_2796 [label=""];
    bb14__0_2796 -> bb94__0_2796 [label=""];
    bb15__0_2796 -> bb16__0_2796 [label="return"];
    bb16__0_2796 -> bb17__0_2796 [label="return"];
    bb17__0_2796 -> bb18__0_2796 [label="0"];
    bb17__0_2796 -> bb19__0_2796 [label="1"];
    bb17__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb18__0_2796 -> bb21__0_2796 [label="return"];
    bb19__0_2796 -> bb20__0_2796 [label="return"];
    bb20__0_2796 -> bb93__0_2796 [label=""];
    bb21__0_2796 -> bb22__0_2796 [label="return"];
    bb22__0_2796 -> bb23__0_2796 [label="return"];
    bb23__0_2796 -> bb24__0_2796 [label="0"];
    bb23__0_2796 -> bb25__0_2796 [label="1"];
    bb23__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb24__0_2796 -> bb27__0_2796 [label="return"];
    bb25__0_2796 -> bb26__0_2796 [label="return"];
    bb26__0_2796 -> bb91__0_2796 [label=""];
    bb27__0_2796 -> bb28__0_2796 [label="return"];
    bb28__0_2796 -> bb29__0_2796 [label="0"];
    bb28__0_2796 -> bb30__0_2796 [label="1"];
    bb28__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb29__0_2796 -> bb32__0_2796 [label="return"];
    bb30__0_2796 -> bb31__0_2796 [label="return"];
    bb31__0_2796 -> bb91__0_2796 [label=""];
    bb32__0_2796 -> bb33__0_2796 [label="return"];
    bb33__0_2796 -> bb34__0_2796 [label="0"];
    bb33__0_2796 -> bb35__0_2796 [label="1"];
    bb33__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb34__0_2796 -> bb37__0_2796 [label="return"];
    bb35__0_2796 -> bb36__0_2796 [label="return"];
    bb36__0_2796 -> bb90__0_2796 [label=""];
    bb37__0_2796 -> bb38__0_2796 [label="return"];
    bb38__0_2796 -> bb39__0_2796 [label="0"];
    bb38__0_2796 -> bb40__0_2796 [label="1"];
    bb38__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb39__0_2796 -> bb42__0_2796 [label="return"];
    bb40__0_2796 -> bb41__0_2796 [label="return"];
    bb41__0_2796 -> bb88__0_2796 [label=""];
    bb42__0_2796 -> bb43__0_2796 [label="return"];
    bb43__0_2796 -> bb44__0_2796 [label="0"];
    bb43__0_2796 -> bb45__0_2796 [label="1"];
    bb43__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb44__0_2796 -> bb47__0_2796 [label="return"];
    bb45__0_2796 -> bb46__0_2796 [label="return"];
    bb46__0_2796 -> bb88__0_2796 [label=""];
    bb47__0_2796 -> bb48__0_2796 [label="return"];
    bb48__0_2796 -> bb49__0_2796 [label="0"];
    bb48__0_2796 -> bb50__0_2796 [label="1"];
    bb48__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb49__0_2796 -> bb52__0_2796 [label="return"];
    bb50__0_2796 -> bb51__0_2796 [label="return"];
    bb51__0_2796 -> bb84__0_2796 [label=""];
    bb52__0_2796 -> bb53__0_2796 [label="return"];
    bb53__0_2796 -> bb54__0_2796 [label="0"];
    bb53__0_2796 -> bb55__0_2796 [label="1"];
    bb53__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb54__0_2796 -> bb57__0_2796 [label="return"];
    bb55__0_2796 -> bb56__0_2796 [label="return"];
    bb56__0_2796 -> bb84__0_2796 [label=""];
    bb57__0_2796 -> bb58__0_2796 [label="return"];
    bb58__0_2796 -> bb59__0_2796 [label="0"];
    bb58__0_2796 -> bb60__0_2796 [label="1"];
    bb58__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb59__0_2796 -> bb62__0_2796 [label="return"];
    bb60__0_2796 -> bb61__0_2796 [label="return"];
    bb61__0_2796 -> bb85__0_2796 [label=""];
    bb62__0_2796 -> bb63__0_2796 [label="return"];
    bb63__0_2796 -> bb64__0_2796 [label="0"];
    bb63__0_2796 -> bb65__0_2796 [label="1"];
    bb63__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb64__0_2796 -> bb67__0_2796 [label="return"];
    bb65__0_2796 -> bb66__0_2796 [label="return"];
    bb66__0_2796 -> bb86__0_2796 [label=""];
    bb67__0_2796 -> bb68__0_2796 [label="return"];
    bb68__0_2796 -> bb69__0_2796 [label="0"];
    bb68__0_2796 -> bb70__0_2796 [label="1"];
    bb68__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb69__0_2796 -> bb72__0_2796 [label="return"];
    bb70__0_2796 -> bb71__0_2796 [label="return"];
    bb71__0_2796 -> bb82__0_2796 [label=""];
    bb72__0_2796 -> bb73__0_2796 [label="return"];
    bb73__0_2796 -> bb74__0_2796 [label="0"];
    bb73__0_2796 -> bb75__0_2796 [label="1"];
    bb73__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb74__0_2796 -> bb77__0_2796 [label="return"];
    bb75__0_2796 -> bb76__0_2796 [label="return"];
    bb76__0_2796 -> bb82__0_2796 [label=""];
    bb77__0_2796 -> bb78__0_2796 [label="return"];
    bb78__0_2796 -> bb79__0_2796 [label="0"];
    bb78__0_2796 -> bb80__0_2796 [label="1"];
    bb78__0_2796 -> bb4__0_2796 [label="otherwise"];
    bb79__0_2796 -> bb96__0_2796 [label=""];
    bb80__0_2796 -> bb81__0_2796 [label="return"];
    bb81__0_2796 -> bb83__0_2796 [label=""];
    bb82__0_2796 -> bb83__0_2796 [label=""];
    bb83__0_2796 -> bb87__0_2796 [label=""];
    bb84__0_2796 -> bb85__0_2796 [label=""];
    bb85__0_2796 -> bb86__0_2796 [label=""];
    bb86__0_2796 -> bb87__0_2796 [label=""];
    bb87__0_2796 -> bb89__0_2796 [label=""];
    bb88__0_2796 -> bb89__0_2796 [label=""];
    bb89__0_2796 -> bb90__0_2796 [label=""];
    bb90__0_2796 -> bb92__0_2796 [label=""];
    bb91__0_2796 -> bb92__0_2796 [label=""];
    bb92__0_2796 -> bb93__0_2796 [label=""];
    bb93__0_2796 -> bb94__0_2796 [label=""];
    bb94__0_2796 -> bb96__0_2796 [label=""];
    bb95__0_2796 -> bb96__0_2796 [label=""];
}
