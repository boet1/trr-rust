digraph Mir_0_2618 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::calculate_max_spot_order_size::{closure#1}(_1: &amp;ReErased Closure(DefId(0:2618 ~ drift[d311]::math::orders::calculate_max_spot_order_size::{closure#1}), [i8, Binder(extern &quot;RustCall&quot; fn((u32,)) -&gt; std::result::Result&lt;(u64, u32), error::ErrorCode&gt;, []), (&amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i128, &amp;ReErased i64, &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, &amp;ReErased i128, &amp;ReErased state::oracle::StrictOraclePrice, &amp;ReErased controller::position::PositionDirection, &amp;ReErased u32, &amp;ReErased u32)]), _2: u32) -&gt; std::result::Result&lt;(u64, u32), error::ErrorCode&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _12: i128;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _14: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _15: i128;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _17: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _18: i128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _21: i128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _24: i128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _27: i128;<br align="left"/>let mut _28: i128;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _30: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: i128;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: i128;<br align="left"/>let mut _41: i128;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: i128;<br align="left"/>let mut _47: i128;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i128;<br align="left"/>let mut _53: i128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: i128;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: i128;<br align="left"/>let mut _66: i128;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _68: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _69: u32;<br align="left"/>let mut _70: isize;<br align="left"/>let _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _72: !;<br align="left"/>let mut _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _74: i128;<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _79: i128;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: i128;<br align="left"/>let mut _85: i128;<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _87: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: isize;<br align="left"/>let _90: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _91: !;<br align="left"/>let mut _92: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _93: i128;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: i128;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: u64;<br align="left"/>let _104: u32;<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _106: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _107: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _108: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _109: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _110: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _111: u128;<br align="left"/>let mut _112: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _113: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _114: u128;<br align="left"/>let mut _115: i128;<br align="left"/>let mut _116: u128;<br align="left"/>let mut _117: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _118: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _119: u64;<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _124: u128;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: u128;<br align="left"/>let mut _130: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let _131: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _132: controller::position::PositionDirection;<br align="left"/>let mut _133: u32;<br align="left"/>let mut _134: u32;<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _139: u32;<br align="left"/>let mut _140: (u64, u32);<br align="left"/>let mut _141: u64;<br align="left"/>let mut _142: u32;<br align="left"/>let mut _143: &amp;ReErased i128;<br align="left"/>let mut _144: &amp;ReErased i128;<br align="left"/>let mut _145: &amp;ReErased i128;<br align="left"/>let mut _146: &amp;ReErased i64;<br align="left"/>let mut _147: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _148: &amp;ReErased i128;<br align="left"/>let mut _149: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _150: &amp;ReErased controller::position::PositionDirection;<br align="left"/>let mut _151: &amp;ReErased u32;<br align="left"/>let mut _152: &amp;ReErased u32;<br align="left"/>debug free_collateral_delta =&gt; _2;<br align="left"/>debug free_collateral =&gt; (*((*_1).0: &amp;i128));<br align="left"/>debug numerator_scale =&gt; (*((*_1).1: &amp;i128));<br align="left"/>debug denominator_scale =&gt; (*((*_1).2: &amp;i128));<br align="left"/>debug max_oracle_price =&gt; (*((*_1).3: &amp;i64));<br align="left"/>debug spot_market =&gt; (*((*_1).4: &amp;std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;));<br align="left"/>debug worst_case_token_amount =&gt; (*((*_1).5: &amp;i128));<br align="left"/>debug strict_oracle_price =&gt; (*((*_1).6: &amp;state::oracle::StrictOraclePrice));<br align="left"/>debug direction =&gt; (*((*_1).7: &amp;controller::position::PositionDirection));<br align="left"/>debug user_custom_liability_weight =&gt; (*((*_1).8: &amp;u32));<br align="left"/>debug user_custom_asset_weight =&gt; (*((*_1).9: &amp;u32));<br align="left"/>debug new_order_size =&gt; _3;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug residual =&gt; _71;<br align="left"/>debug val =&gt; _74;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug residual =&gt; _90;<br align="left"/>debug val =&gt; _93;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug new_free_collateral_delta =&gt; _104;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>>;
    bb0__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_143 = deref_copy ((*_1).0: &amp;i128)<br/>_27 = (*_143)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/></td></tr><tr><td align="left">_30 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb1__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb2__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_31 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb3__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_29 as Continue).0: i128)<br/>_28 = _35<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_26 = &lt;i128 as SafeMath&gt;::safe_sub(move _27, move _28)</td></tr></table>>];
    bb4__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb6__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb8__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_36 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb9__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_25 as Continue).0: i128)<br/>_24 = _40<br/>StorageDead(_40)<br/>StorageLive(_41)<br/>_144 = deref_copy ((*_1).1: &amp;i128)<br/>_41 = (*_144)<br/></td></tr><tr><td align="left">_23 = &lt;i128 as SafeMath&gt;::safe_mul(move _24, move _41)</td></tr></table>>];
    bb10__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb11__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb13__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_42 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb14__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_22 as Continue).0: i128)<br/>_21 = _46<br/>StorageDead(_46)<br/>StorageLive(_47)<br/>_145 = deref_copy ((*_1).2: &amp;i128)<br/>_47 = (*_145)<br/></td></tr><tr><td align="left">_20 = &lt;i128 as SafeMath&gt;::safe_div(move _21, move _47)</td></tr></table>>];
    bb15__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb16__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb18__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_48 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb19__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_19 as Continue).0: i128)<br/>_18 = _52<br/>StorageDead(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/></td></tr><tr><td align="left">_55 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb20__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb21__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb23__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_56 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb24__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_54 as Continue).0: i128)<br/>_53 = _60<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_17 = &lt;i128 as SafeMath&gt;::safe_mul(move _18, move _53)</td></tr></table>>];
    bb25__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb26__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_53)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb28__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_61 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb29__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_16 as Continue).0: i128)<br/>_15 = _65<br/>StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = _2<br/></td></tr><tr><td align="left">_68 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _69)</td></tr></table>>];
    bb30__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb31__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb33__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_70 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb34__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_74)<br/>_74 = ((_67 as Continue).0: i128)<br/>_66 = _74<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">_14 = &lt;i128 as SafeMath&gt;::safe_div(move _15, move _66)</td></tr></table>>];
    bb35__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_73)<br/>_73 = _71<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _73)</td></tr></table>>];
    bb36__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_66)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb38__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_75 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb39__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((_13 as Continue).0: i128)<br/>_12 = _79<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_11 = &lt;i128 as SafeMath&gt;::safe_mul(move _12, const _)</td></tr></table>>];
    bb40__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_78)<br/>_78 = _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb41__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb43__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_80 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb44__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_10 as Continue).0: i128)<br/>_9 = _84<br/>StorageDead(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_146 = deref_copy ((*_1).3: &amp;i64)<br/>_88 = (*_146)<br/></td></tr><tr><td align="left">_87 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _88)</td></tr></table>>];
    bb45__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb46__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb48__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_89 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _89)</td></tr></table>>];
    bb49__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_93)<br/>_93 = ((_86 as Continue).0: i128)<br/>_85 = _93<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_8 = &lt;i128 as SafeMath&gt;::safe_div(move _9, move _85)</td></tr></table>>];
    bb50__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>_90 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_92)<br/>_92 = _90<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _92)</td></tr></table>>];
    bb51__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_90)<br/>StorageDead(_85)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb53__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_94 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb54__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_7 as Continue).0: i128)<br/>_6 = _98<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_5 = &lt;i128 as Cast&gt;::cast::&lt;u64&gt;(move _6)</td></tr></table>>];
    bb55__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb56__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb58__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_99 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb59__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_4 as Continue).0: u64)<br/>_3 = _103<br/>StorageDead(_103)<br/>StorageDead(_86)<br/>StorageDead(_67)<br/>StorageDead(_54)<br/>StorageDead(_29)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_147 = deref_copy ((*_1).4: &amp;std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_110 = &amp;(*_147)<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _109)</td></tr></table>>];
    bb60__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb61__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_107 = &amp;(*_108)<br/>StorageDead(_109)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_148 = deref_copy ((*_1).5: &amp;i128)<br/>_115 = (*_148)<br/></td></tr><tr><td align="left">_114 = core::num::&lt;impl i128&gt;::unsigned_abs(move _115)</td></tr></table>>];
    bb63__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = _3<br/></td></tr><tr><td align="left">_118 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _119)</td></tr></table>>];
    bb64__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/></td></tr><tr><td align="left">_117 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _118)</td></tr></table>>];
    bb65__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_120 = discriminant(_117)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb66__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = ((_117 as Continue).0: u128)<br/>_116 = _124<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_113 = &lt;u128 as SafeMath&gt;::safe_add(move _114, move _116)</td></tr></table>>];
    bb67__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = ((_117 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_123)<br/>_123 = _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb68__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _113)</td></tr></table>>];
    bb70__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_125 = discriminant(_112)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb71__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_112 as Continue).0: u128)<br/>_111 = _129<br/>StorageDead(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>_149 = deref_copy ((*_1).6: &amp;state::oracle::StrictOraclePrice)<br/>_131 = &amp;(*_149)<br/>_130 = &amp;(*_131)<br/>StorageLive(_132)<br/>_150 = deref_copy ((*_1).7: &amp;controller::position::PositionDirection)<br/>_132 = (*_150)<br/>StorageLive(_133)<br/>_151 = deref_copy ((*_1).8: &amp;u32)<br/>_133 = (*_151)<br/>StorageLive(_134)<br/>_152 = deref_copy ((*_1).9: &amp;u32)<br/>_134 = (*_152)<br/></td></tr><tr><td align="left">_106 = calculate_free_collateral_delta_for_spot(move _107, move _111, move _130, move _132, move _133, move _134)</td></tr></table>>];
    bb72__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_112 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb73__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_111)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb75__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_135 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb76__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_105 as Continue).0: u32)<br/>_104 = _139<br/>StorageDead(_139)<br/>StorageDead(_131)<br/>StorageDead(_117)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = _3<br/>StorageLive(_142)<br/>_142 = _104<br/>_140 = (move _141, move _142)<br/>StorageDead(_142)<br/>StorageDead(_141)<br/>_0 = std::result::Result::&lt;(u64, u32), error::ErrorCode&gt;::Ok(move _140)<br/>StorageDead(_140)<br/>StorageDead(_104)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_138)<br/>_138 = _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u64, u32), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb78__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_112)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_2618 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2618 -> bb1__0_2618 [label="return"];
    bb1__0_2618 -> bb2__0_2618 [label="return"];
    bb2__0_2618 -> bb3__0_2618 [label="0"];
    bb2__0_2618 -> bb5__0_2618 [label="1"];
    bb2__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb3__0_2618 -> bb7__0_2618 [label="return"];
    bb5__0_2618 -> bb6__0_2618 [label="return"];
    bb6__0_2618 -> bb88__0_2618 [label=""];
    bb7__0_2618 -> bb8__0_2618 [label="return"];
    bb8__0_2618 -> bb9__0_2618 [label="0"];
    bb8__0_2618 -> bb10__0_2618 [label="1"];
    bb8__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb9__0_2618 -> bb12__0_2618 [label="return"];
    bb10__0_2618 -> bb11__0_2618 [label="return"];
    bb11__0_2618 -> bb88__0_2618 [label=""];
    bb12__0_2618 -> bb13__0_2618 [label="return"];
    bb13__0_2618 -> bb14__0_2618 [label="0"];
    bb13__0_2618 -> bb15__0_2618 [label="1"];
    bb13__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb14__0_2618 -> bb17__0_2618 [label="return"];
    bb15__0_2618 -> bb16__0_2618 [label="return"];
    bb16__0_2618 -> bb89__0_2618 [label=""];
    bb17__0_2618 -> bb18__0_2618 [label="return"];
    bb18__0_2618 -> bb19__0_2618 [label="0"];
    bb18__0_2618 -> bb20__0_2618 [label="1"];
    bb18__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb19__0_2618 -> bb22__0_2618 [label="return"];
    bb20__0_2618 -> bb21__0_2618 [label="return"];
    bb21__0_2618 -> bb90__0_2618 [label=""];
    bb22__0_2618 -> bb23__0_2618 [label="return"];
    bb23__0_2618 -> bb24__0_2618 [label="0"];
    bb23__0_2618 -> bb25__0_2618 [label="1"];
    bb23__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb24__0_2618 -> bb27__0_2618 [label="return"];
    bb25__0_2618 -> bb26__0_2618 [label="return"];
    bb26__0_2618 -> bb86__0_2618 [label=""];
    bb27__0_2618 -> bb28__0_2618 [label="return"];
    bb28__0_2618 -> bb29__0_2618 [label="0"];
    bb28__0_2618 -> bb30__0_2618 [label="1"];
    bb28__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb29__0_2618 -> bb32__0_2618 [label="return"];
    bb30__0_2618 -> bb31__0_2618 [label="return"];
    bb31__0_2618 -> bb86__0_2618 [label=""];
    bb32__0_2618 -> bb33__0_2618 [label="return"];
    bb33__0_2618 -> bb34__0_2618 [label="0"];
    bb33__0_2618 -> bb35__0_2618 [label="1"];
    bb33__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb34__0_2618 -> bb37__0_2618 [label="return"];
    bb35__0_2618 -> bb36__0_2618 [label="return"];
    bb36__0_2618 -> bb83__0_2618 [label=""];
    bb37__0_2618 -> bb38__0_2618 [label="return"];
    bb38__0_2618 -> bb39__0_2618 [label="0"];
    bb38__0_2618 -> bb40__0_2618 [label="1"];
    bb38__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb39__0_2618 -> bb42__0_2618 [label="return"];
    bb40__0_2618 -> bb41__0_2618 [label="return"];
    bb41__0_2618 -> bb83__0_2618 [label=""];
    bb42__0_2618 -> bb43__0_2618 [label="return"];
    bb43__0_2618 -> bb44__0_2618 [label="0"];
    bb43__0_2618 -> bb45__0_2618 [label="1"];
    bb43__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb44__0_2618 -> bb47__0_2618 [label="return"];
    bb45__0_2618 -> bb46__0_2618 [label="return"];
    bb46__0_2618 -> bb84__0_2618 [label=""];
    bb47__0_2618 -> bb48__0_2618 [label="return"];
    bb48__0_2618 -> bb49__0_2618 [label="0"];
    bb48__0_2618 -> bb50__0_2618 [label="1"];
    bb48__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb49__0_2618 -> bb52__0_2618 [label="return"];
    bb50__0_2618 -> bb51__0_2618 [label="return"];
    bb51__0_2618 -> bb81__0_2618 [label=""];
    bb52__0_2618 -> bb53__0_2618 [label="return"];
    bb53__0_2618 -> bb54__0_2618 [label="0"];
    bb53__0_2618 -> bb55__0_2618 [label="1"];
    bb53__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb54__0_2618 -> bb57__0_2618 [label="return"];
    bb55__0_2618 -> bb56__0_2618 [label="return"];
    bb56__0_2618 -> bb81__0_2618 [label=""];
    bb57__0_2618 -> bb58__0_2618 [label="return"];
    bb58__0_2618 -> bb59__0_2618 [label="0"];
    bb58__0_2618 -> bb60__0_2618 [label="1"];
    bb58__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb59__0_2618 -> bb62__0_2618 [label="return"];
    bb60__0_2618 -> bb61__0_2618 [label="return"];
    bb61__0_2618 -> bb82__0_2618 [label=""];
    bb62__0_2618 -> bb63__0_2618 [label="return"];
    bb63__0_2618 -> bb64__0_2618 [label="return"];
    bb64__0_2618 -> bb65__0_2618 [label="return"];
    bb65__0_2618 -> bb66__0_2618 [label="0"];
    bb65__0_2618 -> bb67__0_2618 [label="1"];
    bb65__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb66__0_2618 -> bb69__0_2618 [label="return"];
    bb67__0_2618 -> bb68__0_2618 [label="return"];
    bb68__0_2618 -> bb79__0_2618 [label=""];
    bb69__0_2618 -> bb70__0_2618 [label="return"];
    bb70__0_2618 -> bb71__0_2618 [label="0"];
    bb70__0_2618 -> bb72__0_2618 [label="1"];
    bb70__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb71__0_2618 -> bb74__0_2618 [label="return"];
    bb72__0_2618 -> bb73__0_2618 [label="return"];
    bb73__0_2618 -> bb79__0_2618 [label=""];
    bb74__0_2618 -> bb75__0_2618 [label="return"];
    bb75__0_2618 -> bb76__0_2618 [label="0"];
    bb75__0_2618 -> bb77__0_2618 [label="1"];
    bb75__0_2618 -> bb4__0_2618 [label="otherwise"];
    bb76__0_2618 -> bb93__0_2618 [label=""];
    bb77__0_2618 -> bb78__0_2618 [label="return"];
    bb78__0_2618 -> bb80__0_2618 [label=""];
    bb79__0_2618 -> bb80__0_2618 [label=""];
    bb80__0_2618 -> bb92__0_2618 [label=""];
    bb81__0_2618 -> bb82__0_2618 [label=""];
    bb82__0_2618 -> bb85__0_2618 [label=""];
    bb83__0_2618 -> bb84__0_2618 [label=""];
    bb84__0_2618 -> bb85__0_2618 [label=""];
    bb85__0_2618 -> bb87__0_2618 [label=""];
    bb86__0_2618 -> bb87__0_2618 [label=""];
    bb87__0_2618 -> bb91__0_2618 [label=""];
    bb88__0_2618 -> bb89__0_2618 [label=""];
    bb89__0_2618 -> bb90__0_2618 [label=""];
    bb90__0_2618 -> bb91__0_2618 [label=""];
    bb91__0_2618 -> bb92__0_2618 [label=""];
    bb92__0_2618 -> bb93__0_2618 [label=""];
}
