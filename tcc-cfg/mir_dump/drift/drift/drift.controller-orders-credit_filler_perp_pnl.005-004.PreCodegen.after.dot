digraph Mir_0_538 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn credit_filler_perp_pnl(_1: &amp;ReErased mut state::user::User, _2: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;, _3: &amp;ReErased mut state::perp_market::PerpMarket, _4: u64, _5: u64, _6: i64, _7: u64) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _8: ();<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: u64;<br align="left"/>let _11: usize;<br align="left"/>let mut _12: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, usize&gt;;<br align="left"/>let mut _13: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _14: std::result::Result&lt;usize, error::ErrorCode&gt;;<br align="left"/>let mut _15: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _16: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _17: u16;<br align="left"/>let mut _18: Closure(DefId(0:539 ~ drift[d311]::controller::orders::credit_filler_perp_pnl::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; std::result::Result&lt;usize, error::ErrorCode&gt;, []), (&amp;ReErased mut &amp;ReErased mut state::user::User, &amp;ReErased &amp;ReErased mut state::perp_market::PerpMarket)]);<br align="left"/>let mut _19: &amp;ReErased mut &amp;ReErased mut state::user::User;<br align="left"/>let mut _20: &amp;ReErased &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: usize;<br align="left"/>let _26: ();<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _28: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _29: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let mut _30: &amp;ReErased mut state::user::PerpPosition;<br align="left"/>let _31: usize;<br align="left"/>let mut _32: usize;<br align="left"/>let mut _33: bool;<br align="left"/>let mut _34: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _37: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _38: u64;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i64;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: ();<br align="left"/>let _49: ();<br align="left"/>let mut _50: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _51: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _52: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _53: &amp;ReErased mut &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut &amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _55: std::result::Result&lt;&amp;ReErased mut &amp;ReErased mut state::user::UserStats, error::ErrorCode&gt;;<br align="left"/>let mut _56: std::option::Option&lt;&amp;ReErased mut &amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _57: &amp;ReErased mut std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: &amp;ReErased mut &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _63: u64;<br align="left"/>let mut _64: i64;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: ();<br align="left"/>let _70: ();<br align="left"/>let mut _71: &amp;ReErased mut state::user::User;<br align="left"/>let mut _72: u64;<br align="left"/>let mut _73: ();<br align="left"/>let mut _74: &amp;ReErased mut state::user::UserStats;<br align="left"/>debug filler =&gt; _1;<br align="left"/>debug filler_stats =&gt; _2;<br align="left"/>debug market =&gt; _3;<br align="left"/>debug filler_reward =&gt; _4;<br align="left"/>debug quote_asset_amount =&gt; _5;<br align="left"/>debug now =&gt; _6;<br align="left"/>debug slot =&gt; _7;<br align="left"/>debug position_index =&gt; _11;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>>;
    bb0__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _4<br/>_9 = Gt(move _10, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb1__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;((*_1).4: [state::user::PerpPosition; 8])<br/>_15 = &amp;(*_16)<br/>StorageLive(_17)<br/>_17 = ((*_3).21: u16)<br/></td></tr><tr><td align="left">_14 = get_position_index(move _15, move _17)</td></tr></table>>];
    bb2__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_15)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = &amp;mut _1<br/>StorageLive(_20)<br/>_20 = &amp;_3<br/>_18 = {closure@programs/drift/src/controller/orders.rs:2455:22: 2455:25} { filler: move _19, market: move _20 }<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_13 = std::result::Result::&lt;usize, error::ErrorCode&gt;::or_else::&lt;error::ErrorCode, {closure@programs/drift/src/controller/orders.rs:2455:22: 2455:25}&gt;(move _14, move _18)</td></tr></table>>];
    bb3__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as Try&gt;::branch(move _13)</td></tr></table>>];
    bb4__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_21 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb5__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_12 as Continue).0: usize)<br/>_11 = _25<br/>StorageDead(_25)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = _11<br/>_32 = Len(((*_1).4: [state::user::PerpPosition; 8]))<br/>_33 = Lt(_31, _32)<br/></td></tr><tr><td align="left">assert(move _33, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _32, _31)</td></tr></table>>];
    bb6__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_12 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb8__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_16)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_30 = &amp;mut ((*_1).4: [state::user::PerpPosition; 8])[_31]<br/>_29 = &amp;mut (*_30)<br/>StorageLive(_34)<br/>_34 = &amp;mut (*_3)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _4<br/></td></tr><tr><td align="left">_37 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _38)</td></tr></table>>];
    bb10__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb11__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb12__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_36 as Continue).0: i64)<br/>_35 = _43<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_28 = update_quote_asset_amount(move _29, move _34, move _35)</td></tr></table>>];
    bb13__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb14__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb16__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_44 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb17__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_27 as Continue).0: ())<br/>_26 = _48<br/>StorageDead(_48)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_56 = Option::&lt;&amp;mut UserStats&gt;::as_mut(move _57)</td></tr></table>>];
    bb18__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb19__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;Option&lt;&amp;mut &amp;mut UserStats&gt; as SafeUnwrap&gt;::safe_unwrap(move _56)</td></tr></table>>];
    bb21__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;&amp;mut &amp;mut UserStats, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb22__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_58 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb23__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_54 as Continue).0: &amp;mut &amp;mut state::user::UserStats)<br/>_53 = move _62<br/>StorageDead(_62)<br/>_74 = deref_copy (*_53)<br/>_52 = &amp;mut (*_74)<br/>StorageLive(_63)<br/>_63 = _5<br/>StorageLive(_64)<br/>_64 = _6<br/></td></tr><tr><td align="left">_51 = UserStats::update_filler_volume(move _52, move _63, move _64)</td></tr></table>>];
    bb24__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb25__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _51)</td></tr></table>>];
    bb27__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>_65 = discriminant(_50)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb28__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_50 as Continue).0: ())<br/>_49 = _69<br/>StorageDead(_69)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>_8 = const ()<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_50 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb30__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_8 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;mut (*_1)<br/>StorageLive(_72)<br/>_72 = _7<br/></td></tr><tr><td align="left">_70 = User::update_last_active_slot(move _71, move _72)</td></tr></table>>];
    bb33__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_73)<br/>_73 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_538 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_538 -> bb31__0_538 [label="0"];
    bb0__0_538 -> bb1__0_538 [label="otherwise"];
    bb1__0_538 -> bb2__0_538 [label="return"];
    bb2__0_538 -> bb3__0_538 [label="return"];
    bb3__0_538 -> bb4__0_538 [label="return"];
    bb4__0_538 -> bb5__0_538 [label="0"];
    bb4__0_538 -> bb7__0_538 [label="1"];
    bb4__0_538 -> bb6__0_538 [label="otherwise"];
    bb5__0_538 -> bb9__0_538 [label="success"];
    bb7__0_538 -> bb8__0_538 [label="return"];
    bb8__0_538 -> bb36__0_538 [label=""];
    bb9__0_538 -> bb10__0_538 [label="return"];
    bb10__0_538 -> bb11__0_538 [label="return"];
    bb11__0_538 -> bb12__0_538 [label="0"];
    bb11__0_538 -> bb13__0_538 [label="1"];
    bb11__0_538 -> bb6__0_538 [label="otherwise"];
    bb12__0_538 -> bb15__0_538 [label="return"];
    bb13__0_538 -> bb14__0_538 [label="return"];
    bb14__0_538 -> bb35__0_538 [label=""];
    bb15__0_538 -> bb16__0_538 [label="return"];
    bb16__0_538 -> bb17__0_538 [label="0"];
    bb16__0_538 -> bb18__0_538 [label="1"];
    bb16__0_538 -> bb6__0_538 [label="otherwise"];
    bb17__0_538 -> bb20__0_538 [label="return"];
    bb18__0_538 -> bb19__0_538 [label="return"];
    bb19__0_538 -> bb35__0_538 [label=""];
    bb20__0_538 -> bb21__0_538 [label="return"];
    bb21__0_538 -> bb22__0_538 [label="return"];
    bb22__0_538 -> bb23__0_538 [label="0"];
    bb22__0_538 -> bb24__0_538 [label="1"];
    bb22__0_538 -> bb6__0_538 [label="otherwise"];
    bb23__0_538 -> bb26__0_538 [label="return"];
    bb24__0_538 -> bb25__0_538 [label="return"];
    bb25__0_538 -> bb34__0_538 [label=""];
    bb26__0_538 -> bb27__0_538 [label="return"];
    bb27__0_538 -> bb28__0_538 [label="0"];
    bb27__0_538 -> bb29__0_538 [label="1"];
    bb27__0_538 -> bb6__0_538 [label="otherwise"];
    bb28__0_538 -> bb32__0_538 [label=""];
    bb29__0_538 -> bb30__0_538 [label="return"];
    bb30__0_538 -> bb34__0_538 [label=""];
    bb31__0_538 -> bb32__0_538 [label=""];
    bb32__0_538 -> bb33__0_538 [label="return"];
    bb33__0_538 -> bb37__0_538 [label=""];
    bb34__0_538 -> bb36__0_538 [label=""];
    bb35__0_538 -> bb36__0_538 [label=""];
    bb36__0_538 -> bb37__0_538 [label=""];
}
