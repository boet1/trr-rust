// MIR for `state::events::<impl at programs/drift/src/state/events.rs:357:23: 357:37>::serialize` after PreCodegen

fn state::events::<impl at programs/drift/src/state/events.rs:357:23: 357:37>::serialize(_1: &OrderActionExplanation, _2: &mut W) -> std::result::Result<(), std::io::Error> {
    debug self => _1;
    debug writer => _2;
    let mut _0: std::result::Result<(), std::io::Error>;
    let _3: u8;
    let mut _4: isize;
    let _5: ();
    let mut _6: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, std::io::Error>>;
    let mut _7: std::result::Result<(), std::io::Error>;
    let mut _8: &mut W;
    let mut _9: &[u8];
    let mut _10: &[u8; 1];
    let _11: &[u8; 1];
    let _12: [u8; 1];
    let mut _13: u8;
    let mut _14: isize;
    let mut _16: !;
    let mut _17: std::result::Result<std::convert::Infallible, std::io::Error>;
    let _19: ();
    let mut _20: isize;
    let mut _21: ();
    let mut _22: isize;
    let mut _23: isize;
    let mut _24: isize;
    let mut _25: isize;
    let mut _26: isize;
    scope 1 {
        debug variant_idx => _3;
        let _15: std::result::Result<std::convert::Infallible, std::io::Error>;
        let _18: ();
        scope 2 {
            debug residual => _15;
            scope 3 {
            }
        }
        scope 4 {
            debug val => _18;
            scope 5 {
            }
        }
    }

    bb0: {
        StorageLive(_3);
        _4 = discriminant((*_1));
        switchInt(move _4) -> [0: bb3, 1: bb4, 2: bb5, 3: bb6, 4: bb7, 5: bb8, 6: bb9, 7: bb10, 8: bb11, 9: bb12, 10: bb13, 11: bb14, 12: bb15, 13: bb16, 14: bb17, 15: bb18, 16: bb19, 17: bb20, 18: bb21, 19: bb22, 20: bb1, otherwise: bb2];
    }

    bb1: {
        _3 = const 20_u8;
        goto -> bb23;
    }

    bb2: {
        unreachable;
    }

    bb3: {
        _3 = const 0_u8;
        goto -> bb23;
    }

    bb4: {
        _3 = const 1_u8;
        goto -> bb23;
    }

    bb5: {
        _3 = const 2_u8;
        goto -> bb23;
    }

    bb6: {
        _3 = const 3_u8;
        goto -> bb23;
    }

    bb7: {
        _3 = const 4_u8;
        goto -> bb23;
    }

    bb8: {
        _3 = const 5_u8;
        goto -> bb23;
    }

    bb9: {
        _3 = const 6_u8;
        goto -> bb23;
    }

    bb10: {
        _3 = const 7_u8;
        goto -> bb23;
    }

    bb11: {
        _3 = const 8_u8;
        goto -> bb23;
    }

    bb12: {
        _3 = const 9_u8;
        goto -> bb23;
    }

    bb13: {
        _3 = const 10_u8;
        goto -> bb23;
    }

    bb14: {
        _3 = const 11_u8;
        goto -> bb23;
    }

    bb15: {
        _3 = const 12_u8;
        goto -> bb23;
    }

    bb16: {
        _3 = const 13_u8;
        goto -> bb23;
    }

    bb17: {
        _3 = const 14_u8;
        goto -> bb23;
    }

    bb18: {
        _3 = const 15_u8;
        goto -> bb23;
    }

    bb19: {
        _3 = const 16_u8;
        goto -> bb23;
    }

    bb20: {
        _3 = const 17_u8;
        goto -> bb23;
    }

    bb21: {
        _3 = const 18_u8;
        goto -> bb23;
    }

    bb22: {
        _3 = const 19_u8;
        goto -> bb23;
    }

    bb23: {
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _8 = &mut (*_2);
        StorageLive(_9);
        StorageLive(_10);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = _3;
        _12 = core::num::<impl u8>::to_le_bytes(move _13) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_13);
        _11 = &_12;
        _10 = &(*_11);
        _9 = move _10 as &[u8] (PointerCoercion(Unsize));
        StorageDead(_10);
        _7 = <W as std::io::Write>::write_all(move _8, move _9) -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageDead(_9);
        StorageDead(_8);
        _6 = <std::result::Result<(), std::io::Error> as Try>::branch(move _7) -> [return: bb26, unwind: bb53];
    }

    bb26: {
        StorageDead(_7);
        _14 = discriminant(_6);
        switchInt(move _14) -> [0: bb27, 1: bb28, otherwise: bb2];
    }

    bb27: {
        StorageLive(_18);
        _18 = ((_6 as Continue).0: ());
        _5 = _18;
        StorageDead(_18);
        _22 = discriminant(_6);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_6);
        StorageDead(_5);
        StorageLive(_19);
        _20 = discriminant((*_1));
        switchInt(move _20) -> [0: bb31, 1: bb32, 2: bb33, 3: bb34, 4: bb35, 5: bb36, 6: bb37, 7: bb38, 8: bb39, 9: bb40, 10: bb41, 11: bb42, 12: bb43, 13: bb44, 14: bb45, 15: bb46, 16: bb47, 17: bb48, 18: bb49, 19: bb50, 20: bb30, otherwise: bb2];
    }

    bb28: {
        StorageLive(_15);
        _15 = move ((_6 as Break).0: std::result::Result<std::convert::Infallible, std::io::Error>);
        StorageLive(_17);
        _17 = move _15;
        _0 = <std::result::Result<(), std::io::Error> as FromResidual<std::result::Result<Infallible, std::io::Error>>>::from_residual(move _17) -> [return: bb29, unwind: bb54];
    }

    bb29: {
        StorageDead(_17);
        StorageDead(_15);
        _24 = discriminant(_6);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_3);
        goto -> bb52;
    }

    bb30: {
        _19 = const ();
        goto -> bb51;
    }

    bb31: {
        _19 = const ();
        goto -> bb51;
    }

    bb32: {
        _19 = const ();
        goto -> bb51;
    }

    bb33: {
        _19 = const ();
        goto -> bb51;
    }

    bb34: {
        _19 = const ();
        goto -> bb51;
    }

    bb35: {
        _19 = const ();
        goto -> bb51;
    }

    bb36: {
        _19 = const ();
        goto -> bb51;
    }

    bb37: {
        _19 = const ();
        goto -> bb51;
    }

    bb38: {
        _19 = const ();
        goto -> bb51;
    }

    bb39: {
        _19 = const ();
        goto -> bb51;
    }

    bb40: {
        _19 = const ();
        goto -> bb51;
    }

    bb41: {
        _19 = const ();
        goto -> bb51;
    }

    bb42: {
        _19 = const ();
        goto -> bb51;
    }

    bb43: {
        _19 = const ();
        goto -> bb51;
    }

    bb44: {
        _19 = const ();
        goto -> bb51;
    }

    bb45: {
        _19 = const ();
        goto -> bb51;
    }

    bb46: {
        _19 = const ();
        goto -> bb51;
    }

    bb47: {
        _19 = const ();
        goto -> bb51;
    }

    bb48: {
        _19 = const ();
        goto -> bb51;
    }

    bb49: {
        _19 = const ();
        goto -> bb51;
    }

    bb50: {
        _19 = const ();
        goto -> bb51;
    }

    bb51: {
        StorageDead(_19);
        StorageLive(_21);
        _21 = ();
        _0 = std::result::Result::<(), std::io::Error>::Ok(move _21);
        StorageDead(_21);
        StorageDead(_3);
        goto -> bb52;
    }

    bb52: {
        return;
    }

    bb53 (cleanup): {
        resume;
    }

    bb54 (cleanup): {
        _26 = discriminant(_6);
        goto -> bb53;
    }
}
