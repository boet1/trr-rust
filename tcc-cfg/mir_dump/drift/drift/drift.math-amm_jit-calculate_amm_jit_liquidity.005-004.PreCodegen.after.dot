digraph Mir_0_1830 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_amm_jit_liquidity(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: controller::position::PositionDirection, _3: u64, _4: std::option::Option&lt;i64&gt;, _5: u64, _6: u64, _7: u64, _8: bool) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let mut _9: u64;<br align="left"/>let _10: bool;<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: u64;<br align="left"/>let mut _13: u64;<br align="left"/>let _14: ();<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: u64;<br align="left"/>let _18: bool;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _20: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _21: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _22: controller::position::PositionDirection;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: bool;<br align="left"/>let _28: ();<br align="left"/>let mut _29: bool;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _33: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _37: controller::position::PositionDirection;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u64;<br align="left"/>let mut _43: u64;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug taker_direction =&gt; _2;<br align="left"/>debug maker_price =&gt; _3;<br align="left"/>debug valid_oracle_price =&gt; _4;<br align="left"/>debug base_asset_amount =&gt; _5;<br align="left"/>debug taker_base_asset_amount =&gt; _6;<br align="left"/>debug maker_base_asset_amount =&gt; _7;<br align="left"/>debug taker_has_limit_price =&gt; _8;<br align="left"/>debug jit_base_asset_amount =&gt; _9;<br align="left"/>debug amm_will_fill_next_round =&gt; _10;<br align="left"/>debug amm_wants_to_jit_make =&gt; _18;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>>;
    bb0__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = const 0_u64<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = _8<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb1__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = _7<br/>StorageLive(_13)<br/>_13 = _6<br/>_10 = Lt(move _12, move _13)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_10 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = _10<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = _9<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _17)<br/>StorageDead(_17)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_14 = const ()<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;((*_1).1: state::perp_market::AMM)<br/>StorageLive(_22)<br/>_22 = _2<br/></td></tr><tr><td align="left">_20 = AMM::amm_wants_to_jit_make(move _21, move _22)</td></tr></table>>];
    bb6__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb7__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_23 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb8__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_19 as Continue).0: bool)<br/>_18 = _27<br/>StorageDead(_27)<br/>StorageDead(_19)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _18<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb9__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb11__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = &amp;(*_1)<br/>StorageLive(_34)<br/>_34 = _5<br/>StorageLive(_35)<br/>_35 = _3<br/>StorageLive(_36)<br/>_36 = _4<br/>StorageLive(_37)<br/>_37 = _2<br/></td></tr><tr><td align="left">_32 = calculate_jit_base_asset_amount(move _33, move _34, move _35, move _36, move _37)</td></tr></table>>];
    bb13__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_28 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb15__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_38 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb16__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_31 as Continue).0: u64)<br/>_30 = _42<br/>StorageDead(_42)<br/>_9 = move _30<br/>StorageDead(_30)<br/>StorageDead(_31)<br/>_28 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb18__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_30)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_43)<br/>_43 = _9<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _43)<br/>StorageDead(_43)<br/>StorageDead(_18)<br/>StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1830 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1830 -> bb1__0_1830 [label="0"];
    bb0__0_1830 -> bb2__0_1830 [label="otherwise"];
    bb1__0_1830 -> bb3__0_1830 [label=""];
    bb2__0_1830 -> bb3__0_1830 [label=""];
    bb3__0_1830 -> bb5__0_1830 [label="0"];
    bb3__0_1830 -> bb4__0_1830 [label="otherwise"];
    bb4__0_1830 -> bb21__0_1830 [label=""];
    bb5__0_1830 -> bb6__0_1830 [label="return"];
    bb6__0_1830 -> bb7__0_1830 [label="return"];
    bb7__0_1830 -> bb8__0_1830 [label="0"];
    bb7__0_1830 -> bb10__0_1830 [label="1"];
    bb7__0_1830 -> bb9__0_1830 [label="otherwise"];
    bb8__0_1830 -> bb13__0_1830 [label="0"];
    bb8__0_1830 -> bb12__0_1830 [label="otherwise"];
    bb10__0_1830 -> bb11__0_1830 [label="return"];
    bb11__0_1830 -> bb20__0_1830 [label=""];
    bb12__0_1830 -> bb14__0_1830 [label="return"];
    bb13__0_1830 -> bb19__0_1830 [label=""];
    bb14__0_1830 -> bb15__0_1830 [label="return"];
    bb15__0_1830 -> bb16__0_1830 [label="0"];
    bb15__0_1830 -> bb17__0_1830 [label="1"];
    bb15__0_1830 -> bb9__0_1830 [label="otherwise"];
    bb16__0_1830 -> bb19__0_1830 [label=""];
    bb17__0_1830 -> bb18__0_1830 [label="return"];
    bb18__0_1830 -> bb20__0_1830 [label=""];
    bb19__0_1830 -> bb22__0_1830 [label=""];
    bb20__0_1830 -> bb21__0_1830 [label=""];
    bb21__0_1830 -> bb22__0_1830 [label=""];
}
