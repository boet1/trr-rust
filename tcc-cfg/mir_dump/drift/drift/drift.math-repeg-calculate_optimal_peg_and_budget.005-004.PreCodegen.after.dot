digraph Mir_0_2714 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_optimal_peg_and_budget(_1: &amp;ReErased state::perp_market::PerpMarket, _2: &amp;ReErased state::oracle::MMOraclePriceData) -&gt; std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt;<br align="left"/>let _3: u64;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _5: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _6: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _11: u64;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _14: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _15: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: u128;<br align="left"/>let _21: i64;<br align="left"/>let mut _22: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let _23: u64;<br align="left"/>let mut _24: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _25: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: u64;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _35: u128;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: isize;<br align="left"/>let _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _40: !;<br align="left"/>let mut _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _42: u128;<br align="left"/>let _43: i128;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _45: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _46: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _47: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _48: u128;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: i128;<br align="left"/>let mut _54: bool;<br align="left"/>let _55: ();<br align="left"/>let mut _56: bool;<br align="left"/>let mut _57: u128;<br align="left"/>let mut _58: u128;<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _60: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _61: i128;<br align="left"/>let mut _62: i128;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: u128;<br align="left"/>let _68: i64;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _70: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _73: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _74: u128;<br align="left"/>let mut _75: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _76: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _77: u128;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _79: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _80: u64;<br align="left"/>let mut _81: isize;<br align="left"/>let _82: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _83: !;<br align="left"/>let mut _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _85: u128;<br align="left"/>let mut _86: u128;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _88: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _89: u32;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _91: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _92: u32;<br align="left"/>let mut _93: isize;<br align="left"/>let _94: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _95: !;<br align="left"/>let mut _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _97: u32;<br align="left"/>let mut _98: isize;<br align="left"/>let _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _100: !;<br align="left"/>let mut _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _102: u128;<br align="left"/>let mut _103: isize;<br align="left"/>let _104: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _105: !;<br align="left"/>let mut _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _107: u128;<br align="left"/>let mut _108: isize;<br align="left"/>let _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _110: !;<br align="left"/>let mut _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _112: u128;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _115: !;<br align="left"/>let mut _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _117: i64;<br align="left"/>let _118: i64;<br align="left"/>let mut _119: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _120: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _121: i64;<br align="left"/>let mut _122: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _123: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _124: u64;<br align="left"/>let mut _125: isize;<br align="left"/>let _126: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _127: !;<br align="left"/>let mut _128: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _129: i64;<br align="left"/>let mut _130: i64;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _135: i64;<br align="left"/>let mut _136: bool;<br align="left"/>let mut _137: i64;<br align="left"/>let mut _138: i64;<br align="left"/>let mut _139: i64;<br align="left"/>let _140: u64;<br align="left"/>let mut _141: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _142: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _143: i64;<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _145: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _146: i64;<br align="left"/>let mut _147: i64;<br align="left"/>let mut _148: i64;<br align="left"/>let mut _149: isize;<br align="left"/>let _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _151: !;<br align="left"/>let mut _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _153: i64;<br align="left"/>let mut _154: isize;<br align="left"/>let _155: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _156: !;<br align="left"/>let mut _157: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _158: u64;<br align="left"/>let _159: u64;<br align="left"/>let mut _160: bool;<br align="left"/>let mut _161: i64;<br align="left"/>let mut _162: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _163: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _164: u64;<br align="left"/>let mut _165: u64;<br align="left"/>let mut _166: isize;<br align="left"/>let _167: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _168: !;<br align="left"/>let mut _169: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _170: u64;<br align="left"/>let mut _171: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _172: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _173: u64;<br align="left"/>let mut _174: u64;<br align="left"/>let mut _175: isize;<br align="left"/>let _176: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _177: !;<br align="left"/>let mut _178: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _179: u64;<br align="left"/>let mut _180: u128;<br align="left"/>let mut _181: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _182: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _183: u128;<br align="left"/>let mut _184: u128;<br align="left"/>let mut _185: u64;<br align="left"/>let mut _186: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _187: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _188: u64;<br align="left"/>let mut _189: isize;<br align="left"/>let _190: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _191: !;<br align="left"/>let mut _192: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _193: u64;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: u128;<br align="left"/>let mut _199: u128;<br align="left"/>let mut _200: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _201: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _202: i128;<br align="left"/>let mut _203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _204: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _205: &amp;ReErased state::perp_market::AMM;<br align="left"/>let _206: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _207: u128;<br align="left"/>let mut _208: isize;<br align="left"/>let _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _210: !;<br align="left"/>let mut _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _212: i128;<br align="left"/>let mut _213: isize;<br align="left"/>let _214: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _215: !;<br align="left"/>let mut _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _217: u128;<br align="left"/>let mut _218: bool;<br align="left"/>let mut _219: u128;<br align="left"/>let mut _220: (u128, u128, bool);<br align="left"/>let mut _221: u128;<br align="left"/>let mut _222: u128;<br align="left"/>let mut _223: bool;<br align="left"/>debug market =&gt; _1;<br align="left"/>debug mm_oracle_price_data =&gt; _2;<br align="left"/>debug reserve_price_before =&gt; _3;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug fee_budget =&gt; _12;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug target_price_i64 =&gt; _21;<br align="left"/>debug target_price =&gt; _23;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug optimal_peg =&gt; _32;<br align="left"/>debug residual =&gt; _39;<br align="left"/>debug val =&gt; _42;<br align="left"/>debug optimal_peg_cost =&gt; _43;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug check_lower_bound =&gt; _54;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug half_max_price_spread =&gt; _68;<br align="left"/>debug residual =&gt; _82;<br align="left"/>debug val =&gt; _85;<br align="left"/>debug residual =&gt; _94;<br align="left"/>debug val =&gt; _97;<br align="left"/>debug residual =&gt; _99;<br align="left"/>debug val =&gt; _102;<br align="left"/>debug residual =&gt; _104;<br align="left"/>debug val =&gt; _107;<br align="left"/>debug residual =&gt; _109;<br align="left"/>debug val =&gt; _112;<br align="left"/>debug residual =&gt; _114;<br align="left"/>debug val =&gt; _117;<br align="left"/>debug target_price_gap =&gt; _118;<br align="left"/>debug residual =&gt; _126;<br align="left"/>debug val =&gt; _129;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>debug mark_adj =&gt; _140;<br align="left"/>debug residual =&gt; _150;<br align="left"/>debug val =&gt; _153;<br align="left"/>debug residual =&gt; _155;<br align="left"/>debug val =&gt; _158;<br align="left"/>debug target_price =&gt; _159;<br align="left"/>debug residual =&gt; _167;<br align="left"/>debug val =&gt; _170;<br align="left"/>debug residual =&gt; _176;<br align="left"/>debug val =&gt; _179;<br align="left"/>debug residual =&gt; _190;<br align="left"/>debug val =&gt; _193;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug residual =&gt; _209;<br align="left"/>debug val =&gt; _212;<br align="left"/>debug residual =&gt; _214;<br align="left"/>debug val =&gt; _217;<br align="left"/>>;
    bb0__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;((*_1).1: state::perp_market::AMM)<br/></td></tr><tr><td align="left">_5 = AMM::reserve_price(move _6)</td></tr></table>>];
    bb1__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_4 as Continue).0: u64)<br/>_3 = _11<br/>StorageDead(_11)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = &amp;(*_1)<br/></td></tr><tr><td align="left">_14 = calculate_fee_pool(move _15)</td></tr></table>>];
    bb4__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_10)<br/>_10 = _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_16 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_13 as Continue).0: u128)<br/>_12 = _20<br/>StorageDead(_20)<br/>StorageDead(_13)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;(*_2)<br/></td></tr><tr><td align="left">_21 = MMOraclePriceData::get_price(move _22)</td></tr></table>>];
    bb10__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = _21<br/></td></tr><tr><td align="left">_25 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _26)</td></tr></table>>];
    bb13__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">_24 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _25)</td></tr></table>>];
    bb14__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>_27 = discriminant(_24)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb15__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_24 as Continue).0: u64)<br/>_23 = _31<br/>StorageDead(_31)<br/>StorageDead(_24)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = (((*_1).1: state::perp_market::AMM).6: u128)<br/>StorageLive(_36)<br/>_36 = (((*_1).1: state::perp_market::AMM).5: u128)<br/>StorageLive(_37)<br/>_37 = _23<br/></td></tr><tr><td align="left">_34 = calculate_peg_from_target_price(move _35, move _36, move _37)</td></tr></table>>];
    bb16__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_24 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb17__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb19__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_38 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb20__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_33 as Continue).0: u128)<br/>_32 = _42<br/>StorageDead(_42)<br/>StorageDead(_33)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;((*_1).1: state::perp_market::AMM)<br/>_46 = &amp;(*_47)<br/>StorageLive(_48)<br/>_48 = _32<br/></td></tr><tr><td align="left">_45 = calculate_repeg_cost(move _46, move _48)</td></tr></table>>];
    bb21__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_41)<br/>_41 = _39<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _41)</td></tr></table>>];
    bb22__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_39)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb24__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>_49 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb25__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_44 as Continue).0: i128)<br/>_43 = _53<br/>StorageDead(_53)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageLive(_54)<br/>_54 = const true<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _12<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = _43<br/></td></tr><tr><td align="left">_61 = std::cmp::max::&lt;i128&gt;(const 0_i128, move _62)</td></tr></table>>];
    bb26__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb27__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/></td></tr><tr><td align="left">_60 = &lt;i128 as Cast&gt;::cast::&lt;u128&gt;(move _61)</td></tr></table>>];
    bb29__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb30__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_63 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb31__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_59 as Continue).0: u128)<br/>_58 = _67<br/>StorageDead(_67)<br/>_56 = Lt(move _57, move _58)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb32__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb33__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = _23<br/></td></tr><tr><td align="left">_79 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _80)</td></tr></table>>];
    bb35__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb37__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_81 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb38__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_85)<br/>_85 = ((_78 as Continue).0: u128)<br/>_77 = _85<br/>StorageDead(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = (((*_1).1: state::perp_market::AMM).64: u32)<br/></td></tr><tr><td align="left">_91 = &lt;u32 as SafeMath&gt;::safe_div(move _92, const 2_u32)</td></tr></table>>];
    bb39__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_82)<br/>_82 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_84)<br/>_84 = _82<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _84)</td></tr></table>>];
    bb40__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb42__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_93 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _93)</td></tr></table>>];
    bb43__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_90 as Continue).0: u32)<br/>_89 = _97<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_88 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _89)</td></tr></table>>];
    bb44__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_96)<br/>_96 = _94<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _96)</td></tr></table>>];
    bb45__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb47__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_98 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _98)</td></tr></table>>];
    bb48__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_87 as Continue).0: u128)<br/>_86 = _102<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">_76 = &lt;u128 as SafeMath&gt;::safe_mul(move _77, move _86)</td></tr></table>>];
    bb49__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_101)<br/>_101 = _99<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _101)</td></tr></table>>];
    bb50__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">_75 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _76)</td></tr></table>>];
    bb52__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>_103 = discriminant(_75)<br/></td></tr><tr><td align="left">switchInt(move _103)</td></tr></table>>];
    bb53__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_75 as Continue).0: u128)<br/>_74 = _107<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_73 = &lt;u128 as SafeMath&gt;::safe_div(move _74, const _)</td></tr></table>>];
    bb54__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_75 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_106)<br/>_106 = _104<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _106)</td></tr></table>>];
    bb55__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">_72 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _73)</td></tr></table>>];
    bb57__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>_108 = discriminant(_72)<br/></td></tr><tr><td align="left">switchInt(move _108)</td></tr></table>>];
    bb58__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_72 as Continue).0: u128)<br/>_71 = _112<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_70 = &lt;u128 as Cast&gt;::cast::&lt;i64&gt;(move _71)</td></tr></table>>];
    bb59__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_72 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_111)<br/>_111 = _109<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _111)</td></tr></table>>];
    bb60__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb62__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_113 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb63__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_69 as Continue).0: i64)<br/>_68 = _117<br/>StorageDead(_117)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = _3<br/></td></tr><tr><td align="left">_123 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _124)</td></tr></table>>];
    bb64__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_116)<br/>_116 = _114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _116)</td></tr></table>>];
    bb65__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _123)</td></tr></table>>];
    bb67__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_125 = discriminant(_122)<br/></td></tr><tr><td align="left">switchInt(move _125)</td></tr></table>>];
    bb68__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_122 as Continue).0: i64)<br/>_121 = _129<br/>StorageDead(_129)<br/>StorageLive(_130)<br/>_130 = _21<br/></td></tr><tr><td align="left">_120 = &lt;i64 as SafeMath&gt;::safe_sub(move _121, move _130)</td></tr></table>>];
    bb69__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_122 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_128)<br/>_128 = _126<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _128)</td></tr></table>>];
    bb70__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_126)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _120)</td></tr></table>>];
    bb72__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_131 = discriminant(_119)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb73__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_119 as Continue).0: i64)<br/>_118 = _135<br/>StorageDead(_135)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = _118<br/></td></tr><tr><td align="left">_137 = core::num::&lt;impl i64&gt;::abs(move _138)</td></tr></table>>];
    bb74__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_119 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_134)<br/>_134 = _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb75__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageLive(_139)<br/>_139 = _68<br/>_136 = Gt(move _137, move _139)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb77__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = _118<br/></td></tr><tr><td align="left">_146 = core::num::&lt;impl i64&gt;::abs(move _147)</td></tr></table>>];
    bb78__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageLive(_148)<br/>_148 = _68<br/></td></tr><tr><td align="left">_145 = &lt;i64 as SafeMath&gt;::safe_sub(move _146, move _148)</td></tr></table>>];
    bb79__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb80__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_149 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _149)</td></tr></table>>];
    bb81__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_144 as Continue).0: i64)<br/>_143 = _153<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_142 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _143)</td></tr></table>>];
    bb82__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_152)<br/>_152 = _150<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _152)</td></tr></table>>];
    bb83__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/></td></tr><tr><td align="left">_141 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _142)</td></tr></table>>];
    bb85__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_154 = discriminant(_141)<br/></td></tr><tr><td align="left">switchInt(move _154)</td></tr></table>>];
    bb86__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = ((_141 as Continue).0: u64)<br/>_140 = _158<br/>StorageDead(_158)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_161 = _118<br/>_160 = Lt(move _161, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _160)</td></tr></table>>];
    bb87__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = ((_141 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_157)<br/>_157 = _155<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _157)</td></tr></table>>];
    bb88__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>_164 = _3<br/>StorageLive(_165)<br/>_165 = _140<br/></td></tr><tr><td align="left">_163 = &lt;u64 as SafeMath&gt;::safe_add(move _164, move _165)</td></tr></table>>];
    bb90__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = _3<br/>StorageLive(_174)<br/>_174 = _140<br/></td></tr><tr><td align="left">_172 = &lt;u64 as SafeMath&gt;::safe_sub(move _173, move _174)</td></tr></table>>];
    bb91__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _163)</td></tr></table>>];
    bb92__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>_166 = discriminant(_162)<br/></td></tr><tr><td align="left">switchInt(move _166)</td></tr></table>>];
    bb93__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_170)<br/>_170 = ((_162 as Continue).0: u64)<br/>_159 = _170<br/>StorageDead(_170)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_162 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_169)<br/>_169 = _167<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _169)</td></tr></table>>];
    bb95__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_173)<br/></td></tr><tr><td align="left">_171 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _172)</td></tr></table>>];
    bb97__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_175 = discriminant(_171)<br/></td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb98__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_179)<br/>_179 = ((_171 as Continue).0: u64)<br/>_159 = _179<br/>StorageDead(_179)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_176)<br/>_176 = ((_171 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_178)<br/>_178 = _176<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _178)</td></tr></table>>];
    bb100__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = (((*_1).1: state::perp_market::AMM).6: u128)<br/>StorageLive(_184)<br/>_184 = (((*_1).1: state::perp_market::AMM).5: u128)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = _159<br/></td></tr><tr><td align="left">_187 = &lt;u64 as Cast&gt;::cast::&lt;u64&gt;(move _188)</td></tr></table>>];
    bb102__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/></td></tr><tr><td align="left">_186 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _187)</td></tr></table>>];
    bb103__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>_189 = discriminant(_186)<br/></td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb104__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>_193 = ((_186 as Continue).0: u64)<br/>_185 = _193<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_182 = calculate_peg_from_target_price(move _183, move _184, move _185)</td></tr></table>>];
    bb105__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_190)<br/>_190 = ((_186 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_192)<br/>_192 = _190<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _192)</td></tr></table>>];
    bb106__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">_181 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _182)</td></tr></table>>];
    bb108__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_194 = discriminant(_181)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb109__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_181 as Continue).0: u128)<br/>_180 = _198<br/>StorageDead(_198)<br/>_32 = move _180<br/>StorageDead(_180)<br/>StorageDead(_186)<br/>StorageDead(_181)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_206 = &amp;((*_1).1: state::perp_market::AMM)<br/>_205 = &amp;(*_206)<br/>StorageLive(_207)<br/>_207 = _32<br/></td></tr><tr><td align="left">_204 = calculate_repeg_cost(move _205, move _207)</td></tr></table>>];
    bb110__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_181 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb111__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _204)</td></tr></table>>];
    bb113__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_208 = discriminant(_203)<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb114__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = ((_203 as Continue).0: i128)<br/>_202 = _212<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">_201 = &lt;i128 as Cast&gt;::cast::&lt;u128&gt;(move _202)</td></tr></table>>];
    bb115__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_203 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_211)<br/>_211 = _209<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _211)</td></tr></table>>];
    bb116__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_209)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">_200 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _201)</td></tr></table>>];
    bb118__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_213 = discriminant(_200)<br/></td></tr><tr><td align="left">switchInt(move _213)</td></tr></table>>];
    bb119__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_217)<br/>_217 = ((_200 as Continue).0: u128)<br/>_199 = _217<br/>StorageDead(_217)<br/>_12 = move _199<br/>StorageDead(_199)<br/>StorageDead(_206)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/>_54 = const false<br/>_55 = const ()<br/>StorageDead(_159)<br/>StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_214)<br/>_214 = ((_200 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_216)<br/>_216 = _214<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, bool), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _216)</td></tr></table>>];
    bb121__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>_219 = _12<br/>_218 = Eq(move _219, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _218)</td></tr></table>>];
    bb123__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>_54 = const false<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/>_55 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_118)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>_221 = _32<br/>StorageLive(_222)<br/>_222 = _12<br/>StorageLive(_223)<br/>_223 = _54<br/>_220 = (move _221, move _222, move _223)<br/>StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/>_0 = std::result::Result::&lt;(u128, u128, bool), error::ErrorCode&gt;::Ok(move _220)<br/>StorageDead(_220)<br/>StorageDead(_54)<br/>StorageDead(_43)<br/>StorageDead(_32)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_12)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_206)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_186)<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb139__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_75)<br/>StorageDead(_72)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb141__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb145__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb146__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb147__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb148__0_2714 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2714 -> bb1__0_2714 [label="return"];
    bb1__0_2714 -> bb2__0_2714 [label="return"];
    bb2__0_2714 -> bb3__0_2714 [label="0"];
    bb2__0_2714 -> bb5__0_2714 [label="1"];
    bb2__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb3__0_2714 -> bb7__0_2714 [label="return"];
    bb5__0_2714 -> bb6__0_2714 [label="return"];
    bb6__0_2714 -> bb147__0_2714 [label=""];
    bb7__0_2714 -> bb8__0_2714 [label="return"];
    bb8__0_2714 -> bb9__0_2714 [label="0"];
    bb8__0_2714 -> bb10__0_2714 [label="1"];
    bb8__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb9__0_2714 -> bb12__0_2714 [label="return"];
    bb10__0_2714 -> bb11__0_2714 [label="return"];
    bb11__0_2714 -> bb146__0_2714 [label=""];
    bb12__0_2714 -> bb13__0_2714 [label="return"];
    bb13__0_2714 -> bb14__0_2714 [label="return"];
    bb14__0_2714 -> bb15__0_2714 [label="0"];
    bb14__0_2714 -> bb16__0_2714 [label="1"];
    bb14__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb15__0_2714 -> bb18__0_2714 [label="return"];
    bb16__0_2714 -> bb17__0_2714 [label="return"];
    bb17__0_2714 -> bb145__0_2714 [label=""];
    bb18__0_2714 -> bb19__0_2714 [label="return"];
    bb19__0_2714 -> bb20__0_2714 [label="0"];
    bb19__0_2714 -> bb21__0_2714 [label="1"];
    bb19__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb20__0_2714 -> bb23__0_2714 [label="return"];
    bb21__0_2714 -> bb22__0_2714 [label="return"];
    bb22__0_2714 -> bb144__0_2714 [label=""];
    bb23__0_2714 -> bb24__0_2714 [label="return"];
    bb24__0_2714 -> bb25__0_2714 [label="0"];
    bb24__0_2714 -> bb26__0_2714 [label="1"];
    bb24__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb25__0_2714 -> bb28__0_2714 [label="return"];
    bb26__0_2714 -> bb27__0_2714 [label="return"];
    bb27__0_2714 -> bb143__0_2714 [label=""];
    bb28__0_2714 -> bb29__0_2714 [label="return"];
    bb29__0_2714 -> bb30__0_2714 [label="return"];
    bb30__0_2714 -> bb31__0_2714 [label="0"];
    bb30__0_2714 -> bb32__0_2714 [label="1"];
    bb30__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb31__0_2714 -> bb35__0_2714 [label="0"];
    bb31__0_2714 -> bb34__0_2714 [label="otherwise"];
    bb32__0_2714 -> bb33__0_2714 [label="return"];
    bb33__0_2714 -> bb142__0_2714 [label=""];
    bb34__0_2714 -> bb36__0_2714 [label="return"];
    bb35__0_2714 -> bb127__0_2714 [label=""];
    bb36__0_2714 -> bb37__0_2714 [label="return"];
    bb37__0_2714 -> bb38__0_2714 [label="0"];
    bb37__0_2714 -> bb39__0_2714 [label="1"];
    bb37__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb38__0_2714 -> bb41__0_2714 [label="return"];
    bb39__0_2714 -> bb40__0_2714 [label="return"];
    bb40__0_2714 -> bb140__0_2714 [label=""];
    bb41__0_2714 -> bb42__0_2714 [label="return"];
    bb42__0_2714 -> bb43__0_2714 [label="0"];
    bb42__0_2714 -> bb44__0_2714 [label="1"];
    bb42__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb43__0_2714 -> bb46__0_2714 [label="return"];
    bb44__0_2714 -> bb45__0_2714 [label="return"];
    bb45__0_2714 -> bb136__0_2714 [label=""];
    bb46__0_2714 -> bb47__0_2714 [label="return"];
    bb47__0_2714 -> bb48__0_2714 [label="0"];
    bb47__0_2714 -> bb49__0_2714 [label="1"];
    bb47__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb48__0_2714 -> bb51__0_2714 [label="return"];
    bb49__0_2714 -> bb50__0_2714 [label="return"];
    bb50__0_2714 -> bb136__0_2714 [label=""];
    bb51__0_2714 -> bb52__0_2714 [label="return"];
    bb52__0_2714 -> bb53__0_2714 [label="0"];
    bb52__0_2714 -> bb54__0_2714 [label="1"];
    bb52__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb53__0_2714 -> bb56__0_2714 [label="return"];
    bb54__0_2714 -> bb55__0_2714 [label="return"];
    bb55__0_2714 -> bb137__0_2714 [label=""];
    bb56__0_2714 -> bb57__0_2714 [label="return"];
    bb57__0_2714 -> bb58__0_2714 [label="0"];
    bb57__0_2714 -> bb59__0_2714 [label="1"];
    bb57__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb58__0_2714 -> bb61__0_2714 [label="return"];
    bb59__0_2714 -> bb60__0_2714 [label="return"];
    bb60__0_2714 -> bb138__0_2714 [label=""];
    bb61__0_2714 -> bb62__0_2714 [label="return"];
    bb62__0_2714 -> bb63__0_2714 [label="0"];
    bb62__0_2714 -> bb64__0_2714 [label="1"];
    bb62__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb63__0_2714 -> bb66__0_2714 [label="return"];
    bb64__0_2714 -> bb65__0_2714 [label="return"];
    bb65__0_2714 -> bb139__0_2714 [label=""];
    bb66__0_2714 -> bb67__0_2714 [label="return"];
    bb67__0_2714 -> bb68__0_2714 [label="0"];
    bb67__0_2714 -> bb69__0_2714 [label="1"];
    bb67__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb68__0_2714 -> bb71__0_2714 [label="return"];
    bb69__0_2714 -> bb70__0_2714 [label="return"];
    bb70__0_2714 -> bb134__0_2714 [label=""];
    bb71__0_2714 -> bb72__0_2714 [label="return"];
    bb72__0_2714 -> bb73__0_2714 [label="0"];
    bb72__0_2714 -> bb74__0_2714 [label="1"];
    bb72__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb73__0_2714 -> bb76__0_2714 [label="return"];
    bb74__0_2714 -> bb75__0_2714 [label="return"];
    bb75__0_2714 -> bb134__0_2714 [label=""];
    bb76__0_2714 -> bb122__0_2714 [label="0"];
    bb76__0_2714 -> bb77__0_2714 [label="otherwise"];
    bb77__0_2714 -> bb78__0_2714 [label="return"];
    bb78__0_2714 -> bb79__0_2714 [label="return"];
    bb79__0_2714 -> bb80__0_2714 [label="return"];
    bb80__0_2714 -> bb81__0_2714 [label="0"];
    bb80__0_2714 -> bb82__0_2714 [label="1"];
    bb80__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb81__0_2714 -> bb84__0_2714 [label="return"];
    bb82__0_2714 -> bb83__0_2714 [label="return"];
    bb83__0_2714 -> bb132__0_2714 [label=""];
    bb84__0_2714 -> bb85__0_2714 [label="return"];
    bb85__0_2714 -> bb86__0_2714 [label="0"];
    bb85__0_2714 -> bb87__0_2714 [label="1"];
    bb85__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb86__0_2714 -> bb90__0_2714 [label="0"];
    bb86__0_2714 -> bb89__0_2714 [label="otherwise"];
    bb87__0_2714 -> bb88__0_2714 [label="return"];
    bb88__0_2714 -> bb132__0_2714 [label=""];
    bb89__0_2714 -> bb91__0_2714 [label="return"];
    bb90__0_2714 -> bb96__0_2714 [label="return"];
    bb91__0_2714 -> bb92__0_2714 [label="return"];
    bb92__0_2714 -> bb93__0_2714 [label="0"];
    bb92__0_2714 -> bb94__0_2714 [label="1"];
    bb92__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb93__0_2714 -> bb101__0_2714 [label=""];
    bb94__0_2714 -> bb95__0_2714 [label="return"];
    bb95__0_2714 -> bb130__0_2714 [label=""];
    bb96__0_2714 -> bb97__0_2714 [label="return"];
    bb97__0_2714 -> bb98__0_2714 [label="0"];
    bb97__0_2714 -> bb99__0_2714 [label="1"];
    bb97__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb98__0_2714 -> bb101__0_2714 [label=""];
    bb99__0_2714 -> bb100__0_2714 [label="return"];
    bb100__0_2714 -> bb130__0_2714 [label=""];
    bb101__0_2714 -> bb102__0_2714 [label="return"];
    bb102__0_2714 -> bb103__0_2714 [label="return"];
    bb103__0_2714 -> bb104__0_2714 [label="0"];
    bb103__0_2714 -> bb105__0_2714 [label="1"];
    bb103__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb104__0_2714 -> bb107__0_2714 [label="return"];
    bb105__0_2714 -> bb106__0_2714 [label="return"];
    bb106__0_2714 -> bb129__0_2714 [label=""];
    bb107__0_2714 -> bb108__0_2714 [label="return"];
    bb108__0_2714 -> bb109__0_2714 [label="0"];
    bb108__0_2714 -> bb110__0_2714 [label="1"];
    bb108__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb109__0_2714 -> bb112__0_2714 [label="return"];
    bb110__0_2714 -> bb111__0_2714 [label="return"];
    bb111__0_2714 -> bb129__0_2714 [label=""];
    bb112__0_2714 -> bb113__0_2714 [label="return"];
    bb113__0_2714 -> bb114__0_2714 [label="0"];
    bb113__0_2714 -> bb115__0_2714 [label="1"];
    bb113__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb114__0_2714 -> bb117__0_2714 [label="return"];
    bb115__0_2714 -> bb116__0_2714 [label="return"];
    bb116__0_2714 -> bb128__0_2714 [label=""];
    bb117__0_2714 -> bb118__0_2714 [label="return"];
    bb118__0_2714 -> bb119__0_2714 [label="0"];
    bb118__0_2714 -> bb120__0_2714 [label="1"];
    bb118__0_2714 -> bb4__0_2714 [label="otherwise"];
    bb119__0_2714 -> bb126__0_2714 [label=""];
    bb120__0_2714 -> bb121__0_2714 [label="return"];
    bb121__0_2714 -> bb128__0_2714 [label=""];
    bb122__0_2714 -> bb124__0_2714 [label="0"];
    bb122__0_2714 -> bb123__0_2714 [label="otherwise"];
    bb123__0_2714 -> bb125__0_2714 [label=""];
    bb124__0_2714 -> bb125__0_2714 [label=""];
    bb125__0_2714 -> bb126__0_2714 [label=""];
    bb126__0_2714 -> bb127__0_2714 [label=""];
    bb127__0_2714 -> bb148__0_2714 [label=""];
    bb128__0_2714 -> bb131__0_2714 [label=""];
    bb129__0_2714 -> bb131__0_2714 [label=""];
    bb130__0_2714 -> bb131__0_2714 [label=""];
    bb131__0_2714 -> bb133__0_2714 [label=""];
    bb132__0_2714 -> bb133__0_2714 [label=""];
    bb133__0_2714 -> bb135__0_2714 [label=""];
    bb134__0_2714 -> bb135__0_2714 [label=""];
    bb135__0_2714 -> bb141__0_2714 [label=""];
    bb136__0_2714 -> bb137__0_2714 [label=""];
    bb137__0_2714 -> bb138__0_2714 [label=""];
    bb138__0_2714 -> bb139__0_2714 [label=""];
    bb139__0_2714 -> bb140__0_2714 [label=""];
    bb140__0_2714 -> bb141__0_2714 [label=""];
    bb141__0_2714 -> bb142__0_2714 [label=""];
    bb142__0_2714 -> bb143__0_2714 [label=""];
    bb143__0_2714 -> bb144__0_2714 [label=""];
    bb144__0_2714 -> bb145__0_2714 [label=""];
    bb145__0_2714 -> bb146__0_2714 [label=""];
    bb146__0_2714 -> bb147__0_2714 [label=""];
    bb147__0_2714 -> bb148__0_2714 [label=""];
}
