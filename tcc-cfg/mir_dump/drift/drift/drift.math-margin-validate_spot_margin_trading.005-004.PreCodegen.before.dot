digraph Mir_0_2474 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::margin::validate_spot_margin_trading(_1: &amp;ReErased state::user::User, _2: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _3: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _4: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: !;<br align="left"/>let _8: ();<br align="left"/>let mut _9: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _10: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let mut _11: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: std::option::Option&lt;&amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _15: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _16: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _17: isize;<br align="left"/>let mut _18: !;<br align="left"/>let _19: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _20: bool;<br align="left"/>let mut _21: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _22: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _24: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _25: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _26: &amp;ReErased u16;<br align="left"/>let _27: &amp;ReErased u16;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _33: ();<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _35: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _38: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _39: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _40: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let _41: state::perp_market::ContractTier;<br align="left"/>let mut _42: ();<br align="left"/>let _43: error::ErrorCode;<br align="left"/>let _44: ();<br align="left"/>let mut _45: &amp;ReErased str;<br align="left"/>let _46: &amp;ReErased str;<br align="left"/>let mut _47: &amp;ReErased std::string::String;<br align="left"/>let _48: &amp;ReErased std::string::String;<br align="left"/>let _49: std::string::String;<br align="left"/>let _50: std::string::String;<br align="left"/>let mut _51: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _52: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _53: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _54: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _55: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _56: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _57: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _59: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _60: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased error::ErrorCode;<br align="left"/>let _62: &amp;ReErased error::ErrorCode;<br align="left"/>let _63: ();<br align="left"/>let mut _64: &amp;ReErased str;<br align="left"/>let _65: &amp;ReErased str;<br align="left"/>let mut _66: &amp;ReErased std::string::String;<br align="left"/>let _67: &amp;ReErased std::string::String;<br align="left"/>let _68: std::string::String;<br align="left"/>let _69: std::string::String;<br align="left"/>let mut _70: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _71: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _72: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _73: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _74: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _76: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _78: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _79: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased u16;<br align="left"/>let _81: &amp;ReErased u16;<br align="left"/>let _82: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _83: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _84: error::ErrorCode;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: ();<br align="left"/>let mut _90: ();<br align="left"/>let mut _91: i128;<br align="left"/>let _92: ();<br align="left"/>let mut _93: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _94: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let mut _95: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let _96: ();<br align="left"/>let mut _97: std::option::Option&lt;&amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _98: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _99: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: !;<br align="left"/>let _102: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _103: i64;<br align="left"/>let _104: ();<br align="left"/>let mut _105: bool;<br align="left"/>let mut _106: i64;<br align="left"/>let _107: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _108: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _109: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _110: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _111: &amp;ReErased u16;<br align="left"/>let _112: &amp;ReErased u16;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _115: !;<br align="left"/>let mut _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _117: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _118: i128;<br align="left"/>let mut _119: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _120: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _121: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _122: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _123: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _124: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _125: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _126: isize;<br align="left"/>let _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _128: !;<br align="left"/>let mut _129: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _130: i128;<br align="left"/>let _131: ();<br align="left"/>let mut _132: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _133: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _134: bool;<br align="left"/>let mut _135: i128;<br align="left"/>let mut _136: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _137: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _138: i128;<br align="left"/>let mut _139: i128;<br align="left"/>let mut _140: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _141: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _142: i64;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _147: i128;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: i128;<br align="left"/>let mut _153: ();<br align="left"/>let _154: error::ErrorCode;<br align="left"/>let _155: ();<br align="left"/>let mut _156: &amp;ReErased str;<br align="left"/>let _157: &amp;ReErased str;<br align="left"/>let mut _158: &amp;ReErased std::string::String;<br align="left"/>let _159: &amp;ReErased std::string::String;<br align="left"/>let _160: std::string::String;<br align="left"/>let _161: std::string::String;<br align="left"/>let mut _162: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _164: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _165: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _166: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _167: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _168: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _170: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _171: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _172: &amp;ReErased error::ErrorCode;<br align="left"/>let _173: &amp;ReErased error::ErrorCode;<br align="left"/>let _174: ();<br align="left"/>let mut _175: &amp;ReErased str;<br align="left"/>let _176: &amp;ReErased str;<br align="left"/>let mut _177: &amp;ReErased std::string::String;<br align="left"/>let _178: &amp;ReErased std::string::String;<br align="left"/>let _179: std::string::String;<br align="left"/>let _180: std::string::String;<br align="left"/>let mut _181: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _182: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _183: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _184: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _185: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _186: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _187: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _188: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _189: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _190: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _191: &amp;ReErased u16;<br align="left"/>let _192: &amp;ReErased u16;<br align="left"/>let mut _193: error::ErrorCode;<br align="left"/>let mut _194: isize;<br align="left"/>let _195: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _196: !;<br align="left"/>let mut _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _198: ();<br align="left"/>let _199: i64;<br align="left"/>let mut _200: bool;<br align="left"/>let mut _201: i64;<br align="left"/>let _202: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _203: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _204: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _205: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _206: &amp;ReErased u16;<br align="left"/>let _207: &amp;ReErased u16;<br align="left"/>let mut _208: isize;<br align="left"/>let _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _210: !;<br align="left"/>let mut _211: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _212: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _213: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _214: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _215: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _216: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _217: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _218: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _219: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _220: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _221: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _222: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _223: isize;<br align="left"/>let _224: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _225: !;<br align="left"/>let mut _226: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _227: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _228: i128;<br align="left"/>let mut _229: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _230: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _231: i128;<br align="left"/>let mut _232: i64;<br align="left"/>let mut _233: i64;<br align="left"/>let mut _234: bool;<br align="left"/>let mut _235: u32;<br align="left"/>let mut _236: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _237: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _238: i64;<br align="left"/>let mut _239: isize;<br align="left"/>let _240: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _241: !;<br align="left"/>let mut _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _243: i128;<br align="left"/>let mut _244: i128;<br align="left"/>let mut _245: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _246: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _247: i128;<br align="left"/>let mut _248: i128;<br align="left"/>let mut _249: isize;<br align="left"/>let _250: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _251: !;<br align="left"/>let mut _252: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _253: i128;<br align="left"/>let mut _254: i128;<br align="left"/>let _255: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _256: &amp;ReErased state::user::User;<br align="left"/>let _257: ();<br align="left"/>let mut _258: bool;<br align="left"/>let mut _259: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _260: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _261: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _262: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _263: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _264: isize;<br align="left"/>let _265: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _266: !;<br align="left"/>let mut _267: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _268: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _269: i128;<br align="left"/>let mut _270: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _271: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _272: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _273: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _274: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _275: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _276: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _277: isize;<br align="left"/>let _278: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _279: !;<br align="left"/>let mut _280: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _281: i128;<br align="left"/>let _282: ();<br align="left"/>let mut _283: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _284: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _285: bool;<br align="left"/>let mut _286: i128;<br align="left"/>let mut _287: bool;<br align="left"/>let mut _288: i128;<br align="left"/>let mut _289: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _290: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _291: i128;<br align="left"/>let mut _292: i128;<br align="left"/>let mut _293: isize;<br align="left"/>let _294: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _295: !;<br align="left"/>let mut _296: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _297: i128;<br align="left"/>let mut _298: ();<br align="left"/>let _299: error::ErrorCode;<br align="left"/>let _300: ();<br align="left"/>let mut _301: &amp;ReErased str;<br align="left"/>let _302: &amp;ReErased str;<br align="left"/>let mut _303: &amp;ReErased std::string::String;<br align="left"/>let _304: &amp;ReErased std::string::String;<br align="left"/>let _305: std::string::String;<br align="left"/>let _306: std::string::String;<br align="left"/>let mut _307: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _308: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _309: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _310: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _311: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _312: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _313: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _314: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _315: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _316: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _317: &amp;ReErased error::ErrorCode;<br align="left"/>let _318: &amp;ReErased error::ErrorCode;<br align="left"/>let _319: ();<br align="left"/>let mut _320: &amp;ReErased str;<br align="left"/>let _321: &amp;ReErased str;<br align="left"/>let mut _322: error::ErrorCode;<br align="left"/>let mut _323: isize;<br align="left"/>let _324: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _325: !;<br align="left"/>let mut _326: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _327: ();<br align="left"/>let mut _328: ();<br align="left"/>let mut _329: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _330: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _331: &amp;ReErased state::perp_market::ContractTier;<br align="left"/>let mut _332: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _333: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _334: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _335: isize;<br align="left"/>let mut _336: isize;<br align="left"/>let mut _337: isize;<br align="left"/>let mut _338: isize;<br align="left"/>let mut _339: isize;<br align="left"/>let mut _340: isize;<br align="left"/>let mut _341: isize;<br align="left"/>let mut _342: isize;<br align="left"/>let mut _343: isize;<br align="left"/>let mut _344: isize;<br align="left"/>let mut _345: isize;<br align="left"/>let mut _346: isize;<br align="left"/>let mut _347: isize;<br align="left"/>let mut _348: isize;<br align="left"/>let mut _349: isize;<br align="left"/>let mut _350: isize;<br align="left"/>let mut _351: isize;<br align="left"/>let mut _352: isize;<br align="left"/>let mut _353: isize;<br align="left"/>let mut _354: isize;<br align="left"/>debug user =&gt; _1;<br align="left"/>debug perp_market_map =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug oracle_map =&gt; _4;<br align="left"/>debug iter =&gt; _11;<br align="left"/>debug perp_position =&gt; _19;<br align="left"/>debug perp_market =&gt; _22;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug error_code =&gt; _43;<br align="left"/>debug res =&gt; _50;<br align="left"/>debug res =&gt; _69;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug total_open_bids_value =&gt; _91;<br align="left"/>debug iter =&gt; _95;<br align="left"/>debug spot_position =&gt; _102;<br align="left"/>debug asks =&gt; _103;<br align="left"/>debug spot_market =&gt; _107;<br align="left"/>debug residual =&gt; _114;<br align="left"/>debug val =&gt; _117;<br align="left"/>debug signed_token_amount =&gt; _118;<br align="left"/>debug residual =&gt; _127;<br align="left"/>debug val =&gt; _130;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug error_code =&gt; _154;<br align="left"/>debug res =&gt; _161;<br align="left"/>debug res =&gt; _180;<br align="left"/>debug residual =&gt; _195;<br align="left"/>debug val =&gt; _198;<br align="left"/>debug bids =&gt; _199;<br align="left"/>debug spot_market =&gt; _202;<br align="left"/>debug residual =&gt; _209;<br align="left"/>debug val =&gt; _212;<br align="left"/>debug oracle_price_data =&gt; _213;<br align="left"/>debug residual =&gt; _224;<br align="left"/>debug val =&gt; _227;<br align="left"/>debug open_bids_value =&gt; _228;<br align="left"/>debug residual =&gt; _240;<br align="left"/>debug val =&gt; _243;<br align="left"/>debug residual =&gt; _250;<br align="left"/>debug val =&gt; _253;<br align="left"/>debug quote_token_amount =&gt; _254;<br align="left"/>debug quote_spot_position =&gt; _255;<br align="left"/>debug quote_spot_market =&gt; _260;<br align="left"/>debug residual =&gt; _265;<br align="left"/>debug val =&gt; _268;<br align="left"/>debug residual =&gt; _278;<br align="left"/>debug val =&gt; _281;<br align="left"/>debug residual =&gt; _294;<br align="left"/>debug val =&gt; _297;<br align="left"/>debug error_code =&gt; _299;<br align="left"/>debug res =&gt; _306;<br align="left"/>debug residual =&gt; _324;<br align="left"/>debug val =&gt; _327;<br align="left"/>>;
    bb0__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_1).20: bool)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;((*_1).4: [state::user::PerpPosition; 8])<br/></td></tr><tr><td align="left">_9 = &lt;&amp;[PerpPosition; 8] as IntoIterator&gt;::into_iter(move _10)</td></tr></table>>];
    bb2__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;mut _11<br/>_15 = &amp;mut (*_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as Iterator&gt;::next(move _15)</td></tr></table>>];
    bb4__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_17 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb5__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_14 as Some).0: &amp;state::user::PerpPosition)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_19)<br/></td></tr><tr><td align="left">_20 = PerpPosition::is_available(move _21)</td></tr></table>>];
    bb6__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb7__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_8 = const ()<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_90)<br/>_90 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _90)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb9__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_2)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;((*_19).13: u16)<br/>_26 = &amp;(*_27)<br/></td></tr><tr><td align="left">_24 = PerpMarketMap::&lt;'_&gt;::get_ref(move _25, move _26)</td></tr></table>>];
    bb11__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb12__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_28 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb13__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_23 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_22 = move _32<br/>StorageDead(_32)<br/>_337 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;_22<br/></td></tr><tr><td align="left">_38 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb14__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb15__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>_335 = discriminant(_23)<br/>StorageDead(_27)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_37 = &amp;((*_38).24: state::perp_market::ContractTier)<br/>StorageLive(_40)<br/>_331 = const _<br/>_40 = &amp;(*_331)<br/></td></tr><tr><td align="left">_36 = &lt;state::perp_market::ContractTier as PartialEq&gt;::ne(move _37, move _40)</td></tr></table>>];
    bb17__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb18__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_42)<br/>_42 = ()<br/>_35 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _42)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_43)<br/>_43 = error::ErrorCode::IsolatedAssetTierViolation<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_330 = const _<br/>_54 = &amp;(*_330)<br/>_53 = &amp;(*_54)<br/>_52 = move _53 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_53)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_43<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _61)</td></tr></table>>];
    bb20__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_59 = [move _60]<br/>StorageDead(_60)<br/>_58 = &amp;_59<br/>_57 = &amp;(*_58)<br/>_56 = move _57 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_51 = Arguments::&lt;'_&gt;::new_v1(move _52, move _56)</td></tr></table>>];
    bb21__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_50 = format(move _51)</td></tr></table>>];
    bb22__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_54)<br/>_49 = move _50<br/>StorageDead(_50)<br/>_48 = &amp;_49<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = &lt;String as Deref&gt;::deref(move _47)</td></tr></table>>];
    bb23__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_45 = &amp;(*_46)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_44 = solana_program::log::sol_log(move _45)</td></tr></table>>];
    bb24__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb25__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_44)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_329 = const _<br/>_73 = &amp;(*_329)<br/>_72 = &amp;(*_73)<br/>_71 = move _72 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_72)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;_22<br/></td></tr><tr><td align="left">_82 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _83)</td></tr></table>>];
    bb26__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_81 = &amp;((*_82).21: u16)<br/>_80 = &amp;(*_81)<br/></td></tr><tr><td align="left">_79 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _80)</td></tr></table>>];
    bb27__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>_78 = [move _79]<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/>_75 = move _76 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_70 = Arguments::&lt;'_&gt;::new_v1(move _71, move _75)</td></tr></table>>];
    bb28__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = format(move _70)</td></tr></table>>];
    bb29__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_73)<br/>_68 = move _69<br/>StorageDead(_69)<br/>_67 = &amp;_68<br/>_66 = &amp;(*_67)<br/></td></tr><tr><td align="left">_65 = &lt;String as Deref&gt;::deref(move _66)</td></tr></table>>];
    bb30__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_64 = &amp;(*_65)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">_63 = solana_program::log::sol_log(move _64)</td></tr></table>>];
    bb31__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb32__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_63)<br/>StorageLive(_84)<br/>_84 = _43<br/>_35 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _84)<br/>StorageDead(_84)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb34__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_85 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb35__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_34 as Continue).0: ())<br/>_33 = _89<br/>StorageDead(_89)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>_13 = const ()<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb36__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb37__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb38__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_91)<br/>_91 = const 0_i128<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;((*_1).3: [state::user::SpotPosition; 8])<br/></td></tr><tr><td align="left">_93 = &lt;&amp;[SpotPosition; 8] as IntoIterator&gt;::into_iter(move _94)</td></tr></table>>];
    bb41__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageLive(_95)<br/>_95 = move _93<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;mut _95<br/>_98 = &amp;mut (*_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as Iterator&gt;::next(move _98)</td></tr></table>>];
    bb43__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_100 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb44__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = ((_97 as Some).0: &amp;state::user::SpotPosition)<br/>StorageLive(_103)<br/>_103 = ((*_102).2: i64)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _103<br/>_105 = Lt(move _106, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb45__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_92 = const ()<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageLive(_254)<br/>_254 = const 0_i128<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>_256 = &amp;(*_1)<br/></td></tr><tr><td align="left">_255 = User::get_quote_spot_position(move _256)</td></tr></table>>];
    bb46__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;(*_3)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;((*_102).4: u16)<br/>_111 = &amp;(*_112)<br/></td></tr><tr><td align="left">_109 = SpotMarketMap::&lt;'_&gt;::get_ref(move _110, move _111)</td></tr></table>>];
    bb47__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">_108 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _109)</td></tr></table>>];
    bb48__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_113 = discriminant(_108)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb49__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = move ((_108 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_107 = move _117<br/>StorageDead(_117)<br/>_341 = discriminant(_108)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_121 = &amp;(*_102)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = &amp;_107<br/>_124 = &amp;(*_125)<br/></td></tr><tr><td align="left">_123 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _124)</td></tr></table>>];
    bb50__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_108 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_116)<br/>_116 = _114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _116)</td></tr></table>>];
    bb51__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/>_339 = discriminant(_108)<br/>StorageDead(_112)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_122 = &amp;(*_123)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">_120 = SpotPosition::get_signed_token_amount(move _121, move _122)</td></tr></table>>];
    bb53__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">_119 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _120)</td></tr></table>>];
    bb54__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>_126 = discriminant(_119)<br/></td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb55__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_119 as Continue).0: i128)<br/>_118 = _130<br/>StorageDead(_130)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = _118<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = _103<br/></td></tr><tr><td align="left">_141 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _142)</td></tr></table>>];
    bb56__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_127)<br/>_127 = ((_119 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_129)<br/>_129 = _127<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _129)</td></tr></table>>];
    bb57__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _141)</td></tr></table>>];
    bb59__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_143 = discriminant(_140)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb60__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_140 as Continue).0: i128)<br/>_139 = _147<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_137 = &lt;i128 as SafeMath&gt;::safe_add(move _138, move _139)</td></tr></table>>];
    bb61__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_140 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_146)<br/>_146 = _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb62__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_139)<br/>StorageDead(_138)<br/>StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _137)</td></tr></table>>];
    bb64__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_148 = discriminant(_136)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb65__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_136 as Continue).0: i128)<br/>_135 = _152<br/>StorageDead(_152)<br/>_134 = Ge(move _135, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _134)</td></tr></table>>];
    bb66__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_136 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb67__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageLive(_153)<br/>_153 = ()<br/>_133 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _153)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageLive(_154)<br/>_154 = error::ErrorCode::MarginTradingDisabled<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_333 = const _<br/>_165 = &amp;(*_333)<br/>_164 = &amp;(*_165)<br/>_163 = move _164 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_164)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>_173 = &amp;_154<br/>_172 = &amp;(*_173)<br/></td></tr><tr><td align="left">_171 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _172)</td></tr></table>>];
    bb70__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_172)<br/>_170 = [move _171]<br/>StorageDead(_171)<br/>_169 = &amp;_170<br/>_168 = &amp;(*_169)<br/>_167 = move _168 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">_162 = Arguments::&lt;'_&gt;::new_v1(move _163, move _167)</td></tr></table>>];
    bb71__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_161 = format(move _162)</td></tr></table>>];
    bb72__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_173)<br/>StorageDead(_170)<br/>StorageDead(_169)<br/>StorageDead(_165)<br/>_160 = move _161<br/>StorageDead(_161)<br/>_159 = &amp;_160<br/>_158 = &amp;(*_159)<br/></td></tr><tr><td align="left">_157 = &lt;String as Deref&gt;::deref(move _158)</td></tr></table>>];
    bb73__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">_156 = &amp;(*_157)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_155 = solana_program::log::sol_log(move _156)</td></tr></table>>];
    bb74__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/></td></tr><tr><td align="left">drop(_160)</td></tr></table>>];
    bb75__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_155)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>_332 = const _<br/>_184 = &amp;(*_332)<br/>_183 = &amp;(*_184)<br/>_182 = move _183 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_183)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = &amp;((*_102).4: u16)<br/>_191 = &amp;(*_192)<br/></td></tr><tr><td align="left">_190 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _191)</td></tr></table>>];
    bb76__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>_189 = [move _190]<br/>StorageDead(_190)<br/>_188 = &amp;_189<br/>_187 = &amp;(*_188)<br/>_186 = move _187 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_181 = Arguments::&lt;'_&gt;::new_v1(move _182, move _186)</td></tr></table>>];
    bb77__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = format(move _181)</td></tr></table>>];
    bb78__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_192)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_184)<br/>_179 = move _180<br/>StorageDead(_180)<br/>_178 = &amp;_179<br/>_177 = &amp;(*_178)<br/></td></tr><tr><td align="left">_176 = &lt;String as Deref&gt;::deref(move _177)</td></tr></table>>];
    bb79__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">_175 = &amp;(*_176)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_174 = solana_program::log::sol_log(move _175)</td></tr></table>>];
    bb80__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/></td></tr><tr><td align="left">drop(_179)</td></tr></table>>];
    bb81__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_179)<br/>StorageDead(_178)<br/>StorageDead(_176)<br/>StorageDead(_174)<br/>StorageLive(_193)<br/>_193 = _154<br/>_133 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _193)<br/>StorageDead(_193)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/></td></tr><tr><td align="left">_132 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _133)</td></tr></table>>];
    bb83__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_194 = discriminant(_132)<br/></td></tr><tr><td align="left">switchInt(move _194)</td></tr></table>>];
    bb84__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>_198 = ((_132 as Continue).0: ())<br/>_131 = _198<br/>StorageDead(_198)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>_104 = const ()<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb85__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_195)<br/>_195 = ((_132 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_197)<br/>_197 = _195<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _197)</td></tr></table>>];
    bb86__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_104 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_199)<br/>_199 = ((*_102).1: i64)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_201 = _199<br/>_200 = Gt(move _201, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _200)</td></tr></table>>];
    bb90__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = &amp;(*_3)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;((*_102).4: u16)<br/>_206 = &amp;(*_207)<br/></td></tr><tr><td align="left">_204 = SpotMarketMap::&lt;'_&gt;::get_ref(move _205, move _206)</td></tr></table>>];
    bb91__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">_203 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _204)</td></tr></table>>];
    bb92__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>_208 = discriminant(_203)<br/></td></tr><tr><td align="left">switchInt(move _208)</td></tr></table>>];
    bb93__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_212)<br/>_212 = move ((_203 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_202 = move _212<br/>StorageDead(_212)<br/>_345 = discriminant(_203)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>_216 = &amp;mut (*_4)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_222 = &amp;_202<br/></td></tr><tr><td align="left">_221 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _222)</td></tr></table>>];
    bb94__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = ((_203 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_211)<br/>_211 = _209<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _211)</td></tr></table>>];
    bb95__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_209)<br/>_343 = discriminant(_203)<br/>StorageDead(_207)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">_220 = &amp;(*_221)<br/>StorageDead(_222)<br/></td></tr><tr><td align="left">_219 = SpotMarket::oracle_id(move _220)</td></tr></table>>];
    bb97__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/>_218 = &amp;_219<br/>_217 = &amp;(*_218)<br/></td></tr><tr><td align="left">_215 = OracleMap::&lt;'_&gt;::get_price_data(move _216, move _217)</td></tr></table>>];
    bb98__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">_214 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _215)</td></tr></table>>];
    bb99__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>_223 = discriminant(_214)<br/></td></tr><tr><td align="left">switchInt(move _223)</td></tr></table>>];
    bb100__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_227)<br/>_227 = ((_214 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_213 = _227<br/>StorageDead(_227)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_214)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>_233 = _199<br/>_234 = Eq(_233, const i64::MIN)<br/></td></tr><tr><td align="left">assert(!move _234, &quot;attempt to negate `{}`, which would overflow&quot;, _233)</td></tr></table>>];
    bb101__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageLive(_224)<br/>_224 = ((_214 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_226)<br/>_226 = _224<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _226)</td></tr></table>>];
    bb102__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_214)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_232 = Neg(move _233)<br/>StorageDead(_233)<br/>_231 = move _232 as i128 (IntToInt)<br/>StorageDead(_232)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>_237 = &amp;_202<br/></td></tr><tr><td align="left">_236 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _237)</td></tr></table>>];
    bb104__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_237)<br/>_235 = ((*_236).41: u32)<br/>StorageLive(_238)<br/>_238 = ((*_213).0: i64)<br/></td></tr><tr><td align="left">_230 = get_token_value(move _231, move _235, move _238)</td></tr></table>>];
    bb105__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">_229 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _230)</td></tr></table>>];
    bb106__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>_239 = discriminant(_229)<br/></td></tr><tr><td align="left">switchInt(move _239)</td></tr></table>>];
    bb107__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_229 as Continue).0: i128)<br/>_228 = _243<br/>StorageDead(_243)<br/>StorageDead(_236)<br/>StorageDead(_229)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = _91<br/>StorageLive(_248)<br/>_248 = _228<br/></td></tr><tr><td align="left">_246 = &lt;i128 as SafeMath&gt;::safe_add(move _247, move _248)</td></tr></table>>];
    bb108__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageLive(_240)<br/>_240 = ((_229 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_242)<br/>_242 = _240<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _242)</td></tr></table>>];
    bb109__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/>StorageDead(_236)<br/>StorageDead(_229)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">_245 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _246)</td></tr></table>>];
    bb111__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>_249 = discriminant(_245)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb112__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_253)<br/>_253 = ((_245 as Continue).0: i128)<br/>_244 = _253<br/>StorageDead(_253)<br/>_91 = move _244<br/>StorageDead(_244)<br/>StorageDead(_245)<br/>_96 = const ()<br/>StorageDead(_228)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb113__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>_250 = ((_245 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_252)<br/>_252 = _250<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _252)</td></tr></table>>];
    bb114__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_250)<br/>StorageDead(_244)<br/>StorageDead(_245)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb116__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>_96 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>_12 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>_259 = &amp;(*_255)<br/></td></tr><tr><td align="left">_258 = SpotPosition::is_available(move _259)</td></tr></table>>];
    bb119__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left">switchInt(move _258)</td></tr></table>>];
    bb120__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>_257 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>_263 = &amp;(*_3)<br/></td></tr><tr><td align="left">_262 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _263)</td></tr></table>>];
    bb122__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/></td></tr><tr><td align="left">_261 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _262)</td></tr></table>>];
    bb123__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>_264 = discriminant(_261)<br/></td></tr><tr><td align="left">switchInt(move _264)</td></tr></table>>];
    bb124__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageLive(_268)<br/>_268 = move ((_261 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_260 = move _268<br/>StorageDead(_268)<br/>_349 = discriminant(_261)<br/>StorageDead(_261)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = &amp;(*_255)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>StorageLive(_276)<br/>_276 = &amp;_260<br/>_275 = &amp;(*_276)<br/></td></tr><tr><td align="left">_274 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _275)</td></tr></table>>];
    bb125__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_265)<br/>_265 = ((_261 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_267)<br/>_267 = _265<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _267)</td></tr></table>>];
    bb126__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>StorageDead(_265)<br/>_347 = discriminant(_261)<br/>StorageDead(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_273 = &amp;(*_274)<br/>StorageDead(_275)<br/></td></tr><tr><td align="left">_271 = SpotPosition::get_signed_token_amount(move _272, move _273)</td></tr></table>>];
    bb128__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_272)<br/></td></tr><tr><td align="left">_270 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _271)</td></tr></table>>];
    bb129__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>_277 = discriminant(_270)<br/></td></tr><tr><td align="left">switchInt(move _277)</td></tr></table>>];
    bb130__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_270 as Continue).0: i128)<br/>_269 = _281<br/>StorageDead(_281)<br/>_254 = move _269<br/>StorageDead(_269)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageDead(_270)<br/>_257 = const ()<br/></td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb131__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_270 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_280)<br/>_280 = _278<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _280)</td></tr></table>>];
    bb132__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_269)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb133__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_257)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_286 = _91<br/>_285 = Eq(move _286, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _285)</td></tr></table>>];
    bb135__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_286)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>_291 = _254<br/>StorageLive(_292)<br/>_292 = _91<br/></td></tr><tr><td align="left">_290 = &lt;i128 as SafeMath&gt;::safe_add(move _291, move _292)</td></tr></table>>];
    bb137__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">_289 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _290)</td></tr></table>>];
    bb138__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>_293 = discriminant(_289)<br/></td></tr><tr><td align="left">switchInt(move _293)</td></tr></table>>];
    bb139__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_297)<br/>_297 = ((_289 as Continue).0: i128)<br/>_288 = _297<br/>StorageDead(_297)<br/>_287 = Ge(move _288, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _287)</td></tr></table>>];
    bb140__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_294)<br/>_294 = ((_289 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_296)<br/>_296 = _294<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _296)</td></tr></table>>];
    bb141__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageDead(_294)<br/>StorageDead(_289)<br/>StorageDead(_288)<br/>StorageDead(_287)<br/>StorageDead(_285)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_288)<br/>StorageLive(_298)<br/>_298 = ()<br/>_284 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _298)<br/>StorageDead(_298)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>StorageDead(_288)<br/>StorageLive(_299)<br/>_299 = error::ErrorCode::MarginTradingDisabled<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>StorageLive(_310)<br/>_334 = const _<br/>_310 = &amp;(*_334)<br/>_309 = &amp;(*_310)<br/>_308 = move _309 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_309)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;_299<br/>_317 = &amp;(*_318)<br/></td></tr><tr><td align="left">_316 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _317)</td></tr></table>>];
    bb144__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>_315 = [move _316]<br/>StorageDead(_316)<br/>_314 = &amp;_315<br/>_313 = &amp;(*_314)<br/>_312 = move _313 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_313)<br/></td></tr><tr><td align="left">_307 = Arguments::&lt;'_&gt;::new_v1(move _308, move _312)</td></tr></table>>];
    bb145__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/>StorageDead(_308)<br/></td></tr><tr><td align="left">_306 = format(move _307)</td></tr></table>>];
    bb146__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_318)<br/>StorageDead(_315)<br/>StorageDead(_314)<br/>StorageDead(_310)<br/>_305 = move _306<br/>StorageDead(_306)<br/>_304 = &amp;_305<br/>_303 = &amp;(*_304)<br/></td></tr><tr><td align="left">_302 = &lt;String as Deref&gt;::deref(move _303)</td></tr></table>>];
    bb147__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_301 = &amp;(*_302)<br/>StorageDead(_303)<br/></td></tr><tr><td align="left">_300 = solana_program::log::sol_log(move _301)</td></tr></table>>];
    bb148__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/></td></tr><tr><td align="left">drop(_305)</td></tr></table>>];
    bb149__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_304)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_321 = const &quot;Open bids leads to increased borrow for spot market 0&quot;<br/>_320 = &amp;(*_321)<br/></td></tr><tr><td align="left">_319 = solana_program::log::sol_log(move _320)</td></tr></table>>];
    bb150__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_320)<br/>StorageDead(_321)<br/>StorageDead(_319)<br/>StorageLive(_322)<br/>_322 = _299<br/>_284 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _322)<br/>StorageDead(_322)<br/>StorageDead(_299)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">_283 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _284)</td></tr></table>>];
    bb152__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>_323 = discriminant(_283)<br/></td></tr><tr><td align="left">switchInt(move _323)</td></tr></table>>];
    bb153__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_327)<br/>_327 = ((_283 as Continue).0: ())<br/>_282 = _327<br/>StorageDead(_327)<br/>StorageDead(_283)<br/>StorageDead(_282)<br/>StorageLive(_328)<br/>_328 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _328)<br/>StorageDead(_328)<br/>StorageDead(_255)<br/>StorageDead(_254)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_324)<br/>_324 = ((_283 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_326)<br/>_326 = _324<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _326)</td></tr></table>>];
    bb155__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_326)<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageDead(_282)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb157__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_260)<br/>StorageDead(_258)<br/>StorageDead(_257)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb158__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_255)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/></td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb161__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb163__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/></td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb165__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb166__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb169__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left">return</td></tr></table>>];
    bb171__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">171 (cleanup)</td></tr><tr><td align="left">drop(_305)</td></tr></table>>];
    bb172__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">172 (cleanup)</td></tr><tr><td align="left">drop(_260)</td></tr></table>>];
    bb173__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">173 (cleanup)</td></tr><tr><td align="left">drop(_202)</td></tr></table>>];
    bb174__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">174 (cleanup)</td></tr><tr><td align="left">drop(_179)</td></tr></table>>];
    bb175__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">175 (cleanup)</td></tr><tr><td align="left">drop(_160)</td></tr></table>>];
    bb176__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">176 (cleanup)</td></tr><tr><td align="left">drop(_107)</td></tr></table>>];
    bb177__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">177 (cleanup)</td></tr><tr><td align="left">drop(_68)</td></tr></table>>];
    bb178__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">178 (cleanup)</td></tr><tr><td align="left">drop(_49)</td></tr></table>>];
    bb179__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">179 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb180__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">180 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb181__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">181 (cleanup)</td></tr><tr><td align="left" balign="left">_351 = discriminant(_261)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb182__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">182 (cleanup)</td></tr><tr><td align="left" balign="left">_352 = discriminant(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb183__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">183 (cleanup)</td></tr><tr><td align="left" balign="left">_353 = discriminant(_108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_2474 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">184 (cleanup)</td></tr><tr><td align="left" balign="left">_354 = discriminant(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_2474 -> bb40__0_2474 [label="0"];
    bb0__0_2474 -> bb1__0_2474 [label="otherwise"];
    bb1__0_2474 -> bb2__0_2474 [label="return"];
    bb2__0_2474 -> bb3__0_2474 [label=""];
    bb3__0_2474 -> bb4__0_2474 [label="return"];
    bb4__0_2474 -> bb7__0_2474 [label="0"];
    bb4__0_2474 -> bb5__0_2474 [label="1"];
    bb4__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb5__0_2474 -> bb8__0_2474 [label="return"];
    bb7__0_2474 -> bb169__0_2474 [label=""];
    bb8__0_2474 -> bb10__0_2474 [label="0"];
    bb8__0_2474 -> bb9__0_2474 [label="otherwise"];
    bb9__0_2474 -> bb39__0_2474 [label=""];
    bb10__0_2474 -> bb11__0_2474 [label="return"];
    bb11__0_2474 -> bb12__0_2474 [label="return"];
    bb11__0_2474 -> bb180__0_2474 [label="unwind"];
    bb12__0_2474 -> bb13__0_2474 [label="0"];
    bb12__0_2474 -> bb14__0_2474 [label="1"];
    bb12__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb13__0_2474 -> bb16__0_2474 [label="return"];
    bb13__0_2474 -> bb179__0_2474 [label="unwind"];
    bb14__0_2474 -> bb15__0_2474 [label="return"];
    bb14__0_2474 -> bb184__0_2474 [label="unwind"];
    bb15__0_2474 -> bb168__0_2474 [label=""];
    bb16__0_2474 -> bb17__0_2474 [label="return"];
    bb16__0_2474 -> bb179__0_2474 [label="unwind"];
    bb17__0_2474 -> bb19__0_2474 [label="0"];
    bb17__0_2474 -> bb18__0_2474 [label="otherwise"];
    bb18__0_2474 -> bb33__0_2474 [label=""];
    bb19__0_2474 -> bb20__0_2474 [label="return"];
    bb19__0_2474 -> bb179__0_2474 [label="unwind"];
    bb20__0_2474 -> bb21__0_2474 [label="return"];
    bb20__0_2474 -> bb179__0_2474 [label="unwind"];
    bb21__0_2474 -> bb22__0_2474 [label="return"];
    bb21__0_2474 -> bb179__0_2474 [label="unwind"];
    bb22__0_2474 -> bb23__0_2474 [label="return"];
    bb22__0_2474 -> bb178__0_2474 [label="unwind"];
    bb23__0_2474 -> bb24__0_2474 [label="return"];
    bb23__0_2474 -> bb178__0_2474 [label="unwind"];
    bb24__0_2474 -> bb25__0_2474 [label="return"];
    bb24__0_2474 -> bb179__0_2474 [label="unwind"];
    bb25__0_2474 -> bb26__0_2474 [label="return"];
    bb25__0_2474 -> bb179__0_2474 [label="unwind"];
    bb26__0_2474 -> bb27__0_2474 [label="return"];
    bb26__0_2474 -> bb179__0_2474 [label="unwind"];
    bb27__0_2474 -> bb28__0_2474 [label="return"];
    bb27__0_2474 -> bb179__0_2474 [label="unwind"];
    bb28__0_2474 -> bb29__0_2474 [label="return"];
    bb28__0_2474 -> bb179__0_2474 [label="unwind"];
    bb29__0_2474 -> bb30__0_2474 [label="return"];
    bb29__0_2474 -> bb177__0_2474 [label="unwind"];
    bb30__0_2474 -> bb31__0_2474 [label="return"];
    bb30__0_2474 -> bb177__0_2474 [label="unwind"];
    bb31__0_2474 -> bb32__0_2474 [label="return"];
    bb31__0_2474 -> bb179__0_2474 [label="unwind"];
    bb32__0_2474 -> bb33__0_2474 [label=""];
    bb33__0_2474 -> bb34__0_2474 [label="return"];
    bb33__0_2474 -> bb179__0_2474 [label="unwind"];
    bb34__0_2474 -> bb35__0_2474 [label="0"];
    bb34__0_2474 -> bb36__0_2474 [label="1"];
    bb34__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb35__0_2474 -> bb38__0_2474 [label="return"];
    bb35__0_2474 -> bb180__0_2474 [label="unwind"];
    bb36__0_2474 -> bb37__0_2474 [label="return"];
    bb36__0_2474 -> bb179__0_2474 [label="unwind"];
    bb37__0_2474 -> bb168__0_2474 [label="return"];
    bb37__0_2474 -> bb180__0_2474 [label="unwind"];
    bb38__0_2474 -> bb39__0_2474 [label=""];
    bb39__0_2474 -> bb3__0_2474 [label=""];
    bb40__0_2474 -> bb41__0_2474 [label="return"];
    bb41__0_2474 -> bb42__0_2474 [label=""];
    bb42__0_2474 -> bb43__0_2474 [label="return"];
    bb43__0_2474 -> bb45__0_2474 [label="0"];
    bb43__0_2474 -> bb44__0_2474 [label="1"];
    bb43__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb44__0_2474 -> bb88__0_2474 [label="0"];
    bb44__0_2474 -> bb46__0_2474 [label="otherwise"];
    bb45__0_2474 -> bb118__0_2474 [label="return"];
    bb46__0_2474 -> bb47__0_2474 [label="return"];
    bb47__0_2474 -> bb48__0_2474 [label="return"];
    bb47__0_2474 -> bb180__0_2474 [label="unwind"];
    bb48__0_2474 -> bb49__0_2474 [label="0"];
    bb48__0_2474 -> bb50__0_2474 [label="1"];
    bb48__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb49__0_2474 -> bb52__0_2474 [label="return"];
    bb49__0_2474 -> bb176__0_2474 [label="unwind"];
    bb50__0_2474 -> bb51__0_2474 [label="return"];
    bb50__0_2474 -> bb183__0_2474 [label="unwind"];
    bb51__0_2474 -> bb165__0_2474 [label=""];
    bb52__0_2474 -> bb53__0_2474 [label="return"];
    bb52__0_2474 -> bb176__0_2474 [label="unwind"];
    bb53__0_2474 -> bb54__0_2474 [label="return"];
    bb53__0_2474 -> bb176__0_2474 [label="unwind"];
    bb54__0_2474 -> bb55__0_2474 [label="0"];
    bb54__0_2474 -> bb56__0_2474 [label="1"];
    bb54__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb55__0_2474 -> bb58__0_2474 [label="return"];
    bb55__0_2474 -> bb176__0_2474 [label="unwind"];
    bb56__0_2474 -> bb57__0_2474 [label="return"];
    bb56__0_2474 -> bb176__0_2474 [label="unwind"];
    bb57__0_2474 -> bb164__0_2474 [label=""];
    bb58__0_2474 -> bb59__0_2474 [label="return"];
    bb58__0_2474 -> bb176__0_2474 [label="unwind"];
    bb59__0_2474 -> bb60__0_2474 [label="0"];
    bb59__0_2474 -> bb61__0_2474 [label="1"];
    bb59__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb60__0_2474 -> bb63__0_2474 [label="return"];
    bb60__0_2474 -> bb176__0_2474 [label="unwind"];
    bb61__0_2474 -> bb62__0_2474 [label="return"];
    bb61__0_2474 -> bb176__0_2474 [label="unwind"];
    bb62__0_2474 -> bb162__0_2474 [label=""];
    bb63__0_2474 -> bb64__0_2474 [label="return"];
    bb63__0_2474 -> bb176__0_2474 [label="unwind"];
    bb64__0_2474 -> bb65__0_2474 [label="0"];
    bb64__0_2474 -> bb66__0_2474 [label="1"];
    bb64__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb65__0_2474 -> bb69__0_2474 [label="0"];
    bb65__0_2474 -> bb68__0_2474 [label="otherwise"];
    bb66__0_2474 -> bb67__0_2474 [label="return"];
    bb66__0_2474 -> bb176__0_2474 [label="unwind"];
    bb67__0_2474 -> bb162__0_2474 [label=""];
    bb68__0_2474 -> bb82__0_2474 [label=""];
    bb69__0_2474 -> bb70__0_2474 [label="return"];
    bb69__0_2474 -> bb176__0_2474 [label="unwind"];
    bb70__0_2474 -> bb71__0_2474 [label="return"];
    bb70__0_2474 -> bb176__0_2474 [label="unwind"];
    bb71__0_2474 -> bb72__0_2474 [label="return"];
    bb71__0_2474 -> bb176__0_2474 [label="unwind"];
    bb72__0_2474 -> bb73__0_2474 [label="return"];
    bb72__0_2474 -> bb175__0_2474 [label="unwind"];
    bb73__0_2474 -> bb74__0_2474 [label="return"];
    bb73__0_2474 -> bb175__0_2474 [label="unwind"];
    bb74__0_2474 -> bb75__0_2474 [label="return"];
    bb74__0_2474 -> bb176__0_2474 [label="unwind"];
    bb75__0_2474 -> bb76__0_2474 [label="return"];
    bb75__0_2474 -> bb176__0_2474 [label="unwind"];
    bb76__0_2474 -> bb77__0_2474 [label="return"];
    bb76__0_2474 -> bb176__0_2474 [label="unwind"];
    bb77__0_2474 -> bb78__0_2474 [label="return"];
    bb77__0_2474 -> bb176__0_2474 [label="unwind"];
    bb78__0_2474 -> bb79__0_2474 [label="return"];
    bb78__0_2474 -> bb174__0_2474 [label="unwind"];
    bb79__0_2474 -> bb80__0_2474 [label="return"];
    bb79__0_2474 -> bb174__0_2474 [label="unwind"];
    bb80__0_2474 -> bb81__0_2474 [label="return"];
    bb80__0_2474 -> bb176__0_2474 [label="unwind"];
    bb81__0_2474 -> bb82__0_2474 [label=""];
    bb82__0_2474 -> bb83__0_2474 [label="return"];
    bb82__0_2474 -> bb176__0_2474 [label="unwind"];
    bb83__0_2474 -> bb84__0_2474 [label="0"];
    bb83__0_2474 -> bb85__0_2474 [label="1"];
    bb83__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb84__0_2474 -> bb87__0_2474 [label="return"];
    bb84__0_2474 -> bb180__0_2474 [label="unwind"];
    bb85__0_2474 -> bb86__0_2474 [label="return"];
    bb85__0_2474 -> bb176__0_2474 [label="unwind"];
    bb86__0_2474 -> bb163__0_2474 [label=""];
    bb87__0_2474 -> bb89__0_2474 [label=""];
    bb88__0_2474 -> bb89__0_2474 [label=""];
    bb89__0_2474 -> bb116__0_2474 [label="0"];
    bb89__0_2474 -> bb90__0_2474 [label="otherwise"];
    bb90__0_2474 -> bb91__0_2474 [label="return"];
    bb91__0_2474 -> bb92__0_2474 [label="return"];
    bb91__0_2474 -> bb180__0_2474 [label="unwind"];
    bb92__0_2474 -> bb93__0_2474 [label="0"];
    bb92__0_2474 -> bb94__0_2474 [label="1"];
    bb92__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb93__0_2474 -> bb96__0_2474 [label="return"];
    bb93__0_2474 -> bb173__0_2474 [label="unwind"];
    bb94__0_2474 -> bb95__0_2474 [label="return"];
    bb94__0_2474 -> bb182__0_2474 [label="unwind"];
    bb95__0_2474 -> bb161__0_2474 [label=""];
    bb96__0_2474 -> bb97__0_2474 [label="return"];
    bb96__0_2474 -> bb173__0_2474 [label="unwind"];
    bb97__0_2474 -> bb98__0_2474 [label="return"];
    bb97__0_2474 -> bb173__0_2474 [label="unwind"];
    bb98__0_2474 -> bb99__0_2474 [label="return"];
    bb98__0_2474 -> bb173__0_2474 [label="unwind"];
    bb99__0_2474 -> bb100__0_2474 [label="0"];
    bb99__0_2474 -> bb101__0_2474 [label="1"];
    bb99__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb100__0_2474 -> bb103__0_2474 [label="success"];
    bb100__0_2474 -> bb173__0_2474 [label="unwind"];
    bb101__0_2474 -> bb102__0_2474 [label="return"];
    bb101__0_2474 -> bb173__0_2474 [label="unwind"];
    bb102__0_2474 -> bb160__0_2474 [label=""];
    bb103__0_2474 -> bb104__0_2474 [label="return"];
    bb103__0_2474 -> bb173__0_2474 [label="unwind"];
    bb104__0_2474 -> bb105__0_2474 [label="return"];
    bb104__0_2474 -> bb173__0_2474 [label="unwind"];
    bb105__0_2474 -> bb106__0_2474 [label="return"];
    bb105__0_2474 -> bb173__0_2474 [label="unwind"];
    bb106__0_2474 -> bb107__0_2474 [label="0"];
    bb106__0_2474 -> bb108__0_2474 [label="1"];
    bb106__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb107__0_2474 -> bb110__0_2474 [label="return"];
    bb107__0_2474 -> bb173__0_2474 [label="unwind"];
    bb108__0_2474 -> bb109__0_2474 [label="return"];
    bb108__0_2474 -> bb173__0_2474 [label="unwind"];
    bb109__0_2474 -> bb159__0_2474 [label=""];
    bb110__0_2474 -> bb111__0_2474 [label="return"];
    bb110__0_2474 -> bb173__0_2474 [label="unwind"];
    bb111__0_2474 -> bb112__0_2474 [label="0"];
    bb111__0_2474 -> bb113__0_2474 [label="1"];
    bb111__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb112__0_2474 -> bb115__0_2474 [label="return"];
    bb112__0_2474 -> bb180__0_2474 [label="unwind"];
    bb113__0_2474 -> bb114__0_2474 [label="return"];
    bb113__0_2474 -> bb173__0_2474 [label="unwind"];
    bb114__0_2474 -> bb159__0_2474 [label=""];
    bb115__0_2474 -> bb117__0_2474 [label=""];
    bb116__0_2474 -> bb117__0_2474 [label=""];
    bb117__0_2474 -> bb42__0_2474 [label=""];
    bb118__0_2474 -> bb119__0_2474 [label="return"];
    bb119__0_2474 -> bb121__0_2474 [label="0"];
    bb119__0_2474 -> bb120__0_2474 [label="otherwise"];
    bb120__0_2474 -> bb134__0_2474 [label=""];
    bb121__0_2474 -> bb122__0_2474 [label="return"];
    bb122__0_2474 -> bb123__0_2474 [label="return"];
    bb122__0_2474 -> bb180__0_2474 [label="unwind"];
    bb123__0_2474 -> bb124__0_2474 [label="0"];
    bb123__0_2474 -> bb125__0_2474 [label="1"];
    bb123__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb124__0_2474 -> bb127__0_2474 [label="return"];
    bb124__0_2474 -> bb172__0_2474 [label="unwind"];
    bb125__0_2474 -> bb126__0_2474 [label="return"];
    bb125__0_2474 -> bb181__0_2474 [label="unwind"];
    bb126__0_2474 -> bb157__0_2474 [label=""];
    bb127__0_2474 -> bb128__0_2474 [label="return"];
    bb127__0_2474 -> bb172__0_2474 [label="unwind"];
    bb128__0_2474 -> bb129__0_2474 [label="return"];
    bb128__0_2474 -> bb172__0_2474 [label="unwind"];
    bb129__0_2474 -> bb130__0_2474 [label="0"];
    bb129__0_2474 -> bb131__0_2474 [label="1"];
    bb129__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb130__0_2474 -> bb133__0_2474 [label="return"];
    bb130__0_2474 -> bb180__0_2474 [label="unwind"];
    bb131__0_2474 -> bb132__0_2474 [label="return"];
    bb131__0_2474 -> bb172__0_2474 [label="unwind"];
    bb132__0_2474 -> bb157__0_2474 [label="return"];
    bb132__0_2474 -> bb180__0_2474 [label="unwind"];
    bb133__0_2474 -> bb134__0_2474 [label=""];
    bb134__0_2474 -> bb136__0_2474 [label="0"];
    bb134__0_2474 -> bb135__0_2474 [label="otherwise"];
    bb135__0_2474 -> bb142__0_2474 [label=""];
    bb136__0_2474 -> bb137__0_2474 [label="return"];
    bb137__0_2474 -> bb138__0_2474 [label="return"];
    bb138__0_2474 -> bb139__0_2474 [label="0"];
    bb138__0_2474 -> bb140__0_2474 [label="1"];
    bb138__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb139__0_2474 -> bb143__0_2474 [label="0"];
    bb139__0_2474 -> bb142__0_2474 [label="otherwise"];
    bb140__0_2474 -> bb141__0_2474 [label="return"];
    bb141__0_2474 -> bb156__0_2474 [label=""];
    bb142__0_2474 -> bb151__0_2474 [label=""];
    bb143__0_2474 -> bb144__0_2474 [label="return"];
    bb144__0_2474 -> bb145__0_2474 [label="return"];
    bb145__0_2474 -> bb146__0_2474 [label="return"];
    bb146__0_2474 -> bb147__0_2474 [label="return"];
    bb146__0_2474 -> bb171__0_2474 [label="unwind"];
    bb147__0_2474 -> bb148__0_2474 [label="return"];
    bb147__0_2474 -> bb171__0_2474 [label="unwind"];
    bb148__0_2474 -> bb149__0_2474 [label="return"];
    bb148__0_2474 -> bb180__0_2474 [label="unwind"];
    bb149__0_2474 -> bb150__0_2474 [label="return"];
    bb150__0_2474 -> bb151__0_2474 [label=""];
    bb151__0_2474 -> bb152__0_2474 [label="return"];
    bb152__0_2474 -> bb153__0_2474 [label="0"];
    bb152__0_2474 -> bb154__0_2474 [label="1"];
    bb152__0_2474 -> bb6__0_2474 [label="otherwise"];
    bb153__0_2474 -> bb170__0_2474 [label=""];
    bb154__0_2474 -> bb155__0_2474 [label="return"];
    bb155__0_2474 -> bb156__0_2474 [label=""];
    bb156__0_2474 -> bb158__0_2474 [label=""];
    bb157__0_2474 -> bb158__0_2474 [label=""];
    bb158__0_2474 -> bb167__0_2474 [label=""];
    bb159__0_2474 -> bb160__0_2474 [label=""];
    bb160__0_2474 -> bb161__0_2474 [label="return"];
    bb160__0_2474 -> bb180__0_2474 [label="unwind"];
    bb161__0_2474 -> bb166__0_2474 [label=""];
    bb162__0_2474 -> bb163__0_2474 [label=""];
    bb163__0_2474 -> bb164__0_2474 [label=""];
    bb164__0_2474 -> bb165__0_2474 [label="return"];
    bb164__0_2474 -> bb180__0_2474 [label="unwind"];
    bb165__0_2474 -> bb166__0_2474 [label=""];
    bb166__0_2474 -> bb167__0_2474 [label=""];
    bb167__0_2474 -> bb170__0_2474 [label=""];
    bb168__0_2474 -> bb169__0_2474 [label=""];
    bb169__0_2474 -> bb170__0_2474 [label=""];
    bb171__0_2474 -> bb180__0_2474 [label="return"];
    bb172__0_2474 -> bb180__0_2474 [label="return"];
    bb173__0_2474 -> bb180__0_2474 [label="return"];
    bb174__0_2474 -> bb176__0_2474 [label="return"];
    bb175__0_2474 -> bb176__0_2474 [label="return"];
    bb176__0_2474 -> bb180__0_2474 [label="return"];
    bb177__0_2474 -> bb179__0_2474 [label="return"];
    bb178__0_2474 -> bb179__0_2474 [label="return"];
    bb179__0_2474 -> bb180__0_2474 [label="return"];
    bb181__0_2474 -> bb180__0_2474 [label=""];
    bb182__0_2474 -> bb180__0_2474 [label=""];
    bb183__0_2474 -> bb180__0_2474 [label=""];
    bb184__0_2474 -> bb180__0_2474 [label=""];
}
