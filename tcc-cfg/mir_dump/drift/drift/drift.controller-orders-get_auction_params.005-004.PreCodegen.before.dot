digraph Mir_0_507 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn get_auction_params(_1: &amp;ReErased state::order_params::OrderParams, _2: &amp;ReErased state::oracle::OraclePriceData, _3: u64, _4: u8) -&gt; std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: isize;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: (i64, i64, u8);<br align="left"/>let _10: ();<br align="left"/>let mut _11: bool;<br align="left"/>let mut _12: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _13: &amp;ReErased state::user::OrderType;<br align="left"/>let _14: state::user::OrderType;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: (std::option::Option&lt;i64&gt;, std::option::Option&lt;i64&gt;, std::option::Option&lt;u8&gt;);<br align="left"/>let mut _17: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _18: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _19: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _20: isize;<br align="left"/>let mut _21: isize;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: i64;<br align="left"/>let _24: i64;<br align="left"/>let _25: u8;<br align="left"/>let _26: u8;<br align="left"/>let mut _27: bool;<br align="left"/>let mut _28: u8;<br align="left"/>let mut _29: u8;<br align="left"/>let mut _30: u8;<br align="left"/>let mut _31: (i64, i64, u8);<br align="left"/>let mut _32: i64;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: i64;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _38: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _39: u64;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: i64;<br align="left"/>let mut _45: controller::position::PositionDirection;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: i64;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _53: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _54: i64;<br align="left"/>let mut _55: i64;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _57: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: i64;<br align="left"/>let mut _64: controller::position::PositionDirection;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: i64;<br align="left"/>let mut _70: u8;<br align="left"/>let mut _71: (i64, i64, u8);<br align="left"/>let _72: u8;<br align="left"/>let mut _73: u8;<br align="left"/>let mut _74: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _75: u8;<br align="left"/>let _76: i64;<br align="left"/>let _77: i64;<br align="left"/>let mut _78: (i64, i64);<br align="left"/>let mut _79: (std::option::Option&lt;i64&gt;, std::option::Option&lt;i64&gt;);<br align="left"/>let mut _80: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _81: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _82: isize;<br align="left"/>let mut _83: isize;<br align="left"/>let mut _84: &amp;ReErased std::option::Option&lt;i64&gt;;<br align="left"/>let mut _85: &amp;ReErased std::option::Option&lt;i64&gt;;<br align="left"/>let _86: i64;<br align="left"/>let _87: i64;<br align="left"/>let mut _88: i64;<br align="left"/>let mut _89: i64;<br align="left"/>let mut _90: bool;<br align="left"/>let mut _91: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _92: &amp;ReErased state::user::OrderType;<br align="left"/>let _93: state::user::OrderType;<br align="left"/>let mut _94: !;<br align="left"/>let _95: ();<br align="left"/>let mut _96: &amp;ReErased str;<br align="left"/>let _97: &amp;ReErased str;<br align="left"/>let mut _98: error::ErrorCode;<br align="left"/>let mut _99: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i64, i64)&gt;;<br align="left"/>let mut _100: std::result::Result&lt;(i64, i64), error::ErrorCode&gt;;<br align="left"/>let mut _101: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _102: controller::position::PositionDirection;<br align="left"/>let mut _103: u64;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: (i64, i64);<br align="left"/>let mut _109: (i64, i64, u8);<br align="left"/>let mut _110: i64;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _112: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _113: i64;<br align="left"/>let mut _114: i64;<br align="left"/>let mut _115: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _116: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _117: u64;<br align="left"/>let mut _118: isize;<br align="left"/>let _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _120: !;<br align="left"/>let mut _121: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _122: i64;<br align="left"/>let mut _123: controller::position::PositionDirection;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _128: i64;<br align="left"/>let mut _129: i64;<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _131: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _132: i64;<br align="left"/>let mut _133: i64;<br align="left"/>let mut _134: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _135: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: i64;<br align="left"/>let mut _142: controller::position::PositionDirection;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _147: i64;<br align="left"/>let mut _148: u8;<br align="left"/>let mut _149: &amp;ReErased state::user::OrderType;<br align="left"/>let mut _150: &amp;ReErased state::user::OrderType;<br align="left"/>debug params =&gt; _1;<br align="left"/>debug oracle_price_data =&gt; _2;<br align="left"/>debug tick_size =&gt; _3;<br align="left"/>debug min_auction_duration =&gt; _4;<br align="left"/>debug auction_start_price =&gt; _23;<br align="left"/>debug auction_end_price =&gt; _24;<br align="left"/>debug auction_duration =&gt; _25;<br align="left"/>debug auction_duration =&gt; _26;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug auction_duration =&gt; _72;<br align="left"/>debug auction_start_price =&gt; _76;<br align="left"/>debug auction_end_price =&gt; _77;<br align="left"/>debug auction_start_price =&gt; _86;<br align="left"/>debug auction_end_price =&gt; _87;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>debug residual =&gt; _119;<br align="left"/>debug val =&gt; _122;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>>;
    bb0__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_7 = discriminant(((*_1).0: state::user::OrderType))<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_6 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_6 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb4__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = (const 0_i64, const 0_i64, const 0_u8)<br/>_0 = std::result::Result::&lt;(i64, i64, u8), error::ErrorCode&gt;::Ok(move _9)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_5 = const ()<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;((*_1).0: state::user::OrderType)<br/>StorageLive(_13)<br/>_150 = const _<br/>_13 = &amp;(*_150)<br/></td></tr><tr><td align="left">_11 = &lt;state::user::OrderType as PartialEq&gt;::eq(move _12, move _13)</td></tr></table>>];
    bb6__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb7__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = ((*_1).15: std::option::Option&lt;i64&gt;)<br/>StorageLive(_18)<br/>_18 = ((*_1).16: std::option::Option&lt;i64&gt;)<br/>StorageLive(_19)<br/>_19 = ((*_1).14: std::option::Option&lt;u8&gt;)<br/>_16 = (move _17, move _18, move _19)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>_22 = discriminant((_16.0: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb8__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = (const 0_i64, const 0_i64, const 0_u8)<br/>_0 = std::result::Result::&lt;(i64, i64, u8), error::ErrorCode&gt;::Ok(move _71)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_21 = discriminant((_16.1: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">_20 = discriminant((_16.2: std::option::Option&lt;u8&gt;))<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb11__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = (((_16.0: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>StorageLive(_24)<br/>_24 = (((_16.1: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>StorageLive(_25)<br/>_25 = (((_16.2: std::option::Option&lt;u8&gt;) as Some).0: u8)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = _25<br/>_27 = Eq(move _28, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb12__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_26 = _25<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_29)<br/>_29 = _25<br/>StorageLive(_30)<br/>_30 = _4<br/></td></tr><tr><td align="left">_26 = &lt;u8 as Ord&gt;::max(move _29, move _30)</td></tr></table>>];
    bb14__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = _23<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _3<br/></td></tr><tr><td align="left">_38 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _39)</td></tr></table>>];
    bb16__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb17__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_40 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb18__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_37 as Continue).0: i64)<br/>_36 = _44<br/>StorageDead(_44)<br/>StorageLive(_45)<br/>_45 = ((*_1).2: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_34 = math::orders::standardize_price_i64(move _35, move _36, move _45)</td></tr></table>>];
    bb19__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb20__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb21__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb23__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_46 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb24__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_33 as Continue).0: i64)<br/>_32 = _50<br/>StorageDead(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _24<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _3<br/></td></tr><tr><td align="left">_57 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _58)</td></tr></table>>];
    bb25__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb26__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb28__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_59 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb29__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_56 as Continue).0: i64)<br/>_55 = _63<br/>StorageDead(_63)<br/>StorageLive(_64)<br/>_64 = ((*_1).2: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_53 = math::orders::standardize_price_i64(move _54, move _55, move _64)</td></tr></table>>];
    bb30__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb31__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb33__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_65 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb34__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_52 as Continue).0: i64)<br/>_51 = _69<br/>StorageDead(_69)<br/>StorageLive(_70)<br/>_70 = _26<br/>_31 = (move _32, move _51, move _70)<br/>StorageDead(_70)<br/>StorageDead(_51)<br/>StorageDead(_32)<br/>_0 = std::result::Result::&lt;(i64, i64, u8), error::ErrorCode&gt;::Ok(move _31)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb36__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_12)<br/>_10 = const ()<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>_74 = ((*_1).14: std::option::Option&lt;u8&gt;)<br/></td></tr><tr><td align="left">_73 = Option::&lt;u8&gt;::unwrap_or(move _74, const 0_u8)</td></tr></table>>];
    bb38__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_75)<br/>_75 = _4<br/></td></tr><tr><td align="left">_72 = &lt;u8 as Ord&gt;::max(move _73, move _75)</td></tr></table>>];
    bb39__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = ((*_1).15: std::option::Option&lt;i64&gt;)<br/>StorageLive(_81)<br/>_81 = ((*_1).16: std::option::Option&lt;i64&gt;)<br/>_79 = (move _80, move _81)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>_83 = discriminant((_79.0: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb40__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_82 = discriminant((_79.1: std::option::Option&lt;i64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _82)</td></tr></table>>];
    bb41__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = (((_79.0: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>StorageLive(_87)<br/>_87 = (((_79.1: std::option::Option&lt;i64&gt;) as Some).0: i64)<br/>StorageLive(_88)<br/>_88 = _86<br/>StorageLive(_89)<br/>_89 = _87<br/>_78 = (move _88, move _89)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;((*_1).0: state::user::OrderType)<br/>StorageLive(_92)<br/>_149 = const _<br/>_92 = &amp;(*_149)<br/></td></tr><tr><td align="left">_90 = &lt;state::user::OrderType as PartialEq&gt;::eq(move _91, move _92)</td></tr></table>>];
    bb43__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb44__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = const &quot;Oracle order must specify auction start and end price offsets&quot;<br/>_96 = &amp;(*_97)<br/></td></tr><tr><td align="left">_95 = solana_program::log::sol_log(move _96)</td></tr></table>>];
    bb45__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;(*_2)<br/>StorageLive(_102)<br/>_102 = ((*_1).2: controller::position::PositionDirection)<br/>StorageLive(_103)<br/>_103 = ((*_1).5: u64)<br/></td></tr><tr><td align="left">_100 = calculate_auction_prices(move _101, move _102, move _103)</td></tr></table>>];
    bb46__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_97)<br/>StorageDead(_95)<br/>StorageLive(_98)<br/>_98 = error::ErrorCode::InvalidOrderAuction<br/>_0 = std::result::Result::&lt;(i64, i64, u8), error::ErrorCode&gt;::Err(move _98)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = &lt;std::result::Result&lt;(i64, i64), error::ErrorCode&gt; as Try&gt;::branch(move _100)</td></tr></table>>];
    bb48__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>_104 = discriminant(_99)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb49__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_99 as Continue).0: (i64, i64))<br/>_78 = _108<br/>StorageDead(_108)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_99 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb51__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = (_78.0: i64)<br/>StorageLive(_77)<br/>_77 = (_78.1: i64)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = _76<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>_117 = _3<br/></td></tr><tr><td align="left">_116 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _117)</td></tr></table>>];
    bb53__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/></td></tr><tr><td align="left">_115 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _116)</td></tr></table>>];
    bb54__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>_118 = discriminant(_115)<br/></td></tr><tr><td align="left">switchInt(move _118)</td></tr></table>>];
    bb55__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_115 as Continue).0: i64)<br/>_114 = _122<br/>StorageDead(_122)<br/>StorageLive(_123)<br/>_123 = ((*_1).2: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_112 = math::orders::standardize_price_i64(move _113, move _114, move _123)</td></tr></table>>];
    bb56__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_115 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_121)<br/>_121 = _119<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _121)</td></tr></table>>];
    bb57__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_119)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb59__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_124 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb60__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_111 as Continue).0: i64)<br/>_110 = _128<br/>StorageDead(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = _77<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = _3<br/></td></tr><tr><td align="left">_135 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _136)</td></tr></table>>];
    bb61__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_127)<br/>_127 = _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb62__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/></td></tr><tr><td align="left">_134 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _135)</td></tr></table>>];
    bb64__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_137 = discriminant(_134)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb65__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_134 as Continue).0: i64)<br/>_133 = _141<br/>StorageDead(_141)<br/>StorageLive(_142)<br/>_142 = ((*_1).2: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_131 = math::orders::standardize_price_i64(move _132, move _133, move _142)</td></tr></table>>];
    bb66__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_134 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb67__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb69__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_143 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb70__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_130 as Continue).0: i64)<br/>_129 = _147<br/>StorageDead(_147)<br/>StorageLive(_148)<br/>_148 = _72<br/>_109 = (move _110, move _129, move _148)<br/>StorageDead(_148)<br/>StorageDead(_129)<br/>StorageDead(_110)<br/>_0 = std::result::Result::&lt;(i64, i64, u8), error::ErrorCode&gt;::Ok(move _109)<br/>StorageDead(_109)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/>StorageDead(_115)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_146)<br/>_146 = _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i64, i64, u8), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb72__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_78)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_56)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_507 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_507 -> bb2__0_507 [label="0"];
    bb0__0_507 -> bb2__0_507 [label="1"];
    bb0__0_507 -> bb2__0_507 [label="4"];
    bb0__0_507 -> bb1__0_507 [label="otherwise"];
    bb1__0_507 -> bb3__0_507 [label=""];
    bb2__0_507 -> bb3__0_507 [label=""];
    bb3__0_507 -> bb4__0_507 [label="0"];
    bb3__0_507 -> bb5__0_507 [label="otherwise"];
    bb4__0_507 -> bb81__0_507 [label=""];
    bb5__0_507 -> bb6__0_507 [label="return"];
    bb6__0_507 -> bb37__0_507 [label="0"];
    bb6__0_507 -> bb7__0_507 [label="otherwise"];
    bb7__0_507 -> bb9__0_507 [label="1"];
    bb7__0_507 -> bb8__0_507 [label="otherwise"];
    bb8__0_507 -> bb80__0_507 [label=""];
    bb9__0_507 -> bb10__0_507 [label="1"];
    bb9__0_507 -> bb8__0_507 [label="otherwise"];
    bb10__0_507 -> bb11__0_507 [label="1"];
    bb10__0_507 -> bb8__0_507 [label="otherwise"];
    bb11__0_507 -> bb13__0_507 [label="0"];
    bb11__0_507 -> bb12__0_507 [label="otherwise"];
    bb12__0_507 -> bb15__0_507 [label=""];
    bb13__0_507 -> bb14__0_507 [label="return"];
    bb14__0_507 -> bb15__0_507 [label=""];
    bb15__0_507 -> bb16__0_507 [label="return"];
    bb16__0_507 -> bb17__0_507 [label="return"];
    bb17__0_507 -> bb18__0_507 [label="0"];
    bb17__0_507 -> bb20__0_507 [label="1"];
    bb17__0_507 -> bb19__0_507 [label="otherwise"];
    bb18__0_507 -> bb22__0_507 [label="return"];
    bb20__0_507 -> bb21__0_507 [label="return"];
    bb21__0_507 -> bb78__0_507 [label=""];
    bb22__0_507 -> bb23__0_507 [label="return"];
    bb23__0_507 -> bb24__0_507 [label="0"];
    bb23__0_507 -> bb25__0_507 [label="1"];
    bb23__0_507 -> bb19__0_507 [label="otherwise"];
    bb24__0_507 -> bb27__0_507 [label="return"];
    bb25__0_507 -> bb26__0_507 [label="return"];
    bb26__0_507 -> bb78__0_507 [label=""];
    bb27__0_507 -> bb28__0_507 [label="return"];
    bb28__0_507 -> bb29__0_507 [label="0"];
    bb28__0_507 -> bb30__0_507 [label="1"];
    bb28__0_507 -> bb19__0_507 [label="otherwise"];
    bb29__0_507 -> bb32__0_507 [label="return"];
    bb30__0_507 -> bb31__0_507 [label="return"];
    bb31__0_507 -> bb77__0_507 [label=""];
    bb32__0_507 -> bb33__0_507 [label="return"];
    bb33__0_507 -> bb34__0_507 [label="0"];
    bb33__0_507 -> bb35__0_507 [label="1"];
    bb33__0_507 -> bb19__0_507 [label="otherwise"];
    bb34__0_507 -> bb80__0_507 [label=""];
    bb35__0_507 -> bb36__0_507 [label="return"];
    bb36__0_507 -> bb77__0_507 [label=""];
    bb37__0_507 -> bb38__0_507 [label="return"];
    bb38__0_507 -> bb39__0_507 [label="return"];
    bb39__0_507 -> bb40__0_507 [label="1"];
    bb39__0_507 -> bb42__0_507 [label="otherwise"];
    bb40__0_507 -> bb41__0_507 [label="1"];
    bb40__0_507 -> bb42__0_507 [label="otherwise"];
    bb41__0_507 -> bb52__0_507 [label=""];
    bb42__0_507 -> bb43__0_507 [label="return"];
    bb43__0_507 -> bb45__0_507 [label="0"];
    bb43__0_507 -> bb44__0_507 [label="otherwise"];
    bb44__0_507 -> bb46__0_507 [label="return"];
    bb45__0_507 -> bb47__0_507 [label="return"];
    bb46__0_507 -> bb76__0_507 [label=""];
    bb47__0_507 -> bb48__0_507 [label="return"];
    bb48__0_507 -> bb49__0_507 [label="0"];
    bb48__0_507 -> bb50__0_507 [label="1"];
    bb48__0_507 -> bb19__0_507 [label="otherwise"];
    bb49__0_507 -> bb52__0_507 [label=""];
    bb50__0_507 -> bb51__0_507 [label="return"];
    bb51__0_507 -> bb76__0_507 [label=""];
    bb52__0_507 -> bb53__0_507 [label="return"];
    bb53__0_507 -> bb54__0_507 [label="return"];
    bb54__0_507 -> bb55__0_507 [label="0"];
    bb54__0_507 -> bb56__0_507 [label="1"];
    bb54__0_507 -> bb19__0_507 [label="otherwise"];
    bb55__0_507 -> bb58__0_507 [label="return"];
    bb56__0_507 -> bb57__0_507 [label="return"];
    bb57__0_507 -> bb74__0_507 [label=""];
    bb58__0_507 -> bb59__0_507 [label="return"];
    bb59__0_507 -> bb60__0_507 [label="0"];
    bb59__0_507 -> bb61__0_507 [label="1"];
    bb59__0_507 -> bb19__0_507 [label="otherwise"];
    bb60__0_507 -> bb63__0_507 [label="return"];
    bb61__0_507 -> bb62__0_507 [label="return"];
    bb62__0_507 -> bb74__0_507 [label=""];
    bb63__0_507 -> bb64__0_507 [label="return"];
    bb64__0_507 -> bb65__0_507 [label="0"];
    bb64__0_507 -> bb66__0_507 [label="1"];
    bb64__0_507 -> bb19__0_507 [label="otherwise"];
    bb65__0_507 -> bb68__0_507 [label="return"];
    bb66__0_507 -> bb67__0_507 [label="return"];
    bb67__0_507 -> bb73__0_507 [label=""];
    bb68__0_507 -> bb69__0_507 [label="return"];
    bb69__0_507 -> bb70__0_507 [label="0"];
    bb69__0_507 -> bb71__0_507 [label="1"];
    bb69__0_507 -> bb19__0_507 [label="otherwise"];
    bb70__0_507 -> bb81__0_507 [label=""];
    bb71__0_507 -> bb72__0_507 [label="return"];
    bb72__0_507 -> bb73__0_507 [label=""];
    bb73__0_507 -> bb75__0_507 [label=""];
    bb74__0_507 -> bb75__0_507 [label=""];
    bb75__0_507 -> bb81__0_507 [label=""];
    bb76__0_507 -> bb81__0_507 [label=""];
    bb77__0_507 -> bb79__0_507 [label=""];
    bb78__0_507 -> bb79__0_507 [label=""];
    bb79__0_507 -> bb80__0_507 [label=""];
    bb80__0_507 -> bb81__0_507 [label=""];
}
