digraph Mir_0_8528 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_begin_insurance_fund_swap(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;&gt;, _2: u16, _3: u16, _4: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _5: ();<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _7: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _9: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _14: ();<br align="left"/>let _15: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _16: anchor_lang::prelude::Clock;<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _18: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _19: isize;<br align="left"/>let _20: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _21: !;<br align="left"/>let mut _22: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _23: anchor_lang::prelude::Clock;<br align="left"/>let _24: i64;<br align="left"/>let _25: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _26: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _27: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _28: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _29: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _30: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _31: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _32: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _34: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _36: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _37: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _38: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _39: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _40: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _41: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _42: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _43: std::boxed::Box&lt;[u16], std::alloc::Global&gt;;<br align="left"/>let mut _44: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: usize;<br align="left"/>let mut _47: *mut u8;<br align="left"/>let mut _48: std::boxed::Box&lt;[u16; 2_usize], std::alloc::Global&gt;;<br align="left"/>let mut _49: u16;<br align="left"/>let mut _50: u16;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _53: state::state::OracleGuardRails;<br align="left"/>let mut _54: &amp;ReErased state::state::State;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _61: std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;;<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;&gt;;<br align="left"/>let mut _63: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _64: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _65: isize;<br align="left"/>let _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _67: !;<br align="left"/>let mut _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _69: std::option::Option&lt;anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;&gt;;<br align="left"/>let _70: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _71: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _72: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _73: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _76: !;<br align="left"/>let mut _77: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _78: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _79: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _80: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _81: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _82: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _88: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _89: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _90: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _91: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased u16;<br align="left"/>let _93: &amp;ReErased u16;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _99: ();<br align="left"/>let mut _100: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _101: isize;<br align="left"/>let _102: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let _103: ();<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _105: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _106: bool;<br align="left"/>let mut _107: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _108: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _109: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _110: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _111: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _112: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _113: ();<br align="left"/>let _114: error::ErrorCode;<br align="left"/>let _115: ();<br align="left"/>let mut _116: &amp;ReErased str;<br align="left"/>let _117: &amp;ReErased str;<br align="left"/>let mut _118: &amp;ReErased std::string::String;<br align="left"/>let _119: &amp;ReErased std::string::String;<br align="left"/>let _120: std::string::String;<br align="left"/>let _121: std::string::String;<br align="left"/>let mut _122: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _123: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _124: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _125: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _126: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _127: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _128: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _129: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _130: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _131: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _132: &amp;ReErased error::ErrorCode;<br align="left"/>let _133: &amp;ReErased error::ErrorCode;<br align="left"/>let _134: ();<br align="left"/>let mut _135: &amp;ReErased str;<br align="left"/>let _136: &amp;ReErased str;<br align="left"/>let mut _137: error::ErrorCode;<br align="left"/>let mut _138: isize;<br align="left"/>let _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _140: !;<br align="left"/>let mut _141: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _142: ();<br align="left"/>let _143: ();<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _145: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _146: bool;<br align="left"/>let mut _147: u64;<br align="left"/>let mut _148: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _149: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _150: bool;<br align="left"/>let mut _151: u64;<br align="left"/>let mut _152: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _153: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _154: ();<br align="left"/>let _155: error::ErrorCode;<br align="left"/>let _156: ();<br align="left"/>let mut _157: &amp;ReErased str;<br align="left"/>let _158: &amp;ReErased str;<br align="left"/>let mut _159: &amp;ReErased std::string::String;<br align="left"/>let _160: &amp;ReErased std::string::String;<br align="left"/>let _161: std::string::String;<br align="left"/>let _162: std::string::String;<br align="left"/>let mut _163: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _165: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _166: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _167: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _168: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _169: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _170: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _171: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _172: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _173: &amp;ReErased error::ErrorCode;<br align="left"/>let _174: &amp;ReErased error::ErrorCode;<br align="left"/>let _175: ();<br align="left"/>let mut _176: &amp;ReErased str;<br align="left"/>let _177: &amp;ReErased str;<br align="left"/>let mut _178: error::ErrorCode;<br align="left"/>let mut _179: isize;<br align="left"/>let _180: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _181: !;<br align="left"/>let mut _182: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _183: ();<br align="left"/>let mut _184: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _185: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _186: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _187: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _188: &amp;ReErased u16;<br align="left"/>let _189: &amp;ReErased u16;<br align="left"/>let mut _190: isize;<br align="left"/>let _191: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _192: !;<br align="left"/>let mut _193: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _194: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _195: bool;<br align="left"/>let mut _196: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _197: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _198: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _199: bool;<br align="left"/>let mut _200: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _201: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _202: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _203: ();<br align="left"/>let mut _204: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _205: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _206: bool;<br align="left"/>let mut _207: bool;<br align="left"/>let mut _208: ();<br align="left"/>let _209: error::ErrorCode;<br align="left"/>let _210: ();<br align="left"/>let mut _211: &amp;ReErased str;<br align="left"/>let _212: &amp;ReErased str;<br align="left"/>let mut _213: &amp;ReErased std::string::String;<br align="left"/>let _214: &amp;ReErased std::string::String;<br align="left"/>let _215: std::string::String;<br align="left"/>let _216: std::string::String;<br align="left"/>let mut _217: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _218: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _219: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _220: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _221: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _222: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _223: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _224: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _225: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _226: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _227: &amp;ReErased error::ErrorCode;<br align="left"/>let _228: &amp;ReErased error::ErrorCode;<br align="left"/>let _229: ();<br align="left"/>let mut _230: &amp;ReErased str;<br align="left"/>let _231: &amp;ReErased str;<br align="left"/>let mut _232: error::ErrorCode;<br align="left"/>let mut _233: isize;<br align="left"/>let _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _235: !;<br align="left"/>let mut _236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _237: ();<br align="left"/>let _238: ();<br align="left"/>let mut _239: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _240: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _241: bool;<br align="left"/>let mut _242: u64;<br align="left"/>let mut _243: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _244: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _245: bool;<br align="left"/>let mut _246: u64;<br align="left"/>let mut _247: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _248: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _249: ();<br align="left"/>let _250: error::ErrorCode;<br align="left"/>let _251: ();<br align="left"/>let mut _252: &amp;ReErased str;<br align="left"/>let _253: &amp;ReErased str;<br align="left"/>let mut _254: &amp;ReErased std::string::String;<br align="left"/>let _255: &amp;ReErased std::string::String;<br align="left"/>let _256: std::string::String;<br align="left"/>let _257: std::string::String;<br align="left"/>let mut _258: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _259: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _261: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _262: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _263: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _264: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _265: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _266: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _267: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _268: &amp;ReErased error::ErrorCode;<br align="left"/>let _269: &amp;ReErased error::ErrorCode;<br align="left"/>let _270: ();<br align="left"/>let mut _271: &amp;ReErased str;<br align="left"/>let _272: &amp;ReErased str;<br align="left"/>let mut _273: error::ErrorCode;<br align="left"/>let mut _274: isize;<br align="left"/>let _275: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _276: !;<br align="left"/>let mut _277: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _278: ();<br align="left"/>let _279: ();<br align="left"/>let mut _280: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _281: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _282: bool;<br align="left"/>let mut _283: u16;<br align="left"/>let mut _284: u16;<br align="left"/>let mut _285: ();<br align="left"/>let _286: error::ErrorCode;<br align="left"/>let _287: ();<br align="left"/>let mut _288: &amp;ReErased str;<br align="left"/>let _289: &amp;ReErased str;<br align="left"/>let mut _290: &amp;ReErased std::string::String;<br align="left"/>let _291: &amp;ReErased std::string::String;<br align="left"/>let _292: std::string::String;<br align="left"/>let _293: std::string::String;<br align="left"/>let mut _294: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _295: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _296: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _297: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _298: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _299: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _300: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _301: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _302: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _303: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _304: &amp;ReErased error::ErrorCode;<br align="left"/>let _305: &amp;ReErased error::ErrorCode;<br align="left"/>let _306: ();<br align="left"/>let mut _307: &amp;ReErased str;<br align="left"/>let _308: &amp;ReErased str;<br align="left"/>let mut _309: error::ErrorCode;<br align="left"/>let mut _310: isize;<br align="left"/>let _311: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _312: !;<br align="left"/>let mut _313: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _314: ();<br align="left"/>let _315: ();<br align="left"/>let mut _316: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _317: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _318: bool;<br align="left"/>let mut _319: u64;<br align="left"/>let mut _320: ();<br align="left"/>let _321: error::ErrorCode;<br align="left"/>let _322: ();<br align="left"/>let mut _323: &amp;ReErased str;<br align="left"/>let _324: &amp;ReErased str;<br align="left"/>let mut _325: &amp;ReErased std::string::String;<br align="left"/>let _326: &amp;ReErased std::string::String;<br align="left"/>let _327: std::string::String;<br align="left"/>let _328: std::string::String;<br align="left"/>let mut _329: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _330: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _331: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _332: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _333: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _334: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _335: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _336: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _337: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _338: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _339: &amp;ReErased error::ErrorCode;<br align="left"/>let _340: &amp;ReErased error::ErrorCode;<br align="left"/>let _341: ();<br align="left"/>let mut _342: &amp;ReErased str;<br align="left"/>let _343: &amp;ReErased str;<br align="left"/>let mut _344: error::ErrorCode;<br align="left"/>let mut _345: isize;<br align="left"/>let _346: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _347: !;<br align="left"/>let mut _348: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _349: ();<br align="left"/>let mut _350: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _351: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;&gt;;<br align="left"/>let mut _352: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _353: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _354: isize;<br align="left"/>let _355: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _356: !;<br align="left"/>let mut _357: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _358: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let _359: ();<br align="left"/>let mut _360: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _361: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _362: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _363: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _364: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _365: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _366: u64;<br align="left"/>let mut _367: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _368: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _369: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _370: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _371: u64;<br align="left"/>let mut _372: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _373: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _374: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _375: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _376: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _377: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _378: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _379: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _380: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _381: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _382: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _383: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _384: u64;<br align="left"/>let mut _385: i64;<br align="left"/>let mut _386: isize;<br align="left"/>let _387: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _388: !;<br align="left"/>let mut _389: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _390: ();<br align="left"/>let _391: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _392: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _393: u64;<br align="left"/>let mut _394: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _395: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _396: u64;<br align="left"/>let mut _397: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _398: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _399: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _400: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _401: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _402: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _403: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _404: u64;<br align="left"/>let mut _405: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _406: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _407: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _408: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _409: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _410: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _411: ();<br align="left"/>let mut _412: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _413: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _414: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _415: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _416: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _417: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _418: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _419: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _420: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _421: u8;<br align="left"/>let mut _422: &amp;ReErased state::state::State;<br align="left"/>let mut _423: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _424: u64;<br align="left"/>let mut _425: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _426: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _427: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _428: bool;<br align="left"/>let mut _429: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _430: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _431: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _432: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _433: isize;<br align="left"/>let _434: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _435: !;<br align="left"/>let mut _436: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _437: ();<br align="left"/>let _438: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _439: &amp;ReErased anchor_lang::prelude::UncheckedAccount&lt;ReErased&gt;;<br align="left"/>let _440: usize;<br align="left"/>let mut _441: u16;<br align="left"/>let mut _442: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, u16&gt;;<br align="left"/>let mut _443: std::result::Result&lt;u16, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _444: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _445: isize;<br align="left"/>let _446: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _447: !;<br align="left"/>let mut _448: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _449: u16;<br align="left"/>let _450: solana_program::instruction::Instruction;<br align="left"/>let mut _451: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, solana_program::instruction::Instruction&gt;;<br align="left"/>let mut _452: std::result::Result&lt;solana_program::instruction::Instruction, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _453: usize;<br align="left"/>let mut _454: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _455: isize;<br align="left"/>let _456: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _457: !;<br align="left"/>let mut _458: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _459: solana_program::instruction::Instruction;<br align="left"/>let _460: ();<br align="left"/>let mut _461: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _462: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _463: bool;<br align="left"/>let mut _464: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _465: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _466: ();<br align="left"/>let _467: error::ErrorCode;<br align="left"/>let _468: ();<br align="left"/>let mut _469: &amp;ReErased str;<br align="left"/>let _470: &amp;ReErased str;<br align="left"/>let mut _471: &amp;ReErased std::string::String;<br align="left"/>let _472: &amp;ReErased std::string::String;<br align="left"/>let _473: std::string::String;<br align="left"/>let _474: std::string::String;<br align="left"/>let mut _475: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _476: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _477: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _478: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _479: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _480: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _481: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _482: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _483: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _484: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _485: &amp;ReErased error::ErrorCode;<br align="left"/>let _486: &amp;ReErased error::ErrorCode;<br align="left"/>let _487: ();<br align="left"/>let mut _488: &amp;ReErased str;<br align="left"/>let _489: &amp;ReErased str;<br align="left"/>let mut _490: error::ErrorCode;<br align="left"/>let mut _491: isize;<br align="left"/>let _492: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _493: !;<br align="left"/>let mut _494: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _495: ();<br align="left"/>let mut _496: usize;<br align="left"/>let mut _497: usize;<br align="left"/>let mut _498: (usize, bool);<br align="left"/>let mut _499: bool;<br align="left"/>let _500: ();<br align="left"/>let mut _501: ();<br align="left"/>let _502: solana_program::instruction::Instruction;<br align="left"/>let mut _503: std::result::Result&lt;solana_program::instruction::Instruction, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _504: usize;<br align="left"/>let mut _505: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _506: isize;<br align="left"/>let mut _507: isize;<br align="left"/>let _508: solana_program::instruction::Instruction;<br align="left"/>let mut _509: !;<br align="left"/>let _510: anchor_lang::prelude::ProgramError;<br align="left"/>let mut _511: !;<br align="left"/>let mut _512: anchor_lang::error::Error;<br align="left"/>let mut _513: anchor_lang::prelude::ProgramError;<br align="left"/>let _514: ();<br align="left"/>let mut _515: bool;<br align="left"/>let mut _516: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _517: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _518: anchor_lang::prelude::Pubkey;<br align="left"/>let _519: ();<br align="left"/>let mut _520: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _521: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _522: bool;<br align="left"/>let mut _523: ();<br align="left"/>let _524: error::ErrorCode;<br align="left"/>let _525: ();<br align="left"/>let mut _526: &amp;ReErased str;<br align="left"/>let _527: &amp;ReErased str;<br align="left"/>let mut _528: &amp;ReErased std::string::String;<br align="left"/>let _529: &amp;ReErased std::string::String;<br align="left"/>let _530: std::string::String;<br align="left"/>let _531: std::string::String;<br align="left"/>let mut _532: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _533: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _534: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _535: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _536: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _537: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _538: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _539: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _540: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _541: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _542: &amp;ReErased error::ErrorCode;<br align="left"/>let _543: &amp;ReErased error::ErrorCode;<br align="left"/>let _544: ();<br align="left"/>let mut _545: &amp;ReErased str;<br align="left"/>let _546: &amp;ReErased str;<br align="left"/>let mut _547: error::ErrorCode;<br align="left"/>let mut _548: isize;<br align="left"/>let _549: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _550: !;<br align="left"/>let mut _551: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _552: ();<br align="left"/>let _553: [u8; 8_usize];<br align="left"/>let _554: ();<br align="left"/>let mut _555: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _556: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _557: bool;<br align="left"/>let mut _558: &amp;ReErased [u8];<br align="left"/>let _559: &amp;ReErased [u8];<br align="left"/>let mut _560: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _561: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _562: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _563: ();<br align="left"/>let _564: error::ErrorCode;<br align="left"/>let _565: ();<br align="left"/>let mut _566: &amp;ReErased str;<br align="left"/>let _567: &amp;ReErased str;<br align="left"/>let mut _568: &amp;ReErased std::string::String;<br align="left"/>let _569: &amp;ReErased std::string::String;<br align="left"/>let _570: std::string::String;<br align="left"/>let _571: std::string::String;<br align="left"/>let mut _572: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _573: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _574: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _575: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _576: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _577: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _578: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _579: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _580: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _581: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _582: &amp;ReErased error::ErrorCode;<br align="left"/>let _583: &amp;ReErased error::ErrorCode;<br align="left"/>let _584: ();<br align="left"/>let mut _585: &amp;ReErased str;<br align="left"/>let _586: &amp;ReErased str;<br align="left"/>let mut _587: error::ErrorCode;<br align="left"/>let mut _588: isize;<br align="left"/>let _589: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _590: !;<br align="left"/>let mut _591: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _592: ();<br align="left"/>let _593: ();<br align="left"/>let mut _594: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _595: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _596: bool;<br align="left"/>let mut _597: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _598: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _599: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _600: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _601: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _602: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _603: ();<br align="left"/>let _604: error::ErrorCode;<br align="left"/>let _605: ();<br align="left"/>let mut _606: &amp;ReErased str;<br align="left"/>let _607: &amp;ReErased str;<br align="left"/>let mut _608: &amp;ReErased std::string::String;<br align="left"/>let _609: &amp;ReErased std::string::String;<br align="left"/>let _610: std::string::String;<br align="left"/>let _611: std::string::String;<br align="left"/>let mut _612: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _613: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _614: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _615: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _616: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _617: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _618: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _619: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _620: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _621: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _622: &amp;ReErased error::ErrorCode;<br align="left"/>let _623: &amp;ReErased error::ErrorCode;<br align="left"/>let _624: ();<br align="left"/>let mut _625: &amp;ReErased str;<br align="left"/>let _626: &amp;ReErased str;<br align="left"/>let mut _627: error::ErrorCode;<br align="left"/>let mut _628: isize;<br align="left"/>let _629: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _630: !;<br align="left"/>let mut _631: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _632: ();<br align="left"/>let _633: ();<br align="left"/>let mut _634: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _635: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _636: bool;<br align="left"/>let mut _637: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _638: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _639: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _640: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _641: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _642: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _643: ();<br align="left"/>let _644: error::ErrorCode;<br align="left"/>let _645: ();<br align="left"/>let mut _646: &amp;ReErased str;<br align="left"/>let _647: &amp;ReErased str;<br align="left"/>let mut _648: &amp;ReErased std::string::String;<br align="left"/>let _649: &amp;ReErased std::string::String;<br align="left"/>let _650: std::string::String;<br align="left"/>let _651: std::string::String;<br align="left"/>let mut _652: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _653: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _654: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _655: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _656: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _657: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _658: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _659: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _660: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _661: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _662: &amp;ReErased error::ErrorCode;<br align="left"/>let _663: &amp;ReErased error::ErrorCode;<br align="left"/>let _664: ();<br align="left"/>let mut _665: &amp;ReErased str;<br align="left"/>let _666: &amp;ReErased str;<br align="left"/>let mut _667: error::ErrorCode;<br align="left"/>let mut _668: isize;<br align="left"/>let _669: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _670: !;<br align="left"/>let mut _671: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _672: ();<br align="left"/>let _673: ();<br align="left"/>let mut _674: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _675: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _676: bool;<br align="left"/>let mut _677: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _678: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _679: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _680: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _681: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _682: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _683: ();<br align="left"/>let _684: error::ErrorCode;<br align="left"/>let _685: ();<br align="left"/>let mut _686: &amp;ReErased str;<br align="left"/>let _687: &amp;ReErased str;<br align="left"/>let mut _688: &amp;ReErased std::string::String;<br align="left"/>let _689: &amp;ReErased std::string::String;<br align="left"/>let _690: std::string::String;<br align="left"/>let _691: std::string::String;<br align="left"/>let mut _692: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _693: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _694: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _695: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _696: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _697: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _698: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _699: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _700: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _701: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _702: &amp;ReErased error::ErrorCode;<br align="left"/>let _703: &amp;ReErased error::ErrorCode;<br align="left"/>let _704: ();<br align="left"/>let mut _705: &amp;ReErased str;<br align="left"/>let _706: &amp;ReErased str;<br align="left"/>let mut _707: error::ErrorCode;<br align="left"/>let mut _708: isize;<br align="left"/>let _709: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _710: !;<br align="left"/>let mut _711: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _712: ();<br align="left"/>let _713: ();<br align="left"/>let mut _714: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _715: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _716: bool;<br align="left"/>let mut _717: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _718: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _719: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _720: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _721: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _722: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _723: ();<br align="left"/>let _724: error::ErrorCode;<br align="left"/>let _725: ();<br align="left"/>let mut _726: &amp;ReErased str;<br align="left"/>let _727: &amp;ReErased str;<br align="left"/>let mut _728: &amp;ReErased std::string::String;<br align="left"/>let _729: &amp;ReErased std::string::String;<br align="left"/>let _730: std::string::String;<br align="left"/>let _731: std::string::String;<br align="left"/>let mut _732: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _733: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _734: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _735: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _736: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _737: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _738: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _739: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _740: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _741: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _742: &amp;ReErased error::ErrorCode;<br align="left"/>let _743: &amp;ReErased error::ErrorCode;<br align="left"/>let _744: ();<br align="left"/>let mut _745: &amp;ReErased str;<br align="left"/>let _746: &amp;ReErased str;<br align="left"/>let mut _747: error::ErrorCode;<br align="left"/>let mut _748: isize;<br align="left"/>let _749: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _750: !;<br align="left"/>let mut _751: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _752: ();<br align="left"/>let _753: ();<br align="left"/>let mut _754: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _755: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _756: bool;<br align="left"/>let mut _757: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _758: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _759: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _760: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _761: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _762: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _763: ();<br align="left"/>let _764: error::ErrorCode;<br align="left"/>let _765: ();<br align="left"/>let mut _766: &amp;ReErased str;<br align="left"/>let _767: &amp;ReErased str;<br align="left"/>let mut _768: &amp;ReErased std::string::String;<br align="left"/>let _769: &amp;ReErased std::string::String;<br align="left"/>let _770: std::string::String;<br align="left"/>let _771: std::string::String;<br align="left"/>let mut _772: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _773: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _774: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _775: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _776: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _777: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _778: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _779: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _780: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _781: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _782: &amp;ReErased error::ErrorCode;<br align="left"/>let _783: &amp;ReErased error::ErrorCode;<br align="left"/>let _784: ();<br align="left"/>let mut _785: &amp;ReErased str;<br align="left"/>let _786: &amp;ReErased str;<br align="left"/>let mut _787: error::ErrorCode;<br align="left"/>let mut _788: isize;<br align="left"/>let _789: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _790: !;<br align="left"/>let mut _791: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _792: ();<br align="left"/>let _793: ();<br align="left"/>let mut _794: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _795: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _796: bool;<br align="left"/>let mut _797: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _798: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _799: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _800: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _801: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _802: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _803: ();<br align="left"/>let _804: error::ErrorCode;<br align="left"/>let _805: ();<br align="left"/>let mut _806: &amp;ReErased str;<br align="left"/>let _807: &amp;ReErased str;<br align="left"/>let mut _808: &amp;ReErased std::string::String;<br align="left"/>let _809: &amp;ReErased std::string::String;<br align="left"/>let _810: std::string::String;<br align="left"/>let _811: std::string::String;<br align="left"/>let mut _812: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _813: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _814: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _815: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _816: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _817: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _818: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _819: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _820: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _821: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _822: &amp;ReErased error::ErrorCode;<br align="left"/>let _823: &amp;ReErased error::ErrorCode;<br align="left"/>let _824: ();<br align="left"/>let mut _825: &amp;ReErased str;<br align="left"/>let _826: &amp;ReErased str;<br align="left"/>let mut _827: error::ErrorCode;<br align="left"/>let mut _828: isize;<br align="left"/>let _829: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _830: !;<br align="left"/>let mut _831: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _832: ();<br align="left"/>let _833: ();<br align="left"/>let mut _834: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _835: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _836: bool;<br align="left"/>let mut _837: usize;<br align="left"/>let mut _838: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _839: usize;<br align="left"/>let mut _840: usize;<br align="left"/>let mut _841: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _842: (usize, bool);<br align="left"/>let mut _843: ();<br align="left"/>let _844: error::ErrorCode;<br align="left"/>let _845: ();<br align="left"/>let mut _846: &amp;ReErased str;<br align="left"/>let _847: &amp;ReErased str;<br align="left"/>let mut _848: &amp;ReErased std::string::String;<br align="left"/>let _849: &amp;ReErased std::string::String;<br align="left"/>let _850: std::string::String;<br align="left"/>let _851: std::string::String;<br align="left"/>let mut _852: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _853: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _854: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _855: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _856: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _857: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _858: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _859: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _860: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _861: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _862: &amp;ReErased error::ErrorCode;<br align="left"/>let _863: &amp;ReErased error::ErrorCode;<br align="left"/>let _864: ();<br align="left"/>let mut _865: &amp;ReErased str;<br align="left"/>let _866: &amp;ReErased str;<br align="left"/>let mut _867: error::ErrorCode;<br align="left"/>let mut _868: isize;<br align="left"/>let _869: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _870: !;<br align="left"/>let mut _871: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _872: ();<br align="left"/>let mut _873: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _874: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _875: usize;<br align="left"/>let mut _876: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _877: std::ops::Range&lt;usize&gt;;<br align="left"/>let _878: ();<br align="left"/>let mut _879: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _880: &amp;ReErased mut std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _881: &amp;ReErased mut std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _882: isize;<br align="left"/>let mut _883: !;<br align="left"/>let _884: usize;<br align="left"/>let _885: ();<br align="left"/>let mut _886: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _887: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _888: bool;<br align="left"/>let mut _889: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _890: usize;<br align="left"/>let mut _891: usize;<br align="left"/>let mut _892: (usize, bool);<br align="left"/>let mut _893: usize;<br align="left"/>let mut _894: bool;<br align="left"/>let mut _895: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _896: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _897: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _898: usize;<br align="left"/>let mut _899: ();<br align="left"/>let _900: error::ErrorCode;<br align="left"/>let _901: ();<br align="left"/>let mut _902: &amp;ReErased str;<br align="left"/>let _903: &amp;ReErased str;<br align="left"/>let mut _904: &amp;ReErased std::string::String;<br align="left"/>let _905: &amp;ReErased std::string::String;<br align="left"/>let _906: std::string::String;<br align="left"/>let _907: std::string::String;<br align="left"/>let mut _908: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _909: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _910: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _911: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _912: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _913: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _914: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _915: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _916: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _917: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _918: &amp;ReErased error::ErrorCode;<br align="left"/>let _919: &amp;ReErased error::ErrorCode;<br align="left"/>let _920: ();<br align="left"/>let mut _921: &amp;ReErased str;<br align="left"/>let _922: &amp;ReErased str;<br align="left"/>let mut _923: &amp;ReErased std::string::String;<br align="left"/>let _924: &amp;ReErased std::string::String;<br align="left"/>let _925: std::string::String;<br align="left"/>let _926: std::string::String;<br align="left"/>let mut _927: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _928: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _929: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _930: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _931: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _932: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _933: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _934: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _935: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _936: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _937: &amp;ReErased usize;<br align="left"/>let _938: &amp;ReErased usize;<br align="left"/>let mut _939: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _940: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _941: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _942: usize;<br align="left"/>let mut _943: usize;<br align="left"/>let mut _944: (usize, bool);<br align="left"/>let mut _945: usize;<br align="left"/>let mut _946: bool;<br align="left"/>let mut _947: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _948: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _949: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _950: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let mut _951: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _952: usize;<br align="left"/>let mut _953: error::ErrorCode;<br align="left"/>let mut _954: isize;<br align="left"/>let _955: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _956: !;<br align="left"/>let mut _957: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _958: ();<br align="left"/>let mut _959: bool;<br align="left"/>let mut _960: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _961: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _962: &amp;ReErased [anchor_lang::prelude::AccountMeta];<br align="left"/>let _963: &amp;ReErased [anchor_lang::prelude::AccountMeta];<br align="left"/>let mut _964: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _965: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let _966: ();<br align="left"/>let mut _967: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _968: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _969: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _970: isize;<br align="left"/>let mut _971: !;<br align="left"/>let _972: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let _973: ();<br align="left"/>let mut _974: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _975: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _976: bool;<br align="left"/>let mut _977: bool;<br align="left"/>let mut _978: ();<br align="left"/>let _979: error::ErrorCode;<br align="left"/>let _980: ();<br align="left"/>let mut _981: &amp;ReErased str;<br align="left"/>let _982: &amp;ReErased str;<br align="left"/>let mut _983: &amp;ReErased std::string::String;<br align="left"/>let _984: &amp;ReErased std::string::String;<br align="left"/>let _985: std::string::String;<br align="left"/>let _986: std::string::String;<br align="left"/>let mut _987: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _988: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _989: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _990: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _991: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _992: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _993: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _994: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _995: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _996: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _997: &amp;ReErased error::ErrorCode;<br align="left"/>let _998: &amp;ReErased error::ErrorCode;<br align="left"/>let _999: ();<br align="left"/>let mut _1000: &amp;ReErased str;<br align="left"/>let _1001: &amp;ReErased str;<br align="left"/>let mut _1002: error::ErrorCode;<br align="left"/>let mut _1003: isize;<br align="left"/>let _1004: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1005: !;<br align="left"/>let mut _1006: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1007: ();<br align="left"/>let mut _1008: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _1009: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _1010: &amp;ReErased [anchor_lang::prelude::AccountMeta];<br align="left"/>let _1011: &amp;ReErased [anchor_lang::prelude::AccountMeta];<br align="left"/>let mut _1012: &amp;ReErased std::vec::Vec&lt;anchor_lang::prelude::AccountMeta, std::alloc::Global&gt;;<br align="left"/>let mut _1013: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let _1014: ();<br align="left"/>let mut _1015: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _1016: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _1017: &amp;ReErased mut std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountMeta&gt;;<br align="left"/>let mut _1018: isize;<br align="left"/>let mut _1019: !;<br align="left"/>let _1020: &amp;ReErased anchor_lang::prelude::AccountMeta;<br align="left"/>let _1021: ();<br align="left"/>let mut _1022: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1023: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1024: bool;<br align="left"/>let mut _1025: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1026: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _1027: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1028: ();<br align="left"/>let _1029: error::ErrorCode;<br align="left"/>let _1030: ();<br align="left"/>let mut _1031: &amp;ReErased str;<br align="left"/>let _1032: &amp;ReErased str;<br align="left"/>let mut _1033: &amp;ReErased std::string::String;<br align="left"/>let _1034: &amp;ReErased std::string::String;<br align="left"/>let _1035: std::string::String;<br align="left"/>let _1036: std::string::String;<br align="left"/>let mut _1037: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1038: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1039: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1040: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1041: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1042: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1043: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1044: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1045: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1046: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1047: &amp;ReErased error::ErrorCode;<br align="left"/>let _1048: &amp;ReErased error::ErrorCode;<br align="left"/>let _1049: ();<br align="left"/>let mut _1050: &amp;ReErased str;<br align="left"/>let _1051: &amp;ReErased str;<br align="left"/>let mut _1052: error::ErrorCode;<br align="left"/>let mut _1053: isize;<br align="left"/>let _1054: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1055: !;<br align="left"/>let mut _1056: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1057: ();<br align="left"/>let mut _1058: (usize, bool);<br align="left"/>let _1059: ();<br align="left"/>let mut _1060: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1061: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1062: bool;<br align="left"/>let mut _1063: ();<br align="left"/>let _1064: error::ErrorCode;<br align="left"/>let _1065: ();<br align="left"/>let mut _1066: &amp;ReErased str;<br align="left"/>let _1067: &amp;ReErased str;<br align="left"/>let mut _1068: &amp;ReErased std::string::String;<br align="left"/>let _1069: &amp;ReErased std::string::String;<br align="left"/>let _1070: std::string::String;<br align="left"/>let _1071: std::string::String;<br align="left"/>let mut _1072: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1073: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1074: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1075: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1076: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1077: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1078: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1079: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1080: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1081: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1082: &amp;ReErased error::ErrorCode;<br align="left"/>let _1083: &amp;ReErased error::ErrorCode;<br align="left"/>let _1084: ();<br align="left"/>let mut _1085: &amp;ReErased str;<br align="left"/>let _1086: &amp;ReErased str;<br align="left"/>let mut _1087: error::ErrorCode;<br align="left"/>let mut _1088: isize;<br align="left"/>let _1089: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1090: !;<br align="left"/>let mut _1091: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1092: ();<br align="left"/>let mut _1093: ();<br align="left"/>let mut _1094: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1095: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1096: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1097: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1098: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1099: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1100: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1102: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1103: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1104: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1105: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1106: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1107: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1108: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1109: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1110: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1111: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1112: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1113: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1114: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1115: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1116: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1117: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1118: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _1119: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1120: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1121: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1122: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1123: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1124: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1125: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1126: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1127: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1128: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1129: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1130: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1131: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1132: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1133: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1134: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1135: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1136: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1137: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1138: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1139: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1140: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1141: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1142: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1143: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1144: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1145: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1146: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _1147: &amp;ReErased mut instructions::if_staker::InsuranceFundSwap&lt;ReErased&gt;;<br align="left"/>let mut _1148: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _1149: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _1150: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _1151: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1152: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _1153: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _1154: isize;<br align="left"/>let mut _1155: isize;<br align="left"/>let mut _1156: isize;<br align="left"/>let mut _1157: isize;<br align="left"/>let mut _1158: isize;<br align="left"/>let mut _1159: isize;<br align="left"/>let mut _1160: isize;<br align="left"/>let mut _1161: isize;<br align="left"/>let mut _1162: isize;<br align="left"/>let mut _1163: isize;<br align="left"/>let mut _1164: isize;<br align="left"/>let mut _1165: isize;<br align="left"/>let mut _1166: isize;<br align="left"/>let mut _1167: isize;<br align="left"/>let mut _1168: isize;<br align="left"/>let mut _1169: isize;<br align="left"/>let mut _1170: isize;<br align="left"/>let mut _1171: isize;<br align="left"/>let mut _1172: isize;<br align="left"/>let mut _1173: isize;<br align="left"/>let mut _1174: isize;<br align="left"/>let mut _1175: isize;<br align="left"/>let mut _1176: isize;<br align="left"/>let mut _1177: isize;<br align="left"/>let mut _1178: isize;<br align="left"/>let mut _1179: isize;<br align="left"/>let mut _1180: isize;<br align="left"/>let mut _1181: isize;<br align="left"/>let mut _1182: isize;<br align="left"/>let mut _1183: isize;<br align="left"/>let mut _1184: isize;<br align="left"/>let mut _1185: isize;<br align="left"/>let mut _1186: isize;<br align="left"/>let mut _1187: isize;<br align="left"/>let mut _1188: isize;<br align="left"/>let mut _1189: isize;<br align="left"/>let mut _1190: isize;<br align="left"/>let mut _1191: isize;<br align="left"/>let mut _1192: isize;<br align="left"/>let mut _1193: isize;<br align="left"/>let mut _1194: isize;<br align="left"/>let mut _1195: isize;<br align="left"/>let mut _1196: isize;<br align="left"/>let mut _1197: isize;<br align="left"/>let mut _1198: isize;<br align="left"/>let mut _1199: isize;<br align="left"/>let mut _1200: isize;<br align="left"/>let mut _1201: isize;<br align="left"/>let mut _1202: isize;<br align="left"/>let mut _1203: isize;<br align="left"/>let mut _1204: isize;<br align="left"/>let mut _1205: isize;<br align="left"/>let mut _1206: isize;<br align="left"/>let mut _1207: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _1208: *const [u16; 2_usize];<br align="left"/>let mut _1209: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _1210: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1211: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1212: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1213: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1214: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1215: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1216: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _1217: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1218: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1219: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1220: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _1221: *const ();<br align="left"/>let mut _1222: usize;<br align="left"/>let mut _1223: usize;<br align="left"/>let mut _1224: usize;<br align="left"/>let mut _1225: usize;<br align="left"/>let mut _1226: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug in_market_index =&gt; _2;<br align="left"/>debug out_market_index =&gt; _3;<br align="left"/>debug amount_in =&gt; _4;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug state =&gt; _15;<br align="left"/>debug clock =&gt; _16;<br align="left"/>debug residual =&gt; _20;<br align="left"/>debug val =&gt; _23;<br align="left"/>debug now =&gt; _24;<br align="left"/>debug remaining_accounts_iter =&gt; _25;<br align="left"/>debug perp_market_map =&gt; _29;<br align="left"/>debug spot_market_map =&gt; _30;<br align="left"/>debug oracle_map =&gt; _31;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug _token_interface =&gt; _61;<br align="left"/>debug residual =&gt; _66;<br align="left"/>debug val =&gt; _69;<br align="left"/>debug mint =&gt; _70;<br align="left"/>debug residual =&gt; _75;<br align="left"/>debug val =&gt; _78;<br align="left"/>debug _out_mint =&gt; _79;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug in_spot_market =&gt; _88;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug mint =&gt; _102;<br align="left"/>debug error_code =&gt; _114;<br align="left"/>debug res =&gt; _121;<br align="left"/>debug residual =&gt; _139;<br align="left"/>debug val =&gt; _142;<br align="left"/>debug error_code =&gt; _155;<br align="left"/>debug res =&gt; _162;<br align="left"/>debug residual =&gt; _180;<br align="left"/>debug val =&gt; _183;<br align="left"/>debug out_spot_market =&gt; _184;<br align="left"/>debug residual =&gt; _191;<br align="left"/>debug val =&gt; _194;<br align="left"/>debug in_spot_has_transfer_hook =&gt; _195;<br align="left"/>debug out_spot_has_transfer_hook =&gt; _199;<br align="left"/>debug error_code =&gt; _209;<br align="left"/>debug res =&gt; _216;<br align="left"/>debug residual =&gt; _234;<br align="left"/>debug val =&gt; _237;<br align="left"/>debug error_code =&gt; _250;<br align="left"/>debug res =&gt; _257;<br align="left"/>debug residual =&gt; _275;<br align="left"/>debug val =&gt; _278;<br align="left"/>debug error_code =&gt; _286;<br align="left"/>debug res =&gt; _293;<br align="left"/>debug residual =&gt; _311;<br align="left"/>debug val =&gt; _314;<br align="left"/>debug error_code =&gt; _321;<br align="left"/>debug res =&gt; _328;<br align="left"/>debug residual =&gt; _346;<br align="left"/>debug val =&gt; _349;<br align="left"/>debug if_rebalance_config =&gt; _350;<br align="left"/>debug residual =&gt; _355;<br align="left"/>debug val =&gt; _358;<br align="left"/>debug residual =&gt; _387;<br align="left"/>debug val =&gt; _390;<br align="left"/>debug in_vault =&gt; _391;<br align="left"/>debug in_token_account =&gt; _392;<br align="left"/>debug out_token_account =&gt; _403;<br align="left"/>debug residual =&gt; _434;<br align="left"/>debug val =&gt; _437;<br align="left"/>debug ixs =&gt; _438;<br align="left"/>debug current_index =&gt; _440;<br align="left"/>debug residual =&gt; _446;<br align="left"/>debug val =&gt; _449;<br align="left"/>debug current_ix =&gt; _450;<br align="left"/>debug residual =&gt; _456;<br align="left"/>debug val =&gt; _459;<br align="left"/>debug error_code =&gt; _467;<br align="left"/>debug res =&gt; _474;<br align="left"/>debug residual =&gt; _492;<br align="left"/>debug val =&gt; _495;<br align="left"/>debug index =&gt; _496;<br align="left"/>debug found_end =&gt; _499;<br align="left"/>debug ix =&gt; _502;<br align="left"/>debug ix =&gt; _508;<br align="left"/>debug e =&gt; _510;<br align="left"/>debug error_code =&gt; _524;<br align="left"/>debug res =&gt; _531;<br align="left"/>debug residual =&gt; _549;<br align="left"/>debug val =&gt; _552;<br align="left"/>debug discriminator =&gt; _553;<br align="left"/>debug error_code =&gt; _564;<br align="left"/>debug res =&gt; _571;<br align="left"/>debug residual =&gt; _589;<br align="left"/>debug val =&gt; _592;<br align="left"/>debug error_code =&gt; _604;<br align="left"/>debug res =&gt; _611;<br align="left"/>debug residual =&gt; _629;<br align="left"/>debug val =&gt; _632;<br align="left"/>debug error_code =&gt; _644;<br align="left"/>debug res =&gt; _651;<br align="left"/>debug residual =&gt; _669;<br align="left"/>debug val =&gt; _672;<br align="left"/>debug error_code =&gt; _684;<br align="left"/>debug res =&gt; _691;<br align="left"/>debug residual =&gt; _709;<br align="left"/>debug val =&gt; _712;<br align="left"/>debug error_code =&gt; _724;<br align="left"/>debug res =&gt; _731;<br align="left"/>debug residual =&gt; _749;<br align="left"/>debug val =&gt; _752;<br align="left"/>debug error_code =&gt; _764;<br align="left"/>debug res =&gt; _771;<br align="left"/>debug residual =&gt; _789;<br align="left"/>debug val =&gt; _792;<br align="left"/>debug error_code =&gt; _804;<br align="left"/>debug res =&gt; _811;<br align="left"/>debug residual =&gt; _829;<br align="left"/>debug val =&gt; _832;<br align="left"/>debug error_code =&gt; _844;<br align="left"/>debug res =&gt; _851;<br align="left"/>debug residual =&gt; _869;<br align="left"/>debug val =&gt; _872;<br align="left"/>debug iter =&gt; _877;<br align="left"/>debug i =&gt; _884;<br align="left"/>debug error_code =&gt; _900;<br align="left"/>debug res =&gt; _907;<br align="left"/>debug res =&gt; _926;<br align="left"/>debug residual =&gt; _955;<br align="left"/>debug val =&gt; _958;<br align="left"/>debug iter =&gt; _965;<br align="left"/>debug meta =&gt; _972;<br align="left"/>debug error_code =&gt; _979;<br align="left"/>debug res =&gt; _986;<br align="left"/>debug residual =&gt; _1004;<br align="left"/>debug val =&gt; _1007;<br align="left"/>debug iter =&gt; _1013;<br align="left"/>debug meta =&gt; _1020;<br align="left"/>debug error_code =&gt; _1029;<br align="left"/>debug res =&gt; _1036;<br align="left"/>debug residual =&gt; _1054;<br align="left"/>debug val =&gt; _1057;<br align="left"/>debug error_code =&gt; _1064;<br align="left"/>debug res =&gt; _1071;<br align="left"/>debug residual =&gt; _1089;<br align="left"/>debug val =&gt; _1092;<br align="left"/>>;
    bb0__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_1115 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_9 = &amp;((*_1115).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_1116 = deref_copy (*_9)<br/>_1207 = (((_1116.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_8 = &amp;(*_1207)<br/></td></tr><tr><td align="left">_7 = constraints::fill_not_paused(move _8)</td></tr></table>>];
    bb1__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_10 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_6 as Continue).0: ())<br/>_5 = _14<br/>StorageDead(_14)<br/>_1154 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_15)<br/>_1117 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_15 = &amp;((*_1117).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/></td></tr><tr><td align="left">_18 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_13)<br/>_13 = move _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>_1194 = discriminant(_6)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb8__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_19 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _19)</td></tr></table>>];
    bb9__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = move ((_17 as Continue).0: anchor_lang::prelude::Clock)<br/>_16 = move _23<br/>StorageDead(_23)<br/>_1156 = discriminant(_17)<br/>StorageDead(_17)<br/>StorageLive(_24)<br/>_24 = (_16.4: i64)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_1118 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_28 = &amp;(*_1118)<br/></td></tr><tr><td align="left">_27 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _28)</td></tr></table>>];
    bb10__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_22)<br/>_22 = move _20<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _22)</td></tr></table>>];
    bb11__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_20)<br/>_1192 = discriminant(_17)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _27)</td></tr></table>>];
    bb13__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = &amp;mut _26<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;mut (*_25)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/></td></tr><tr><td align="left">_38 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb14__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>_45 = SizeOf([u16; 2])<br/>_46 = AlignOf([u16; 2])<br/></td></tr><tr><td align="left">_47 = alloc::alloc::exchange_malloc(move _45, move _46)</td></tr></table>>];
    bb15__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ShallowInitBox(move _47, [u16; 2])<br/>StorageLive(_49)<br/>_49 = _2<br/>StorageLive(_50)<br/>_50 = _3<br/>_1208 = (((_48.0: std::ptr::Unique&lt;[u16; 2]&gt;).0: std::ptr::NonNull&lt;[u16; 2]&gt;).0: *const [u16; 2])<br/>_1221 = _1208 as *const () (PtrToPtr)<br/>_1222 = _1221 as usize (Transmute)<br/>_1223 = AlignOf([u16; 2])<br/>_1224 = Sub(_1223, const 1_usize)<br/>_1225 = BitAnd(_1222, _1224)<br/>_1226 = Eq(_1225, const 0_usize)<br/></td></tr><tr><td align="left">assert(_1226, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _1223, _1222)</td></tr></table>>];
    bb16__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = get_writable_spot_market_set_from_many(move _42)</td></tr></table>>];
    bb17__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>StorageLive(_51)<br/>_51 = (_16.0: u64)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_1119 = deref_copy (*_15)<br/>_1209 = (((_1119.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_55 = &amp;(*_1209)<br/></td></tr><tr><td align="left">_54 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _55)</td></tr></table>>];
    bb18__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_53 = ((*_54).7: state::state::OracleGuardRails)<br/>_52 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _53)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_34 = load_maps(move _35, move _36, move _39, move _51, move _52)</td></tr></table>>];
    bb19__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb20__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_56 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb21__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = move ((_33 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_32 = move _60<br/>StorageDead(_60)<br/>StorageLive(_29)<br/>_29 = move (_32.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_30)<br/>_30 = move (_32.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_31)<br/>_31 = move (_32.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_1160 = discriminant(_33)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb22__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb23__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>_1158 = discriminant(_33)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb24__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb25__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_63 = get_token_interface(move _64)</td></tr></table>>];
    bb26__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb27__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_65 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _65)</td></tr></table>>];
    bb28__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = move ((_62 as Continue).0: std::option::Option&lt;anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;&gt;)<br/>_61 = move _69<br/>StorageDead(_69)<br/>StorageDead(_62)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_72 = get_token_mint(move _73)</td></tr></table>>];
    bb29__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_68)<br/>_68 = _66<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _68)</td></tr></table>>];
    bb30__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _72)</td></tr></table>>];
    bb32__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>_74 = discriminant(_71)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb33__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = move ((_71 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_70 = move _78<br/>StorageDead(_78)<br/>StorageDead(_71)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;mut (*_25)<br/></td></tr><tr><td align="left">_81 = get_token_mint(move _82)</td></tr></table>>];
    bb34__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_71 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_77)<br/>_77 = _75<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _77)</td></tr></table>>];
    bb35__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/></td></tr><tr><td align="left">_80 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _81)</td></tr></table>>];
    bb37__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>_83 = discriminant(_80)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb38__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = move ((_80 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_79 = move _87<br/>StorageDead(_87)<br/>StorageDead(_80)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;_30<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_2<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_90 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _91, move _92)</td></tr></table>>];
    bb39__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_80 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb40__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">_89 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _90)</td></tr></table>>];
    bb42__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_94 = discriminant(_89)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb43__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_89 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_88 = move _98<br/>StorageDead(_98)<br/>_1164 = discriminant(_89)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_100 = &amp;_70<br/>_101 = discriminant((*_100))<br/></td></tr><tr><td align="left">switchInt(move _101)</td></tr></table>>];
    bb44__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_89 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb45__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>_1162 = discriminant(_89)<br/>StorageDead(_93)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_102)<br/>_102 = &amp;(((*_100) as Some).0: anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>_109 = &amp;(*_102)<br/></td></tr><tr><td align="left">_108 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as anchor_lang::Key&gt;::key(move _109)</td></tr></table>>];
    bb47__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_107 = &amp;_108<br/>StorageDead(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = &amp;_88<br/></td></tr><tr><td align="left">_111 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _112)</td></tr></table>>];
    bb48__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_110 = &amp;((*_111).2: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_106 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _107, move _110)</td></tr></table>>];
    bb49__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb50__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageLive(_113)<br/>_113 = ()<br/>_105 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _113)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageLive(_114)<br/>_114 = error::ErrorCode::InvalidSwap<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_1114 = const _<br/>_125 = &amp;(*_1114)<br/>_124 = &amp;(*_125)<br/>_123 = move _124 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_124)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = &amp;_114<br/>_132 = &amp;(*_133)<br/></td></tr><tr><td align="left">_131 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _132)</td></tr></table>>];
    bb52__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_130 = [move _131]<br/>StorageDead(_131)<br/>_129 = &amp;_130<br/>_128 = &amp;(*_129)<br/>_127 = move _128 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_122 = Arguments::&lt;'_&gt;::new_v1(move _123, move _127)</td></tr></table>>];
    bb53__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = format(move _122)</td></tr></table>>];
    bb54__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_133)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>_120 = move _121<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/></td></tr><tr><td align="left">_117 = &lt;String as Deref&gt;::deref(move _118)</td></tr></table>>];
    bb55__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_116 = &amp;(*_117)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_115 = solana_program::log::sol_log(move _116)</td></tr></table>>];
    bb56__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_120)</td></tr></table>>];
    bb57__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_117)<br/>StorageDead(_115)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = const &quot;in_spot_market.mint mismatch&quot;<br/>_135 = &amp;(*_136)<br/></td></tr><tr><td align="left">_134 = solana_program::log::sol_log(move _135)</td></tr></table>>];
    bb58__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageLive(_137)<br/>_137 = _114<br/>_105 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _137)<br/>StorageDead(_137)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb60__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_138 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _138)</td></tr></table>>];
    bb61__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_142)<br/>_142 = ((_104 as Continue).0: ())<br/>_103 = _142<br/>StorageDead(_142)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>_99 = const ()<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_141)<br/>_141 = _139<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _141)</td></tr></table>>];
    bb63__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_99 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_88<br/></td></tr><tr><td align="left">_148 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _149)</td></tr></table>>];
    bb66__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>_147 = ((*_148).52: u64)<br/>_146 = Eq(move _147, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _146)</td></tr></table>>];
    bb67__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>_153 = &amp;_88<br/></td></tr><tr><td align="left">_152 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb68__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>_151 = ((*_152).51: u64)<br/>_150 = Eq(move _151, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb69__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/>StorageLive(_154)<br/>_154 = ()<br/>_145 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _154)<br/>StorageDead(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_155)<br/>_155 = error::ErrorCode::InvalidSwap<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_1113 = const _<br/>_166 = &amp;(*_1113)<br/>_165 = &amp;(*_166)<br/>_164 = move _165 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_165)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;_155<br/>_173 = &amp;(*_174)<br/></td></tr><tr><td align="left">_172 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _173)</td></tr></table>>];
    bb73__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>_171 = [move _172]<br/>StorageDead(_172)<br/>_170 = &amp;_171<br/>_169 = &amp;(*_170)<br/>_168 = move _169 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_163 = Arguments::&lt;'_&gt;::new_v1(move _164, move _168)</td></tr></table>>];
    bb74__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">_162 = format(move _163)</td></tr></table>>];
    bb75__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_163)<br/>StorageDead(_174)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageDead(_166)<br/>_161 = move _162<br/>StorageDead(_162)<br/>_160 = &amp;_161<br/>_159 = &amp;(*_160)<br/></td></tr><tr><td align="left">_158 = &lt;String as Deref&gt;::deref(move _159)</td></tr></table>>];
    bb76__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_157 = &amp;(*_158)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">_156 = solana_program::log::sol_log(move _157)</td></tr></table>>];
    bb77__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/></td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb78__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>StorageDead(_160)<br/>StorageDead(_158)<br/>StorageDead(_156)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = const &quot;begin_swap ended in invalid state&quot;<br/>_176 = &amp;(*_177)<br/></td></tr><tr><td align="left">_175 = solana_program::log::sol_log(move _176)</td></tr></table>>];
    bb79__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_177)<br/>StorageDead(_175)<br/>StorageLive(_178)<br/>_178 = _155<br/>_145 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _178)<br/>StorageDead(_178)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_150)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb81__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_179 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _179)</td></tr></table>>];
    bb82__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_144 as Continue).0: ())<br/>_143 = _183<br/>StorageDead(_183)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>_187 = &amp;_30<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;_3<br/>_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_186 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _187, move _188)</td></tr></table>>];
    bb83__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_180)<br/>_180 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_182)<br/>_182 = _180<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _182)</td></tr></table>>];
    bb84__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>StorageDead(_180)<br/>StorageDead(_144)<br/>StorageDead(_143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">_185 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _186)</td></tr></table>>];
    bb86__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>_190 = discriminant(_185)<br/></td></tr><tr><td align="left">switchInt(move _190)</td></tr></table>>];
    bb87__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_194)<br/>_194 = move ((_185 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_184 = move _194<br/>StorageDead(_194)<br/>_1168 = discriminant(_185)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>_198 = &amp;_88<br/></td></tr><tr><td align="left">_197 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _198)</td></tr></table>>];
    bb88__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_191)<br/>_191 = ((_185 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_193)<br/>_193 = _191<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _193)</td></tr></table>>];
    bb89__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_191)<br/>_1166 = discriminant(_185)<br/>StorageDead(_189)<br/>StorageDead(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">_196 = &amp;(*_197)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_195 = SpotMarket::has_transfer_hook(move _196)</td></tr></table>>];
    bb91__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>StorageDead(_197)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = &amp;_184<br/></td></tr><tr><td align="left">_201 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _202)</td></tr></table>>];
    bb92__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_200 = &amp;(*_201)<br/>StorageDead(_202)<br/></td></tr><tr><td align="left">_199 = SpotMarket::has_transfer_hook(move _200)</td></tr></table>>];
    bb93__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>StorageDead(_201)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>_206 = _195<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb94__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = _199<br/></td></tr><tr><td align="left">switchInt(move _207)</td></tr></table>>];
    bb95__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ()<br/>_205 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _208)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_209)<br/>_209 = error::ErrorCode::InvalidSwap<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>StorageLive(_215)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_1112 = const _<br/>_220 = &amp;(*_1112)<br/>_219 = &amp;(*_220)<br/>_218 = move _219 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_219)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_228 = &amp;_209<br/>_227 = &amp;(*_228)<br/></td></tr><tr><td align="left">_226 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _227)</td></tr></table>>];
    bb97__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>_225 = [move _226]<br/>StorageDead(_226)<br/>_224 = &amp;_225<br/>_223 = &amp;(*_224)<br/>_222 = move _223 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_217 = Arguments::&lt;'_&gt;::new_v1(move _218, move _222)</td></tr></table>>];
    bb98__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>StorageDead(_218)<br/></td></tr><tr><td align="left">_216 = format(move _217)</td></tr></table>>];
    bb99__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_217)<br/>StorageDead(_228)<br/>StorageDead(_225)<br/>StorageDead(_224)<br/>StorageDead(_220)<br/>_215 = move _216<br/>StorageDead(_216)<br/>_214 = &amp;_215<br/>_213 = &amp;(*_214)<br/></td></tr><tr><td align="left">_212 = &lt;String as Deref&gt;::deref(move _213)</td></tr></table>>];
    bb100__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">_211 = &amp;(*_212)<br/>StorageDead(_213)<br/></td></tr><tr><td align="left">_210 = solana_program::log::sol_log(move _211)</td></tr></table>>];
    bb101__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">drop(_215)</td></tr></table>>];
    bb102__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_214)<br/>StorageDead(_212)<br/>StorageDead(_210)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_231 = const &quot;both in and out spot markets cannot both have transfer hooks&quot;<br/>_230 = &amp;(*_231)<br/></td></tr><tr><td align="left">_229 = solana_program::log::sol_log(move _230)</td></tr></table>>];
    bb103__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_231)<br/>StorageDead(_229)<br/>StorageLive(_232)<br/>_232 = _209<br/>_205 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _232)<br/>StorageDead(_232)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_206)<br/></td></tr><tr><td align="left">_204 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _205)</td></tr></table>>];
    bb105__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>_233 = discriminant(_204)<br/></td></tr><tr><td align="left">switchInt(move _233)</td></tr></table>>];
    bb106__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageLive(_237)<br/>_237 = ((_204 as Continue).0: ())<br/>_203 = _237<br/>StorageDead(_237)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>_244 = &amp;_184<br/></td></tr><tr><td align="left">_243 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _244)</td></tr></table>>];
    bb107__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageLive(_234)<br/>_234 = ((_204 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_236)<br/>_236 = _234<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _236)</td></tr></table>>];
    bb108__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>StorageDead(_234)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>_242 = ((*_243).52: u64)<br/>_241 = Eq(move _242, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _241)</td></tr></table>>];
    bb110__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_242)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>_248 = &amp;_184<br/></td></tr><tr><td align="left">_247 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _248)</td></tr></table>>];
    bb111__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>_246 = ((*_247).51: u64)<br/>_245 = Eq(move _246, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _245)</td></tr></table>>];
    bb112__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_246)<br/>StorageLive(_249)<br/>_249 = ()<br/>_240 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _249)<br/>StorageDead(_249)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb113__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_247)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_243)<br/>StorageDead(_242)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_250)<br/>_250 = error::ErrorCode::InvalidSwap<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>_1111 = const _<br/>_261 = &amp;(*_1111)<br/>_260 = &amp;(*_261)<br/>_259 = move _260 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_260)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>_269 = &amp;_250<br/>_268 = &amp;(*_269)<br/></td></tr><tr><td align="left">_267 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _268)</td></tr></table>>];
    bb116__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_268)<br/>_266 = [move _267]<br/>StorageDead(_267)<br/>_265 = &amp;_266<br/>_264 = &amp;(*_265)<br/>_263 = move _264 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_264)<br/></td></tr><tr><td align="left">_258 = Arguments::&lt;'_&gt;::new_v1(move _259, move _263)</td></tr></table>>];
    bb117__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_263)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">_257 = format(move _258)</td></tr></table>>];
    bb118__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/>StorageDead(_269)<br/>StorageDead(_266)<br/>StorageDead(_265)<br/>StorageDead(_261)<br/>_256 = move _257<br/>StorageDead(_257)<br/>_255 = &amp;_256<br/>_254 = &amp;(*_255)<br/></td></tr><tr><td align="left">_253 = &lt;String as Deref&gt;::deref(move _254)</td></tr></table>>];
    bb119__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">_252 = &amp;(*_253)<br/>StorageDead(_254)<br/></td></tr><tr><td align="left">_251 = solana_program::log::sol_log(move _252)</td></tr></table>>];
    bb120__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/></td></tr><tr><td align="left">drop(_256)</td></tr></table>>];
    bb121__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_256)<br/>StorageDead(_255)<br/>StorageDead(_253)<br/>StorageDead(_251)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_272 = const &quot;begin_swap ended in invalid state&quot;<br/>_271 = &amp;(*_272)<br/></td></tr><tr><td align="left">_270 = solana_program::log::sol_log(move _271)</td></tr></table>>];
    bb122__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_271)<br/>StorageDead(_272)<br/>StorageDead(_270)<br/>StorageLive(_273)<br/>_273 = _250<br/>_240 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _273)<br/>StorageDead(_273)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">_239 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _240)</td></tr></table>>];
    bb124__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>_274 = discriminant(_239)<br/></td></tr><tr><td align="left">switchInt(move _274)</td></tr></table>>];
    bb125__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageLive(_278)<br/>_278 = ((_239 as Continue).0: ())<br/>_238 = _278<br/>StorageDead(_278)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>_283 = _2<br/>StorageLive(_284)<br/>_284 = _3<br/>_282 = Ne(move _283, move _284)<br/></td></tr><tr><td align="left">switchInt(move _282)</td></tr></table>>];
    bb126__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageLive(_275)<br/>_275 = ((_239 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_277)<br/>_277 = _275<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _277)</td></tr></table>>];
    bb127__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_275)<br/>StorageDead(_239)<br/>StorageDead(_238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_283)<br/>StorageLive(_285)<br/>_285 = ()<br/>_281 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _285)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_284)<br/>StorageDead(_283)<br/>StorageLive(_286)<br/>_286 = error::ErrorCode::InvalidSwap<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>StorageLive(_297)<br/>_1110 = const _<br/>_297 = &amp;(*_1110)<br/>_296 = &amp;(*_297)<br/>_295 = move _296 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_296)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = &amp;_286<br/>_304 = &amp;(*_305)<br/></td></tr><tr><td align="left">_303 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _304)</td></tr></table>>];
    bb130__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>_302 = [move _303]<br/>StorageDead(_303)<br/>_301 = &amp;_302<br/>_300 = &amp;(*_301)<br/>_299 = move _300 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_300)<br/></td></tr><tr><td align="left">_294 = Arguments::&lt;'_&gt;::new_v1(move _295, move _299)</td></tr></table>>];
    bb131__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_295)<br/></td></tr><tr><td align="left">_293 = format(move _294)</td></tr></table>>];
    bb132__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_305)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageDead(_297)<br/>_292 = move _293<br/>StorageDead(_293)<br/>_291 = &amp;_292<br/>_290 = &amp;(*_291)<br/></td></tr><tr><td align="left">_289 = &lt;String as Deref&gt;::deref(move _290)</td></tr></table>>];
    bb133__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">_288 = &amp;(*_289)<br/>StorageDead(_290)<br/></td></tr><tr><td align="left">_287 = solana_program::log::sol_log(move _288)</td></tr></table>>];
    bb134__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/></td></tr><tr><td align="left">drop(_292)</td></tr></table>>];
    bb135__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_291)<br/>StorageDead(_289)<br/>StorageDead(_287)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>_308 = const &quot;in and out market the same&quot;<br/>_307 = &amp;(*_308)<br/></td></tr><tr><td align="left">_306 = solana_program::log::sol_log(move _307)</td></tr></table>>];
    bb136__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_308)<br/>StorageDead(_306)<br/>StorageLive(_309)<br/>_309 = _286<br/>_281 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _309)<br/>StorageDead(_309)<br/>StorageDead(_286)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_282)<br/></td></tr><tr><td align="left">_280 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _281)</td></tr></table>>];
    bb138__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>_310 = discriminant(_280)<br/></td></tr><tr><td align="left">switchInt(move _310)</td></tr></table>>];
    bb139__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageLive(_314)<br/>_314 = ((_280 as Continue).0: ())<br/>_279 = _314<br/>StorageDead(_314)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = _4<br/>_318 = Ne(move _319, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _318)</td></tr></table>>];
    bb140__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageLive(_311)<br/>_311 = ((_280 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_313)<br/>_313 = _311<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _313)</td></tr></table>>];
    bb141__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_313)<br/>StorageDead(_311)<br/>StorageDead(_280)<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb142__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageLive(_320)<br/>_320 = ()<br/>_317 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _320)<br/>StorageDead(_320)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb143__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>StorageLive(_321)<br/>_321 = error::ErrorCode::InvalidSwap<br/>StorageLive(_322)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>_1109 = const _<br/>_332 = &amp;(*_1109)<br/>_331 = &amp;(*_332)<br/>_330 = move _331 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_331)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_340 = &amp;_321<br/>_339 = &amp;(*_340)<br/></td></tr><tr><td align="left">_338 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _339)</td></tr></table>>];
    bb144__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_339)<br/>_337 = [move _338]<br/>StorageDead(_338)<br/>_336 = &amp;_337<br/>_335 = &amp;(*_336)<br/>_334 = move _335 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_335)<br/></td></tr><tr><td align="left">_329 = Arguments::&lt;'_&gt;::new_v1(move _330, move _334)</td></tr></table>>];
    bb145__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/>StorageDead(_330)<br/></td></tr><tr><td align="left">_328 = format(move _329)</td></tr></table>>];
    bb146__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/>StorageDead(_340)<br/>StorageDead(_337)<br/>StorageDead(_336)<br/>StorageDead(_332)<br/>_327 = move _328<br/>StorageDead(_328)<br/>_326 = &amp;_327<br/>_325 = &amp;(*_326)<br/></td></tr><tr><td align="left">_324 = &lt;String as Deref&gt;::deref(move _325)</td></tr></table>>];
    bb147__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">_323 = &amp;(*_324)<br/>StorageDead(_325)<br/></td></tr><tr><td align="left">_322 = solana_program::log::sol_log(move _323)</td></tr></table>>];
    bb148__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/></td></tr><tr><td align="left">drop(_327)</td></tr></table>>];
    bb149__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_327)<br/>StorageDead(_326)<br/>StorageDead(_324)<br/>StorageDead(_322)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_343 = const &quot;amount_out cannot be zero&quot;<br/>_342 = &amp;(*_343)<br/></td></tr><tr><td align="left">_341 = solana_program::log::sol_log(move _342)</td></tr></table>>];
    bb150__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_343)<br/>StorageDead(_341)<br/>StorageLive(_344)<br/>_344 = _321<br/>_317 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _344)<br/>StorageDead(_344)<br/>StorageDead(_321)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/></td></tr><tr><td align="left">_316 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _317)</td></tr></table>>];
    bb152__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_317)<br/>_345 = discriminant(_316)<br/></td></tr><tr><td align="left">switchInt(move _345)</td></tr></table>>];
    bb153__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_349)<br/>_349 = ((_316 as Continue).0: ())<br/>_315 = _349<br/>StorageDead(_349)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_1120 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_353 = &amp;((*_1120).6: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/></td></tr><tr><td align="left">_352 = anchor_lang::prelude::AccountLoader::&lt;'_, IfRebalanceConfig&gt;::load_mut(move _353)</td></tr></table>>];
    bb154__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_346)<br/>_346 = ((_316 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_348)<br/>_348 = _346<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _348)</td></tr></table>>];
    bb155__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_348)<br/>StorageDead(_346)<br/>StorageDead(_316)<br/>StorageDead(_315)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/></td></tr><tr><td align="left">_351 = &lt;std::result::Result&lt;RefMut&lt;'_, IfRebalanceConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _352)</td></tr></table>>];
    bb157__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_352)<br/>_354 = discriminant(_351)<br/></td></tr><tr><td align="left">switchInt(move _354)</td></tr></table>>];
    bb158__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_358)<br/>_358 = move ((_351 as Continue).0: std::cell::RefMut&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/>_350 = move _358<br/>StorageDead(_358)<br/>_1170 = discriminant(_351)<br/>StorageDead(_351)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>_365 = &amp;mut _350<br/>_364 = &amp;mut (*_365)<br/></td></tr><tr><td align="left">_363 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _364)</td></tr></table>>];
    bb159__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_355)<br/>_355 = move ((_351 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_357)<br/>_357 = move _355<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _357)</td></tr></table>>];
    bb160__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_355)<br/>_1190 = discriminant(_351)<br/>StorageDead(_351)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb161__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">_362 = &amp;mut (*_363)<br/>StorageDead(_364)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_1121 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_1122 = deref_copy ((*_1121).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_1210 = (((_1122.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_370 = &amp;(*_1210)<br/></td></tr><tr><td align="left">_369 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _370)</td></tr></table>>];
    bb162__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">_368 = &amp;(*_369)<br/></td></tr><tr><td align="left">_367 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _368)</td></tr></table>>];
    bb163__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>StorageDead(_368)<br/>_366 = ((*_367).2: u64)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>_1123 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_1124 = deref_copy ((*_1123).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_1211 = (((_1124.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_375 = &amp;(*_1211)<br/></td></tr><tr><td align="left">_374 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _375)</td></tr></table>>];
    bb164__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">_373 = &amp;(*_374)<br/></td></tr><tr><td align="left">_372 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _373)</td></tr></table>>];
    bb165__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageDead(_373)<br/>_371 = ((*_372).2: u64)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>_379 = &amp;mut _88<br/>_378 = &amp;mut (*_379)<br/></td></tr><tr><td align="left">_377 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _378)</td></tr></table>>];
    bb166__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">_376 = &amp;mut (*_377)<br/>StorageDead(_378)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>_383 = &amp;mut _184<br/>_382 = &amp;mut (*_383)<br/></td></tr><tr><td align="left">_381 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _382)</td></tr></table>>];
    bb167__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_380 = &amp;mut (*_381)<br/>StorageDead(_382)<br/>StorageLive(_384)<br/>_384 = _4<br/>StorageLive(_385)<br/>_385 = _24<br/></td></tr><tr><td align="left">_361 = handle_if_begin_swap(move _362, move _366, move _371, move _376, move _380, move _384, move _385)</td></tr></table>>];
    bb168__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_385)<br/>StorageDead(_384)<br/>StorageDead(_380)<br/>StorageDead(_376)<br/>StorageDead(_371)<br/>StorageDead(_366)<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">_360 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _361)</td></tr></table>>];
    bb169__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>_386 = discriminant(_360)<br/></td></tr><tr><td align="left">switchInt(move _386)</td></tr></table>>];
    bb170__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageLive(_390)<br/>_390 = ((_360 as Continue).0: ())<br/>_359 = _390<br/>StorageDead(_390)<br/>StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_374)<br/>StorageDead(_372)<br/>StorageDead(_369)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/>StorageLive(_391)<br/>_1125 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_391 = &amp;((*_1125).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_392)<br/>_1126 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_392 = &amp;((*_1126).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_393)<br/>_393 = _4<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>_395 = &amp;mut _88<br/></td></tr><tr><td align="left">_394 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _395)</td></tr></table>>];
    bb171__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_387)<br/>_387 = ((_360 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_389)<br/>_389 = _387<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _389)</td></tr></table>>];
    bb172__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageDead(_387)<br/>StorageDead(_383)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_377)<br/>StorageDead(_374)<br/>StorageDead(_372)<br/>StorageDead(_369)<br/>StorageDead(_367)<br/>StorageDead(_365)<br/>StorageDead(_363)<br/>StorageDead(_360)<br/>StorageDead(_359)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>((*_394).51: u64) = move _393<br/>StorageDead(_393)<br/>StorageDead(_394)<br/>StorageLive(_396)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>_1127 = deref_copy (*_392)<br/>_1212 = (((_1127.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_400 = &amp;(*_1212)<br/></td></tr><tr><td align="left">_399 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _400)</td></tr></table>>];
    bb174__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">_398 = &amp;(*_399)<br/></td></tr><tr><td align="left">_397 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _398)</td></tr></table>>];
    bb175__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageDead(_398)<br/>_396 = ((*_397).2: u64)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>_402 = &amp;mut _88<br/></td></tr><tr><td align="left">_401 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _402)</td></tr></table>>];
    bb176__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>((*_401).52: u64) = move _396<br/>StorageDead(_396)<br/>StorageDead(_401)<br/>StorageDead(_399)<br/>StorageDead(_397)<br/>StorageLive(_403)<br/>_1128 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_403 = &amp;((*_1128).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>StorageLive(_406)<br/>StorageLive(_407)<br/>StorageLive(_408)<br/>_1129 = deref_copy (*_403)<br/>_1213 = (((_1129.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_408 = &amp;(*_1213)<br/></td></tr><tr><td align="left">_407 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _408)</td></tr></table>>];
    bb177__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">_406 = &amp;(*_407)<br/></td></tr><tr><td align="left">_405 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _406)</td></tr></table>>];
    bb178__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_408)<br/>StorageDead(_406)<br/>_404 = ((*_405).2: u64)<br/>StorageLive(_409)<br/>StorageLive(_410)<br/>_410 = &amp;mut _184<br/></td></tr><tr><td align="left">_409 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _410)</td></tr></table>>];
    bb179__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>((*_409).52: u64) = move _404<br/>StorageDead(_404)<br/>StorageDead(_409)<br/>StorageDead(_407)<br/>StorageDead(_405)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>StorageLive(_415)<br/>_1130 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_415 = &amp;((*_1130).7: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/>_414 = &amp;(*_415)<br/>StorageLive(_416)<br/>_1131 = deref_copy (*_391)<br/>_1214 = (((_1131.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_416 = &amp;(*_1214)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>_1132 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_418 = &amp;((*_1132).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_1133 = deref_copy (*_418)<br/>_1215 = (((_1133.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_417 = &amp;(*_1215)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>_1134 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_420 = &amp;((*_1134).8: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_419 = &amp;(*_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_1135 = deref_copy (*_15)<br/>_1216 = (((_1135.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_423 = &amp;(*_1216)<br/></td></tr><tr><td align="left">_422 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _423)</td></tr></table>>];
    bb180__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_423)<br/>_421 = ((*_422).15: u8)<br/>StorageLive(_424)<br/>_424 = _4<br/>StorageLive(_425)<br/>StorageLive(_426)<br/>_426 = &amp;_70<br/>_425 = &amp;(*_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>_431 = &amp;_88<br/></td></tr><tr><td align="left">_430 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _431)</td></tr></table>>];
    bb181__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">_429 = &amp;(*_430)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">_428 = SpotMarket::has_transfer_hook(move _429)</td></tr></table>>];
    bb182__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left">switchInt(move _428)</td></tr></table>>];
    bb183__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>StorageDead(_429)<br/>StorageLive(_432)<br/>_432 = &amp;mut (*_25)<br/>_427 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _432)<br/>StorageDead(_432)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb184__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_430)<br/>StorageDead(_429)<br/>_427 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/></td></tr><tr><td align="left">_413 = send_from_program_vault(move _414, move _416, move _417, move _419, move _421, move _424, move _425, move _427)</td></tr></table>>];
    bb186__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_427)<br/>StorageDead(_425)<br/>StorageDead(_424)<br/>StorageDead(_421)<br/>StorageDead(_419)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_414)<br/></td></tr><tr><td align="left">_412 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _413)</td></tr></table>>];
    bb187__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>_433 = discriminant(_412)<br/></td></tr><tr><td align="left">switchInt(move _433)</td></tr></table>>];
    bb188__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageLive(_437)<br/>_437 = ((_412 as Continue).0: ())<br/>_411 = _437<br/>StorageDead(_437)<br/>_1172 = discriminant(_412)<br/>StorageDead(_426)<br/>StorageDead(_422)<br/>StorageDead(_420)<br/>StorageDead(_418)<br/>StorageDead(_415)<br/>StorageDead(_412)<br/>StorageDead(_411)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>_1136 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_439 = &amp;((*_1136).9: anchor_lang::prelude::UncheckedAccount&lt;'_&gt;)<br/></td></tr><tr><td align="left">_438 = &lt;anchor_lang::prelude::UncheckedAccount&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _439)</td></tr></table>>];
    bb189__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_434)<br/>_434 = move ((_412 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_436)<br/>_436 = move _434<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _436)</td></tr></table>>];
    bb190__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_436)<br/>StorageDead(_434)<br/>_1188 = discriminant(_412)<br/>StorageDead(_426)<br/>StorageDead(_422)<br/>StorageDead(_420)<br/>StorageDead(_418)<br/>StorageDead(_415)<br/>StorageDead(_412)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb191__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>StorageLive(_444)<br/>_444 = &amp;(*_438)<br/></td></tr><tr><td align="left">_443 = load_current_index_checked(move _444)</td></tr></table>>];
    bb192__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/></td></tr><tr><td align="left">_442 = &lt;std::result::Result&lt;u16, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _443)</td></tr></table>>];
    bb193__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_443)<br/>_445 = discriminant(_442)<br/></td></tr><tr><td align="left">switchInt(move _445)</td></tr></table>>];
    bb194__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageLive(_449)<br/>_449 = ((_442 as Continue).0: u16)<br/>_441 = _449<br/>StorageDead(_449)<br/>_440 = move _441 as usize (IntToInt)<br/>StorageDead(_441)<br/>_1174 = discriminant(_442)<br/>StorageDead(_442)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>_453 = _440<br/>StorageLive(_454)<br/>_454 = &amp;(*_438)<br/></td></tr><tr><td align="left">_452 = load_instruction_at_checked(move _453, move _454)</td></tr></table>>];
    bb195__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageLive(_446)<br/>_446 = move ((_442 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_448)<br/>_448 = move _446<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _448)</td></tr></table>>];
    bb196__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>StorageDead(_446)<br/>StorageDead(_441)<br/>_1186 = discriminant(_442)<br/>StorageDead(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb197__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/>StorageDead(_453)<br/></td></tr><tr><td align="left">_451 = &lt;std::result::Result&lt;Instruction, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _452)</td></tr></table>>];
    bb198__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_452)<br/>_455 = discriminant(_451)<br/></td></tr><tr><td align="left">switchInt(move _455)</td></tr></table>>];
    bb199__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageLive(_459)<br/>_459 = move ((_451 as Continue).0: solana_program::instruction::Instruction)<br/>_450 = move _459<br/>StorageDead(_459)<br/>_1176 = discriminant(_451)<br/>StorageDead(_451)<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>_464 = &amp;(_450.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_465)<br/>_1137 = deref_copy (_1.0: &amp;anchor_lang::prelude::Pubkey)<br/>_465 = &amp;(*_1137)<br/></td></tr><tr><td align="left">_463 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _464, move _465)</td></tr></table>>];
    bb200__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">StorageLive(_456)<br/>_456 = move ((_451 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_458)<br/>_458 = move _456<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _458)</td></tr></table>>];
    bb201__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>StorageDead(_456)<br/>_1184 = discriminant(_451)<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb202__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left">switchInt(move _463)</td></tr></table>>];
    bb203__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_464)<br/>StorageLive(_466)<br/>_466 = ()<br/>_462 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _466)<br/>StorageDead(_466)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb204__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/>StorageDead(_464)<br/>StorageLive(_467)<br/>_467 = error::ErrorCode::InvalidSwap<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>_1108 = const _<br/>_478 = &amp;(*_1108)<br/>_477 = &amp;(*_478)<br/>_476 = move _477 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_477)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>_486 = &amp;_467<br/>_485 = &amp;(*_486)<br/></td></tr><tr><td align="left">_484 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _485)</td></tr></table>>];
    bb205__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>_483 = [move _484]<br/>StorageDead(_484)<br/>_482 = &amp;_483<br/>_481 = &amp;(*_482)<br/>_480 = move _481 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_481)<br/></td></tr><tr><td align="left">_475 = Arguments::&lt;'_&gt;::new_v1(move _476, move _480)</td></tr></table>>];
    bb206__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>StorageDead(_476)<br/></td></tr><tr><td align="left">_474 = format(move _475)</td></tr></table>>];
    bb207__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_486)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/>StorageDead(_478)<br/>_473 = move _474<br/>StorageDead(_474)<br/>_472 = &amp;_473<br/>_471 = &amp;(*_472)<br/></td></tr><tr><td align="left">_470 = &lt;String as Deref&gt;::deref(move _471)</td></tr></table>>];
    bb208__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">_469 = &amp;(*_470)<br/>StorageDead(_471)<br/></td></tr><tr><td align="left">_468 = solana_program::log::sol_log(move _469)</td></tr></table>>];
    bb209__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/></td></tr><tr><td align="left">drop(_473)</td></tr></table>>];
    bb210__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>StorageDead(_472)<br/>StorageDead(_470)<br/>StorageDead(_468)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>_489 = const &quot;SwapBegin must be a top-level instruction (cant be cpi)&quot;<br/>_488 = &amp;(*_489)<br/></td></tr><tr><td align="left">_487 = solana_program::log::sol_log(move _488)</td></tr></table>>];
    bb211__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_488)<br/>StorageDead(_489)<br/>StorageDead(_487)<br/>StorageLive(_490)<br/>_490 = _467<br/>_462 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _490)<br/>StorageDead(_490)<br/>StorageDead(_467)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb212__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/></td></tr><tr><td align="left">_461 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _462)</td></tr></table>>];
    bb213__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_462)<br/>_491 = discriminant(_461)<br/></td></tr><tr><td align="left">switchInt(move _491)</td></tr></table>>];
    bb214__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageLive(_495)<br/>_495 = ((_461 as Continue).0: ())<br/>_460 = _495<br/>StorageDead(_495)<br/>StorageDead(_461)<br/>StorageDead(_460)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>_497 = _440<br/>_498 = CheckedAdd(_497, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_498.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _497, const 1_usize)</td></tr></table>>];
    bb215__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageLive(_492)<br/>_492 = ((_461 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_494)<br/>_494 = _492<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _494)</td></tr></table>>];
    bb216__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_494)<br/>StorageDead(_492)<br/>StorageDead(_461)<br/>StorageDead(_460)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb217__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">_496 = move (_498.0: usize)<br/>StorageDead(_497)<br/>StorageLive(_499)<br/>_499 = const false<br/>StorageLive(_500)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb218__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageLive(_502)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>_504 = _496<br/>StorageLive(_505)<br/>_505 = &amp;(*_438)<br/></td></tr><tr><td align="left">_503 = load_instruction_at_checked(move _504, move _505)</td></tr></table>>];
    bb219__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_505)<br/>StorageDead(_504)<br/>_507 = discriminant(_503)<br/></td></tr><tr><td align="left">switchInt(move _507)</td></tr></table>>];
    bb220__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">_506 = discriminant(((_503 as Err).0: anchor_lang::prelude::ProgramError))<br/></td></tr><tr><td align="left">switchInt(move _506)</td></tr></table>>];
    bb221__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageLive(_510)<br/>_510 = move ((_503 as Err).0: anchor_lang::prelude::ProgramError)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>_513 = move _510<br/></td></tr><tr><td align="left">_512 = &lt;anchor_lang::prelude::ProgramError as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _513)</td></tr></table>>];
    bb222__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_508)<br/>_508 = move ((_503 as Ok).0: solana_program::instruction::Instruction)<br/>_502 = move _508<br/>StorageDead(_508)<br/>_1178 = discriminant(_503)<br/>StorageDead(_503)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>_516 = &amp;(_502.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/></td></tr><tr><td align="left">_518 = id()</td></tr></table>>];
    bb223__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">_500 = const ()<br/>_1180 = discriminant(_503)<br/></td></tr><tr><td align="left">switchInt(move _1180)</td></tr></table>>];
    bb224__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_513)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _512)<br/>StorageDead(_512)<br/>StorageDead(_510)<br/>_1182 = discriminant(_503)<br/>StorageDead(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">_517 = &amp;_518<br/></td></tr><tr><td align="left">_515 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _516, move _517)</td></tr></table>>];
    bb226__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left">switchInt(move _515)</td></tr></table>>];
    bb227__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/>StorageDead(_517)<br/>StorageDead(_516)<br/>StorageLive(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>_522 = _499<br/></td></tr><tr><td align="left">switchInt(move _522)</td></tr></table>>];
    bb228__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageLive(_523)<br/>_523 = ()<br/>_521 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _523)<br/>StorageDead(_523)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb229__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageLive(_524)<br/>_524 = error::ErrorCode::InvalidSwap<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>_1105 = const _<br/>_535 = &amp;(*_1105)<br/>_534 = &amp;(*_535)<br/>_533 = move _534 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_534)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>_543 = &amp;_524<br/>_542 = &amp;(*_543)<br/></td></tr><tr><td align="left">_541 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _542)</td></tr></table>>];
    bb230__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>_540 = [move _541]<br/>StorageDead(_541)<br/>_539 = &amp;_540<br/>_538 = &amp;(*_539)<br/>_537 = move _538 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_538)<br/></td></tr><tr><td align="left">_532 = Arguments::&lt;'_&gt;::new_v1(move _533, move _537)</td></tr></table>>];
    bb231__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageDead(_537)<br/>StorageDead(_533)<br/></td></tr><tr><td align="left">_531 = format(move _532)</td></tr></table>>];
    bb232__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_532)<br/>StorageDead(_543)<br/>StorageDead(_540)<br/>StorageDead(_539)<br/>StorageDead(_535)<br/>_530 = move _531<br/>StorageDead(_531)<br/>_529 = &amp;_530<br/>_528 = &amp;(*_529)<br/></td></tr><tr><td align="left">_527 = &lt;String as Deref&gt;::deref(move _528)</td></tr></table>>];
    bb233__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">_526 = &amp;(*_527)<br/>StorageDead(_528)<br/></td></tr><tr><td align="left">_525 = solana_program::log::sol_log(move _526)</td></tr></table>>];
    bb234__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/></td></tr><tr><td align="left">drop(_530)</td></tr></table>>];
    bb235__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/>StorageDead(_529)<br/>StorageDead(_527)<br/>StorageDead(_525)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>_546 = const &quot;the transaction must not contain a Drift instruction after FlashLoanEnd&quot;<br/>_545 = &amp;(*_546)<br/></td></tr><tr><td align="left">_544 = solana_program::log::sol_log(move _545)</td></tr></table>>];
    bb236__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_546)<br/>StorageDead(_544)<br/>StorageLive(_547)<br/>_547 = _524<br/>_521 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _547)<br/>StorageDead(_547)<br/>StorageDead(_524)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb237__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/></td></tr><tr><td align="left">_520 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _521)</td></tr></table>>];
    bb238__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_521)<br/>_548 = discriminant(_520)<br/></td></tr><tr><td align="left">switchInt(move _548)</td></tr></table>>];
    bb239__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageLive(_552)<br/>_552 = ((_520 as Continue).0: ())<br/>_519 = _552<br/>StorageDead(_552)<br/>StorageDead(_520)<br/>StorageDead(_519)<br/>_499 = const true<br/>StorageLive(_553)<br/></td></tr><tr><td align="left">_553 = &lt;EndInsuranceFundSwap as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb240__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageLive(_549)<br/>_549 = ((_520 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_551)<br/>_551 = _549<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _551)</td></tr></table>>];
    bb241__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/>StorageDead(_549)<br/>StorageDead(_520)<br/>StorageDead(_519)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb242__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageLive(_554)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>_560 = &amp;(_502.2: std::vec::Vec&lt;u8&gt;)<br/>StorageLive(_561)<br/>_561 = std::ops::Range::&lt;usize&gt; { start: const 0_usize, end: const 8_usize }<br/></td></tr><tr><td align="left">_559 = &lt;Vec&lt;u8&gt; as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _560, move _561)</td></tr></table>>];
    bb243__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">_558 = &amp;(*_559)<br/>StorageDead(_561)<br/>StorageDead(_560)<br/>StorageLive(_562)<br/>_562 = &amp;_553<br/></td></tr><tr><td align="left">_557 = &lt;[u8] as PartialEq&lt;[u8; 8]&gt;&gt;::eq(move _558, move _562)</td></tr></table>>];
    bb244__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left">switchInt(move _557)</td></tr></table>>];
    bb245__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/>StorageLive(_563)<br/>_563 = ()<br/>_556 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _563)<br/>StorageDead(_563)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/>StorageLive(_564)<br/>_564 = error::ErrorCode::InvalidSwap<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>StorageLive(_575)<br/>_1104 = const _<br/>_575 = &amp;(*_1104)<br/>_574 = &amp;(*_575)<br/>_573 = move _574 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_574)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>_583 = &amp;_564<br/>_582 = &amp;(*_583)<br/></td></tr><tr><td align="left">_581 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _582)</td></tr></table>>];
    bb247__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_582)<br/>_580 = [move _581]<br/>StorageDead(_581)<br/>_579 = &amp;_580<br/>_578 = &amp;(*_579)<br/>_577 = move _578 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_578)<br/></td></tr><tr><td align="left">_572 = Arguments::&lt;'_&gt;::new_v1(move _573, move _577)</td></tr></table>>];
    bb248__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/>StorageDead(_573)<br/></td></tr><tr><td align="left">_571 = format(move _572)</td></tr></table>>];
    bb249__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_572)<br/>StorageDead(_583)<br/>StorageDead(_580)<br/>StorageDead(_579)<br/>StorageDead(_575)<br/>_570 = move _571<br/>StorageDead(_571)<br/>_569 = &amp;_570<br/>_568 = &amp;(*_569)<br/></td></tr><tr><td align="left">_567 = &lt;String as Deref&gt;::deref(move _568)</td></tr></table>>];
    bb250__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">_566 = &amp;(*_567)<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">_565 = solana_program::log::sol_log(move _566)</td></tr></table>>];
    bb251__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/></td></tr><tr><td align="left">drop(_570)</td></tr></table>>];
    bb252__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_570)<br/>StorageDead(_569)<br/>StorageDead(_567)<br/>StorageDead(_565)<br/>StorageLive(_584)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>_586 = const &quot;last drift ix must be end of swap&quot;<br/>_585 = &amp;(*_586)<br/></td></tr><tr><td align="left">_584 = solana_program::log::sol_log(move _585)</td></tr></table>>];
    bb253__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_585)<br/>StorageDead(_586)<br/>StorageDead(_584)<br/>StorageLive(_587)<br/>_587 = _564<br/>_556 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _587)<br/>StorageDead(_587)<br/>StorageDead(_564)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb254__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/></td></tr><tr><td align="left">_555 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _556)</td></tr></table>>];
    bb255__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>_588 = discriminant(_555)<br/></td></tr><tr><td align="left">switchInt(move _588)</td></tr></table>>];
    bb256__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_592)<br/>_592 = ((_555 as Continue).0: ())<br/>_554 = _592<br/>StorageDead(_592)<br/>StorageDead(_555)<br/>StorageDead(_554)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>StorageLive(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>_1138 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_599 = &amp;((*_1138).1: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_598 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _599)</td></tr></table>>];
    bb257__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageLive(_589)<br/>_589 = ((_555 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_591)<br/>_591 = _589<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _591)</td></tr></table>>];
    bb258__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_591)<br/>StorageDead(_589)<br/>StorageDead(_555)<br/>StorageDead(_554)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">_597 = &amp;_598<br/>StorageDead(_599)<br/>StorageLive(_600)<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>_602 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_601 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _602, const 1_usize)</td></tr></table>>];
    bb260__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_602)<br/>_600 = &amp;((*_601).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_596 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _597, move _600)</td></tr></table>>];
    bb261__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left">switchInt(move _596)</td></tr></table>>];
    bb262__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/>StorageDead(_600)<br/>StorageDead(_598)<br/>StorageDead(_597)<br/>StorageLive(_603)<br/>_603 = ()<br/>_595 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _603)<br/>StorageDead(_603)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb263__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_601)<br/>StorageDead(_600)<br/>StorageDead(_598)<br/>StorageDead(_597)<br/>StorageLive(_604)<br/>_604 = error::ErrorCode::InvalidSwap<br/>StorageLive(_605)<br/>StorageLive(_606)<br/>StorageLive(_607)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>StorageLive(_615)<br/>_1103 = const _<br/>_615 = &amp;(*_1103)<br/>_614 = &amp;(*_615)<br/>_613 = move _614 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_614)<br/>StorageLive(_617)<br/>StorageLive(_618)<br/>StorageLive(_619)<br/>StorageLive(_620)<br/>StorageLive(_621)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>_623 = &amp;_604<br/>_622 = &amp;(*_623)<br/></td></tr><tr><td align="left">_621 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _622)</td></tr></table>>];
    bb264__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_622)<br/>_620 = [move _621]<br/>StorageDead(_621)<br/>_619 = &amp;_620<br/>_618 = &amp;(*_619)<br/>_617 = move _618 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_618)<br/></td></tr><tr><td align="left">_612 = Arguments::&lt;'_&gt;::new_v1(move _613, move _617)</td></tr></table>>];
    bb265__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_617)<br/>StorageDead(_613)<br/></td></tr><tr><td align="left">_611 = format(move _612)</td></tr></table>>];
    bb266__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_612)<br/>StorageDead(_623)<br/>StorageDead(_620)<br/>StorageDead(_619)<br/>StorageDead(_615)<br/>_610 = move _611<br/>StorageDead(_611)<br/>_609 = &amp;_610<br/>_608 = &amp;(*_609)<br/></td></tr><tr><td align="left">_607 = &lt;String as Deref&gt;::deref(move _608)</td></tr></table>>];
    bb267__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">_606 = &amp;(*_607)<br/>StorageDead(_608)<br/></td></tr><tr><td align="left">_605 = solana_program::log::sol_log(move _606)</td></tr></table>>];
    bb268__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_606)<br/></td></tr><tr><td align="left">drop(_610)</td></tr></table>>];
    bb269__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_610)<br/>StorageDead(_609)<br/>StorageDead(_607)<br/>StorageDead(_605)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>StorageLive(_626)<br/>_626 = const &quot;the authority passed to SwapBegin and End must match&quot;<br/>_625 = &amp;(*_626)<br/></td></tr><tr><td align="left">_624 = solana_program::log::sol_log(move _625)</td></tr></table>>];
    bb270__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_625)<br/>StorageDead(_626)<br/>StorageDead(_624)<br/>StorageLive(_627)<br/>_627 = _604<br/>_595 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _627)<br/>StorageDead(_627)<br/>StorageDead(_604)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_596)<br/></td></tr><tr><td align="left">_594 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _595)</td></tr></table>>];
    bb272__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>_628 = discriminant(_594)<br/></td></tr><tr><td align="left">switchInt(move _628)</td></tr></table>>];
    bb273__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageLive(_632)<br/>_632 = ((_594 as Continue).0: ())<br/>_593 = _632<br/>StorageDead(_632)<br/>StorageDead(_594)<br/>StorageDead(_593)<br/>StorageLive(_633)<br/>StorageLive(_634)<br/>StorageLive(_635)<br/>StorageLive(_636)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>_1139 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_1140 = deref_copy ((*_1139).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_1217 = (((_1140.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_639 = &amp;(*_1217)<br/></td></tr><tr><td align="left">_638 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _639)</td></tr></table>>];
    bb274__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageLive(_629)<br/>_629 = ((_594 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_631)<br/>_631 = _629<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _631)</td></tr></table>>];
    bb275__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_631)<br/>StorageDead(_629)<br/>StorageDead(_594)<br/>StorageDead(_593)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">_637 = &amp;_638<br/>StorageDead(_639)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>_642 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_641 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _642, const 2_usize)</td></tr></table>>];
    bb277__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_642)<br/>_640 = &amp;((*_641).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_636 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _637, move _640)</td></tr></table>>];
    bb278__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left">switchInt(move _636)</td></tr></table>>];
    bb279__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_641)<br/>StorageDead(_640)<br/>StorageDead(_638)<br/>StorageDead(_637)<br/>StorageLive(_643)<br/>_643 = ()<br/>_635 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _643)<br/>StorageDead(_643)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_641)<br/>StorageDead(_640)<br/>StorageDead(_638)<br/>StorageDead(_637)<br/>StorageLive(_644)<br/>_644 = error::ErrorCode::InvalidSwap<br/>StorageLive(_645)<br/>StorageLive(_646)<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>StorageLive(_649)<br/>StorageLive(_650)<br/>StorageLive(_651)<br/>StorageLive(_652)<br/>StorageLive(_653)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>_1102 = const _<br/>_655 = &amp;(*_1102)<br/>_654 = &amp;(*_655)<br/>_653 = move _654 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_654)<br/>StorageLive(_657)<br/>StorageLive(_658)<br/>StorageLive(_659)<br/>StorageLive(_660)<br/>StorageLive(_661)<br/>StorageLive(_662)<br/>StorageLive(_663)<br/>_663 = &amp;_644<br/>_662 = &amp;(*_663)<br/></td></tr><tr><td align="left">_661 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _662)</td></tr></table>>];
    bb281__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>_660 = [move _661]<br/>StorageDead(_661)<br/>_659 = &amp;_660<br/>_658 = &amp;(*_659)<br/>_657 = move _658 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_658)<br/></td></tr><tr><td align="left">_652 = Arguments::&lt;'_&gt;::new_v1(move _653, move _657)</td></tr></table>>];
    bb282__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_657)<br/>StorageDead(_653)<br/></td></tr><tr><td align="left">_651 = format(move _652)</td></tr></table>>];
    bb283__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>StorageDead(_663)<br/>StorageDead(_660)<br/>StorageDead(_659)<br/>StorageDead(_655)<br/>_650 = move _651<br/>StorageDead(_651)<br/>_649 = &amp;_650<br/>_648 = &amp;(*_649)<br/></td></tr><tr><td align="left">_647 = &lt;String as Deref&gt;::deref(move _648)</td></tr></table>>];
    bb284__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">_646 = &amp;(*_647)<br/>StorageDead(_648)<br/></td></tr><tr><td align="left">_645 = solana_program::log::sol_log(move _646)</td></tr></table>>];
    bb285__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_646)<br/></td></tr><tr><td align="left">drop(_650)</td></tr></table>>];
    bb286__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_650)<br/>StorageDead(_649)<br/>StorageDead(_647)<br/>StorageDead(_645)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>StorageLive(_666)<br/>_666 = const &quot;the out_insurance_fund_vault passed to SwapBegin and End must match&quot;<br/>_665 = &amp;(*_666)<br/></td></tr><tr><td align="left">_664 = solana_program::log::sol_log(move _665)</td></tr></table>>];
    bb287__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_665)<br/>StorageDead(_666)<br/>StorageDead(_664)<br/>StorageLive(_667)<br/>_667 = _644<br/>_635 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _667)<br/>StorageDead(_667)<br/>StorageDead(_644)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb288__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_636)<br/></td></tr><tr><td align="left">_634 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _635)</td></tr></table>>];
    bb289__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_635)<br/>_668 = discriminant(_634)<br/></td></tr><tr><td align="left">switchInt(move _668)</td></tr></table>>];
    bb290__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">StorageLive(_672)<br/>_672 = ((_634 as Continue).0: ())<br/>_633 = _672<br/>StorageDead(_672)<br/>StorageDead(_634)<br/>StorageDead(_633)<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>_1141 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_1142 = deref_copy ((*_1141).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_1218 = (((_1142.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_679 = &amp;(*_1218)<br/></td></tr><tr><td align="left">_678 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _679)</td></tr></table>>];
    bb291__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageLive(_669)<br/>_669 = ((_634 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_671)<br/>_671 = _669<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _671)</td></tr></table>>];
    bb292__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_671)<br/>StorageDead(_669)<br/>StorageDead(_634)<br/>StorageDead(_633)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb293__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">_677 = &amp;_678<br/>StorageDead(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>_682 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_681 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _682, const 3_usize)</td></tr></table>>];
    bb294__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_682)<br/>_680 = &amp;((*_681).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_676 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _677, move _680)</td></tr></table>>];
    bb295__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left">switchInt(move _676)</td></tr></table>>];
    bb296__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageDead(_681)<br/>StorageDead(_680)<br/>StorageDead(_678)<br/>StorageDead(_677)<br/>StorageLive(_683)<br/>_683 = ()<br/>_675 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _683)<br/>StorageDead(_683)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb297__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_681)<br/>StorageDead(_680)<br/>StorageDead(_678)<br/>StorageDead(_677)<br/>StorageLive(_684)<br/>_684 = error::ErrorCode::InvalidSwap<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>StorageLive(_695)<br/>_1101 = const _<br/>_695 = &amp;(*_1101)<br/>_694 = &amp;(*_695)<br/>_693 = move _694 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_694)<br/>StorageLive(_697)<br/>StorageLive(_698)<br/>StorageLive(_699)<br/>StorageLive(_700)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>_703 = &amp;_684<br/>_702 = &amp;(*_703)<br/></td></tr><tr><td align="left">_701 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _702)</td></tr></table>>];
    bb298__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_702)<br/>_700 = [move _701]<br/>StorageDead(_701)<br/>_699 = &amp;_700<br/>_698 = &amp;(*_699)<br/>_697 = move _698 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_698)<br/></td></tr><tr><td align="left">_692 = Arguments::&lt;'_&gt;::new_v1(move _693, move _697)</td></tr></table>>];
    bb299__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_697)<br/>StorageDead(_693)<br/></td></tr><tr><td align="left">_691 = format(move _692)</td></tr></table>>];
    bb300__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_692)<br/>StorageDead(_703)<br/>StorageDead(_700)<br/>StorageDead(_699)<br/>StorageDead(_695)<br/>_690 = move _691<br/>StorageDead(_691)<br/>_689 = &amp;_690<br/>_688 = &amp;(*_689)<br/></td></tr><tr><td align="left">_687 = &lt;String as Deref&gt;::deref(move _688)</td></tr></table>>];
    bb301__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">_686 = &amp;(*_687)<br/>StorageDead(_688)<br/></td></tr><tr><td align="left">_685 = solana_program::log::sol_log(move _686)</td></tr></table>>];
    bb302__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_686)<br/></td></tr><tr><td align="left">drop(_690)</td></tr></table>>];
    bb303__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/>StorageDead(_689)<br/>StorageDead(_687)<br/>StorageDead(_685)<br/>StorageLive(_704)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>_706 = const &quot;the in_insurance_fund_vault passed to SwapBegin and End must match&quot;<br/>_705 = &amp;(*_706)<br/></td></tr><tr><td align="left">_704 = solana_program::log::sol_log(move _705)</td></tr></table>>];
    bb304__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageDead(_706)<br/>StorageDead(_704)<br/>StorageLive(_707)<br/>_707 = _684<br/>_675 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _707)<br/>StorageDead(_707)<br/>StorageDead(_684)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb305__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_676)<br/></td></tr><tr><td align="left">_674 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _675)</td></tr></table>>];
    bb306__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_675)<br/>_708 = discriminant(_674)<br/></td></tr><tr><td align="left">switchInt(move _708)</td></tr></table>>];
    bb307__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageLive(_712)<br/>_712 = ((_674 as Continue).0: ())<br/>_673 = _712<br/>StorageDead(_712)<br/>StorageDead(_674)<br/>StorageDead(_673)<br/>StorageLive(_713)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>StorageLive(_719)<br/>_1143 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_1144 = deref_copy ((*_1143).4: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_1219 = (((_1144.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_719 = &amp;(*_1219)<br/></td></tr><tr><td align="left">_718 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _719)</td></tr></table>>];
    bb308__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageLive(_709)<br/>_709 = ((_674 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_711)<br/>_711 = _709<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _711)</td></tr></table>>];
    bb309__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_711)<br/>StorageDead(_709)<br/>StorageDead(_674)<br/>StorageDead(_673)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb310__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">_717 = &amp;_718<br/>StorageDead(_719)<br/>StorageLive(_720)<br/>StorageLive(_721)<br/>StorageLive(_722)<br/>_722 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_721 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _722, const 4_usize)</td></tr></table>>];
    bb311__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_722)<br/>_720 = &amp;((*_721).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_716 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _717, move _720)</td></tr></table>>];
    bb312__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left">switchInt(move _716)</td></tr></table>>];
    bb313__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_721)<br/>StorageDead(_720)<br/>StorageDead(_718)<br/>StorageDead(_717)<br/>StorageLive(_723)<br/>_723 = ()<br/>_715 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _723)<br/>StorageDead(_723)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageDead(_721)<br/>StorageDead(_720)<br/>StorageDead(_718)<br/>StorageDead(_717)<br/>StorageLive(_724)<br/>_724 = error::ErrorCode::InvalidSwap<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>StorageLive(_730)<br/>StorageLive(_731)<br/>StorageLive(_732)<br/>StorageLive(_733)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>_1100 = const _<br/>_735 = &amp;(*_1100)<br/>_734 = &amp;(*_735)<br/>_733 = move _734 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_734)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>_743 = &amp;_724<br/>_742 = &amp;(*_743)<br/></td></tr><tr><td align="left">_741 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _742)</td></tr></table>>];
    bb315__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_742)<br/>_740 = [move _741]<br/>StorageDead(_741)<br/>_739 = &amp;_740<br/>_738 = &amp;(*_739)<br/>_737 = move _738 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_738)<br/></td></tr><tr><td align="left">_732 = Arguments::&lt;'_&gt;::new_v1(move _733, move _737)</td></tr></table>>];
    bb316__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_737)<br/>StorageDead(_733)<br/></td></tr><tr><td align="left">_731 = format(move _732)</td></tr></table>>];
    bb317__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_732)<br/>StorageDead(_743)<br/>StorageDead(_740)<br/>StorageDead(_739)<br/>StorageDead(_735)<br/>_730 = move _731<br/>StorageDead(_731)<br/>_729 = &amp;_730<br/>_728 = &amp;(*_729)<br/></td></tr><tr><td align="left">_727 = &lt;String as Deref&gt;::deref(move _728)</td></tr></table>>];
    bb318__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">_726 = &amp;(*_727)<br/>StorageDead(_728)<br/></td></tr><tr><td align="left">_725 = solana_program::log::sol_log(move _726)</td></tr></table>>];
    bb319__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_726)<br/></td></tr><tr><td align="left">drop(_730)</td></tr></table>>];
    bb320__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_730)<br/>StorageDead(_729)<br/>StorageDead(_727)<br/>StorageDead(_725)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>_746 = const &quot;the out_token_account passed to SwapBegin and End must match&quot;<br/>_745 = &amp;(*_746)<br/></td></tr><tr><td align="left">_744 = solana_program::log::sol_log(move _745)</td></tr></table>>];
    bb321__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_745)<br/>StorageDead(_746)<br/>StorageDead(_744)<br/>StorageLive(_747)<br/>_747 = _724<br/>_715 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _747)<br/>StorageDead(_747)<br/>StorageDead(_724)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb322__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_716)<br/></td></tr><tr><td align="left">_714 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _715)</td></tr></table>>];
    bb323__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_715)<br/>_748 = discriminant(_714)<br/></td></tr><tr><td align="left">switchInt(move _748)</td></tr></table>>];
    bb324__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageLive(_752)<br/>_752 = ((_714 as Continue).0: ())<br/>_713 = _752<br/>StorageDead(_752)<br/>StorageDead(_714)<br/>StorageDead(_713)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>StorageLive(_759)<br/>_1145 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_1146 = deref_copy ((*_1145).5: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_1220 = (((_1146.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_759 = &amp;(*_1220)<br/></td></tr><tr><td align="left">_758 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _759)</td></tr></table>>];
    bb325__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">StorageLive(_749)<br/>_749 = ((_714 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_751)<br/>_751 = _749<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _751)</td></tr></table>>];
    bb326__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_751)<br/>StorageDead(_749)<br/>StorageDead(_714)<br/>StorageDead(_713)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb327__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">_757 = &amp;_758<br/>StorageDead(_759)<br/>StorageLive(_760)<br/>StorageLive(_761)<br/>StorageLive(_762)<br/>_762 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_761 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _762, const 5_usize)</td></tr></table>>];
    bb328__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_762)<br/>_760 = &amp;((*_761).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_756 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _757, move _760)</td></tr></table>>];
    bb329__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left">switchInt(move _756)</td></tr></table>>];
    bb330__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageDead(_761)<br/>StorageDead(_760)<br/>StorageDead(_758)<br/>StorageDead(_757)<br/>StorageLive(_763)<br/>_763 = ()<br/>_755 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _763)<br/>StorageDead(_763)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageDead(_761)<br/>StorageDead(_760)<br/>StorageDead(_758)<br/>StorageDead(_757)<br/>StorageLive(_764)<br/>_764 = error::ErrorCode::InvalidSwap<br/>StorageLive(_765)<br/>StorageLive(_766)<br/>StorageLive(_767)<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>_1099 = const _<br/>_775 = &amp;(*_1099)<br/>_774 = &amp;(*_775)<br/>_773 = move _774 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_774)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>StorageLive(_780)<br/>StorageLive(_781)<br/>StorageLive(_782)<br/>StorageLive(_783)<br/>_783 = &amp;_764<br/>_782 = &amp;(*_783)<br/></td></tr><tr><td align="left">_781 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _782)</td></tr></table>>];
    bb332__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_782)<br/>_780 = [move _781]<br/>StorageDead(_781)<br/>_779 = &amp;_780<br/>_778 = &amp;(*_779)<br/>_777 = move _778 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_778)<br/></td></tr><tr><td align="left">_772 = Arguments::&lt;'_&gt;::new_v1(move _773, move _777)</td></tr></table>>];
    bb333__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_777)<br/>StorageDead(_773)<br/></td></tr><tr><td align="left">_771 = format(move _772)</td></tr></table>>];
    bb334__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_772)<br/>StorageDead(_783)<br/>StorageDead(_780)<br/>StorageDead(_779)<br/>StorageDead(_775)<br/>_770 = move _771<br/>StorageDead(_771)<br/>_769 = &amp;_770<br/>_768 = &amp;(*_769)<br/></td></tr><tr><td align="left">_767 = &lt;String as Deref&gt;::deref(move _768)</td></tr></table>>];
    bb335__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">_766 = &amp;(*_767)<br/>StorageDead(_768)<br/></td></tr><tr><td align="left">_765 = solana_program::log::sol_log(move _766)</td></tr></table>>];
    bb336__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_766)<br/></td></tr><tr><td align="left">drop(_770)</td></tr></table>>];
    bb337__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_770)<br/>StorageDead(_769)<br/>StorageDead(_767)<br/>StorageDead(_765)<br/>StorageLive(_784)<br/>StorageLive(_785)<br/>StorageLive(_786)<br/>_786 = const &quot;the in_token_account passed to SwapBegin and End must match&quot;<br/>_785 = &amp;(*_786)<br/></td></tr><tr><td align="left">_784 = solana_program::log::sol_log(move _785)</td></tr></table>>];
    bb338__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_785)<br/>StorageDead(_786)<br/>StorageDead(_784)<br/>StorageLive(_787)<br/>_787 = _764<br/>_755 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _787)<br/>StorageDead(_787)<br/>StorageDead(_764)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb339__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_756)<br/></td></tr><tr><td align="left">_754 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _755)</td></tr></table>>];
    bb340__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_755)<br/>_788 = discriminant(_754)<br/></td></tr><tr><td align="left">switchInt(move _788)</td></tr></table>>];
    bb341__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_792)<br/>_792 = ((_754 as Continue).0: ())<br/>_753 = _792<br/>StorageDead(_792)<br/>StorageDead(_754)<br/>StorageDead(_753)<br/>StorageLive(_793)<br/>StorageLive(_794)<br/>StorageLive(_795)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>StorageLive(_799)<br/>_1147 = deref_copy (_1.1: &amp;mut instructions::if_staker::InsuranceFundSwap&lt;'_&gt;)<br/>_799 = &amp;((*_1147).6: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/></td></tr><tr><td align="left">_798 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, IfRebalanceConfig&gt; as anchor_lang::Key&gt;::key(move _799)</td></tr></table>>];
    bb342__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageLive(_789)<br/>_789 = ((_754 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_791)<br/>_791 = _789<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _791)</td></tr></table>>];
    bb343__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_791)<br/>StorageDead(_789)<br/>StorageDead(_754)<br/>StorageDead(_753)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb344__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">_797 = &amp;_798<br/>StorageDead(_799)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>StorageLive(_802)<br/>_802 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_801 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _802, const 6_usize)</td></tr></table>>];
    bb345__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_802)<br/>_800 = &amp;((*_801).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_796 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _797, move _800)</td></tr></table>>];
    bb346__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left">switchInt(move _796)</td></tr></table>>];
    bb347__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageDead(_800)<br/>StorageDead(_798)<br/>StorageDead(_797)<br/>StorageLive(_803)<br/>_803 = ()<br/>_795 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _803)<br/>StorageDead(_803)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb348__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageDead(_800)<br/>StorageDead(_798)<br/>StorageDead(_797)<br/>StorageLive(_804)<br/>_804 = error::ErrorCode::InvalidSwap<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>StorageLive(_812)<br/>StorageLive(_813)<br/>StorageLive(_814)<br/>StorageLive(_815)<br/>_1098 = const _<br/>_815 = &amp;(*_1098)<br/>_814 = &amp;(*_815)<br/>_813 = move _814 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_814)<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>StorageLive(_823)<br/>_823 = &amp;_804<br/>_822 = &amp;(*_823)<br/></td></tr><tr><td align="left">_821 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _822)</td></tr></table>>];
    bb349__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_822)<br/>_820 = [move _821]<br/>StorageDead(_821)<br/>_819 = &amp;_820<br/>_818 = &amp;(*_819)<br/>_817 = move _818 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_818)<br/></td></tr><tr><td align="left">_812 = Arguments::&lt;'_&gt;::new_v1(move _813, move _817)</td></tr></table>>];
    bb350__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left" balign="left">StorageDead(_817)<br/>StorageDead(_813)<br/></td></tr><tr><td align="left">_811 = format(move _812)</td></tr></table>>];
    bb351__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_812)<br/>StorageDead(_823)<br/>StorageDead(_820)<br/>StorageDead(_819)<br/>StorageDead(_815)<br/>_810 = move _811<br/>StorageDead(_811)<br/>_809 = &amp;_810<br/>_808 = &amp;(*_809)<br/></td></tr><tr><td align="left">_807 = &lt;String as Deref&gt;::deref(move _808)</td></tr></table>>];
    bb352__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">_806 = &amp;(*_807)<br/>StorageDead(_808)<br/></td></tr><tr><td align="left">_805 = solana_program::log::sol_log(move _806)</td></tr></table>>];
    bb353__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left" balign="left">StorageDead(_806)<br/></td></tr><tr><td align="left">drop(_810)</td></tr></table>>];
    bb354__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_810)<br/>StorageDead(_809)<br/>StorageDead(_807)<br/>StorageDead(_805)<br/>StorageLive(_824)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>_826 = const &quot;the if_rebalance_config passed to SwapBegin and End must match&quot;<br/>_825 = &amp;(*_826)<br/></td></tr><tr><td align="left">_824 = solana_program::log::sol_log(move _825)</td></tr></table>>];
    bb355__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_825)<br/>StorageDead(_826)<br/>StorageDead(_824)<br/>StorageLive(_827)<br/>_827 = _804<br/>_795 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _827)<br/>StorageDead(_827)<br/>StorageDead(_804)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb356__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_796)<br/></td></tr><tr><td align="left">_794 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _795)</td></tr></table>>];
    bb357__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageDead(_795)<br/>_828 = discriminant(_794)<br/></td></tr><tr><td align="left">switchInt(move _828)</td></tr></table>>];
    bb358__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">StorageLive(_832)<br/>_832 = ((_794 as Continue).0: ())<br/>_793 = _832<br/>StorageDead(_832)<br/>StorageDead(_794)<br/>StorageDead(_793)<br/>StorageLive(_833)<br/>StorageLive(_834)<br/>StorageLive(_835)<br/>StorageLive(_836)<br/>StorageLive(_837)<br/>StorageLive(_838)<br/>_1148 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_838 = &amp;(*_1148)<br/></td></tr><tr><td align="left">_837 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::len(move _838)</td></tr></table>>];
    bb359__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageLive(_829)<br/>_829 = ((_794 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_831)<br/>_831 = _829<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _831)</td></tr></table>>];
    bb360__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_831)<br/>StorageDead(_829)<br/>StorageDead(_794)<br/>StorageDead(_793)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb361__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_838)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>_841 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_840 = Vec::&lt;anchor_lang::prelude::AccountMeta&gt;::len(move _841)</td></tr></table>>];
    bb362__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageDead(_841)<br/>_842 = CheckedSub(_840, const 10_usize)<br/></td></tr><tr><td align="left">assert(!move (_842.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _840, const 10_usize)</td></tr></table>>];
    bb363__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left" balign="left">_839 = move (_842.0: usize)<br/>StorageDead(_840)<br/>_836 = Eq(move _837, move _839)<br/></td></tr><tr><td align="left">switchInt(move _836)</td></tr></table>>];
    bb364__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/>StorageDead(_837)<br/>StorageLive(_843)<br/>_843 = ()<br/>_835 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _843)<br/>StorageDead(_843)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb365__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_839)<br/>StorageDead(_837)<br/>StorageLive(_844)<br/>_844 = error::ErrorCode::InvalidSwap<br/>StorageLive(_845)<br/>StorageLive(_846)<br/>StorageLive(_847)<br/>StorageLive(_848)<br/>StorageLive(_849)<br/>StorageLive(_850)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>_1097 = const _<br/>_855 = &amp;(*_1097)<br/>_854 = &amp;(*_855)<br/>_853 = move _854 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_854)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>StorageLive(_859)<br/>StorageLive(_860)<br/>StorageLive(_861)<br/>StorageLive(_862)<br/>StorageLive(_863)<br/>_863 = &amp;_844<br/>_862 = &amp;(*_863)<br/></td></tr><tr><td align="left">_861 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _862)</td></tr></table>>];
    bb366__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_862)<br/>_860 = [move _861]<br/>StorageDead(_861)<br/>_859 = &amp;_860<br/>_858 = &amp;(*_859)<br/>_857 = move _858 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_858)<br/></td></tr><tr><td align="left">_852 = Arguments::&lt;'_&gt;::new_v1(move _853, move _857)</td></tr></table>>];
    bb367__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/>StorageDead(_853)<br/></td></tr><tr><td align="left">_851 = format(move _852)</td></tr></table>>];
    bb368__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageDead(_852)<br/>StorageDead(_863)<br/>StorageDead(_860)<br/>StorageDead(_859)<br/>StorageDead(_855)<br/>_850 = move _851<br/>StorageDead(_851)<br/>_849 = &amp;_850<br/>_848 = &amp;(*_849)<br/></td></tr><tr><td align="left">_847 = &lt;String as Deref&gt;::deref(move _848)</td></tr></table>>];
    bb369__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">_846 = &amp;(*_847)<br/>StorageDead(_848)<br/></td></tr><tr><td align="left">_845 = solana_program::log::sol_log(move _846)</td></tr></table>>];
    bb370__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_846)<br/></td></tr><tr><td align="left">drop(_850)</td></tr></table>>];
    bb371__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_850)<br/>StorageDead(_849)<br/>StorageDead(_847)<br/>StorageDead(_845)<br/>StorageLive(_864)<br/>StorageLive(_865)<br/>StorageLive(_866)<br/>_866 = const &quot;begin and end ix must have the same number of accounts&quot;<br/>_865 = &amp;(*_866)<br/></td></tr><tr><td align="left">_864 = solana_program::log::sol_log(move _865)</td></tr></table>>];
    bb372__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_865)<br/>StorageDead(_866)<br/>StorageDead(_864)<br/>StorageLive(_867)<br/>_867 = _844<br/>_835 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _867)<br/>StorageDead(_867)<br/>StorageDead(_844)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb373__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_836)<br/></td></tr><tr><td align="left">_834 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _835)</td></tr></table>>];
    bb374__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">StorageDead(_835)<br/>_868 = discriminant(_834)<br/></td></tr><tr><td align="left">switchInt(move _868)</td></tr></table>>];
    bb375__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageLive(_872)<br/>_872 = ((_834 as Continue).0: ())<br/>_833 = _872<br/>StorageDead(_872)<br/>StorageDead(_834)<br/>StorageDead(_833)<br/>StorageLive(_873)<br/>StorageLive(_874)<br/>StorageLive(_875)<br/>StorageLive(_876)<br/>_876 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_875 = Vec::&lt;anchor_lang::prelude::AccountMeta&gt;::len(move _876)</td></tr></table>>];
    bb376__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageLive(_869)<br/>_869 = ((_834 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_871)<br/>_871 = _869<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _871)</td></tr></table>>];
    bb377__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageDead(_871)<br/>StorageDead(_869)<br/>StorageDead(_834)<br/>StorageDead(_833)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb378__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageDead(_876)<br/>_874 = std::ops::Range::&lt;usize&gt; { start: const 10_usize, end: move _875 }<br/>StorageDead(_875)<br/></td></tr><tr><td align="left">_873 = &lt;std::ops::Range&lt;usize&gt; as IntoIterator&gt;::into_iter(move _874)</td></tr></table>>];
    bb379__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_874)<br/>StorageLive(_877)<br/>_877 = move _873<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb380__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageLive(_878)<br/>StorageLive(_879)<br/>StorageLive(_880)<br/>StorageLive(_881)<br/>_881 = &amp;mut _877<br/>_880 = &amp;mut (*_881)<br/></td></tr><tr><td align="left">_879 = &lt;std::ops::Range&lt;usize&gt; as Iterator&gt;::next(move _880)</td></tr></table>>];
    bb381__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_880)<br/>_882 = discriminant(_879)<br/></td></tr><tr><td align="left">switchInt(move _882)</td></tr></table>>];
    bb382__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageLive(_884)<br/>_884 = ((_879 as Some).0: usize)<br/>StorageLive(_885)<br/>StorageLive(_886)<br/>StorageLive(_887)<br/>StorageLive(_888)<br/>StorageLive(_889)<br/>StorageLive(_890)<br/>StorageLive(_891)<br/>_891 = _884<br/>_892 = CheckedSub(_891, const 10_usize)<br/></td></tr><tr><td align="left">assert(!move (_892.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _891, const 10_usize)</td></tr></table>>];
    bb383__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">_514 = const ()<br/>StorageDead(_881)<br/>StorageDead(_879)<br/>StorageDead(_878)<br/>StorageDead(_877)<br/>StorageDead(_873)<br/>StorageDead(_553)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb384__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">_890 = move (_892.0: usize)<br/>StorageDead(_891)<br/>_1149 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_893 = Len((*_1149))<br/>_894 = Lt(_890, _893)<br/></td></tr><tr><td align="left">assert(move _894, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _893, _890)</td></tr></table>>];
    bb385__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left" balign="left">_1150 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_1151 = deref_copy ((*_1150)[_890].0: &amp;anchor_lang::prelude::Pubkey)<br/>_889 = &amp;(*_1151)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>_897 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/>StorageLive(_898)<br/>_898 = _884<br/></td></tr><tr><td align="left">_896 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _897, move _898)</td></tr></table>>];
    bb386__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_898)<br/>StorageDead(_897)<br/>_895 = &amp;((*_896).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_888 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _889, move _895)</td></tr></table>>];
    bb387__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left">switchInt(move _888)</td></tr></table>>];
    bb388__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>StorageDead(_895)<br/>StorageDead(_890)<br/>StorageDead(_889)<br/>StorageLive(_899)<br/>_899 = ()<br/>_887 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _899)<br/>StorageDead(_899)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb389__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_896)<br/>StorageDead(_895)<br/>StorageDead(_890)<br/>StorageDead(_889)<br/>StorageLive(_900)<br/>_900 = error::ErrorCode::InvalidSwap<br/>StorageLive(_901)<br/>StorageLive(_902)<br/>StorageLive(_903)<br/>StorageLive(_904)<br/>StorageLive(_905)<br/>StorageLive(_906)<br/>StorageLive(_907)<br/>StorageLive(_908)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>_1096 = const _<br/>_911 = &amp;(*_1096)<br/>_910 = &amp;(*_911)<br/>_909 = move _910 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_910)<br/>StorageLive(_913)<br/>StorageLive(_914)<br/>StorageLive(_915)<br/>StorageLive(_916)<br/>StorageLive(_917)<br/>StorageLive(_918)<br/>StorageLive(_919)<br/>_919 = &amp;_900<br/>_918 = &amp;(*_919)<br/></td></tr><tr><td align="left">_917 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _918)</td></tr></table>>];
    bb390__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_918)<br/>_916 = [move _917]<br/>StorageDead(_917)<br/>_915 = &amp;_916<br/>_914 = &amp;(*_915)<br/>_913 = move _914 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_914)<br/></td></tr><tr><td align="left">_908 = Arguments::&lt;'_&gt;::new_v1(move _909, move _913)</td></tr></table>>];
    bb391__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_913)<br/>StorageDead(_909)<br/></td></tr><tr><td align="left">_907 = format(move _908)</td></tr></table>>];
    bb392__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageDead(_908)<br/>StorageDead(_919)<br/>StorageDead(_916)<br/>StorageDead(_915)<br/>StorageDead(_911)<br/>_906 = move _907<br/>StorageDead(_907)<br/>_905 = &amp;_906<br/>_904 = &amp;(*_905)<br/></td></tr><tr><td align="left">_903 = &lt;String as Deref&gt;::deref(move _904)</td></tr></table>>];
    bb393__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">_902 = &amp;(*_903)<br/>StorageDead(_904)<br/></td></tr><tr><td align="left">_901 = solana_program::log::sol_log(move _902)</td></tr></table>>];
    bb394__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_902)<br/></td></tr><tr><td align="left">drop(_906)</td></tr></table>>];
    bb395__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_906)<br/>StorageDead(_905)<br/>StorageDead(_903)<br/>StorageDead(_901)<br/>StorageLive(_920)<br/>StorageLive(_921)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>StorageLive(_926)<br/>StorageLive(_927)<br/>StorageLive(_928)<br/>StorageLive(_929)<br/>StorageLive(_930)<br/>_1095 = const _<br/>_930 = &amp;(*_1095)<br/>_929 = &amp;(*_930)<br/>_928 = move _929 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_929)<br/>StorageLive(_932)<br/>StorageLive(_933)<br/>StorageLive(_934)<br/>StorageLive(_935)<br/>StorageLive(_936)<br/>StorageLive(_937)<br/>StorageLive(_938)<br/>_938 = &amp;_884<br/>_937 = &amp;(*_938)<br/></td></tr><tr><td align="left">_936 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;usize&gt;(move _937)</td></tr></table>>];
    bb396__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_937)<br/>StorageLive(_939)<br/>StorageLive(_940)<br/>StorageLive(_941)<br/>StorageLive(_942)<br/>StorageLive(_943)<br/>_943 = _884<br/>_944 = CheckedSub(_943, const 10_usize)<br/></td></tr><tr><td align="left">assert(!move (_944.1: bool), &quot;attempt to compute `{} - {}`, which would overflow&quot;, move _943, const 10_usize)</td></tr></table>>];
    bb397__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">_942 = move (_944.0: usize)<br/>StorageDead(_943)<br/>_1152 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_945 = Len((*_1152))<br/>_946 = Lt(_942, _945)<br/></td></tr><tr><td align="left">assert(move _946, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _945, _942)</td></tr></table>>];
    bb398__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">_1153 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_941 = &amp;((*_1153)[_942].0: &amp;anchor_lang::prelude::Pubkey)<br/>_940 = &amp;(*_941)<br/></td></tr><tr><td align="left">_939 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;anchor_lang::prelude::Pubkey&gt;(move _940)</td></tr></table>>];
    bb399__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageDead(_940)<br/>StorageLive(_947)<br/>StorageLive(_948)<br/>StorageLive(_949)<br/>StorageLive(_950)<br/>StorageLive(_951)<br/>_951 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/>StorageLive(_952)<br/>_952 = _884<br/></td></tr><tr><td align="left">_950 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Index&lt;usize&gt;&gt;::index(move _951, move _952)</td></tr></table>>];
    bb400__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_952)<br/>StorageDead(_951)<br/>_949 = &amp;((*_950).0: anchor_lang::prelude::Pubkey)<br/>_948 = &amp;(*_949)<br/></td></tr><tr><td align="left">_947 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _948)</td></tr></table>>];
    bb401__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_948)<br/>_935 = [move _936, move _939, move _947]<br/>StorageDead(_947)<br/>StorageDead(_939)<br/>StorageDead(_936)<br/>_934 = &amp;_935<br/>_933 = &amp;(*_934)<br/>_932 = move _933 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_933)<br/></td></tr><tr><td align="left">_927 = Arguments::&lt;'_&gt;::new_v1(move _928, move _932)</td></tr></table>>];
    bb402__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_932)<br/>StorageDead(_928)<br/></td></tr><tr><td align="left">_926 = format(move _927)</td></tr></table>>];
    bb403__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageDead(_927)<br/>StorageDead(_950)<br/>StorageDead(_949)<br/>StorageDead(_942)<br/>StorageDead(_941)<br/>StorageDead(_938)<br/>StorageDead(_935)<br/>StorageDead(_934)<br/>StorageDead(_930)<br/>_925 = move _926<br/>StorageDead(_926)<br/>_924 = &amp;_925<br/>_923 = &amp;(*_924)<br/></td></tr><tr><td align="left">_922 = &lt;String as Deref&gt;::deref(move _923)</td></tr></table>>];
    bb404__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">_921 = &amp;(*_922)<br/>StorageDead(_923)<br/></td></tr><tr><td align="left">_920 = solana_program::log::sol_log(move _921)</td></tr></table>>];
    bb405__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_921)<br/></td></tr><tr><td align="left">drop(_925)</td></tr></table>>];
    bb406__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_925)<br/>StorageDead(_924)<br/>StorageDead(_922)<br/>StorageDead(_920)<br/>StorageLive(_953)<br/>_953 = _900<br/>_887 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _953)<br/>StorageDead(_953)<br/>StorageDead(_900)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb407__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_888)<br/></td></tr><tr><td align="left">_886 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _887)</td></tr></table>>];
    bb408__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageDead(_887)<br/>_954 = discriminant(_886)<br/></td></tr><tr><td align="left">switchInt(move _954)</td></tr></table>>];
    bb409__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageLive(_958)<br/>_958 = ((_886 as Continue).0: ())<br/>_885 = _958<br/>StorageDead(_958)<br/>StorageDead(_886)<br/>StorageDead(_885)<br/>_878 = const ()<br/>StorageDead(_884)<br/>StorageDead(_881)<br/>StorageDead(_879)<br/>StorageDead(_878)<br/>_501 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb410__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageLive(_955)<br/>_955 = ((_886 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_957)<br/>_957 = _955<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _957)</td></tr></table>>];
    bb411__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_957)<br/>StorageDead(_955)<br/>StorageDead(_886)<br/>StorageDead(_885)<br/>StorageDead(_884)<br/>StorageDead(_881)<br/>StorageDead(_879)<br/>StorageDead(_878)<br/>StorageDead(_877)<br/>StorageDead(_873)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb412__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/>StorageDead(_517)<br/>StorageDead(_516)<br/>StorageLive(_959)<br/>_959 = _499<br/></td></tr><tr><td align="left">switchInt(move _959)</td></tr></table>>];
    bb413__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageLive(_960)<br/>StorageLive(_961)<br/>StorageLive(_962)<br/>StorageLive(_963)<br/>StorageLive(_964)<br/>_964 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_963 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Deref&gt;::deref(move _964)</td></tr></table>>];
    bb414__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">_962 = &amp;(*_963)<br/>StorageDead(_964)<br/></td></tr><tr><td align="left">_961 = core::slice::&lt;impl [anchor_lang::prelude::AccountMeta]&gt;::iter(move _962)</td></tr></table>>];
    bb415__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageDead(_962)<br/></td></tr><tr><td align="left">_960 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountMeta&gt; as IntoIterator&gt;::into_iter(move _961)</td></tr></table>>];
    bb416__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_961)<br/>StorageLive(_965)<br/>_965 = move _960<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageLive(_966)<br/>StorageLive(_967)<br/>StorageLive(_968)<br/>StorageLive(_969)<br/>_969 = &amp;mut _965<br/>_968 = &amp;mut (*_969)<br/></td></tr><tr><td align="left">_967 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountMeta&gt; as Iterator&gt;::next(move _968)</td></tr></table>>];
    bb418__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_968)<br/>_970 = discriminant(_967)<br/></td></tr><tr><td align="left">switchInt(move _970)</td></tr></table>>];
    bb419__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageLive(_972)<br/>_972 = ((_967 as Some).0: &amp;anchor_lang::prelude::AccountMeta)<br/>StorageLive(_973)<br/>StorageLive(_974)<br/>StorageLive(_975)<br/>StorageLive(_976)<br/>StorageLive(_977)<br/>_977 = ((*_972).2: bool)<br/>_976 = Eq(move _977, const false)<br/></td></tr><tr><td align="left">switchInt(move _976)</td></tr></table>>];
    bb420__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">_514 = const ()<br/>StorageDead(_969)<br/>StorageDead(_967)<br/>StorageDead(_966)<br/>StorageDead(_965)<br/>StorageDead(_963)<br/>StorageDead(_960)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb421__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_977)<br/>StorageLive(_978)<br/>_978 = ()<br/>_975 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _978)<br/>StorageDead(_978)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_977)<br/>StorageLive(_979)<br/>_979 = error::ErrorCode::InvalidSwap<br/>StorageLive(_980)<br/>StorageLive(_981)<br/>StorageLive(_982)<br/>StorageLive(_983)<br/>StorageLive(_984)<br/>StorageLive(_985)<br/>StorageLive(_986)<br/>StorageLive(_987)<br/>StorageLive(_988)<br/>StorageLive(_989)<br/>StorageLive(_990)<br/>_1106 = const _<br/>_990 = &amp;(*_1106)<br/>_989 = &amp;(*_990)<br/>_988 = move _989 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_989)<br/>StorageLive(_992)<br/>StorageLive(_993)<br/>StorageLive(_994)<br/>StorageLive(_995)<br/>StorageLive(_996)<br/>StorageLive(_997)<br/>StorageLive(_998)<br/>_998 = &amp;_979<br/>_997 = &amp;(*_998)<br/></td></tr><tr><td align="left">_996 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _997)</td></tr></table>>];
    bb423__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_997)<br/>_995 = [move _996]<br/>StorageDead(_996)<br/>_994 = &amp;_995<br/>_993 = &amp;(*_994)<br/>_992 = move _993 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_993)<br/></td></tr><tr><td align="left">_987 = Arguments::&lt;'_&gt;::new_v1(move _988, move _992)</td></tr></table>>];
    bb424__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageDead(_992)<br/>StorageDead(_988)<br/></td></tr><tr><td align="left">_986 = format(move _987)</td></tr></table>>];
    bb425__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageDead(_987)<br/>StorageDead(_998)<br/>StorageDead(_995)<br/>StorageDead(_994)<br/>StorageDead(_990)<br/>_985 = move _986<br/>StorageDead(_986)<br/>_984 = &amp;_985<br/>_983 = &amp;(*_984)<br/></td></tr><tr><td align="left">_982 = &lt;String as Deref&gt;::deref(move _983)</td></tr></table>>];
    bb426__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">_981 = &amp;(*_982)<br/>StorageDead(_983)<br/></td></tr><tr><td align="left">_980 = solana_program::log::sol_log(move _981)</td></tr></table>>];
    bb427__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_981)<br/></td></tr><tr><td align="left">drop(_985)</td></tr></table>>];
    bb428__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_985)<br/>StorageDead(_984)<br/>StorageDead(_982)<br/>StorageDead(_980)<br/>StorageLive(_999)<br/>StorageLive(_1000)<br/>StorageLive(_1001)<br/>_1001 = const &quot;instructions after swap end must not have writable accounts&quot;<br/>_1000 = &amp;(*_1001)<br/></td></tr><tr><td align="left">_999 = solana_program::log::sol_log(move _1000)</td></tr></table>>];
    bb429__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_1000)<br/>StorageDead(_1001)<br/>StorageDead(_999)<br/>StorageLive(_1002)<br/>_1002 = _979<br/>_975 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1002)<br/>StorageDead(_1002)<br/>StorageDead(_979)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb430__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">StorageDead(_976)<br/></td></tr><tr><td align="left">_974 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _975)</td></tr></table>>];
    bb431__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_975)<br/>_1003 = discriminant(_974)<br/></td></tr><tr><td align="left">switchInt(move _1003)</td></tr></table>>];
    bb432__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">StorageLive(_1007)<br/>_1007 = ((_974 as Continue).0: ())<br/>_973 = _1007<br/>StorageDead(_1007)<br/>StorageDead(_974)<br/>StorageDead(_973)<br/>_966 = const ()<br/>StorageDead(_972)<br/>StorageDead(_969)<br/>StorageDead(_967)<br/>StorageDead(_966)<br/>_501 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb433__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageLive(_1004)<br/>_1004 = ((_974 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1006)<br/>_1006 = _1004<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1006)</td></tr></table>>];
    bb434__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left" balign="left">StorageDead(_1006)<br/>StorageDead(_1004)<br/>StorageDead(_974)<br/>StorageDead(_973)<br/>StorageDead(_972)<br/>StorageDead(_969)<br/>StorageDead(_967)<br/>StorageDead(_966)<br/>StorageDead(_965)<br/>StorageDead(_963)<br/>StorageDead(_960)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb435__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left" balign="left">StorageLive(_1008)<br/>StorageLive(_1009)<br/>StorageLive(_1010)<br/>StorageLive(_1011)<br/>StorageLive(_1012)<br/>_1012 = &amp;(_502.1: std::vec::Vec&lt;anchor_lang::prelude::AccountMeta&gt;)<br/></td></tr><tr><td align="left">_1011 = &lt;Vec&lt;anchor_lang::prelude::AccountMeta&gt; as Deref&gt;::deref(move _1012)</td></tr></table>>];
    bb436__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">_1010 = &amp;(*_1011)<br/>StorageDead(_1012)<br/></td></tr><tr><td align="left">_1009 = core::slice::&lt;impl [anchor_lang::prelude::AccountMeta]&gt;::iter(move _1010)</td></tr></table>>];
    bb437__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_1010)<br/></td></tr><tr><td align="left">_1008 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountMeta&gt; as IntoIterator&gt;::into_iter(move _1009)</td></tr></table>>];
    bb438__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageDead(_1009)<br/>StorageLive(_1013)<br/>_1013 = move _1008<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb439__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageLive(_1014)<br/>StorageLive(_1015)<br/>StorageLive(_1016)<br/>StorageLive(_1017)<br/>_1017 = &amp;mut _1013<br/>_1016 = &amp;mut (*_1017)<br/></td></tr><tr><td align="left">_1015 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountMeta&gt; as Iterator&gt;::next(move _1016)</td></tr></table>>];
    bb440__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_1016)<br/>_1018 = discriminant(_1015)<br/></td></tr><tr><td align="left">switchInt(move _1018)</td></tr></table>>];
    bb441__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageLive(_1020)<br/>_1020 = ((_1015 as Some).0: &amp;anchor_lang::prelude::AccountMeta)<br/>StorageLive(_1021)<br/>StorageLive(_1022)<br/>StorageLive(_1023)<br/>StorageLive(_1024)<br/>StorageLive(_1025)<br/>_1025 = &amp;((*_1020).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_1026)<br/>StorageLive(_1027)<br/></td></tr><tr><td align="left">_1027 = id()</td></tr></table>>];
    bb442__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">_514 = const ()<br/>StorageDead(_1017)<br/>StorageDead(_1015)<br/>StorageDead(_1014)<br/>StorageDead(_1013)<br/>StorageDead(_1011)<br/>StorageDead(_1008)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb443__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">_1026 = &amp;_1027<br/></td></tr><tr><td align="left">_1024 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _1025, move _1026)</td></tr></table>>];
    bb444__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left">switchInt(move _1024)</td></tr></table>>];
    bb445__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1027)<br/>StorageDead(_1026)<br/>StorageDead(_1025)<br/>StorageLive(_1028)<br/>_1028 = ()<br/>_1023 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1028)<br/>StorageDead(_1028)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb446__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageDead(_1027)<br/>StorageDead(_1026)<br/>StorageDead(_1025)<br/>StorageLive(_1029)<br/>_1029 = error::ErrorCode::InvalidSwap<br/>StorageLive(_1030)<br/>StorageLive(_1031)<br/>StorageLive(_1032)<br/>StorageLive(_1033)<br/>StorageLive(_1034)<br/>StorageLive(_1035)<br/>StorageLive(_1036)<br/>StorageLive(_1037)<br/>StorageLive(_1038)<br/>StorageLive(_1039)<br/>StorageLive(_1040)<br/>_1107 = const _<br/>_1040 = &amp;(*_1107)<br/>_1039 = &amp;(*_1040)<br/>_1038 = move _1039 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1039)<br/>StorageLive(_1042)<br/>StorageLive(_1043)<br/>StorageLive(_1044)<br/>StorageLive(_1045)<br/>StorageLive(_1046)<br/>StorageLive(_1047)<br/>StorageLive(_1048)<br/>_1048 = &amp;_1029<br/>_1047 = &amp;(*_1048)<br/></td></tr><tr><td align="left">_1046 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1047)</td></tr></table>>];
    bb447__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageDead(_1047)<br/>_1045 = [move _1046]<br/>StorageDead(_1046)<br/>_1044 = &amp;_1045<br/>_1043 = &amp;(*_1044)<br/>_1042 = move _1043 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1043)<br/></td></tr><tr><td align="left">_1037 = Arguments::&lt;'_&gt;::new_v1(move _1038, move _1042)</td></tr></table>>];
    bb448__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_1042)<br/>StorageDead(_1038)<br/></td></tr><tr><td align="left">_1036 = format(move _1037)</td></tr></table>>];
    bb449__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1037)<br/>StorageDead(_1048)<br/>StorageDead(_1045)<br/>StorageDead(_1044)<br/>StorageDead(_1040)<br/>_1035 = move _1036<br/>StorageDead(_1036)<br/>_1034 = &amp;_1035<br/>_1033 = &amp;(*_1034)<br/></td></tr><tr><td align="left">_1032 = &lt;String as Deref&gt;::deref(move _1033)</td></tr></table>>];
    bb450__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">_1031 = &amp;(*_1032)<br/>StorageDead(_1033)<br/></td></tr><tr><td align="left">_1030 = solana_program::log::sol_log(move _1031)</td></tr></table>>];
    bb451__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageDead(_1031)<br/></td></tr><tr><td align="left">drop(_1035)</td></tr></table>>];
    bb452__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageDead(_1035)<br/>StorageDead(_1034)<br/>StorageDead(_1032)<br/>StorageDead(_1030)<br/>StorageLive(_1049)<br/>StorageLive(_1050)<br/>StorageLive(_1051)<br/>_1051 = const &quot;instructions between begin and end must not be drift instructions&quot;<br/>_1050 = &amp;(*_1051)<br/></td></tr><tr><td align="left">_1049 = solana_program::log::sol_log(move _1050)</td></tr></table>>];
    bb453__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageDead(_1050)<br/>StorageDead(_1051)<br/>StorageDead(_1049)<br/>StorageLive(_1052)<br/>_1052 = _1029<br/>_1023 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1052)<br/>StorageDead(_1052)<br/>StorageDead(_1029)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb454__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1024)<br/></td></tr><tr><td align="left">_1022 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1023)</td></tr></table>>];
    bb455__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">StorageDead(_1023)<br/>_1053 = discriminant(_1022)<br/></td></tr><tr><td align="left">switchInt(move _1053)</td></tr></table>>];
    bb456__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageLive(_1057)<br/>_1057 = ((_1022 as Continue).0: ())<br/>_1021 = _1057<br/>StorageDead(_1057)<br/>StorageDead(_1022)<br/>StorageDead(_1021)<br/>_1014 = const ()<br/>StorageDead(_1020)<br/>StorageDead(_1017)<br/>StorageDead(_1015)<br/>StorageDead(_1014)<br/>_501 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb457__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageLive(_1054)<br/>_1054 = ((_1022 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1056)<br/>_1056 = _1054<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1056)</td></tr></table>>];
    bb458__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1056)<br/>StorageDead(_1054)<br/>StorageDead(_1022)<br/>StorageDead(_1021)<br/>StorageDead(_1020)<br/>StorageDead(_1017)<br/>StorageDead(_1015)<br/>StorageDead(_1014)<br/>StorageDead(_1013)<br/>StorageDead(_1011)<br/>StorageDead(_1008)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb459__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_959)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb460__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageDead(_514)<br/>_1058 = CheckedAdd(_496, const 1_usize)<br/></td></tr><tr><td align="left">assert(!move (_1058.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, _496, const 1_usize)</td></tr></table>>];
    bb461__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">_496 = move (_1058.0: usize)<br/>_501 = const ()<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb462__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb463__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageLive(_1063)<br/>_1063 = ()<br/>_1061 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1063)<br/>StorageDead(_1063)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb464__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageLive(_1064)<br/>_1064 = error::ErrorCode::InvalidSwap<br/>StorageLive(_1065)<br/>StorageLive(_1066)<br/>StorageLive(_1067)<br/>StorageLive(_1068)<br/>StorageLive(_1069)<br/>StorageLive(_1070)<br/>StorageLive(_1071)<br/>StorageLive(_1072)<br/>StorageLive(_1073)<br/>StorageLive(_1074)<br/>StorageLive(_1075)<br/>_1094 = const _<br/>_1075 = &amp;(*_1094)<br/>_1074 = &amp;(*_1075)<br/>_1073 = move _1074 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1074)<br/>StorageLive(_1077)<br/>StorageLive(_1078)<br/>StorageLive(_1079)<br/>StorageLive(_1080)<br/>StorageLive(_1081)<br/>StorageLive(_1082)<br/>StorageLive(_1083)<br/>_1083 = &amp;_1064<br/>_1082 = &amp;(*_1083)<br/></td></tr><tr><td align="left">_1081 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1082)</td></tr></table>>];
    bb465__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_1082)<br/>_1080 = [move _1081]<br/>StorageDead(_1081)<br/>_1079 = &amp;_1080<br/>_1078 = &amp;(*_1079)<br/>_1077 = move _1078 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1078)<br/></td></tr><tr><td align="left">_1072 = Arguments::&lt;'_&gt;::new_v1(move _1073, move _1077)</td></tr></table>>];
    bb466__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_1077)<br/>StorageDead(_1073)<br/></td></tr><tr><td align="left">_1071 = format(move _1072)</td></tr></table>>];
    bb467__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageDead(_1072)<br/>StorageDead(_1083)<br/>StorageDead(_1080)<br/>StorageDead(_1079)<br/>StorageDead(_1075)<br/>_1070 = move _1071<br/>StorageDead(_1071)<br/>_1069 = &amp;_1070<br/>_1068 = &amp;(*_1069)<br/></td></tr><tr><td align="left">_1067 = &lt;String as Deref&gt;::deref(move _1068)</td></tr></table>>];
    bb468__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">_1066 = &amp;(*_1067)<br/>StorageDead(_1068)<br/></td></tr><tr><td align="left">_1065 = solana_program::log::sol_log(move _1066)</td></tr></table>>];
    bb469__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1066)<br/></td></tr><tr><td align="left">drop(_1070)</td></tr></table>>];
    bb470__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1070)<br/>StorageDead(_1069)<br/>StorageDead(_1067)<br/>StorageDead(_1065)<br/>StorageLive(_1084)<br/>StorageLive(_1085)<br/>StorageLive(_1086)<br/>_1086 = const &quot;found no SwapEnd instruction in transaction&quot;<br/>_1085 = &amp;(*_1086)<br/></td></tr><tr><td align="left">_1084 = solana_program::log::sol_log(move _1085)</td></tr></table>>];
    bb471__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_1085)<br/>StorageDead(_1086)<br/>StorageDead(_1084)<br/>StorageLive(_1087)<br/>_1087 = _1064<br/>_1061 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1087)<br/>StorageDead(_1087)<br/>StorageDead(_1064)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb472__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageDead(_1062)<br/></td></tr><tr><td align="left">_1060 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1061)</td></tr></table>>];
    bb473__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageDead(_1061)<br/>_1088 = discriminant(_1060)<br/></td></tr><tr><td align="left">switchInt(move _1088)</td></tr></table>>];
    bb474__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageLive(_1092)<br/>_1092 = ((_1060 as Continue).0: ())<br/>_1059 = _1092<br/>StorageDead(_1092)<br/>StorageDead(_1060)<br/>StorageDead(_1059)<br/>StorageLive(_1093)<br/>_1093 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _1093)<br/>StorageDead(_1093)<br/>StorageDead(_499)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">drop(_450)</td></tr></table>>];
    bb475__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageLive(_1089)<br/>_1089 = ((_1060 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1091)<br/>_1091 = _1089<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1091)</td></tr></table>>];
    bb476__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_1091)<br/>StorageDead(_1089)<br/>StorageDead(_1060)<br/>StorageDead(_1059)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb477__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>StorageDead(_440)<br/>StorageDead(_438)<br/>StorageDead(_403)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">drop(_350)</td></tr></table>>];
    bb478__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>StorageDead(_199)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb479__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/></td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb480__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_79)<br/>StorageDead(_70)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb481__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb482__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb483__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb484__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageDead(_959)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb485__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_553)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb486__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageDead(_515)<br/>StorageDead(_514)<br/></td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb487__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_500)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb488__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_499)<br/>StorageDead(_496)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb489__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left">drop(_450)</td></tr></table>>];
    bb490__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb491__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>StorageDead(_438)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb492__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_392)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb493__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left">drop(_350)</td></tr></table>>];
    bb494__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb495__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb496__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb497__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb498__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb499__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb500__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb501__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb502__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb503__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb504__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb505__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb506__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb507__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb508__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb509__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left">return</td></tr></table>>];
    bb510__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">510 (cleanup)</td></tr><tr><td align="left">drop(_1070)</td></tr></table>>];
    bb511__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">511 (cleanup)</td></tr><tr><td align="left">drop(_1035)</td></tr></table>>];
    bb512__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">512 (cleanup)</td></tr><tr><td align="left">drop(_985)</td></tr></table>>];
    bb513__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">513 (cleanup)</td></tr><tr><td align="left">drop(_925)</td></tr></table>>];
    bb514__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">514 (cleanup)</td></tr><tr><td align="left">drop(_906)</td></tr></table>>];
    bb515__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">515 (cleanup)</td></tr><tr><td align="left">drop(_850)</td></tr></table>>];
    bb516__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">516 (cleanup)</td></tr><tr><td align="left">drop(_810)</td></tr></table>>];
    bb517__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">517 (cleanup)</td></tr><tr><td align="left">drop(_770)</td></tr></table>>];
    bb518__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">518 (cleanup)</td></tr><tr><td align="left">drop(_730)</td></tr></table>>];
    bb519__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">519 (cleanup)</td></tr><tr><td align="left">drop(_690)</td></tr></table>>];
    bb520__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">520 (cleanup)</td></tr><tr><td align="left">drop(_650)</td></tr></table>>];
    bb521__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">521 (cleanup)</td></tr><tr><td align="left">drop(_610)</td></tr></table>>];
    bb522__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">522 (cleanup)</td></tr><tr><td align="left">drop(_570)</td></tr></table>>];
    bb523__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">523 (cleanup)</td></tr><tr><td align="left">drop(_530)</td></tr></table>>];
    bb524__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">524 (cleanup)</td></tr><tr><td align="left">drop(_502)</td></tr></table>>];
    bb525__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">525 (cleanup)</td></tr><tr><td align="left">drop(_473)</td></tr></table>>];
    bb526__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">526 (cleanup)</td></tr><tr><td align="left">drop(_450)</td></tr></table>>];
    bb527__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">527 (cleanup)</td></tr><tr><td align="left">drop(_350)</td></tr></table>>];
    bb528__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">528 (cleanup)</td></tr><tr><td align="left">drop(_327)</td></tr></table>>];
    bb529__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">529 (cleanup)</td></tr><tr><td align="left">drop(_292)</td></tr></table>>];
    bb530__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">530 (cleanup)</td></tr><tr><td align="left">drop(_256)</td></tr></table>>];
    bb531__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">531 (cleanup)</td></tr><tr><td align="left">drop(_215)</td></tr></table>>];
    bb532__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">532 (cleanup)</td></tr><tr><td align="left">drop(_184)</td></tr></table>>];
    bb533__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">533 (cleanup)</td></tr><tr><td align="left">drop(_161)</td></tr></table>>];
    bb534__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">534 (cleanup)</td></tr><tr><td align="left">drop(_120)</td></tr></table>>];
    bb535__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">535 (cleanup)</td></tr><tr><td align="left">drop(_88)</td></tr></table>>];
    bb536__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">536 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb537__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">537 (cleanup)</td></tr><tr><td align="left">drop(_31)</td></tr></table>>];
    bb538__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">538 (cleanup)</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb539__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">539 (cleanup)</td></tr><tr><td align="left">drop(_29)</td></tr></table>>];
    bb540__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">540 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb541__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">541 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb542__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">542 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb543__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>StorageDead(_502)<br/>StorageDead(_500)<br/>StorageLive(_1059)<br/>StorageLive(_1060)<br/>StorageLive(_1061)<br/>StorageLive(_1062)<br/>_1062 = _499<br/></td></tr><tr><td align="left">switchInt(move _1062)</td></tr></table>>];
    bb544__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left">drop(((_503 as Err).0: anchor_lang::prelude::ProgramError))</td></tr></table>>];
    bb545__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">545 (cleanup)</td></tr><tr><td align="left" balign="left">_1196 = discriminant(_503)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb546__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">546 (cleanup)</td></tr><tr><td align="left" balign="left">_1197 = discriminant(_451)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb547__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">547 (cleanup)</td></tr><tr><td align="left" balign="left">_1198 = discriminant(_442)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb548__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">548 (cleanup)</td></tr><tr><td align="left" balign="left">_1199 = discriminant(_412)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb549__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">549 (cleanup)</td></tr><tr><td align="left" balign="left">_1200 = discriminant(_351)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb550__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">550 (cleanup)</td></tr><tr><td align="left" balign="left">_1201 = discriminant(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb551__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">551 (cleanup)</td></tr><tr><td align="left" balign="left">_1202 = discriminant(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb552__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">552 (cleanup)</td></tr><tr><td align="left" balign="left">_1204 = discriminant(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb553__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">553 (cleanup)</td></tr><tr><td align="left" balign="left">_1205 = discriminant(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb554__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">554 (cleanup)</td></tr><tr><td align="left" balign="left">_1206 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb555__0_8528 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">(*_1208) = [move _49, move _50]<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>_44 = move _48<br/>_43 = move _44 as std::boxed::Box&lt;[u16]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">_42 = std::slice::&lt;impl [u16]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _43)</td></tr></table>>];
    bb0__0_8528 -> bb1__0_8528 [label="return"];
    bb1__0_8528 -> bb2__0_8528 [label="return"];
    bb1__0_8528 -> bb542__0_8528 [label="unwind"];
    bb2__0_8528 -> bb3__0_8528 [label="0"];
    bb2__0_8528 -> bb5__0_8528 [label="1"];
    bb2__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb3__0_8528 -> bb7__0_8528 [label="return"];
    bb5__0_8528 -> bb6__0_8528 [label="return"];
    bb5__0_8528 -> bb554__0_8528 [label="unwind"];
    bb6__0_8528 -> bb509__0_8528 [label=""];
    bb7__0_8528 -> bb8__0_8528 [label="return"];
    bb7__0_8528 -> bb542__0_8528 [label="unwind"];
    bb8__0_8528 -> bb9__0_8528 [label="0"];
    bb8__0_8528 -> bb10__0_8528 [label="1"];
    bb8__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb9__0_8528 -> bb12__0_8528 [label="return"];
    bb10__0_8528 -> bb11__0_8528 [label="return"];
    bb10__0_8528 -> bb553__0_8528 [label="unwind"];
    bb11__0_8528 -> bb508__0_8528 [label=""];
    bb12__0_8528 -> bb13__0_8528 [label="return"];
    bb13__0_8528 -> bb14__0_8528 [label="return"];
    bb14__0_8528 -> bb15__0_8528 [label="return"];
    bb14__0_8528 -> bb541__0_8528 [label="unwind"];
    bb15__0_8528 -> bb555__0_8528 [label="success"];
    bb16__0_8528 -> bb17__0_8528 [label="return"];
    bb16__0_8528 -> bb541__0_8528 [label="unwind"];
    bb17__0_8528 -> bb18__0_8528 [label="return"];
    bb17__0_8528 -> bb540__0_8528 [label="unwind"];
    bb18__0_8528 -> bb19__0_8528 [label="return"];
    bb18__0_8528 -> bb540__0_8528 [label="unwind"];
    bb19__0_8528 -> bb20__0_8528 [label="return"];
    bb19__0_8528 -> bb540__0_8528 [label="unwind"];
    bb20__0_8528 -> bb21__0_8528 [label="0"];
    bb20__0_8528 -> bb22__0_8528 [label="1"];
    bb20__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb21__0_8528 -> bb24__0_8528 [label="return"];
    bb21__0_8528 -> bb536__0_8528 [label="unwind"];
    bb22__0_8528 -> bb23__0_8528 [label="return"];
    bb22__0_8528 -> bb552__0_8528 [label="unwind"];
    bb23__0_8528 -> bb505__0_8528 [label="return"];
    bb23__0_8528 -> bb541__0_8528 [label="unwind"];
    bb24__0_8528 -> bb25__0_8528 [label="return"];
    bb24__0_8528 -> bb537__0_8528 [label="unwind"];
    bb25__0_8528 -> bb26__0_8528 [label="return"];
    bb25__0_8528 -> bb537__0_8528 [label="unwind"];
    bb26__0_8528 -> bb27__0_8528 [label="return"];
    bb26__0_8528 -> bb537__0_8528 [label="unwind"];
    bb27__0_8528 -> bb28__0_8528 [label="0"];
    bb27__0_8528 -> bb29__0_8528 [label="1"];
    bb27__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb28__0_8528 -> bb31__0_8528 [label="return"];
    bb28__0_8528 -> bb537__0_8528 [label="unwind"];
    bb29__0_8528 -> bb30__0_8528 [label="return"];
    bb29__0_8528 -> bb537__0_8528 [label="unwind"];
    bb30__0_8528 -> bb501__0_8528 [label=""];
    bb31__0_8528 -> bb32__0_8528 [label="return"];
    bb31__0_8528 -> bb537__0_8528 [label="unwind"];
    bb32__0_8528 -> bb33__0_8528 [label="0"];
    bb32__0_8528 -> bb34__0_8528 [label="1"];
    bb32__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb33__0_8528 -> bb36__0_8528 [label="return"];
    bb33__0_8528 -> bb537__0_8528 [label="unwind"];
    bb34__0_8528 -> bb35__0_8528 [label="return"];
    bb34__0_8528 -> bb537__0_8528 [label="unwind"];
    bb35__0_8528 -> bb500__0_8528 [label=""];
    bb36__0_8528 -> bb37__0_8528 [label="return"];
    bb36__0_8528 -> bb537__0_8528 [label="unwind"];
    bb37__0_8528 -> bb38__0_8528 [label="0"];
    bb37__0_8528 -> bb39__0_8528 [label="1"];
    bb37__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb38__0_8528 -> bb41__0_8528 [label="return"];
    bb38__0_8528 -> bb537__0_8528 [label="unwind"];
    bb39__0_8528 -> bb40__0_8528 [label="return"];
    bb39__0_8528 -> bb537__0_8528 [label="unwind"];
    bb40__0_8528 -> bb499__0_8528 [label=""];
    bb41__0_8528 -> bb42__0_8528 [label="return"];
    bb41__0_8528 -> bb537__0_8528 [label="unwind"];
    bb42__0_8528 -> bb43__0_8528 [label="0"];
    bb42__0_8528 -> bb44__0_8528 [label="1"];
    bb42__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb43__0_8528 -> bb46__0_8528 [label="1"];
    bb43__0_8528 -> bb64__0_8528 [label="otherwise"];
    bb44__0_8528 -> bb45__0_8528 [label="return"];
    bb44__0_8528 -> bb551__0_8528 [label="unwind"];
    bb45__0_8528 -> bb498__0_8528 [label=""];
    bb46__0_8528 -> bb47__0_8528 [label="return"];
    bb46__0_8528 -> bb535__0_8528 [label="unwind"];
    bb47__0_8528 -> bb48__0_8528 [label="return"];
    bb47__0_8528 -> bb535__0_8528 [label="unwind"];
    bb48__0_8528 -> bb49__0_8528 [label="return"];
    bb48__0_8528 -> bb535__0_8528 [label="unwind"];
    bb49__0_8528 -> bb51__0_8528 [label="0"];
    bb49__0_8528 -> bb50__0_8528 [label="otherwise"];
    bb50__0_8528 -> bb59__0_8528 [label=""];
    bb51__0_8528 -> bb52__0_8528 [label="return"];
    bb51__0_8528 -> bb535__0_8528 [label="unwind"];
    bb52__0_8528 -> bb53__0_8528 [label="return"];
    bb52__0_8528 -> bb535__0_8528 [label="unwind"];
    bb53__0_8528 -> bb54__0_8528 [label="return"];
    bb53__0_8528 -> bb535__0_8528 [label="unwind"];
    bb54__0_8528 -> bb55__0_8528 [label="return"];
    bb54__0_8528 -> bb534__0_8528 [label="unwind"];
    bb55__0_8528 -> bb56__0_8528 [label="return"];
    bb55__0_8528 -> bb534__0_8528 [label="unwind"];
    bb56__0_8528 -> bb57__0_8528 [label="return"];
    bb56__0_8528 -> bb535__0_8528 [label="unwind"];
    bb57__0_8528 -> bb58__0_8528 [label="return"];
    bb57__0_8528 -> bb535__0_8528 [label="unwind"];
    bb58__0_8528 -> bb59__0_8528 [label=""];
    bb59__0_8528 -> bb60__0_8528 [label="return"];
    bb59__0_8528 -> bb535__0_8528 [label="unwind"];
    bb60__0_8528 -> bb61__0_8528 [label="0"];
    bb60__0_8528 -> bb62__0_8528 [label="1"];
    bb60__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb61__0_8528 -> bb65__0_8528 [label=""];
    bb62__0_8528 -> bb63__0_8528 [label="return"];
    bb62__0_8528 -> bb535__0_8528 [label="unwind"];
    bb63__0_8528 -> bb497__0_8528 [label=""];
    bb64__0_8528 -> bb65__0_8528 [label=""];
    bb65__0_8528 -> bb66__0_8528 [label="return"];
    bb65__0_8528 -> bb535__0_8528 [label="unwind"];
    bb66__0_8528 -> bb71__0_8528 [label="0"];
    bb66__0_8528 -> bb67__0_8528 [label="otherwise"];
    bb67__0_8528 -> bb68__0_8528 [label="return"];
    bb67__0_8528 -> bb535__0_8528 [label="unwind"];
    bb68__0_8528 -> bb70__0_8528 [label="0"];
    bb68__0_8528 -> bb69__0_8528 [label="otherwise"];
    bb69__0_8528 -> bb80__0_8528 [label=""];
    bb70__0_8528 -> bb72__0_8528 [label=""];
    bb71__0_8528 -> bb72__0_8528 [label=""];
    bb72__0_8528 -> bb73__0_8528 [label="return"];
    bb72__0_8528 -> bb535__0_8528 [label="unwind"];
    bb73__0_8528 -> bb74__0_8528 [label="return"];
    bb73__0_8528 -> bb535__0_8528 [label="unwind"];
    bb74__0_8528 -> bb75__0_8528 [label="return"];
    bb74__0_8528 -> bb535__0_8528 [label="unwind"];
    bb75__0_8528 -> bb76__0_8528 [label="return"];
    bb75__0_8528 -> bb533__0_8528 [label="unwind"];
    bb76__0_8528 -> bb77__0_8528 [label="return"];
    bb76__0_8528 -> bb533__0_8528 [label="unwind"];
    bb77__0_8528 -> bb78__0_8528 [label="return"];
    bb77__0_8528 -> bb535__0_8528 [label="unwind"];
    bb78__0_8528 -> bb79__0_8528 [label="return"];
    bb78__0_8528 -> bb535__0_8528 [label="unwind"];
    bb79__0_8528 -> bb80__0_8528 [label=""];
    bb80__0_8528 -> bb81__0_8528 [label="return"];
    bb80__0_8528 -> bb535__0_8528 [label="unwind"];
    bb81__0_8528 -> bb82__0_8528 [label="0"];
    bb81__0_8528 -> bb83__0_8528 [label="1"];
    bb81__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb82__0_8528 -> bb85__0_8528 [label="return"];
    bb82__0_8528 -> bb535__0_8528 [label="unwind"];
    bb83__0_8528 -> bb84__0_8528 [label="return"];
    bb83__0_8528 -> bb535__0_8528 [label="unwind"];
    bb84__0_8528 -> bb497__0_8528 [label=""];
    bb85__0_8528 -> bb86__0_8528 [label="return"];
    bb85__0_8528 -> bb535__0_8528 [label="unwind"];
    bb86__0_8528 -> bb87__0_8528 [label="0"];
    bb86__0_8528 -> bb88__0_8528 [label="1"];
    bb86__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb87__0_8528 -> bb90__0_8528 [label="return"];
    bb87__0_8528 -> bb532__0_8528 [label="unwind"];
    bb88__0_8528 -> bb89__0_8528 [label="return"];
    bb88__0_8528 -> bb550__0_8528 [label="unwind"];
    bb89__0_8528 -> bb496__0_8528 [label=""];
    bb90__0_8528 -> bb91__0_8528 [label="return"];
    bb90__0_8528 -> bb532__0_8528 [label="unwind"];
    bb91__0_8528 -> bb92__0_8528 [label="return"];
    bb91__0_8528 -> bb532__0_8528 [label="unwind"];
    bb92__0_8528 -> bb93__0_8528 [label="return"];
    bb92__0_8528 -> bb532__0_8528 [label="unwind"];
    bb93__0_8528 -> bb95__0_8528 [label="0"];
    bb93__0_8528 -> bb94__0_8528 [label="otherwise"];
    bb94__0_8528 -> bb95__0_8528 [label="0"];
    bb94__0_8528 -> bb96__0_8528 [label="otherwise"];
    bb95__0_8528 -> bb104__0_8528 [label=""];
    bb96__0_8528 -> bb97__0_8528 [label="return"];
    bb96__0_8528 -> bb532__0_8528 [label="unwind"];
    bb97__0_8528 -> bb98__0_8528 [label="return"];
    bb97__0_8528 -> bb532__0_8528 [label="unwind"];
    bb98__0_8528 -> bb99__0_8528 [label="return"];
    bb98__0_8528 -> bb532__0_8528 [label="unwind"];
    bb99__0_8528 -> bb100__0_8528 [label="return"];
    bb99__0_8528 -> bb531__0_8528 [label="unwind"];
    bb100__0_8528 -> bb101__0_8528 [label="return"];
    bb100__0_8528 -> bb531__0_8528 [label="unwind"];
    bb101__0_8528 -> bb102__0_8528 [label="return"];
    bb101__0_8528 -> bb532__0_8528 [label="unwind"];
    bb102__0_8528 -> bb103__0_8528 [label="return"];
    bb102__0_8528 -> bb532__0_8528 [label="unwind"];
    bb103__0_8528 -> bb104__0_8528 [label=""];
    bb104__0_8528 -> bb105__0_8528 [label="return"];
    bb104__0_8528 -> bb532__0_8528 [label="unwind"];
    bb105__0_8528 -> bb106__0_8528 [label="0"];
    bb105__0_8528 -> bb107__0_8528 [label="1"];
    bb105__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb106__0_8528 -> bb109__0_8528 [label="return"];
    bb106__0_8528 -> bb532__0_8528 [label="unwind"];
    bb107__0_8528 -> bb108__0_8528 [label="return"];
    bb107__0_8528 -> bb532__0_8528 [label="unwind"];
    bb108__0_8528 -> bb495__0_8528 [label=""];
    bb109__0_8528 -> bb114__0_8528 [label="0"];
    bb109__0_8528 -> bb110__0_8528 [label="otherwise"];
    bb110__0_8528 -> bb111__0_8528 [label="return"];
    bb110__0_8528 -> bb532__0_8528 [label="unwind"];
    bb111__0_8528 -> bb113__0_8528 [label="0"];
    bb111__0_8528 -> bb112__0_8528 [label="otherwise"];
    bb112__0_8528 -> bb123__0_8528 [label=""];
    bb113__0_8528 -> bb115__0_8528 [label=""];
    bb114__0_8528 -> bb115__0_8528 [label=""];
    bb115__0_8528 -> bb116__0_8528 [label="return"];
    bb115__0_8528 -> bb532__0_8528 [label="unwind"];
    bb116__0_8528 -> bb117__0_8528 [label="return"];
    bb116__0_8528 -> bb532__0_8528 [label="unwind"];
    bb117__0_8528 -> bb118__0_8528 [label="return"];
    bb117__0_8528 -> bb532__0_8528 [label="unwind"];
    bb118__0_8528 -> bb119__0_8528 [label="return"];
    bb118__0_8528 -> bb530__0_8528 [label="unwind"];
    bb119__0_8528 -> bb120__0_8528 [label="return"];
    bb119__0_8528 -> bb530__0_8528 [label="unwind"];
    bb120__0_8528 -> bb121__0_8528 [label="return"];
    bb120__0_8528 -> bb532__0_8528 [label="unwind"];
    bb121__0_8528 -> bb122__0_8528 [label="return"];
    bb121__0_8528 -> bb532__0_8528 [label="unwind"];
    bb122__0_8528 -> bb123__0_8528 [label=""];
    bb123__0_8528 -> bb124__0_8528 [label="return"];
    bb123__0_8528 -> bb532__0_8528 [label="unwind"];
    bb124__0_8528 -> bb125__0_8528 [label="0"];
    bb124__0_8528 -> bb126__0_8528 [label="1"];
    bb124__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb125__0_8528 -> bb129__0_8528 [label="0"];
    bb125__0_8528 -> bb128__0_8528 [label="otherwise"];
    bb126__0_8528 -> bb127__0_8528 [label="return"];
    bb126__0_8528 -> bb532__0_8528 [label="unwind"];
    bb127__0_8528 -> bb495__0_8528 [label=""];
    bb128__0_8528 -> bb137__0_8528 [label=""];
    bb129__0_8528 -> bb130__0_8528 [label="return"];
    bb129__0_8528 -> bb532__0_8528 [label="unwind"];
    bb130__0_8528 -> bb131__0_8528 [label="return"];
    bb130__0_8528 -> bb532__0_8528 [label="unwind"];
    bb131__0_8528 -> bb132__0_8528 [label="return"];
    bb131__0_8528 -> bb532__0_8528 [label="unwind"];
    bb132__0_8528 -> bb133__0_8528 [label="return"];
    bb132__0_8528 -> bb529__0_8528 [label="unwind"];
    bb133__0_8528 -> bb134__0_8528 [label="return"];
    bb133__0_8528 -> bb529__0_8528 [label="unwind"];
    bb134__0_8528 -> bb135__0_8528 [label="return"];
    bb134__0_8528 -> bb532__0_8528 [label="unwind"];
    bb135__0_8528 -> bb136__0_8528 [label="return"];
    bb135__0_8528 -> bb532__0_8528 [label="unwind"];
    bb136__0_8528 -> bb137__0_8528 [label=""];
    bb137__0_8528 -> bb138__0_8528 [label="return"];
    bb137__0_8528 -> bb532__0_8528 [label="unwind"];
    bb138__0_8528 -> bb139__0_8528 [label="0"];
    bb138__0_8528 -> bb140__0_8528 [label="1"];
    bb138__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb139__0_8528 -> bb143__0_8528 [label="0"];
    bb139__0_8528 -> bb142__0_8528 [label="otherwise"];
    bb140__0_8528 -> bb141__0_8528 [label="return"];
    bb140__0_8528 -> bb532__0_8528 [label="unwind"];
    bb141__0_8528 -> bb495__0_8528 [label=""];
    bb142__0_8528 -> bb151__0_8528 [label=""];
    bb143__0_8528 -> bb144__0_8528 [label="return"];
    bb143__0_8528 -> bb532__0_8528 [label="unwind"];
    bb144__0_8528 -> bb145__0_8528 [label="return"];
    bb144__0_8528 -> bb532__0_8528 [label="unwind"];
    bb145__0_8528 -> bb146__0_8528 [label="return"];
    bb145__0_8528 -> bb532__0_8528 [label="unwind"];
    bb146__0_8528 -> bb147__0_8528 [label="return"];
    bb146__0_8528 -> bb528__0_8528 [label="unwind"];
    bb147__0_8528 -> bb148__0_8528 [label="return"];
    bb147__0_8528 -> bb528__0_8528 [label="unwind"];
    bb148__0_8528 -> bb149__0_8528 [label="return"];
    bb148__0_8528 -> bb532__0_8528 [label="unwind"];
    bb149__0_8528 -> bb150__0_8528 [label="return"];
    bb149__0_8528 -> bb532__0_8528 [label="unwind"];
    bb150__0_8528 -> bb151__0_8528 [label=""];
    bb151__0_8528 -> bb152__0_8528 [label="return"];
    bb151__0_8528 -> bb532__0_8528 [label="unwind"];
    bb152__0_8528 -> bb153__0_8528 [label="0"];
    bb152__0_8528 -> bb154__0_8528 [label="1"];
    bb152__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb153__0_8528 -> bb156__0_8528 [label="return"];
    bb153__0_8528 -> bb532__0_8528 [label="unwind"];
    bb154__0_8528 -> bb155__0_8528 [label="return"];
    bb154__0_8528 -> bb532__0_8528 [label="unwind"];
    bb155__0_8528 -> bb495__0_8528 [label=""];
    bb156__0_8528 -> bb157__0_8528 [label="return"];
    bb156__0_8528 -> bb532__0_8528 [label="unwind"];
    bb157__0_8528 -> bb158__0_8528 [label="0"];
    bb157__0_8528 -> bb159__0_8528 [label="1"];
    bb157__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb158__0_8528 -> bb161__0_8528 [label="return"];
    bb158__0_8528 -> bb527__0_8528 [label="unwind"];
    bb159__0_8528 -> bb160__0_8528 [label="return"];
    bb159__0_8528 -> bb549__0_8528 [label="unwind"];
    bb160__0_8528 -> bb494__0_8528 [label=""];
    bb161__0_8528 -> bb162__0_8528 [label="return"];
    bb161__0_8528 -> bb527__0_8528 [label="unwind"];
    bb162__0_8528 -> bb163__0_8528 [label="return"];
    bb162__0_8528 -> bb527__0_8528 [label="unwind"];
    bb163__0_8528 -> bb164__0_8528 [label="return"];
    bb163__0_8528 -> bb527__0_8528 [label="unwind"];
    bb164__0_8528 -> bb165__0_8528 [label="return"];
    bb164__0_8528 -> bb527__0_8528 [label="unwind"];
    bb165__0_8528 -> bb166__0_8528 [label="return"];
    bb165__0_8528 -> bb527__0_8528 [label="unwind"];
    bb166__0_8528 -> bb167__0_8528 [label="return"];
    bb166__0_8528 -> bb527__0_8528 [label="unwind"];
    bb167__0_8528 -> bb168__0_8528 [label="return"];
    bb167__0_8528 -> bb527__0_8528 [label="unwind"];
    bb168__0_8528 -> bb169__0_8528 [label="return"];
    bb168__0_8528 -> bb527__0_8528 [label="unwind"];
    bb169__0_8528 -> bb170__0_8528 [label="0"];
    bb169__0_8528 -> bb171__0_8528 [label="1"];
    bb169__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb170__0_8528 -> bb173__0_8528 [label="return"];
    bb170__0_8528 -> bb527__0_8528 [label="unwind"];
    bb171__0_8528 -> bb172__0_8528 [label="return"];
    bb171__0_8528 -> bb527__0_8528 [label="unwind"];
    bb172__0_8528 -> bb493__0_8528 [label=""];
    bb173__0_8528 -> bb174__0_8528 [label="return"];
    bb173__0_8528 -> bb527__0_8528 [label="unwind"];
    bb174__0_8528 -> bb175__0_8528 [label="return"];
    bb174__0_8528 -> bb527__0_8528 [label="unwind"];
    bb175__0_8528 -> bb176__0_8528 [label="return"];
    bb175__0_8528 -> bb527__0_8528 [label="unwind"];
    bb176__0_8528 -> bb177__0_8528 [label="return"];
    bb176__0_8528 -> bb527__0_8528 [label="unwind"];
    bb177__0_8528 -> bb178__0_8528 [label="return"];
    bb177__0_8528 -> bb527__0_8528 [label="unwind"];
    bb178__0_8528 -> bb179__0_8528 [label="return"];
    bb178__0_8528 -> bb527__0_8528 [label="unwind"];
    bb179__0_8528 -> bb180__0_8528 [label="return"];
    bb179__0_8528 -> bb527__0_8528 [label="unwind"];
    bb180__0_8528 -> bb181__0_8528 [label="return"];
    bb180__0_8528 -> bb527__0_8528 [label="unwind"];
    bb181__0_8528 -> bb182__0_8528 [label="return"];
    bb181__0_8528 -> bb527__0_8528 [label="unwind"];
    bb182__0_8528 -> bb184__0_8528 [label="0"];
    bb182__0_8528 -> bb183__0_8528 [label="otherwise"];
    bb183__0_8528 -> bb185__0_8528 [label=""];
    bb184__0_8528 -> bb185__0_8528 [label=""];
    bb185__0_8528 -> bb186__0_8528 [label="return"];
    bb185__0_8528 -> bb527__0_8528 [label="unwind"];
    bb186__0_8528 -> bb187__0_8528 [label="return"];
    bb186__0_8528 -> bb527__0_8528 [label="unwind"];
    bb187__0_8528 -> bb188__0_8528 [label="0"];
    bb187__0_8528 -> bb189__0_8528 [label="1"];
    bb187__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb188__0_8528 -> bb191__0_8528 [label="return"];
    bb188__0_8528 -> bb527__0_8528 [label="unwind"];
    bb189__0_8528 -> bb190__0_8528 [label="return"];
    bb189__0_8528 -> bb548__0_8528 [label="unwind"];
    bb190__0_8528 -> bb492__0_8528 [label=""];
    bb191__0_8528 -> bb192__0_8528 [label="return"];
    bb191__0_8528 -> bb527__0_8528 [label="unwind"];
    bb192__0_8528 -> bb193__0_8528 [label="return"];
    bb192__0_8528 -> bb527__0_8528 [label="unwind"];
    bb193__0_8528 -> bb194__0_8528 [label="0"];
    bb193__0_8528 -> bb195__0_8528 [label="1"];
    bb193__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb194__0_8528 -> bb197__0_8528 [label="return"];
    bb194__0_8528 -> bb527__0_8528 [label="unwind"];
    bb195__0_8528 -> bb196__0_8528 [label="return"];
    bb195__0_8528 -> bb547__0_8528 [label="unwind"];
    bb196__0_8528 -> bb491__0_8528 [label=""];
    bb197__0_8528 -> bb198__0_8528 [label="return"];
    bb197__0_8528 -> bb527__0_8528 [label="unwind"];
    bb198__0_8528 -> bb199__0_8528 [label="0"];
    bb198__0_8528 -> bb200__0_8528 [label="1"];
    bb198__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb199__0_8528 -> bb202__0_8528 [label="return"];
    bb199__0_8528 -> bb526__0_8528 [label="unwind"];
    bb200__0_8528 -> bb201__0_8528 [label="return"];
    bb200__0_8528 -> bb546__0_8528 [label="unwind"];
    bb201__0_8528 -> bb490__0_8528 [label=""];
    bb202__0_8528 -> bb204__0_8528 [label="0"];
    bb202__0_8528 -> bb203__0_8528 [label="otherwise"];
    bb203__0_8528 -> bb212__0_8528 [label=""];
    bb204__0_8528 -> bb205__0_8528 [label="return"];
    bb204__0_8528 -> bb526__0_8528 [label="unwind"];
    bb205__0_8528 -> bb206__0_8528 [label="return"];
    bb205__0_8528 -> bb526__0_8528 [label="unwind"];
    bb206__0_8528 -> bb207__0_8528 [label="return"];
    bb206__0_8528 -> bb526__0_8528 [label="unwind"];
    bb207__0_8528 -> bb208__0_8528 [label="return"];
    bb207__0_8528 -> bb525__0_8528 [label="unwind"];
    bb208__0_8528 -> bb209__0_8528 [label="return"];
    bb208__0_8528 -> bb525__0_8528 [label="unwind"];
    bb209__0_8528 -> bb210__0_8528 [label="return"];
    bb209__0_8528 -> bb526__0_8528 [label="unwind"];
    bb210__0_8528 -> bb211__0_8528 [label="return"];
    bb210__0_8528 -> bb526__0_8528 [label="unwind"];
    bb211__0_8528 -> bb212__0_8528 [label=""];
    bb212__0_8528 -> bb213__0_8528 [label="return"];
    bb212__0_8528 -> bb526__0_8528 [label="unwind"];
    bb213__0_8528 -> bb214__0_8528 [label="0"];
    bb213__0_8528 -> bb215__0_8528 [label="1"];
    bb213__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb214__0_8528 -> bb217__0_8528 [label="success"];
    bb214__0_8528 -> bb526__0_8528 [label="unwind"];
    bb215__0_8528 -> bb216__0_8528 [label="return"];
    bb215__0_8528 -> bb526__0_8528 [label="unwind"];
    bb216__0_8528 -> bb489__0_8528 [label=""];
    bb217__0_8528 -> bb218__0_8528 [label=""];
    bb218__0_8528 -> bb219__0_8528 [label="return"];
    bb218__0_8528 -> bb526__0_8528 [label="unwind"];
    bb219__0_8528 -> bb222__0_8528 [label="0"];
    bb219__0_8528 -> bb220__0_8528 [label="1"];
    bb219__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb220__0_8528 -> bb223__0_8528 [label="1"];
    bb220__0_8528 -> bb221__0_8528 [label="otherwise"];
    bb221__0_8528 -> bb224__0_8528 [label="return"];
    bb221__0_8528 -> bb545__0_8528 [label="unwind"];
    bb222__0_8528 -> bb225__0_8528 [label="return"];
    bb222__0_8528 -> bb524__0_8528 [label="unwind"];
    bb223__0_8528 -> bb543__0_8528 [label="0"];
    bb223__0_8528 -> bb544__0_8528 [label="otherwise"];
    bb224__0_8528 -> bb487__0_8528 [label=""];
    bb225__0_8528 -> bb226__0_8528 [label="return"];
    bb225__0_8528 -> bb524__0_8528 [label="unwind"];
    bb226__0_8528 -> bb412__0_8528 [label="0"];
    bb226__0_8528 -> bb227__0_8528 [label="otherwise"];
    bb227__0_8528 -> bb228__0_8528 [label="0"];
    bb227__0_8528 -> bb229__0_8528 [label="otherwise"];
    bb228__0_8528 -> bb237__0_8528 [label=""];
    bb229__0_8528 -> bb230__0_8528 [label="return"];
    bb229__0_8528 -> bb524__0_8528 [label="unwind"];
    bb230__0_8528 -> bb231__0_8528 [label="return"];
    bb230__0_8528 -> bb524__0_8528 [label="unwind"];
    bb231__0_8528 -> bb232__0_8528 [label="return"];
    bb231__0_8528 -> bb524__0_8528 [label="unwind"];
    bb232__0_8528 -> bb233__0_8528 [label="return"];
    bb232__0_8528 -> bb523__0_8528 [label="unwind"];
    bb233__0_8528 -> bb234__0_8528 [label="return"];
    bb233__0_8528 -> bb523__0_8528 [label="unwind"];
    bb234__0_8528 -> bb235__0_8528 [label="return"];
    bb234__0_8528 -> bb524__0_8528 [label="unwind"];
    bb235__0_8528 -> bb236__0_8528 [label="return"];
    bb235__0_8528 -> bb524__0_8528 [label="unwind"];
    bb236__0_8528 -> bb237__0_8528 [label=""];
    bb237__0_8528 -> bb238__0_8528 [label="return"];
    bb237__0_8528 -> bb524__0_8528 [label="unwind"];
    bb238__0_8528 -> bb239__0_8528 [label="0"];
    bb238__0_8528 -> bb240__0_8528 [label="1"];
    bb238__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb239__0_8528 -> bb242__0_8528 [label="return"];
    bb239__0_8528 -> bb524__0_8528 [label="unwind"];
    bb240__0_8528 -> bb241__0_8528 [label="return"];
    bb240__0_8528 -> bb524__0_8528 [label="unwind"];
    bb241__0_8528 -> bb486__0_8528 [label=""];
    bb242__0_8528 -> bb243__0_8528 [label="return"];
    bb242__0_8528 -> bb524__0_8528 [label="unwind"];
    bb243__0_8528 -> bb244__0_8528 [label="return"];
    bb243__0_8528 -> bb524__0_8528 [label="unwind"];
    bb244__0_8528 -> bb246__0_8528 [label="0"];
    bb244__0_8528 -> bb245__0_8528 [label="otherwise"];
    bb245__0_8528 -> bb254__0_8528 [label=""];
    bb246__0_8528 -> bb247__0_8528 [label="return"];
    bb246__0_8528 -> bb524__0_8528 [label="unwind"];
    bb247__0_8528 -> bb248__0_8528 [label="return"];
    bb247__0_8528 -> bb524__0_8528 [label="unwind"];
    bb248__0_8528 -> bb249__0_8528 [label="return"];
    bb248__0_8528 -> bb524__0_8528 [label="unwind"];
    bb249__0_8528 -> bb250__0_8528 [label="return"];
    bb249__0_8528 -> bb522__0_8528 [label="unwind"];
    bb250__0_8528 -> bb251__0_8528 [label="return"];
    bb250__0_8528 -> bb522__0_8528 [label="unwind"];
    bb251__0_8528 -> bb252__0_8528 [label="return"];
    bb251__0_8528 -> bb524__0_8528 [label="unwind"];
    bb252__0_8528 -> bb253__0_8528 [label="return"];
    bb252__0_8528 -> bb524__0_8528 [label="unwind"];
    bb253__0_8528 -> bb254__0_8528 [label=""];
    bb254__0_8528 -> bb255__0_8528 [label="return"];
    bb254__0_8528 -> bb524__0_8528 [label="unwind"];
    bb255__0_8528 -> bb256__0_8528 [label="0"];
    bb255__0_8528 -> bb257__0_8528 [label="1"];
    bb255__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb256__0_8528 -> bb259__0_8528 [label="return"];
    bb256__0_8528 -> bb524__0_8528 [label="unwind"];
    bb257__0_8528 -> bb258__0_8528 [label="return"];
    bb257__0_8528 -> bb524__0_8528 [label="unwind"];
    bb258__0_8528 -> bb485__0_8528 [label=""];
    bb259__0_8528 -> bb260__0_8528 [label="return"];
    bb259__0_8528 -> bb524__0_8528 [label="unwind"];
    bb260__0_8528 -> bb261__0_8528 [label="return"];
    bb260__0_8528 -> bb524__0_8528 [label="unwind"];
    bb261__0_8528 -> bb263__0_8528 [label="0"];
    bb261__0_8528 -> bb262__0_8528 [label="otherwise"];
    bb262__0_8528 -> bb271__0_8528 [label=""];
    bb263__0_8528 -> bb264__0_8528 [label="return"];
    bb263__0_8528 -> bb524__0_8528 [label="unwind"];
    bb264__0_8528 -> bb265__0_8528 [label="return"];
    bb264__0_8528 -> bb524__0_8528 [label="unwind"];
    bb265__0_8528 -> bb266__0_8528 [label="return"];
    bb265__0_8528 -> bb524__0_8528 [label="unwind"];
    bb266__0_8528 -> bb267__0_8528 [label="return"];
    bb266__0_8528 -> bb521__0_8528 [label="unwind"];
    bb267__0_8528 -> bb268__0_8528 [label="return"];
    bb267__0_8528 -> bb521__0_8528 [label="unwind"];
    bb268__0_8528 -> bb269__0_8528 [label="return"];
    bb268__0_8528 -> bb524__0_8528 [label="unwind"];
    bb269__0_8528 -> bb270__0_8528 [label="return"];
    bb269__0_8528 -> bb524__0_8528 [label="unwind"];
    bb270__0_8528 -> bb271__0_8528 [label=""];
    bb271__0_8528 -> bb272__0_8528 [label="return"];
    bb271__0_8528 -> bb524__0_8528 [label="unwind"];
    bb272__0_8528 -> bb273__0_8528 [label="0"];
    bb272__0_8528 -> bb274__0_8528 [label="1"];
    bb272__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb273__0_8528 -> bb276__0_8528 [label="return"];
    bb273__0_8528 -> bb524__0_8528 [label="unwind"];
    bb274__0_8528 -> bb275__0_8528 [label="return"];
    bb274__0_8528 -> bb524__0_8528 [label="unwind"];
    bb275__0_8528 -> bb485__0_8528 [label=""];
    bb276__0_8528 -> bb277__0_8528 [label="return"];
    bb276__0_8528 -> bb524__0_8528 [label="unwind"];
    bb277__0_8528 -> bb278__0_8528 [label="return"];
    bb277__0_8528 -> bb524__0_8528 [label="unwind"];
    bb278__0_8528 -> bb280__0_8528 [label="0"];
    bb278__0_8528 -> bb279__0_8528 [label="otherwise"];
    bb279__0_8528 -> bb288__0_8528 [label=""];
    bb280__0_8528 -> bb281__0_8528 [label="return"];
    bb280__0_8528 -> bb524__0_8528 [label="unwind"];
    bb281__0_8528 -> bb282__0_8528 [label="return"];
    bb281__0_8528 -> bb524__0_8528 [label="unwind"];
    bb282__0_8528 -> bb283__0_8528 [label="return"];
    bb282__0_8528 -> bb524__0_8528 [label="unwind"];
    bb283__0_8528 -> bb284__0_8528 [label="return"];
    bb283__0_8528 -> bb520__0_8528 [label="unwind"];
    bb284__0_8528 -> bb285__0_8528 [label="return"];
    bb284__0_8528 -> bb520__0_8528 [label="unwind"];
    bb285__0_8528 -> bb286__0_8528 [label="return"];
    bb285__0_8528 -> bb524__0_8528 [label="unwind"];
    bb286__0_8528 -> bb287__0_8528 [label="return"];
    bb286__0_8528 -> bb524__0_8528 [label="unwind"];
    bb287__0_8528 -> bb288__0_8528 [label=""];
    bb288__0_8528 -> bb289__0_8528 [label="return"];
    bb288__0_8528 -> bb524__0_8528 [label="unwind"];
    bb289__0_8528 -> bb290__0_8528 [label="0"];
    bb289__0_8528 -> bb291__0_8528 [label="1"];
    bb289__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb290__0_8528 -> bb293__0_8528 [label="return"];
    bb290__0_8528 -> bb524__0_8528 [label="unwind"];
    bb291__0_8528 -> bb292__0_8528 [label="return"];
    bb291__0_8528 -> bb524__0_8528 [label="unwind"];
    bb292__0_8528 -> bb485__0_8528 [label=""];
    bb293__0_8528 -> bb294__0_8528 [label="return"];
    bb293__0_8528 -> bb524__0_8528 [label="unwind"];
    bb294__0_8528 -> bb295__0_8528 [label="return"];
    bb294__0_8528 -> bb524__0_8528 [label="unwind"];
    bb295__0_8528 -> bb297__0_8528 [label="0"];
    bb295__0_8528 -> bb296__0_8528 [label="otherwise"];
    bb296__0_8528 -> bb305__0_8528 [label=""];
    bb297__0_8528 -> bb298__0_8528 [label="return"];
    bb297__0_8528 -> bb524__0_8528 [label="unwind"];
    bb298__0_8528 -> bb299__0_8528 [label="return"];
    bb298__0_8528 -> bb524__0_8528 [label="unwind"];
    bb299__0_8528 -> bb300__0_8528 [label="return"];
    bb299__0_8528 -> bb524__0_8528 [label="unwind"];
    bb300__0_8528 -> bb301__0_8528 [label="return"];
    bb300__0_8528 -> bb519__0_8528 [label="unwind"];
    bb301__0_8528 -> bb302__0_8528 [label="return"];
    bb301__0_8528 -> bb519__0_8528 [label="unwind"];
    bb302__0_8528 -> bb303__0_8528 [label="return"];
    bb302__0_8528 -> bb524__0_8528 [label="unwind"];
    bb303__0_8528 -> bb304__0_8528 [label="return"];
    bb303__0_8528 -> bb524__0_8528 [label="unwind"];
    bb304__0_8528 -> bb305__0_8528 [label=""];
    bb305__0_8528 -> bb306__0_8528 [label="return"];
    bb305__0_8528 -> bb524__0_8528 [label="unwind"];
    bb306__0_8528 -> bb307__0_8528 [label="0"];
    bb306__0_8528 -> bb308__0_8528 [label="1"];
    bb306__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb307__0_8528 -> bb310__0_8528 [label="return"];
    bb307__0_8528 -> bb524__0_8528 [label="unwind"];
    bb308__0_8528 -> bb309__0_8528 [label="return"];
    bb308__0_8528 -> bb524__0_8528 [label="unwind"];
    bb309__0_8528 -> bb485__0_8528 [label=""];
    bb310__0_8528 -> bb311__0_8528 [label="return"];
    bb310__0_8528 -> bb524__0_8528 [label="unwind"];
    bb311__0_8528 -> bb312__0_8528 [label="return"];
    bb311__0_8528 -> bb524__0_8528 [label="unwind"];
    bb312__0_8528 -> bb314__0_8528 [label="0"];
    bb312__0_8528 -> bb313__0_8528 [label="otherwise"];
    bb313__0_8528 -> bb322__0_8528 [label=""];
    bb314__0_8528 -> bb315__0_8528 [label="return"];
    bb314__0_8528 -> bb524__0_8528 [label="unwind"];
    bb315__0_8528 -> bb316__0_8528 [label="return"];
    bb315__0_8528 -> bb524__0_8528 [label="unwind"];
    bb316__0_8528 -> bb317__0_8528 [label="return"];
    bb316__0_8528 -> bb524__0_8528 [label="unwind"];
    bb317__0_8528 -> bb318__0_8528 [label="return"];
    bb317__0_8528 -> bb518__0_8528 [label="unwind"];
    bb318__0_8528 -> bb319__0_8528 [label="return"];
    bb318__0_8528 -> bb518__0_8528 [label="unwind"];
    bb319__0_8528 -> bb320__0_8528 [label="return"];
    bb319__0_8528 -> bb524__0_8528 [label="unwind"];
    bb320__0_8528 -> bb321__0_8528 [label="return"];
    bb320__0_8528 -> bb524__0_8528 [label="unwind"];
    bb321__0_8528 -> bb322__0_8528 [label=""];
    bb322__0_8528 -> bb323__0_8528 [label="return"];
    bb322__0_8528 -> bb524__0_8528 [label="unwind"];
    bb323__0_8528 -> bb324__0_8528 [label="0"];
    bb323__0_8528 -> bb325__0_8528 [label="1"];
    bb323__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb324__0_8528 -> bb327__0_8528 [label="return"];
    bb324__0_8528 -> bb524__0_8528 [label="unwind"];
    bb325__0_8528 -> bb326__0_8528 [label="return"];
    bb325__0_8528 -> bb524__0_8528 [label="unwind"];
    bb326__0_8528 -> bb485__0_8528 [label=""];
    bb327__0_8528 -> bb328__0_8528 [label="return"];
    bb327__0_8528 -> bb524__0_8528 [label="unwind"];
    bb328__0_8528 -> bb329__0_8528 [label="return"];
    bb328__0_8528 -> bb524__0_8528 [label="unwind"];
    bb329__0_8528 -> bb331__0_8528 [label="0"];
    bb329__0_8528 -> bb330__0_8528 [label="otherwise"];
    bb330__0_8528 -> bb339__0_8528 [label=""];
    bb331__0_8528 -> bb332__0_8528 [label="return"];
    bb331__0_8528 -> bb524__0_8528 [label="unwind"];
    bb332__0_8528 -> bb333__0_8528 [label="return"];
    bb332__0_8528 -> bb524__0_8528 [label="unwind"];
    bb333__0_8528 -> bb334__0_8528 [label="return"];
    bb333__0_8528 -> bb524__0_8528 [label="unwind"];
    bb334__0_8528 -> bb335__0_8528 [label="return"];
    bb334__0_8528 -> bb517__0_8528 [label="unwind"];
    bb335__0_8528 -> bb336__0_8528 [label="return"];
    bb335__0_8528 -> bb517__0_8528 [label="unwind"];
    bb336__0_8528 -> bb337__0_8528 [label="return"];
    bb336__0_8528 -> bb524__0_8528 [label="unwind"];
    bb337__0_8528 -> bb338__0_8528 [label="return"];
    bb337__0_8528 -> bb524__0_8528 [label="unwind"];
    bb338__0_8528 -> bb339__0_8528 [label=""];
    bb339__0_8528 -> bb340__0_8528 [label="return"];
    bb339__0_8528 -> bb524__0_8528 [label="unwind"];
    bb340__0_8528 -> bb341__0_8528 [label="0"];
    bb340__0_8528 -> bb342__0_8528 [label="1"];
    bb340__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb341__0_8528 -> bb344__0_8528 [label="return"];
    bb341__0_8528 -> bb524__0_8528 [label="unwind"];
    bb342__0_8528 -> bb343__0_8528 [label="return"];
    bb342__0_8528 -> bb524__0_8528 [label="unwind"];
    bb343__0_8528 -> bb485__0_8528 [label=""];
    bb344__0_8528 -> bb345__0_8528 [label="return"];
    bb344__0_8528 -> bb524__0_8528 [label="unwind"];
    bb345__0_8528 -> bb346__0_8528 [label="return"];
    bb345__0_8528 -> bb524__0_8528 [label="unwind"];
    bb346__0_8528 -> bb348__0_8528 [label="0"];
    bb346__0_8528 -> bb347__0_8528 [label="otherwise"];
    bb347__0_8528 -> bb356__0_8528 [label=""];
    bb348__0_8528 -> bb349__0_8528 [label="return"];
    bb348__0_8528 -> bb524__0_8528 [label="unwind"];
    bb349__0_8528 -> bb350__0_8528 [label="return"];
    bb349__0_8528 -> bb524__0_8528 [label="unwind"];
    bb350__0_8528 -> bb351__0_8528 [label="return"];
    bb350__0_8528 -> bb524__0_8528 [label="unwind"];
    bb351__0_8528 -> bb352__0_8528 [label="return"];
    bb351__0_8528 -> bb516__0_8528 [label="unwind"];
    bb352__0_8528 -> bb353__0_8528 [label="return"];
    bb352__0_8528 -> bb516__0_8528 [label="unwind"];
    bb353__0_8528 -> bb354__0_8528 [label="return"];
    bb353__0_8528 -> bb524__0_8528 [label="unwind"];
    bb354__0_8528 -> bb355__0_8528 [label="return"];
    bb354__0_8528 -> bb524__0_8528 [label="unwind"];
    bb355__0_8528 -> bb356__0_8528 [label=""];
    bb356__0_8528 -> bb357__0_8528 [label="return"];
    bb356__0_8528 -> bb524__0_8528 [label="unwind"];
    bb357__0_8528 -> bb358__0_8528 [label="0"];
    bb357__0_8528 -> bb359__0_8528 [label="1"];
    bb357__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb358__0_8528 -> bb361__0_8528 [label="return"];
    bb358__0_8528 -> bb524__0_8528 [label="unwind"];
    bb359__0_8528 -> bb360__0_8528 [label="return"];
    bb359__0_8528 -> bb524__0_8528 [label="unwind"];
    bb360__0_8528 -> bb485__0_8528 [label=""];
    bb361__0_8528 -> bb362__0_8528 [label="return"];
    bb361__0_8528 -> bb524__0_8528 [label="unwind"];
    bb362__0_8528 -> bb363__0_8528 [label="success"];
    bb362__0_8528 -> bb524__0_8528 [label="unwind"];
    bb363__0_8528 -> bb365__0_8528 [label="0"];
    bb363__0_8528 -> bb364__0_8528 [label="otherwise"];
    bb364__0_8528 -> bb373__0_8528 [label=""];
    bb365__0_8528 -> bb366__0_8528 [label="return"];
    bb365__0_8528 -> bb524__0_8528 [label="unwind"];
    bb366__0_8528 -> bb367__0_8528 [label="return"];
    bb366__0_8528 -> bb524__0_8528 [label="unwind"];
    bb367__0_8528 -> bb368__0_8528 [label="return"];
    bb367__0_8528 -> bb524__0_8528 [label="unwind"];
    bb368__0_8528 -> bb369__0_8528 [label="return"];
    bb368__0_8528 -> bb515__0_8528 [label="unwind"];
    bb369__0_8528 -> bb370__0_8528 [label="return"];
    bb369__0_8528 -> bb515__0_8528 [label="unwind"];
    bb370__0_8528 -> bb371__0_8528 [label="return"];
    bb370__0_8528 -> bb524__0_8528 [label="unwind"];
    bb371__0_8528 -> bb372__0_8528 [label="return"];
    bb371__0_8528 -> bb524__0_8528 [label="unwind"];
    bb372__0_8528 -> bb373__0_8528 [label=""];
    bb373__0_8528 -> bb374__0_8528 [label="return"];
    bb373__0_8528 -> bb524__0_8528 [label="unwind"];
    bb374__0_8528 -> bb375__0_8528 [label="0"];
    bb374__0_8528 -> bb376__0_8528 [label="1"];
    bb374__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb375__0_8528 -> bb378__0_8528 [label="return"];
    bb375__0_8528 -> bb524__0_8528 [label="unwind"];
    bb376__0_8528 -> bb377__0_8528 [label="return"];
    bb376__0_8528 -> bb524__0_8528 [label="unwind"];
    bb377__0_8528 -> bb485__0_8528 [label=""];
    bb378__0_8528 -> bb379__0_8528 [label="return"];
    bb378__0_8528 -> bb524__0_8528 [label="unwind"];
    bb379__0_8528 -> bb380__0_8528 [label=""];
    bb380__0_8528 -> bb381__0_8528 [label="return"];
    bb380__0_8528 -> bb524__0_8528 [label="unwind"];
    bb381__0_8528 -> bb383__0_8528 [label="0"];
    bb381__0_8528 -> bb382__0_8528 [label="1"];
    bb381__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb382__0_8528 -> bb384__0_8528 [label="success"];
    bb382__0_8528 -> bb524__0_8528 [label="unwind"];
    bb383__0_8528 -> bb460__0_8528 [label=""];
    bb384__0_8528 -> bb385__0_8528 [label="success"];
    bb384__0_8528 -> bb524__0_8528 [label="unwind"];
    bb385__0_8528 -> bb386__0_8528 [label="return"];
    bb385__0_8528 -> bb524__0_8528 [label="unwind"];
    bb386__0_8528 -> bb387__0_8528 [label="return"];
    bb386__0_8528 -> bb524__0_8528 [label="unwind"];
    bb387__0_8528 -> bb389__0_8528 [label="0"];
    bb387__0_8528 -> bb388__0_8528 [label="otherwise"];
    bb388__0_8528 -> bb407__0_8528 [label=""];
    bb389__0_8528 -> bb390__0_8528 [label="return"];
    bb389__0_8528 -> bb524__0_8528 [label="unwind"];
    bb390__0_8528 -> bb391__0_8528 [label="return"];
    bb390__0_8528 -> bb524__0_8528 [label="unwind"];
    bb391__0_8528 -> bb392__0_8528 [label="return"];
    bb391__0_8528 -> bb524__0_8528 [label="unwind"];
    bb392__0_8528 -> bb393__0_8528 [label="return"];
    bb392__0_8528 -> bb514__0_8528 [label="unwind"];
    bb393__0_8528 -> bb394__0_8528 [label="return"];
    bb393__0_8528 -> bb514__0_8528 [label="unwind"];
    bb394__0_8528 -> bb395__0_8528 [label="return"];
    bb394__0_8528 -> bb524__0_8528 [label="unwind"];
    bb395__0_8528 -> bb396__0_8528 [label="return"];
    bb395__0_8528 -> bb524__0_8528 [label="unwind"];
    bb396__0_8528 -> bb397__0_8528 [label="success"];
    bb396__0_8528 -> bb524__0_8528 [label="unwind"];
    bb397__0_8528 -> bb398__0_8528 [label="success"];
    bb397__0_8528 -> bb524__0_8528 [label="unwind"];
    bb398__0_8528 -> bb399__0_8528 [label="return"];
    bb398__0_8528 -> bb524__0_8528 [label="unwind"];
    bb399__0_8528 -> bb400__0_8528 [label="return"];
    bb399__0_8528 -> bb524__0_8528 [label="unwind"];
    bb400__0_8528 -> bb401__0_8528 [label="return"];
    bb400__0_8528 -> bb524__0_8528 [label="unwind"];
    bb401__0_8528 -> bb402__0_8528 [label="return"];
    bb401__0_8528 -> bb524__0_8528 [label="unwind"];
    bb402__0_8528 -> bb403__0_8528 [label="return"];
    bb402__0_8528 -> bb524__0_8528 [label="unwind"];
    bb403__0_8528 -> bb404__0_8528 [label="return"];
    bb403__0_8528 -> bb513__0_8528 [label="unwind"];
    bb404__0_8528 -> bb405__0_8528 [label="return"];
    bb404__0_8528 -> bb513__0_8528 [label="unwind"];
    bb405__0_8528 -> bb406__0_8528 [label="return"];
    bb405__0_8528 -> bb524__0_8528 [label="unwind"];
    bb406__0_8528 -> bb407__0_8528 [label=""];
    bb407__0_8528 -> bb408__0_8528 [label="return"];
    bb407__0_8528 -> bb524__0_8528 [label="unwind"];
    bb408__0_8528 -> bb409__0_8528 [label="0"];
    bb408__0_8528 -> bb410__0_8528 [label="1"];
    bb408__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb409__0_8528 -> bb380__0_8528 [label=""];
    bb410__0_8528 -> bb411__0_8528 [label="return"];
    bb410__0_8528 -> bb524__0_8528 [label="unwind"];
    bb411__0_8528 -> bb485__0_8528 [label=""];
    bb412__0_8528 -> bb435__0_8528 [label="0"];
    bb412__0_8528 -> bb413__0_8528 [label="otherwise"];
    bb413__0_8528 -> bb414__0_8528 [label="return"];
    bb413__0_8528 -> bb524__0_8528 [label="unwind"];
    bb414__0_8528 -> bb415__0_8528 [label="return"];
    bb414__0_8528 -> bb524__0_8528 [label="unwind"];
    bb415__0_8528 -> bb416__0_8528 [label="return"];
    bb415__0_8528 -> bb524__0_8528 [label="unwind"];
    bb416__0_8528 -> bb417__0_8528 [label=""];
    bb417__0_8528 -> bb418__0_8528 [label="return"];
    bb417__0_8528 -> bb524__0_8528 [label="unwind"];
    bb418__0_8528 -> bb420__0_8528 [label="0"];
    bb418__0_8528 -> bb419__0_8528 [label="1"];
    bb418__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb419__0_8528 -> bb422__0_8528 [label="0"];
    bb419__0_8528 -> bb421__0_8528 [label="otherwise"];
    bb420__0_8528 -> bb459__0_8528 [label=""];
    bb421__0_8528 -> bb430__0_8528 [label=""];
    bb422__0_8528 -> bb423__0_8528 [label="return"];
    bb422__0_8528 -> bb524__0_8528 [label="unwind"];
    bb423__0_8528 -> bb424__0_8528 [label="return"];
    bb423__0_8528 -> bb524__0_8528 [label="unwind"];
    bb424__0_8528 -> bb425__0_8528 [label="return"];
    bb424__0_8528 -> bb524__0_8528 [label="unwind"];
    bb425__0_8528 -> bb426__0_8528 [label="return"];
    bb425__0_8528 -> bb512__0_8528 [label="unwind"];
    bb426__0_8528 -> bb427__0_8528 [label="return"];
    bb426__0_8528 -> bb512__0_8528 [label="unwind"];
    bb427__0_8528 -> bb428__0_8528 [label="return"];
    bb427__0_8528 -> bb524__0_8528 [label="unwind"];
    bb428__0_8528 -> bb429__0_8528 [label="return"];
    bb428__0_8528 -> bb524__0_8528 [label="unwind"];
    bb429__0_8528 -> bb430__0_8528 [label=""];
    bb430__0_8528 -> bb431__0_8528 [label="return"];
    bb430__0_8528 -> bb524__0_8528 [label="unwind"];
    bb431__0_8528 -> bb432__0_8528 [label="0"];
    bb431__0_8528 -> bb433__0_8528 [label="1"];
    bb431__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb432__0_8528 -> bb417__0_8528 [label=""];
    bb433__0_8528 -> bb434__0_8528 [label="return"];
    bb433__0_8528 -> bb524__0_8528 [label="unwind"];
    bb434__0_8528 -> bb484__0_8528 [label=""];
    bb435__0_8528 -> bb436__0_8528 [label="return"];
    bb435__0_8528 -> bb524__0_8528 [label="unwind"];
    bb436__0_8528 -> bb437__0_8528 [label="return"];
    bb436__0_8528 -> bb524__0_8528 [label="unwind"];
    bb437__0_8528 -> bb438__0_8528 [label="return"];
    bb437__0_8528 -> bb524__0_8528 [label="unwind"];
    bb438__0_8528 -> bb439__0_8528 [label=""];
    bb439__0_8528 -> bb440__0_8528 [label="return"];
    bb439__0_8528 -> bb524__0_8528 [label="unwind"];
    bb440__0_8528 -> bb442__0_8528 [label="0"];
    bb440__0_8528 -> bb441__0_8528 [label="1"];
    bb440__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb441__0_8528 -> bb443__0_8528 [label="return"];
    bb441__0_8528 -> bb524__0_8528 [label="unwind"];
    bb442__0_8528 -> bb459__0_8528 [label=""];
    bb443__0_8528 -> bb444__0_8528 [label="return"];
    bb443__0_8528 -> bb524__0_8528 [label="unwind"];
    bb444__0_8528 -> bb446__0_8528 [label="0"];
    bb444__0_8528 -> bb445__0_8528 [label="otherwise"];
    bb445__0_8528 -> bb454__0_8528 [label=""];
    bb446__0_8528 -> bb447__0_8528 [label="return"];
    bb446__0_8528 -> bb524__0_8528 [label="unwind"];
    bb447__0_8528 -> bb448__0_8528 [label="return"];
    bb447__0_8528 -> bb524__0_8528 [label="unwind"];
    bb448__0_8528 -> bb449__0_8528 [label="return"];
    bb448__0_8528 -> bb524__0_8528 [label="unwind"];
    bb449__0_8528 -> bb450__0_8528 [label="return"];
    bb449__0_8528 -> bb511__0_8528 [label="unwind"];
    bb450__0_8528 -> bb451__0_8528 [label="return"];
    bb450__0_8528 -> bb511__0_8528 [label="unwind"];
    bb451__0_8528 -> bb452__0_8528 [label="return"];
    bb451__0_8528 -> bb524__0_8528 [label="unwind"];
    bb452__0_8528 -> bb453__0_8528 [label="return"];
    bb452__0_8528 -> bb524__0_8528 [label="unwind"];
    bb453__0_8528 -> bb454__0_8528 [label=""];
    bb454__0_8528 -> bb455__0_8528 [label="return"];
    bb454__0_8528 -> bb524__0_8528 [label="unwind"];
    bb455__0_8528 -> bb456__0_8528 [label="0"];
    bb455__0_8528 -> bb457__0_8528 [label="1"];
    bb455__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb456__0_8528 -> bb439__0_8528 [label=""];
    bb457__0_8528 -> bb458__0_8528 [label="return"];
    bb457__0_8528 -> bb524__0_8528 [label="unwind"];
    bb458__0_8528 -> bb484__0_8528 [label=""];
    bb459__0_8528 -> bb460__0_8528 [label=""];
    bb460__0_8528 -> bb461__0_8528 [label="success"];
    bb460__0_8528 -> bb524__0_8528 [label="unwind"];
    bb461__0_8528 -> bb462__0_8528 [label="return"];
    bb461__0_8528 -> bb526__0_8528 [label="unwind"];
    bb462__0_8528 -> bb218__0_8528 [label=""];
    bb463__0_8528 -> bb472__0_8528 [label=""];
    bb464__0_8528 -> bb465__0_8528 [label="return"];
    bb464__0_8528 -> bb526__0_8528 [label="unwind"];
    bb465__0_8528 -> bb466__0_8528 [label="return"];
    bb465__0_8528 -> bb526__0_8528 [label="unwind"];
    bb466__0_8528 -> bb467__0_8528 [label="return"];
    bb466__0_8528 -> bb526__0_8528 [label="unwind"];
    bb467__0_8528 -> bb468__0_8528 [label="return"];
    bb467__0_8528 -> bb510__0_8528 [label="unwind"];
    bb468__0_8528 -> bb469__0_8528 [label="return"];
    bb468__0_8528 -> bb510__0_8528 [label="unwind"];
    bb469__0_8528 -> bb470__0_8528 [label="return"];
    bb469__0_8528 -> bb526__0_8528 [label="unwind"];
    bb470__0_8528 -> bb471__0_8528 [label="return"];
    bb470__0_8528 -> bb526__0_8528 [label="unwind"];
    bb471__0_8528 -> bb472__0_8528 [label=""];
    bb472__0_8528 -> bb473__0_8528 [label="return"];
    bb472__0_8528 -> bb526__0_8528 [label="unwind"];
    bb473__0_8528 -> bb474__0_8528 [label="0"];
    bb473__0_8528 -> bb475__0_8528 [label="1"];
    bb473__0_8528 -> bb4__0_8528 [label="otherwise"];
    bb474__0_8528 -> bb477__0_8528 [label="return"];
    bb474__0_8528 -> bb527__0_8528 [label="unwind"];
    bb475__0_8528 -> bb476__0_8528 [label="return"];
    bb475__0_8528 -> bb526__0_8528 [label="unwind"];
    bb476__0_8528 -> bb488__0_8528 [label=""];
    bb477__0_8528 -> bb478__0_8528 [label="return"];
    bb477__0_8528 -> bb532__0_8528 [label="unwind"];
    bb478__0_8528 -> bb479__0_8528 [label="return"];
    bb478__0_8528 -> bb535__0_8528 [label="unwind"];
    bb479__0_8528 -> bb480__0_8528 [label="return"];
    bb479__0_8528 -> bb537__0_8528 [label="unwind"];
    bb480__0_8528 -> bb481__0_8528 [label="return"];
    bb480__0_8528 -> bb538__0_8528 [label="unwind"];
    bb481__0_8528 -> bb482__0_8528 [label="return"];
    bb481__0_8528 -> bb539__0_8528 [label="unwind"];
    bb482__0_8528 -> bb483__0_8528 [label="return"];
    bb482__0_8528 -> bb542__0_8528 [label="unwind"];
    bb483__0_8528 -> bb509__0_8528 [label=""];
    bb484__0_8528 -> bb486__0_8528 [label=""];
    bb485__0_8528 -> bb486__0_8528 [label=""];
    bb486__0_8528 -> bb487__0_8528 [label="return"];
    bb486__0_8528 -> bb526__0_8528 [label="unwind"];
    bb487__0_8528 -> bb488__0_8528 [label=""];
    bb488__0_8528 -> bb489__0_8528 [label=""];
    bb489__0_8528 -> bb490__0_8528 [label="return"];
    bb489__0_8528 -> bb527__0_8528 [label="unwind"];
    bb490__0_8528 -> bb491__0_8528 [label=""];
    bb491__0_8528 -> bb492__0_8528 [label=""];
    bb492__0_8528 -> bb493__0_8528 [label=""];
    bb493__0_8528 -> bb494__0_8528 [label="return"];
    bb493__0_8528 -> bb532__0_8528 [label="unwind"];
    bb494__0_8528 -> bb495__0_8528 [label=""];
    bb495__0_8528 -> bb496__0_8528 [label="return"];
    bb495__0_8528 -> bb535__0_8528 [label="unwind"];
    bb496__0_8528 -> bb497__0_8528 [label=""];
    bb497__0_8528 -> bb498__0_8528 [label="return"];
    bb497__0_8528 -> bb537__0_8528 [label="unwind"];
    bb498__0_8528 -> bb499__0_8528 [label=""];
    bb499__0_8528 -> bb500__0_8528 [label=""];
    bb500__0_8528 -> bb501__0_8528 [label=""];
    bb501__0_8528 -> bb502__0_8528 [label="return"];
    bb501__0_8528 -> bb538__0_8528 [label="unwind"];
    bb502__0_8528 -> bb503__0_8528 [label="return"];
    bb502__0_8528 -> bb539__0_8528 [label="unwind"];
    bb503__0_8528 -> bb504__0_8528 [label="return"];
    bb503__0_8528 -> bb542__0_8528 [label="unwind"];
    bb504__0_8528 -> bb507__0_8528 [label=""];
    bb505__0_8528 -> bb506__0_8528 [label="return"];
    bb505__0_8528 -> bb542__0_8528 [label="unwind"];
    bb506__0_8528 -> bb507__0_8528 [label=""];
    bb507__0_8528 -> bb508__0_8528 [label=""];
    bb508__0_8528 -> bb509__0_8528 [label=""];
    bb510__0_8528 -> bb526__0_8528 [label="return"];
    bb511__0_8528 -> bb524__0_8528 [label="return"];
    bb512__0_8528 -> bb524__0_8528 [label="return"];
    bb513__0_8528 -> bb524__0_8528 [label="return"];
    bb514__0_8528 -> bb524__0_8528 [label="return"];
    bb515__0_8528 -> bb524__0_8528 [label="return"];
    bb516__0_8528 -> bb524__0_8528 [label="return"];
    bb517__0_8528 -> bb524__0_8528 [label="return"];
    bb518__0_8528 -> bb524__0_8528 [label="return"];
    bb519__0_8528 -> bb524__0_8528 [label="return"];
    bb520__0_8528 -> bb524__0_8528 [label="return"];
    bb521__0_8528 -> bb524__0_8528 [label="return"];
    bb522__0_8528 -> bb524__0_8528 [label="return"];
    bb523__0_8528 -> bb524__0_8528 [label="return"];
    bb524__0_8528 -> bb526__0_8528 [label="return"];
    bb525__0_8528 -> bb526__0_8528 [label="return"];
    bb526__0_8528 -> bb527__0_8528 [label="return"];
    bb527__0_8528 -> bb532__0_8528 [label="return"];
    bb528__0_8528 -> bb532__0_8528 [label="return"];
    bb529__0_8528 -> bb532__0_8528 [label="return"];
    bb530__0_8528 -> bb532__0_8528 [label="return"];
    bb531__0_8528 -> bb532__0_8528 [label="return"];
    bb532__0_8528 -> bb535__0_8528 [label="return"];
    bb533__0_8528 -> bb535__0_8528 [label="return"];
    bb534__0_8528 -> bb535__0_8528 [label="return"];
    bb535__0_8528 -> bb537__0_8528 [label="return"];
    bb536__0_8528 -> bb537__0_8528 [label="return"];
    bb537__0_8528 -> bb538__0_8528 [label="return"];
    bb538__0_8528 -> bb539__0_8528 [label="return"];
    bb539__0_8528 -> bb542__0_8528 [label="return"];
    bb540__0_8528 -> bb541__0_8528 [label="return"];
    bb541__0_8528 -> bb542__0_8528 [label="return"];
    bb543__0_8528 -> bb464__0_8528 [label="0"];
    bb543__0_8528 -> bb463__0_8528 [label="otherwise"];
    bb544__0_8528 -> bb543__0_8528 [label="return"];
    bb544__0_8528 -> bb526__0_8528 [label="unwind"];
    bb545__0_8528 -> bb526__0_8528 [label=""];
    bb546__0_8528 -> bb527__0_8528 [label=""];
    bb547__0_8528 -> bb527__0_8528 [label=""];
    bb548__0_8528 -> bb527__0_8528 [label=""];
    bb549__0_8528 -> bb532__0_8528 [label=""];
    bb550__0_8528 -> bb535__0_8528 [label=""];
    bb551__0_8528 -> bb537__0_8528 [label=""];
    bb552__0_8528 -> bb540__0_8528 [label=""];
    bb553__0_8528 -> bb542__0_8528 [label=""];
    bb554__0_8528 -> bb542__0_8528 [label=""];
    bb555__0_8528 -> bb16__0_8528 [label="return"];
    bb555__0_8528 -> bb541__0_8528 [label="unwind"];
}
