// MIR for `phoenix::<impl at programs/drift/src/state/fulfillment_params/phoenix.rs:119:1: 119:42>::to_phoenix_v1_fulfillment_config` before PreCodegen

fn phoenix::<impl at programs/drift/src/state/fulfillment_params/phoenix.rs:119:1: 119:42>::to_phoenix_v1_fulfillment_config(_1: &PhoenixMarketContext<'_, '_>, _2: &anchor_lang::prelude::Pubkey, _3: u16) -> PhoenixV1FulfillmentConfig {
    debug self => _1;
    debug config_key => _2;
    debug market_index => _3;
    let mut _0: state::fulfillment_params::phoenix::PhoenixV1FulfillmentConfig;
    let mut _4: anchor_lang::prelude::Pubkey;
    let mut _5: anchor_lang::prelude::Pubkey;
    let mut _6: anchor_lang::prelude::Pubkey;
    let mut _7: anchor_lang::prelude::Pubkey;
    let mut _8: anchor_lang::prelude::Pubkey;
    let mut _9: anchor_lang::prelude::Pubkey;
    let mut _10: u16;
    let mut _11: instructions::keeper::SpotFulfillmentType;
    let mut _12: state::spot_market::SpotFulfillmentConfigStatus;
    let mut _13: [u8; 4];
    let mut _14: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _15: &anchor_lang::prelude::Pubkey;

    bb0: {
        StorageLive(_4);
        _4 = (*_2);
        StorageLive(_5);
        _5 = phoenix::id() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_6);
        _6 = phoenix::phoenix_log_authority::id() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_7);
        _14 = deref_copy ((*_1).0: &anchor_lang::prelude::AccountInfo<'_>);
        _15 = deref_copy ((*_14).0: &anchor_lang::prelude::Pubkey);
        _7 = (*_15);
        StorageLive(_8);
        _8 = ((((*_1).1: phoenix::program::MarketHeader).3: phoenix::program::TokenParams).3: anchor_lang::prelude::Pubkey);
        StorageLive(_9);
        _9 = ((((*_1).1: phoenix::program::MarketHeader).5: phoenix::program::TokenParams).3: anchor_lang::prelude::Pubkey);
        StorageLive(_10);
        _10 = _3;
        StorageLive(_11);
        _11 = keeper::SpotFulfillmentType::PhoenixV1;
        StorageLive(_12);
        _12 = state::spot_market::SpotFulfillmentConfigStatus::Enabled;
        StorageLive(_13);
        _13 = [const 0_u8; 4];
        _0 = PhoenixV1FulfillmentConfig { pubkey: move _4, phoenix_program_id: move _5, phoenix_log_authority: move _6, phoenix_market: move _7, phoenix_base_vault: move _8, phoenix_quote_vault: move _9, market_index: move _10, fulfillment_type: move _11, status: move _12, padding: move _13 };
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        return;
    }
}
