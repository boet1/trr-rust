// MIR for `math::orders::<impl at programs/drift/src/math/orders.rs:1216:25: 1216:30>::fmt` before PreCodegen

fn math::orders::<impl at programs/drift/src/math/orders.rs:1216:25: 1216:30>::fmt(_1: &Level, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: &mut std::fmt::Formatter<'_>;
    let mut _4: &str;
    let _5: &str;
    let mut _6: &str;
    let _7: &str;
    let mut _8: &dyn std::fmt::Debug;
    let mut _9: &u64;
    let _10: &u64;
    let mut _11: &str;
    let _12: &str;
    let mut _13: &dyn std::fmt::Debug;
    let mut _14: &&u64;
    let _15: &&u64;
    let _16: &u64;

    bb0: {
        StorageLive(_3);
        _3 = &mut (*_2);
        StorageLive(_4);
        StorageLive(_5);
        _5 = const "Level";
        _4 = &(*_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = const "price";
        _6 = &(*_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &((*_1).0: u64);
        _9 = &(*_10);
        _8 = move _9 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_9);
        StorageLive(_11);
        StorageLive(_12);
        _12 = const "base_asset_amount";
        _11 = &(*_12);
        StorageLive(_13);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        _16 = &((*_1).1: u64);
        _15 = &_16;
        _14 = &(*_15);
        _13 = move _14 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_14);
        _0 = Formatter::<'_>::debug_struct_field2_finish(move _3, move _4, move _6, move _8, move _11, move _13) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_13);
        StorageDead(_11);
        StorageDead(_8);
        StorageDead(_6);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_12);
        StorageDead(_10);
        StorageDead(_7);
        StorageDead(_5);
        return;
    }
}
