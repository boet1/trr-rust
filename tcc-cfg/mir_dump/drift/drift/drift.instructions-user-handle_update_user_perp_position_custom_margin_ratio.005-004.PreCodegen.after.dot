digraph Mir_0_1716 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn instructions::user::handle_update_user_perp_position_custom_margin_ratio(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::user::UpdateUserPerpPositionCustomMarginRatio&lt;ReErased&gt;&gt;, _2: u16, _3: u16, _4: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let mut _5: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _7: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _8: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _10: Closure(DefId(0:11791 ~ drift[d311]::instructions::user::handle_update_user_perp_position_custom_margin_ratio::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _16: ();<br align="left"/>let mut _17: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _18: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _19: &amp;ReErased mut state::user::User;<br align="left"/>let mut _20: &amp;ReErased mut state::user::User;<br align="left"/>let mut _21: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _22: u16;<br align="left"/>let mut _23: u16;<br align="left"/>let mut _24: isize;<br align="left"/>let _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _26: !;<br align="left"/>let mut _27: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _28: ();<br align="left"/>let mut _29: ();<br align="left"/>let mut _30: &amp;ReErased mut instructions::user::UpdateUserPerpPositionCustomMarginRatio&lt;ReErased&gt;;<br align="left"/>let mut _31: isize;<br align="left"/>let mut _32: isize;<br align="left"/>let mut _33: isize;<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug _sub_account_id =&gt; _2;<br align="left"/>debug perp_market_index =&gt; _3;<br align="left"/>debug margin_ratio =&gt; _4;<br align="left"/>debug user =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _25;<br align="left"/>debug val =&gt; _28;<br align="left"/>>;
    bb0__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_30 = deref_copy (_1.1: &amp;mut instructions::user::UpdateUserPerpPositionCustomMarginRatio&lt;'_&gt;)<br/>_9 = &amp;((*_30).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_8 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _9)</td></tr></table>>];
    bb1__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_10)<br/>_10 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_7 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _8, move _10)</td></tr></table>>];
    bb2__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb3__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = move ((_6 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_5 = move _15<br/>StorageDead(_15)<br/>_33 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;mut _5<br/></td></tr><tr><td align="left">_20 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _21)</td></tr></table>>];
    bb5__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_31 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_19 = &amp;mut (*_20)<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>_22 = _3<br/>StorageLive(_23)<br/>_23 = _4<br/></td></tr><tr><td align="left">_18 = User::update_perp_position_max_margin_ratio(move _19, move _22, move _23)</td></tr></table>>];
    bb9__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">_17 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _18)</td></tr></table>>];
    bb10__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>_24 = discriminant(_17)<br/></td></tr><tr><td align="left">switchInt(move _24)</td></tr></table>>];
    bb11__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_17 as Continue).0: ())<br/>_16 = _28<br/>StorageDead(_28)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_29)<br/>_29 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _29)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb12__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_17 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_27)<br/>_27 = _25<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _27)</td></tr></table>>];
    bb13__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_25)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb14__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">return</td></tr></table>>];
    bb17__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left">drop(_5)</td></tr></table>>];
    bb18__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb19__0_1716 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">19 (cleanup)</td></tr><tr><td align="left" balign="left">_35 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1716 -> bb1__0_1716 [label="return"];
    bb1__0_1716 -> bb2__0_1716 [label="return"];
    bb1__0_1716 -> bb18__0_1716 [label="unwind"];
    bb2__0_1716 -> bb3__0_1716 [label="return"];
    bb2__0_1716 -> bb18__0_1716 [label="unwind"];
    bb3__0_1716 -> bb4__0_1716 [label="0"];
    bb3__0_1716 -> bb6__0_1716 [label="1"];
    bb3__0_1716 -> bb5__0_1716 [label="otherwise"];
    bb4__0_1716 -> bb8__0_1716 [label="return"];
    bb4__0_1716 -> bb17__0_1716 [label="unwind"];
    bb6__0_1716 -> bb7__0_1716 [label="return"];
    bb6__0_1716 -> bb19__0_1716 [label="unwind"];
    bb7__0_1716 -> bb15__0_1716 [label=""];
    bb8__0_1716 -> bb9__0_1716 [label="return"];
    bb8__0_1716 -> bb17__0_1716 [label="unwind"];
    bb9__0_1716 -> bb10__0_1716 [label="return"];
    bb9__0_1716 -> bb17__0_1716 [label="unwind"];
    bb10__0_1716 -> bb11__0_1716 [label="0"];
    bb10__0_1716 -> bb12__0_1716 [label="1"];
    bb10__0_1716 -> bb5__0_1716 [label="otherwise"];
    bb11__0_1716 -> bb14__0_1716 [label="return"];
    bb11__0_1716 -> bb18__0_1716 [label="unwind"];
    bb12__0_1716 -> bb13__0_1716 [label="return"];
    bb12__0_1716 -> bb17__0_1716 [label="unwind"];
    bb13__0_1716 -> bb15__0_1716 [label="return"];
    bb13__0_1716 -> bb18__0_1716 [label="unwind"];
    bb14__0_1716 -> bb16__0_1716 [label=""];
    bb15__0_1716 -> bb16__0_1716 [label=""];
    bb17__0_1716 -> bb18__0_1716 [label="return"];
    bb19__0_1716 -> bb18__0_1716 [label=""];
}
