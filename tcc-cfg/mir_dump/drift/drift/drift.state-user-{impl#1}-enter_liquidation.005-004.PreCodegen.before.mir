// MIR for `state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::enter_liquidation` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:136:1: 136:10>::enter_liquidation(_1: &mut User, _2: u64) -> std::result::Result<u16, error::ErrorCode> {
    debug self => _1;
    debug slot => _2;
    let mut _0: std::result::Result<u16, error::ErrorCode>;
    let _3: ();
    let mut _4: bool;
    let mut _5: &state::user::User;
    let mut _6: !;
    let mut _7: u16;
    let _8: ();
    let mut _9: &mut state::user::User;
    let mut _10: state::user::UserStatus;
    let mut _11: u64;
    let mut _12: u16;
    let _13: u16;
    let mut _14: u16;
    let mut _15: std::option::Option<u16>;
    let mut _16: std::option::Option<u16>;
    let mut _17: u16;
    let mut _18: std::option::Option<u16>;
    scope 1 {
        debug current_id => _13;
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        _5 = &(*_1);
        _4 = User::is_being_liquidated(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _4) -> [0: bb4, otherwise: bb2];
    }

    bb2: {
        StorageDead(_5);
        StorageLive(_7);
        _7 = ((*_1).17: u16);
        _0 = <u16 as SafeMath>::safe_sub(move _7, const 1_u16) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_7);
        StorageDead(_4);
        StorageDead(_3);
        goto -> bb9;
    }

    bb4: {
        StorageDead(_5);
        _3 = const ();
        StorageDead(_4);
        StorageDead(_3);
        StorageLive(_8);
        StorageLive(_9);
        _9 = &mut (*_1);
        StorageLive(_10);
        _10 = UserStatus::BeingLiquidated;
        _8 = User::add_user_status(move _9, move _10) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        ((*_1).13: u64) = const 0_u64;
        StorageLive(_11);
        _11 = _2;
        ((*_1).14: u64) = move _11;
        StorageDead(_11);
        StorageLive(_12);
        StorageLive(_13);
        _13 = ((*_1).17: u16);
        StorageLive(_14);
        StorageLive(_15);
        StorageLive(_16);
        StorageLive(_17);
        _17 = _13;
        _16 = core::num::<impl u16>::checked_add(move _17, const 1_u16) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_17);
        StorageLive(_18);
        _18 = Option::<u16>::Some(const 1_u16);
        _15 = Option::<u16>::or(move _16, move _18) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_18);
        StorageDead(_16);
        _14 = Option::<u16>::unwrap(move _15) -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageDead(_15);
        ((*_1).17: u16) = move _14;
        StorageDead(_14);
        _12 = _13;
        StorageDead(_13);
        _0 = std::result::Result::<u16, error::ErrorCode>::Ok(move _12);
        StorageDead(_12);
        goto -> bb9;
    }

    bb9: {
        return;
    }
}
