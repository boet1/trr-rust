digraph Mir_0_2224 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_fee_for_fulfillment_with_match(_1: &amp;ReErased state::user::UserStats, _2: &amp;ReErased std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;, _3: u64, _4: &amp;ReErased state::state::FeeStructure, _5: u64, _6: u64, _7: u64, _8: bool, _9: &amp;ReErased std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;, _10: &amp;ReErased state::user::MarketType, _11: i16, _12: bool) -&gt; std::result::Result&lt;math::fees::FillFees, error::ErrorCode&gt;<br align="left"/>let _13: state::state::FeeTier;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::state::FeeTier&gt;;<br align="left"/>let mut _15: std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt;;<br align="left"/>let mut _16: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _17: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _18: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _19: bool;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: state::state::FeeTier;<br align="left"/>let _25: state::state::FeeTier;<br align="left"/>let mut _26: isize;<br align="left"/>let _27: &amp;ReErased &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _28: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::state::FeeTier&gt;;<br align="left"/>let mut _29: std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt;;<br align="left"/>let mut _30: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _31: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _32: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: state::state::FeeTier;<br align="left"/>let mut _38: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::state::FeeTier&gt;;<br align="left"/>let mut _39: std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt;;<br align="left"/>let mut _40: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _41: &amp;ReErased state::state::FeeStructure;<br align="left"/>let mut _42: &amp;ReErased state::user::MarketType;<br align="left"/>let mut _43: isize;<br align="left"/>let _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _45: !;<br align="left"/>let mut _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _47: state::state::FeeTier;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _50: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: &amp;ReErased state::state::FeeTier;<br align="left"/>let _53: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _54: i16;<br align="left"/>let mut _55: isize;<br align="left"/>let _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _57: !;<br align="left"/>let mut _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _59: u64;<br align="left"/>let _60: ();<br align="left"/>let mut _61: bool;<br align="left"/>let mut _62: u64;<br align="left"/>let mut _63: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _64: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: isize;<br align="left"/>let _67: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _68: !;<br align="left"/>let mut _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _70: u64;<br align="left"/>let _71: u64;<br align="left"/>let _72: u64;<br align="left"/>let _73: u64;<br align="left"/>let mut _74: (u64, u64, u64);<br align="left"/>let mut _75: bool;<br align="left"/>let mut _76: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, u64, u64)&gt;;<br align="left"/>let mut _77: std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt;;<br align="left"/>let mut _78: u64;<br align="left"/>let mut _79: &amp;ReErased state::state::FeeTier;<br align="left"/>let _80: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: &amp;ReErased std::option::Option&lt;&amp;ReErased mut state::user::UserStats&gt;;<br align="left"/>let mut _83: isize;<br align="left"/>let _84: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _87: (u64, u64, u64);<br align="left"/>let mut _88: u64;<br align="left"/>let _89: u64;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _91: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _92: u64;<br align="left"/>let mut _93: &amp;ReErased state::state::FeeTier;<br align="left"/>let _94: &amp;ReErased state::state::FeeTier;<br align="left"/>let mut _95: i16;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _100: u64;<br align="left"/>let _101: u64;<br align="left"/>let mut _102: bool;<br align="left"/>let mut _103: u64;<br align="left"/>let mut _104: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _105: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _106: u64;<br align="left"/>let mut _107: u64;<br align="left"/>let mut _108: u64;<br align="left"/>let mut _109: u64;<br align="left"/>let mut _110: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let _111: &amp;ReErased state::state::OrderFillerRewardStructure;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: u64;<br align="left"/>let _117: i64;<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _119: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _120: u64;<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _122: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _123: u64;<br align="left"/>let mut _124: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _125: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _126: u64;<br align="left"/>let mut _127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _128: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _129: u64;<br align="left"/>let mut _130: u64;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _135: u64;<br align="left"/>let mut _136: u64;<br align="left"/>let mut _137: isize;<br align="left"/>let _138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _139: !;<br align="left"/>let mut _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _141: u64;<br align="left"/>let mut _142: u64;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _147: u64;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: i64;<br align="left"/>let mut _153: math::fees::FillFees;<br align="left"/>let mut _154: u64;<br align="left"/>let mut _155: u64;<br align="left"/>let mut _156: i64;<br align="left"/>let mut _157: u64;<br align="left"/>let mut _158: u64;<br align="left"/>let mut _159: u64;<br align="left"/>let mut _160: &amp;ReErased mut state::user::UserStats;<br align="left"/>debug taker_stats =&gt; _1;<br align="left"/>debug maker_stats =&gt; _2;<br align="left"/>debug quote_asset_amount =&gt; _3;<br align="left"/>debug fee_structure =&gt; _4;<br align="left"/>debug order_slot =&gt; _5;<br align="left"/>debug clock_slot =&gt; _6;<br align="left"/>debug filler_multiplier =&gt; _7;<br align="left"/>debug reward_referrer =&gt; _8;<br align="left"/>debug referrer_stats =&gt; _9;<br align="left"/>debug market_type =&gt; _10;<br align="left"/>debug fee_adjustment =&gt; _11;<br align="left"/>debug user_high_leverage_mode =&gt; _12;<br align="left"/>debug taker_fee_tier =&gt; _13;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug maker_fee_tier =&gt; _25;<br align="left"/>debug maker_stats =&gt; _27;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug residual =&gt; _44;<br align="left"/>debug val =&gt; _47;<br align="left"/>debug taker_fee =&gt; _48;<br align="left"/>debug residual =&gt; _56;<br align="left"/>debug val =&gt; _59;<br align="left"/>debug residual =&gt; _67;<br align="left"/>debug val =&gt; _70;<br align="left"/>debug taker_fee =&gt; _71;<br align="left"/>debug referee_discount =&gt; _72;<br align="left"/>debug referrer_reward =&gt; _73;<br align="left"/>debug residual =&gt; _84;<br align="left"/>debug val =&gt; _87;<br align="left"/>debug maker_rebate =&gt; _89;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug filler_reward =&gt; _101;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug fee_to_market =&gt; _117;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>debug residual =&gt; _138;<br align="left"/>debug val =&gt; _141;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>>;
    bb0__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_1)<br/>StorageLive(_17)<br/>_17 = &amp;(*_4)<br/>StorageLive(_18)<br/>_18 = &amp;(*_10)<br/>StorageLive(_19)<br/>_19 = _12<br/></td></tr><tr><td align="left">_15 = determine_user_fee_tier(move _16, move _17, move _18, move _19)</td></tr></table>>];
    bb1__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb2__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_20 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb3__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_14 as Continue).0: state::state::FeeTier)<br/>_13 = _24<br/>StorageDead(_24)<br/>StorageDead(_14)<br/>StorageLive(_25)<br/>_26 = discriminant((*_2))<br/></td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb4__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb6__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = &amp;(*_4)<br/>StorageLive(_42)<br/>_42 = &amp;(*_10)<br/></td></tr><tr><td align="left">_39 = determine_user_fee_tier(move _40, move _41, move _42, const false)</td></tr></table>>];
    bb8__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = &amp;(((*_2) as Some).0: &amp;mut state::user::UserStats)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_160 = deref_copy (*_27)<br/>_30 = &amp;(*_160)<br/>StorageLive(_31)<br/>_31 = &amp;(*_4)<br/>StorageLive(_32)<br/>_32 = &amp;(*_10)<br/></td></tr><tr><td align="left">_29 = determine_user_fee_tier(move _30, move _31, move _32, const false)</td></tr></table>>];
    bb9__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = &lt;std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt; as Try&gt;::branch(move _29)</td></tr></table>>];
    bb10__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_33 = discriminant(_28)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb11__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_28 as Continue).0: state::state::FeeTier)<br/>_25 = _37<br/>StorageDead(_37)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_28 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb13__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">_38 = &lt;std::result::Result&lt;state::state::FeeTier, error::ErrorCode&gt; as Try&gt;::branch(move _39)</td></tr></table>>];
    bb15__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_43 = discriminant(_38)<br/></td></tr><tr><td align="left">switchInt(move _43)</td></tr></table>>];
    bb16__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_38 as Continue).0: state::state::FeeTier)<br/>_25 = _47<br/>StorageDead(_47)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_38 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_46)<br/>_46 = _44<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _46)</td></tr></table>>];
    bb18__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = _3<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;_13<br/>_52 = &amp;(*_53)<br/>StorageLive(_54)<br/>_54 = _11<br/></td></tr><tr><td align="left">_50 = calculate_taker_fee(move _51, move _52, move _54)</td></tr></table>>];
    bb20__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_49 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _50)</td></tr></table>>];
    bb21__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_55 = discriminant(_49)<br/></td></tr><tr><td align="left">switchInt(move _55)</td></tr></table>>];
    bb22__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_49 as Continue).0: u64)<br/>_48 = _59<br/>StorageDead(_59)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = _12<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb23__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_49 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_58)<br/>_58 = _56<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _58)</td></tr></table>>];
    bb24__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _48<br/></td></tr><tr><td align="left">_64 = &lt;u64 as SafeMath&gt;::safe_mul(move _65, const 2_u64)</td></tr></table>>];
    bb26__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_60 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">_63 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _64)</td></tr></table>>];
    bb28__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_66 = discriminant(_63)<br/></td></tr><tr><td align="left">switchInt(move _66)</td></tr></table>>];
    bb29__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_70)<br/>_70 = ((_63 as Continue).0: u64)<br/>_62 = _70<br/>StorageDead(_70)<br/>_48 = move _62<br/>StorageDead(_62)<br/>StorageDead(_63)<br/>_60 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_63 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_69)<br/>_69 = _67<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _69)</td></tr></table>>];
    bb31__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_62)<br/>StorageDead(_63)<br/>StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _8<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb33__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _48<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;_13<br/>_79 = &amp;(*_80)<br/>StorageLive(_81)<br/>_81 = ((*_4).2: u64)<br/>StorageLive(_82)<br/>_82 = &amp;(*_9)<br/></td></tr><tr><td align="left">_77 = calculate_referee_fee_and_referrer_reward(move _78, move _79, move _81, move _82)</td></tr></table>>];
    bb34__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_81)<br/>StorageDead(_79)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_76 = &lt;std::result::Result&lt;(u64, u64, u64), error::ErrorCode&gt; as Try&gt;::branch(move _77)</td></tr></table>>];
    bb35__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>_83 = discriminant(_76)<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb36__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_87)<br/>_87 = ((_76 as Continue).0: (u64, u64, u64))<br/>_74 = _87<br/>StorageDead(_87)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_76 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_86)<br/>_86 = _84<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _86)</td></tr></table>>];
    bb38__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_84)<br/>StorageDead(_80)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = _48<br/>_74 = (move _88, const 0_u64, const 0_u64)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageLive(_71)<br/>_71 = (_74.0: u64)<br/>StorageLive(_72)<br/>_72 = (_74.1: u64)<br/>StorageLive(_73)<br/>_73 = (_74.2: u64)<br/>StorageDead(_74)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = _3<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_25<br/>_93 = &amp;(*_94)<br/>StorageLive(_95)<br/>_95 = _11<br/></td></tr><tr><td align="left">_91 = calculate_maker_rebate(move _92, move _93, move _95)</td></tr></table>>];
    bb41__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb42__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_96 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb43__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_90 as Continue).0: u64)<br/>_89 = _100<br/>StorageDead(_100)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = _7<br/>_102 = Eq(move _103, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _102)</td></tr></table>>];
    bb44__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_99)<br/>_99 = _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb45__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>StorageDead(_94)<br/>StorageDead(_90)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_101 = const 0_u64<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_106 = _71<br/>StorageLive(_107)<br/>_107 = _5<br/>StorageLive(_108)<br/>_108 = _6<br/>StorageLive(_109)<br/>_109 = _7<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;((*_4).1: state::state::OrderFillerRewardStructure)<br/>_110 = &amp;(*_111)<br/></td></tr><tr><td align="left">_105 = calculate_filler_reward(move _106, move _107, move _108, move _109, move _110)</td></tr></table>>];
    bb48__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">_104 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _105)</td></tr></table>>];
    bb49__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>_112 = discriminant(_104)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb50__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_104 as Continue).0: u64)<br/>_101 = _116<br/>StorageDead(_116)<br/>StorageDead(_111)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_104 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb52__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = _71<br/>StorageLive(_130)<br/>_130 = _101<br/></td></tr><tr><td align="left">_128 = &lt;u64 as SafeMath&gt;::safe_sub(move _129, move _130)</td></tr></table>>];
    bb54__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_127 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _128)</td></tr></table>>];
    bb55__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>_131 = discriminant(_127)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb56__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_127 as Continue).0: u64)<br/>_126 = _135<br/>StorageDead(_135)<br/>StorageLive(_136)<br/>_136 = _73<br/></td></tr><tr><td align="left">_125 = &lt;u64 as SafeMath&gt;::safe_sub(move _126, move _136)</td></tr></table>>];
    bb57__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = ((_127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_134)<br/>_134 = _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb58__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>StorageDead(_126)<br/>StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">_124 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _125)</td></tr></table>>];
    bb60__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>_137 = discriminant(_124)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb61__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = ((_124 as Continue).0: u64)<br/>_123 = _141<br/>StorageDead(_141)<br/>StorageLive(_142)<br/>_142 = _89<br/></td></tr><tr><td align="left">_122 = &lt;u64 as SafeMath&gt;::safe_sub(move _123, move _142)</td></tr></table>>];
    bb62__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_138)<br/>_138 = ((_124 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_140)<br/>_140 = _138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _140)</td></tr></table>>];
    bb63__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb65__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_143 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb66__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_121 as Continue).0: u64)<br/>_120 = _147<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_119 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _120)</td></tr></table>>];
    bb67__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_146)<br/>_146 = _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb68__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb70__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_148 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb71__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_118 as Continue).0: i64)<br/>_117 = _152<br/>StorageDead(_152)<br/>StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/>StorageDead(_118)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>_154 = _71<br/>StorageLive(_155)<br/>_155 = _89<br/>StorageLive(_156)<br/>_156 = _117<br/>StorageLive(_157)<br/>_157 = _101<br/>StorageLive(_158)<br/>_158 = _73<br/>StorageLive(_159)<br/>_159 = _72<br/>_153 = FillFees { user_fee: move _154, maker_rebate: move _155, fee_to_market: move _156, fee_to_market_for_lp: const 0_i64, filler_reward: move _157, referrer_reward: move _158, referee_discount: move _159 }<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/>StorageDead(_154)<br/>_0 = std::result::Result::&lt;FillFees, error::ErrorCode&gt;::Ok(move _153)<br/>StorageDead(_153)<br/>StorageDead(_117)<br/>StorageDead(_101)<br/>StorageDead(_89)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_48)<br/>StorageDead(_25)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb72__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;FillFees, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb73__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb74__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_122)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_2224 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2224 -> bb1__0_2224 [label="return"];
    bb1__0_2224 -> bb2__0_2224 [label="return"];
    bb2__0_2224 -> bb3__0_2224 [label="0"];
    bb2__0_2224 -> bb5__0_2224 [label="1"];
    bb2__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb3__0_2224 -> bb8__0_2224 [label="1"];
    bb3__0_2224 -> bb7__0_2224 [label="otherwise"];
    bb5__0_2224 -> bb6__0_2224 [label="return"];
    bb6__0_2224 -> bb81__0_2224 [label=""];
    bb7__0_2224 -> bb14__0_2224 [label="return"];
    bb8__0_2224 -> bb9__0_2224 [label="return"];
    bb9__0_2224 -> bb10__0_2224 [label="return"];
    bb10__0_2224 -> bb11__0_2224 [label="0"];
    bb10__0_2224 -> bb12__0_2224 [label="1"];
    bb10__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb11__0_2224 -> bb19__0_2224 [label=""];
    bb12__0_2224 -> bb13__0_2224 [label="return"];
    bb13__0_2224 -> bb80__0_2224 [label=""];
    bb14__0_2224 -> bb15__0_2224 [label="return"];
    bb15__0_2224 -> bb16__0_2224 [label="0"];
    bb15__0_2224 -> bb17__0_2224 [label="1"];
    bb15__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb16__0_2224 -> bb19__0_2224 [label=""];
    bb17__0_2224 -> bb18__0_2224 [label="return"];
    bb18__0_2224 -> bb80__0_2224 [label=""];
    bb19__0_2224 -> bb20__0_2224 [label="return"];
    bb20__0_2224 -> bb21__0_2224 [label="return"];
    bb21__0_2224 -> bb22__0_2224 [label="0"];
    bb21__0_2224 -> bb23__0_2224 [label="1"];
    bb21__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb22__0_2224 -> bb26__0_2224 [label="0"];
    bb22__0_2224 -> bb25__0_2224 [label="otherwise"];
    bb23__0_2224 -> bb24__0_2224 [label="return"];
    bb24__0_2224 -> bb79__0_2224 [label=""];
    bb25__0_2224 -> bb27__0_2224 [label="return"];
    bb26__0_2224 -> bb32__0_2224 [label=""];
    bb27__0_2224 -> bb28__0_2224 [label="return"];
    bb28__0_2224 -> bb29__0_2224 [label="0"];
    bb28__0_2224 -> bb30__0_2224 [label="1"];
    bb28__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb29__0_2224 -> bb32__0_2224 [label=""];
    bb30__0_2224 -> bb31__0_2224 [label="return"];
    bb31__0_2224 -> bb79__0_2224 [label=""];
    bb32__0_2224 -> bb39__0_2224 [label="0"];
    bb32__0_2224 -> bb33__0_2224 [label="otherwise"];
    bb33__0_2224 -> bb34__0_2224 [label="return"];
    bb34__0_2224 -> bb35__0_2224 [label="return"];
    bb35__0_2224 -> bb36__0_2224 [label="0"];
    bb35__0_2224 -> bb37__0_2224 [label="1"];
    bb35__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb36__0_2224 -> bb40__0_2224 [label=""];
    bb37__0_2224 -> bb38__0_2224 [label="return"];
    bb38__0_2224 -> bb79__0_2224 [label=""];
    bb39__0_2224 -> bb40__0_2224 [label=""];
    bb40__0_2224 -> bb41__0_2224 [label="return"];
    bb41__0_2224 -> bb42__0_2224 [label="return"];
    bb42__0_2224 -> bb43__0_2224 [label="0"];
    bb42__0_2224 -> bb44__0_2224 [label="1"];
    bb42__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb43__0_2224 -> bb47__0_2224 [label="0"];
    bb43__0_2224 -> bb46__0_2224 [label="otherwise"];
    bb44__0_2224 -> bb45__0_2224 [label="return"];
    bb45__0_2224 -> bb78__0_2224 [label=""];
    bb46__0_2224 -> bb53__0_2224 [label=""];
    bb47__0_2224 -> bb48__0_2224 [label="return"];
    bb48__0_2224 -> bb49__0_2224 [label="return"];
    bb49__0_2224 -> bb50__0_2224 [label="0"];
    bb49__0_2224 -> bb51__0_2224 [label="1"];
    bb49__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb50__0_2224 -> bb53__0_2224 [label=""];
    bb51__0_2224 -> bb52__0_2224 [label="return"];
    bb52__0_2224 -> bb77__0_2224 [label=""];
    bb53__0_2224 -> bb54__0_2224 [label="return"];
    bb54__0_2224 -> bb55__0_2224 [label="return"];
    bb55__0_2224 -> bb56__0_2224 [label="0"];
    bb55__0_2224 -> bb57__0_2224 [label="1"];
    bb55__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb56__0_2224 -> bb59__0_2224 [label="return"];
    bb57__0_2224 -> bb58__0_2224 [label="return"];
    bb58__0_2224 -> bb74__0_2224 [label=""];
    bb59__0_2224 -> bb60__0_2224 [label="return"];
    bb60__0_2224 -> bb61__0_2224 [label="0"];
    bb60__0_2224 -> bb62__0_2224 [label="1"];
    bb60__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb61__0_2224 -> bb64__0_2224 [label="return"];
    bb62__0_2224 -> bb63__0_2224 [label="return"];
    bb63__0_2224 -> bb74__0_2224 [label=""];
    bb64__0_2224 -> bb65__0_2224 [label="return"];
    bb65__0_2224 -> bb66__0_2224 [label="0"];
    bb65__0_2224 -> bb67__0_2224 [label="1"];
    bb65__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb66__0_2224 -> bb69__0_2224 [label="return"];
    bb67__0_2224 -> bb68__0_2224 [label="return"];
    bb68__0_2224 -> bb75__0_2224 [label=""];
    bb69__0_2224 -> bb70__0_2224 [label="return"];
    bb70__0_2224 -> bb71__0_2224 [label="0"];
    bb70__0_2224 -> bb72__0_2224 [label="1"];
    bb70__0_2224 -> bb4__0_2224 [label="otherwise"];
    bb71__0_2224 -> bb82__0_2224 [label=""];
    bb72__0_2224 -> bb73__0_2224 [label="return"];
    bb73__0_2224 -> bb76__0_2224 [label=""];
    bb74__0_2224 -> bb75__0_2224 [label=""];
    bb75__0_2224 -> bb76__0_2224 [label=""];
    bb76__0_2224 -> bb77__0_2224 [label=""];
    bb77__0_2224 -> bb78__0_2224 [label=""];
    bb78__0_2224 -> bb79__0_2224 [label=""];
    bb79__0_2224 -> bb80__0_2224 [label=""];
    bb80__0_2224 -> bb81__0_2224 [label=""];
    bb81__0_2224 -> bb82__0_2224 [label=""];
}
