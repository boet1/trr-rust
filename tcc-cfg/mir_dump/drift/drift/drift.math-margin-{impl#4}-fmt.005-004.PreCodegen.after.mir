// MIR for `math::margin::<impl at programs/drift/src/math/margin.rs:36:34: 36:39>::fmt` after PreCodegen

fn math::margin::<impl at programs/drift/src/math/margin.rs:36:34: 36:39>::fmt(_1: &math::margin::MarginRequirementType, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: &mut std::fmt::Formatter<'_>;
    let mut _4: &str;
    let mut _5: isize;
    let _6: &str;
    let _7: &str;
    let _8: &str;

    bb0: {
        StorageLive(_3);
        _3 = &mut (*_2);
        StorageLive(_4);
        _5 = discriminant((*_1));
        switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_8);
        _8 = const "Maintenance";
        _4 = &(*_8);
        StorageDead(_8);
        goto -> bb5;
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_6);
        _6 = const "Initial";
        _4 = &(*_6);
        StorageDead(_6);
        goto -> bb5;
    }

    bb4: {
        StorageLive(_7);
        _7 = const "Fill";
        _4 = &(*_7);
        StorageDead(_7);
        goto -> bb5;
    }

    bb5: {
        _0 = Formatter::<'_>::write_str(move _3, move _4) -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageDead(_4);
        StorageDead(_3);
        return;
    }
}
