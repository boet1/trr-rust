digraph Mir_0_1816 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_net_user_pnl(_1: &amp;ReErased state::perp_market::AMM, _2: i64) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _6: bool;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: ();<br align="left"/>let _9: error::ErrorCode;<br align="left"/>let _10: ();<br align="left"/>let mut _11: &amp;ReErased str;<br align="left"/>let _12: &amp;ReErased str;<br align="left"/>let mut _13: &amp;ReErased std::string::String;<br align="left"/>let _14: &amp;ReErased std::string::String;<br align="left"/>let _15: std::string::String;<br align="left"/>let _16: std::string::String;<br align="left"/>let mut _17: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _18: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _19: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _20: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _21: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _22: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _23: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _25: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _26: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _27: &amp;ReErased error::ErrorCode;<br align="left"/>let _28: &amp;ReErased error::ErrorCode;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: &amp;ReErased std::string::String;<br align="left"/>let _33: &amp;ReErased std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let mut _36: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _39: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _40: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _41: error::ErrorCode;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: ();<br align="left"/>let _47: i128;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _49: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _50: i128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _53: i128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _56: i128;<br align="left"/>let mut _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i128;<br align="left"/>let mut _63: i128;<br align="left"/>let mut _64: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _65: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: i128;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: i128;<br align="left"/>let mut _77: i128;<br align="left"/>let mut _78: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _79: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _80: isize;<br align="left"/>let _81: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _82: !;<br align="left"/>let mut _83: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _84: i128;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: i128;<br align="left"/>let mut _90: i128;<br align="left"/>let mut _91: i128;<br align="left"/>let mut _92: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _93: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _94: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: i128;<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>debug error_code =&gt; _9;<br align="left"/>debug res =&gt; _16;<br align="left"/>debug res =&gt; _35;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug net_user_base_asset_value =&gt; _47;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _81;<br align="left"/>debug val =&gt; _84;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>>;
    bb0__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = _2<br/>_6 = Gt(move _7, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_8)<br/>_8 = ()<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _8)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageLive(_9)<br/>_9 = error::ErrorCode::InvalidOracle<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_101 = const _<br/>_20 = &amp;(*_101)<br/>_19 = &amp;(*_20)<br/>_18 = move _19 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_19)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;_9<br/>_27 = &amp;(*_28)<br/></td></tr><tr><td align="left">_26 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _27)</td></tr></table>>];
    bb3__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_25 = [move _26]<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_17 = Arguments::&lt;'_&gt;::new_v1(move _18, move _22)</td></tr></table>>];
    bb4__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = format(move _17)</td></tr></table>>];
    bb5__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_28)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>_15 = move _16<br/>StorageDead(_16)<br/>_14 = &amp;_15<br/>_13 = &amp;(*_14)<br/></td></tr><tr><td align="left">_12 = &lt;String as Deref&gt;::deref(move _13)</td></tr></table>>];
    bb6__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_11 = &amp;(*_12)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">_10 = solana_program::log::sol_log(move _11)</td></tr></table>>];
    bb7__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/></td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb8__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_10)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_100 = const _<br/>_39 = &amp;(*_100)<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = Arguments::&lt;'_&gt;::new_const(move _37)</td></tr></table>>];
    bb9__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = format(move _36)</td></tr></table>>];
    bb10__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_39)<br/>_34 = move _35<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = &lt;String as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb11__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_30 = &amp;(*_31)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb12__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb13__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_41)<br/>_41 = _9<br/>_5 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _41)<br/>StorageDead(_41)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb15__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_42 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb16__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_4 as Continue).0: ())<br/>_3 = _46<br/>StorageDead(_46)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = ((*_1).15: i128)<br/>StorageLive(_57)<br/>_57 = ((*_1).16: i128)<br/></td></tr><tr><td align="left">_55 = &lt;i128 as SafeMath&gt;::safe_add(move _56, move _57)</td></tr></table>>];
    bb17__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb18__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb19__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb21__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_58 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb22__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_54 as Continue).0: i128)<br/>_53 = _62<br/>StorageDead(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _2<br/></td></tr><tr><td align="left">_65 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _66)</td></tr></table>>];
    bb23__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb24__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">_64 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _65)</td></tr></table>>];
    bb26__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>_67 = discriminant(_64)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb27__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_64 as Continue).0: i128)<br/>_63 = _71<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_52 = &lt;i128 as SafeMath&gt;::safe_mul(move _53, move _63)</td></tr></table>>];
    bb28__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_64 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb29__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_63)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb31__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_72 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb32__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_51 as Continue).0: i128)<br/>_50 = _76<br/>StorageDead(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/></td></tr><tr><td align="left">_79 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb33__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb34__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left">_78 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _79)</td></tr></table>>];
    bb36__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>_80 = discriminant(_78)<br/></td></tr><tr><td align="left">switchInt(move _80)</td></tr></table>>];
    bb37__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>_84 = ((_78 as Continue).0: i128)<br/>_77 = _84<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_49 = &lt;i128 as SafeMath&gt;::safe_div(move _50, move _77)</td></tr></table>>];
    bb38__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_78 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_83)<br/>_83 = _81<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _83)</td></tr></table>>];
    bb39__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_81)<br/>StorageDead(_77)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb41__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_85 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb42__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_48 as Continue).0: i128)<br/>_47 = _89<br/>StorageDead(_89)<br/>StorageDead(_78)<br/>StorageDead(_64)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageLive(_90)<br/>_90 = _47<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;(*_1)<br/></td></tr><tr><td align="left">_93 = calculate_net_user_cost_basis(move _94)</td></tr></table>>];
    bb43__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb44__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _93)</td></tr></table>>];
    bb46__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>_95 = discriminant(_92)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb47__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_92 as Continue).0: i128)<br/>_91 = _99<br/>StorageDead(_99)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_add(move _90, move _91)</td></tr></table>>];
    bb48__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_92 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb49__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_47)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_47)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">return</td></tr></table>>];
    bb56__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb57__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">drop(_15)</td></tr></table>>];
    bb58__0_1816 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_1816 -> bb2__0_1816 [label="0"];
    bb0__0_1816 -> bb1__0_1816 [label="otherwise"];
    bb1__0_1816 -> bb14__0_1816 [label=""];
    bb2__0_1816 -> bb3__0_1816 [label="return"];
    bb3__0_1816 -> bb4__0_1816 [label="return"];
    bb4__0_1816 -> bb5__0_1816 [label="return"];
    bb5__0_1816 -> bb6__0_1816 [label="return"];
    bb5__0_1816 -> bb57__0_1816 [label="unwind"];
    bb6__0_1816 -> bb7__0_1816 [label="return"];
    bb6__0_1816 -> bb57__0_1816 [label="unwind"];
    bb7__0_1816 -> bb8__0_1816 [label="return"];
    bb7__0_1816 -> bb58__0_1816 [label="unwind"];
    bb8__0_1816 -> bb9__0_1816 [label="return"];
    bb9__0_1816 -> bb10__0_1816 [label="return"];
    bb10__0_1816 -> bb11__0_1816 [label="return"];
    bb10__0_1816 -> bb56__0_1816 [label="unwind"];
    bb11__0_1816 -> bb12__0_1816 [label="return"];
    bb11__0_1816 -> bb56__0_1816 [label="unwind"];
    bb12__0_1816 -> bb13__0_1816 [label="return"];
    bb12__0_1816 -> bb58__0_1816 [label="unwind"];
    bb13__0_1816 -> bb14__0_1816 [label=""];
    bb14__0_1816 -> bb15__0_1816 [label="return"];
    bb15__0_1816 -> bb16__0_1816 [label="0"];
    bb15__0_1816 -> bb18__0_1816 [label="1"];
    bb15__0_1816 -> bb17__0_1816 [label="otherwise"];
    bb16__0_1816 -> bb20__0_1816 [label="return"];
    bb18__0_1816 -> bb19__0_1816 [label="return"];
    bb19__0_1816 -> bb55__0_1816 [label=""];
    bb20__0_1816 -> bb21__0_1816 [label="return"];
    bb21__0_1816 -> bb22__0_1816 [label="0"];
    bb21__0_1816 -> bb23__0_1816 [label="1"];
    bb21__0_1816 -> bb17__0_1816 [label="otherwise"];
    bb22__0_1816 -> bb25__0_1816 [label="return"];
    bb23__0_1816 -> bb24__0_1816 [label="return"];
    bb24__0_1816 -> bb54__0_1816 [label=""];
    bb25__0_1816 -> bb26__0_1816 [label="return"];
    bb26__0_1816 -> bb27__0_1816 [label="0"];
    bb26__0_1816 -> bb28__0_1816 [label="1"];
    bb26__0_1816 -> bb17__0_1816 [label="otherwise"];
    bb27__0_1816 -> bb30__0_1816 [label="return"];
    bb28__0_1816 -> bb29__0_1816 [label="return"];
    bb29__0_1816 -> bb52__0_1816 [label=""];
    bb30__0_1816 -> bb31__0_1816 [label="return"];
    bb31__0_1816 -> bb32__0_1816 [label="0"];
    bb31__0_1816 -> bb33__0_1816 [label="1"];
    bb31__0_1816 -> bb17__0_1816 [label="otherwise"];
    bb32__0_1816 -> bb35__0_1816 [label="return"];
    bb33__0_1816 -> bb34__0_1816 [label="return"];
    bb34__0_1816 -> bb52__0_1816 [label=""];
    bb35__0_1816 -> bb36__0_1816 [label="return"];
    bb36__0_1816 -> bb37__0_1816 [label="0"];
    bb36__0_1816 -> bb38__0_1816 [label="1"];
    bb36__0_1816 -> bb17__0_1816 [label="otherwise"];
    bb37__0_1816 -> bb40__0_1816 [label="return"];
    bb38__0_1816 -> bb39__0_1816 [label="return"];
    bb39__0_1816 -> bb51__0_1816 [label=""];
    bb40__0_1816 -> bb41__0_1816 [label="return"];
    bb41__0_1816 -> bb42__0_1816 [label="0"];
    bb41__0_1816 -> bb43__0_1816 [label="1"];
    bb41__0_1816 -> bb17__0_1816 [label="otherwise"];
    bb42__0_1816 -> bb45__0_1816 [label="return"];
    bb43__0_1816 -> bb44__0_1816 [label="return"];
    bb44__0_1816 -> bb51__0_1816 [label=""];
    bb45__0_1816 -> bb46__0_1816 [label="return"];
    bb46__0_1816 -> bb47__0_1816 [label="0"];
    bb46__0_1816 -> bb48__0_1816 [label="1"];
    bb46__0_1816 -> bb17__0_1816 [label="otherwise"];
    bb47__0_1816 -> bb50__0_1816 [label="return"];
    bb48__0_1816 -> bb49__0_1816 [label="return"];
    bb49__0_1816 -> bb55__0_1816 [label=""];
    bb50__0_1816 -> bb55__0_1816 [label=""];
    bb51__0_1816 -> bb53__0_1816 [label=""];
    bb52__0_1816 -> bb53__0_1816 [label=""];
    bb53__0_1816 -> bb54__0_1816 [label=""];
    bb54__0_1816 -> bb55__0_1816 [label=""];
    bb56__0_1816 -> bb58__0_1816 [label="return"];
    bb57__0_1816 -> bb58__0_1816 [label="return"];
}
