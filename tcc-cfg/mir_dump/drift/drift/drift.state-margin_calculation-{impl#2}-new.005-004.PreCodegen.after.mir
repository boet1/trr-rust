// MIR for `margin_calculation::<impl at programs/drift/src/state/margin_calculation.rs:208:1: 208:23>::new` after PreCodegen

fn margin_calculation::<impl at programs/drift/src/state/margin_calculation.rs:208:1: 208:23>::new(_1: MarginContext) -> MarginCalculation {
    debug context => _1;
    let mut _0: state::margin_calculation::MarginCalculation;
    let mut _2: state::margin_calculation::MarginContext;

    bb0: {
        StorageLive(_2);
        _2 = _1;
        _0 = MarginCalculation { context: move _2, total_collateral: const 0_i128, total_collateral_buffer: const 0_i128, margin_requirement: const 0_u128, margin_requirement_plus_buffer: const 0_u128, num_spot_liabilities: const 0_u8, num_perp_liabilities: const 0_u8, all_deposit_oracles_valid: const true, all_liability_oracles_valid: const true, with_perp_isolated_liability: const false, with_spot_isolated_liability: const false, total_spot_asset_value: const 0_i128, total_spot_liability_value: const 0_u128, total_perp_liability_value: const 0_u128, total_perp_pnl: const 0_i128, open_orders_margin_requirement: const 0_u128, tracked_market_margin_requirement: const 0_u128, fuel_deposits: const 0_u32, fuel_borrows: const 0_u32, fuel_positions: const 0_u32 };
        StorageDead(_2);
        return;
    }
}
