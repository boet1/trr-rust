digraph Mir_0_547 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_trigger_order_params(_1: &amp;ReErased mut state::user::Order, _2: &amp;ReErased state::oracle::OraclePriceData, _3: u64, _4: u8, _5: std::option::Option&lt;&amp;ReErased state::perp_market::PerpMarket&gt;) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let mut _6: state::user::OrderTriggerCondition;<br align="left"/>let mut _7: isize;<br align="left"/>let mut _8: !;<br align="left"/>let mut _9: error::ErrorCode;<br align="left"/>let mut _10: &amp;ReErased Closure(DefId(0:4715 ~ drift[d311]::controller::orders::update_trigger_order_params::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let _11: Closure(DefId(0:4715 ~ drift[d311]::controller::orders::update_trigger_order_params::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _12: ();<br align="left"/>let _13: ();<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: u64;<br align="left"/>let mut _17: u64;<br align="left"/>let mut _18: bool;<br align="left"/>let _19: ();<br align="left"/>let mut _20: &amp;ReErased mut state::user::Order;<br align="left"/>let mut _21: state::user::OrderBitFlag;<br align="left"/>let mut _22: u64;<br align="left"/>let _23: u8;<br align="left"/>let _24: i64;<br align="left"/>let _25: i64;<br align="left"/>let mut _26: (u8, i64, i64);<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u8, i64, i64)&gt;;<br align="left"/>let mut _28: std::result::Result&lt;(u8, i64, i64), error::ErrorCode&gt;;<br align="left"/>let mut _29: &amp;ReErased state::user::Order;<br align="left"/>let mut _30: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _31: u8;<br align="left"/>let mut _32: std::option::Option&lt;&amp;ReErased state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: (u8, i64, i64);<br align="left"/>let _38: ();<br align="left"/>let mut _39: &amp;ReErased str;<br align="left"/>let _40: &amp;ReErased str;<br align="left"/>let mut _41: &amp;ReErased std::string::String;<br align="left"/>let _42: &amp;ReErased std::string::String;<br align="left"/>let _43: std::string::String;<br align="left"/>let _44: std::string::String;<br align="left"/>let mut _45: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _47: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _48: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _49: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _50: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _51: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _52: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _53: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _54: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased u8;<br align="left"/>let _56: &amp;ReErased u8;<br align="left"/>let mut _57: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _58: &amp;ReErased i64;<br align="left"/>let _59: &amp;ReErased i64;<br align="left"/>let mut _60: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _61: &amp;ReErased i64;<br align="left"/>let _62: &amp;ReErased i64;<br align="left"/>let mut _63: u8;<br align="left"/>let mut _64: i64;<br align="left"/>let mut _65: i64;<br align="left"/>let _66: ();<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: ();<br align="left"/>let mut _70: &amp;ReErased mut state::user::Order;<br align="left"/>let mut _71: state::user::OrderBitFlag;<br align="left"/>let mut _72: ();<br align="left"/>let mut _73: &amp;ReErased Closure(DefId(0:4715 ~ drift[d311]::controller::orders::update_trigger_order_params::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>debug order =&gt; _1;<br align="left"/>debug oracle_price_data =&gt; _2;<br align="left"/>debug slot =&gt; _3;<br align="left"/>debug min_auction_duration =&gt; _4;<br align="left"/>debug perp_market =&gt; _5;<br align="left"/>debug auction_duration =&gt; _23;<br align="left"/>debug auction_start_price =&gt; _24;<br align="left"/>debug auction_end_price =&gt; _25;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug res =&gt; _44;<br align="left"/>>;
    bb0__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_7 = discriminant(((*_1).21: state::user::OrderTriggerCondition))<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb1__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>StorageLive(_10)<br/>_73 = const _<br/>_10 = &amp;(*_73)<br/>StorageLive(_12)<br/>_12 = ()<br/></td></tr><tr><td align="left">_9 = &lt;{closure@programs/drift/src/error.rs:647:9: 647:11} as Fn&lt;()&gt;&gt;::call(move _10, move _12)</td></tr></table>>];
    bb2__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_6 = OrderTriggerCondition::TriggeredAbove<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb3__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_6 = OrderTriggerCondition::TriggeredBelow<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_10)<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _9)<br/>StorageDead(_9)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">((*_1).21: state::user::OrderTriggerCondition) = move _6<br/>StorageDead(_6)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = _3<br/>StorageLive(_17)<br/>_17 = ((*_1).0: u64)<br/></td></tr><tr><td align="left">_15 = core::num::&lt;impl u64&gt;::saturating_sub(move _16, move _17)</td></tr></table>>];
    bb6__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>_14 = Gt(move _15, const 150_u64)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb7__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageLive(_18)<br/>_18 = ((*_1).18: bool)<br/></td></tr><tr><td align="left">switchInt(move _18)</td></tr></table>>];
    bb8__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = &amp;mut (*_1)<br/>StorageLive(_21)<br/>_21 = OrderBitFlag::SafeTriggerOrder<br/></td></tr><tr><td align="left">_19 = Order::add_bit_flag(move _20, move _21)</td></tr></table>>];
    bb9__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_13 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_22)<br/>_22 = _3<br/>((*_1).0: u64) = move _22<br/>StorageDead(_22)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = &amp;(*_1)<br/>StorageLive(_30)<br/>_30 = &amp;(*_2)<br/>StorageLive(_31)<br/>_31 = _4<br/>StorageLive(_32)<br/>_32 = _5<br/></td></tr><tr><td align="left">_28 = calculate_auction_params_for_trigger_order(move _29, move _30, move _31, move _32)</td></tr></table>>];
    bb13__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;(u8, i64, i64), error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb14__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_33 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb15__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_27 as Continue).0: (u8, i64, i64))<br/>_26 = _37<br/>StorageDead(_37)<br/>StorageLive(_23)<br/>_23 = (_26.0: u8)<br/>StorageLive(_24)<br/>_24 = (_26.1: i64)<br/>StorageLive(_25)<br/>_25 = (_26.2: i64)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_74 = const _<br/>_48 = &amp;(*_74)<br/>_47 = &amp;(*_48)<br/>_46 = move _47 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_47)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = &amp;_23<br/>_55 = &amp;(*_56)<br/></td></tr><tr><td align="left">_54 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _55)</td></tr></table>>];
    bb16__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb17__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb18__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_24<br/>_58 = &amp;(*_59)<br/></td></tr><tr><td align="left">_57 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _58)</td></tr></table>>];
    bb20__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_25<br/>_61 = &amp;(*_62)<br/></td></tr><tr><td align="left">_60 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _61)</td></tr></table>>];
    bb21__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>_53 = [move _54, move _57, move _60]<br/>StorageDead(_60)<br/>StorageDead(_57)<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_45 = Arguments::&lt;'_&gt;::new_v1(move _46, move _50)</td></tr></table>>];
    bb22__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">_44 = format(move _45)</td></tr></table>>];
    bb23__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/>_43 = move _44<br/>StorageDead(_44)<br/>_42 = &amp;_43<br/>_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = &lt;String as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb24__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_39 = &amp;(*_40)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_38 = solana_program::log::sol_log(move _39)</td></tr></table>>];
    bb25__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb26__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageLive(_63)<br/>_63 = _23<br/>((*_1).22: u8) = move _63<br/>StorageDead(_63)<br/>StorageLive(_64)<br/>_64 = _24<br/>((*_1).6: i64) = move _64<br/>StorageDead(_64)<br/>StorageLive(_65)<br/>_65 = _25<br/>((*_1).7: i64) = move _65<br/>StorageDead(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_68 = discriminant(((*_1).13: state::user::OrderType))<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb27__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_67 = const false<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_67 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb30__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_1)<br/>StorageLive(_71)<br/>_71 = OrderBitFlag::OracleTriggerMarket<br/></td></tr><tr><td align="left">_69 = Order::add_bit_flag(move _70, move _71)</td></tr></table>>];
    bb31__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>_66 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_66 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_72)<br/>_72 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _72)<br/>StorageDead(_72)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">return</td></tr></table>>];
    bb35__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">drop(_43)</td></tr></table>>];
    bb36__0_547 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_547 -> bb2__0_547 [label="0"];
    bb0__0_547 -> bb3__0_547 [label="1"];
    bb0__0_547 -> bb1__0_547 [label="otherwise"];
    bb1__0_547 -> bb4__0_547 [label="return"];
    bb2__0_547 -> bb5__0_547 [label=""];
    bb3__0_547 -> bb5__0_547 [label=""];
    bb4__0_547 -> bb34__0_547 [label=""];
    bb5__0_547 -> bb6__0_547 [label="return"];
    bb6__0_547 -> bb10__0_547 [label="0"];
    bb6__0_547 -> bb7__0_547 [label="otherwise"];
    bb7__0_547 -> bb11__0_547 [label="0"];
    bb7__0_547 -> bb8__0_547 [label="otherwise"];
    bb8__0_547 -> bb9__0_547 [label="return"];
    bb9__0_547 -> bb12__0_547 [label=""];
    bb10__0_547 -> bb11__0_547 [label=""];
    bb11__0_547 -> bb12__0_547 [label=""];
    bb12__0_547 -> bb13__0_547 [label="return"];
    bb13__0_547 -> bb14__0_547 [label="return"];
    bb14__0_547 -> bb15__0_547 [label="0"];
    bb14__0_547 -> bb17__0_547 [label="1"];
    bb14__0_547 -> bb16__0_547 [label="otherwise"];
    bb15__0_547 -> bb19__0_547 [label="return"];
    bb17__0_547 -> bb18__0_547 [label="return"];
    bb18__0_547 -> bb34__0_547 [label=""];
    bb19__0_547 -> bb20__0_547 [label="return"];
    bb20__0_547 -> bb21__0_547 [label="return"];
    bb21__0_547 -> bb22__0_547 [label="return"];
    bb22__0_547 -> bb23__0_547 [label="return"];
    bb23__0_547 -> bb24__0_547 [label="return"];
    bb23__0_547 -> bb35__0_547 [label="unwind"];
    bb24__0_547 -> bb25__0_547 [label="return"];
    bb24__0_547 -> bb35__0_547 [label="unwind"];
    bb25__0_547 -> bb26__0_547 [label="return"];
    bb25__0_547 -> bb36__0_547 [label="unwind"];
    bb26__0_547 -> bb28__0_547 [label="2"];
    bb26__0_547 -> bb27__0_547 [label="otherwise"];
    bb27__0_547 -> bb29__0_547 [label=""];
    bb28__0_547 -> bb29__0_547 [label=""];
    bb29__0_547 -> bb32__0_547 [label="0"];
    bb29__0_547 -> bb30__0_547 [label="otherwise"];
    bb30__0_547 -> bb31__0_547 [label="return"];
    bb31__0_547 -> bb33__0_547 [label=""];
    bb32__0_547 -> bb33__0_547 [label=""];
    bb33__0_547 -> bb34__0_547 [label=""];
    bb35__0_547 -> bb36__0_547 [label="return"];
}
