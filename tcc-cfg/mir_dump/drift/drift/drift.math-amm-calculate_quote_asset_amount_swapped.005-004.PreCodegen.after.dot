digraph Mir_0_1806 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_quote_asset_amount_swapped(_1: u128, _2: u128, _3: controller::amm::SwapDirection, _4: u128) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let mut _5: u128;<br align="left"/>let mut _6: isize;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _9: u128;<br align="left"/>let mut _10: u128;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: u128;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _17: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _18: u128;<br align="left"/>let mut _19: u128;<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: u128;<br align="left"/>let _25: ();<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let mut _28: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let _29: controller::amm::SwapDirection;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _32: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: isize;<br align="left"/>let _35: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _36: !;<br align="left"/>let mut _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _38: u128;<br align="left"/>let mut _39: u128;<br align="left"/>let mut _40: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _41: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: u128;<br align="left"/>let mut _44: isize;<br align="left"/>let _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _46: !;<br align="left"/>let mut _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _48: u128;<br align="left"/>let _49: ();<br align="left"/>let mut _50: bool;<br align="left"/>let mut _51: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let mut _52: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let _53: controller::amm::SwapDirection;<br align="left"/>let mut _54: u128;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _56: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _57: u128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: u128;<br align="left"/>let mut _63: u128;<br align="left"/>let mut _64: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let mut _65: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>debug quote_asset_reserve_before =&gt; _1;<br align="left"/>debug quote_asset_reserve_after =&gt; _2;<br align="left"/>debug swap_direction =&gt; _3;<br align="left"/>debug peg_multiplier =&gt; _4;<br align="left"/>debug quote_asset_reserve_change =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug residual =&gt; _35;<br align="left"/>debug val =&gt; _38;<br align="left"/>debug quote_asset_amount =&gt; _39;<br align="left"/>debug residual =&gt; _45;<br align="left"/>debug val =&gt; _48;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>>;
    bb0__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>_6 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _6)</td></tr></table>>];
    bb1__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _2<br/>StorageLive(_19)<br/>_19 = _1<br/></td></tr><tr><td align="left">_17 = &lt;u128 as SafeMath&gt;::safe_sub(move _18, move _19)</td></tr></table>>];
    bb2__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = _1<br/>StorageLive(_10)<br/>_10 = _2<br/></td></tr><tr><td align="left">_8 = &lt;u128 as SafeMath&gt;::safe_sub(move _9, move _10)</td></tr></table>>];
    bb4__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb5__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_11 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb6__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_7 as Continue).0: u128)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb8__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb9__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb10__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_20 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb11__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_16 as Continue).0: u128)<br/>_5 = _24<br/>StorageDead(_24)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb13__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = &amp;_3<br/>StorageLive(_28)<br/>_65 = const _<br/>_28 = &amp;(*_65)<br/></td></tr><tr><td align="left">_26 = &lt;SwapDirection as PartialEq&gt;::eq(move _27, move _28)</td></tr></table>>];
    bb15__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">switchInt(move _26)</td></tr></table>>];
    bb16__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = _5<br/></td></tr><tr><td align="left">_32 = &lt;u128 as SafeMath&gt;::safe_add(move _33, const 1_u128)</td></tr></table>>];
    bb17__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/></td></tr><tr><td align="left">_31 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _32)</td></tr></table>>];
    bb18__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_34 = discriminant(_31)<br/></td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb19__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_31 as Continue).0: u128)<br/>_30 = _38<br/>StorageDead(_38)<br/>_5 = move _30<br/>StorageDead(_30)<br/>StorageDead(_31)<br/>_25 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ((_31 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_37)<br/>_37 = _35<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _37)</td></tr></table>>];
    bb21__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_35)<br/>StorageDead(_30)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>_25 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _5<br/>StorageLive(_43)<br/>_43 = _4<br/></td></tr><tr><td align="left">_41 = quote_asset::reserve_to_asset_amount(move _42, move _43)</td></tr></table>>];
    bb24__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_40 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _41)</td></tr></table>>];
    bb25__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_44 = discriminant(_40)<br/></td></tr><tr><td align="left">switchInt(move _44)</td></tr></table>>];
    bb26__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_48)<br/>_48 = ((_40 as Continue).0: u128)<br/>_39 = _48<br/>StorageDead(_48)<br/>StorageDead(_40)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_3<br/>StorageLive(_52)<br/>_64 = const _<br/>_52 = &amp;(*_64)<br/></td></tr><tr><td align="left">_50 = &lt;SwapDirection as PartialEq&gt;::eq(move _51, move _52)</td></tr></table>>];
    bb27__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_40 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_47)<br/>_47 = _45<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _47)</td></tr></table>>];
    bb28__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_45)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left">switchInt(move _50)</td></tr></table>>];
    bb30__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = _39<br/></td></tr><tr><td align="left">_56 = &lt;u128 as SafeMath&gt;::safe_add(move _57, const 1_u128)</td></tr></table>>];
    bb31__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb32__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_58 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb33__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_55 as Continue).0: u128)<br/>_54 = _62<br/>StorageDead(_62)<br/>_39 = move _54<br/>StorageDead(_54)<br/>StorageDead(_55)<br/>_49 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb35__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>_49 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageLive(_63)<br/>_63 = _39<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(move _63)<br/>StorageDead(_63)<br/>StorageDead(_39)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_1806 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_1806 -> bb3__0_1806 [label="0"];
    bb0__0_1806 -> bb1__0_1806 [label="1"];
    bb0__0_1806 -> bb2__0_1806 [label="otherwise"];
    bb1__0_1806 -> bb9__0_1806 [label="return"];
    bb3__0_1806 -> bb4__0_1806 [label="return"];
    bb4__0_1806 -> bb5__0_1806 [label="return"];
    bb5__0_1806 -> bb6__0_1806 [label="0"];
    bb5__0_1806 -> bb7__0_1806 [label="1"];
    bb5__0_1806 -> bb2__0_1806 [label="otherwise"];
    bb6__0_1806 -> bb14__0_1806 [label=""];
    bb7__0_1806 -> bb8__0_1806 [label="return"];
    bb8__0_1806 -> bb39__0_1806 [label=""];
    bb9__0_1806 -> bb10__0_1806 [label="return"];
    bb10__0_1806 -> bb11__0_1806 [label="0"];
    bb10__0_1806 -> bb12__0_1806 [label="1"];
    bb10__0_1806 -> bb2__0_1806 [label="otherwise"];
    bb11__0_1806 -> bb14__0_1806 [label=""];
    bb12__0_1806 -> bb13__0_1806 [label="return"];
    bb13__0_1806 -> bb39__0_1806 [label=""];
    bb14__0_1806 -> bb15__0_1806 [label="return"];
    bb15__0_1806 -> bb22__0_1806 [label="0"];
    bb15__0_1806 -> bb16__0_1806 [label="otherwise"];
    bb16__0_1806 -> bb17__0_1806 [label="return"];
    bb17__0_1806 -> bb18__0_1806 [label="return"];
    bb18__0_1806 -> bb19__0_1806 [label="0"];
    bb18__0_1806 -> bb20__0_1806 [label="1"];
    bb18__0_1806 -> bb2__0_1806 [label="otherwise"];
    bb19__0_1806 -> bb23__0_1806 [label=""];
    bb20__0_1806 -> bb21__0_1806 [label="return"];
    bb21__0_1806 -> bb39__0_1806 [label=""];
    bb22__0_1806 -> bb23__0_1806 [label=""];
    bb23__0_1806 -> bb24__0_1806 [label="return"];
    bb24__0_1806 -> bb25__0_1806 [label="return"];
    bb25__0_1806 -> bb26__0_1806 [label="0"];
    bb25__0_1806 -> bb27__0_1806 [label="1"];
    bb25__0_1806 -> bb2__0_1806 [label="otherwise"];
    bb26__0_1806 -> bb29__0_1806 [label="return"];
    bb27__0_1806 -> bb28__0_1806 [label="return"];
    bb28__0_1806 -> bb38__0_1806 [label=""];
    bb29__0_1806 -> bb36__0_1806 [label="0"];
    bb29__0_1806 -> bb30__0_1806 [label="otherwise"];
    bb30__0_1806 -> bb31__0_1806 [label="return"];
    bb31__0_1806 -> bb32__0_1806 [label="return"];
    bb32__0_1806 -> bb33__0_1806 [label="0"];
    bb32__0_1806 -> bb34__0_1806 [label="1"];
    bb32__0_1806 -> bb2__0_1806 [label="otherwise"];
    bb33__0_1806 -> bb37__0_1806 [label=""];
    bb34__0_1806 -> bb35__0_1806 [label="return"];
    bb35__0_1806 -> bb38__0_1806 [label=""];
    bb36__0_1806 -> bb37__0_1806 [label=""];
    bb37__0_1806 -> bb40__0_1806 [label=""];
    bb38__0_1806 -> bb39__0_1806 [label=""];
    bb39__0_1806 -> bb40__0_1806 [label=""];
}
