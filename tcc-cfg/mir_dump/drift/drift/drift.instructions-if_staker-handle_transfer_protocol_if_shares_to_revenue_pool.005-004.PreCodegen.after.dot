digraph Mir_0_1217 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn if_staker::handle_transfer_protocol_if_shares_to_revenue_pool(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;&gt;, _2: u16, _3: u64) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _4: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _5: anchor_lang::prelude::Clock;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _7: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _12: anchor_lang::prelude::Clock;<br align="left"/>let _13: i64;<br align="left"/>let _14: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _15: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _16: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _17: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _18: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _19: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _20: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _21: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _22: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _23: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _24: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _25: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _26: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _27: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _28: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _29: std::vec::Vec&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _30: std::boxed::Box&lt;[u16], std::alloc::Global&gt;;<br align="left"/>let mut _31: std::boxed::Box&lt;[u16; 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _32: usize;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: *mut u8;<br align="left"/>let mut _35: std::boxed::Box&lt;[u16; 1_usize], std::alloc::Global&gt;;<br align="left"/>let mut _36: u16;<br align="left"/>let mut _37: u64;<br align="left"/>let mut _38: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _39: state::state::OracleGuardRails;<br align="left"/>let mut _40: &amp;ReErased state::state::State;<br align="left"/>let mut _41: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _47: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;&gt;;<br align="left"/>let mut _49: std::result::Result&lt;std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _50: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _51: isize;<br align="left"/>let _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _53: !;<br align="left"/>let mut _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _55: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _56: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _57: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _58: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _59: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _60: &amp;ReErased u16;<br align="left"/>let _61: &amp;ReErased u16;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _67: u64;<br align="left"/>let mut _68: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _69: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _70: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _71: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _72: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;&gt;;<br align="left"/>let mut _74: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _75: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _80: std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let _81: ();<br align="left"/>let mut _82: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _83: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _84: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _85: &amp;ReErased mut state::if_rebalance_config::IfRebalanceConfig;<br align="left"/>let mut _86: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _87: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::if_rebalance_config::IfRebalanceConfig&gt;;<br align="left"/>let mut _88: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _89: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _90: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _91: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _92: u64;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: i64;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: ();<br align="left"/>let _100: ();<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _102: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _103: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _104: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let _105: anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _106: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _107: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _108: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _109: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _110: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _111: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _112: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _113: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _114: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _115: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _116: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _117: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _118: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _119: u8;<br align="left"/>let mut _120: &amp;ReErased state::state::State;<br align="left"/>let mut _121: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _122: u64;<br align="left"/>let mut _123: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let _124: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;&gt;;<br align="left"/>let mut _125: std::option::Option&lt;&amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;&gt;;<br align="left"/>let mut _126: bool;<br align="left"/>let mut _127: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _128: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _129: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _130: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _131: isize;<br align="left"/>let _132: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _133: !;<br align="left"/>let mut _134: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _135: ();<br align="left"/>let _136: ();<br align="left"/>let mut _137: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _138: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _139: &amp;ReErased mut anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _140: isize;<br align="left"/>let _141: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _142: !;<br align="left"/>let mut _143: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _144: ();<br align="left"/>let _145: i64;<br align="left"/>let mut _146: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _147: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _148: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _149: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _150: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _151: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _152: u64;<br align="left"/>let mut _153: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _154: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _155: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _156: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _157: isize;<br align="left"/>let _158: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _159: !;<br align="left"/>let mut _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _161: i64;<br align="left"/>let mut _162: ();<br align="left"/>let mut _163: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _164: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _165: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _166: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _167: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _168: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _169: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _170: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _171: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _172: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _173: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _174: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _175: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _176: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _177: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _178: &amp;ReErased mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;ReErased&gt;;<br align="left"/>let mut _179: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _180: isize;<br align="left"/>let mut _181: isize;<br align="left"/>let mut _182: isize;<br align="left"/>let mut _183: isize;<br align="left"/>let mut _184: isize;<br align="left"/>let mut _185: isize;<br align="left"/>let mut _186: isize;<br align="left"/>let mut _187: isize;<br align="left"/>let mut _188: isize;<br align="left"/>let mut _189: isize;<br align="left"/>let mut _190: isize;<br align="left"/>let mut _191: isize;<br align="left"/>let mut _192: isize;<br align="left"/>let mut _193: isize;<br align="left"/>let mut _194: isize;<br align="left"/>let mut _195: isize;<br align="left"/>let mut _196: isize;<br align="left"/>let mut _197: isize;<br align="left"/>let mut _198: isize;<br align="left"/>let mut _199: isize;<br align="left"/>let mut _200: isize;<br align="left"/>let mut _201: isize;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>let mut _207: isize;<br align="left"/>let mut _208: isize;<br align="left"/>let mut _209: isize;<br align="left"/>let mut _210: isize;<br align="left"/>let mut _211: *const [u16; 1_usize];<br align="left"/>let mut _212: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _213: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _214: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _215: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _216: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _217: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _218: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _219: *const ();<br align="left"/>let mut _220: usize;<br align="left"/>let mut _221: usize;<br align="left"/>let mut _222: usize;<br align="left"/>let mut _223: usize;<br align="left"/>let mut _224: bool;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug amount =&gt; _3;<br align="left"/>debug state =&gt; _4;<br align="left"/>debug clock =&gt; _5;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug now =&gt; _13;<br align="left"/>debug remaining_accounts =&gt; _14;<br align="left"/>debug spot_market_map =&gt; _18;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug mint =&gt; _47;<br align="left"/>debug residual =&gt; _52;<br align="left"/>debug val =&gt; _55;<br align="left"/>debug spot_market =&gt; _56;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug insurance_fund_amount_before =&gt; _67;<br align="left"/>debug if_rebalance_config =&gt; _72;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug residual =&gt; _132;<br align="left"/>debug val =&gt; _135;<br align="left"/>debug residual =&gt; _141;<br align="left"/>debug val =&gt; _144;<br align="left"/>debug residual =&gt; _158;<br align="left"/>debug val =&gt; _161;<br align="left"/>>;
    bb0__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>_163 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_4 = &amp;((*_163).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb1__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_8 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_6 as Continue).0: anchor_lang::prelude::Clock)<br/>_5 = move _12<br/>StorageDead(_12)<br/>_180 = discriminant(_6)<br/>StorageDead(_6)<br/>StorageLive(_13)<br/>_13 = (_5.4: i64)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_164 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_17 = &amp;(*_164)<br/></td></tr><tr><td align="left">_16 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _17)</td></tr></table>>];
    bb4__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_202 = discriminant(_6)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _16)</td></tr></table>>];
    bb8__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_14 = &amp;mut _15<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = &amp;mut (*_14)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/></td></tr><tr><td align="left">_25 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb9__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_32 = SizeOf([u16; 1])<br/>_33 = AlignOf([u16; 1])<br/></td></tr><tr><td align="left">_34 = alloc::alloc::exchange_malloc(move _32, move _33)</td></tr></table>>];
    bb10__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = ShallowInitBox(move _34, [u16; 1])<br/>StorageLive(_36)<br/>_36 = _2<br/>_211 = (((_35.0: std::ptr::Unique&lt;[u16; 1]&gt;).0: std::ptr::NonNull&lt;[u16; 1]&gt;).0: *const [u16; 1])<br/>_219 = _211 as *const () (PtrToPtr)<br/>_220 = _219 as usize (Transmute)<br/>_221 = AlignOf([u16; 1])<br/>_222 = Sub(_221, const 1_usize)<br/>_223 = BitAnd(_220, _222)<br/>_224 = Eq(_223, const 0_usize)<br/></td></tr><tr><td align="left">assert(_224, &quot;misaligned pointer dereference: address must be a multiple of {} but is {}&quot;, _221, _220)</td></tr></table>>];
    bb11__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">_28 = get_writable_spot_market_set_from_many(move _29)</td></tr></table>>];
    bb12__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_27 = &amp;_28<br/>_26 = &amp;(*_27)<br/>StorageLive(_37)<br/>_37 = (_5.0: u64)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_165 = deref_copy (*_4)<br/>_212 = (((_165.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_41 = &amp;(*_212)<br/></td></tr><tr><td align="left">_40 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb13__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>_39 = ((*_40).7: state::state::OracleGuardRails)<br/>_38 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _39)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_21 = load_maps(move _22, move _23, move _26, move _37, move _38)</td></tr></table>>];
    bb14__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">_20 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _21)</td></tr></table>>];
    bb15__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>_42 = discriminant(_20)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb16__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_20 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_19 = move _46<br/>StorageDead(_46)<br/>StorageLive(_18)<br/>_18 = move (_19.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/></td></tr><tr><td align="left">drop((_19.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;))</td></tr></table>>];
    bb17__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_20 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb18__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/>_182 = discriminant(_20)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb19__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb20__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_49 = get_token_mint(move _50)</td></tr></table>>];
    bb21__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb22__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_51 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _51)</td></tr></table>>];
    bb23__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = move ((_48 as Continue).0: std::option::Option&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_47 = move _55<br/>StorageDead(_55)<br/>StorageDead(_48)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>_59 = &amp;_18<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;_2<br/>_60 = &amp;(*_61)<br/></td></tr><tr><td align="left">_58 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _59, move _60)</td></tr></table>>];
    bb24__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_54)<br/>_54 = _52<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _54)</td></tr></table>>];
    bb25__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_52)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">_57 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _58)</td></tr></table>>];
    bb27__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>_62 = discriminant(_57)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb28__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = move ((_57 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_56 = move _66<br/>StorageDead(_66)<br/>_188 = discriminant(_57)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_166 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_167 = deref_copy ((*_166).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_213 = (((_167.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_71 = &amp;(*_213)<br/></td></tr><tr><td align="left">_70 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _71)</td></tr></table>>];
    bb29__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_57 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb30__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>_186 = discriminant(_57)<br/>StorageDead(_61)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_69 = &amp;(*_70)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _69)</td></tr></table>>];
    bb32__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>_67 = ((*_68).2: u64)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_168 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_75 = &amp;((*_168).4: anchor_lang::prelude::AccountLoader&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/></td></tr><tr><td align="left">_74 = anchor_lang::prelude::AccountLoader::&lt;'_, IfRebalanceConfig&gt;::load_mut(move _75)</td></tr></table>>];
    bb33__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;RefMut&lt;'_, IfRebalanceConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb34__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_76 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb35__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_73 as Continue).0: std::cell::RefMut&lt;'_, state::if_rebalance_config::IfRebalanceConfig&gt;)<br/>_72 = move _80<br/>StorageDead(_80)<br/>_190 = discriminant(_73)<br/>StorageDead(_73)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = &amp;mut _72<br/>_86 = &amp;mut (*_87)<br/></td></tr><tr><td align="left">_85 = &lt;RefMut&lt;'_, IfRebalanceConfig&gt; as DerefMut&gt;::deref_mut(move _86)</td></tr></table>>];
    bb36__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_79)<br/>_79 = move _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb37__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>_200 = discriminant(_73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_84 = &amp;mut (*_85)<br/>StorageDead(_86)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;mut _56<br/>_90 = &amp;mut (*_91)<br/></td></tr><tr><td align="left">_89 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _90)</td></tr></table>>];
    bb39__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">_88 = &amp;mut (*_89)<br/>StorageDead(_90)<br/>StorageLive(_92)<br/>_92 = _67<br/>StorageLive(_93)<br/>_93 = _3<br/>StorageLive(_94)<br/>_94 = _13<br/></td></tr><tr><td align="left">_83 = controller::insurance::transfer_protocol_if_shares_to_revenue_pool(move _84, move _88, move _92, move _93, move _94)</td></tr></table>>];
    bb40__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_88)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _83)</td></tr></table>>];
    bb41__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_95 = discriminant(_82)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb42__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_82 as Continue).0: ())<br/>_81 = _99<br/>StorageDead(_99)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>_169 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_106 = &amp;((*_169).5: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/></td></tr><tr><td align="left">_105 = &lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt; as Clone&gt;::clone(move _106)</td></tr></table>>];
    bb43__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_82 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb44__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_91)<br/>StorageDead(_89)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_104 = &amp;_105<br/>_103 = &amp;(*_104)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_170 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_110 = &amp;((*_170).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/></td></tr><tr><td align="left">_109 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as Clone&gt;::clone(move _110)</td></tr></table>>];
    bb46__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>_108 = &amp;_109<br/>_171 = deref_copy (*_108)<br/>_214 = (((_171.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_107 = &amp;(*_214)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_172 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_114 = &amp;((*_172).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/></td></tr><tr><td align="left">_113 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as Clone&gt;::clone(move _114)</td></tr></table>>];
    bb47__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>_112 = &amp;_113<br/>_173 = deref_copy (*_112)<br/>_215 = (((_173.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_111 = &amp;(*_215)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_174 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_118 = &amp;((*_174).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_117 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as Clone&gt;::clone(move _118)</td></tr></table>>];
    bb48__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>_116 = &amp;_117<br/>_115 = &amp;(*_116)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>_175 = deref_copy (*_4)<br/>_216 = (((_175.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_121 = &amp;(*_216)<br/></td></tr><tr><td align="left">_120 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _121)</td></tr></table>>];
    bb49__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>_119 = ((*_120).15: u8)<br/>StorageLive(_122)<br/>_122 = _3<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;_47<br/>_123 = &amp;(*_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;_56<br/></td></tr><tr><td align="left">_128 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _129)</td></tr></table>>];
    bb50__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">_127 = &amp;(*_128)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">_126 = SpotMarket::has_transfer_hook(move _127)</td></tr></table>>];
    bb51__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left">switchInt(move _126)</td></tr></table>>];
    bb52__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>StorageLive(_130)<br/>_130 = &amp;mut (*_14)<br/>_125 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::Some(move _130)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_127)<br/>_125 = Option::&lt;&amp;mut Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/></td></tr><tr><td align="left">_102 = send_from_program_vault(move _103, move _107, move _111, move _115, move _119, move _122, move _123, move _125)</td></tr></table>>];
    bb55__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_122)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>StorageDead(_111)<br/>StorageDead(_107)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb56__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_131 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb57__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_135)<br/>_135 = ((_101 as Continue).0: ())<br/>_100 = _135<br/>StorageDead(_135)<br/>_192 = discriminant(_101)<br/>StorageDead(_124)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb58__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_132)<br/>_132 = move ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_134)<br/>_134 = move _132<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _134)</td></tr></table>>];
    bb59__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>_198 = discriminant(_101)<br/>StorageDead(_124)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb60__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb61__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_109)</td></tr></table>>];
    bb62__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_176 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_177 = deref_copy ((*_176).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_217 = (((_177.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_139 = &amp;mut (*_217)<br/></td></tr><tr><td align="left">_138 = anchor_lang::prelude::InterfaceAccount::&lt;'_, anchor_spl::token_interface::TokenAccount&gt;::reload(move _139)</td></tr></table>>];
    bb63__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _138)</td></tr></table>>];
    bb64__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_140 = discriminant(_137)<br/></td></tr><tr><td align="left">switchInt(move _140)</td></tr></table>>];
    bb65__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = ((_137 as Continue).0: ())<br/>_136 = _144<br/>StorageDead(_144)<br/>_194 = discriminant(_137)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>_151 = &amp;_56<br/>_150 = &amp;(*_151)<br/></td></tr><tr><td align="left">_149 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _150)</td></tr></table>>];
    bb66__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_141)<br/>_141 = move ((_137 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_143)<br/>_143 = move _141<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _143)</td></tr></table>>];
    bb67__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_141)<br/>_196 = discriminant(_137)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_148 = &amp;(*_149)<br/>StorageDead(_150)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>_178 = deref_copy (_1.1: &amp;mut instructions::if_staker::TransferProtocolIfSharesToRevenuePool&lt;'_&gt;)<br/>_179 = deref_copy ((*_178).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_218 = (((_179.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_156 = &amp;(*_218)<br/></td></tr><tr><td align="left">_155 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _156)</td></tr></table>>];
    bb69__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_154 = &amp;(*_155)<br/></td></tr><tr><td align="left">_153 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _154)</td></tr></table>>];
    bb70__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>StorageDead(_154)<br/>_152 = ((*_153).2: u64)<br/></td></tr><tr><td align="left">_147 = validate_spot_market_vault_amount(move _148, move _152)</td></tr></table>>];
    bb71__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_146 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _147)</td></tr></table>>];
    bb72__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>_157 = discriminant(_146)<br/></td></tr><tr><td align="left">switchInt(move _157)</td></tr></table>>];
    bb73__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_161)<br/>_161 = ((_146 as Continue).0: i64)<br/>_145 = _161<br/>StorageDead(_161)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageLive(_162)<br/>_162 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _162)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb74__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_158)<br/>_158 = ((_146 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_160)<br/>_160 = _158<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _160)</td></tr></table>>];
    bb75__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb77__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb78__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb80__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">drop(_109)</td></tr></table>>];
    bb81__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb83__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb84__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb86__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb88__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_20)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left">return</td></tr></table>>];
    bb92__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">drop(_117)</td></tr></table>>];
    bb93__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left">drop(_113)</td></tr></table>>];
    bb94__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left">drop(_109)</td></tr></table>>];
    bb95__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left">drop(_72)</td></tr></table>>];
    bb96__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left">drop(_56)</td></tr></table>>];
    bb97__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left" balign="left">_208 = discriminant(_20)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb98__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb99__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">99 (cleanup)</td></tr><tr><td align="left">drop(_18)</td></tr></table>>];
    bb100__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">100 (cleanup)</td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb101__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb102__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb103__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">_184 = discriminant(_20)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_28)</td></tr></table>>];
    bb104__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">104 (cleanup)</td></tr><tr><td align="left">drop((_19.2: state::oracle_map::OracleMap&lt;'_&gt;))</td></tr></table>>];
    bb105__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left">drop((_19.2: state::oracle_map::OracleMap&lt;'_&gt;))</td></tr></table>>];
    bb106__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">106 (cleanup)</td></tr><tr><td align="left" balign="left">_204 = discriminant(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">107 (cleanup)</td></tr><tr><td align="left" balign="left">_205 = discriminant(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb108__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">108 (cleanup)</td></tr><tr><td align="left" balign="left">_206 = discriminant(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">109 (cleanup)</td></tr><tr><td align="left" balign="left">_207 = discriminant(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">110 (cleanup)</td></tr><tr><td align="left" balign="left">_209 = discriminant(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb111__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">111 (cleanup)</td></tr><tr><td align="left" balign="left">_210 = discriminant(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_1217 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">(*_211) = [move _36]<br/>StorageDead(_36)<br/>_31 = move _35<br/>_30 = move _31 as std::boxed::Box&lt;[u16]&gt; (PointerCoercion(Unsize))<br/>StorageDead(_35)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = std::slice::&lt;impl [u16]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _30)</td></tr></table>>];
    bb0__0_1217 -> bb1__0_1217 [label="return"];
    bb1__0_1217 -> bb2__0_1217 [label="return"];
    bb1__0_1217 -> bb102__0_1217 [label="unwind"];
    bb2__0_1217 -> bb3__0_1217 [label="0"];
    bb2__0_1217 -> bb5__0_1217 [label="1"];
    bb2__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb3__0_1217 -> bb7__0_1217 [label="return"];
    bb5__0_1217 -> bb6__0_1217 [label="return"];
    bb5__0_1217 -> bb111__0_1217 [label="unwind"];
    bb6__0_1217 -> bb90__0_1217 [label=""];
    bb7__0_1217 -> bb8__0_1217 [label="return"];
    bb8__0_1217 -> bb9__0_1217 [label="return"];
    bb9__0_1217 -> bb10__0_1217 [label="return"];
    bb9__0_1217 -> bb101__0_1217 [label="unwind"];
    bb10__0_1217 -> bb112__0_1217 [label="success"];
    bb11__0_1217 -> bb12__0_1217 [label="return"];
    bb11__0_1217 -> bb101__0_1217 [label="unwind"];
    bb12__0_1217 -> bb13__0_1217 [label="return"];
    bb12__0_1217 -> bb100__0_1217 [label="unwind"];
    bb13__0_1217 -> bb14__0_1217 [label="return"];
    bb13__0_1217 -> bb100__0_1217 [label="unwind"];
    bb14__0_1217 -> bb15__0_1217 [label="return"];
    bb14__0_1217 -> bb100__0_1217 [label="unwind"];
    bb15__0_1217 -> bb16__0_1217 [label="0"];
    bb15__0_1217 -> bb17__0_1217 [label="1"];
    bb15__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb16__0_1217 -> bb105__0_1217 [label="return"];
    bb16__0_1217 -> bb104__0_1217 [label="unwind"];
    bb17__0_1217 -> bb18__0_1217 [label="return"];
    bb17__0_1217 -> bb110__0_1217 [label="unwind"];
    bb18__0_1217 -> bb87__0_1217 [label="return"];
    bb18__0_1217 -> bb101__0_1217 [label="unwind"];
    bb19__0_1217 -> bb20__0_1217 [label="return"];
    bb19__0_1217 -> bb99__0_1217 [label="unwind"];
    bb20__0_1217 -> bb21__0_1217 [label="return"];
    bb20__0_1217 -> bb99__0_1217 [label="unwind"];
    bb21__0_1217 -> bb22__0_1217 [label="return"];
    bb21__0_1217 -> bb99__0_1217 [label="unwind"];
    bb22__0_1217 -> bb23__0_1217 [label="0"];
    bb22__0_1217 -> bb24__0_1217 [label="1"];
    bb22__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb23__0_1217 -> bb26__0_1217 [label="return"];
    bb23__0_1217 -> bb99__0_1217 [label="unwind"];
    bb24__0_1217 -> bb25__0_1217 [label="return"];
    bb24__0_1217 -> bb99__0_1217 [label="unwind"];
    bb25__0_1217 -> bb85__0_1217 [label=""];
    bb26__0_1217 -> bb27__0_1217 [label="return"];
    bb26__0_1217 -> bb99__0_1217 [label="unwind"];
    bb27__0_1217 -> bb28__0_1217 [label="0"];
    bb27__0_1217 -> bb29__0_1217 [label="1"];
    bb27__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb28__0_1217 -> bb31__0_1217 [label="return"];
    bb28__0_1217 -> bb96__0_1217 [label="unwind"];
    bb29__0_1217 -> bb30__0_1217 [label="return"];
    bb29__0_1217 -> bb109__0_1217 [label="unwind"];
    bb30__0_1217 -> bb84__0_1217 [label=""];
    bb31__0_1217 -> bb32__0_1217 [label="return"];
    bb31__0_1217 -> bb96__0_1217 [label="unwind"];
    bb32__0_1217 -> bb33__0_1217 [label="return"];
    bb32__0_1217 -> bb96__0_1217 [label="unwind"];
    bb33__0_1217 -> bb34__0_1217 [label="return"];
    bb33__0_1217 -> bb96__0_1217 [label="unwind"];
    bb34__0_1217 -> bb35__0_1217 [label="0"];
    bb34__0_1217 -> bb36__0_1217 [label="1"];
    bb34__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb35__0_1217 -> bb38__0_1217 [label="return"];
    bb35__0_1217 -> bb95__0_1217 [label="unwind"];
    bb36__0_1217 -> bb37__0_1217 [label="return"];
    bb36__0_1217 -> bb108__0_1217 [label="unwind"];
    bb37__0_1217 -> bb83__0_1217 [label=""];
    bb38__0_1217 -> bb39__0_1217 [label="return"];
    bb38__0_1217 -> bb95__0_1217 [label="unwind"];
    bb39__0_1217 -> bb40__0_1217 [label="return"];
    bb39__0_1217 -> bb95__0_1217 [label="unwind"];
    bb40__0_1217 -> bb41__0_1217 [label="return"];
    bb40__0_1217 -> bb95__0_1217 [label="unwind"];
    bb41__0_1217 -> bb42__0_1217 [label="0"];
    bb41__0_1217 -> bb43__0_1217 [label="1"];
    bb41__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb42__0_1217 -> bb45__0_1217 [label="return"];
    bb42__0_1217 -> bb95__0_1217 [label="unwind"];
    bb43__0_1217 -> bb44__0_1217 [label="return"];
    bb43__0_1217 -> bb95__0_1217 [label="unwind"];
    bb44__0_1217 -> bb82__0_1217 [label=""];
    bb45__0_1217 -> bb46__0_1217 [label="return"];
    bb45__0_1217 -> bb95__0_1217 [label="unwind"];
    bb46__0_1217 -> bb47__0_1217 [label="return"];
    bb46__0_1217 -> bb94__0_1217 [label="unwind"];
    bb47__0_1217 -> bb48__0_1217 [label="return"];
    bb47__0_1217 -> bb93__0_1217 [label="unwind"];
    bb48__0_1217 -> bb49__0_1217 [label="return"];
    bb48__0_1217 -> bb92__0_1217 [label="unwind"];
    bb49__0_1217 -> bb50__0_1217 [label="return"];
    bb49__0_1217 -> bb92__0_1217 [label="unwind"];
    bb50__0_1217 -> bb51__0_1217 [label="return"];
    bb50__0_1217 -> bb92__0_1217 [label="unwind"];
    bb51__0_1217 -> bb53__0_1217 [label="0"];
    bb51__0_1217 -> bb52__0_1217 [label="otherwise"];
    bb52__0_1217 -> bb54__0_1217 [label=""];
    bb53__0_1217 -> bb54__0_1217 [label=""];
    bb54__0_1217 -> bb55__0_1217 [label="return"];
    bb54__0_1217 -> bb92__0_1217 [label="unwind"];
    bb55__0_1217 -> bb56__0_1217 [label="return"];
    bb55__0_1217 -> bb92__0_1217 [label="unwind"];
    bb56__0_1217 -> bb57__0_1217 [label="0"];
    bb56__0_1217 -> bb58__0_1217 [label="1"];
    bb56__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb57__0_1217 -> bb60__0_1217 [label="return"];
    bb57__0_1217 -> bb93__0_1217 [label="unwind"];
    bb58__0_1217 -> bb59__0_1217 [label="return"];
    bb58__0_1217 -> bb107__0_1217 [label="unwind"];
    bb59__0_1217 -> bb79__0_1217 [label="return"];
    bb59__0_1217 -> bb93__0_1217 [label="unwind"];
    bb60__0_1217 -> bb61__0_1217 [label="return"];
    bb60__0_1217 -> bb94__0_1217 [label="unwind"];
    bb61__0_1217 -> bb62__0_1217 [label="return"];
    bb61__0_1217 -> bb95__0_1217 [label="unwind"];
    bb62__0_1217 -> bb63__0_1217 [label="return"];
    bb62__0_1217 -> bb95__0_1217 [label="unwind"];
    bb63__0_1217 -> bb64__0_1217 [label="return"];
    bb63__0_1217 -> bb95__0_1217 [label="unwind"];
    bb64__0_1217 -> bb65__0_1217 [label="0"];
    bb64__0_1217 -> bb66__0_1217 [label="1"];
    bb64__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb65__0_1217 -> bb68__0_1217 [label="return"];
    bb65__0_1217 -> bb95__0_1217 [label="unwind"];
    bb66__0_1217 -> bb67__0_1217 [label="return"];
    bb66__0_1217 -> bb106__0_1217 [label="unwind"];
    bb67__0_1217 -> bb82__0_1217 [label=""];
    bb68__0_1217 -> bb69__0_1217 [label="return"];
    bb68__0_1217 -> bb95__0_1217 [label="unwind"];
    bb69__0_1217 -> bb70__0_1217 [label="return"];
    bb69__0_1217 -> bb95__0_1217 [label="unwind"];
    bb70__0_1217 -> bb71__0_1217 [label="return"];
    bb70__0_1217 -> bb95__0_1217 [label="unwind"];
    bb71__0_1217 -> bb72__0_1217 [label="return"];
    bb71__0_1217 -> bb95__0_1217 [label="unwind"];
    bb72__0_1217 -> bb73__0_1217 [label="0"];
    bb72__0_1217 -> bb74__0_1217 [label="1"];
    bb72__0_1217 -> bb4__0_1217 [label="otherwise"];
    bb73__0_1217 -> bb76__0_1217 [label="return"];
    bb73__0_1217 -> bb96__0_1217 [label="unwind"];
    bb74__0_1217 -> bb75__0_1217 [label="return"];
    bb74__0_1217 -> bb95__0_1217 [label="unwind"];
    bb75__0_1217 -> bb82__0_1217 [label=""];
    bb76__0_1217 -> bb77__0_1217 [label="return"];
    bb76__0_1217 -> bb99__0_1217 [label="unwind"];
    bb77__0_1217 -> bb78__0_1217 [label="return"];
    bb77__0_1217 -> bb102__0_1217 [label="unwind"];
    bb78__0_1217 -> bb91__0_1217 [label=""];
    bb79__0_1217 -> bb80__0_1217 [label="return"];
    bb79__0_1217 -> bb94__0_1217 [label="unwind"];
    bb80__0_1217 -> bb81__0_1217 [label="return"];
    bb80__0_1217 -> bb95__0_1217 [label="unwind"];
    bb81__0_1217 -> bb82__0_1217 [label=""];
    bb82__0_1217 -> bb83__0_1217 [label="return"];
    bb82__0_1217 -> bb96__0_1217 [label="unwind"];
    bb83__0_1217 -> bb84__0_1217 [label="return"];
    bb83__0_1217 -> bb99__0_1217 [label="unwind"];
    bb84__0_1217 -> bb85__0_1217 [label=""];
    bb85__0_1217 -> bb86__0_1217 [label="return"];
    bb85__0_1217 -> bb102__0_1217 [label="unwind"];
    bb86__0_1217 -> bb89__0_1217 [label=""];
    bb87__0_1217 -> bb88__0_1217 [label="return"];
    bb87__0_1217 -> bb102__0_1217 [label="unwind"];
    bb88__0_1217 -> bb89__0_1217 [label=""];
    bb89__0_1217 -> bb90__0_1217 [label=""];
    bb90__0_1217 -> bb91__0_1217 [label=""];
    bb92__0_1217 -> bb93__0_1217 [label="return"];
    bb93__0_1217 -> bb94__0_1217 [label="return"];
    bb94__0_1217 -> bb95__0_1217 [label="return"];
    bb95__0_1217 -> bb96__0_1217 [label="return"];
    bb96__0_1217 -> bb99__0_1217 [label="return"];
    bb97__0_1217 -> bb98__0_1217 [label="return"];
    bb98__0_1217 -> bb99__0_1217 [label="return"];
    bb99__0_1217 -> bb102__0_1217 [label="return"];
    bb100__0_1217 -> bb101__0_1217 [label="return"];
    bb101__0_1217 -> bb102__0_1217 [label="return"];
    bb103__0_1217 -> bb19__0_1217 [label="return"];
    bb103__0_1217 -> bb98__0_1217 [label="unwind"];
    bb104__0_1217 -> bb97__0_1217 [label="return"];
    bb105__0_1217 -> bb103__0_1217 [label="return"];
    bb105__0_1217 -> bb97__0_1217 [label="unwind"];
    bb106__0_1217 -> bb95__0_1217 [label=""];
    bb107__0_1217 -> bb92__0_1217 [label=""];
    bb108__0_1217 -> bb96__0_1217 [label=""];
    bb109__0_1217 -> bb99__0_1217 [label=""];
    bb110__0_1217 -> bb100__0_1217 [label=""];
    bb111__0_1217 -> bb102__0_1217 [label=""];
    bb112__0_1217 -> bb11__0_1217 [label="return"];
    bb112__0_1217 -> bb101__0_1217 [label="unwind"];
}
