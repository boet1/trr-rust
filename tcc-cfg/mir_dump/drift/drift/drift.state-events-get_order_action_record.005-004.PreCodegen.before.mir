// MIR for `get_order_action_record` before PreCodegen

fn get_order_action_record(_1: i64, _2: OrderAction, _3: OrderActionExplanation, _4: u16, _5: Option<anchor_lang::prelude::Pubkey>, _6: Option<u64>, _7: Option<u64>, _8: Option<u64>, _9: Option<u64>, _10: Option<u64>, _11: Option<u64>, _12: Option<u64>, _13: Option<i64>, _14: Option<u64>, _15: Option<anchor_lang::prelude::Pubkey>, _16: Option<Order>, _17: Option<anchor_lang::prelude::Pubkey>, _18: Option<Order>, _19: i64, _20: u8, _21: Option<u64>, _22: Option<u64>, _23: Option<u64>, _24: Option<u64>, _25: Option<u64>) -> std::result::Result<OrderActionRecord, error::ErrorCode> {
    debug ts => _1;
    debug action => _2;
    debug action_explanation => _3;
    debug market_index => _4;
    debug filler => _5;
    debug fill_record_id => _6;
    debug filler_reward => _7;
    debug base_asset_amount_filled => _8;
    debug quote_asset_amount_filled => _9;
    debug taker_fee => _10;
    debug maker_rebate => _11;
    debug referrer_reward => _12;
    debug quote_asset_amount_surplus => _13;
    debug spot_fulfillment_method_fee => _14;
    debug taker => _15;
    debug taker_order => _16;
    debug maker => _17;
    debug maker_order => _18;
    debug oracle_price => _19;
    debug bit_flags => _20;
    debug taker_existing_quote_entry_amount => _21;
    debug taker_existing_base_asset_amount => _22;
    debug maker_existing_quote_entry_amount => _23;
    debug maker_existing_base_asset_amount => _24;
    debug trigger_price => _25;
    let mut _0: std::result::Result<state::events::OrderActionRecord, error::ErrorCode>;
    let mut _26: state::events::OrderActionRecord;
    let mut _27: i64;
    let mut _28: state::events::OrderAction;
    let mut _29: state::events::OrderActionExplanation;
    let mut _30: u16;
    let mut _31: state::user::MarketType;
    let mut _32: isize;
    let mut _34: isize;
    let mut _36: !;
    let mut _37: error::ErrorCode;
    let mut _38: std::option::Option<anchor_lang::prelude::Pubkey>;
    let mut _39: std::option::Option<u64>;
    let mut _40: std::option::Option<u64>;
    let mut _41: std::option::Option<u64>;
    let mut _42: std::option::Option<u64>;
    let mut _43: std::option::Option<u64>;
    let mut _44: std::option::Option<i64>;
    let mut _45: isize;
    let _46: u64;
    let mut _47: i64;
    let mut _48: i64;
    let mut _49: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>, i64>;
    let mut _50: std::result::Result<i64, error::ErrorCode>;
    let mut _51: u64;
    let mut _52: isize;
    let mut _54: !;
    let mut _55: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _57: bool;
    let mut _58: std::option::Option<u32>;
    let mut _59: isize;
    let mut _60: &std::option::Option<u64>;
    let _61: u64;
    let _62: &u64;
    let mut _63: bool;
    let mut _64: u64;
    let mut _65: u32;
    let mut _66: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>, u32>;
    let mut _67: std::result::Result<u32, error::ErrorCode>;
    let mut _68: u64;
    let mut _69: isize;
    let mut _71: !;
    let mut _72: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _74: std::option::Option<i64>;
    let mut _75: std::option::Option<u64>;
    let mut _76: std::option::Option<anchor_lang::prelude::Pubkey>;
    let mut _77: std::option::Option<u32>;
    let mut _78: std::option::Option<state::user::Order>;
    let mut _79: {closure@programs/drift/src/state/events.rs:321:41: 321:48};
    let mut _80: std::option::Option<controller::position::PositionDirection>;
    let mut _81: std::option::Option<state::user::Order>;
    let mut _82: {closure@programs/drift/src/state/events.rs:322:48: 322:55};
    let mut _83: std::option::Option<u64>;
    let mut _84: std::option::Option<state::user::Order>;
    let mut _85: {closure@programs/drift/src/state/events.rs:323:56: 323:63};
    let mut _86: std::option::Option<u64>;
    let mut _87: std::option::Option<state::user::Order>;
    let mut _88: {closure@programs/drift/src/state/events.rs:325:18: 325:25};
    let mut _89: std::option::Option<u64>;
    let mut _90: std::option::Option<&state::user::Order>;
    let mut _91: &std::option::Option<state::user::Order>;
    let mut _92: {closure@programs/drift/src/state/events.rs:328:18: 328:25};
    let mut _93: std::option::Option<anchor_lang::prelude::Pubkey>;
    let mut _94: std::option::Option<u32>;
    let mut _95: std::option::Option<state::user::Order>;
    let mut _96: {closure@programs/drift/src/state/events.rs:330:41: 330:48};
    let mut _97: std::option::Option<controller::position::PositionDirection>;
    let mut _98: std::option::Option<state::user::Order>;
    let mut _99: {closure@programs/drift/src/state/events.rs:331:48: 331:55};
    let mut _100: std::option::Option<u64>;
    let mut _101: std::option::Option<state::user::Order>;
    let mut _102: {closure@programs/drift/src/state/events.rs:332:56: 332:63};
    let mut _103: std::option::Option<u64>;
    let mut _104: std::option::Option<state::user::Order>;
    let mut _105: {closure@programs/drift/src/state/events.rs:334:18: 334:25};
    let mut _106: std::option::Option<u64>;
    let mut _107: std::option::Option<state::user::Order>;
    let mut _108: {closure@programs/drift/src/state/events.rs:336:18: 336:25};
    let mut _109: i64;
    let mut _110: u8;
    let mut _111: std::option::Option<u64>;
    let mut _112: std::option::Option<u64>;
    let mut _113: std::option::Option<u64>;
    let mut _114: std::option::Option<u64>;
    let mut _115: std::option::Option<u64>;
    scope 1 {
        debug taker_order => _33;
        let _33: state::user::Order;
    }
    scope 2 {
        debug maker_order => _35;
        let _35: state::user::Order;
    }
    scope 3 {
        debug maker_rebate => _46;
        let _53: std::result::Result<std::convert::Infallible, error::ErrorCode>;
        let _56: i64;
        scope 4 {
            debug residual => _53;
            scope 5 {
            }
        }
        scope 6 {
            debug val => _56;
            scope 7 {
            }
        }
    }
    scope 8 {
        debug referrer_reward => _61;
        debug referrer_reward => _62;
        let _70: std::result::Result<std::convert::Infallible, error::ErrorCode>;
        let _73: u32;
        scope 9 {
            debug residual => _70;
            scope 10 {
            }
        }
        scope 11 {
            debug val => _73;
            scope 12 {
            }
        }
    }

    bb0: {
        StorageLive(_26);
        StorageLive(_27);
        _27 = _1;
        StorageLive(_28);
        _28 = _2;
        StorageLive(_29);
        _29 = _3;
        StorageLive(_30);
        _30 = _4;
        StorageLive(_31);
        _32 = discriminant(_16);
        switchInt(move _32) -> [1: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_33);
        _33 = ((_16 as Some).0: state::user::Order);
        _31 = (_33.14: state::user::MarketType);
        StorageDead(_33);
        goto -> bb5;
    }

    bb2: {
        _34 = discriminant(_18);
        switchInt(move _34) -> [1: bb3, otherwise: bb4];
    }

    bb3: {
        StorageLive(_35);
        _35 = ((_18 as Some).0: state::user::Order);
        _31 = (_35.14: state::user::MarketType);
        StorageDead(_35);
        goto -> bb5;
    }

    bb4: {
        StorageLive(_37);
        _37 = error::ErrorCode::InvalidOrder;
        _0 = std::result::Result::<OrderActionRecord, error::ErrorCode>::Err(move _37);
        StorageDead(_37);
        goto -> bb38;
    }

    bb5: {
        StorageLive(_38);
        _38 = _5;
        StorageLive(_39);
        _39 = _7;
        StorageLive(_40);
        _40 = _6;
        StorageLive(_41);
        _41 = _8;
        StorageLive(_42);
        _42 = _9;
        StorageLive(_43);
        _43 = _10;
        StorageLive(_44);
        _45 = discriminant(_11);
        switchInt(move _45) -> [0: bb6, 1: bb8, otherwise: bb7];
    }

    bb6: {
        _44 = Option::<i64>::None;
        goto -> bb15;
    }

    bb7: {
        unreachable;
    }

    bb8: {
        StorageLive(_46);
        _46 = ((_11 as Some).0: u64);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        StorageLive(_50);
        StorageLive(_51);
        _51 = _46;
        _50 = <u64 as Cast>::cast::<i64>(move _51) -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageDead(_51);
        _49 = <std::result::Result<i64, error::ErrorCode> as Try>::branch(move _50) -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageDead(_50);
        _52 = discriminant(_49);
        switchInt(move _52) -> [0: bb11, 1: bb12, otherwise: bb7];
    }

    bb11: {
        StorageLive(_56);
        _56 = ((_49 as Continue).0: i64);
        _48 = _56;
        StorageDead(_56);
        _57 = Eq(_48, const i64::MIN);
        assert(!move _57, "attempt to negate `{}`, which would overflow", _48) -> [success: bb14, unwind continue];
    }

    bb12: {
        StorageLive(_53);
        _53 = ((_49 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_55);
        _55 = _53;
        _0 = <std::result::Result<OrderActionRecord, error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _55) -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageDead(_55);
        StorageDead(_53);
        StorageDead(_48);
        StorageDead(_49);
        StorageDead(_47);
        StorageDead(_46);
        goto -> bb37;
    }

    bb14: {
        _47 = Neg(move _48);
        StorageDead(_48);
        _44 = Option::<i64>::Some(move _47);
        StorageDead(_49);
        StorageDead(_47);
        StorageDead(_46);
        goto -> bb15;
    }

    bb15: {
        StorageLive(_58);
        _59 = discriminant(_12);
        switchInt(move _59) -> [1: bb17, otherwise: bb16];
    }

    bb16: {
        _58 = Option::<u32>::None;
        goto -> bb25;
    }

    bb17: {
        StorageLive(_62);
        _62 = &((_12 as Some).0: u64);
        StorageLive(_63);
        StorageLive(_64);
        _64 = (*_62);
        _63 = Gt(move _64, const 0_u64);
        switchInt(move _63) -> [0: bb19, otherwise: bb18];
    }

    bb18: {
        StorageDead(_64);
        StorageDead(_63);
        StorageLive(_61);
        _61 = ((_12 as Some).0: u64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        _68 = _61;
        _67 = <u64 as Cast>::cast::<u32>(move _68) -> [return: bb20, unwind continue];
    }

    bb19: {
        StorageDead(_64);
        StorageDead(_63);
        StorageDead(_62);
        goto -> bb16;
    }

    bb20: {
        StorageDead(_68);
        _66 = <std::result::Result<u32, error::ErrorCode> as Try>::branch(move _67) -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageDead(_67);
        _69 = discriminant(_66);
        switchInt(move _69) -> [0: bb22, 1: bb23, otherwise: bb7];
    }

    bb22: {
        StorageLive(_73);
        _73 = ((_66 as Continue).0: u32);
        _65 = _73;
        StorageDead(_73);
        _58 = Option::<u32>::Some(move _65);
        StorageDead(_66);
        StorageDead(_65);
        StorageDead(_61);
        StorageDead(_62);
        goto -> bb25;
    }

    bb23: {
        StorageLive(_70);
        _70 = ((_66 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_72);
        _72 = _70;
        _0 = <std::result::Result<OrderActionRecord, error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _72) -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageDead(_72);
        StorageDead(_70);
        StorageDead(_66);
        StorageDead(_65);
        StorageDead(_61);
        StorageDead(_62);
        StorageDead(_58);
        goto -> bb37;
    }

    bb25: {
        StorageLive(_74);
        _74 = _13;
        StorageLive(_75);
        _75 = _14;
        StorageLive(_76);
        _76 = _15;
        StorageLive(_77);
        StorageLive(_78);
        _78 = _16;
        StorageLive(_79);
        _79 = {closure@programs/drift/src/state/events.rs:321:41: 321:48};
        _77 = Option::<Order>::map::<u32, {closure@programs/drift/src/state/events.rs:321:41: 321:48}>(move _78, move _79) -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageDead(_79);
        StorageDead(_78);
        StorageLive(_80);
        StorageLive(_81);
        _81 = _16;
        StorageLive(_82);
        _82 = {closure@programs/drift/src/state/events.rs:322:48: 322:55};
        _80 = Option::<Order>::map::<controller::position::PositionDirection, {closure@programs/drift/src/state/events.rs:322:48: 322:55}>(move _81, move _82) -> [return: bb27, unwind continue];
    }

    bb27: {
        StorageDead(_82);
        StorageDead(_81);
        StorageLive(_83);
        StorageLive(_84);
        _84 = _16;
        StorageLive(_85);
        _85 = {closure@programs/drift/src/state/events.rs:323:56: 323:63};
        _83 = Option::<Order>::map::<u64, {closure@programs/drift/src/state/events.rs:323:56: 323:63}>(move _84, move _85) -> [return: bb28, unwind continue];
    }

    bb28: {
        StorageDead(_85);
        StorageDead(_84);
        StorageLive(_86);
        StorageLive(_87);
        _87 = _16;
        StorageLive(_88);
        _88 = {closure@programs/drift/src/state/events.rs:325:18: 325:25};
        _86 = Option::<Order>::map::<u64, {closure@programs/drift/src/state/events.rs:325:18: 325:25}>(move _87, move _88) -> [return: bb29, unwind continue];
    }

    bb29: {
        StorageDead(_88);
        StorageDead(_87);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        _91 = &_16;
        _90 = Option::<Order>::as_ref(move _91) -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageDead(_91);
        StorageLive(_92);
        _92 = {closure@programs/drift/src/state/events.rs:328:18: 328:25};
        _89 = Option::<&Order>::map::<u64, {closure@programs/drift/src/state/events.rs:328:18: 328:25}>(move _90, move _92) -> [return: bb31, unwind continue];
    }

    bb31: {
        StorageDead(_92);
        StorageDead(_90);
        StorageLive(_93);
        _93 = _17;
        StorageLive(_94);
        StorageLive(_95);
        _95 = _18;
        StorageLive(_96);
        _96 = {closure@programs/drift/src/state/events.rs:330:41: 330:48};
        _94 = Option::<Order>::map::<u32, {closure@programs/drift/src/state/events.rs:330:41: 330:48}>(move _95, move _96) -> [return: bb32, unwind continue];
    }

    bb32: {
        StorageDead(_96);
        StorageDead(_95);
        StorageLive(_97);
        StorageLive(_98);
        _98 = _18;
        StorageLive(_99);
        _99 = {closure@programs/drift/src/state/events.rs:331:48: 331:55};
        _97 = Option::<Order>::map::<controller::position::PositionDirection, {closure@programs/drift/src/state/events.rs:331:48: 331:55}>(move _98, move _99) -> [return: bb33, unwind continue];
    }

    bb33: {
        StorageDead(_99);
        StorageDead(_98);
        StorageLive(_100);
        StorageLive(_101);
        _101 = _18;
        StorageLive(_102);
        _102 = {closure@programs/drift/src/state/events.rs:332:56: 332:63};
        _100 = Option::<Order>::map::<u64, {closure@programs/drift/src/state/events.rs:332:56: 332:63}>(move _101, move _102) -> [return: bb34, unwind continue];
    }

    bb34: {
        StorageDead(_102);
        StorageDead(_101);
        StorageLive(_103);
        StorageLive(_104);
        _104 = _18;
        StorageLive(_105);
        _105 = {closure@programs/drift/src/state/events.rs:334:18: 334:25};
        _103 = Option::<Order>::map::<u64, {closure@programs/drift/src/state/events.rs:334:18: 334:25}>(move _104, move _105) -> [return: bb35, unwind continue];
    }

    bb35: {
        StorageDead(_105);
        StorageDead(_104);
        StorageLive(_106);
        StorageLive(_107);
        _107 = _18;
        StorageLive(_108);
        _108 = {closure@programs/drift/src/state/events.rs:336:18: 336:25};
        _106 = Option::<Order>::map::<u64, {closure@programs/drift/src/state/events.rs:336:18: 336:25}>(move _107, move _108) -> [return: bb36, unwind continue];
    }

    bb36: {
        StorageDead(_108);
        StorageDead(_107);
        StorageLive(_109);
        _109 = _19;
        StorageLive(_110);
        _110 = _20;
        StorageLive(_111);
        _111 = _21;
        StorageLive(_112);
        _112 = _22;
        StorageLive(_113);
        _113 = _23;
        StorageLive(_114);
        _114 = _24;
        StorageLive(_115);
        _115 = _25;
        _26 = OrderActionRecord { ts: move _27, action: move _28, action_explanation: move _29, market_index: move _30, market_type: move _31, filler: move _38, filler_reward: move _39, fill_record_id: move _40, base_asset_amount_filled: move _41, quote_asset_amount_filled: move _42, taker_fee: move _43, maker_fee: move _44, referrer_reward: move _58, quote_asset_amount_surplus: move _74, spot_fulfillment_method_fee: move _75, taker: move _76, taker_order_id: move _77, taker_order_direction: move _80, taker_order_base_asset_amount: move _83, taker_order_cumulative_base_asset_amount_filled: move _86, taker_order_cumulative_quote_asset_amount_filled: move _89, maker: move _93, maker_order_id: move _94, maker_order_direction: move _97, maker_order_base_asset_amount: move _100, maker_order_cumulative_base_asset_amount_filled: move _103, maker_order_cumulative_quote_asset_amount_filled: move _106, oracle_price: move _109, bit_flags: move _110, taker_existing_quote_entry_amount: move _111, taker_existing_base_asset_amount: move _112, maker_existing_quote_entry_amount: move _113, maker_existing_base_asset_amount: move _114, trigger_price: move _115 };
        StorageDead(_115);
        StorageDead(_114);
        StorageDead(_113);
        StorageDead(_112);
        StorageDead(_111);
        StorageDead(_110);
        StorageDead(_109);
        StorageDead(_106);
        StorageDead(_103);
        StorageDead(_100);
        StorageDead(_97);
        StorageDead(_94);
        StorageDead(_93);
        StorageDead(_89);
        StorageDead(_86);
        StorageDead(_83);
        StorageDead(_80);
        StorageDead(_77);
        StorageDead(_76);
        StorageDead(_75);
        StorageDead(_74);
        StorageDead(_58);
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        _0 = std::result::Result::<OrderActionRecord, error::ErrorCode>::Ok(move _26);
        StorageDead(_26);
        goto -> bb39;
    }

    bb37: {
        StorageDead(_44);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_41);
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_38);
        goto -> bb38;
    }

    bb38: {
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        goto -> bb39;
    }

    bb39: {
        return;
    }
}
