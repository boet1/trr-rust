digraph Mir_0_4271 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn User::is_being_liquidated(_1: &amp;ReErased state::user::User) -&gt; bool<br align="left"/>let mut _2: u8;<br align="left"/>let mut _3: u8;<br align="left"/>let mut _4: u8;<br align="left"/>let mut _5: u8;<br align="left"/>let mut _6: isize;<br align="left"/>let mut _7: (isize, bool);<br align="left"/>let mut _8: u8;<br align="left"/>let mut _9: isize;<br align="left"/>let mut _10: (isize, bool);<br align="left"/>debug self =&gt; _1;<br align="left"/>>;
    bb0__0_4271 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>_3 = ((*_1).19: u8)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_7 = CheckedAdd(const _, const 0_isize)<br/></td></tr><tr><td align="left">assert(!move (_7.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_isize)</td></tr></table>>];
    bb1__0_4271 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_6 = move (_7.0: isize)<br/>_5 = move _6 as u8 (IntToInt)<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_10 = CheckedAdd(const _, const 0_isize)<br/></td></tr><tr><td align="left">assert(!move (_10.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_isize)</td></tr></table>>];
    bb2__0_4271 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_9 = move (_10.0: isize)<br/>_8 = move _9 as u8 (IntToInt)<br/>StorageDead(_9)<br/>_4 = BitOr(move _5, move _8)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>_2 = BitAnd(move _3, move _4)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>_0 = Gt(move _2, const 0_u8)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4271 -> bb1__0_4271 [label="success"];
    bb1__0_4271 -> bb2__0_4271 [label="success"];
}
