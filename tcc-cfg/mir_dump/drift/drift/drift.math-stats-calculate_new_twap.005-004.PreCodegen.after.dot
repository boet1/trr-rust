digraph Mir_0_2854 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_new_twap(_1: i64, _2: i64, _3: i64, _4: i64, _5: i64) -&gt; std::result::Result&lt;i64, error::ErrorCode&gt;<br align="left"/>let _6: i64;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: i64;<br align="left"/>let _17: i64;<br align="left"/>let mut _18: i64;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _21: i64;<br align="left"/>let mut _22: i64;<br align="left"/>let mut _23: isize;<br align="left"/>let _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _25: !;<br align="left"/>let mut _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _27: i64;<br align="left"/>let mut _28: i64;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: i64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: std::option::Option&lt;i64&gt;;<br align="left"/>debug current_price =&gt; _1;<br align="left"/>debug current_ts =&gt; _2;<br align="left"/>debug last_twap =&gt; _3;<br align="left"/>debug last_ts =&gt; _4;<br align="left"/>debug period =&gt; _5;<br align="left"/>debug since_last =&gt; _6;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug from_start =&gt; _17;<br align="left"/>debug residual =&gt; _24;<br align="left"/>debug val =&gt; _27;<br align="left"/>>;
    bb0__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = _2<br/>StorageLive(_11)<br/>_11 = _4<br/></td></tr><tr><td align="left">_9 = &lt;i64 as SafeMath&gt;::safe_sub(move _10, move _11)</td></tr></table>>];
    bb1__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_12 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_8 as Continue).0: i64)<br/>_7 = _16<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_6 = std::cmp::max::&lt;i64&gt;(const 0_i64, move _7)</td></tr></table>>];
    bb4__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_8)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = _5<br/>StorageLive(_22)<br/>_22 = _6<br/></td></tr><tr><td align="left">_20 = &lt;i64 as SafeMath&gt;::safe_sub(move _21, move _22)</td></tr></table>>];
    bb8__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb9__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_23 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _23)</td></tr></table>>];
    bb10__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_27)<br/>_27 = ((_19 as Continue).0: i64)<br/>_18 = _27<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_17 = std::cmp::max::&lt;i64&gt;(const 1_i64, move _18)</td></tr></table>>];
    bb11__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_26)<br/>_26 = _24<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _26)</td></tr></table>>];
    bb12__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_24)<br/>StorageDead(_18)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_19)<br/>StorageLive(_28)<br/>_28 = _1<br/>StorageLive(_29)<br/>_29 = _3<br/>StorageLive(_30)<br/>_30 = _6<br/>StorageLive(_31)<br/>_31 = _17<br/>StorageLive(_32)<br/>_32 = Option::&lt;i64&gt;::None<br/></td></tr><tr><td align="left">_0 = calculate_weighted_average(move _28, move _29, move _30, move _31, move _32)</td></tr></table>>];
    bb14__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_17)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_2854 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2854 -> bb1__0_2854 [label="return"];
    bb1__0_2854 -> bb2__0_2854 [label="return"];
    bb2__0_2854 -> bb3__0_2854 [label="0"];
    bb2__0_2854 -> bb5__0_2854 [label="1"];
    bb2__0_2854 -> bb4__0_2854 [label="otherwise"];
    bb3__0_2854 -> bb7__0_2854 [label="return"];
    bb5__0_2854 -> bb6__0_2854 [label="return"];
    bb6__0_2854 -> bb15__0_2854 [label=""];
    bb7__0_2854 -> bb8__0_2854 [label="return"];
    bb8__0_2854 -> bb9__0_2854 [label="return"];
    bb9__0_2854 -> bb10__0_2854 [label="0"];
    bb9__0_2854 -> bb11__0_2854 [label="1"];
    bb9__0_2854 -> bb4__0_2854 [label="otherwise"];
    bb10__0_2854 -> bb13__0_2854 [label="return"];
    bb11__0_2854 -> bb12__0_2854 [label="return"];
    bb12__0_2854 -> bb15__0_2854 [label=""];
    bb13__0_2854 -> bb14__0_2854 [label="return"];
    bb14__0_2854 -> bb16__0_2854 [label=""];
    bb15__0_2854 -> bb16__0_2854 [label=""];
}
