digraph Mir_0_4141 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn SpotMarketMap::&lt;'a&gt;::load(_1: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;, _2: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;) -&gt; std::result::Result&lt;state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, error::ErrorCode&gt;<br align="left"/>let mut _3: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _4: std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _5: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _6: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _7: [u8; 8_usize];<br align="left"/>let _8: ();<br align="left"/>let mut _9: ();<br align="left"/>let mut _10: std::option::Option&lt;&amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _11: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _14: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _19: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _20: error::ErrorCode;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _26: usize;<br align="left"/>let _27: ();<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: usize;<br align="left"/>let mut _30: &amp;ReErased [u8];<br align="left"/>let _31: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _32: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _33: usize;<br align="left"/>let mut _34: !;<br align="left"/>let _35: &amp;ReErased [u8; 8_usize];<br align="left"/>let _36: usize;<br align="left"/>let _37: &amp;ReErased [u8];<br align="left"/>let _38: &amp;ReErased [u8];<br align="left"/>let mut _39: &amp;ReErased [u8];<br align="left"/>let _40: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _41: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _42: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _43: usize;<br align="left"/>let mut _44: usize;<br align="left"/>let mut _45: usize;<br align="left"/>let mut _46: (usize, bool);<br align="left"/>let mut _47: &amp;ReErased [u8];<br align="left"/>let _48: ();<br align="left"/>let mut _49: bool;<br align="left"/>let mut _50: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _51: &amp;ReErased &amp;ReErased [u8; 8_usize];<br align="left"/>let _52: &amp;ReErased [u8; 8_usize];<br align="left"/>let mut _53: !;<br align="left"/>let _54: u16;<br align="left"/>let mut _55: [u8; 2_usize];<br align="left"/>let mut _56: &amp;ReErased [u8; 2_usize];<br align="left"/>let _57: usize;<br align="left"/>let _58: &amp;ReErased [u8];<br align="left"/>let _59: &amp;ReErased [u8];<br align="left"/>let mut _60: &amp;ReErased [u8];<br align="left"/>let _61: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _62: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _63: std::ops::Range&lt;usize&gt;;<br align="left"/>let mut _64: usize;<br align="left"/>let mut _65: usize;<br align="left"/>let mut _66: usize;<br align="left"/>let mut _67: (usize, bool);<br align="left"/>let mut _68: &amp;ReErased [u8];<br align="left"/>let _69: ();<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: &amp;ReErased std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _72: &amp;ReErased u16;<br align="left"/>let _73: &amp;ReErased u16;<br align="left"/>let mut _74: !;<br align="left"/>let _75: ();<br align="left"/>let mut _76: &amp;ReErased str;<br align="left"/>let _77: &amp;ReErased str;<br align="left"/>let mut _78: &amp;ReErased std::string::String;<br align="left"/>let _79: &amp;ReErased std::string::String;<br align="left"/>let _80: std::string::String;<br align="left"/>let _81: std::string::String;<br align="left"/>let mut _82: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _85: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _86: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _89: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _90: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _91: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased u16;<br align="left"/>let _93: &amp;ReErased u16;<br align="left"/>let mut _94: error::ErrorCode;<br align="left"/>let _95: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _97: std::result::Result&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _98: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _99: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _100: isize;<br align="left"/>let _101: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _104: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _105: bool;<br align="left"/>let _106: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _107: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _108: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _109: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _110: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _111: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _112: error::ErrorCode;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _115: !;<br align="left"/>let mut _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _117: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _118: ();<br align="left"/>let mut _119: bool;<br align="left"/>let mut _120: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _121: &amp;ReErased u16;<br align="left"/>let _122: &amp;ReErased u16;<br align="left"/>let mut _123: bool;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: error::ErrorCode;<br align="left"/>let _126: std::option::Option&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _127: &amp;ReErased mut std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _128: u16;<br align="left"/>let mut _129: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _130: !;<br align="left"/>let _131: ();<br align="left"/>let mut _132: !;<br align="left"/>let mut _133: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _134: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _135: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _136: &amp;ReErased mut [u8];<br align="left"/>let mut _137: &amp;ReErased mut [u8];<br align="left"/>let mut _138: &amp;ReErased mut [u8];<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>debug writable_spot_markets =&gt; _1;<br align="left"/>debug account_info_iter =&gt; _2;<br align="left"/>debug spot_market_map =&gt; _3;<br align="left"/>debug spot_market_discriminator =&gt; _7;<br align="left"/>debug account_info =&gt; _13;<br align="left"/>debug data =&gt; _14;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug expected_data_len =&gt; _26;<br align="left"/>debug account_discriminator =&gt; _35;<br align="left"/>debug offset =&gt; _36;<br align="left"/>debug slice =&gt; _37;<br align="left"/>debug market_index =&gt; _54;<br align="left"/>debug offset =&gt; _57;<br align="left"/>debug slice =&gt; _58;<br align="left"/>debug res =&gt; _81;<br align="left"/>debug account_info =&gt; _95;<br align="left"/>debug residual =&gt; _101;<br align="left"/>debug val =&gt; _104;<br align="left"/>debug is_writable =&gt; _105;<br align="left"/>debug account_loader =&gt; _106;<br align="left"/>debug residual =&gt; _114;<br align="left"/>debug val =&gt; _117;<br align="left"/>>;
    bb0__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/></td></tr><tr><td align="left">_4 = BTreeMap::&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;&gt;::new()</td></tr></table>>];
    bb1__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = &amp;(*_1)<br/></td></tr><tr><td align="left">_5 = &lt;BTreeSet&lt;u16&gt; as Clone&gt;::clone(move _6)</td></tr></table>>];
    bb2__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_3 = SpotMarketMap::&lt;'_&gt;(move _4, move _5)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageLive(_7)<br/></td></tr><tr><td align="left">_7 = &lt;SpotMarket as anchor_lang::Discriminator&gt;::discriminator()</td></tr></table>>];
    bb3__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_10 = Peekable::&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::peek(move _11)</td></tr></table>>];
    bb5__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_12 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb6__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_10 as Some).0: &amp;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_135 = deref_copy (*_13)<br/>_18 = &amp;(*_135)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _18)</td></tr></table>>];
    bb7__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = error::ErrorCode::CouldNotLoadSpotMarketData<br/>_19 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt;::Err(move _20)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;::or::&lt;error::ErrorCode&gt;(move _17, move _19)</td></tr></table>>];
    bb8__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb9__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_21 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb10__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = move ((_15 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_14 = move _25<br/>StorageDead(_25)<br/>_141 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_26)<br/>_26 = const _<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_14<br/></td></tr><tr><td align="left">_31 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb11__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;SpotMarketMap&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb13__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>_139 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">_136 = deref_copy (*_31)<br/>_30 = &amp;(*_136)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = core::slice::&lt;impl [u8]&gt;::len(move _30)</td></tr></table>>];
    bb15__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageLive(_33)<br/>_33 = _26<br/>_28 = Lt(move _29, move _33)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb16__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>_8 = const ()<br/>StorageDead(_28)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>_27 = const ()<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = const 0_usize<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = &amp;_14<br/></td></tr><tr><td align="left">_40 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb18__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_137 = deref_copy (*_40)<br/>_39 = &amp;(*_137)<br/>StorageDead(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _36<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _36<br/>_46 = CheckedAdd(_45, const 8_usize)<br/></td></tr><tr><td align="left">assert(!move (_46.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _45, const 8_usize)</td></tr></table>>];
    bb19__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_44 = move (_46.0: usize)<br/>StorageDead(_45)<br/>_42 = std::ops::Range::&lt;usize&gt; { start: move _43, end: move _44 }<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_38 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _39, move _42)</td></tr></table>>];
    bb20__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_39)<br/>_37 = &amp;(*_38)<br/>StorageLive(_47)<br/>_47 = &amp;(*_37)<br/></td></tr><tr><td align="left">_35 = SpotMarketMap::&lt;'a&gt;::load::as_array::&lt;u8&gt;(move _47)</td></tr></table>>];
    bb21__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;_35<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = &amp;_7<br/>_51 = &amp;_52<br/></td></tr><tr><td align="left">_49 = &lt;&amp;[u8; 8] as PartialEq&gt;::ne(move _50, move _51)</td></tr></table>>];
    bb22__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb23__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>_8 = const ()<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>_48 = const ()<br/>StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = const 684_usize<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = &amp;_14<br/></td></tr><tr><td align="left">_61 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _62)</td></tr></table>>];
    bb25__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_138 = deref_copy (*_61)<br/>_60 = &amp;(*_138)<br/>StorageDead(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = _57<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _57<br/>_67 = CheckedAdd(_66, const 2_usize)<br/></td></tr><tr><td align="left">assert(!move (_67.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, move _66, const 2_usize)</td></tr></table>>];
    bb26__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_65 = move (_67.0: usize)<br/>StorageDead(_66)<br/>_63 = std::ops::Range::&lt;usize&gt; { start: move _64, end: move _65 }<br/>StorageDead(_65)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_59 = &lt;[u8] as Index&lt;std::ops::Range&lt;usize&gt;&gt;&gt;::index(move _60, move _63)</td></tr></table>>];
    bb27__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_60)<br/>_58 = &amp;(*_59)<br/>StorageLive(_68)<br/>_68 = &amp;(*_58)<br/></td></tr><tr><td align="left">_56 = SpotMarketMap::&lt;'a&gt;::load::as_array::&lt;u8&gt;(move _68)</td></tr></table>>];
    bb28__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>_55 = (*_56)<br/></td></tr><tr><td align="left">_54 = core::num::&lt;impl u16&gt;::from_le_bytes(move _55)</td></tr></table>>];
    bb29__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_56)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = &amp;(_3.0: std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;&gt;)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>_73 = &amp;_54<br/>_72 = &amp;(*_73)<br/></td></tr><tr><td align="left">_70 = BTreeMap::&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;&gt;::contains_key::&lt;u16&gt;(move _71, move _72)</td></tr></table>>];
    bb30__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb31__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>_134 = const _<br/>_85 = &amp;(*_134)<br/>_84 = &amp;(*_85)<br/>_83 = move _84 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_84)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_54<br/>_92 = &amp;(*_93)<br/></td></tr><tr><td align="left">_91 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _92)</td></tr></table>>];
    bb32__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_90 = [move _91]<br/>StorageDead(_91)<br/>_89 = &amp;_90<br/>_88 = &amp;(*_89)<br/>_87 = move _88 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_82 = Arguments::&lt;'_&gt;::new_v1(move _83, move _87)</td></tr></table>>];
    bb33__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = format(move _82)</td></tr></table>>];
    bb34__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_85)<br/>_80 = move _81<br/>StorageDead(_81)<br/>_79 = &amp;_80<br/>_78 = &amp;(*_79)<br/></td></tr><tr><td align="left">_77 = &lt;String as Deref&gt;::deref(move _78)</td></tr></table>>];
    bb35__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_76 = &amp;(*_77)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_75 = solana_program::log::sol_log(move _76)</td></tr></table>>];
    bb36__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/></td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb37__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageLive(_94)<br/>_94 = error::ErrorCode::InvalidSpotMarketAccount<br/>_0 = std::result::Result::&lt;SpotMarketMap&lt;'_&gt;, error::ErrorCode&gt;::Err(move _94)<br/>StorageDead(_94)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>_69 = const ()<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;mut (*_2)<br/></td></tr><tr><td align="left">_98 = &lt;Peekable&lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt; as Iterator&gt;::next(move _99)</td></tr></table>>];
    bb39__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;Option&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as SafeUnwrap&gt;::safe_unwrap(move _98)</td></tr></table>>];
    bb40__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb41__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_100 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _100)</td></tr></table>>];
    bb42__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_104)<br/>_104 = ((_96 as Continue).0: &amp;anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_95 = _104<br/>StorageDead(_104)<br/>StorageDead(_96)<br/>StorageLive(_105)<br/>_105 = ((*_95).6: bool)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;(*_95)<br/></td></tr><tr><td align="left">_109 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::try_from(move _110)</td></tr></table>>];
    bb43__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_103)<br/>_103 = _101<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;SpotMarketMap&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _103)</td></tr></table>>];
    bb44__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_101)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = error::ErrorCode::InvalidSpotMarketAccount<br/>_111 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, error::ErrorCode&gt;::Err(move _112)<br/>StorageDead(_112)<br/></td></tr><tr><td align="left">_108 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::or::&lt;error::ErrorCode&gt;(move _109, move _111)</td></tr></table>>];
    bb46__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_107 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _108)</td></tr></table>>];
    bb47__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>_113 = discriminant(_107)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb48__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = move ((_107 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_106 = move _117<br/>StorageDead(_117)<br/>StorageDead(_107)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;(*_1)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>_122 = &amp;_54<br/>_121 = &amp;(*_122)<br/></td></tr><tr><td align="left">_119 = BTreeSet::&lt;u16&gt;::contains::&lt;u16&gt;(move _120, move _121)</td></tr></table>>];
    bb49__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_107 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_116)<br/>_116 = _114<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;SpotMarketMap&lt;'_&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _116)</td></tr></table>>];
    bb50__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_114)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb52__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_123)<br/>_123 = _105<br/></td></tr><tr><td align="left">switchInt(move _123)</td></tr></table>>];
    bb53__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = error::ErrorCode::SpotMarketWrongMutability<br/>_0 = std::result::Result::&lt;SpotMarketMap&lt;'_&gt;, error::ErrorCode&gt;::Err(move _125)<br/>StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_118 = const ()<br/>StorageDead(_123)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;mut (_3.0: std::collections::BTreeMap&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;&gt;)<br/>StorageLive(_128)<br/>_128 = _54<br/>StorageLive(_129)<br/>_129 = move _106<br/></td></tr><tr><td align="left">_126 = BTreeMap::&lt;u16, anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;&gt;::insert(move _127, move _128, move _129)</td></tr></table>>];
    bb56__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>StorageDead(_128)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/>_9 = const ()<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_95)<br/>StorageDead(_54)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb57__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_131)<br/>_8 = const ()<br/>StorageDead(_131)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb60__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>StorageLive(_133)<br/>_133 = move _3<br/>_0 = std::result::Result::&lt;SpotMarketMap&lt;'_&gt;, error::ErrorCode&gt;::Ok(move _133)<br/>StorageDead(_133)<br/>StorageDead(_7)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_35)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb65__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_10)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb66__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left">return</td></tr></table>>];
    bb68__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">68 (cleanup)</td></tr><tr><td align="left">drop(_80)</td></tr></table>>];
    bb69__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">69 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb70__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">70 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb71__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">71 (cleanup)</td></tr><tr><td align="left">drop(_4)</td></tr></table>>];
    bb72__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">72 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb73__0_4141 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">73 (cleanup)</td></tr><tr><td align="left" balign="left">_143 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_4141 -> bb1__0_4141 [label="return"];
    bb1__0_4141 -> bb2__0_4141 [label="return"];
    bb1__0_4141 -> bb71__0_4141 [label="unwind"];
    bb2__0_4141 -> bb3__0_4141 [label="return"];
    bb2__0_4141 -> bb70__0_4141 [label="unwind"];
    bb3__0_4141 -> bb4__0_4141 [label=""];
    bb4__0_4141 -> bb5__0_4141 [label="return"];
    bb4__0_4141 -> bb70__0_4141 [label="unwind"];
    bb5__0_4141 -> bb6__0_4141 [label="1"];
    bb5__0_4141 -> bb58__0_4141 [label="otherwise"];
    bb6__0_4141 -> bb7__0_4141 [label="return"];
    bb6__0_4141 -> bb70__0_4141 [label="unwind"];
    bb7__0_4141 -> bb8__0_4141 [label="return"];
    bb7__0_4141 -> bb70__0_4141 [label="unwind"];
    bb8__0_4141 -> bb9__0_4141 [label="return"];
    bb8__0_4141 -> bb70__0_4141 [label="unwind"];
    bb9__0_4141 -> bb10__0_4141 [label="0"];
    bb9__0_4141 -> bb12__0_4141 [label="1"];
    bb9__0_4141 -> bb11__0_4141 [label="otherwise"];
    bb10__0_4141 -> bb14__0_4141 [label="return"];
    bb10__0_4141 -> bb69__0_4141 [label="unwind"];
    bb12__0_4141 -> bb13__0_4141 [label="return"];
    bb12__0_4141 -> bb73__0_4141 [label="unwind"];
    bb13__0_4141 -> bb65__0_4141 [label=""];
    bb14__0_4141 -> bb15__0_4141 [label="return"];
    bb14__0_4141 -> bb69__0_4141 [label="unwind"];
    bb15__0_4141 -> bb17__0_4141 [label="0"];
    bb15__0_4141 -> bb16__0_4141 [label="otherwise"];
    bb16__0_4141 -> bb59__0_4141 [label=""];
    bb17__0_4141 -> bb18__0_4141 [label="return"];
    bb17__0_4141 -> bb69__0_4141 [label="unwind"];
    bb18__0_4141 -> bb19__0_4141 [label="success"];
    bb18__0_4141 -> bb69__0_4141 [label="unwind"];
    bb19__0_4141 -> bb20__0_4141 [label="return"];
    bb19__0_4141 -> bb69__0_4141 [label="unwind"];
    bb20__0_4141 -> bb21__0_4141 [label="return"];
    bb20__0_4141 -> bb69__0_4141 [label="unwind"];
    bb21__0_4141 -> bb22__0_4141 [label="return"];
    bb21__0_4141 -> bb69__0_4141 [label="unwind"];
    bb22__0_4141 -> bb24__0_4141 [label="0"];
    bb22__0_4141 -> bb23__0_4141 [label="otherwise"];
    bb23__0_4141 -> bb59__0_4141 [label=""];
    bb24__0_4141 -> bb25__0_4141 [label="return"];
    bb24__0_4141 -> bb69__0_4141 [label="unwind"];
    bb25__0_4141 -> bb26__0_4141 [label="success"];
    bb25__0_4141 -> bb69__0_4141 [label="unwind"];
    bb26__0_4141 -> bb27__0_4141 [label="return"];
    bb26__0_4141 -> bb69__0_4141 [label="unwind"];
    bb27__0_4141 -> bb28__0_4141 [label="return"];
    bb27__0_4141 -> bb69__0_4141 [label="unwind"];
    bb28__0_4141 -> bb29__0_4141 [label="return"];
    bb28__0_4141 -> bb69__0_4141 [label="unwind"];
    bb29__0_4141 -> bb30__0_4141 [label="return"];
    bb29__0_4141 -> bb69__0_4141 [label="unwind"];
    bb30__0_4141 -> bb38__0_4141 [label="0"];
    bb30__0_4141 -> bb31__0_4141 [label="otherwise"];
    bb31__0_4141 -> bb32__0_4141 [label="return"];
    bb31__0_4141 -> bb69__0_4141 [label="unwind"];
    bb32__0_4141 -> bb33__0_4141 [label="return"];
    bb32__0_4141 -> bb69__0_4141 [label="unwind"];
    bb33__0_4141 -> bb34__0_4141 [label="return"];
    bb33__0_4141 -> bb69__0_4141 [label="unwind"];
    bb34__0_4141 -> bb35__0_4141 [label="return"];
    bb34__0_4141 -> bb68__0_4141 [label="unwind"];
    bb35__0_4141 -> bb36__0_4141 [label="return"];
    bb35__0_4141 -> bb68__0_4141 [label="unwind"];
    bb36__0_4141 -> bb37__0_4141 [label="return"];
    bb36__0_4141 -> bb69__0_4141 [label="unwind"];
    bb37__0_4141 -> bb64__0_4141 [label=""];
    bb38__0_4141 -> bb39__0_4141 [label="return"];
    bb38__0_4141 -> bb69__0_4141 [label="unwind"];
    bb39__0_4141 -> bb40__0_4141 [label="return"];
    bb39__0_4141 -> bb69__0_4141 [label="unwind"];
    bb40__0_4141 -> bb41__0_4141 [label="return"];
    bb40__0_4141 -> bb69__0_4141 [label="unwind"];
    bb41__0_4141 -> bb42__0_4141 [label="0"];
    bb41__0_4141 -> bb43__0_4141 [label="1"];
    bb41__0_4141 -> bb11__0_4141 [label="otherwise"];
    bb42__0_4141 -> bb45__0_4141 [label="return"];
    bb42__0_4141 -> bb69__0_4141 [label="unwind"];
    bb43__0_4141 -> bb44__0_4141 [label="return"];
    bb43__0_4141 -> bb69__0_4141 [label="unwind"];
    bb44__0_4141 -> bb63__0_4141 [label=""];
    bb45__0_4141 -> bb46__0_4141 [label="return"];
    bb45__0_4141 -> bb69__0_4141 [label="unwind"];
    bb46__0_4141 -> bb47__0_4141 [label="return"];
    bb46__0_4141 -> bb69__0_4141 [label="unwind"];
    bb47__0_4141 -> bb48__0_4141 [label="0"];
    bb47__0_4141 -> bb49__0_4141 [label="1"];
    bb47__0_4141 -> bb11__0_4141 [label="otherwise"];
    bb48__0_4141 -> bb51__0_4141 [label="return"];
    bb48__0_4141 -> bb69__0_4141 [label="unwind"];
    bb49__0_4141 -> bb50__0_4141 [label="return"];
    bb49__0_4141 -> bb69__0_4141 [label="unwind"];
    bb50__0_4141 -> bb62__0_4141 [label=""];
    bb51__0_4141 -> bb54__0_4141 [label="0"];
    bb51__0_4141 -> bb52__0_4141 [label="otherwise"];
    bb52__0_4141 -> bb53__0_4141 [label="0"];
    bb52__0_4141 -> bb55__0_4141 [label="otherwise"];
    bb53__0_4141 -> bb62__0_4141 [label=""];
    bb54__0_4141 -> bb55__0_4141 [label=""];
    bb55__0_4141 -> bb56__0_4141 [label="return"];
    bb55__0_4141 -> bb69__0_4141 [label="unwind"];
    bb56__0_4141 -> bb57__0_4141 [label="return"];
    bb56__0_4141 -> bb70__0_4141 [label="unwind"];
    bb57__0_4141 -> bb4__0_4141 [label=""];
    bb58__0_4141 -> bb61__0_4141 [label=""];
    bb59__0_4141 -> bb60__0_4141 [label="return"];
    bb59__0_4141 -> bb70__0_4141 [label="unwind"];
    bb60__0_4141 -> bb61__0_4141 [label=""];
    bb61__0_4141 -> bb67__0_4141 [label=""];
    bb62__0_4141 -> bb63__0_4141 [label=""];
    bb63__0_4141 -> bb64__0_4141 [label=""];
    bb64__0_4141 -> bb65__0_4141 [label="return"];
    bb64__0_4141 -> bb70__0_4141 [label="unwind"];
    bb65__0_4141 -> bb66__0_4141 [label="return"];
    bb65__0_4141 -> bb72__0_4141 [label="unwind"];
    bb66__0_4141 -> bb67__0_4141 [label=""];
    bb68__0_4141 -> bb69__0_4141 [label="return"];
    bb69__0_4141 -> bb70__0_4141 [label="return"];
    bb70__0_4141 -> bb72__0_4141 [label="return"];
    bb71__0_4141 -> bb72__0_4141 [label="return"];
    bb73__0_4141 -> bb70__0_4141 [label=""];
}
