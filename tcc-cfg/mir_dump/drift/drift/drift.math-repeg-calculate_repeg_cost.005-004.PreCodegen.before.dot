digraph Mir_0_2711 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_repeg_cost(_1: &amp;ReErased state::perp_market::AMM, _2: u128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let mut _3: i128;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _5: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _6: i128;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _8: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _9: i128;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _11: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _12: u128;<br align="left"/>let mut _13: isize;<br align="left"/>let _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _15: !;<br align="left"/>let mut _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _17: i128;<br align="left"/>let mut _18: i128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _20: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: i128;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: i128;<br align="left"/>let mut _32: i128;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _34: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _35: i128;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _37: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _38: u128;<br align="left"/>let mut _39: isize;<br align="left"/>let _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _41: !;<br align="left"/>let mut _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _43: i128;<br align="left"/>let mut _44: i128;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _46: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _47: u128;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: i128;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: i128;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i128;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug new_peg =&gt; _2;<br align="left"/>debug residual =&gt; _14;<br align="left"/>debug val =&gt; _17;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _40;<br align="left"/>debug val =&gt; _43;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>>;
    bb0__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = ((*_1).6: u128)<br/></td></tr><tr><td align="left">_11 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _12)</td></tr></table>>];
    bb1__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb2__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_13 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _13)</td></tr></table>>];
    bb3__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_10 as Continue).0: i128)<br/>_9 = _17<br/>StorageDead(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = ((*_1).12: u128)<br/></td></tr><tr><td align="left">_20 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _21)</td></tr></table>>];
    bb4__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_16)<br/>_16 = _14<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _16)</td></tr></table>>];
    bb6__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb8__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_22 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb9__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_19 as Continue).0: i128)<br/>_18 = _26<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">_8 = &lt;i128 as SafeMath&gt;::safe_sub(move _9, move _18)</td></tr></table>>];
    bb10__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb11__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_18)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb13__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_27 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb14__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_7 as Continue).0: i128)<br/>_6 = _31<br/>StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = _2<br/></td></tr><tr><td align="left">_37 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _38)</td></tr></table>>];
    bb15__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb16__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb18__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_39 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb19__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_36 as Continue).0: i128)<br/>_35 = _43<br/>StorageDead(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = ((*_1).11: u128)<br/></td></tr><tr><td align="left">_46 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _47)</td></tr></table>>];
    bb20__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_42)<br/>_42 = _40<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _42)</td></tr></table>>];
    bb21__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb23__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_48 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb24__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_45 as Continue).0: i128)<br/>_44 = _52<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">_34 = &lt;i128 as SafeMath&gt;::safe_sub(move _35, move _44)</td></tr></table>>];
    bb25__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb26__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_44)<br/>StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb28__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_53 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb29__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_33 as Continue).0: i128)<br/>_32 = _57<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_5 = &lt;i128 as SafeMath&gt;::safe_mul(move _6, move _32)</td></tr></table>>];
    bb30__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb31__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb33__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_58 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb34__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_4 as Continue).0: i128)<br/>_3 = _62<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_div(move _3, const _)</td></tr></table>>];
    bb35__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb36__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_45)<br/>StorageDead(_36)<br/>StorageDead(_33)<br/>StorageDead(_19)<br/>StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_6)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2711 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2711 -> bb1__0_2711 [label="return"];
    bb1__0_2711 -> bb2__0_2711 [label="return"];
    bb2__0_2711 -> bb3__0_2711 [label="0"];
    bb2__0_2711 -> bb5__0_2711 [label="1"];
    bb2__0_2711 -> bb4__0_2711 [label="otherwise"];
    bb3__0_2711 -> bb7__0_2711 [label="return"];
    bb5__0_2711 -> bb6__0_2711 [label="return"];
    bb6__0_2711 -> bb43__0_2711 [label=""];
    bb7__0_2711 -> bb8__0_2711 [label="return"];
    bb8__0_2711 -> bb9__0_2711 [label="0"];
    bb8__0_2711 -> bb10__0_2711 [label="1"];
    bb8__0_2711 -> bb4__0_2711 [label="otherwise"];
    bb9__0_2711 -> bb12__0_2711 [label="return"];
    bb10__0_2711 -> bb11__0_2711 [label="return"];
    bb11__0_2711 -> bb41__0_2711 [label=""];
    bb12__0_2711 -> bb13__0_2711 [label="return"];
    bb13__0_2711 -> bb14__0_2711 [label="0"];
    bb13__0_2711 -> bb15__0_2711 [label="1"];
    bb13__0_2711 -> bb4__0_2711 [label="otherwise"];
    bb14__0_2711 -> bb17__0_2711 [label="return"];
    bb15__0_2711 -> bb16__0_2711 [label="return"];
    bb16__0_2711 -> bb41__0_2711 [label=""];
    bb17__0_2711 -> bb18__0_2711 [label="return"];
    bb18__0_2711 -> bb19__0_2711 [label="0"];
    bb18__0_2711 -> bb20__0_2711 [label="1"];
    bb18__0_2711 -> bb4__0_2711 [label="otherwise"];
    bb19__0_2711 -> bb22__0_2711 [label="return"];
    bb20__0_2711 -> bb21__0_2711 [label="return"];
    bb21__0_2711 -> bb40__0_2711 [label=""];
    bb22__0_2711 -> bb23__0_2711 [label="return"];
    bb23__0_2711 -> bb24__0_2711 [label="0"];
    bb23__0_2711 -> bb25__0_2711 [label="1"];
    bb23__0_2711 -> bb4__0_2711 [label="otherwise"];
    bb24__0_2711 -> bb27__0_2711 [label="return"];
    bb25__0_2711 -> bb26__0_2711 [label="return"];
    bb26__0_2711 -> bb38__0_2711 [label=""];
    bb27__0_2711 -> bb28__0_2711 [label="return"];
    bb28__0_2711 -> bb29__0_2711 [label="0"];
    bb28__0_2711 -> bb30__0_2711 [label="1"];
    bb28__0_2711 -> bb4__0_2711 [label="otherwise"];
    bb29__0_2711 -> bb32__0_2711 [label="return"];
    bb30__0_2711 -> bb31__0_2711 [label="return"];
    bb31__0_2711 -> bb38__0_2711 [label=""];
    bb32__0_2711 -> bb33__0_2711 [label="return"];
    bb33__0_2711 -> bb34__0_2711 [label="0"];
    bb33__0_2711 -> bb35__0_2711 [label="1"];
    bb33__0_2711 -> bb4__0_2711 [label="otherwise"];
    bb34__0_2711 -> bb37__0_2711 [label="return"];
    bb35__0_2711 -> bb36__0_2711 [label="return"];
    bb36__0_2711 -> bb39__0_2711 [label=""];
    bb37__0_2711 -> bb44__0_2711 [label=""];
    bb38__0_2711 -> bb39__0_2711 [label=""];
    bb39__0_2711 -> bb40__0_2711 [label=""];
    bb40__0_2711 -> bb42__0_2711 [label=""];
    bb41__0_2711 -> bb42__0_2711 [label=""];
    bb42__0_2711 -> bb43__0_2711 [label=""];
    bb43__0_2711 -> bb44__0_2711 [label=""];
}
