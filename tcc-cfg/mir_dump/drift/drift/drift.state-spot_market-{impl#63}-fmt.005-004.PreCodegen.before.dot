digraph Mir_0_18011 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;InsuranceFund as Debug&gt;::fmt(_1: &amp;ReErased state::spot_market::InsuranceFund, _2: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt;<br align="left"/>let _3: &amp;ReErased [&amp;ReErased str; 9_usize];<br align="left"/>let _4: &amp;ReErased [&amp;ReErased str; 9_usize];<br align="left"/>let _5: [&amp;ReErased str; 9_usize];<br align="left"/>let mut _6: &amp;ReErased str;<br align="left"/>let _7: &amp;ReErased str;<br align="left"/>let mut _8: &amp;ReErased str;<br align="left"/>let _9: &amp;ReErased str;<br align="left"/>let mut _10: &amp;ReErased str;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: &amp;ReErased str;<br align="left"/>let _13: &amp;ReErased str;<br align="left"/>let mut _14: &amp;ReErased str;<br align="left"/>let _15: &amp;ReErased str;<br align="left"/>let mut _16: &amp;ReErased str;<br align="left"/>let _17: &amp;ReErased str;<br align="left"/>let mut _18: &amp;ReErased str;<br align="left"/>let _19: &amp;ReErased str;<br align="left"/>let mut _20: &amp;ReErased str;<br align="left"/>let _21: &amp;ReErased str;<br align="left"/>let _22: &amp;ReErased [&amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased];<br align="left"/>let mut _23: &amp;ReErased [&amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased; 9_usize];<br align="left"/>let _24: &amp;ReErased [&amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased; 9_usize];<br align="left"/>let _25: [&amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased; 9_usize];<br align="left"/>let mut _26: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _27: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _28: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _29: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _30: &amp;ReErased u128;<br align="left"/>let _31: &amp;ReErased u128;<br align="left"/>let mut _32: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _33: &amp;ReErased u128;<br align="left"/>let _34: &amp;ReErased u128;<br align="left"/>let mut _35: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _36: &amp;ReErased u128;<br align="left"/>let _37: &amp;ReErased u128;<br align="left"/>let mut _38: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _39: &amp;ReErased i64;<br align="left"/>let _40: &amp;ReErased i64;<br align="left"/>let mut _41: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _42: &amp;ReErased i64;<br align="left"/>let _43: &amp;ReErased i64;<br align="left"/>let mut _44: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _45: &amp;ReErased i64;<br align="left"/>let _46: &amp;ReErased i64;<br align="left"/>let mut _47: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _48: &amp;ReErased u32;<br align="left"/>let _49: &amp;ReErased u32;<br align="left"/>let mut _50: &amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased;<br align="left"/>let mut _51: &amp;ReErased &amp;ReErased u32;<br align="left"/>let _52: &amp;ReErased &amp;ReErased u32;<br align="left"/>let _53: &amp;ReErased u32;<br align="left"/>let mut _54: &amp;ReErased mut std::fmt::Formatter&lt;ReErased&gt;;<br align="left"/>let mut _55: &amp;ReErased str;<br align="left"/>let _56: &amp;ReErased str;<br align="left"/>let mut _57: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _58: &amp;ReErased [&amp;ReErased str; 9_usize];<br align="left"/>let mut _59: &amp;ReErased [&amp;ReErased dyn [Binder(Trait(std::fmt::Debug), [])] + ReErased];<br align="left"/>let mut _60: &amp;ReErased [&amp;ReErased str; 9_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug f =&gt; _2;<br align="left"/>debug names =&gt; _3;<br align="left"/>debug values =&gt; _22;<br align="left"/>>;
    bb0__0_18011 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>_60 = const _<br/>_4 = &amp;(*_60)<br/>_3 = &amp;(*_4)<br/>StorageDead(_4)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;((*_1).0: anchor_lang::prelude::Pubkey)<br/>_27 = &amp;(*_28)<br/>_26 = move _27 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_27)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = &amp;((*_1).1: u128)<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;((*_1).2: u128)<br/>_33 = &amp;(*_34)<br/>_32 = move _33 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_33)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = &amp;((*_1).3: u128)<br/>_36 = &amp;(*_37)<br/>_35 = move _36 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_36)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;((*_1).4: i64)<br/>_39 = &amp;(*_40)<br/>_38 = move _39 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_39)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;((*_1).5: i64)<br/>_42 = &amp;(*_43)<br/>_41 = move _42 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_42)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_46 = &amp;((*_1).6: i64)<br/>_45 = &amp;(*_46)<br/>_44 = move _45 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_45)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;((*_1).7: u32)<br/>_48 = &amp;(*_49)<br/>_47 = move _48 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = &amp;((*_1).8: u32)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>_50 = move _51 as &amp;dyn std::fmt::Debug (PointerCoercion(Unsize))<br/>StorageDead(_51)<br/>_25 = [move _26, move _29, move _32, move _35, move _38, move _41, move _44, move _47, move _50]<br/>StorageDead(_50)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_41)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>_24 = &amp;_25<br/>_23 = &amp;(*_24)<br/>_22 = move _23 as &amp;[&amp;dyn std::fmt::Debug] (PointerCoercion(Unsize))<br/>StorageDead(_23)<br/>StorageDead(_52)<br/>StorageDead(_49)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_34)<br/>StorageDead(_31)<br/>StorageDead(_28)<br/>StorageDead(_24)<br/>StorageLive(_54)<br/>_54 = &amp;mut (*_2)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = const &quot;InsuranceFund&quot;<br/>_55 = &amp;(*_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = &amp;(*_3)<br/>_57 = move _58 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_58)<br/>StorageLive(_59)<br/>_59 = &amp;(*_22)<br/></td></tr><tr><td align="left">_0 = Formatter::&lt;'_&gt;::debug_struct_fields_finish(move _54, move _55, move _57, move _59)</td></tr></table>>];
    bb1__0_18011 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageDead(_3)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_18011 -> bb1__0_18011 [label="return"];
}
