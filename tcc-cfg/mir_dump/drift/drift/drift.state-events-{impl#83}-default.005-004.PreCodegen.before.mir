// MIR for `state::events::<impl at programs/drift/src/state/events.rs:383:10: 383:17>::default` before PreCodegen

fn state::events::<impl at programs/drift/src/state/events.rs:383:10: 383:17>::default() -> LPRecord {
    let mut _0: state::events::LPRecord;
    let mut _1: i64;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: state::events::LPAction;
    let mut _4: u64;
    let mut _5: u16;
    let mut _6: i64;
    let mut _7: i64;
    let mut _8: i64;

    bb0: {
        StorageLive(_1);
        _1 = <i64 as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <LPAction as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <u64 as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <u16 as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <i64 as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <i64 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <i64 as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        _0 = LPRecord { ts: move _1, user: move _2, action: move _3, n_shares: move _4, market_index: move _5, delta_base_asset_amount: move _6, delta_quote_asset_amount: move _7, pnl: move _8 };
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
