digraph Mir_0_9215 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_log_user_balances(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::LogUserBalances&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _6: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let _12: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _13: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _14: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _15: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _16: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _17: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _19: Closure(DefId(0:9218 ~ drift[d311]::instructions::keeper::handle_log_user_balances::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _20: isize;<br align="left"/>let _21: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _22: !;<br align="left"/>let mut _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _24: std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _25: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _26: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _27: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _28: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _29: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _30: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _31: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _32: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _33: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _34: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _35: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _36: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _37: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _38: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _39: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _40: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _41: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: anchor_lang::prelude::Clock;<br align="left"/>let mut _44: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _45: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _50: anchor_lang::prelude::Clock;<br align="left"/>let mut _51: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _57: i128;<br align="left"/>let mut _58: (i128, bool);<br align="left"/>let mut _59: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (i128, bool)&gt;;<br align="left"/>let mut _60: std::result::Result&lt;(i128, bool), error::ErrorCode&gt;;<br align="left"/>let mut _61: &amp;ReErased state::user::User;<br align="left"/>let _62: &amp;ReErased state::user::User;<br align="left"/>let mut _63: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let _64: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _65: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _66: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _67: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _68: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _69: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _70: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _71: isize;<br align="left"/>let _72: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _73: !;<br align="left"/>let mut _74: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _75: (i128, bool);<br align="left"/>let _76: ();<br align="left"/>let mut _77: &amp;ReErased str;<br align="left"/>let _78: &amp;ReErased str;<br align="left"/>let mut _79: &amp;ReErased std::string::String;<br align="left"/>let _80: &amp;ReErased std::string::String;<br align="left"/>let _81: std::string::String;<br align="left"/>let _82: std::string::String;<br align="left"/>let mut _83: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _84: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _85: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _86: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _87: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _88: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _89: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _90: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _91: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _92: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _94: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _95: &amp;ReErased state::user::User;<br align="left"/>let mut _96: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _97: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _98: &amp;ReErased u16;<br align="left"/>let _99: &amp;ReErased u16;<br align="left"/>let _100: &amp;ReErased state::user::User;<br align="left"/>let mut _101: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _102: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _103: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _104: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _105: ();<br align="left"/>let mut _106: &amp;ReErased str;<br align="left"/>let _107: &amp;ReErased str;<br align="left"/>let mut _108: &amp;ReErased std::string::String;<br align="left"/>let _109: &amp;ReErased std::string::String;<br align="left"/>let _110: std::string::String;<br align="left"/>let _111: std::string::String;<br align="left"/>let mut _112: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _113: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _114: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _115: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _116: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _117: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _120: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _121: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _122: &amp;ReErased i128;<br align="left"/>let _123: &amp;ReErased i128;<br align="left"/>let _124: ();<br align="left"/>let mut _125: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _126: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _127: &amp;ReErased [state::user::SpotPosition];<br align="left"/>let mut _128: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let _129: &amp;ReErased state::user::User;<br align="left"/>let mut _130: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _131: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _132: ();<br align="left"/>let _133: ();<br align="left"/>let mut _134: std::option::Option&lt;&amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _135: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _136: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: !;<br align="left"/>let _139: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _140: ();<br align="left"/>let mut _141: bool;<br align="left"/>let mut _142: u64;<br align="left"/>let mut _143: !;<br align="left"/>let _144: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _145: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _146: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _147: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased u16;<br align="left"/>let _149: &amp;ReErased u16;<br align="left"/>let mut _150: isize;<br align="left"/>let _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _152: !;<br align="left"/>let mut _153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _154: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _155: i128;<br align="left"/>let mut _156: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _157: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _158: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _159: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _160: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _161: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _162: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _163: isize;<br align="left"/>let _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _165: !;<br align="left"/>let mut _166: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _167: i128;<br align="left"/>let _168: ();<br align="left"/>let mut _169: &amp;ReErased str;<br align="left"/>let _170: &amp;ReErased str;<br align="left"/>let mut _171: &amp;ReErased std::string::String;<br align="left"/>let _172: &amp;ReErased std::string::String;<br align="left"/>let _173: std::string::String;<br align="left"/>let _174: std::string::String;<br align="left"/>let mut _175: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _176: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _177: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _178: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _179: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _180: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _181: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _182: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _183: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _184: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _185: &amp;ReErased u16;<br align="left"/>let _186: &amp;ReErased u16;<br align="left"/>let mut _187: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _188: &amp;ReErased i128;<br align="left"/>let _189: &amp;ReErased i128;<br align="left"/>let _190: ();<br align="left"/>let mut _191: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _192: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _193: &amp;ReErased [state::user::PerpPosition];<br align="left"/>let mut _194: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _195: &amp;ReErased state::user::User;<br align="left"/>let mut _196: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _197: std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let _198: ();<br align="left"/>let mut _199: std::option::Option&lt;&amp;ReErased state::user::PerpPosition&gt;;<br align="left"/>let mut _200: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _201: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::PerpPosition&gt;;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: !;<br align="left"/>let _204: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _205: ();<br align="left"/>let mut _206: bool;<br align="left"/>let mut _207: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _208: !;<br align="left"/>let _209: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _210: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _211: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _212: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _213: &amp;ReErased u16;<br align="left"/>let _214: &amp;ReErased u16;<br align="left"/>let mut _215: isize;<br align="left"/>let _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _219: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _220: i64;<br align="left"/>let mut _221: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _222: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _223: std::result::Result&lt;&amp;ReErased state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _224: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _225: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _226: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _227: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _228: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let _229: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _230: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _231: isize;<br align="left"/>let _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _233: !;<br align="left"/>let mut _234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _235: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _236: i128;<br align="left"/>let mut _237: (u128, i128);<br align="left"/>let mut _238: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, i128)&gt;;<br align="left"/>let mut _239: std::result::Result&lt;(u128, i128), error::ErrorCode&gt;;<br align="left"/>let mut _240: &amp;ReErased state::user::PerpPosition;<br align="left"/>let _241: &amp;ReErased &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _242: i64;<br align="left"/>let mut _243: isize;<br align="left"/>let _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _245: !;<br align="left"/>let mut _246: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _247: (u128, i128);<br align="left"/>let _248: ();<br align="left"/>let mut _249: bool;<br align="left"/>let mut _250: i128;<br align="left"/>let mut _251: !;<br align="left"/>let _252: ();<br align="left"/>let mut _253: &amp;ReErased str;<br align="left"/>let _254: &amp;ReErased str;<br align="left"/>let mut _255: &amp;ReErased std::string::String;<br align="left"/>let _256: &amp;ReErased std::string::String;<br align="left"/>let _257: std::string::String;<br align="left"/>let _258: std::string::String;<br align="left"/>let mut _259: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _260: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _261: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _262: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _263: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _264: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _265: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _266: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _267: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _268: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _269: &amp;ReErased u16;<br align="left"/>let _270: &amp;ReErased u16;<br align="left"/>let mut _271: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _272: &amp;ReErased i128;<br align="left"/>let _273: &amp;ReErased i128;<br align="left"/>let mut _274: ();<br align="left"/>let mut _275: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _277: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _278: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _279: &amp;ReErased mut instructions::keeper::LogUserBalances&lt;ReErased&gt;;<br align="left"/>let mut _280: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _281: &amp;ReErased mut instructions::keeper::LogUserBalances&lt;ReErased&gt;;<br align="left"/>let mut _282: &amp;ReErased mut instructions::keeper::LogUserBalances&lt;ReErased&gt;;<br align="left"/>let mut _283: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _284: &amp;ReErased state::user::PerpPosition;<br align="left"/>let mut _285: bool;<br align="left"/>let mut _286: bool;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: isize;<br align="left"/>let mut _290: isize;<br align="left"/>let mut _291: isize;<br align="left"/>let mut _292: isize;<br align="left"/>let mut _293: isize;<br align="left"/>let mut _294: isize;<br align="left"/>let mut _295: isize;<br align="left"/>let mut _296: isize;<br align="left"/>let mut _297: isize;<br align="left"/>let mut _298: isize;<br align="left"/>let mut _299: isize;<br align="left"/>let mut _300: isize;<br align="left"/>let mut _301: isize;<br align="left"/>let mut _302: isize;<br align="left"/>let mut _303: isize;<br align="left"/>let mut _304: isize;<br align="left"/>let mut _305: isize;<br align="left"/>let mut _306: isize;<br align="left"/>let mut _307: isize;<br align="left"/>let mut _308: isize;<br align="left"/>let mut _309: isize;<br align="left"/>let mut _310: isize;<br align="left"/>let mut _311: isize;<br align="left"/>let mut _312: isize;<br align="left"/>let mut _313: isize;<br align="left"/>let mut _314: isize;<br align="left"/>let mut _315: isize;<br align="left"/>let mut _316: isize;<br align="left"/>let mut _317: isize;<br align="left"/>let mut _318: isize;<br align="left"/>let mut _319: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug user_key =&gt; _12;<br align="left"/>debug user =&gt; _14;<br align="left"/>debug residual =&gt; _21;<br align="left"/>debug val =&gt; _24;<br align="left"/>debug perp_market_map =&gt; _25;<br align="left"/>debug spot_market_map =&gt; _26;<br align="left"/>debug oracle_map =&gt; _27;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug equity =&gt; _57;<br align="left"/>debug residual =&gt; _72;<br align="left"/>debug val =&gt; _75;<br align="left"/>debug res =&gt; _82;<br align="left"/>debug res =&gt; _111;<br align="left"/>debug iter =&gt; _131;<br align="left"/>debug spot_position =&gt; _139;<br align="left"/>debug spot_market =&gt; _144;<br align="left"/>debug residual =&gt; _151;<br align="left"/>debug val =&gt; _154;<br align="left"/>debug token_amount =&gt; _155;<br align="left"/>debug residual =&gt; _164;<br align="left"/>debug val =&gt; _167;<br align="left"/>debug res =&gt; _174;<br align="left"/>debug iter =&gt; _197;<br align="left"/>debug perp_position =&gt; _204;<br align="left"/>debug perp_market =&gt; _209;<br align="left"/>debug residual =&gt; _216;<br align="left"/>debug val =&gt; _219;<br align="left"/>debug oracle_price =&gt; _220;<br align="left"/>debug residual =&gt; _232;<br align="left"/>debug val =&gt; _235;<br align="left"/>debug unrealized_pnl =&gt; _236;<br align="left"/>debug residual =&gt; _244;<br align="left"/>debug val =&gt; _247;<br align="left"/>debug res =&gt; _258;<br align="left"/>>;
    bb0__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_286 = const false<br/>_285 = const false<br/>StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_279 = deref_copy (_1.1: &amp;mut instructions::keeper::LogUserBalances&lt;'_&gt;)<br/>_6 = &amp;((*_279).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_280 = deref_copy (*_6)<br/>_319 = (((_280.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_5 = &amp;(*_319)<br/></td></tr><tr><td align="left">_4 = constraints::exchange_not_paused(move _5)</td></tr></table>>];
    bb1__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_287 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_281 = deref_copy (_1.1: &amp;mut instructions::keeper::LogUserBalances&lt;'_&gt;)<br/>_13 = &amp;((*_281).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_12 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _13)</td></tr></table>>];
    bb4__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_309 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_282 = deref_copy (_1.1: &amp;mut instructions::keeper::LogUserBalances&lt;'_&gt;)<br/>_18 = &amp;((*_282).2: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_17 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load(move _18)</td></tr></table>>];
    bb8__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>_19 = {closure@programs/drift/src/macros.rs:70:40: 70:43}<br/></td></tr><tr><td align="left">_16 = std::result::Result::&lt;Ref&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:70:40: 70:43}&gt;(move _17, move _19)</td></tr></table>>];
    bb9__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">_15 = &lt;std::result::Result&lt;Ref&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _16)</td></tr></table>>];
    bb10__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>_20 = discriminant(_15)<br/></td></tr><tr><td align="left">switchInt(move _20)</td></tr></table>>];
    bb11__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_24)<br/>_24 = move ((_15 as Continue).0: std::cell::Ref&lt;'_, state::user::User&gt;)<br/>_14 = move _24<br/>StorageDead(_24)<br/>_291 = discriminant(_15)<br/>StorageDead(_15)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_283 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_35 = &amp;(*_283)<br/></td></tr><tr><td align="left">_34 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _35)</td></tr></table>>];
    bb12__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_15 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_23)<br/>_23 = _21<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _23)</td></tr></table>>];
    bb13__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageDead(_21)<br/>_289 = discriminant(_15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _34)</td></tr></table>>];
    bb15__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = &amp;mut _33<br/>_31 = &amp;mut (*_32)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/></td></tr><tr><td align="left">_38 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb16__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">_37 = &amp;_38<br/>_36 = &amp;(*_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/></td></tr><tr><td align="left">_41 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb17__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_40 = &amp;_41<br/>_39 = &amp;(*_40)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb18__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">_44 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _45)</td></tr></table>>];
    bb19__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_285 = const true<br/>_286 = const true<br/>StorageDead(_45)<br/>_46 = discriminant(_44)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb20__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_44 as Continue).0: anchor_lang::prelude::Clock)<br/>_43 = move _50<br/>StorageDead(_50)<br/>_42 = (_43.0: u64)<br/>StorageLive(_51)<br/>_51 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_30 = load_maps(move _31, move _36, move _39, move _42, move _51)</td></tr></table>>];
    bb21__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_44 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb22__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">_29 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _30)</td></tr></table>>];
    bb24__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_52 = discriminant(_29)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb25__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = move ((_29 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_28 = move _56<br/>StorageDead(_56)<br/>StorageLive(_25)<br/>_25 = move (_28.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_26)<br/>_26 = move (_28.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_27)<br/>_27 = move (_28.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_295 = discriminant(_29)<br/>_297 = discriminant(_44)<br/>_285 = const false<br/>_286 = const false<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb26__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_29 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb27__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>_293 = discriminant(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb29__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_64 = &amp;_14<br/>_63 = &amp;(*_64)<br/></td></tr><tr><td align="left">_62 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _63)</td></tr></table>>];
    bb30__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_61 = &amp;(*_62)<br/>StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;_25<br/>_65 = &amp;(*_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_26<br/>_67 = &amp;(*_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;mut _27<br/>_69 = &amp;mut (*_70)<br/></td></tr><tr><td align="left">_60 = calculate_user_equity(move _61, move _65, move _67, move _69)</td></tr></table>>];
    bb31__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_59 = &lt;std::result::Result&lt;(i128, bool), error::ErrorCode&gt; as Try&gt;::branch(move _60)</td></tr></table>>];
    bb32__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>_71 = discriminant(_59)<br/></td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb33__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>_75 = ((_59 as Continue).0: (i128, bool))<br/>_58 = _75<br/>StorageDead(_75)<br/>StorageLive(_57)<br/>_57 = (_58.0: i128)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_278 = const _<br/>_86 = &amp;(*_278)<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;_14<br/></td></tr><tr><td align="left">_95 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _96)</td></tr></table>>];
    bb34__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_59 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_74)<br/>_74 = _72<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _74)</td></tr></table>>];
    bb35__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_72)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_59)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_94 = &amp;((*_95).0: anchor_lang::prelude::Pubkey)<br/>_93 = &amp;(*_94)<br/></td></tr><tr><td align="left">_92 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _93)</td></tr></table>>];
    bb37__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>_101 = &amp;_14<br/></td></tr><tr><td align="left">_100 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _101)</td></tr></table>>];
    bb38__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>_99 = &amp;((*_100).18: u16)<br/>_98 = &amp;(*_99)<br/></td></tr><tr><td align="left">_97 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _98)</td></tr></table>>];
    bb39__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;_12<br/>_103 = &amp;(*_104)<br/></td></tr><tr><td align="left">_102 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;anchor_lang::prelude::Pubkey&gt;(move _103)</td></tr></table>>];
    bb40__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_91 = [move _92, move _97, move _102]<br/>StorageDead(_102)<br/>StorageDead(_97)<br/>StorageDead(_92)<br/>_90 = &amp;_91<br/>_89 = &amp;(*_90)<br/>_88 = move _89 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_83 = Arguments::&lt;'_&gt;::new_v1(move _84, move _88)</td></tr></table>>];
    bb41__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">_82 = format(move _83)</td></tr></table>>];
    bb42__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_104)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_86)<br/>_81 = move _82<br/>StorageDead(_82)<br/>_80 = &amp;_81<br/>_79 = &amp;(*_80)<br/></td></tr><tr><td align="left">_78 = &lt;String as Deref&gt;::deref(move _79)</td></tr></table>>];
    bb43__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_77 = &amp;(*_78)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_76 = solana_program::log::sol_log(move _77)</td></tr></table>>];
    bb44__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/></td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb45__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_78)<br/>StorageDead(_76)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_277 = const _<br/>_115 = &amp;(*_277)<br/>_114 = &amp;(*_115)<br/>_113 = move _114 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_114)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_123 = &amp;_57<br/>_122 = &amp;(*_123)<br/></td></tr><tr><td align="left">_121 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _122)</td></tr></table>>];
    bb46__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_120 = [move _121]<br/>StorageDead(_121)<br/>_119 = &amp;_120<br/>_118 = &amp;(*_119)<br/>_117 = move _118 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_112 = Arguments::&lt;'_&gt;::new_v1(move _113, move _117)</td></tr></table>>];
    bb47__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = format(move _112)</td></tr></table>>];
    bb48__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_123)<br/>StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_115)<br/>_110 = move _111<br/>StorageDead(_111)<br/>_109 = &amp;_110<br/>_108 = &amp;(*_109)<br/></td></tr><tr><td align="left">_107 = &lt;String as Deref&gt;::deref(move _108)</td></tr></table>>];
    bb49__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">_106 = &amp;(*_107)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_105 = solana_program::log::sol_log(move _106)</td></tr></table>>];
    bb50__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/></td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb51__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_105)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = &amp;_14<br/></td></tr><tr><td align="left">_129 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _130)</td></tr></table>>];
    bb52__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>_128 = &amp;((*_129).3: [state::user::SpotPosition; 8])<br/>_127 = move _128 as &amp;[state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = core::slice::&lt;impl [SpotPosition]&gt;::iter(move _127)</td></tr></table>>];
    bb53__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/></td></tr><tr><td align="left">_125 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as IntoIterator&gt;::into_iter(move _126)</td></tr></table>>];
    bb54__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageLive(_131)<br/>_131 = move _125<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>_136 = &amp;mut _131<br/>_135 = &amp;mut (*_136)<br/></td></tr><tr><td align="left">_134 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as Iterator&gt;::next(move _135)</td></tr></table>>];
    bb56__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>_137 = discriminant(_134)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb57__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = ((_134 as Some).0: &amp;state::user::SpotPosition)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = ((*_139).0: u64)<br/>_141 = Eq(move _142, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _141)</td></tr></table>>];
    bb58__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_124 = const ()<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>_196 = &amp;_14<br/></td></tr><tr><td align="left">_195 = &lt;Ref&lt;'_, User&gt; as Deref&gt;::deref(move _196)</td></tr></table>>];
    bb59__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_140 = const ()<br/>StorageDead(_141)<br/>StorageDead(_140)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>_147 = &amp;_26<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;((*_139).4: u16)<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_146 = SpotMarketMap::&lt;'_&gt;::get_ref(move _147, move _148)</td></tr></table>>];
    bb61__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>StorageDead(_147)<br/></td></tr><tr><td align="left">_145 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _146)</td></tr></table>>];
    bb62__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>_150 = discriminant(_145)<br/></td></tr><tr><td align="left">switchInt(move _150)</td></tr></table>>];
    bb63__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_154)<br/>_154 = move ((_145 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_144 = move _154<br/>StorageDead(_154)<br/>_301 = discriminant(_145)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>_158 = &amp;(*_139)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_144<br/>_161 = &amp;(*_162)<br/></td></tr><tr><td align="left">_160 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _161)</td></tr></table>>];
    bb64__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_151)<br/>_151 = ((_145 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_153)<br/>_153 = _151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _153)</td></tr></table>>];
    bb65__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_153)<br/>StorageDead(_151)<br/>_299 = discriminant(_145)<br/>StorageDead(_149)<br/>StorageDead(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_159 = &amp;(*_160)<br/>StorageDead(_161)<br/></td></tr><tr><td align="left">_157 = SpotPosition::get_signed_token_amount(move _158, move _159)</td></tr></table>>];
    bb67__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_156 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _157)</td></tr></table>>];
    bb68__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>_163 = discriminant(_156)<br/></td></tr><tr><td align="left">switchInt(move _163)</td></tr></table>>];
    bb69__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_167)<br/>_167 = ((_156 as Continue).0: i128)<br/>_155 = _167<br/>StorageDead(_167)<br/>StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_156)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>_275 = const _<br/>_178 = &amp;(*_275)<br/>_177 = &amp;(*_178)<br/>_176 = move _177 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_177)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;((*_139).4: u16)<br/>_185 = &amp;(*_186)<br/></td></tr><tr><td align="left">_184 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _185)</td></tr></table>>];
    bb70__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageLive(_164)<br/>_164 = ((_156 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_166)<br/>_166 = _164<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _166)</td></tr></table>>];
    bb71__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_156)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb72__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_189 = &amp;_155<br/>_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_187 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _188)</td></tr></table>>];
    bb73__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>_183 = [move _184, move _187]<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>_182 = &amp;_183<br/>_181 = &amp;(*_182)<br/>_180 = move _181 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_181)<br/></td></tr><tr><td align="left">_175 = Arguments::&lt;'_&gt;::new_v1(move _176, move _180)</td></tr></table>>];
    bb74__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">_174 = format(move _175)</td></tr></table>>];
    bb75__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_189)<br/>StorageDead(_186)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageDead(_178)<br/>_173 = move _174<br/>StorageDead(_174)<br/>_172 = &amp;_173<br/>_171 = &amp;(*_172)<br/></td></tr><tr><td align="left">_170 = &lt;String as Deref&gt;::deref(move _171)</td></tr></table>>];
    bb76__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_169 = &amp;(*_170)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">_168 = solana_program::log::sol_log(move _169)</td></tr></table>>];
    bb77__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/></td></tr><tr><td align="left">drop(_173)</td></tr></table>>];
    bb78__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_172)<br/>StorageDead(_170)<br/>StorageDead(_168)<br/>_133 = const ()<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb79__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>_132 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_194 = &amp;((*_195).4: [state::user::PerpPosition; 8])<br/>_193 = move _194 as &amp;[state::user::PerpPosition] (PointerCoercion(Unsize))<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_192 = core::slice::&lt;impl [PerpPosition]&gt;::iter(move _193)</td></tr></table>>];
    bb81__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/></td></tr><tr><td align="left">_191 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as IntoIterator&gt;::into_iter(move _192)</td></tr></table>>];
    bb82__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageLive(_197)<br/>_197 = move _191<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>_201 = &amp;mut _197<br/>_200 = &amp;mut (*_201)<br/></td></tr><tr><td align="left">_199 = &lt;std::slice::Iter&lt;'_, PerpPosition&gt; as Iterator&gt;::next(move _200)</td></tr></table>>];
    bb84__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_200)<br/>_202 = discriminant(_199)<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb85__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_204)<br/>_204 = ((_199 as Some).0: &amp;state::user::PerpPosition)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>_207 = &amp;(*_204)<br/></td></tr><tr><td align="left">_206 = PerpPosition::is_available(move _207)</td></tr></table>>];
    bb86__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">_190 = const ()<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>StorageLive(_274)<br/>_274 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _274)<br/>StorageDead(_274)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb87__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb88__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>_205 = const ()<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>_212 = &amp;_25<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;((*_204).13: u16)<br/>_213 = &amp;(*_214)<br/></td></tr><tr><td align="left">_211 = PerpMarketMap::&lt;'_&gt;::get_ref(move _212, move _213)</td></tr></table>>];
    bb90__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">_210 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _211)</td></tr></table>>];
    bb91__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_215 = discriminant(_210)<br/></td></tr><tr><td align="left">switchInt(move _215)</td></tr></table>>];
    bb92__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = move ((_210 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_209 = move _219<br/>StorageDead(_219)<br/>_305 = discriminant(_210)<br/>StorageDead(_214)<br/>StorageDead(_210)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = &amp;mut _27<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>_230 = &amp;_209<br/></td></tr><tr><td align="left">_229 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _230)</td></tr></table>>];
    bb93__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = ((_210 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_218)<br/>_218 = _216<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _218)</td></tr></table>>];
    bb94__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/>_303 = discriminant(_210)<br/>StorageDead(_214)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">_228 = &amp;(*_229)<br/>StorageDead(_230)<br/></td></tr><tr><td align="left">_227 = PerpMarket::oracle_id(move _228)</td></tr></table>>];
    bb96__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_228)<br/>_226 = &amp;_227<br/>_225 = &amp;(*_226)<br/></td></tr><tr><td align="left">_223 = OracleMap::&lt;'_&gt;::get_price_data(move _224, move _225)</td></tr></table>>];
    bb97__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_224)<br/></td></tr><tr><td align="left">_222 = &lt;std::result::Result&lt;&amp;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _223)</td></tr></table>>];
    bb98__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>_231 = discriminant(_222)<br/></td></tr><tr><td align="left">switchInt(move _231)</td></tr></table>>];
    bb99__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_235)<br/>_235 = ((_222 as Continue).0: &amp;state::oracle::OraclePriceData)<br/>_221 = _235<br/>StorageDead(_235)<br/>_220 = ((*_221).0: i64)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;_204<br/>_284 = deref_copy (*_241)<br/>_240 = &amp;(*_284)<br/>StorageLive(_242)<br/>_242 = _220<br/></td></tr><tr><td align="left">_239 = calculate_base_asset_value_and_pnl_with_oracle_price(move _240, move _242)</td></tr></table>>];
    bb100__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_232)<br/>_232 = ((_222 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_234)<br/>_234 = _232<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _234)</td></tr></table>>];
    bb101__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_222)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_242)<br/>StorageDead(_240)<br/></td></tr><tr><td align="left">_238 = &lt;std::result::Result&lt;(u128, i128), error::ErrorCode&gt; as Try&gt;::branch(move _239)</td></tr></table>>];
    bb103__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_239)<br/>_243 = discriminant(_238)<br/></td></tr><tr><td align="left">switchInt(move _243)</td></tr></table>>];
    bb104__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageLive(_247)<br/>_247 = ((_238 as Continue).0: (u128, i128))<br/>_237 = _247<br/>StorageDead(_247)<br/>StorageLive(_236)<br/>_236 = (_237.1: i128)<br/>StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_237)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>_250 = _236<br/>_249 = Eq(move _250, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb105__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageLive(_244)<br/>_244 = ((_238 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_246)<br/>_246 = _244<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _246)</td></tr></table>>];
    bb106__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_241)<br/>StorageDead(_238)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb107__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>StorageDead(_249)<br/>StorageDead(_248)<br/>StorageDead(_236)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb108__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/>_248 = const ()<br/>StorageDead(_249)<br/>StorageDead(_248)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>_276 = const _<br/>_262 = &amp;(*_276)<br/>_261 = &amp;(*_262)<br/>_260 = move _261 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_261)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>_270 = &amp;((*_204).13: u16)<br/>_269 = &amp;(*_270)<br/></td></tr><tr><td align="left">_268 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _269)</td></tr></table>>];
    bb109__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>_273 = &amp;_236<br/>_272 = &amp;(*_273)<br/></td></tr><tr><td align="left">_271 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i128&gt;(move _272)</td></tr></table>>];
    bb110__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>_267 = [move _268, move _271]<br/>StorageDead(_271)<br/>StorageDead(_268)<br/>_266 = &amp;_267<br/>_265 = &amp;(*_266)<br/>_264 = move _265 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_259 = Arguments::&lt;'_&gt;::new_v1(move _260, move _264)</td></tr></table>>];
    bb111__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_258 = format(move _259)</td></tr></table>>];
    bb112__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_273)<br/>StorageDead(_270)<br/>StorageDead(_267)<br/>StorageDead(_266)<br/>StorageDead(_262)<br/>_257 = move _258<br/>StorageDead(_258)<br/>_256 = &amp;_257<br/>_255 = &amp;(*_256)<br/></td></tr><tr><td align="left">_254 = &lt;String as Deref&gt;::deref(move _255)</td></tr></table>>];
    bb113__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">_253 = &amp;(*_254)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_252 = solana_program::log::sol_log(move _253)</td></tr></table>>];
    bb114__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/></td></tr><tr><td align="left">drop(_257)</td></tr></table>>];
    bb115__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_256)<br/>StorageDead(_254)<br/>StorageDead(_252)<br/>_198 = const ()<br/>StorageDead(_236)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb116__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_204)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>_132 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb118__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb120__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb121__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb122__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_220)<br/></td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb124__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_204)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_191)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/>StorageDead(_139)<br/>StorageDead(_136)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_125)<br/>StorageDead(_124)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb128__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb129__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb130__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_307 = discriminant(_44)<br/>_285 = const false<br/>_286 = const false<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb132__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/></td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb133__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_37)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb135__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left">return</td></tr></table>>];
    bb137__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">137 (cleanup)</td></tr><tr><td align="left">drop(_257)</td></tr></table>>];
    bb138__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">138 (cleanup)</td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb139__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">139 (cleanup)</td></tr><tr><td align="left">drop(_173)</td></tr></table>>];
    bb140__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">140 (cleanup)</td></tr><tr><td align="left">drop(_144)</td></tr></table>>];
    bb141__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">141 (cleanup)</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb142__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">142 (cleanup)</td></tr><tr><td align="left">drop(_81)</td></tr></table>>];
    bb143__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">143 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb144__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">144 (cleanup)</td></tr><tr><td align="left">drop(_27)</td></tr></table>>];
    bb145__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">145 (cleanup)</td></tr><tr><td align="left">drop(_26)</td></tr></table>>];
    bb146__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">146 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb147__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">147 (cleanup)</td></tr><tr><td align="left">drop(_41)</td></tr></table>>];
    bb148__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">148 (cleanup)</td></tr><tr><td align="left">drop(_38)</td></tr></table>>];
    bb149__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">149 (cleanup)</td></tr><tr><td align="left">drop(_14)</td></tr></table>>];
    bb150__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">150 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb151__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">151 (cleanup)</td></tr><tr><td align="left" balign="left">_311 = discriminant(_210)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb152__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">152 (cleanup)</td></tr><tr><td align="left" balign="left">_312 = discriminant(_145)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">153 (cleanup)</td></tr><tr><td align="left" balign="left">_315 = discriminant(_29)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb154__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">154 (cleanup)</td></tr><tr><td align="left" balign="left">_316 = discriminant(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">155 (cleanup)</td></tr><tr><td align="left" balign="left">_317 = discriminant(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_9215 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">156 (cleanup)</td></tr><tr><td align="left" balign="left">_318 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9215 -> bb1__0_9215 [label="return"];
    bb1__0_9215 -> bb2__0_9215 [label="return"];
    bb1__0_9215 -> bb150__0_9215 [label="unwind"];
    bb2__0_9215 -> bb3__0_9215 [label="0"];
    bb2__0_9215 -> bb5__0_9215 [label="1"];
    bb2__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb3__0_9215 -> bb7__0_9215 [label="return"];
    bb5__0_9215 -> bb6__0_9215 [label="return"];
    bb5__0_9215 -> bb156__0_9215 [label="unwind"];
    bb6__0_9215 -> bb136__0_9215 [label=""];
    bb7__0_9215 -> bb8__0_9215 [label="return"];
    bb8__0_9215 -> bb9__0_9215 [label="return"];
    bb8__0_9215 -> bb150__0_9215 [label="unwind"];
    bb9__0_9215 -> bb10__0_9215 [label="return"];
    bb9__0_9215 -> bb150__0_9215 [label="unwind"];
    bb10__0_9215 -> bb11__0_9215 [label="0"];
    bb10__0_9215 -> bb12__0_9215 [label="1"];
    bb10__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb11__0_9215 -> bb14__0_9215 [label="return"];
    bb11__0_9215 -> bb149__0_9215 [label="unwind"];
    bb12__0_9215 -> bb13__0_9215 [label="return"];
    bb12__0_9215 -> bb155__0_9215 [label="unwind"];
    bb13__0_9215 -> bb135__0_9215 [label=""];
    bb14__0_9215 -> bb15__0_9215 [label="return"];
    bb14__0_9215 -> bb149__0_9215 [label="unwind"];
    bb15__0_9215 -> bb16__0_9215 [label="return"];
    bb15__0_9215 -> bb149__0_9215 [label="unwind"];
    bb16__0_9215 -> bb17__0_9215 [label="return"];
    bb16__0_9215 -> bb148__0_9215 [label="unwind"];
    bb17__0_9215 -> bb18__0_9215 [label="return"];
    bb17__0_9215 -> bb147__0_9215 [label="unwind"];
    bb18__0_9215 -> bb19__0_9215 [label="return"];
    bb18__0_9215 -> bb147__0_9215 [label="unwind"];
    bb19__0_9215 -> bb20__0_9215 [label="0"];
    bb19__0_9215 -> bb21__0_9215 [label="1"];
    bb19__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb20__0_9215 -> bb23__0_9215 [label="return"];
    bb20__0_9215 -> bb154__0_9215 [label="unwind"];
    bb21__0_9215 -> bb22__0_9215 [label="return"];
    bb21__0_9215 -> bb154__0_9215 [label="unwind"];
    bb22__0_9215 -> bb131__0_9215 [label=""];
    bb23__0_9215 -> bb24__0_9215 [label="return"];
    bb23__0_9215 -> bb154__0_9215 [label="unwind"];
    bb24__0_9215 -> bb25__0_9215 [label="0"];
    bb24__0_9215 -> bb26__0_9215 [label="1"];
    bb24__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb25__0_9215 -> bb28__0_9215 [label="return"];
    bb25__0_9215 -> bb143__0_9215 [label="unwind"];
    bb26__0_9215 -> bb27__0_9215 [label="return"];
    bb26__0_9215 -> bb153__0_9215 [label="unwind"];
    bb27__0_9215 -> bb131__0_9215 [label=""];
    bb28__0_9215 -> bb29__0_9215 [label="return"];
    bb28__0_9215 -> bb144__0_9215 [label="unwind"];
    bb29__0_9215 -> bb30__0_9215 [label="return"];
    bb29__0_9215 -> bb144__0_9215 [label="unwind"];
    bb30__0_9215 -> bb31__0_9215 [label="return"];
    bb30__0_9215 -> bb144__0_9215 [label="unwind"];
    bb31__0_9215 -> bb32__0_9215 [label="return"];
    bb31__0_9215 -> bb144__0_9215 [label="unwind"];
    bb32__0_9215 -> bb33__0_9215 [label="0"];
    bb32__0_9215 -> bb34__0_9215 [label="1"];
    bb32__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb33__0_9215 -> bb36__0_9215 [label="return"];
    bb33__0_9215 -> bb144__0_9215 [label="unwind"];
    bb34__0_9215 -> bb35__0_9215 [label="return"];
    bb34__0_9215 -> bb144__0_9215 [label="unwind"];
    bb35__0_9215 -> bb127__0_9215 [label=""];
    bb36__0_9215 -> bb37__0_9215 [label="return"];
    bb36__0_9215 -> bb144__0_9215 [label="unwind"];
    bb37__0_9215 -> bb38__0_9215 [label="return"];
    bb37__0_9215 -> bb144__0_9215 [label="unwind"];
    bb38__0_9215 -> bb39__0_9215 [label="return"];
    bb38__0_9215 -> bb144__0_9215 [label="unwind"];
    bb39__0_9215 -> bb40__0_9215 [label="return"];
    bb39__0_9215 -> bb144__0_9215 [label="unwind"];
    bb40__0_9215 -> bb41__0_9215 [label="return"];
    bb40__0_9215 -> bb144__0_9215 [label="unwind"];
    bb41__0_9215 -> bb42__0_9215 [label="return"];
    bb41__0_9215 -> bb144__0_9215 [label="unwind"];
    bb42__0_9215 -> bb43__0_9215 [label="return"];
    bb42__0_9215 -> bb142__0_9215 [label="unwind"];
    bb43__0_9215 -> bb44__0_9215 [label="return"];
    bb43__0_9215 -> bb142__0_9215 [label="unwind"];
    bb44__0_9215 -> bb45__0_9215 [label="return"];
    bb44__0_9215 -> bb144__0_9215 [label="unwind"];
    bb45__0_9215 -> bb46__0_9215 [label="return"];
    bb45__0_9215 -> bb144__0_9215 [label="unwind"];
    bb46__0_9215 -> bb47__0_9215 [label="return"];
    bb46__0_9215 -> bb144__0_9215 [label="unwind"];
    bb47__0_9215 -> bb48__0_9215 [label="return"];
    bb47__0_9215 -> bb144__0_9215 [label="unwind"];
    bb48__0_9215 -> bb49__0_9215 [label="return"];
    bb48__0_9215 -> bb141__0_9215 [label="unwind"];
    bb49__0_9215 -> bb50__0_9215 [label="return"];
    bb49__0_9215 -> bb141__0_9215 [label="unwind"];
    bb50__0_9215 -> bb51__0_9215 [label="return"];
    bb50__0_9215 -> bb144__0_9215 [label="unwind"];
    bb51__0_9215 -> bb52__0_9215 [label="return"];
    bb51__0_9215 -> bb144__0_9215 [label="unwind"];
    bb52__0_9215 -> bb53__0_9215 [label="return"];
    bb52__0_9215 -> bb144__0_9215 [label="unwind"];
    bb53__0_9215 -> bb54__0_9215 [label="return"];
    bb53__0_9215 -> bb144__0_9215 [label="unwind"];
    bb54__0_9215 -> bb55__0_9215 [label=""];
    bb55__0_9215 -> bb56__0_9215 [label="return"];
    bb55__0_9215 -> bb144__0_9215 [label="unwind"];
    bb56__0_9215 -> bb58__0_9215 [label="0"];
    bb56__0_9215 -> bb57__0_9215 [label="1"];
    bb56__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb57__0_9215 -> bb60__0_9215 [label="0"];
    bb57__0_9215 -> bb59__0_9215 [label="otherwise"];
    bb58__0_9215 -> bb80__0_9215 [label="return"];
    bb58__0_9215 -> bb144__0_9215 [label="unwind"];
    bb59__0_9215 -> bb55__0_9215 [label=""];
    bb60__0_9215 -> bb61__0_9215 [label="return"];
    bb60__0_9215 -> bb144__0_9215 [label="unwind"];
    bb61__0_9215 -> bb62__0_9215 [label="return"];
    bb61__0_9215 -> bb144__0_9215 [label="unwind"];
    bb62__0_9215 -> bb63__0_9215 [label="0"];
    bb62__0_9215 -> bb64__0_9215 [label="1"];
    bb62__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb63__0_9215 -> bb66__0_9215 [label="return"];
    bb63__0_9215 -> bb140__0_9215 [label="unwind"];
    bb64__0_9215 -> bb65__0_9215 [label="return"];
    bb64__0_9215 -> bb152__0_9215 [label="unwind"];
    bb65__0_9215 -> bb125__0_9215 [label=""];
    bb66__0_9215 -> bb67__0_9215 [label="return"];
    bb66__0_9215 -> bb140__0_9215 [label="unwind"];
    bb67__0_9215 -> bb68__0_9215 [label="return"];
    bb67__0_9215 -> bb140__0_9215 [label="unwind"];
    bb68__0_9215 -> bb69__0_9215 [label="0"];
    bb68__0_9215 -> bb70__0_9215 [label="1"];
    bb68__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb69__0_9215 -> bb72__0_9215 [label="return"];
    bb69__0_9215 -> bb140__0_9215 [label="unwind"];
    bb70__0_9215 -> bb71__0_9215 [label="return"];
    bb70__0_9215 -> bb140__0_9215 [label="unwind"];
    bb71__0_9215 -> bb125__0_9215 [label="return"];
    bb71__0_9215 -> bb144__0_9215 [label="unwind"];
    bb72__0_9215 -> bb73__0_9215 [label="return"];
    bb72__0_9215 -> bb140__0_9215 [label="unwind"];
    bb73__0_9215 -> bb74__0_9215 [label="return"];
    bb73__0_9215 -> bb140__0_9215 [label="unwind"];
    bb74__0_9215 -> bb75__0_9215 [label="return"];
    bb74__0_9215 -> bb140__0_9215 [label="unwind"];
    bb75__0_9215 -> bb76__0_9215 [label="return"];
    bb75__0_9215 -> bb139__0_9215 [label="unwind"];
    bb76__0_9215 -> bb77__0_9215 [label="return"];
    bb76__0_9215 -> bb139__0_9215 [label="unwind"];
    bb77__0_9215 -> bb78__0_9215 [label="return"];
    bb77__0_9215 -> bb140__0_9215 [label="unwind"];
    bb78__0_9215 -> bb79__0_9215 [label="return"];
    bb78__0_9215 -> bb144__0_9215 [label="unwind"];
    bb79__0_9215 -> bb55__0_9215 [label=""];
    bb80__0_9215 -> bb81__0_9215 [label="return"];
    bb80__0_9215 -> bb144__0_9215 [label="unwind"];
    bb81__0_9215 -> bb82__0_9215 [label="return"];
    bb81__0_9215 -> bb144__0_9215 [label="unwind"];
    bb82__0_9215 -> bb83__0_9215 [label=""];
    bb83__0_9215 -> bb84__0_9215 [label="return"];
    bb83__0_9215 -> bb144__0_9215 [label="unwind"];
    bb84__0_9215 -> bb86__0_9215 [label="0"];
    bb84__0_9215 -> bb85__0_9215 [label="1"];
    bb84__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb85__0_9215 -> bb87__0_9215 [label="return"];
    bb85__0_9215 -> bb144__0_9215 [label="unwind"];
    bb86__0_9215 -> bb119__0_9215 [label="return"];
    bb86__0_9215 -> bb145__0_9215 [label="unwind"];
    bb87__0_9215 -> bb89__0_9215 [label="0"];
    bb87__0_9215 -> bb88__0_9215 [label="otherwise"];
    bb88__0_9215 -> bb118__0_9215 [label=""];
    bb89__0_9215 -> bb90__0_9215 [label="return"];
    bb89__0_9215 -> bb144__0_9215 [label="unwind"];
    bb90__0_9215 -> bb91__0_9215 [label="return"];
    bb90__0_9215 -> bb144__0_9215 [label="unwind"];
    bb91__0_9215 -> bb92__0_9215 [label="0"];
    bb91__0_9215 -> bb93__0_9215 [label="1"];
    bb91__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb92__0_9215 -> bb95__0_9215 [label="return"];
    bb92__0_9215 -> bb138__0_9215 [label="unwind"];
    bb93__0_9215 -> bb94__0_9215 [label="return"];
    bb93__0_9215 -> bb151__0_9215 [label="unwind"];
    bb94__0_9215 -> bb124__0_9215 [label=""];
    bb95__0_9215 -> bb96__0_9215 [label="return"];
    bb95__0_9215 -> bb138__0_9215 [label="unwind"];
    bb96__0_9215 -> bb97__0_9215 [label="return"];
    bb96__0_9215 -> bb138__0_9215 [label="unwind"];
    bb97__0_9215 -> bb98__0_9215 [label="return"];
    bb97__0_9215 -> bb138__0_9215 [label="unwind"];
    bb98__0_9215 -> bb99__0_9215 [label="0"];
    bb98__0_9215 -> bb100__0_9215 [label="1"];
    bb98__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb99__0_9215 -> bb102__0_9215 [label="return"];
    bb99__0_9215 -> bb138__0_9215 [label="unwind"];
    bb100__0_9215 -> bb101__0_9215 [label="return"];
    bb100__0_9215 -> bb138__0_9215 [label="unwind"];
    bb101__0_9215 -> bb123__0_9215 [label=""];
    bb102__0_9215 -> bb103__0_9215 [label="return"];
    bb102__0_9215 -> bb138__0_9215 [label="unwind"];
    bb103__0_9215 -> bb104__0_9215 [label="0"];
    bb103__0_9215 -> bb105__0_9215 [label="1"];
    bb103__0_9215 -> bb4__0_9215 [label="otherwise"];
    bb104__0_9215 -> bb108__0_9215 [label="0"];
    bb104__0_9215 -> bb107__0_9215 [label="otherwise"];
    bb105__0_9215 -> bb106__0_9215 [label="return"];
    bb105__0_9215 -> bb138__0_9215 [label="unwind"];
    bb106__0_9215 -> bb123__0_9215 [label=""];
    bb107__0_9215 -> bb117__0_9215 [label="return"];
    bb107__0_9215 -> bb144__0_9215 [label="unwind"];
    bb108__0_9215 -> bb109__0_9215 [label="return"];
    bb108__0_9215 -> bb138__0_9215 [label="unwind"];
    bb109__0_9215 -> bb110__0_9215 [label="return"];
    bb109__0_9215 -> bb138__0_9215 [label="unwind"];
    bb110__0_9215 -> bb111__0_9215 [label="return"];
    bb110__0_9215 -> bb138__0_9215 [label="unwind"];
    bb111__0_9215 -> bb112__0_9215 [label="return"];
    bb111__0_9215 -> bb138__0_9215 [label="unwind"];
    bb112__0_9215 -> bb113__0_9215 [label="return"];
    bb112__0_9215 -> bb137__0_9215 [label="unwind"];
    bb113__0_9215 -> bb114__0_9215 [label="return"];
    bb113__0_9215 -> bb137__0_9215 [label="unwind"];
    bb114__0_9215 -> bb115__0_9215 [label="return"];
    bb114__0_9215 -> bb138__0_9215 [label="unwind"];
    bb115__0_9215 -> bb116__0_9215 [label="return"];
    bb115__0_9215 -> bb144__0_9215 [label="unwind"];
    bb116__0_9215 -> bb83__0_9215 [label=""];
    bb117__0_9215 -> bb118__0_9215 [label=""];
    bb118__0_9215 -> bb83__0_9215 [label=""];
    bb119__0_9215 -> bb120__0_9215 [label="return"];
    bb119__0_9215 -> bb146__0_9215 [label="unwind"];
    bb120__0_9215 -> bb121__0_9215 [label="return"];
    bb120__0_9215 -> bb149__0_9215 [label="unwind"];
    bb121__0_9215 -> bb122__0_9215 [label="return"];
    bb121__0_9215 -> bb150__0_9215 [label="unwind"];
    bb122__0_9215 -> bb136__0_9215 [label=""];
    bb123__0_9215 -> bb124__0_9215 [label="return"];
    bb123__0_9215 -> bb144__0_9215 [label="unwind"];
    bb124__0_9215 -> bb126__0_9215 [label=""];
    bb125__0_9215 -> bb126__0_9215 [label=""];
    bb126__0_9215 -> bb127__0_9215 [label=""];
    bb127__0_9215 -> bb128__0_9215 [label="return"];
    bb127__0_9215 -> bb145__0_9215 [label="unwind"];
    bb128__0_9215 -> bb129__0_9215 [label="return"];
    bb128__0_9215 -> bb146__0_9215 [label="unwind"];
    bb129__0_9215 -> bb130__0_9215 [label="return"];
    bb129__0_9215 -> bb149__0_9215 [label="unwind"];
    bb130__0_9215 -> bb134__0_9215 [label=""];
    bb131__0_9215 -> bb132__0_9215 [label="return"];
    bb131__0_9215 -> bb148__0_9215 [label="unwind"];
    bb132__0_9215 -> bb133__0_9215 [label="return"];
    bb132__0_9215 -> bb149__0_9215 [label="unwind"];
    bb133__0_9215 -> bb134__0_9215 [label=""];
    bb134__0_9215 -> bb135__0_9215 [label="return"];
    bb134__0_9215 -> bb150__0_9215 [label="unwind"];
    bb135__0_9215 -> bb136__0_9215 [label=""];
    bb137__0_9215 -> bb138__0_9215 [label="return"];
    bb138__0_9215 -> bb144__0_9215 [label="return"];
    bb139__0_9215 -> bb140__0_9215 [label="return"];
    bb140__0_9215 -> bb144__0_9215 [label="return"];
    bb141__0_9215 -> bb144__0_9215 [label="return"];
    bb142__0_9215 -> bb144__0_9215 [label="return"];
    bb143__0_9215 -> bb144__0_9215 [label="return"];
    bb144__0_9215 -> bb145__0_9215 [label="return"];
    bb145__0_9215 -> bb146__0_9215 [label="return"];
    bb146__0_9215 -> bb149__0_9215 [label="return"];
    bb147__0_9215 -> bb148__0_9215 [label="return"];
    bb148__0_9215 -> bb149__0_9215 [label="return"];
    bb149__0_9215 -> bb150__0_9215 [label="return"];
    bb151__0_9215 -> bb144__0_9215 [label=""];
    bb152__0_9215 -> bb144__0_9215 [label=""];
    bb153__0_9215 -> bb154__0_9215 [label=""];
    bb154__0_9215 -> bb147__0_9215 [label=""];
    bb155__0_9215 -> bb150__0_9215 [label=""];
    bb156__0_9215 -> bb150__0_9215 [label=""];
}
