// MIR for `fulfillment_params::drift::<impl at programs/drift/src/state/fulfillment_params/drift.rs:25:1: 25:36>::new` after PreCodegen

fn fulfillment_params::drift::<impl at programs/drift/src/state/fulfillment_params/drift.rs:25:1: 25:36>::new(_1: &mut Peekable<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>>, _2: &SpotMarket, _3: &SpotMarket) -> std::result::Result<MatchFulfillmentParams<'_>, error::ErrorCode> {
    debug account_info_iter => _1;
    debug base_market => _2;
    debug quote_market => _3;
    let mut _0: std::result::Result<state::fulfillment_params::drift::MatchFulfillmentParams<'_>, error::ErrorCode>;
    let _4: std::vec::Vec<&anchor_lang::prelude::AccountInfo<'_>>;
    let mut _5: &mut std::iter::Peekable<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>>;
    let _9: &[&anchor_lang::prelude::AccountInfo<'_>];
    let mut _10: &std::vec::Vec<&anchor_lang::prelude::AccountInfo<'_>>;
    let mut _11: std::ops::Range<usize>;
    let mut _12: usize;
    let mut _13: usize;
    let mut _14: usize;
    let mut _15: (usize, bool);
    let mut _16: &[&anchor_lang::prelude::AccountInfo<'_>];
    let _19: ();
    let mut _20: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _21: std::result::Result<(), error::ErrorCode>;
    let mut _22: bool;
    let mut _23: &&anchor_lang::prelude::Pubkey;
    let _24: &anchor_lang::prelude::Pubkey;
    let mut _25: &&anchor_lang::prelude::Pubkey;
    let mut _26: ();
    let _28: ();
    let mut _29: &str;
    let _30: &str;
    let mut _31: &std::string::String;
    let _32: &std::string::String;
    let _33: std::string::String;
    let mut _35: std::fmt::Arguments<'_>;
    let mut _36: &[&str];
    let mut _37: &[&str; 2];
    let _38: &[&str; 2];
    let _39: [&str; 2];
    let mut _40: &[core::fmt::rt::Argument<'_>];
    let mut _41: &[core::fmt::rt::Argument<'_>; 1];
    let _42: &[core::fmt::rt::Argument<'_>; 1];
    let _43: [core::fmt::rt::Argument<'_>; 1];
    let mut _44: core::fmt::rt::Argument<'_>;
    let mut _45: &error::ErrorCode;
    let _46: &error::ErrorCode;
    let mut _47: error::ErrorCode;
    let mut _48: isize;
    let mut _50: !;
    let mut _51: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let _53: ();
    let mut _54: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>>;
    let mut _55: std::result::Result<(), error::ErrorCode>;
    let mut _56: bool;
    let mut _57: &&anchor_lang::prelude::Pubkey;
    let _58: &anchor_lang::prelude::Pubkey;
    let mut _59: &&anchor_lang::prelude::Pubkey;
    let mut _60: ();
    let _62: ();
    let mut _63: &str;
    let _64: &str;
    let mut _65: &std::string::String;
    let _66: &std::string::String;
    let _67: std::string::String;
    let mut _69: std::fmt::Arguments<'_>;
    let mut _70: &[&str];
    let mut _71: &[&str; 2];
    let _72: &[&str; 2];
    let _73: [&str; 2];
    let mut _74: &[core::fmt::rt::Argument<'_>];
    let mut _75: &[core::fmt::rt::Argument<'_>; 1];
    let _76: &[core::fmt::rt::Argument<'_>; 1];
    let _77: [core::fmt::rt::Argument<'_>; 1];
    let mut _78: core::fmt::rt::Argument<'_>;
    let mut _79: &error::ErrorCode;
    let _80: &error::ErrorCode;
    let mut _81: error::ErrorCode;
    let mut _82: isize;
    let mut _84: !;
    let mut _85: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _88: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _89: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>, anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _90: std::result::Result<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, error::ErrorCode>;
    let mut _91: std::result::Result<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, anchor_lang::error::Error>;
    let mut _92: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _93: {closure@programs/drift/src/state/fulfillment_params/drift.rs:46:76: 46:79};
    let mut _94: isize;
    let mut _96: !;
    let mut _97: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _100: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
    let mut _101: std::ops::ControlFlow<std::result::Result<std::convert::Infallible, error::ErrorCode>, anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _102: std::result::Result<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, error::ErrorCode>;
    let mut _103: std::result::Result<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, anchor_lang::error::Error>;
    let mut _104: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _105: {closure@programs/drift/src/state/fulfillment_params/drift.rs:51:77: 51:80};
    let mut _106: isize;
    let mut _108: !;
    let mut _109: std::result::Result<std::convert::Infallible, error::ErrorCode>;
    let mut _111: state::fulfillment_params::drift::MatchFulfillmentParams<'_>;
    let mut _112: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _113: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
    let mut _116: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _117: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _118: &anchor_lang::prelude::AccountInfo<'_>;
    let mut _119: &anchor_lang::prelude::AccountInfo<'_>;
    scope 1 {
        debug account_info_vec => _4;
        let _6: &[&anchor_lang::prelude::AccountInfo<'_>; 2];
        let _7: usize;
        scope 2 {
            debug account_infos => _6;
            let _17: &&anchor_lang::prelude::AccountInfo<'_>;
            let _18: &&anchor_lang::prelude::AccountInfo<'_>;
            scope 7 {
                debug base_market_vault => _17;
                debug quote_market_vault => _18;
                let _27: error::ErrorCode;
                let _49: std::result::Result<std::convert::Infallible, error::ErrorCode>;
                let _52: ();
                let _61: error::ErrorCode;
                let _83: std::result::Result<std::convert::Infallible, error::ErrorCode>;
                let _86: ();
                let _87: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
                let _95: std::result::Result<std::convert::Infallible, error::ErrorCode>;
                let _98: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
                scope 8 {
                    debug error_code => _27;
                    let _34: std::string::String;
                    let mut _115: &[&str; 2];
                    scope 9 {
                        debug res => _34;
                    }
                }
                scope 10 {
                    debug residual => _49;
                    scope 11 {
                    }
                }
                scope 12 {
                    debug val => _52;
                    scope 13 {
                    }
                }
                scope 14 {
                    debug error_code => _61;
                    let _68: std::string::String;
                    let mut _114: &[&str; 2];
                    scope 15 {
                        debug res => _68;
                    }
                }
                scope 16 {
                    debug residual => _83;
                    scope 17 {
                    }
                }
                scope 18 {
                    debug val => _86;
                    scope 19 {
                    }
                }
                scope 20 {
                    debug base_market_vault => _87;
                    let _99: std::boxed::Box<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>;
                    let _107: std::result::Result<std::convert::Infallible, error::ErrorCode>;
                    let _110: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>;
                    scope 25 {
                        debug quote_market_vault => _99;
                    }
                    scope 26 {
                        debug residual => _107;
                        scope 27 {
                        }
                    }
                    scope 28 {
                        debug val => _110;
                        scope 29 {
                        }
                    }
                }
                scope 21 {
                    debug residual => _95;
                    scope 22 {
                    }
                }
                scope 23 {
                    debug val => _98;
                    scope 24 {
                    }
                }
            }
        }
        scope 3 {
            debug offset => _7;
            let _8: &[&anchor_lang::prelude::AccountInfo<'_>];
            scope 4 {
                debug slice => _8;
                scope 5 {
                    scope 6 {
                    }
                }
            }
        }
    }

    bb0: {
        StorageLive(_4);
        StorageLive(_5);
        _5 = &mut (*_1);
        _4 = <&mut Peekable<std::slice::Iter<'_, anchor_lang::prelude::AccountInfo<'_>>> as Iterator>::collect::<Vec<&anchor_lang::prelude::AccountInfo<'_>>>(move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_5);
        StorageLive(_6);
        StorageLive(_7);
        _7 = const 0_usize;
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &_4;
        StorageLive(_11);
        StorageLive(_12);
        _12 = _7;
        StorageLive(_13);
        StorageLive(_14);
        _14 = _7;
        _15 = CheckedAdd(_14, const 2_usize);
        assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _14, const 2_usize) -> [success: bb2, unwind: bb56];
    }

    bb2: {
        _13 = move (_15.0: usize);
        StorageDead(_14);
        _11 = std::ops::Range::<usize> { start: move _12, end: move _13 };
        StorageDead(_13);
        StorageDead(_12);
        _9 = <Vec<&anchor_lang::prelude::AccountInfo<'_>> as Index<std::ops::Range<usize>>>::index(move _10, move _11) -> [return: bb3, unwind: bb56];
    }

    bb3: {
        StorageDead(_11);
        StorageDead(_10);
        _8 = &(*_9);
        StorageLive(_16);
        _16 = &(*_8);
        _6 = MatchFulfillmentParams::<'a>::new::as_array::<&anchor_lang::prelude::AccountInfo<'_>>(move _16) -> [return: bb4, unwind: bb56];
    }

    bb4: {
        StorageDead(_16);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageLive(_17);
        _17 = &(*_6)[0 of 2];
        StorageLive(_18);
        _18 = &(*_6)[1 of 2];
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        _24 = &((*_2).3: anchor_lang::prelude::Pubkey);
        _23 = &_24;
        StorageLive(_25);
        _116 = deref_copy (*_17);
        _25 = &((*_116).0: &anchor_lang::prelude::Pubkey);
        _22 = <&anchor_lang::prelude::Pubkey as PartialEq>::eq(move _23, move _25) -> [return: bb5, unwind: bb56];
    }

    bb5: {
        switchInt(move _22) -> [0: bb7, otherwise: bb6];
    }

    bb6: {
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageLive(_26);
        _26 = ();
        _21 = std::result::Result::<(), error::ErrorCode>::Ok(move _26);
        StorageDead(_26);
        goto -> bb14;
    }

    bb7: {
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageLive(_27);
        _27 = error::ErrorCode::InvalidFulfillmentConfig;
        StorageLive(_28);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _115 = const _;
        _38 = &(*_115);
        _37 = &(*_38);
        _36 = move _37 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_37);
        StorageLive(_40);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &_27;
        _45 = &(*_46);
        _44 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _45) -> [return: bb8, unwind: bb56];
    }

    bb8: {
        StorageDead(_45);
        _43 = [move _44];
        StorageDead(_44);
        _42 = &_43;
        _41 = &(*_42);
        _40 = move _41 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_41);
        _35 = Arguments::<'_>::new_v1(move _36, move _40) -> [return: bb9, unwind: bb56];
    }

    bb9: {
        StorageDead(_40);
        StorageDead(_36);
        _34 = format(move _35) -> [return: bb10, unwind: bb56];
    }

    bb10: {
        StorageDead(_35);
        StorageDead(_46);
        StorageDead(_43);
        StorageDead(_42);
        StorageDead(_38);
        _33 = move _34;
        StorageDead(_34);
        _32 = &_33;
        _31 = &(*_32);
        _30 = <String as Deref>::deref(move _31) -> [return: bb11, unwind: bb55];
    }

    bb11: {
        _29 = &(*_30);
        StorageDead(_31);
        _28 = solana_program::log::sol_log(move _29) -> [return: bb12, unwind: bb55];
    }

    bb12: {
        StorageDead(_29);
        drop(_33) -> [return: bb13, unwind: bb56];
    }

    bb13: {
        StorageDead(_33);
        StorageDead(_32);
        StorageDead(_30);
        StorageDead(_28);
        StorageLive(_47);
        _47 = _27;
        _21 = std::result::Result::<(), error::ErrorCode>::Err(move _47);
        StorageDead(_47);
        StorageDead(_27);
        goto -> bb14;
    }

    bb14: {
        StorageDead(_22);
        _20 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _21) -> [return: bb15, unwind: bb56];
    }

    bb15: {
        StorageDead(_21);
        _48 = discriminant(_20);
        switchInt(move _48) -> [0: bb16, 1: bb18, otherwise: bb17];
    }

    bb16: {
        StorageLive(_52);
        _52 = ((_20 as Continue).0: ());
        _19 = _52;
        StorageDead(_52);
        StorageDead(_20);
        StorageDead(_19);
        StorageLive(_53);
        StorageLive(_54);
        StorageLive(_55);
        StorageLive(_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = &((*_3).3: anchor_lang::prelude::Pubkey);
        _57 = &_58;
        StorageLive(_59);
        _117 = deref_copy (*_18);
        _59 = &((*_117).0: &anchor_lang::prelude::Pubkey);
        _56 = <&anchor_lang::prelude::Pubkey as PartialEq>::eq(move _57, move _59) -> [return: bb20, unwind: bb56];
    }

    bb17: {
        unreachable;
    }

    bb18: {
        StorageLive(_49);
        _49 = ((_20 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_51);
        _51 = _49;
        _0 = <std::result::Result<MatchFulfillmentParams<'_>, error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _51) -> [return: bb19, unwind: bb56];
    }

    bb19: {
        StorageDead(_51);
        StorageDead(_49);
        StorageDead(_20);
        StorageDead(_19);
        goto -> bb50;
    }

    bb20: {
        switchInt(move _56) -> [0: bb22, otherwise: bb21];
    }

    bb21: {
        StorageDead(_59);
        StorageDead(_58);
        StorageDead(_57);
        StorageLive(_60);
        _60 = ();
        _55 = std::result::Result::<(), error::ErrorCode>::Ok(move _60);
        StorageDead(_60);
        goto -> bb29;
    }

    bb22: {
        StorageDead(_59);
        StorageDead(_58);
        StorageDead(_57);
        StorageLive(_61);
        _61 = error::ErrorCode::InvalidFulfillmentConfig;
        StorageLive(_62);
        StorageLive(_63);
        StorageLive(_64);
        StorageLive(_65);
        StorageLive(_66);
        StorageLive(_67);
        StorageLive(_68);
        StorageLive(_69);
        StorageLive(_70);
        StorageLive(_71);
        StorageLive(_72);
        _114 = const _;
        _72 = &(*_114);
        _71 = &(*_72);
        _70 = move _71 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_71);
        StorageLive(_74);
        StorageLive(_75);
        StorageLive(_76);
        StorageLive(_77);
        StorageLive(_78);
        StorageLive(_79);
        StorageLive(_80);
        _80 = &_61;
        _79 = &(*_80);
        _78 = core::fmt::rt::Argument::<'_>::new_display::<error::ErrorCode>(move _79) -> [return: bb23, unwind: bb56];
    }

    bb23: {
        StorageDead(_79);
        _77 = [move _78];
        StorageDead(_78);
        _76 = &_77;
        _75 = &(*_76);
        _74 = move _75 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize));
        StorageDead(_75);
        _69 = Arguments::<'_>::new_v1(move _70, move _74) -> [return: bb24, unwind: bb56];
    }

    bb24: {
        StorageDead(_74);
        StorageDead(_70);
        _68 = format(move _69) -> [return: bb25, unwind: bb56];
    }

    bb25: {
        StorageDead(_69);
        StorageDead(_80);
        StorageDead(_77);
        StorageDead(_76);
        StorageDead(_72);
        _67 = move _68;
        StorageDead(_68);
        _66 = &_67;
        _65 = &(*_66);
        _64 = <String as Deref>::deref(move _65) -> [return: bb26, unwind: bb54];
    }

    bb26: {
        _63 = &(*_64);
        StorageDead(_65);
        _62 = solana_program::log::sol_log(move _63) -> [return: bb27, unwind: bb54];
    }

    bb27: {
        StorageDead(_63);
        drop(_67) -> [return: bb28, unwind: bb56];
    }

    bb28: {
        StorageDead(_67);
        StorageDead(_66);
        StorageDead(_64);
        StorageDead(_62);
        StorageLive(_81);
        _81 = _61;
        _55 = std::result::Result::<(), error::ErrorCode>::Err(move _81);
        StorageDead(_81);
        StorageDead(_61);
        goto -> bb29;
    }

    bb29: {
        StorageDead(_56);
        _54 = <std::result::Result<(), error::ErrorCode> as Try>::branch(move _55) -> [return: bb30, unwind: bb56];
    }

    bb30: {
        StorageDead(_55);
        _82 = discriminant(_54);
        switchInt(move _82) -> [0: bb31, 1: bb32, otherwise: bb17];
    }

    bb31: {
        StorageLive(_86);
        _86 = ((_54 as Continue).0: ());
        _53 = _86;
        StorageDead(_86);
        StorageDead(_54);
        StorageDead(_53);
        StorageLive(_87);
        StorageLive(_88);
        StorageLive(_89);
        StorageLive(_90);
        StorageLive(_91);
        StorageLive(_92);
        _118 = deref_copy (*_17);
        _92 = &(*_118);
        _91 = anchor_lang::prelude::InterfaceAccount::<'_, anchor_spl::token_interface::TokenAccount>::try_from(move _92) -> [return: bb34, unwind: bb56];
    }

    bb32: {
        StorageLive(_83);
        _83 = ((_54 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_85);
        _85 = _83;
        _0 = <std::result::Result<MatchFulfillmentParams<'_>, error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _85) -> [return: bb33, unwind: bb56];
    }

    bb33: {
        StorageDead(_85);
        StorageDead(_83);
        StorageDead(_54);
        StorageDead(_53);
        goto -> bb50;
    }

    bb34: {
        StorageDead(_92);
        StorageLive(_93);
        _93 = {closure@programs/drift/src/state/fulfillment_params/drift.rs:46:76: 46:79};
        _90 = std::result::Result::<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, anchor_lang::error::Error>::map_err::<error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/drift.rs:46:76: 46:79}>(move _91, move _93) -> [return: bb35, unwind: bb56];
    }

    bb35: {
        StorageDead(_93);
        StorageDead(_91);
        _89 = <std::result::Result<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, error::ErrorCode> as Try>::branch(move _90) -> [return: bb36, unwind: bb56];
    }

    bb36: {
        StorageDead(_90);
        _94 = discriminant(_89);
        switchInt(move _94) -> [0: bb37, 1: bb38, otherwise: bb17];
    }

    bb37: {
        StorageLive(_98);
        _98 = move ((_89 as Continue).0: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _88 = move _98;
        StorageDead(_98);
        _87 = Box::<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>::new(move _88) -> [return: bb40, unwind: bb56];
    }

    bb38: {
        StorageLive(_95);
        _95 = ((_89 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_97);
        _97 = _95;
        _0 = <std::result::Result<MatchFulfillmentParams<'_>, error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _97) -> [return: bb39, unwind: bb56];
    }

    bb39: {
        StorageDead(_97);
        StorageDead(_95);
        StorageDead(_88);
        StorageDead(_89);
        goto -> bb49;
    }

    bb40: {
        StorageDead(_88);
        StorageDead(_89);
        StorageLive(_99);
        StorageLive(_100);
        StorageLive(_101);
        StorageLive(_102);
        StorageLive(_103);
        StorageLive(_104);
        _119 = deref_copy (*_18);
        _104 = &(*_119);
        _103 = anchor_lang::prelude::InterfaceAccount::<'_, anchor_spl::token_interface::TokenAccount>::try_from(move _104) -> [return: bb41, unwind: bb53];
    }

    bb41: {
        StorageDead(_104);
        StorageLive(_105);
        _105 = {closure@programs/drift/src/state/fulfillment_params/drift.rs:51:77: 51:80};
        _102 = std::result::Result::<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, anchor_lang::error::Error>::map_err::<error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/drift.rs:51:77: 51:80}>(move _103, move _105) -> [return: bb42, unwind: bb53];
    }

    bb42: {
        StorageDead(_105);
        StorageDead(_103);
        _101 = <std::result::Result<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>, error::ErrorCode> as Try>::branch(move _102) -> [return: bb43, unwind: bb53];
    }

    bb43: {
        StorageDead(_102);
        _106 = discriminant(_101);
        switchInt(move _106) -> [0: bb44, 1: bb45, otherwise: bb17];
    }

    bb44: {
        StorageLive(_110);
        _110 = move ((_101 as Continue).0: anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>);
        _100 = move _110;
        StorageDead(_110);
        _99 = Box::<anchor_lang::prelude::InterfaceAccount<'_, anchor_spl::token_interface::TokenAccount>>::new(move _100) -> [return: bb47, unwind: bb53];
    }

    bb45: {
        StorageLive(_107);
        _107 = ((_101 as Break).0: std::result::Result<std::convert::Infallible, error::ErrorCode>);
        StorageLive(_109);
        _109 = _107;
        _0 = <std::result::Result<MatchFulfillmentParams<'_>, error::ErrorCode> as FromResidual<std::result::Result<Infallible, error::ErrorCode>>>::from_residual(move _109) -> [return: bb46, unwind: bb53];
    }

    bb46: {
        StorageDead(_109);
        StorageDead(_107);
        StorageDead(_100);
        StorageDead(_101);
        StorageDead(_99);
        drop(_87) -> [return: bb49, unwind: bb56];
    }

    bb47: {
        StorageDead(_100);
        StorageDead(_101);
        StorageLive(_111);
        StorageLive(_112);
        _112 = move _87;
        StorageLive(_113);
        _113 = move _99;
        _111 = MatchFulfillmentParams::<'_> { base_market_vault: move _112, quote_market_vault: move _113 };
        StorageDead(_113);
        StorageDead(_112);
        _0 = std::result::Result::<MatchFulfillmentParams<'_>, error::ErrorCode>::Ok(move _111);
        StorageDead(_111);
        StorageDead(_99);
        StorageDead(_87);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_6);
        drop(_4) -> [return: bb48, unwind: bb57];
    }

    bb48: {
        StorageDead(_4);
        goto -> bb52;
    }

    bb49: {
        StorageDead(_87);
        goto -> bb50;
    }

    bb50: {
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_6);
        drop(_4) -> [return: bb51, unwind: bb57];
    }

    bb51: {
        StorageDead(_4);
        goto -> bb52;
    }

    bb52: {
        return;
    }

    bb53 (cleanup): {
        drop(_87) -> [return: bb56, unwind terminate(cleanup)];
    }

    bb54 (cleanup): {
        drop(_67) -> [return: bb56, unwind terminate(cleanup)];
    }

    bb55 (cleanup): {
        drop(_33) -> [return: bb56, unwind terminate(cleanup)];
    }

    bb56 (cleanup): {
        drop(_4) -> [return: bb57, unwind terminate(cleanup)];
    }

    bb57 (cleanup): {
        resume;
    }
}
