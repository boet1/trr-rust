digraph Mir_0_13807 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::user::EnableUserHighLeverageModeBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::user::EnableUserHighLeverageMode&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: u16;<br align="left"/>let mut _8: &lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::user::EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, &lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::user::EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args&gt;;<br align="left"/>let mut _10: std::result::Result&lt;&lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::user::EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _11: std::result::Result&lt;&lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::user::EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _14: Closure(DefId(0:13808 ~ drift[d311]::instructions::user::{impl#206}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _19: &lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::user::EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let _20: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [u8];<br align="left"/>let mut _27: &amp;ReErased mut instructions::user::EnableUserHighLeverageModeBumps;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _29: Closure(DefId(0:13809 ~ drift[d311]::instructions::user::{impl#206}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _35: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _36: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _37: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _40: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _41: &amp;ReErased [u8];<br align="left"/>let mut _42: &amp;ReErased mut instructions::user::EnableUserHighLeverageModeBumps;<br align="left"/>let mut _43: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _44: Closure(DefId(0:13810 ~ drift[d311]::instructions::user::{impl#206}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _49: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _50: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _55: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [u8];<br align="left"/>let mut _57: &amp;ReErased mut instructions::user::EnableUserHighLeverageModeBumps;<br align="left"/>let mut _58: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _59: Closure(DefId(0:13811 ~ drift[d311]::instructions::user::{impl#206}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _64: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _65: anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;&gt;;<br align="left"/>let mut _67: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _70: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [u8];<br align="left"/>let mut _72: &amp;ReErased mut instructions::user::EnableUserHighLeverageModeBumps;<br align="left"/>let mut _73: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _74: Closure(DefId(0:13812 ~ drift[d311]::instructions::user::{impl#206}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _79: anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let _80: ();<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _83: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _84: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _85: !;<br align="left"/>let mut _86: anchor_lang::error::Error;<br align="left"/>let mut _87: anchor_lang::error::Error;<br align="left"/>let mut _88: anchor_lang::error::ErrorCode;<br align="left"/>let _89: ();<br align="left"/>let mut _90: bool;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, bool&gt;;<br align="left"/>let mut _92: std::result::Result&lt;bool, anchor_lang::error::Error&gt;;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _94: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _95: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _96: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _101: bool;<br align="left"/>let mut _102: !;<br align="left"/>let mut _103: anchor_lang::error::Error;<br align="left"/>let mut _104: anchor_lang::error::Error;<br align="left"/>let mut _105: anchor_lang::error::ErrorCode;<br align="left"/>let _106: ();<br align="left"/>let mut _107: bool;<br align="left"/>let mut _108: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let _110: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _111: !;<br align="left"/>let mut _112: anchor_lang::error::Error;<br align="left"/>let mut _113: anchor_lang::error::Error;<br align="left"/>let mut _114: anchor_lang::error::ErrorCode;<br align="left"/>let mut _115: instructions::user::EnableUserHighLeverageMode&lt;ReErased&gt;;<br align="left"/>let mut _116: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _117: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _118: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _119: anchor_lang::prelude::AccountLoader&lt;ReErased, state::high_leverage_mode_config::HighLeverageModeConfig&gt;;<br align="left"/>let mut _120: isize;<br align="left"/>let mut _121: isize;<br align="left"/>let mut _122: isize;<br align="left"/>let mut _123: isize;<br align="left"/>let mut _124: isize;<br align="left"/>let mut _125: isize;<br align="left"/>let mut _126: isize;<br align="left"/>let mut _127: isize;<br align="left"/>let mut _128: isize;<br align="left"/>let mut _129: isize;<br align="left"/>let mut _130: isize;<br align="left"/>let mut _131: isize;<br align="left"/>let mut _132: isize;<br align="left"/>let mut _133: isize;<br align="left"/>let mut _134: isize;<br align="left"/>let mut _135: isize;<br align="left"/>let mut _136: isize;<br align="left"/>let mut _137: isize;<br align="left"/>let mut _138: isize;<br align="left"/>let mut _139: isize;<br align="left"/>let mut _140: isize;<br align="left"/>let mut _141: isize;<br align="left"/>let mut _142: isize;<br align="left"/>let mut _143: isize;<br align="left"/>let mut _144: isize;<br align="left"/>let mut _145: isize;<br align="left"/>let mut _146: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug __ix_data =&gt; _6;<br align="left"/>debug sub_account_id =&gt; _7;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug state =&gt; _20;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug user =&gt; _35;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug authority =&gt; _50;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug high_leverage_mode_config =&gt; _65;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>>;
    bb0__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut _6<br/>_12 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_11 = &lt;&lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args as BorshDeserialize&gt;::deserialize(move _12)</td></tr></table>>];
    bb1__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_14)<br/>_14 = {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}<br/></td></tr><tr><td align="left">_10 = std::result::Result::&lt;&lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;::map_err::&lt;anchor_lang::error::ErrorCode, {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}&gt;(move _11, move _14)</td></tr></table>>];
    bb2__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;&lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_15 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_9 as Continue).0: &lt;instructions::user::EnableUserHighLeverageMode&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::user::EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts::__Args)<br/>_8 = move _19<br/>StorageDead(_19)<br/>StorageLive(_7)<br/>_7 = (_8.0: u16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_2)<br/>StorageLive(_26)<br/>_26 = &amp;(*_6)<br/>StorageLive(_27)<br/>_27 = &amp;mut (*_4)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_23 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::Accounts&lt;'_, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts(move _24, move _25, move _26, move _27, move _28)</td></tr></table>>];
    bb5__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb7__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}&gt;(move _23, move _29)</td></tr></table>>];
    bb9__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb10__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_30 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_21 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_20 = move _34<br/>StorageDead(_34)<br/>_120 = discriminant(_21)<br/>StorageDead(_21)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;(*_1)<br/>StorageLive(_40)<br/>_40 = &amp;mut (*_2)<br/>StorageLive(_41)<br/>_41 = &amp;(*_6)<br/>StorageLive(_42)<br/>_42 = &amp;mut (*_4)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_38 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Accounts&lt;'_, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts(move _39, move _40, move _41, move _42, move _43)</td></tr></table>>];
    bb12__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_140 = discriminant(_21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_44)<br/>_44 = {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}<br/></td></tr><tr><td align="left">_37 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}&gt;(move _38, move _44)</td></tr></table>>];
    bb15__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_38)<br/></td></tr><tr><td align="left">_36 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _37)</td></tr></table>>];
    bb16__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_45 = discriminant(_36)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb17__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = move ((_36 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/>_35 = move _49<br/>StorageDead(_49)<br/>_122 = discriminant(_36)<br/>StorageDead(_36)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_1)<br/>StorageLive(_55)<br/>_55 = &amp;mut (*_2)<br/>StorageLive(_56)<br/>_56 = &amp;(*_6)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_4)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts(move _54, move _55, move _56, move _57, move _58)</td></tr></table>>];
    bb18__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = move ((_36 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_48)<br/>_48 = move _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb19__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>_138 = discriminant(_36)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_59)<br/>_59 = {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}<br/></td></tr><tr><td align="left">_52 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}&gt;(move _53, move _59)</td></tr></table>>];
    bb21__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb22__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_60 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb23__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_51 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_50 = move _64<br/>StorageDead(_64)<br/>_124 = discriminant(_51)<br/>StorageDead(_51)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_1)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_2)<br/>StorageLive(_71)<br/>_71 = &amp;(*_6)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_4)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_68 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt; as anchor_lang::Accounts&lt;'_, EnableUserHighLeverageModeBumps&gt;&gt;::try_accounts(move _69, move _70, move _71, move _72, move _73)</td></tr></table>>];
    bb24__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_63)<br/>_63 = move _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb25__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_136 = discriminant(_51)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_74)<br/>_74 = {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}<br/></td></tr><tr><td align="left">_67 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/user.rs:4564:10: 4564:18}&gt;(move _68, move _74)</td></tr></table>>];
    bb27__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb28__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_75 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb29__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = move ((_66 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::high_leverage_mode_config::HighLeverageModeConfig&gt;)<br/>_65 = move _79<br/>StorageDead(_79)<br/>_126 = discriminant(_66)<br/>StorageDead(_66)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;_35<br/>_83 = &amp;(*_84)<br/></td></tr><tr><td align="left">_82 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _83)</td></tr></table>>];
    bb30__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb31__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_134 = discriminant(_66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>_81 = ((*_82).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb33__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = ConstraintMut<br/></td></tr><tr><td align="left">_87 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _88)</td></tr></table>>];
    bb34__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _87, const &quot;user&quot;)</td></tr></table>>];
    bb35__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_0 = std::result::Result::&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _86)<br/>StorageDead(_86)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_82)<br/>_80 = const ()<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = &amp;_35<br/>_93 = &amp;(*_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = &amp;_50<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_92 = constraints::can_sign_for_user(move _93, move _95)</td></tr></table>>];
    bb37__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;bool, anchor_lang::error::Error&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb38__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_97 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb39__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_91 as Continue).0: bool)<br/>_90 = _101<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb40__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = move ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_100)<br/>_100 = move _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb41__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>_132 = discriminant(_91)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _104, const &quot;user&quot;)</td></tr></table>>];
    bb43__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_0 = std::result::Result::&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _103)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>_107 = ((*_108).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _107)</td></tr></table>>];
    bb45__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = ConstraintMut<br/></td></tr><tr><td align="left">_113 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _114)</td></tr></table>>];
    bb46__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _113, const &quot;high_leverage_mode_config&quot;)</td></tr></table>>];
    bb47__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>_0 = std::result::Result::&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _112)<br/>StorageDead(_112)<br/>StorageDead(_107)<br/>StorageDead(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/>StorageDead(_108)<br/>_106 = const ()<br/>StorageDead(_107)<br/>StorageDead(_106)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_116 = move _20<br/>StorageLive(_117)<br/>_117 = move _35<br/>StorageLive(_118)<br/>_118 = move _50<br/>StorageLive(_119)<br/>_119 = move _65<br/>_115 = instructions::user::EnableUserHighLeverageMode::&lt;'_&gt; { state: move _116, user: move _117, authority: move _118, high_leverage_mode_config: move _119 }<br/>StorageDead(_119)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>_0 = std::result::Result::&lt;instructions::user::EnableUserHighLeverageMode&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _115)<br/>StorageDead(_115)<br/>StorageDead(_65)<br/>StorageDead(_50)<br/>StorageDead(_35)<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb53__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left">return</td></tr></table>>];
    bb56__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop(_20)</td></tr></table>>];
    bb57__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">57 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb58__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_128 = discriminant(_91)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>_89 = const ()<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_65<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, HighLeverageModeConfig&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _109)</td></tr></table>>];
    bb59__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_130 = discriminant(_91)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_91)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = ConstraintRaw<br/></td></tr><tr><td align="left">_104 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _105)</td></tr></table>>];
    bb60__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left" balign="left">_142 = discriminant(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left" balign="left">_143 = discriminant(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">62 (cleanup)</td></tr><tr><td align="left" balign="left">_144 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">63 (cleanup)</td></tr><tr><td align="left" balign="left">_145 = discriminant(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_13807 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">64 (cleanup)</td></tr><tr><td align="left" balign="left">_146 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_13807 -> bb1__0_13807 [label="return"];
    bb1__0_13807 -> bb2__0_13807 [label="return"];
    bb1__0_13807 -> bb57__0_13807 [label="unwind"];
    bb2__0_13807 -> bb3__0_13807 [label="return"];
    bb3__0_13807 -> bb4__0_13807 [label="0"];
    bb3__0_13807 -> bb6__0_13807 [label="1"];
    bb3__0_13807 -> bb5__0_13807 [label="otherwise"];
    bb4__0_13807 -> bb8__0_13807 [label="return"];
    bb6__0_13807 -> bb7__0_13807 [label="return"];
    bb7__0_13807 -> bb54__0_13807 [label=""];
    bb8__0_13807 -> bb9__0_13807 [label="return"];
    bb8__0_13807 -> bb57__0_13807 [label="unwind"];
    bb9__0_13807 -> bb10__0_13807 [label="return"];
    bb9__0_13807 -> bb57__0_13807 [label="unwind"];
    bb10__0_13807 -> bb11__0_13807 [label="0"];
    bb10__0_13807 -> bb12__0_13807 [label="1"];
    bb10__0_13807 -> bb5__0_13807 [label="otherwise"];
    bb11__0_13807 -> bb14__0_13807 [label="return"];
    bb11__0_13807 -> bb56__0_13807 [label="unwind"];
    bb12__0_13807 -> bb13__0_13807 [label="return"];
    bb12__0_13807 -> bb64__0_13807 [label="unwind"];
    bb13__0_13807 -> bb53__0_13807 [label=""];
    bb14__0_13807 -> bb15__0_13807 [label="return"];
    bb14__0_13807 -> bb56__0_13807 [label="unwind"];
    bb15__0_13807 -> bb16__0_13807 [label="return"];
    bb15__0_13807 -> bb56__0_13807 [label="unwind"];
    bb16__0_13807 -> bb17__0_13807 [label="0"];
    bb16__0_13807 -> bb18__0_13807 [label="1"];
    bb16__0_13807 -> bb5__0_13807 [label="otherwise"];
    bb17__0_13807 -> bb20__0_13807 [label="return"];
    bb17__0_13807 -> bb56__0_13807 [label="unwind"];
    bb18__0_13807 -> bb19__0_13807 [label="return"];
    bb18__0_13807 -> bb63__0_13807 [label="unwind"];
    bb19__0_13807 -> bb52__0_13807 [label=""];
    bb20__0_13807 -> bb21__0_13807 [label="return"];
    bb20__0_13807 -> bb56__0_13807 [label="unwind"];
    bb21__0_13807 -> bb22__0_13807 [label="return"];
    bb21__0_13807 -> bb56__0_13807 [label="unwind"];
    bb22__0_13807 -> bb23__0_13807 [label="0"];
    bb22__0_13807 -> bb24__0_13807 [label="1"];
    bb22__0_13807 -> bb5__0_13807 [label="otherwise"];
    bb23__0_13807 -> bb26__0_13807 [label="return"];
    bb23__0_13807 -> bb56__0_13807 [label="unwind"];
    bb24__0_13807 -> bb25__0_13807 [label="return"];
    bb24__0_13807 -> bb62__0_13807 [label="unwind"];
    bb25__0_13807 -> bb51__0_13807 [label=""];
    bb26__0_13807 -> bb27__0_13807 [label="return"];
    bb26__0_13807 -> bb56__0_13807 [label="unwind"];
    bb27__0_13807 -> bb28__0_13807 [label="return"];
    bb27__0_13807 -> bb56__0_13807 [label="unwind"];
    bb28__0_13807 -> bb29__0_13807 [label="0"];
    bb28__0_13807 -> bb30__0_13807 [label="1"];
    bb28__0_13807 -> bb5__0_13807 [label="otherwise"];
    bb29__0_13807 -> bb32__0_13807 [label="return"];
    bb29__0_13807 -> bb56__0_13807 [label="unwind"];
    bb30__0_13807 -> bb31__0_13807 [label="return"];
    bb30__0_13807 -> bb61__0_13807 [label="unwind"];
    bb31__0_13807 -> bb50__0_13807 [label=""];
    bb32__0_13807 -> bb33__0_13807 [label="0"];
    bb32__0_13807 -> bb36__0_13807 [label="otherwise"];
    bb33__0_13807 -> bb34__0_13807 [label="return"];
    bb33__0_13807 -> bb56__0_13807 [label="unwind"];
    bb34__0_13807 -> bb35__0_13807 [label="return"];
    bb34__0_13807 -> bb56__0_13807 [label="unwind"];
    bb35__0_13807 -> bb50__0_13807 [label=""];
    bb36__0_13807 -> bb37__0_13807 [label="return"];
    bb36__0_13807 -> bb56__0_13807 [label="unwind"];
    bb37__0_13807 -> bb38__0_13807 [label="return"];
    bb37__0_13807 -> bb56__0_13807 [label="unwind"];
    bb38__0_13807 -> bb39__0_13807 [label="0"];
    bb38__0_13807 -> bb40__0_13807 [label="1"];
    bb38__0_13807 -> bb5__0_13807 [label="otherwise"];
    bb39__0_13807 -> bb59__0_13807 [label="0"];
    bb39__0_13807 -> bb58__0_13807 [label="otherwise"];
    bb40__0_13807 -> bb41__0_13807 [label="return"];
    bb40__0_13807 -> bb60__0_13807 [label="unwind"];
    bb41__0_13807 -> bb49__0_13807 [label=""];
    bb42__0_13807 -> bb43__0_13807 [label="return"];
    bb42__0_13807 -> bb56__0_13807 [label="unwind"];
    bb43__0_13807 -> bb49__0_13807 [label=""];
    bb44__0_13807 -> bb45__0_13807 [label="0"];
    bb44__0_13807 -> bb48__0_13807 [label="otherwise"];
    bb45__0_13807 -> bb46__0_13807 [label="return"];
    bb45__0_13807 -> bb56__0_13807 [label="unwind"];
    bb46__0_13807 -> bb47__0_13807 [label="return"];
    bb46__0_13807 -> bb56__0_13807 [label="unwind"];
    bb47__0_13807 -> bb50__0_13807 [label=""];
    bb48__0_13807 -> bb55__0_13807 [label=""];
    bb49__0_13807 -> bb50__0_13807 [label=""];
    bb50__0_13807 -> bb51__0_13807 [label=""];
    bb51__0_13807 -> bb52__0_13807 [label=""];
    bb52__0_13807 -> bb53__0_13807 [label="return"];
    bb52__0_13807 -> bb57__0_13807 [label="unwind"];
    bb53__0_13807 -> bb54__0_13807 [label=""];
    bb54__0_13807 -> bb55__0_13807 [label=""];
    bb56__0_13807 -> bb57__0_13807 [label="return"];
    bb58__0_13807 -> bb44__0_13807 [label="return"];
    bb58__0_13807 -> bb56__0_13807 [label="unwind"];
    bb59__0_13807 -> bb42__0_13807 [label="return"];
    bb59__0_13807 -> bb56__0_13807 [label="unwind"];
    bb60__0_13807 -> bb56__0_13807 [label=""];
    bb61__0_13807 -> bb56__0_13807 [label=""];
    bb62__0_13807 -> bb56__0_13807 [label=""];
    bb63__0_13807 -> bb56__0_13807 [label=""];
    bb64__0_13807 -> bb57__0_13807 [label=""];
}
