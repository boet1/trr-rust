digraph Mir_0_4377 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn Order::get_limit_price(_1: &amp;ReErased state::user::Order, _2: std::option::Option&lt;i64&gt;, _3: std::option::Option&lt;u64&gt;, _4: u64, _5: u64, _6: bool, _7: std::option::Option&lt;state::protected_maker_mode_config::ProtectedMakerParams&gt;) -&gt; std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;<br align="left"/>let _8: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _9: bool;<br align="left"/>let mut _10: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _11: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _12: &amp;ReErased state::user::Order;<br align="left"/>let mut _13: u64;<br align="left"/>let mut _14: u8;<br align="left"/>let mut _15: u64;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _20: bool;<br align="left"/>let mut _21: u64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _24: &amp;ReErased state::user::Order;<br align="left"/>let mut _25: u64;<br align="left"/>let mut _26: u64;<br align="left"/>let mut _27: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _28: bool;<br align="left"/>let mut _29: isize;<br align="left"/>let _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _31: !;<br align="left"/>let mut _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _33: u64;<br align="left"/>let mut _34: bool;<br align="left"/>let mut _35: state::user::Order;<br align="left"/>let _36: i64;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _38: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _39: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _40: Closure(DefId(0:4378 ~ drift[d311]::state::user::{impl#6}::get_limit_price::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn(()) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: i64;<br align="left"/>let mut _46: u64;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _48: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _49: i64;<br align="left"/>let mut _50: i64;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _52: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _53: i64;<br align="left"/>let mut _54: i64;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _56: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _57: i32;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: i64;<br align="left"/>let mut _63: isize;<br align="left"/>let _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _65: !;<br align="left"/>let mut _66: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _67: i64;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _70: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: i64;<br align="left"/>let mut _77: isize;<br align="left"/>let _78: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _79: !;<br align="left"/>let mut _80: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _81: u64;<br align="left"/>let _82: ();<br align="left"/>let mut _83: bool;<br align="left"/>let mut _84: u64;<br align="left"/>let mut _85: u64;<br align="left"/>let _86: ();<br align="left"/>let mut _87: isize;<br align="left"/>let _88: state::protected_maker_mode_config::ProtectedMakerParams;<br align="left"/>let mut _89: u64;<br align="left"/>let mut _90: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _91: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _92: u64;<br align="left"/>let mut _93: controller::position::PositionDirection;<br align="left"/>let mut _94: state::protected_maker_mode_config::ProtectedMakerParams;<br align="left"/>let mut _95: isize;<br align="left"/>let _96: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _97: !;<br align="left"/>let mut _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _99: u64;<br align="left"/>let mut _100: u64;<br align="left"/>let mut _101: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _102: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _103: u64;<br align="left"/>let mut _104: u64;<br align="left"/>let mut _105: controller::position::PositionDirection;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _110: u64;<br align="left"/>let mut _111: bool;<br align="left"/>let mut _112: u64;<br align="left"/>let mut _113: isize;<br align="left"/>let _114: u64;<br align="left"/>let mut _115: u64;<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _117: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _118: u64;<br align="left"/>let mut _119: u64;<br align="left"/>let mut _120: controller::position::PositionDirection;<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: u64;<br align="left"/>let mut _126: u64;<br align="left"/>let _127: ();<br align="left"/>let mut _128: isize;<br align="left"/>let _129: state::protected_maker_mode_config::ProtectedMakerParams;<br align="left"/>let mut _130: u64;<br align="left"/>let mut _131: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _132: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _133: u64;<br align="left"/>let mut _134: controller::position::PositionDirection;<br align="left"/>let mut _135: state::protected_maker_mode_config::ProtectedMakerParams;<br align="left"/>let mut _136: isize;<br align="left"/>let _137: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _138: !;<br align="left"/>let mut _139: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _140: u64;<br align="left"/>let mut _141: u64;<br align="left"/>let mut _142: std::option::Option&lt;u64&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug valid_oracle_price =&gt; _2;<br align="left"/>debug fallback_price =&gt; _3;<br align="left"/>debug slot =&gt; _4;<br align="left"/>debug tick_size =&gt; _5;<br align="left"/>debug is_prediction_market =&gt; _6;<br align="left"/>debug pmm_params =&gt; _7;<br align="left"/>debug price =&gt; _8;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug residual =&gt; _30;<br align="left"/>debug val =&gt; _33;<br align="left"/>debug oracle_price =&gt; _36;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug limit_price =&gt; _46;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug residual =&gt; _64;<br align="left"/>debug val =&gt; _67;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug residual =&gt; _78;<br align="left"/>debug val =&gt; _81;<br align="left"/>debug pmm_params =&gt; _88;<br align="left"/>debug residual =&gt; _96;<br align="left"/>debug val =&gt; _99;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>debug price =&gt; _114;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug price =&gt; _126;<br align="left"/>debug pmm_params =&gt; _129;<br align="left"/>debug residual =&gt; _137;<br align="left"/>debug val =&gt; _140;<br align="left"/>>;
    bb0__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = &amp;(*_1)<br/>StorageLive(_13)<br/>_13 = ((*_1).0: u64)<br/>StorageLive(_14)<br/>_14 = ((*_1).22: u8)<br/>StorageLive(_15)<br/>_15 = _4<br/></td></tr><tr><td align="left">_11 = Order::has_auction_price(move _12, move _13, move _14, move _15)</td></tr></table>>];
    bb1__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">_10 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _11)</td></tr></table>>];
    bb2__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>_16 = discriminant(_10)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb3__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = ((_10 as Continue).0: bool)<br/>_9 = _20<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">switchInt(move _9)</td></tr></table>>];
    bb4__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_10 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_19)<br/>_19 = _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb6__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = _4<br/>StorageLive(_26)<br/>_26 = _5<br/>StorageLive(_27)<br/>_27 = _2<br/>StorageLive(_28)<br/>_28 = _6<br/></td></tr><tr><td align="left">_23 = calculate_auction_price(move _24, move _25, move _26, move _27, move _28)</td></tr></table>>];
    bb8__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = (*_1)<br/></td></tr><tr><td align="left">_34 = Order::has_oracle_price_offset(move _35)</td></tr></table>>];
    bb9__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_29 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _29)</td></tr></table>>];
    bb11__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_33)<br/>_33 = ((_22 as Continue).0: u64)<br/>_21 = _33<br/>StorageDead(_33)<br/>_8 = Option::&lt;u64&gt;::Some(move _21)<br/>StorageDead(_21)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_30)<br/>_30 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_32)<br/>_32 = _30<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _32)</td></tr></table>>];
    bb13__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _34)</td></tr></table>>];
    bb15__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = _2<br/>StorageLive(_40)<br/>_40 = {closure@programs/drift/src/state/user.rs:1290:62: 1290:64}<br/></td></tr><tr><td align="left">_38 = Option::&lt;i64&gt;::ok_or_else::&lt;error::ErrorCode, {closure@programs/drift/src/state/user.rs:1290:62: 1290:64}&gt;(move _39, move _40)</td></tr></table>>];
    bb16__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb17__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_41 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_37 as Continue).0: i64)<br/>_36 = _45<br/>StorageDead(_45)<br/>StorageDead(_37)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _36<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = ((*_1).9: i32)<br/></td></tr><tr><td align="left">_56 = &lt;i32 as Cast&gt;::cast::&lt;i64&gt;(move _57)</td></tr></table>>];
    bb19__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb20__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb22__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_58 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb23__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_55 as Continue).0: i64)<br/>_54 = _62<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_52 = &lt;i64 as SafeMath&gt;::safe_add(move _53, move _54)</td></tr></table>>];
    bb24__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb25__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb27__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_63 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _63)</td></tr></table>>];
    bb28__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_67)<br/>_67 = ((_51 as Continue).0: i64)<br/>_50 = _67<br/>StorageDead(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_71 = _5<br/></td></tr><tr><td align="left">_70 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _71)</td></tr></table>>];
    bb29__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_66)<br/>_66 = _64<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _66)</td></tr></table>>];
    bb30__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/></td></tr><tr><td align="left">_69 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _70)</td></tr></table>>];
    bb32__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>_72 = discriminant(_69)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb33__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_69 as Continue).0: i64)<br/>_68 = _76<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_49 = &lt;i64 as Ord&gt;::max(move _50, move _68)</td></tr></table>>];
    bb34__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_69 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb35__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_68)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _49)</td></tr></table>>];
    bb37__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb38__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_77 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb39__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_81)<br/>_81 = ((_47 as Continue).0: u64)<br/>_46 = _81<br/>StorageDead(_81)<br/>StorageDead(_69)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = _6<br/></td></tr><tr><td align="left">switchInt(move _83)</td></tr></table>>];
    bb40__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_78)<br/>_78 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_80)<br/>_80 = _78<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _80)</td></tr></table>>];
    bb41__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_84)<br/>StorageLive(_85)<br/>_85 = _46<br/></td></tr><tr><td align="left">_84 = &lt;u64 as Ord&gt;::min(move _85, const _)</td></tr></table>>];
    bb43__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_82 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_46 = move _84<br/>_82 = const ()<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/>StorageLive(_86)<br/>_87 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb46__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_88)<br/>_88 = ((_7 as Some).0: state::protected_maker_mode_config::ProtectedMakerParams)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = _46<br/>StorageLive(_93)<br/>_93 = ((*_1).17: controller::position::PositionDirection)<br/>StorageLive(_94)<br/>_94 = _88<br/></td></tr><tr><td align="left">_91 = apply_protected_maker_limit_price_offset(move _92, move _93, move _94, const false)</td></tr></table>>];
    bb47__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _91)</td></tr></table>>];
    bb48__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>_95 = discriminant(_90)<br/></td></tr><tr><td align="left">switchInt(move _95)</td></tr></table>>];
    bb49__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_99)<br/>_99 = ((_90 as Continue).0: u64)<br/>_89 = _99<br/>StorageDead(_99)<br/>_46 = move _89<br/>StorageDead(_89)<br/>StorageDead(_90)<br/>_86 = const ()<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_96)<br/>_96 = ((_90 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_98)<br/>_98 = _96<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _98)</td></tr></table>>];
    bb51__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_96)<br/>StorageDead(_89)<br/>StorageDead(_90)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_86 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = _46<br/>StorageLive(_104)<br/>_104 = _5<br/>StorageLive(_105)<br/>_105 = ((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_102 = math::orders::standardize_price(move _103, move _104, move _105)</td></tr></table>>];
    bb54__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_101 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _102)</td></tr></table>>];
    bb55__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>_106 = discriminant(_101)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb56__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_101 as Continue).0: u64)<br/>_100 = _110<br/>StorageDead(_110)<br/>_8 = Option::&lt;u64&gt;::Some(move _100)<br/>StorageDead(_100)<br/>StorageDead(_46)<br/>StorageDead(_36)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_101 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_109)<br/>_109 = _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb58__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_100)<br/>StorageDead(_46)<br/>StorageDead(_36)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>_112 = ((*_1).1: u64)<br/>_111 = Eq(move _112, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb60__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_113 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _113)</td></tr></table>>];
    bb61__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">_8 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_3 as Some).0: u64)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>_118 = _114<br/>StorageLive(_119)<br/>_119 = _5<br/>StorageLive(_120)<br/>_120 = ((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_117 = math::orders::standardize_price(move _118, move _119, move _120)</td></tr></table>>];
    bb63__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb64__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_121 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb65__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_116 as Continue).0: u64)<br/>_115 = _125<br/>StorageDead(_125)<br/>_8 = Option::&lt;u64&gt;::Some(move _115)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb67__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageLive(_126)<br/>_126 = ((*_1).1: u64)<br/>StorageLive(_127)<br/>_128 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _128)</td></tr></table>>];
    bb69__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_129)<br/>_129 = ((_7 as Some).0: state::protected_maker_mode_config::ProtectedMakerParams)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>_133 = _126<br/>StorageLive(_134)<br/>_134 = ((*_1).17: controller::position::PositionDirection)<br/>StorageLive(_135)<br/>_135 = _129<br/></td></tr><tr><td align="left">_132 = apply_protected_maker_limit_price_offset(move _133, move _134, move _135, const true)</td></tr></table>>];
    bb70__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_134)<br/>StorageDead(_133)<br/></td></tr><tr><td align="left">_131 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _132)</td></tr></table>>];
    bb71__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>_136 = discriminant(_131)<br/></td></tr><tr><td align="left">switchInt(move _136)</td></tr></table>>];
    bb72__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_131 as Continue).0: u64)<br/>_130 = _140<br/>StorageDead(_140)<br/>_126 = move _130<br/>StorageDead(_130)<br/>StorageDead(_131)<br/>_127 = const ()<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_137)<br/>_137 = ((_131 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_139)<br/>_139 = _137<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _139)</td></tr></table>>];
    bb74__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_130)<br/>StorageDead(_131)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">_127 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageLive(_141)<br/>_141 = _126<br/>_8 = Option::&lt;u64&gt;::Some(move _141)<br/>StorageDead(_141)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb77__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageLive(_142)<br/>_142 = _8<br/>_0 = std::result::Result::&lt;Option&lt;u64&gt;, error::ErrorCode&gt;::Ok(move _142)<br/>StorageDead(_142)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb82__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_4377 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4377 -> bb1__0_4377 [label="return"];
    bb1__0_4377 -> bb2__0_4377 [label="return"];
    bb2__0_4377 -> bb3__0_4377 [label="0"];
    bb2__0_4377 -> bb5__0_4377 [label="1"];
    bb2__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb3__0_4377 -> bb8__0_4377 [label="0"];
    bb3__0_4377 -> bb7__0_4377 [label="otherwise"];
    bb5__0_4377 -> bb6__0_4377 [label="return"];
    bb6__0_4377 -> bb87__0_4377 [label=""];
    bb7__0_4377 -> bb9__0_4377 [label="return"];
    bb8__0_4377 -> bb14__0_4377 [label="return"];
    bb9__0_4377 -> bb10__0_4377 [label="return"];
    bb10__0_4377 -> bb11__0_4377 [label="0"];
    bb10__0_4377 -> bb12__0_4377 [label="1"];
    bb10__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb11__0_4377 -> bb79__0_4377 [label=""];
    bb12__0_4377 -> bb13__0_4377 [label="return"];
    bb13__0_4377 -> bb87__0_4377 [label=""];
    bb14__0_4377 -> bb59__0_4377 [label="0"];
    bb14__0_4377 -> bb15__0_4377 [label="otherwise"];
    bb15__0_4377 -> bb16__0_4377 [label="return"];
    bb16__0_4377 -> bb17__0_4377 [label="return"];
    bb17__0_4377 -> bb18__0_4377 [label="0"];
    bb17__0_4377 -> bb19__0_4377 [label="1"];
    bb17__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb18__0_4377 -> bb21__0_4377 [label="return"];
    bb19__0_4377 -> bb20__0_4377 [label="return"];
    bb20__0_4377 -> bb85__0_4377 [label=""];
    bb21__0_4377 -> bb22__0_4377 [label="return"];
    bb22__0_4377 -> bb23__0_4377 [label="0"];
    bb22__0_4377 -> bb24__0_4377 [label="1"];
    bb22__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb23__0_4377 -> bb26__0_4377 [label="return"];
    bb24__0_4377 -> bb25__0_4377 [label="return"];
    bb25__0_4377 -> bb82__0_4377 [label=""];
    bb26__0_4377 -> bb27__0_4377 [label="return"];
    bb27__0_4377 -> bb28__0_4377 [label="0"];
    bb27__0_4377 -> bb29__0_4377 [label="1"];
    bb27__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb28__0_4377 -> bb31__0_4377 [label="return"];
    bb29__0_4377 -> bb30__0_4377 [label="return"];
    bb30__0_4377 -> bb82__0_4377 [label=""];
    bb31__0_4377 -> bb32__0_4377 [label="return"];
    bb32__0_4377 -> bb33__0_4377 [label="0"];
    bb32__0_4377 -> bb34__0_4377 [label="1"];
    bb32__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb33__0_4377 -> bb36__0_4377 [label="return"];
    bb34__0_4377 -> bb35__0_4377 [label="return"];
    bb35__0_4377 -> bb81__0_4377 [label=""];
    bb36__0_4377 -> bb37__0_4377 [label="return"];
    bb37__0_4377 -> bb38__0_4377 [label="return"];
    bb38__0_4377 -> bb39__0_4377 [label="0"];
    bb38__0_4377 -> bb40__0_4377 [label="1"];
    bb38__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb39__0_4377 -> bb43__0_4377 [label="0"];
    bb39__0_4377 -> bb42__0_4377 [label="otherwise"];
    bb40__0_4377 -> bb41__0_4377 [label="return"];
    bb41__0_4377 -> bb81__0_4377 [label=""];
    bb42__0_4377 -> bb44__0_4377 [label="return"];
    bb43__0_4377 -> bb45__0_4377 [label=""];
    bb44__0_4377 -> bb45__0_4377 [label=""];
    bb45__0_4377 -> bb46__0_4377 [label="1"];
    bb45__0_4377 -> bb52__0_4377 [label="otherwise"];
    bb46__0_4377 -> bb47__0_4377 [label="return"];
    bb47__0_4377 -> bb48__0_4377 [label="return"];
    bb48__0_4377 -> bb49__0_4377 [label="0"];
    bb48__0_4377 -> bb50__0_4377 [label="1"];
    bb48__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb49__0_4377 -> bb53__0_4377 [label=""];
    bb50__0_4377 -> bb51__0_4377 [label="return"];
    bb51__0_4377 -> bb84__0_4377 [label=""];
    bb52__0_4377 -> bb53__0_4377 [label=""];
    bb53__0_4377 -> bb54__0_4377 [label="return"];
    bb54__0_4377 -> bb55__0_4377 [label="return"];
    bb55__0_4377 -> bb56__0_4377 [label="0"];
    bb55__0_4377 -> bb57__0_4377 [label="1"];
    bb55__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb56__0_4377 -> bb78__0_4377 [label=""];
    bb57__0_4377 -> bb58__0_4377 [label="return"];
    bb58__0_4377 -> bb86__0_4377 [label=""];
    bb59__0_4377 -> bb68__0_4377 [label="0"];
    bb59__0_4377 -> bb60__0_4377 [label="otherwise"];
    bb60__0_4377 -> bb61__0_4377 [label="0"];
    bb60__0_4377 -> bb62__0_4377 [label="1"];
    bb60__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb61__0_4377 -> bb77__0_4377 [label=""];
    bb62__0_4377 -> bb63__0_4377 [label="return"];
    bb63__0_4377 -> bb64__0_4377 [label="return"];
    bb64__0_4377 -> bb65__0_4377 [label="0"];
    bb64__0_4377 -> bb66__0_4377 [label="1"];
    bb64__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb65__0_4377 -> bb77__0_4377 [label=""];
    bb66__0_4377 -> bb67__0_4377 [label="return"];
    bb67__0_4377 -> bb80__0_4377 [label=""];
    bb68__0_4377 -> bb69__0_4377 [label="1"];
    bb68__0_4377 -> bb75__0_4377 [label="otherwise"];
    bb69__0_4377 -> bb70__0_4377 [label="return"];
    bb70__0_4377 -> bb71__0_4377 [label="return"];
    bb71__0_4377 -> bb72__0_4377 [label="0"];
    bb71__0_4377 -> bb73__0_4377 [label="1"];
    bb71__0_4377 -> bb4__0_4377 [label="otherwise"];
    bb72__0_4377 -> bb76__0_4377 [label=""];
    bb73__0_4377 -> bb74__0_4377 [label="return"];
    bb74__0_4377 -> bb80__0_4377 [label=""];
    bb75__0_4377 -> bb76__0_4377 [label=""];
    bb76__0_4377 -> bb77__0_4377 [label=""];
    bb77__0_4377 -> bb78__0_4377 [label=""];
    bb78__0_4377 -> bb79__0_4377 [label=""];
    bb79__0_4377 -> bb88__0_4377 [label=""];
    bb80__0_4377 -> bb86__0_4377 [label=""];
    bb81__0_4377 -> bb83__0_4377 [label=""];
    bb82__0_4377 -> bb83__0_4377 [label=""];
    bb83__0_4377 -> bb84__0_4377 [label=""];
    bb84__0_4377 -> bb85__0_4377 [label=""];
    bb85__0_4377 -> bb86__0_4377 [label=""];
    bb86__0_4377 -> bb87__0_4377 [label=""];
    bb87__0_4377 -> bb88__0_4377 [label=""];
}
