// MIR for `state::user::<impl at programs/drift/src/state/user.rs:1689:1: 1689:20>::is_referrer` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:1689:1: 1689:20>::is_referrer(_1: u8) -> bool {
    debug status => _1;
    let mut _0: bool;
    let mut _2: u8;
    let mut _3: u8;
    let mut _4: u8;
    let mut _5: u8;
    let mut _6: (u8, bool);

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = _1;
        StorageLive(_4);
        StorageLive(_5);
        _6 = CheckedAdd(const _, const 0_u8);
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", const _, const 0_u8) -> [success: bb1, unwind continue];
    }

    bb1: {
        _5 = move (_6.0: u8);
        _4 = move _5 as u8 (IntToInt);
        StorageDead(_5);
        _2 = BitAnd(move _3, move _4);
        StorageDead(_4);
        StorageDead(_3);
        _0 = Ne(move _2, const 0_u8);
        StorageDead(_2);
        return;
    }
}
