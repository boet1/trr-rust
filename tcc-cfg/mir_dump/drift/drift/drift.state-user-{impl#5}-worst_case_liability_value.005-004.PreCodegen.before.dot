digraph Mir_0_4362 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn PerpPosition::worst_case_liability_value(_1: &amp;ReErased state::user::PerpPosition, _2: i64, _3: state::perp_market::ContractType) -&gt; std::result::Result&lt;(i128, u128), error::ErrorCode&gt;<br align="left"/>let _4: i128;<br align="left"/>let mut _5: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _6: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _7: i64;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _10: i64;<br align="left"/>let mut _11: i64;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: i64;<br align="left"/>let mut _17: isize;<br align="left"/>let _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _19: !;<br align="left"/>let mut _20: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _21: i128;<br align="left"/>let _22: i128;<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _24: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _25: i64;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _27: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _28: i64;<br align="left"/>let mut _29: i64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: i64;<br align="left"/>let mut _35: isize;<br align="left"/>let _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _37: !;<br align="left"/>let mut _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _39: i128;<br align="left"/>let _40: u128;<br align="left"/>let mut _41: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _42: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _43: i128;<br align="left"/>let mut _44: i64;<br align="left"/>let mut _45: state::perp_market::ContractType;<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _50: u128;<br align="left"/>let _51: u128;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _53: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _54: i128;<br align="left"/>let mut _55: i64;<br align="left"/>let mut _56: state::perp_market::ContractType;<br align="left"/>let mut _57: isize;<br align="left"/>let _58: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _59: !;<br align="left"/>let mut _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _61: u128;<br align="left"/>let mut _62: bool;<br align="left"/>let mut _63: u128;<br align="left"/>let mut _64: u128;<br align="left"/>let mut _65: (i128, u128);<br align="left"/>let mut _66: i128;<br align="left"/>let mut _67: u128;<br align="left"/>let mut _68: (i128, u128);<br align="left"/>let mut _69: i128;<br align="left"/>let mut _70: u128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug oracle_price =&gt; _2;<br align="left"/>debug contract_type =&gt; _3;<br align="left"/>debug base_asset_amount_all_bids_fill =&gt; _4;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug residual =&gt; _18;<br align="left"/>debug val =&gt; _21;<br align="left"/>debug base_asset_amount_all_asks_fill =&gt; _22;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug residual =&gt; _36;<br align="left"/>debug val =&gt; _39;<br align="left"/>debug liability_value_all_bids_fill =&gt; _40;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug liability_value_all_asks_fill =&gt; _51;<br align="left"/>debug residual =&gt; _58;<br align="left"/>debug val =&gt; _61;<br align="left"/>>;
    bb0__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = ((*_1).1: i64)<br/>StorageLive(_11)<br/>_11 = ((*_1).5: i64)<br/></td></tr><tr><td align="left">_9 = &lt;i64 as SafeMath&gt;::safe_add(move _10, move _11)</td></tr></table>>];
    bb1__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_12 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_8 as Continue).0: i64)<br/>_7 = _16<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">_6 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _7)</td></tr></table>>];
    bb4__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb6__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/></td></tr><tr><td align="left">_5 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _6)</td></tr></table>>];
    bb8__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>_17 = discriminant(_5)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb9__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_21)<br/>_21 = ((_5 as Continue).0: i128)<br/>_4 = _21<br/>StorageDead(_21)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = ((*_1).1: i64)<br/>StorageLive(_29)<br/>_29 = ((*_1).6: i64)<br/></td></tr><tr><td align="left">_27 = &lt;i64 as SafeMath&gt;::safe_add(move _28, move _29)</td></tr></table>>];
    bb10__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_18)<br/>_18 = ((_5 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_20)<br/>_20 = _18<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _20)</td></tr></table>>];
    bb11__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb13__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_30 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb14__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_26 as Continue).0: i64)<br/>_25 = _34<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_24 = &lt;i64 as Cast&gt;::cast::&lt;i128&gt;(move _25)</td></tr></table>>];
    bb15__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb16__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb18__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_35 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _35)</td></tr></table>>];
    bb19__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_39)<br/>_39 = ((_23 as Continue).0: i128)<br/>_22 = _39<br/>StorageDead(_39)<br/>StorageDead(_26)<br/>StorageDead(_23)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = _4<br/>StorageLive(_44)<br/>_44 = _2<br/>StorageLive(_45)<br/>_45 = _3<br/></td></tr><tr><td align="left">_42 = calculate_perp_liability_value(move _43, move _44, move _45)</td></tr></table>>];
    bb20__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_36)<br/>_36 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_38)<br/>_38 = _36<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _38)</td></tr></table>>];
    bb21__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _42)</td></tr></table>>];
    bb23__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_46 = discriminant(_41)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb24__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_41 as Continue).0: u128)<br/>_40 = _50<br/>StorageDead(_50)<br/>StorageDead(_41)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = _22<br/>StorageLive(_55)<br/>_55 = _2<br/>StorageLive(_56)<br/>_56 = _3<br/></td></tr><tr><td align="left">_53 = calculate_perp_liability_value(move _54, move _55, move _56)</td></tr></table>>];
    bb25__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = ((_41 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_49)<br/>_49 = _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb26__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb28__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_57 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _57)</td></tr></table>>];
    bb29__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = ((_52 as Continue).0: u128)<br/>_51 = _61<br/>StorageDead(_61)<br/>StorageDead(_52)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = _51<br/>StorageLive(_64)<br/>_64 = _40<br/>_62 = Ge(move _63, move _64)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb30__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_60)<br/>_60 = _58<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(i128, u128), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _60)</td></tr></table>>];
    bb31__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_58)<br/>StorageDead(_52)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = _22<br/>StorageLive(_67)<br/>_67 = _51<br/>_65 = (move _66, move _67)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>_0 = std::result::Result::&lt;(i128, u128), error::ErrorCode&gt;::Ok(move _65)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_63)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = _4<br/>StorageLive(_70)<br/>_70 = _40<br/>_68 = (move _69, move _70)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>_0 = std::result::Result::&lt;(i128, u128), error::ErrorCode&gt;::Ok(move _68)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_51)<br/>StorageDead(_40)<br/>StorageDead(_22)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_4362 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_4362 -> bb1__0_4362 [label="return"];
    bb1__0_4362 -> bb2__0_4362 [label="return"];
    bb2__0_4362 -> bb3__0_4362 [label="0"];
    bb2__0_4362 -> bb5__0_4362 [label="1"];
    bb2__0_4362 -> bb4__0_4362 [label="otherwise"];
    bb3__0_4362 -> bb7__0_4362 [label="return"];
    bb5__0_4362 -> bb6__0_4362 [label="return"];
    bb6__0_4362 -> bb38__0_4362 [label=""];
    bb7__0_4362 -> bb8__0_4362 [label="return"];
    bb8__0_4362 -> bb9__0_4362 [label="0"];
    bb8__0_4362 -> bb10__0_4362 [label="1"];
    bb8__0_4362 -> bb4__0_4362 [label="otherwise"];
    bb9__0_4362 -> bb12__0_4362 [label="return"];
    bb10__0_4362 -> bb11__0_4362 [label="return"];
    bb11__0_4362 -> bb38__0_4362 [label=""];
    bb12__0_4362 -> bb13__0_4362 [label="return"];
    bb13__0_4362 -> bb14__0_4362 [label="0"];
    bb13__0_4362 -> bb15__0_4362 [label="1"];
    bb13__0_4362 -> bb4__0_4362 [label="otherwise"];
    bb14__0_4362 -> bb17__0_4362 [label="return"];
    bb15__0_4362 -> bb16__0_4362 [label="return"];
    bb16__0_4362 -> bb36__0_4362 [label=""];
    bb17__0_4362 -> bb18__0_4362 [label="return"];
    bb18__0_4362 -> bb19__0_4362 [label="0"];
    bb18__0_4362 -> bb20__0_4362 [label="1"];
    bb18__0_4362 -> bb4__0_4362 [label="otherwise"];
    bb19__0_4362 -> bb22__0_4362 [label="return"];
    bb20__0_4362 -> bb21__0_4362 [label="return"];
    bb21__0_4362 -> bb36__0_4362 [label=""];
    bb22__0_4362 -> bb23__0_4362 [label="return"];
    bb23__0_4362 -> bb24__0_4362 [label="0"];
    bb23__0_4362 -> bb25__0_4362 [label="1"];
    bb23__0_4362 -> bb4__0_4362 [label="otherwise"];
    bb24__0_4362 -> bb27__0_4362 [label="return"];
    bb25__0_4362 -> bb26__0_4362 [label="return"];
    bb26__0_4362 -> bb35__0_4362 [label=""];
    bb27__0_4362 -> bb28__0_4362 [label="return"];
    bb28__0_4362 -> bb29__0_4362 [label="0"];
    bb28__0_4362 -> bb30__0_4362 [label="1"];
    bb28__0_4362 -> bb4__0_4362 [label="otherwise"];
    bb29__0_4362 -> bb33__0_4362 [label="0"];
    bb29__0_4362 -> bb32__0_4362 [label="otherwise"];
    bb30__0_4362 -> bb31__0_4362 [label="return"];
    bb31__0_4362 -> bb35__0_4362 [label=""];
    bb32__0_4362 -> bb34__0_4362 [label=""];
    bb33__0_4362 -> bb34__0_4362 [label=""];
    bb34__0_4362 -> bb40__0_4362 [label=""];
    bb35__0_4362 -> bb37__0_4362 [label=""];
    bb36__0_4362 -> bb37__0_4362 [label=""];
    bb37__0_4362 -> bb39__0_4362 [label=""];
    bb38__0_4362 -> bb39__0_4362 [label=""];
    bb39__0_4362 -> bb40__0_4362 [label=""];
}
