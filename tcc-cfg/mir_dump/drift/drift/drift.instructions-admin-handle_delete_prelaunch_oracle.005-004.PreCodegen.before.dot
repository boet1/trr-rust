digraph Mir_0_1114 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_delete_prelaunch_oracle(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::DeletePrelaunchOracle&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _5: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _12: ();<br align="left"/>let mut _13: &amp;ReErased str;<br align="left"/>let _14: &amp;ReErased str;<br align="left"/>let mut _15: &amp;ReErased std::string::String;<br align="left"/>let _16: &amp;ReErased std::string::String;<br align="left"/>let _17: std::string::String;<br align="left"/>let _18: std::string::String;<br align="left"/>let mut _19: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _20: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _21: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _22: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _23: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _24: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _25: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _26: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _27: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _28: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _29: &amp;ReErased u16;<br align="left"/>let _30: &amp;ReErased u16;<br align="left"/>let _31: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _32: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _33: ();<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _35: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _38: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _39: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _41: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _42: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::oracle::PrelaunchOracle&gt;;<br align="left"/>let mut _43: ();<br align="left"/>let _44: error::ErrorCode;<br align="left"/>let _45: ();<br align="left"/>let mut _46: &amp;ReErased str;<br align="left"/>let _47: &amp;ReErased str;<br align="left"/>let mut _48: &amp;ReErased std::string::String;<br align="left"/>let _49: &amp;ReErased std::string::String;<br align="left"/>let _50: std::string::String;<br align="left"/>let _51: std::string::String;<br align="left"/>let mut _52: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _53: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _54: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _55: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _56: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _57: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _60: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _61: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _62: &amp;ReErased error::ErrorCode;<br align="left"/>let _63: &amp;ReErased error::ErrorCode;<br align="left"/>let _64: ();<br align="left"/>let mut _65: &amp;ReErased str;<br align="left"/>let _66: &amp;ReErased str;<br align="left"/>let mut _67: error::ErrorCode;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: ();<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _75: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _76: &amp;ReErased mut instructions::admin::DeletePrelaunchOracle&lt;ReErased&gt;;<br align="left"/>let mut _77: &amp;ReErased mut instructions::admin::DeletePrelaunchOracle&lt;ReErased&gt;;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: isize;<br align="left"/>let mut _80: isize;<br align="left"/>let mut _81: isize;<br align="left"/>let mut _82: isize;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug _perp_market_index =&gt; _2;<br align="left"/>debug perp_market =&gt; _3;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug res =&gt; _18;<br align="left"/>debug error_code =&gt; _44;<br align="left"/>debug res =&gt; _51;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>>;
    bb0__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_76 = deref_copy (_1.1: &amp;mut instructions::admin::DeletePrelaunchOracle&lt;'_&gt;)<br/>_6 = &amp;((*_76).2: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/></td></tr><tr><td align="left">_5 = anchor_lang::prelude::AccountLoader::&lt;'_, PerpMarket&gt;::load(move _6)</td></tr></table>>];
    bb1__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_7 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = move ((_4 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_3 = move _11<br/>StorageDead(_11)<br/>_78 = discriminant(_4)<br/>StorageDead(_4)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_75 = const _<br/>_22 = &amp;(*_75)<br/>_21 = &amp;(*_22)<br/>_20 = move _21 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_21)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;_3<br/></td></tr><tr><td align="left">_31 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb4__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_80 = discriminant(_4)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>_30 = &amp;((*_31).21: u16)<br/>_29 = &amp;(*_30)<br/></td></tr><tr><td align="left">_28 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _29)</td></tr></table>>];
    bb8__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>_27 = [move _28]<br/>StorageDead(_28)<br/>_26 = &amp;_27<br/>_25 = &amp;(*_26)<br/>_24 = move _25 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_19 = Arguments::&lt;'_&gt;::new_v1(move _20, move _24)</td></tr></table>>];
    bb9__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = format(move _19)</td></tr></table>>];
    bb10__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/>_17 = move _18<br/>StorageDead(_18)<br/>_16 = &amp;_17<br/>_15 = &amp;(*_16)<br/></td></tr><tr><td align="left">_14 = &lt;String as Deref&gt;::deref(move _15)</td></tr></table>>];
    bb11__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_13 = &amp;(*_14)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">_12 = solana_program::log::sol_log(move _13)</td></tr></table>>];
    bb12__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb13__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_39 = &amp;_3<br/></td></tr><tr><td align="left">_38 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _39)</td></tr></table>>];
    bb14__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>_37 = &amp;(((*_38).1: state::perp_market::AMM).0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_77 = deref_copy (_1.1: &amp;mut instructions::admin::DeletePrelaunchOracle&lt;'_&gt;)<br/>_42 = &amp;((*_77).1: anchor_lang::prelude::AccountLoader&lt;'_, state::oracle::PrelaunchOracle&gt;)<br/></td></tr><tr><td align="left">_41 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PrelaunchOracle&gt; as anchor_lang::Key&gt;::key(move _42)</td></tr></table>>];
    bb15__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">_40 = &amp;_41<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_36 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _37, move _40)</td></tr></table>>];
    bb16__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb17__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_43)<br/>_43 = ()<br/>_35 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _43)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_44)<br/>_44 = error::ErrorCode::DefaultError<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_74 = const _<br/>_55 = &amp;(*_74)<br/>_54 = &amp;(*_55)<br/>_53 = move _54 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_54)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;_44<br/>_62 = &amp;(*_63)<br/></td></tr><tr><td align="left">_61 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _62)</td></tr></table>>];
    bb19__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_60 = [move _61]<br/>StorageDead(_61)<br/>_59 = &amp;_60<br/>_58 = &amp;(*_59)<br/>_57 = move _58 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_52 = Arguments::&lt;'_&gt;::new_v1(move _53, move _57)</td></tr></table>>];
    bb20__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = format(move _52)</td></tr></table>>];
    bb21__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_55)<br/>_50 = move _51<br/>StorageDead(_51)<br/>_49 = &amp;_50<br/>_48 = &amp;(*_49)<br/></td></tr><tr><td align="left">_47 = &lt;String as Deref&gt;::deref(move _48)</td></tr></table>>];
    bb22__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_46 = &amp;(*_47)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_45 = solana_program::log::sol_log(move _46)</td></tr></table>>];
    bb23__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb24__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = const &quot;prelaunch oracle currently in use&quot;<br/>_65 = &amp;(*_66)<br/></td></tr><tr><td align="left">_64 = solana_program::log::sol_log(move _65)</td></tr></table>>];
    bb25__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>_67 = _44<br/>_35 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _67)<br/>StorageDead(_67)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb27__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_68 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb28__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_34 as Continue).0: ())<br/>_33 = _72<br/>StorageDead(_72)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/>StorageLive(_73)<br/>_73 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _73)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb29__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb30__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_34)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb31__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">return</td></tr></table>>];
    bb34__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">34 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb35__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">35 (cleanup)</td></tr><tr><td align="left">drop(_17)</td></tr></table>>];
    bb36__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">36 (cleanup)</td></tr><tr><td align="left">drop(_3)</td></tr></table>>];
    bb37__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">37 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb38__0_1114 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">38 (cleanup)</td></tr><tr><td align="left" balign="left">_82 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1114 -> bb1__0_1114 [label="return"];
    bb1__0_1114 -> bb2__0_1114 [label="return"];
    bb1__0_1114 -> bb37__0_1114 [label="unwind"];
    bb2__0_1114 -> bb3__0_1114 [label="0"];
    bb2__0_1114 -> bb5__0_1114 [label="1"];
    bb2__0_1114 -> bb4__0_1114 [label="otherwise"];
    bb3__0_1114 -> bb7__0_1114 [label="return"];
    bb3__0_1114 -> bb36__0_1114 [label="unwind"];
    bb5__0_1114 -> bb6__0_1114 [label="return"];
    bb5__0_1114 -> bb38__0_1114 [label="unwind"];
    bb6__0_1114 -> bb32__0_1114 [label=""];
    bb7__0_1114 -> bb8__0_1114 [label="return"];
    bb7__0_1114 -> bb36__0_1114 [label="unwind"];
    bb8__0_1114 -> bb9__0_1114 [label="return"];
    bb8__0_1114 -> bb36__0_1114 [label="unwind"];
    bb9__0_1114 -> bb10__0_1114 [label="return"];
    bb9__0_1114 -> bb36__0_1114 [label="unwind"];
    bb10__0_1114 -> bb11__0_1114 [label="return"];
    bb10__0_1114 -> bb35__0_1114 [label="unwind"];
    bb11__0_1114 -> bb12__0_1114 [label="return"];
    bb11__0_1114 -> bb35__0_1114 [label="unwind"];
    bb12__0_1114 -> bb13__0_1114 [label="return"];
    bb12__0_1114 -> bb36__0_1114 [label="unwind"];
    bb13__0_1114 -> bb14__0_1114 [label="return"];
    bb13__0_1114 -> bb36__0_1114 [label="unwind"];
    bb14__0_1114 -> bb15__0_1114 [label="return"];
    bb14__0_1114 -> bb36__0_1114 [label="unwind"];
    bb15__0_1114 -> bb16__0_1114 [label="return"];
    bb15__0_1114 -> bb36__0_1114 [label="unwind"];
    bb16__0_1114 -> bb18__0_1114 [label="0"];
    bb16__0_1114 -> bb17__0_1114 [label="otherwise"];
    bb17__0_1114 -> bb26__0_1114 [label=""];
    bb18__0_1114 -> bb19__0_1114 [label="return"];
    bb18__0_1114 -> bb36__0_1114 [label="unwind"];
    bb19__0_1114 -> bb20__0_1114 [label="return"];
    bb19__0_1114 -> bb36__0_1114 [label="unwind"];
    bb20__0_1114 -> bb21__0_1114 [label="return"];
    bb20__0_1114 -> bb36__0_1114 [label="unwind"];
    bb21__0_1114 -> bb22__0_1114 [label="return"];
    bb21__0_1114 -> bb34__0_1114 [label="unwind"];
    bb22__0_1114 -> bb23__0_1114 [label="return"];
    bb22__0_1114 -> bb34__0_1114 [label="unwind"];
    bb23__0_1114 -> bb24__0_1114 [label="return"];
    bb23__0_1114 -> bb36__0_1114 [label="unwind"];
    bb24__0_1114 -> bb25__0_1114 [label="return"];
    bb24__0_1114 -> bb36__0_1114 [label="unwind"];
    bb25__0_1114 -> bb26__0_1114 [label=""];
    bb26__0_1114 -> bb27__0_1114 [label="return"];
    bb26__0_1114 -> bb36__0_1114 [label="unwind"];
    bb27__0_1114 -> bb28__0_1114 [label="0"];
    bb27__0_1114 -> bb29__0_1114 [label="1"];
    bb27__0_1114 -> bb4__0_1114 [label="otherwise"];
    bb28__0_1114 -> bb31__0_1114 [label="return"];
    bb28__0_1114 -> bb37__0_1114 [label="unwind"];
    bb29__0_1114 -> bb30__0_1114 [label="return"];
    bb29__0_1114 -> bb36__0_1114 [label="unwind"];
    bb30__0_1114 -> bb32__0_1114 [label="return"];
    bb30__0_1114 -> bb37__0_1114 [label="unwind"];
    bb31__0_1114 -> bb33__0_1114 [label=""];
    bb32__0_1114 -> bb33__0_1114 [label=""];
    bb34__0_1114 -> bb36__0_1114 [label="return"];
    bb35__0_1114 -> bb36__0_1114 [label="return"];
    bb36__0_1114 -> bb37__0_1114 [label="return"];
    bb38__0_1114 -> bb37__0_1114 [label=""];
}
