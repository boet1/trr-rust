digraph Mir_0_2597 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn math::orders::get_price_for_perp_order(_1: u64, _2: controller::position::PositionDirection, _3: state::order_params::PostOnlyParam, _4: &amp;ReErased state::perp_market::AMM) -&gt; std::result::Result&lt;u64, error::ErrorCode&gt;<br align="left"/>let mut _5: u64;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _7: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _8: u64;<br align="left"/>let mut _9: u64;<br align="left"/>let mut _10: controller::position::PositionDirection;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: u64;<br align="left"/>let _16: ();<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let mut _19: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>let _20: state::order_params::PostOnlyParam;<br align="left"/>let _21: u64;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _24: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u64;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: u64;<br align="left"/>let mut _32: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _33: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _34: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _35: u64;<br align="left"/>let mut _36: isize;<br align="left"/>let _37: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _40: u64;<br align="left"/>let mut _41: bool;<br align="left"/>let mut _42: u64;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: u64;<br align="left"/>let mut _49: isize;<br align="left"/>let _50: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _51: !;<br align="left"/>let mut _52: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _53: u64;<br align="left"/>let _54: u64;<br align="left"/>let mut _55: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _56: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _57: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: u64;<br align="left"/>let mut _64: bool;<br align="left"/>let mut _65: u64;<br align="left"/>let mut _66: u64;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _69: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _70: u64;<br align="left"/>let mut _71: u64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u64;<br align="left"/>let mut _77: u64;<br align="left"/>let mut _78: &amp;ReErased state::order_params::PostOnlyParam;<br align="left"/>debug price =&gt; _1;<br align="left"/>debug direction =&gt; _2;<br align="left"/>debug post_only =&gt; _3;<br align="left"/>debug amm =&gt; _4;<br align="left"/>debug limit_price =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug reserve_price =&gt; _21;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug amm_ask =&gt; _31;<br align="left"/>debug residual =&gt; _37;<br align="left"/>debug val =&gt; _40;<br align="left"/>debug residual =&gt; _50;<br align="left"/>debug val =&gt; _53;<br align="left"/>debug amm_bid =&gt; _54;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>>;
    bb0__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _1<br/>StorageLive(_9)<br/>_9 = ((*_4).53: u64)<br/>StorageLive(_10)<br/>_10 = _2<br/></td></tr><tr><td align="left">_7 = math::orders::standardize_price(move _8, move _9, move _10)</td></tr></table>>];
    bb1__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_6 as Continue).0: u64)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = &amp;_3<br/>StorageLive(_19)<br/>_78 = const _<br/>_19 = &amp;(*_78)<br/></td></tr><tr><td align="left">_17 = &lt;PostOnlyParam as PartialEq&gt;::eq(move _18, move _19)</td></tr></table>>];
    bb4__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb8__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_4)<br/></td></tr><tr><td align="left">_23 = AMM::reserve_price(move _24)</td></tr></table>>];
    bb9__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb11__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: u64)<br/>_21 = _29<br/>StorageDead(_29)<br/>StorageDead(_22)<br/>_30 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb12__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb13__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_4)<br/>StorageLive(_58)<br/>_58 = _21<br/></td></tr><tr><td align="left">_56 = AMM::bid_price(move _57, move _58)</td></tr></table>>];
    bb15__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>_34 = &amp;(*_4)<br/>StorageLive(_35)<br/>_35 = _21<br/></td></tr><tr><td align="left">_33 = AMM::ask_price(move _34, move _35)</td></tr></table>>];
    bb16__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">_32 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _33)</td></tr></table>>];
    bb17__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_36 = discriminant(_32)<br/></td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb18__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_40)<br/>_40 = ((_32 as Continue).0: u64)<br/>_31 = _40<br/>StorageDead(_40)<br/>StorageDead(_32)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = _5<br/>StorageLive(_43)<br/>_43 = _31<br/>_41 = Ge(move _42, move _43)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb19__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_32 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_39)<br/>_39 = _37<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _39)</td></tr></table>>];
    bb20__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/>StorageDead(_37)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = _31<br/>StorageLive(_48)<br/>_48 = ((*_4).53: u64)<br/></td></tr><tr><td align="left">_46 = &lt;u64 as SafeMath&gt;::safe_sub(move _47, move _48)</td></tr></table>>];
    bb22__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_42)<br/>_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb24__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_49 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _49)</td></tr></table>>];
    bb25__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_45 as Continue).0: u64)<br/>_44 = _53<br/>StorageDead(_53)<br/>_5 = move _44<br/>StorageDead(_44)<br/>StorageDead(_45)<br/>_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_52)<br/>_52 = _50<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _52)</td></tr></table>>];
    bb27__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_44)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _56)</td></tr></table>>];
    bb30__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>_59 = discriminant(_55)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb31__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_55 as Continue).0: u64)<br/>_54 = _63<br/>StorageDead(_63)<br/>StorageDead(_55)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>_65 = _5<br/>StorageLive(_66)<br/>_66 = _54<br/>_64 = Le(move _65, move _66)<br/></td></tr><tr><td align="left">switchInt(move _64)</td></tr></table>>];
    bb32__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_55 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb33__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _54<br/>StorageLive(_71)<br/>_71 = ((*_4).53: u64)<br/></td></tr><tr><td align="left">_69 = &lt;u64 as SafeMath&gt;::safe_add(move _70, move _71)</td></tr></table>>];
    bb35__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb37__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_72 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb38__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_68 as Continue).0: u64)<br/>_67 = _76<br/>StorageDead(_76)<br/>_5 = move _67<br/>StorageDead(_67)<br/>StorageDead(_68)<br/>_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb40__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>_16 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_77)<br/>_77 = _5<br/>_0 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Ok(move _77)<br/>StorageDead(_77)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_2597 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2597 -> bb1__0_2597 [label="return"];
    bb1__0_2597 -> bb2__0_2597 [label="return"];
    bb2__0_2597 -> bb3__0_2597 [label="0"];
    bb2__0_2597 -> bb5__0_2597 [label="1"];
    bb2__0_2597 -> bb4__0_2597 [label="otherwise"];
    bb3__0_2597 -> bb7__0_2597 [label="return"];
    bb5__0_2597 -> bb6__0_2597 [label="return"];
    bb6__0_2597 -> bb48__0_2597 [label=""];
    bb7__0_2597 -> bb43__0_2597 [label="0"];
    bb7__0_2597 -> bb8__0_2597 [label="otherwise"];
    bb8__0_2597 -> bb9__0_2597 [label="return"];
    bb9__0_2597 -> bb10__0_2597 [label="return"];
    bb10__0_2597 -> bb11__0_2597 [label="0"];
    bb10__0_2597 -> bb12__0_2597 [label="1"];
    bb10__0_2597 -> bb4__0_2597 [label="otherwise"];
    bb11__0_2597 -> bb15__0_2597 [label="0"];
    bb11__0_2597 -> bb14__0_2597 [label="1"];
    bb11__0_2597 -> bb4__0_2597 [label="otherwise"];
    bb12__0_2597 -> bb13__0_2597 [label="return"];
    bb13__0_2597 -> bb47__0_2597 [label=""];
    bb14__0_2597 -> bb29__0_2597 [label="return"];
    bb15__0_2597 -> bb16__0_2597 [label="return"];
    bb16__0_2597 -> bb17__0_2597 [label="return"];
    bb17__0_2597 -> bb18__0_2597 [label="0"];
    bb17__0_2597 -> bb19__0_2597 [label="1"];
    bb17__0_2597 -> bb4__0_2597 [label="otherwise"];
    bb18__0_2597 -> bb22__0_2597 [label="0"];
    bb18__0_2597 -> bb21__0_2597 [label="otherwise"];
    bb19__0_2597 -> bb20__0_2597 [label="return"];
    bb20__0_2597 -> bb46__0_2597 [label=""];
    bb21__0_2597 -> bb23__0_2597 [label="return"];
    bb22__0_2597 -> bb28__0_2597 [label=""];
    bb23__0_2597 -> bb24__0_2597 [label="return"];
    bb24__0_2597 -> bb25__0_2597 [label="0"];
    bb24__0_2597 -> bb26__0_2597 [label="1"];
    bb24__0_2597 -> bb4__0_2597 [label="otherwise"];
    bb25__0_2597 -> bb28__0_2597 [label=""];
    bb26__0_2597 -> bb27__0_2597 [label="return"];
    bb27__0_2597 -> bb46__0_2597 [label=""];
    bb28__0_2597 -> bb42__0_2597 [label=""];
    bb29__0_2597 -> bb30__0_2597 [label="return"];
    bb30__0_2597 -> bb31__0_2597 [label="0"];
    bb30__0_2597 -> bb32__0_2597 [label="1"];
    bb30__0_2597 -> bb4__0_2597 [label="otherwise"];
    bb31__0_2597 -> bb35__0_2597 [label="0"];
    bb31__0_2597 -> bb34__0_2597 [label="otherwise"];
    bb32__0_2597 -> bb33__0_2597 [label="return"];
    bb33__0_2597 -> bb45__0_2597 [label=""];
    bb34__0_2597 -> bb36__0_2597 [label="return"];
    bb35__0_2597 -> bb41__0_2597 [label=""];
    bb36__0_2597 -> bb37__0_2597 [label="return"];
    bb37__0_2597 -> bb38__0_2597 [label="0"];
    bb37__0_2597 -> bb39__0_2597 [label="1"];
    bb37__0_2597 -> bb4__0_2597 [label="otherwise"];
    bb38__0_2597 -> bb41__0_2597 [label=""];
    bb39__0_2597 -> bb40__0_2597 [label="return"];
    bb40__0_2597 -> bb45__0_2597 [label=""];
    bb41__0_2597 -> bb42__0_2597 [label=""];
    bb42__0_2597 -> bb44__0_2597 [label=""];
    bb43__0_2597 -> bb44__0_2597 [label=""];
    bb44__0_2597 -> bb49__0_2597 [label=""];
    bb45__0_2597 -> bb47__0_2597 [label=""];
    bb46__0_2597 -> bb47__0_2597 [label=""];
    bb47__0_2597 -> bb48__0_2597 [label=""];
    bb48__0_2597 -> bb49__0_2597 [label=""];
}
