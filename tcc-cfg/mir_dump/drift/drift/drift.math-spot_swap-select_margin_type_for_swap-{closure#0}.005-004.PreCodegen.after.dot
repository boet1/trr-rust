digraph Mir_0_2821 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn select_margin_type_for_swap::{closure#0}(_1: &amp;ReErased Closure(DefId(0:2821 ~ drift[d311]::math::spot_swap::select_margin_type_for_swap::{closure#0}), [i8, Binder(extern &quot;RustCall&quot; fn((&amp;ReBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon }) state::spot_market::SpotMarket, &amp;ReBound(DebruijnIndex(0), BoundRegion { var: 1, kind: BrAnon }) state::oracle::StrictOraclePrice, i128)) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;, [Region(BrAnon), Region(BrAnon)]), ()]), _2: &amp;ReErased state::spot_market::SpotMarket, _3: &amp;ReErased state::oracle::StrictOraclePrice, _4: i128) -&gt; std::result::Result&lt;i128, error::ErrorCode&gt;<br align="left"/>let _5: i128;<br align="left"/>let mut _6: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _7: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _8: i128;<br align="left"/>let mut _9: u32;<br align="left"/>let mut _10: &amp;ReErased state::oracle::StrictOraclePrice;<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _15: i128;<br align="left"/>let _16: u32;<br align="left"/>let mut _17: bool;<br align="left"/>let mut _18: i128;<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _20: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _21: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _22: u128;<br align="left"/>let mut _23: i128;<br align="left"/>let mut _24: i64;<br align="left"/>let mut _25: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _26: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _27: math::margin::MarginRequirementType;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: u32;<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _34: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: i128;<br align="left"/>let mut _38: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _39: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let _40: math::margin::MarginRequirementType;<br align="left"/>let mut _41: isize;<br align="left"/>let _42: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _43: !;<br align="left"/>let mut _44: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _45: u32;<br align="left"/>let mut _46: i128;<br align="left"/>let mut _47: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _48: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _49: i128;<br align="left"/>let mut _50: i128;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _52: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _53: u32;<br align="left"/>let mut _54: isize;<br align="left"/>let _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _56: !;<br align="left"/>let mut _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _58: i128;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: i128;<br align="left"/>let mut _64: i128;<br align="left"/>let mut _65: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _66: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: i128;<br align="left"/>let mut _72: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>let mut _73: &amp;ReErased math::margin::MarginRequirementType;<br align="left"/>debug market =&gt; _2;<br align="left"/>debug strict_oracle_price =&gt; _3;<br align="left"/>debug token_amount =&gt; _4;<br align="left"/>debug token_value =&gt; _5;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug weight =&gt; _16;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _42;<br align="left"/>debug val =&gt; _45;<br align="left"/>debug residual =&gt; _55;<br align="left"/>debug val =&gt; _58;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>>;
    bb0__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _4<br/>StorageLive(_9)<br/>_9 = ((*_2).41: u32)<br/>StorageLive(_10)<br/>_10 = &amp;(*_3)<br/></td></tr><tr><td align="left">_7 = get_strict_token_value(move _8, move _9, move _10)</td></tr></table>>];
    bb1__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">_6 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _7)</td></tr></table>>];
    bb2__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>_11 = discriminant(_6)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb3__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_6 as Continue).0: i128)<br/>_5 = _15<br/>StorageDead(_15)<br/>StorageDead(_6)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _4<br/>_17 = Ge(move _18, const 0_i128)<br/></td></tr><tr><td align="left">switchInt(move _17)</td></tr></table>>];
    bb4__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_6 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_14)<br/>_14 = _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb6__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = &amp;(*_2)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _4<br/></td></tr><tr><td align="left">_22 = core::num::&lt;impl i128&gt;::unsigned_abs(move _23)</td></tr></table>>];
    bb8__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;(*_2)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_37 = _4<br/></td></tr><tr><td align="left">_36 = core::num::&lt;impl i128&gt;::unsigned_abs(move _37)</td></tr></table>>];
    bb9__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>_24 = ((*_3).0: i64)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_72 = const _<br/>_26 = &amp;(*_72)<br/>_25 = &amp;(*_26)<br/></td></tr><tr><td align="left">_20 = SpotMarket::get_asset_weight(move _21, move _22, move _24, move _25)</td></tr></table>>];
    bb10__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb11__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_28 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb12__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_19 as Continue).0: u32)<br/>_16 = _32<br/>StorageDead(_32)<br/>StorageDead(_26)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb14__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_26)<br/>StorageDead(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_73 = const _<br/>_39 = &amp;(*_73)<br/>_38 = &amp;(*_39)<br/></td></tr><tr><td align="left">_34 = SpotMarket::get_liability_weight(move _35, move _36, move _38)</td></tr></table>>];
    bb16__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb17__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_41 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _41)</td></tr></table>>];
    bb18__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_45)<br/>_45 = ((_33 as Continue).0: u32)<br/>_16 = _45<br/>StorageDead(_45)<br/>StorageDead(_39)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_42)<br/>_42 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_44)<br/>_44 = _42<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _44)</td></tr></table>>];
    bb20__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_33)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = _5<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _16<br/></td></tr><tr><td align="left">_52 = &lt;u32 as Cast&gt;::cast::&lt;i128&gt;(move _53)</td></tr></table>>];
    bb22__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb23__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_54 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _54)</td></tr></table>>];
    bb24__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_58)<br/>_58 = ((_51 as Continue).0: i128)<br/>_50 = _58<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_48 = &lt;i128 as SafeMath&gt;::safe_mul(move _49, move _50)</td></tr></table>>];
    bb25__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_55)<br/>_55 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_57)<br/>_57 = _55<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _57)</td></tr></table>>];
    bb26__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_55)<br/>StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _48)</td></tr></table>>];
    bb28__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>_59 = discriminant(_47)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb29__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_47 as Continue).0: i128)<br/>_46 = _63<br/>StorageDead(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/></td></tr><tr><td align="left">_66 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(const _)</td></tr></table>>];
    bb30__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_47 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb31__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">_65 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _66)</td></tr></table>>];
    bb33__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>_67 = discriminant(_65)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb34__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_65 as Continue).0: i128)<br/>_64 = _71<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">_0 = &lt;i128 as SafeMath&gt;::safe_div(move _46, move _64)</td></tr></table>>];
    bb35__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_65 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb36__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_64)<br/>StorageDead(_46)<br/>StorageDead(_16)<br/>StorageDead(_5)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_46)<br/>StorageDead(_16)<br/>StorageDead(_5)<br/>StorageDead(_65)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>StorageDead(_16)<br/>StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_2821 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2821 -> bb1__0_2821 [label="return"];
    bb1__0_2821 -> bb2__0_2821 [label="return"];
    bb2__0_2821 -> bb3__0_2821 [label="0"];
    bb2__0_2821 -> bb5__0_2821 [label="1"];
    bb2__0_2821 -> bb4__0_2821 [label="otherwise"];
    bb3__0_2821 -> bb8__0_2821 [label="0"];
    bb3__0_2821 -> bb7__0_2821 [label="otherwise"];
    bb5__0_2821 -> bb6__0_2821 [label="return"];
    bb6__0_2821 -> bb41__0_2821 [label=""];
    bb7__0_2821 -> bb9__0_2821 [label="return"];
    bb8__0_2821 -> bb15__0_2821 [label="return"];
    bb9__0_2821 -> bb10__0_2821 [label="return"];
    bb10__0_2821 -> bb11__0_2821 [label="return"];
    bb11__0_2821 -> bb12__0_2821 [label="0"];
    bb11__0_2821 -> bb13__0_2821 [label="1"];
    bb11__0_2821 -> bb4__0_2821 [label="otherwise"];
    bb12__0_2821 -> bb21__0_2821 [label=""];
    bb13__0_2821 -> bb14__0_2821 [label="return"];
    bb14__0_2821 -> bb40__0_2821 [label=""];
    bb15__0_2821 -> bb16__0_2821 [label="return"];
    bb16__0_2821 -> bb17__0_2821 [label="return"];
    bb17__0_2821 -> bb18__0_2821 [label="0"];
    bb17__0_2821 -> bb19__0_2821 [label="1"];
    bb17__0_2821 -> bb4__0_2821 [label="otherwise"];
    bb18__0_2821 -> bb21__0_2821 [label=""];
    bb19__0_2821 -> bb20__0_2821 [label="return"];
    bb20__0_2821 -> bb40__0_2821 [label=""];
    bb21__0_2821 -> bb22__0_2821 [label="return"];
    bb22__0_2821 -> bb23__0_2821 [label="return"];
    bb23__0_2821 -> bb24__0_2821 [label="0"];
    bb23__0_2821 -> bb25__0_2821 [label="1"];
    bb23__0_2821 -> bb4__0_2821 [label="otherwise"];
    bb24__0_2821 -> bb27__0_2821 [label="return"];
    bb25__0_2821 -> bb26__0_2821 [label="return"];
    bb26__0_2821 -> bb38__0_2821 [label=""];
    bb27__0_2821 -> bb28__0_2821 [label="return"];
    bb28__0_2821 -> bb29__0_2821 [label="0"];
    bb28__0_2821 -> bb30__0_2821 [label="1"];
    bb28__0_2821 -> bb4__0_2821 [label="otherwise"];
    bb29__0_2821 -> bb32__0_2821 [label="return"];
    bb30__0_2821 -> bb31__0_2821 [label="return"];
    bb31__0_2821 -> bb38__0_2821 [label=""];
    bb32__0_2821 -> bb33__0_2821 [label="return"];
    bb33__0_2821 -> bb34__0_2821 [label="0"];
    bb33__0_2821 -> bb35__0_2821 [label="1"];
    bb33__0_2821 -> bb4__0_2821 [label="otherwise"];
    bb34__0_2821 -> bb37__0_2821 [label="return"];
    bb35__0_2821 -> bb36__0_2821 [label="return"];
    bb36__0_2821 -> bb39__0_2821 [label=""];
    bb37__0_2821 -> bb42__0_2821 [label=""];
    bb38__0_2821 -> bb39__0_2821 [label=""];
    bb39__0_2821 -> bb42__0_2821 [label=""];
    bb40__0_2821 -> bb41__0_2821 [label=""];
    bb41__0_2821 -> bb42__0_2821 [label=""];
}
