digraph Mir_0_334 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn controller::liquidation::liquidate_spot(_1: u16, _2: u16, _3: u128, _4: std::option::Option&lt;u64&gt;, _5: &amp;ReErased mut state::user::User, _6: &amp;ReErased anchor_lang::prelude::Pubkey, _7: &amp;ReErased mut state::user::UserStats, _8: &amp;ReErased mut state::user::User, _9: &amp;ReErased anchor_lang::prelude::Pubkey, _10: &amp;ReErased mut state::user::UserStats, _11: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;, _12: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;, _13: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;, _14: i64, _15: u64, _16: &amp;ReErased state::state::State) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _17: u32;<br align="left"/>let _18: u128;<br align="left"/>let mut _19: u16;<br align="left"/>let _20: u128;<br align="left"/>let mut _21: u8;<br align="left"/>let _22: ();<br align="left"/>let mut _23: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _24: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: &amp;ReErased state::user::User;<br align="left"/>let mut _27: ();<br align="left"/>let _28: error::ErrorCode;<br align="left"/>let _29: ();<br align="left"/>let mut _30: &amp;ReErased str;<br align="left"/>let _31: &amp;ReErased str;<br align="left"/>let mut _32: &amp;ReErased std::string::String;<br align="left"/>let _33: &amp;ReErased std::string::String;<br align="left"/>let _34: std::string::String;<br align="left"/>let _35: std::string::String;<br align="left"/>let mut _36: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _37: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _38: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _39: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _40: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _41: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _43: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _44: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _45: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _46: &amp;ReErased error::ErrorCode;<br align="left"/>let _47: &amp;ReErased error::ErrorCode;<br align="left"/>let _48: ();<br align="left"/>let mut _49: &amp;ReErased str;<br align="left"/>let _50: &amp;ReErased str;<br align="left"/>let mut _51: &amp;ReErased std::string::String;<br align="left"/>let _52: &amp;ReErased std::string::String;<br align="left"/>let _53: std::string::String;<br align="left"/>let _54: std::string::String;<br align="left"/>let mut _55: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _56: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _57: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _58: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _59: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _60: error::ErrorCode;<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _65: ();<br align="left"/>let _66: ();<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _68: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: &amp;ReErased state::user::User;<br align="left"/>let mut _71: ();<br align="left"/>let _72: error::ErrorCode;<br align="left"/>let _73: ();<br align="left"/>let mut _74: &amp;ReErased str;<br align="left"/>let _75: &amp;ReErased str;<br align="left"/>let mut _76: &amp;ReErased std::string::String;<br align="left"/>let _77: &amp;ReErased std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let _79: std::string::String;<br align="left"/>let mut _80: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _82: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _83: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _84: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _88: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _89: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _90: &amp;ReErased error::ErrorCode;<br align="left"/>let _91: &amp;ReErased error::ErrorCode;<br align="left"/>let _92: ();<br align="left"/>let mut _93: &amp;ReErased str;<br align="left"/>let _94: &amp;ReErased str;<br align="left"/>let mut _95: &amp;ReErased std::string::String;<br align="left"/>let _96: &amp;ReErased std::string::String;<br align="left"/>let _97: std::string::String;<br align="left"/>let _98: std::string::String;<br align="left"/>let mut _99: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _100: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _102: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _103: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _104: error::ErrorCode;<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _109: ();<br align="left"/>let _110: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _112: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _113: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased u16;<br align="left"/>let _115: &amp;ReErased u16;<br align="left"/>let mut _116: isize;<br align="left"/>let _117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _118: !;<br align="left"/>let mut _119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _120: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _121: ();<br align="left"/>let mut _122: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _123: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _124: bool;<br align="left"/>let mut _125: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _126: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _127: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _128: state::paused_operations::SpotOperation;<br align="left"/>let mut _129: ();<br align="left"/>let _130: error::ErrorCode;<br align="left"/>let _131: ();<br align="left"/>let mut _132: &amp;ReErased str;<br align="left"/>let _133: &amp;ReErased str;<br align="left"/>let mut _134: &amp;ReErased std::string::String;<br align="left"/>let _135: &amp;ReErased std::string::String;<br align="left"/>let _136: std::string::String;<br align="left"/>let _137: std::string::String;<br align="left"/>let mut _138: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _139: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _140: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _141: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _142: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _143: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _144: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _145: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _146: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _147: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _148: &amp;ReErased error::ErrorCode;<br align="left"/>let _149: &amp;ReErased error::ErrorCode;<br align="left"/>let _150: ();<br align="left"/>let mut _151: &amp;ReErased str;<br align="left"/>let _152: &amp;ReErased str;<br align="left"/>let mut _153: &amp;ReErased std::string::String;<br align="left"/>let _154: &amp;ReErased std::string::String;<br align="left"/>let _155: std::string::String;<br align="left"/>let _156: std::string::String;<br align="left"/>let mut _157: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _158: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _159: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _160: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _161: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _162: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _163: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _164: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _165: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _166: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _167: &amp;ReErased u16;<br align="left"/>let _168: &amp;ReErased u16;<br align="left"/>let mut _169: error::ErrorCode;<br align="left"/>let mut _170: isize;<br align="left"/>let _171: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _172: !;<br align="left"/>let mut _173: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _174: ();<br align="left"/>let _175: ();<br align="left"/>let mut _176: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _177: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _178: bool;<br align="left"/>let mut _179: u8;<br align="left"/>let mut _180: u8;<br align="left"/>let mut _181: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _182: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _183: ();<br align="left"/>let _184: error::ErrorCode;<br align="left"/>let _185: ();<br align="left"/>let mut _186: &amp;ReErased str;<br align="left"/>let _187: &amp;ReErased str;<br align="left"/>let mut _188: &amp;ReErased std::string::String;<br align="left"/>let _189: &amp;ReErased std::string::String;<br align="left"/>let _190: std::string::String;<br align="left"/>let _191: std::string::String;<br align="left"/>let mut _192: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _193: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _194: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _195: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _196: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _197: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _198: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _199: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _200: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _201: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _202: &amp;ReErased error::ErrorCode;<br align="left"/>let _203: &amp;ReErased error::ErrorCode;<br align="left"/>let _204: ();<br align="left"/>let mut _205: &amp;ReErased str;<br align="left"/>let _206: &amp;ReErased str;<br align="left"/>let mut _207: &amp;ReErased std::string::String;<br align="left"/>let _208: &amp;ReErased std::string::String;<br align="left"/>let _209: std::string::String;<br align="left"/>let _210: std::string::String;<br align="left"/>let mut _211: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _212: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _213: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _214: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _215: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _216: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _217: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _218: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _219: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _220: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _221: &amp;ReErased u8;<br align="left"/>let _222: &amp;ReErased u8;<br align="left"/>let mut _223: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _224: &amp;ReErased u8;<br align="left"/>let _225: &amp;ReErased u8;<br align="left"/>let _226: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _227: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _228: error::ErrorCode;<br align="left"/>let mut _229: isize;<br align="left"/>let _230: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _231: !;<br align="left"/>let mut _232: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _233: ();<br align="left"/>let _234: ();<br align="left"/>let mut _235: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _236: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _237: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _238: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _239: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _240: &amp;ReErased u16;<br align="left"/>let _241: &amp;ReErased u16;<br align="left"/>let mut _242: isize;<br align="left"/>let _243: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _244: !;<br align="left"/>let mut _245: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _246: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _247: ();<br align="left"/>let mut _248: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _249: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _250: bool;<br align="left"/>let mut _251: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _252: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _253: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _254: state::paused_operations::SpotOperation;<br align="left"/>let mut _255: ();<br align="left"/>let _256: error::ErrorCode;<br align="left"/>let _257: ();<br align="left"/>let mut _258: &amp;ReErased str;<br align="left"/>let _259: &amp;ReErased str;<br align="left"/>let mut _260: &amp;ReErased std::string::String;<br align="left"/>let _261: &amp;ReErased std::string::String;<br align="left"/>let _262: std::string::String;<br align="left"/>let _263: std::string::String;<br align="left"/>let mut _264: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _265: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _266: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _267: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _268: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _269: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _270: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _271: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _272: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _273: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _274: &amp;ReErased error::ErrorCode;<br align="left"/>let _275: &amp;ReErased error::ErrorCode;<br align="left"/>let _276: ();<br align="left"/>let mut _277: &amp;ReErased str;<br align="left"/>let _278: &amp;ReErased str;<br align="left"/>let mut _279: &amp;ReErased std::string::String;<br align="left"/>let _280: &amp;ReErased std::string::String;<br align="left"/>let _281: std::string::String;<br align="left"/>let _282: std::string::String;<br align="left"/>let mut _283: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _284: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _285: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _286: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _287: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _288: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _289: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _290: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _291: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _292: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _293: &amp;ReErased u16;<br align="left"/>let _294: &amp;ReErased u16;<br align="left"/>let mut _295: error::ErrorCode;<br align="left"/>let mut _296: isize;<br align="left"/>let _297: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _298: !;<br align="left"/>let mut _299: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _300: ();<br align="left"/>let _301: ();<br align="left"/>let mut _302: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _303: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _304: bool;<br align="left"/>let mut _305: u8;<br align="left"/>let mut _306: u8;<br align="left"/>let mut _307: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _308: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _309: ();<br align="left"/>let _310: error::ErrorCode;<br align="left"/>let _311: ();<br align="left"/>let mut _312: &amp;ReErased str;<br align="left"/>let _313: &amp;ReErased str;<br align="left"/>let mut _314: &amp;ReErased std::string::String;<br align="left"/>let _315: &amp;ReErased std::string::String;<br align="left"/>let _316: std::string::String;<br align="left"/>let _317: std::string::String;<br align="left"/>let mut _318: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _319: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _320: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _321: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _322: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _323: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _324: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _325: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _326: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _327: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _328: &amp;ReErased error::ErrorCode;<br align="left"/>let _329: &amp;ReErased error::ErrorCode;<br align="left"/>let _330: ();<br align="left"/>let mut _331: &amp;ReErased str;<br align="left"/>let _332: &amp;ReErased str;<br align="left"/>let mut _333: &amp;ReErased std::string::String;<br align="left"/>let _334: &amp;ReErased std::string::String;<br align="left"/>let _335: std::string::String;<br align="left"/>let _336: std::string::String;<br align="left"/>let mut _337: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _338: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _339: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _340: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _341: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _342: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _343: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _344: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _345: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _346: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _347: &amp;ReErased u8;<br align="left"/>let _348: &amp;ReErased u8;<br align="left"/>let mut _349: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _350: &amp;ReErased u8;<br align="left"/>let _351: &amp;ReErased u8;<br align="left"/>let _352: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _353: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _354: error::ErrorCode;<br align="left"/>let mut _355: isize;<br align="left"/>let _356: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _357: !;<br align="left"/>let mut _358: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _359: ();<br align="left"/>let _360: ();<br align="left"/>let mut _361: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _362: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _363: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _364: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _365: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _366: &amp;ReErased state::user::User;<br align="left"/>let mut _367: u16;<br align="left"/>let mut _368: Closure(DefId(0:335 ~ drift[d311]::controller::liquidation::liquidate_spot::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _369: &amp;ReErased u16;<br align="left"/>let mut _370: isize;<br align="left"/>let _371: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _372: !;<br align="left"/>let mut _373: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _374: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _375: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _376: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _377: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _378: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _379: &amp;ReErased state::user::User;<br align="left"/>let mut _380: u16;<br align="left"/>let mut _381: Closure(DefId(0:336 ~ drift[d311]::controller::liquidation::liquidate_spot::{closure#1}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _382: &amp;ReErased u16;<br align="left"/>let mut _383: isize;<br align="left"/>let _384: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _385: !;<br align="left"/>let mut _386: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _387: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _388: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _389: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _390: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _391: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _392: &amp;ReErased mut state::user::User;<br align="left"/>let mut _393: u16;<br align="left"/>let mut _394: Closure(DefId(0:337 ~ drift[d311]::controller::liquidation::liquidate_spot::{closure#2}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _395: isize;<br align="left"/>let _396: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _397: !;<br align="left"/>let mut _398: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _399: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let _400: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _401: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _402: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _403: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _404: &amp;ReErased mut state::user::User;<br align="left"/>let mut _405: u16;<br align="left"/>let mut _406: Closure(DefId(0:338 ~ drift[d311]::controller::liquidation::liquidate_spot::{closure#3}), [i32, Binder(extern &quot;RustCall&quot; fn((error::ErrorCode,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _407: isize;<br align="left"/>let _408: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _409: !;<br align="left"/>let mut _410: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _411: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let _412: u128;<br align="left"/>let _413: i64;<br align="left"/>let _414: u32;<br align="left"/>let _415: u32;<br align="left"/>let _416: u32;<br align="left"/>let _417: u8;<br align="left"/>let _418: i64;<br align="left"/>let mut _419: (u128, i64, u32, u32, u32, u8, i64);<br align="left"/>let mut _420: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _421: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _422: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _423: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _424: &amp;ReErased u16;<br align="left"/>let _425: &amp;ReErased u16;<br align="left"/>let mut _426: isize;<br align="left"/>let _427: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _428: !;<br align="left"/>let mut _429: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _430: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _431: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _432: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _433: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _434: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _435: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _436: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _437: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _438: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _439: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _440: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _441: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _442: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _443: isize;<br align="left"/>let _444: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _445: !;<br align="left"/>let mut _446: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _447: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _448: ();<br align="left"/>let mut _449: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _450: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _451: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _452: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _453: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _454: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _455: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _456: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _457: i64;<br align="left"/>let mut _458: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _459: math::oracle::DriftAction;<br align="left"/>let mut _460: isize;<br align="left"/>let _461: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _462: !;<br align="left"/>let mut _463: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _464: ();<br align="left"/>let _465: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _466: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _467: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _468: &amp;ReErased state::user::User;<br align="left"/>let mut _469: u16;<br align="left"/>let mut _470: isize;<br align="left"/>let _471: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _472: !;<br align="left"/>let mut _473: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _474: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _475: ();<br align="left"/>let mut _476: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _477: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _478: bool;<br align="left"/>let mut _479: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _480: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _481: state::spot_market::SpotBalanceType;<br align="left"/>let mut _482: ();<br align="left"/>let _483: error::ErrorCode;<br align="left"/>let _484: ();<br align="left"/>let mut _485: &amp;ReErased str;<br align="left"/>let _486: &amp;ReErased str;<br align="left"/>let mut _487: &amp;ReErased std::string::String;<br align="left"/>let _488: &amp;ReErased std::string::String;<br align="left"/>let _489: std::string::String;<br align="left"/>let _490: std::string::String;<br align="left"/>let mut _491: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _492: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _493: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _494: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _495: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _496: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _497: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _498: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _499: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _500: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _501: &amp;ReErased error::ErrorCode;<br align="left"/>let _502: &amp;ReErased error::ErrorCode;<br align="left"/>let _503: ();<br align="left"/>let mut _504: &amp;ReErased str;<br align="left"/>let _505: &amp;ReErased str;<br align="left"/>let mut _506: error::ErrorCode;<br align="left"/>let mut _507: isize;<br align="left"/>let _508: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _509: !;<br align="left"/>let mut _510: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _511: ();<br align="left"/>let _512: u128;<br align="left"/>let mut _513: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _514: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _515: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _516: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _517: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _518: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _519: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _520: isize;<br align="left"/>let _521: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _522: !;<br align="left"/>let mut _523: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _524: u128;<br align="left"/>let _525: ();<br align="left"/>let mut _526: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _527: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _528: bool;<br align="left"/>let mut _529: u128;<br align="left"/>let mut _530: ();<br align="left"/>let _531: error::ErrorCode;<br align="left"/>let _532: ();<br align="left"/>let mut _533: &amp;ReErased str;<br align="left"/>let _534: &amp;ReErased str;<br align="left"/>let mut _535: &amp;ReErased std::string::String;<br align="left"/>let _536: &amp;ReErased std::string::String;<br align="left"/>let _537: std::string::String;<br align="left"/>let _538: std::string::String;<br align="left"/>let mut _539: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _540: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _541: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _542: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _543: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _544: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _545: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _546: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _547: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _548: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _549: &amp;ReErased error::ErrorCode;<br align="left"/>let _550: &amp;ReErased error::ErrorCode;<br align="left"/>let _551: ();<br align="left"/>let mut _552: &amp;ReErased str;<br align="left"/>let _553: &amp;ReErased str;<br align="left"/>let mut _554: &amp;ReErased std::string::String;<br align="left"/>let _555: &amp;ReErased std::string::String;<br align="left"/>let _556: std::string::String;<br align="left"/>let _557: std::string::String;<br align="left"/>let mut _558: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _559: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _560: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _561: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _562: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _563: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _564: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _565: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _566: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _567: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _568: &amp;ReErased u16;<br align="left"/>let _569: &amp;ReErased u16;<br align="left"/>let mut _570: error::ErrorCode;<br align="left"/>let mut _571: isize;<br align="left"/>let _572: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _573: !;<br align="left"/>let mut _574: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _575: ();<br align="left"/>let _576: i64;<br align="left"/>let mut _577: u128;<br align="left"/>let mut _578: i64;<br align="left"/>let mut _579: u32;<br align="left"/>let mut _580: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _581: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _582: u32;<br align="left"/>let mut _583: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _584: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _585: u32;<br align="left"/>let mut _586: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _587: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _588: u32;<br align="left"/>let mut _589: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _590: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _591: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _592: isize;<br align="left"/>let _593: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _594: !;<br align="left"/>let mut _595: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _596: u32;<br align="left"/>let mut _597: u8;<br align="left"/>let mut _598: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _599: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _600: i64;<br align="left"/>let _601: u128;<br align="left"/>let _602: i64;<br align="left"/>let _603: u32;<br align="left"/>let _604: u32;<br align="left"/>let _605: u32;<br align="left"/>let _606: u8;<br align="left"/>let _607: i64;<br align="left"/>let mut _608: (u128, i64, u32, u32, u32, u8, i64);<br align="left"/>let mut _609: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _610: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _611: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _612: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _613: &amp;ReErased u16;<br align="left"/>let _614: &amp;ReErased u16;<br align="left"/>let mut _615: isize;<br align="left"/>let _616: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _617: !;<br align="left"/>let mut _618: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _619: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _620: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _621: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _622: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let mut _623: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails)&gt;;<br align="left"/>let mut _624: std::result::Result&lt;(&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails), error::ErrorCode&gt;;<br align="left"/>let mut _625: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _626: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _627: &amp;ReErased (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let _628: (anchor_lang::prelude::Pubkey, state::oracle::OracleSource);<br align="left"/>let mut _629: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _630: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _631: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _632: isize;<br align="left"/>let _633: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _634: !;<br align="left"/>let mut _635: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _636: (&amp;ReErased state::oracle::OraclePriceData, &amp;ReErased state::state::ValidityGuardRails);<br align="left"/>let _637: ();<br align="left"/>let mut _638: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _639: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _640: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _641: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _642: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _643: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _644: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let mut _645: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _646: i64;<br align="left"/>let mut _647: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _648: math::oracle::DriftAction;<br align="left"/>let mut _649: isize;<br align="left"/>let _650: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _651: !;<br align="left"/>let mut _652: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _653: ();<br align="left"/>let _654: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _655: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased state::user::SpotPosition&gt;;<br align="left"/>let mut _656: std::result::Result&lt;&amp;ReErased state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _657: &amp;ReErased state::user::User;<br align="left"/>let mut _658: u16;<br align="left"/>let mut _659: isize;<br align="left"/>let _660: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _661: !;<br align="left"/>let mut _662: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _663: &amp;ReErased state::user::SpotPosition;<br align="left"/>let _664: ();<br align="left"/>let mut _665: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _666: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _667: bool;<br align="left"/>let mut _668: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _669: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _670: state::spot_market::SpotBalanceType;<br align="left"/>let mut _671: ();<br align="left"/>let _672: error::ErrorCode;<br align="left"/>let _673: ();<br align="left"/>let mut _674: &amp;ReErased str;<br align="left"/>let _675: &amp;ReErased str;<br align="left"/>let mut _676: &amp;ReErased std::string::String;<br align="left"/>let _677: &amp;ReErased std::string::String;<br align="left"/>let _678: std::string::String;<br align="left"/>let _679: std::string::String;<br align="left"/>let mut _680: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _681: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _682: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _683: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _684: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _685: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _686: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _687: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _688: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _689: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _690: &amp;ReErased error::ErrorCode;<br align="left"/>let _691: &amp;ReErased error::ErrorCode;<br align="left"/>let _692: ();<br align="left"/>let mut _693: &amp;ReErased str;<br align="left"/>let _694: &amp;ReErased str;<br align="left"/>let mut _695: error::ErrorCode;<br align="left"/>let mut _696: isize;<br align="left"/>let _697: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _698: !;<br align="left"/>let mut _699: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _700: ();<br align="left"/>let _701: u128;<br align="left"/>let mut _702: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _703: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _704: &amp;ReErased state::user::SpotPosition;<br align="left"/>let mut _705: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _706: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _707: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _708: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _709: isize;<br align="left"/>let _710: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _711: !;<br align="left"/>let mut _712: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _713: u128;<br align="left"/>let _714: ();<br align="left"/>let mut _715: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _716: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _717: bool;<br align="left"/>let mut _718: u128;<br align="left"/>let mut _719: ();<br align="left"/>let _720: error::ErrorCode;<br align="left"/>let _721: ();<br align="left"/>let mut _722: &amp;ReErased str;<br align="left"/>let _723: &amp;ReErased str;<br align="left"/>let mut _724: &amp;ReErased std::string::String;<br align="left"/>let _725: &amp;ReErased std::string::String;<br align="left"/>let _726: std::string::String;<br align="left"/>let _727: std::string::String;<br align="left"/>let mut _728: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _729: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _730: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _731: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _732: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _733: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _734: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _735: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _736: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _737: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _738: &amp;ReErased error::ErrorCode;<br align="left"/>let _739: &amp;ReErased error::ErrorCode;<br align="left"/>let _740: ();<br align="left"/>let mut _741: &amp;ReErased str;<br align="left"/>let _742: &amp;ReErased str;<br align="left"/>let mut _743: &amp;ReErased std::string::String;<br align="left"/>let _744: &amp;ReErased std::string::String;<br align="left"/>let _745: std::string::String;<br align="left"/>let _746: std::string::String;<br align="left"/>let mut _747: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _748: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _749: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _750: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _751: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _752: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _753: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _754: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _755: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _756: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _757: &amp;ReErased u16;<br align="left"/>let _758: &amp;ReErased u16;<br align="left"/>let mut _759: error::ErrorCode;<br align="left"/>let mut _760: isize;<br align="left"/>let _761: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _762: !;<br align="left"/>let mut _763: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _764: ();<br align="left"/>let _765: i64;<br align="left"/>let mut _766: u128;<br align="left"/>let mut _767: i64;<br align="left"/>let mut _768: u32;<br align="left"/>let mut _769: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _770: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _771: u32;<br align="left"/>let mut _772: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _773: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _774: u32;<br align="left"/>let mut _775: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _776: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _777: u32;<br align="left"/>let mut _778: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _779: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _780: math::liquidation::LiquidationMultiplierType;<br align="left"/>let mut _781: isize;<br align="left"/>let _782: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _783: !;<br align="left"/>let mut _784: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _785: u32;<br align="left"/>let mut _786: u8;<br align="left"/>let mut _787: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _788: &amp;ReErased std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _789: i64;<br align="left"/>let _790: ();<br align="left"/>let mut _791: bool;<br align="left"/>let mut _792: u8;<br align="left"/>let mut _793: bool;<br align="left"/>let mut _794: u8;<br align="left"/>let _795: ();<br align="left"/>let mut _796: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _797: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _798: bool;<br align="left"/>let mut _799: i64;<br align="left"/>let mut _800: bool;<br align="left"/>let mut _801: i64;<br align="left"/>let mut _802: ();<br align="left"/>let _803: error::ErrorCode;<br align="left"/>let _804: ();<br align="left"/>let mut _805: &amp;ReErased str;<br align="left"/>let _806: &amp;ReErased str;<br align="left"/>let mut _807: &amp;ReErased std::string::String;<br align="left"/>let _808: &amp;ReErased std::string::String;<br align="left"/>let _809: std::string::String;<br align="left"/>let _810: std::string::String;<br align="left"/>let mut _811: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _812: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _813: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _814: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _815: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _816: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _817: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _818: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _819: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _820: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _821: &amp;ReErased error::ErrorCode;<br align="left"/>let _822: &amp;ReErased error::ErrorCode;<br align="left"/>let _823: ();<br align="left"/>let mut _824: &amp;ReErased str;<br align="left"/>let _825: &amp;ReErased str;<br align="left"/>let mut _826: &amp;ReErased std::string::String;<br align="left"/>let _827: &amp;ReErased std::string::String;<br align="left"/>let _828: std::string::String;<br align="left"/>let _829: std::string::String;<br align="left"/>let mut _830: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _831: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _832: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _833: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _834: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _835: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _836: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _837: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _838: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _839: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _840: &amp;ReErased i64;<br align="left"/>let _841: &amp;ReErased i64;<br align="left"/>let mut _842: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _843: &amp;ReErased i64;<br align="left"/>let _844: &amp;ReErased i64;<br align="left"/>let mut _845: error::ErrorCode;<br align="left"/>let mut _846: isize;<br align="left"/>let _847: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _848: !;<br align="left"/>let mut _849: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _850: ();<br align="left"/>let _851: state::margin_calculation::MarginContext;<br align="left"/>let mut _852: state::margin_calculation::MarginContext;<br align="left"/>let mut _853: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginContext&gt;;<br align="left"/>let mut _854: std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;;<br align="left"/>let mut _855: state::margin_calculation::MarginContext;<br align="left"/>let mut _856: u32;<br align="left"/>let mut _857: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _858: u16;<br align="left"/>let mut _859: isize;<br align="left"/>let _860: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _861: !;<br align="left"/>let mut _862: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _863: state::margin_calculation::MarginContext;<br align="left"/>let mut _864: &amp;ReErased state::user::User;<br align="left"/>let mut _865: i64;<br align="left"/>let _866: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _867: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _868: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _869: &amp;ReErased mut state::user::User;<br align="left"/>let mut _870: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _871: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _872: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _873: state::margin_calculation::MarginContext;<br align="left"/>let mut _874: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _875: i64;<br align="left"/>let mut _876: isize;<br align="left"/>let _877: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _878: !;<br align="left"/>let mut _879: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _880: state::margin_calculation::MarginCalculation;<br align="left"/>let _881: ();<br align="left"/>let mut _882: bool;<br align="left"/>let mut _883: &amp;ReErased state::user::User;<br align="left"/>let mut _884: bool;<br align="left"/>let mut _885: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _886: !;<br align="left"/>let _887: ();<br align="left"/>let mut _888: &amp;ReErased str;<br align="left"/>let _889: &amp;ReErased str;<br align="left"/>let mut _890: &amp;ReErased std::string::String;<br align="left"/>let _891: &amp;ReErased std::string::String;<br align="left"/>let _892: std::string::String;<br align="left"/>let _893: std::string::String;<br align="left"/>let mut _894: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _895: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _896: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _897: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _898: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _899: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _900: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _901: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _902: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _903: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _904: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let _905: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _906: error::ErrorCode;<br align="left"/>let mut _907: bool;<br align="left"/>let mut _908: &amp;ReErased state::user::User;<br align="left"/>let mut _909: bool;<br align="left"/>let mut _910: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _911: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _912: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _913: isize;<br align="left"/>let _914: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _915: !;<br align="left"/>let mut _916: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _917: bool;<br align="left"/>let mut _918: !;<br align="left"/>let _919: ();<br align="left"/>let mut _920: &amp;ReErased mut state::user::User;<br align="left"/>let mut _921: ();<br align="left"/>let _922: u16;<br align="left"/>let mut _923: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u16&gt;;<br align="left"/>let mut _924: std::result::Result&lt;u16, error::ErrorCode&gt;;<br align="left"/>let mut _925: &amp;ReErased mut state::user::User;<br align="left"/>let mut _926: u64;<br align="left"/>let mut _927: isize;<br align="left"/>let _928: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _929: !;<br align="left"/>let mut _930: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _931: u16;<br align="left"/>let mut _932: u64;<br align="left"/>let _933: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _934: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::vec::Vec&lt;u32, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _935: std::result::Result&lt;std::vec::Vec&lt;u32, std::alloc::Global&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _936: &amp;ReErased mut state::user::User;<br align="left"/>let mut _937: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _938: std::option::Option&lt;&amp;ReErased anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _939: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _940: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _941: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _942: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _943: i64;<br align="left"/>let mut _944: u64;<br align="left"/>let mut _945: state::events::OrderActionExplanation;<br align="left"/>let mut _946: std::option::Option&lt;state::user::MarketType&gt;;<br align="left"/>let mut _947: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _948: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _949: isize;<br align="left"/>let _950: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _951: !;<br align="left"/>let mut _952: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _953: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _954: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _955: bool;<br align="left"/>let mut _956: &amp;ReErased std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let _957: state::margin_calculation::MarginCalculation;<br align="left"/>let mut _958: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginCalculation&gt;;<br align="left"/>let mut _959: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _960: &amp;ReErased state::user::User;<br align="left"/>let mut _961: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _962: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _963: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _964: state::margin_calculation::MarginContext;<br align="left"/>let mut _965: state::margin_calculation::MarginContext;<br align="left"/>let mut _966: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::margin_calculation::MarginContext&gt;;<br align="left"/>let mut _967: std::result::Result&lt;state::margin_calculation::MarginContext, error::ErrorCode&gt;;<br align="left"/>let mut _968: state::margin_calculation::MarginContext;<br align="left"/>let mut _969: u32;<br align="left"/>let mut _970: state::margin_calculation::MarketIdentifier;<br align="left"/>let mut _971: u16;<br align="left"/>let mut _972: isize;<br align="left"/>let _973: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _974: !;<br align="left"/>let mut _975: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _976: state::margin_calculation::MarginContext;<br align="left"/>let mut _977: &amp;ReErased state::user::User;<br align="left"/>let mut _978: i64;<br align="left"/>let mut _979: isize;<br align="left"/>let _980: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _981: !;<br align="left"/>let mut _982: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _983: state::margin_calculation::MarginCalculation;<br align="left"/>let _984: u128;<br align="left"/>let mut _985: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _986: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _987: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _988: isize;<br align="left"/>let _989: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _990: !;<br align="left"/>let mut _991: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _992: u128;<br align="left"/>let _993: u128;<br align="left"/>let mut _994: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _995: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _996: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _997: isize;<br align="left"/>let _998: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _999: !;<br align="left"/>let mut _1000: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1001: u128;<br align="left"/>let mut _1002: u64;<br align="left"/>let mut _1003: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1004: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1005: u128;<br align="left"/>let mut _1006: u128;<br align="left"/>let mut _1007: u128;<br align="left"/>let mut _1008: isize;<br align="left"/>let _1009: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1010: !;<br align="left"/>let mut _1011: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1012: u64;<br align="left"/>let _1013: ();<br align="left"/>let mut _1014: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1015: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1016: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1017: u64;<br align="left"/>let mut _1018: isize;<br align="left"/>let _1019: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1020: !;<br align="left"/>let mut _1021: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1022: ();<br align="left"/>let _1023: ();<br align="left"/>let mut _1024: bool;<br align="left"/>let mut _1025: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1026: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1027: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1028: isize;<br align="left"/>let _1029: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1030: !;<br align="left"/>let mut _1031: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1032: bool;<br align="left"/>let mut _1033: !;<br align="left"/>let _1034: ();<br align="left"/>let _1035: ();<br align="left"/>let mut _1036: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _1037: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1038: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1039: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _1040: &amp;ReErased [u8];<br align="left"/>let _1041: &amp;ReErased [u8];<br align="left"/>let mut _1042: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1043: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1044: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _1045: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1046: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1047: state::events::LiquidationRecord;<br align="left"/>let mut _1048: i64;<br align="left"/>let mut _1049: u16;<br align="left"/>let mut _1050: state::events::LiquidationType;<br align="left"/>let mut _1051: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1052: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1053: u128;<br align="left"/>let mut _1054: i128;<br align="left"/>let mut _1055: bool;<br align="left"/>let mut _1056: &amp;ReErased state::user::User;<br align="left"/>let mut _1057: std::vec::Vec&lt;u32, std::alloc::Global&gt;;<br align="left"/>let mut _1058: u64;<br align="left"/>let mut _1059: state::events::LiquidateSpotRecord;<br align="left"/>let mut _1060: u16;<br align="left"/>let mut _1061: i64;<br align="left"/>let mut _1062: u16;<br align="left"/>let mut _1063: i64;<br align="left"/>let mut _1064: state::events::LiquidationRecord;<br align="left"/>let _1065: ();<br align="left"/>let mut _1066: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1067: ();<br align="left"/>let _1068: u128;<br align="left"/>let mut _1069: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1070: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1071: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1072: isize;<br align="left"/>let _1073: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1074: !;<br align="left"/>let mut _1075: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1076: u128;<br align="left"/>let _1077: u32;<br align="left"/>let mut _1078: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _1079: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _1080: u32;<br align="left"/>let mut _1081: u32;<br align="left"/>let mut _1082: isize;<br align="left"/>let _1083: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1084: !;<br align="left"/>let mut _1085: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1086: u32;<br align="left"/>let _1087: u32;<br align="left"/>let mut _1088: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _1089: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _1090: u128;<br align="left"/>let mut _1091: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1092: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1093: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _1094: u128;<br align="left"/>let mut _1095: isize;<br align="left"/>let _1096: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1097: !;<br align="left"/>let mut _1098: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1099: u128;<br align="left"/>let mut _1100: u128;<br align="left"/>let mut _1101: u32;<br align="left"/>let mut _1102: u32;<br align="left"/>let mut _1103: u32;<br align="left"/>let mut _1104: u32;<br align="left"/>let mut _1105: u32;<br align="left"/>let mut _1106: i64;<br align="left"/>let mut _1107: u32;<br align="left"/>let mut _1108: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1109: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1110: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1112: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1113: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1114: &amp;ReErased u16;<br align="left"/>let _1115: &amp;ReErased u16;<br align="left"/>let mut _1116: isize;<br align="left"/>let _1117: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1118: !;<br align="left"/>let mut _1119: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1120: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1121: isize;<br align="left"/>let _1122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1123: !;<br align="left"/>let mut _1124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1125: u32;<br align="left"/>let _1126: u128;<br align="left"/>let mut _1127: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1128: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1129: u128;<br align="left"/>let mut _1130: u32;<br align="left"/>let mut _1131: u32;<br align="left"/>let mut _1132: u32;<br align="left"/>let mut _1133: u32;<br align="left"/>let mut _1134: u32;<br align="left"/>let mut _1135: i64;<br align="left"/>let mut _1136: u32;<br align="left"/>let mut _1137: isize;<br align="left"/>let _1138: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1139: !;<br align="left"/>let mut _1140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1141: u128;<br align="left"/>let _1142: u128;<br align="left"/>let mut _1143: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1144: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1145: &amp;ReErased state::user::User;<br align="left"/>let mut _1146: u128;<br align="left"/>let mut _1147: u64;<br align="left"/>let mut _1148: u128;<br align="left"/>let mut _1149: u128;<br align="left"/>let mut _1150: isize;<br align="left"/>let _1151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1152: !;<br align="left"/>let mut _1153: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1154: u128;<br align="left"/>let _1155: u128;<br align="left"/>let mut _1156: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1157: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1158: u128;<br align="left"/>let mut _1159: u128;<br align="left"/>let mut _1160: u128;<br align="left"/>let mut _1161: isize;<br align="left"/>let _1162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1163: !;<br align="left"/>let mut _1164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1165: u128;<br align="left"/>let _1166: ();<br align="left"/>let mut _1167: bool;<br align="left"/>let mut _1168: u128;<br align="left"/>let mut _1169: !;<br align="left"/>let _1170: ();<br align="left"/>let mut _1171: &amp;ReErased str;<br align="left"/>let _1172: &amp;ReErased str;<br align="left"/>let mut _1173: ();<br align="left"/>let _1174: u128;<br align="left"/>let mut _1175: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1176: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1177: u128;<br align="left"/>let mut _1178: u32;<br align="left"/>let mut _1179: u32;<br align="left"/>let mut _1180: i64;<br align="left"/>let mut _1181: u32;<br align="left"/>let mut _1182: u32;<br align="left"/>let mut _1183: i64;<br align="left"/>let mut _1184: isize;<br align="left"/>let _1185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1186: !;<br align="left"/>let mut _1187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1188: u128;<br align="left"/>let _1189: i128;<br align="left"/>let mut _1190: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1191: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1192: i128;<br align="left"/>let mut _1193: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _1194: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _1195: u128;<br align="left"/>let mut _1196: isize;<br align="left"/>let _1197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1198: !;<br align="left"/>let mut _1199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1200: i128;<br align="left"/>let mut _1201: u32;<br align="left"/>let mut _1202: i64;<br align="left"/>let mut _1203: isize;<br align="left"/>let _1204: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1205: !;<br align="left"/>let mut _1206: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1207: i128;<br align="left"/>let _1208: u128;<br align="left"/>let mut _1209: bool;<br align="left"/>let mut _1210: i128;<br align="left"/>let mut _1211: i128;<br align="left"/>let mut _1212: (i128, bool);<br align="left"/>let _1213: u128;<br align="left"/>let mut _1214: u128;<br align="left"/>let mut _1215: u128;<br align="left"/>let mut _1216: u128;<br align="left"/>let mut _1217: u128;<br align="left"/>let mut _1218: u128;<br align="left"/>let mut _1219: u128;<br align="left"/>let mut _1220: u128;<br align="left"/>let mut _1221: u128;<br align="left"/>let _1222: u128;<br align="left"/>let mut _1223: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1224: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1225: u128;<br align="left"/>let mut _1226: u32;<br align="left"/>let mut _1227: u32;<br align="left"/>let mut _1228: i64;<br align="left"/>let mut _1229: u128;<br align="left"/>let mut _1230: u32;<br align="left"/>let mut _1231: u32;<br align="left"/>let mut _1232: i64;<br align="left"/>let mut _1233: isize;<br align="left"/>let _1234: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1235: !;<br align="left"/>let mut _1236: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1237: u128;<br align="left"/>let _1238: ();<br align="left"/>let mut _1239: bool;<br align="left"/>let mut _1240: u128;<br align="left"/>let mut _1241: bool;<br align="left"/>let mut _1242: u128;<br align="left"/>let mut _1243: !;<br align="left"/>let _1244: ();<br align="left"/>let mut _1245: &amp;ReErased str;<br align="left"/>let _1246: &amp;ReErased str;<br align="left"/>let mut _1247: &amp;ReErased std::string::String;<br align="left"/>let _1248: &amp;ReErased std::string::String;<br align="left"/>let _1249: std::string::String;<br align="left"/>let _1250: std::string::String;<br align="left"/>let mut _1251: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1252: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1253: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1254: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1255: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1256: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1257: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1258: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _1259: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _1260: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1261: &amp;ReErased u16;<br align="left"/>let _1262: &amp;ReErased u16;<br align="left"/>let mut _1263: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1264: &amp;ReErased u16;<br align="left"/>let _1265: &amp;ReErased u16;<br align="left"/>let _1266: ();<br align="left"/>let mut _1267: &amp;ReErased str;<br align="left"/>let _1268: &amp;ReErased str;<br align="left"/>let mut _1269: &amp;ReErased std::string::String;<br align="left"/>let _1270: &amp;ReErased std::string::String;<br align="left"/>let _1271: std::string::String;<br align="left"/>let _1272: std::string::String;<br align="left"/>let mut _1273: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1274: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1275: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1276: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1277: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1278: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1279: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1280: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1281: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1282: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1283: &amp;ReErased u128;<br align="left"/>let _1284: &amp;ReErased u128;<br align="left"/>let mut _1285: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1286: &amp;ReErased u128;<br align="left"/>let _1287: &amp;ReErased u128;<br align="left"/>let mut _1288: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1289: &amp;ReErased u128;<br align="left"/>let _1290: &amp;ReErased u128;<br align="left"/>let _1291: ();<br align="left"/>let mut _1292: &amp;ReErased str;<br align="left"/>let _1293: &amp;ReErased str;<br align="left"/>let mut _1294: &amp;ReErased std::string::String;<br align="left"/>let _1295: &amp;ReErased std::string::String;<br align="left"/>let _1296: std::string::String;<br align="left"/>let _1297: std::string::String;<br align="left"/>let mut _1298: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1299: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1300: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1301: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _1302: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1303: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1304: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1305: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let _1306: [core::fmt::rt::Argument&lt;ReErased&gt;; 3_usize];<br align="left"/>let mut _1307: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1308: &amp;ReErased u128;<br align="left"/>let _1309: &amp;ReErased u128;<br align="left"/>let mut _1310: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1311: &amp;ReErased u128;<br align="left"/>let _1312: &amp;ReErased u128;<br align="left"/>let mut _1313: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1314: &amp;ReErased u128;<br align="left"/>let _1315: &amp;ReErased u128;<br align="left"/>let mut _1316: error::ErrorCode;<br align="left"/>let _1317: bool;<br align="left"/>let mut _1318: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1319: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1320: i64;<br align="left"/>let mut _1321: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1322: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1323: i64;<br align="left"/>let mut _1324: isize;<br align="left"/>let _1325: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1326: !;<br align="left"/>let mut _1327: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1328: i64;<br align="left"/>let mut _1329: i64;<br align="left"/>let mut _1330: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1331: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1332: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1333: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1334: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1335: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1336: &amp;ReErased u16;<br align="left"/>let _1337: &amp;ReErased u16;<br align="left"/>let mut _1338: isize;<br align="left"/>let _1339: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1340: !;<br align="left"/>let mut _1341: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1342: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1343: i64;<br align="left"/>let mut _1344: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1345: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1346: u64;<br align="left"/>let mut _1347: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _1348: isize;<br align="left"/>let _1349: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1350: !;<br align="left"/>let mut _1351: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1352: i64;<br align="left"/>let mut _1353: isize;<br align="left"/>let _1354: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1355: !;<br align="left"/>let mut _1356: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1357: bool;<br align="left"/>let _1358: ();<br align="left"/>let mut _1359: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1360: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1361: bool;<br align="left"/>let mut _1362: ();<br align="left"/>let _1363: error::ErrorCode;<br align="left"/>let _1364: ();<br align="left"/>let mut _1365: &amp;ReErased str;<br align="left"/>let _1366: &amp;ReErased str;<br align="left"/>let mut _1367: &amp;ReErased std::string::String;<br align="left"/>let _1368: &amp;ReErased std::string::String;<br align="left"/>let _1369: std::string::String;<br align="left"/>let _1370: std::string::String;<br align="left"/>let mut _1371: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1372: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1373: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1374: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1375: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1376: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1377: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1378: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1379: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1380: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1381: &amp;ReErased error::ErrorCode;<br align="left"/>let _1382: &amp;ReErased error::ErrorCode;<br align="left"/>let _1383: ();<br align="left"/>let mut _1384: &amp;ReErased str;<br align="left"/>let _1385: &amp;ReErased str;<br align="left"/>let mut _1386: error::ErrorCode;<br align="left"/>let mut _1387: isize;<br align="left"/>let _1388: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1389: !;<br align="left"/>let mut _1390: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1391: ();<br align="left"/>let _1392: bool;<br align="left"/>let mut _1393: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1394: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1395: i64;<br align="left"/>let mut _1396: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1397: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1398: i64;<br align="left"/>let mut _1399: isize;<br align="left"/>let _1400: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1401: !;<br align="left"/>let mut _1402: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1403: i64;<br align="left"/>let mut _1404: i64;<br align="left"/>let mut _1405: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _1406: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1407: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1408: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1409: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1410: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1411: &amp;ReErased u16;<br align="left"/>let _1412: &amp;ReErased u16;<br align="left"/>let mut _1413: isize;<br align="left"/>let _1414: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1415: !;<br align="left"/>let mut _1416: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1417: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1418: i64;<br align="left"/>let mut _1419: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _1420: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _1421: u64;<br align="left"/>let mut _1422: &amp;ReErased state::state::OracleGuardRails;<br align="left"/>let mut _1423: isize;<br align="left"/>let _1424: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1425: !;<br align="left"/>let mut _1426: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1427: i64;<br align="left"/>let mut _1428: isize;<br align="left"/>let _1429: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1430: !;<br align="left"/>let mut _1431: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1432: bool;<br align="left"/>let _1433: ();<br align="left"/>let mut _1434: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1435: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1436: bool;<br align="left"/>let mut _1437: ();<br align="left"/>let _1438: error::ErrorCode;<br align="left"/>let _1439: ();<br align="left"/>let mut _1440: &amp;ReErased str;<br align="left"/>let _1441: &amp;ReErased str;<br align="left"/>let mut _1442: &amp;ReErased std::string::String;<br align="left"/>let _1443: &amp;ReErased std::string::String;<br align="left"/>let _1444: std::string::String;<br align="left"/>let _1445: std::string::String;<br align="left"/>let mut _1446: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1447: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1448: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1449: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1450: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1451: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1452: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1453: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1454: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1455: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1456: &amp;ReErased error::ErrorCode;<br align="left"/>let _1457: &amp;ReErased error::ErrorCode;<br align="left"/>let _1458: ();<br align="left"/>let mut _1459: &amp;ReErased str;<br align="left"/>let _1460: &amp;ReErased str;<br align="left"/>let mut _1461: error::ErrorCode;<br align="left"/>let mut _1462: isize;<br align="left"/>let _1463: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1464: !;<br align="left"/>let mut _1465: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1466: ();<br align="left"/>let _1467: ();<br align="left"/>let mut _1468: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1469: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1470: u128;<br align="left"/>let mut _1471: u128;<br align="left"/>let mut _1472: u32;<br align="left"/>let mut _1473: u32;<br align="left"/>let mut _1474: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _1475: isize;<br align="left"/>let _1476: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1477: !;<br align="left"/>let mut _1478: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1479: ();<br align="left"/>let _1480: u128;<br align="left"/>let mut _1481: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1482: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1483: u128;<br align="left"/>let mut _1484: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1485: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1486: u128;<br align="left"/>let mut _1487: u128;<br align="left"/>let mut _1488: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1489: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1490: u32;<br align="left"/>let mut _1491: isize;<br align="left"/>let _1492: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1493: !;<br align="left"/>let mut _1494: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1495: u128;<br align="left"/>let mut _1496: isize;<br align="left"/>let _1497: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1498: !;<br align="left"/>let mut _1499: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1500: u128;<br align="left"/>let mut _1501: isize;<br align="left"/>let _1502: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1503: !;<br align="left"/>let mut _1504: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1505: u128;<br align="left"/>let _1506: ();<br align="left"/>let mut _1507: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1508: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1509: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1510: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1511: &amp;ReErased u16;<br align="left"/>let _1512: &amp;ReErased u16;<br align="left"/>let mut _1513: isize;<br align="left"/>let _1514: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1515: !;<br align="left"/>let mut _1516: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1517: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1518: ();<br align="left"/>let mut _1519: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1520: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1521: u128;<br align="left"/>let mut _1522: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1523: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1524: u128;<br align="left"/>let mut _1525: u128;<br align="left"/>let mut _1526: isize;<br align="left"/>let _1527: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1528: !;<br align="left"/>let mut _1529: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1530: u128;<br align="left"/>let mut _1531: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1532: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1533: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1534: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1535: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1536: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1537: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1538: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1539: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1540: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1541: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1542: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1543: u16;<br align="left"/>let mut _1544: isize;<br align="left"/>let _1545: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1546: !;<br align="left"/>let mut _1547: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1548: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1549: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1550: u128;<br align="left"/>let mut _1551: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _1552: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _1553: u128;<br align="left"/>let mut _1554: u128;<br align="left"/>let mut _1555: isize;<br align="left"/>let _1556: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1557: !;<br align="left"/>let mut _1558: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1559: u128;<br align="left"/>let mut _1560: isize;<br align="left"/>let _1561: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1562: !;<br align="left"/>let mut _1563: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1564: ();<br align="left"/>let _1565: ();<br align="left"/>let mut _1566: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1567: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1568: u128;<br align="left"/>let mut _1569: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1570: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1571: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1572: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1573: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1574: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1575: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1576: isize;<br align="left"/>let _1577: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1578: !;<br align="left"/>let mut _1579: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1580: ();<br align="left"/>let _1581: ();<br align="left"/>let mut _1582: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1583: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1584: u128;<br align="left"/>let mut _1585: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1586: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1587: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1588: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1589: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1590: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1591: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1592: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1593: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1594: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1595: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1596: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1597: u16;<br align="left"/>let mut _1598: isize;<br align="left"/>let _1599: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1600: !;<br align="left"/>let mut _1601: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1602: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1603: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1604: u128;<br align="left"/>let mut _1605: isize;<br align="left"/>let _1606: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1607: !;<br align="left"/>let mut _1608: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1609: ();<br align="left"/>let _1610: ();<br align="left"/>let mut _1611: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1612: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _1613: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _1614: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1615: &amp;ReErased u16;<br align="left"/>let _1616: &amp;ReErased u16;<br align="left"/>let mut _1617: isize;<br align="left"/>let _1618: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1619: !;<br align="left"/>let mut _1620: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1621: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _1622: ();<br align="left"/>let mut _1623: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1624: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1625: u128;<br align="left"/>let mut _1626: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1627: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1628: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1629: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1630: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1631: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1632: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1633: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1634: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1635: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1636: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1637: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1638: u16;<br align="left"/>let mut _1639: isize;<br align="left"/>let _1640: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1641: !;<br align="left"/>let mut _1642: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1643: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1644: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1645: u128;<br align="left"/>let mut _1646: isize;<br align="left"/>let _1647: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1648: !;<br align="left"/>let mut _1649: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1650: ();<br align="left"/>let _1651: ();<br align="left"/>let mut _1652: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1653: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1654: u128;<br align="left"/>let mut _1655: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1656: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _1657: state::spot_market::SpotBalanceType;<br align="left"/>let mut _1658: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1659: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _1660: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1661: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _1662: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1663: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1664: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, &amp;ReErased mut state::user::SpotPosition&gt;;<br align="left"/>let mut _1665: std::result::Result&lt;&amp;ReErased mut state::user::SpotPosition, error::ErrorCode&gt;;<br align="left"/>let mut _1666: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1667: u16;<br align="left"/>let mut _1668: isize;<br align="left"/>let _1669: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1670: !;<br align="left"/>let mut _1671: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1672: &amp;ReErased mut state::user::SpotPosition;<br align="left"/>let mut _1673: std::option::Option&lt;u128&gt;;<br align="left"/>let mut _1674: u128;<br align="left"/>let mut _1675: isize;<br align="left"/>let _1676: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1677: !;<br align="left"/>let mut _1678: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1679: ();<br align="left"/>let _1680: u64;<br align="left"/>let mut _1681: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1682: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u64, state::margin_calculation::MarginCalculation)&gt;;<br align="left"/>let mut _1683: std::result::Result&lt;(u64, state::margin_calculation::MarginCalculation), error::ErrorCode&gt;;<br align="left"/>let mut _1684: &amp;ReErased state::user::User;<br align="left"/>let mut _1685: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1686: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1687: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1688: u32;<br align="left"/>let mut _1689: u128;<br align="left"/>let mut _1690: isize;<br align="left"/>let _1691: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1692: !;<br align="left"/>let mut _1693: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1694: (u64, state::margin_calculation::MarginCalculation);<br align="left"/>let mut _1695: u64;<br align="left"/>let mut _1696: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1697: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1698: u64;<br align="left"/>let mut _1699: u64;<br align="left"/>let mut _1700: isize;<br align="left"/>let _1701: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1702: !;<br align="left"/>let mut _1703: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1704: u64;<br align="left"/>let _1705: ();<br align="left"/>let mut _1706: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1707: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1708: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1709: u64;<br align="left"/>let mut _1710: isize;<br align="left"/>let _1711: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1712: !;<br align="left"/>let mut _1713: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1714: ();<br align="left"/>let _1715: ();<br align="left"/>let mut _1716: bool;<br align="left"/>let mut _1717: u128;<br align="left"/>let mut _1718: u128;<br align="left"/>let _1719: ();<br align="left"/>let mut _1720: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1721: bool;<br align="left"/>let mut _1722: &amp;ReErased state::user::User;<br align="left"/>let _1723: ();<br align="left"/>let mut _1724: &amp;ReErased mut state::user::User;<br align="left"/>let _1725: state::margin_calculation::MarginContext;<br align="left"/>let mut _1726: state::margin_calculation::MarginContext;<br align="left"/>let mut _1727: state::margin_calculation::MarginContext;<br align="left"/>let mut _1728: math::margin::MarginRequirementType;<br align="left"/>let mut _1729: [(u16, i128); 2_usize];<br align="left"/>let mut _1730: (u16, i128);<br align="left"/>let mut _1731: u16;<br align="left"/>let mut _1732: i128;<br align="left"/>let mut _1733: i128;<br align="left"/>let mut _1734: u128;<br align="left"/>let mut _1735: bool;<br align="left"/>let mut _1736: (u16, i128);<br align="left"/>let mut _1737: u16;<br align="left"/>let mut _1738: i128;<br align="left"/>let mut _1739: u128;<br align="left"/>let mut _1740: &amp;ReErased state::user::User;<br align="left"/>let mut _1741: i64;<br align="left"/>let _1742: bool;<br align="left"/>let mut _1743: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _1744: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _1745: std::result::Result&lt;state::margin_calculation::MarginCalculation, error::ErrorCode&gt;;<br align="left"/>let mut _1746: &amp;ReErased mut state::user::User;<br align="left"/>let mut _1747: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1748: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _1749: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _1750: state::margin_calculation::MarginContext;<br align="left"/>let mut _1751: &amp;ReErased mut state::user::UserStats;<br align="left"/>let mut _1752: i64;<br align="left"/>let mut _1753: Closure(DefId(0:339 ~ drift[d311]::controller::liquidation::liquidate_spot::{closure#4}), [i32, Binder(extern &quot;RustCall&quot; fn((state::margin_calculation::MarginCalculation,)) -&gt; bool, []), ()]);<br align="left"/>let mut _1754: isize;<br align="left"/>let _1755: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1756: !;<br align="left"/>let mut _1757: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1758: bool;<br align="left"/>let _1759: ();<br align="left"/>let mut _1760: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _1761: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _1762: bool;<br align="left"/>let mut _1763: ();<br align="left"/>let _1764: error::ErrorCode;<br align="left"/>let _1765: ();<br align="left"/>let mut _1766: &amp;ReErased str;<br align="left"/>let _1767: &amp;ReErased str;<br align="left"/>let mut _1768: &amp;ReErased std::string::String;<br align="left"/>let _1769: &amp;ReErased std::string::String;<br align="left"/>let _1770: std::string::String;<br align="left"/>let _1771: std::string::String;<br align="left"/>let mut _1772: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _1773: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _1774: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1775: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _1776: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1777: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _1778: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1779: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _1780: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _1781: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _1782: &amp;ReErased error::ErrorCode;<br align="left"/>let _1783: &amp;ReErased error::ErrorCode;<br align="left"/>let _1784: ();<br align="left"/>let mut _1785: &amp;ReErased str;<br align="left"/>let _1786: &amp;ReErased str;<br align="left"/>let mut _1787: error::ErrorCode;<br align="left"/>let mut _1788: isize;<br align="left"/>let _1789: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1790: !;<br align="left"/>let mut _1791: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1792: ();<br align="left"/>let _1793: ();<br align="left"/>let _1794: ();<br align="left"/>let mut _1795: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _1796: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1797: &amp;ReErased [&amp;ReErased [u8]; 1_usize];<br align="left"/>let _1798: [&amp;ReErased [u8]; 1_usize];<br align="left"/>let mut _1799: &amp;ReErased [u8];<br align="left"/>let _1800: &amp;ReErased [u8];<br align="left"/>let mut _1801: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1802: &amp;ReErased std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let _1803: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _1804: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1805: &amp;ReErased state::events::LiquidationRecord;<br align="left"/>let _1806: state::events::LiquidationRecord;<br align="left"/>let mut _1807: i64;<br align="left"/>let mut _1808: u16;<br align="left"/>let mut _1809: state::events::LiquidationType;<br align="left"/>let mut _1810: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1811: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _1812: u128;<br align="left"/>let mut _1813: i128;<br align="left"/>let mut _1814: bool;<br align="left"/>let mut _1815: &amp;ReErased state::user::User;<br align="left"/>let mut _1816: u64;<br align="left"/>let mut _1817: state::events::LiquidateSpotRecord;<br align="left"/>let mut _1818: u16;<br align="left"/>let mut _1819: i64;<br align="left"/>let mut _1820: u128;<br align="left"/>let mut _1821: u16;<br align="left"/>let mut _1822: i64;<br align="left"/>let mut _1823: u128;<br align="left"/>let mut _1824: u64;<br align="left"/>let mut _1825: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _1826: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _1827: u128;<br align="left"/>let mut _1828: isize;<br align="left"/>let _1829: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _1830: !;<br align="left"/>let mut _1831: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _1832: u64;<br align="left"/>let mut _1833: state::events::LiquidationRecord;<br align="left"/>let mut _1834: ();<br align="left"/>let mut _1835: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1836: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1837: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1838: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1839: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1840: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1841: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1842: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1843: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1844: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1845: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1846: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1847: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1848: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1849: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1850: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1851: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1852: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1853: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1854: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1855: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1856: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _1857: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1858: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1859: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1860: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1861: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _1862: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1863: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1864: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1865: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1866: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1867: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _1868: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _1869: bool;<br align="left"/>let mut _1870: bool;<br align="left"/>let mut _1871: bool;<br align="left"/>let mut _1872: bool;<br align="left"/>let mut _1873: bool;<br align="left"/>let mut _1874: bool;<br align="left"/>let mut _1875: isize;<br align="left"/>let mut _1876: isize;<br align="left"/>let mut _1877: isize;<br align="left"/>let mut _1878: isize;<br align="left"/>let mut _1879: isize;<br align="left"/>let mut _1880: isize;<br align="left"/>let mut _1881: isize;<br align="left"/>let mut _1882: isize;<br align="left"/>let mut _1883: isize;<br align="left"/>let mut _1884: isize;<br align="left"/>let mut _1885: isize;<br align="left"/>let mut _1886: isize;<br align="left"/>let mut _1887: isize;<br align="left"/>let mut _1888: isize;<br align="left"/>let mut _1889: isize;<br align="left"/>let mut _1890: isize;<br align="left"/>let mut _1891: isize;<br align="left"/>let mut _1892: isize;<br align="left"/>let mut _1893: isize;<br align="left"/>let mut _1894: isize;<br align="left"/>let mut _1895: isize;<br align="left"/>let mut _1896: isize;<br align="left"/>let mut _1897: isize;<br align="left"/>let mut _1898: isize;<br align="left"/>let mut _1899: isize;<br align="left"/>let mut _1900: isize;<br align="left"/>let mut _1901: isize;<br align="left"/>let mut _1902: isize;<br align="left"/>let mut _1903: isize;<br align="left"/>let mut _1904: isize;<br align="left"/>let mut _1905: isize;<br align="left"/>let mut _1906: isize;<br align="left"/>let mut _1907: isize;<br align="left"/>let mut _1908: isize;<br align="left"/>let mut _1909: isize;<br align="left"/>let mut _1910: isize;<br align="left"/>let mut _1911: isize;<br align="left"/>let mut _1912: isize;<br align="left"/>let mut _1913: isize;<br align="left"/>let mut _1914: isize;<br align="left"/>let mut _1915: isize;<br align="left"/>let mut _1916: isize;<br align="left"/>let mut _1917: isize;<br align="left"/>let mut _1918: isize;<br align="left"/>let mut _1919: isize;<br align="left"/>let mut _1920: isize;<br align="left"/>let mut _1921: isize;<br align="left"/>let mut _1922: isize;<br align="left"/>let mut _1923: isize;<br align="left"/>let mut _1924: isize;<br align="left"/>debug asset_market_index =&gt; _1;<br align="left"/>debug liability_market_index =&gt; _2;<br align="left"/>debug liquidator_max_liability_transfer =&gt; _3;<br align="left"/>debug limit_price =&gt; _4;<br align="left"/>debug user =&gt; _5;<br align="left"/>debug user_key =&gt; _6;<br align="left"/>debug user_stats =&gt; _7;<br align="left"/>debug liquidator =&gt; _8;<br align="left"/>debug liquidator_key =&gt; _9;<br align="left"/>debug liquidator_stats =&gt; _10;<br align="left"/>debug perp_market_map =&gt; _11;<br align="left"/>debug spot_market_map =&gt; _12;<br align="left"/>debug oracle_map =&gt; _13;<br align="left"/>debug now =&gt; _14;<br align="left"/>debug slot =&gt; _15;<br align="left"/>debug state =&gt; _16;<br align="left"/>debug liquidation_margin_buffer_ratio =&gt; _17;<br align="left"/>debug initial_pct_to_liquidate =&gt; _18;<br align="left"/>debug liquidation_duration =&gt; _20;<br align="left"/>debug error_code =&gt; _28;<br align="left"/>debug res =&gt; _35;<br align="left"/>debug res =&gt; _54;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug error_code =&gt; _72;<br align="left"/>debug res =&gt; _79;<br align="left"/>debug res =&gt; _98;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug asset_spot_market =&gt; _110;<br align="left"/>debug residual =&gt; _117;<br align="left"/>debug val =&gt; _120;<br align="left"/>debug error_code =&gt; _130;<br align="left"/>debug res =&gt; _137;<br align="left"/>debug res =&gt; _156;<br align="left"/>debug residual =&gt; _171;<br align="left"/>debug val =&gt; _174;<br align="left"/>debug error_code =&gt; _184;<br align="left"/>debug res =&gt; _191;<br align="left"/>debug res =&gt; _210;<br align="left"/>debug residual =&gt; _230;<br align="left"/>debug val =&gt; _233;<br align="left"/>debug liability_spot_market =&gt; _236;<br align="left"/>debug residual =&gt; _243;<br align="left"/>debug val =&gt; _246;<br align="left"/>debug error_code =&gt; _256;<br align="left"/>debug res =&gt; _263;<br align="left"/>debug res =&gt; _282;<br align="left"/>debug residual =&gt; _297;<br align="left"/>debug val =&gt; _300;<br align="left"/>debug error_code =&gt; _310;<br align="left"/>debug res =&gt; _317;<br align="left"/>debug res =&gt; _336;<br align="left"/>debug residual =&gt; _356;<br align="left"/>debug val =&gt; _359;<br align="left"/>debug residual =&gt; _371;<br align="left"/>debug val =&gt; _374;<br align="left"/>debug residual =&gt; _384;<br align="left"/>debug val =&gt; _387;<br align="left"/>debug residual =&gt; _396;<br align="left"/>debug val =&gt; _399;<br align="left"/>debug residual =&gt; _408;<br align="left"/>debug val =&gt; _411;<br align="left"/>debug asset_amount =&gt; _412;<br align="left"/>debug asset_price =&gt; _413;<br align="left"/>debug asset_decimals =&gt; _414;<br align="left"/>debug asset_weight =&gt; _415;<br align="left"/>debug asset_liquidation_multiplier =&gt; _416;<br align="left"/>debug asset_pool_id =&gt; _417;<br align="left"/>debug asset_oracle_delay =&gt; _418;<br align="left"/>debug asset_market =&gt; _420;<br align="left"/>debug residual =&gt; _427;<br align="left"/>debug val =&gt; _430;<br align="left"/>debug asset_price_data =&gt; _431;<br align="left"/>debug validity_guard_rails =&gt; _432;<br align="left"/>debug residual =&gt; _444;<br align="left"/>debug val =&gt; _447;<br align="left"/>debug residual =&gt; _461;<br align="left"/>debug val =&gt; _464;<br align="left"/>debug spot_deposit_position =&gt; _465;<br align="left"/>debug residual =&gt; _471;<br align="left"/>debug val =&gt; _474;<br align="left"/>debug error_code =&gt; _483;<br align="left"/>debug res =&gt; _490;<br align="left"/>debug residual =&gt; _508;<br align="left"/>debug val =&gt; _511;<br align="left"/>debug token_amount =&gt; _512;<br align="left"/>debug residual =&gt; _521;<br align="left"/>debug val =&gt; _524;<br align="left"/>debug error_code =&gt; _531;<br align="left"/>debug res =&gt; _538;<br align="left"/>debug res =&gt; _557;<br align="left"/>debug residual =&gt; _572;<br align="left"/>debug val =&gt; _575;<br align="left"/>debug asset_price =&gt; _576;<br align="left"/>debug residual =&gt; _593;<br align="left"/>debug val =&gt; _596;<br align="left"/>debug liability_amount =&gt; _601;<br align="left"/>debug liability_price =&gt; _602;<br align="left"/>debug liability_decimals =&gt; _603;<br align="left"/>debug liability_weight =&gt; _604;<br align="left"/>debug liability_liquidation_multiplier =&gt; _605;<br align="left"/>debug liability_pool_id =&gt; _606;<br align="left"/>debug liability_oracle_delay =&gt; _607;<br align="left"/>debug liability_market =&gt; _609;<br align="left"/>debug residual =&gt; _616;<br align="left"/>debug val =&gt; _619;<br align="left"/>debug liability_price_data =&gt; _620;<br align="left"/>debug validity_guard_rails =&gt; _621;<br align="left"/>debug residual =&gt; _633;<br align="left"/>debug val =&gt; _636;<br align="left"/>debug residual =&gt; _650;<br align="left"/>debug val =&gt; _653;<br align="left"/>debug spot_position =&gt; _654;<br align="left"/>debug residual =&gt; _660;<br align="left"/>debug val =&gt; _663;<br align="left"/>debug error_code =&gt; _672;<br align="left"/>debug res =&gt; _679;<br align="left"/>debug residual =&gt; _697;<br align="left"/>debug val =&gt; _700;<br align="left"/>debug token_amount =&gt; _701;<br align="left"/>debug residual =&gt; _710;<br align="left"/>debug val =&gt; _713;<br align="left"/>debug error_code =&gt; _720;<br align="left"/>debug res =&gt; _727;<br align="left"/>debug res =&gt; _746;<br align="left"/>debug residual =&gt; _761;<br align="left"/>debug val =&gt; _764;<br align="left"/>debug liability_price =&gt; _765;<br align="left"/>debug residual =&gt; _782;<br align="left"/>debug val =&gt; _785;<br align="left"/>debug error_code =&gt; _803;<br align="left"/>debug res =&gt; _810;<br align="left"/>debug res =&gt; _829;<br align="left"/>debug residual =&gt; _847;<br align="left"/>debug val =&gt; _850;<br align="left"/>debug margin_context =&gt; _851;<br align="left"/>debug residual =&gt; _860;<br align="left"/>debug val =&gt; _863;<br align="left"/>debug margin_calculation =&gt; _866;<br align="left"/>debug residual =&gt; _877;<br align="left"/>debug val =&gt; _880;<br align="left"/>debug res =&gt; _893;<br align="left"/>debug residual =&gt; _914;<br align="left"/>debug val =&gt; _917;<br align="left"/>debug liquidation_id =&gt; _922;<br align="left"/>debug residual =&gt; _928;<br align="left"/>debug val =&gt; _931;<br align="left"/>debug margin_freed =&gt; _932;<br align="left"/>debug canceled_order_ids =&gt; _933;<br align="left"/>debug residual =&gt; _950;<br align="left"/>debug val =&gt; _953;<br align="left"/>debug intermediate_margin_calculation =&gt; _954;<br align="left"/>debug intermediate_margin_calculation =&gt; _957;<br align="left"/>debug residual =&gt; _973;<br align="left"/>debug val =&gt; _976;<br align="left"/>debug residual =&gt; _980;<br align="left"/>debug val =&gt; _983;<br align="left"/>debug initial_margin_shortage =&gt; _984;<br align="left"/>debug residual =&gt; _989;<br align="left"/>debug val =&gt; _992;<br align="left"/>debug new_margin_shortage =&gt; _993;<br align="left"/>debug residual =&gt; _998;<br align="left"/>debug val =&gt; _1001;<br align="left"/>debug residual =&gt; _1009;<br align="left"/>debug val =&gt; _1012;<br align="left"/>debug residual =&gt; _1019;<br align="left"/>debug val =&gt; _1022;<br align="left"/>debug residual =&gt; _1029;<br align="left"/>debug val =&gt; _1032;<br align="left"/>debug margin_shortage =&gt; _1068;<br align="left"/>debug residual =&gt; _1073;<br align="left"/>debug val =&gt; _1076;<br align="left"/>debug liability_weight_with_buffer =&gt; _1077;<br align="left"/>debug residual =&gt; _1083;<br align="left"/>debug val =&gt; _1086;<br align="left"/>debug liquidation_if_fee =&gt; _1087;<br align="left"/>debug residual =&gt; _1096;<br align="left"/>debug val =&gt; _1099;<br align="left"/>debug residual =&gt; _1117;<br align="left"/>debug val =&gt; _1120;<br align="left"/>debug residual =&gt; _1122;<br align="left"/>debug val =&gt; _1125;<br align="left"/>debug liability_transfer_to_cover_margin_shortage =&gt; _1126;<br align="left"/>debug residual =&gt; _1138;<br align="left"/>debug val =&gt; _1141;<br align="left"/>debug max_pct_allowed =&gt; _1142;<br align="left"/>debug residual =&gt; _1151;<br align="left"/>debug val =&gt; _1154;<br align="left"/>debug max_liability_allowed_to_be_transferred =&gt; _1155;<br align="left"/>debug residual =&gt; _1162;<br align="left"/>debug val =&gt; _1165;<br align="left"/>debug liability_transfer_implied_by_asset_amount =&gt; _1174;<br align="left"/>debug residual =&gt; _1185;<br align="left"/>debug val =&gt; _1188;<br align="left"/>debug liability_value =&gt; _1189;<br align="left"/>debug residual =&gt; _1197;<br align="left"/>debug val =&gt; _1200;<br align="left"/>debug residual =&gt; _1204;<br align="left"/>debug val =&gt; _1207;<br align="left"/>debug minimum_liability_transfer =&gt; _1208;<br align="left"/>debug liability_transfer =&gt; _1213;<br align="left"/>debug asset_transfer =&gt; _1222;<br align="left"/>debug residual =&gt; _1234;<br align="left"/>debug val =&gt; _1237;<br align="left"/>debug res =&gt; _1250;<br align="left"/>debug res =&gt; _1272;<br align="left"/>debug res =&gt; _1297;<br align="left"/>debug liability_oracle_too_divergent =&gt; _1317;<br align="left"/>debug residual =&gt; _1325;<br align="left"/>debug val =&gt; _1328;<br align="left"/>debug residual =&gt; _1339;<br align="left"/>debug val =&gt; _1342;<br align="left"/>debug residual =&gt; _1349;<br align="left"/>debug val =&gt; _1352;<br align="left"/>debug residual =&gt; _1354;<br align="left"/>debug val =&gt; _1357;<br align="left"/>debug error_code =&gt; _1363;<br align="left"/>debug res =&gt; _1370;<br align="left"/>debug residual =&gt; _1388;<br align="left"/>debug val =&gt; _1391;<br align="left"/>debug asset_oracle_too_divergent =&gt; _1392;<br align="left"/>debug residual =&gt; _1400;<br align="left"/>debug val =&gt; _1403;<br align="left"/>debug residual =&gt; _1414;<br align="left"/>debug val =&gt; _1417;<br align="left"/>debug residual =&gt; _1424;<br align="left"/>debug val =&gt; _1427;<br align="left"/>debug residual =&gt; _1429;<br align="left"/>debug val =&gt; _1432;<br align="left"/>debug error_code =&gt; _1438;<br align="left"/>debug res =&gt; _1445;<br align="left"/>debug residual =&gt; _1463;<br align="left"/>debug val =&gt; _1466;<br align="left"/>debug residual =&gt; _1476;<br align="left"/>debug val =&gt; _1479;<br align="left"/>debug if_fee =&gt; _1480;<br align="left"/>debug residual =&gt; _1492;<br align="left"/>debug val =&gt; _1495;<br align="left"/>debug residual =&gt; _1497;<br align="left"/>debug val =&gt; _1500;<br align="left"/>debug residual =&gt; _1502;<br align="left"/>debug val =&gt; _1505;<br align="left"/>debug liability_market =&gt; _1507;<br align="left"/>debug residual =&gt; _1514;<br align="left"/>debug val =&gt; _1517;<br align="left"/>debug residual =&gt; _1527;<br align="left"/>debug val =&gt; _1530;<br align="left"/>debug residual =&gt; _1545;<br align="left"/>debug val =&gt; _1548;<br align="left"/>debug residual =&gt; _1556;<br align="left"/>debug val =&gt; _1559;<br align="left"/>debug residual =&gt; _1561;<br align="left"/>debug val =&gt; _1564;<br align="left"/>debug residual =&gt; _1577;<br align="left"/>debug val =&gt; _1580;<br align="left"/>debug residual =&gt; _1599;<br align="left"/>debug val =&gt; _1602;<br align="left"/>debug residual =&gt; _1606;<br align="left"/>debug val =&gt; _1609;<br align="left"/>debug asset_market =&gt; _1611;<br align="left"/>debug residual =&gt; _1618;<br align="left"/>debug val =&gt; _1621;<br align="left"/>debug residual =&gt; _1640;<br align="left"/>debug val =&gt; _1643;<br align="left"/>debug residual =&gt; _1647;<br align="left"/>debug val =&gt; _1650;<br align="left"/>debug residual =&gt; _1669;<br align="left"/>debug val =&gt; _1672;<br align="left"/>debug residual =&gt; _1676;<br align="left"/>debug val =&gt; _1679;<br align="left"/>debug margin_freed_from_liability =&gt; _1680;<br align="left"/>debug residual =&gt; _1691;<br align="left"/>debug val =&gt; _1694;<br align="left"/>debug residual =&gt; _1701;<br align="left"/>debug val =&gt; _1704;<br align="left"/>debug residual =&gt; _1711;<br align="left"/>debug val =&gt; _1714;<br align="left"/>debug liq_margin_context =&gt; _1725;<br align="left"/>debug liquidator_meets_initial_margin_requirement =&gt; _1742;<br align="left"/>debug residual =&gt; _1755;<br align="left"/>debug val =&gt; _1758;<br align="left"/>debug error_code =&gt; _1764;<br align="left"/>debug res =&gt; _1771;<br align="left"/>debug residual =&gt; _1789;<br align="left"/>debug val =&gt; _1792;<br align="left"/>debug residual =&gt; _1829;<br align="left"/>debug val =&gt; _1832;<br align="left"/>>;
    bb0__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_1874 = const false<br/>_1873 = const false<br/>_1872 = const false<br/>_1871 = const false<br/>_1870 = const false<br/>_1869 = const false<br/>StorageLive(_17)<br/>_17 = ((*_16).11: u32)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = ((*_16).21: u16)<br/>_18 = move _19 as u128 (IntToInt)<br/>StorageDead(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>_21 = ((*_16).20: u8)<br/>_20 = move _21 as u128 (IntToInt)<br/>StorageDead(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>_26 = &amp;(*_5)<br/></td></tr><tr><td align="left">_25 = User::is_bankrupt(move _26)</td></tr></table>>];
    bb1__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb2__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_28)<br/>_28 = error::ErrorCode::UserBankrupt<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>_1868 = const _<br/>_39 = &amp;(*_1868)<br/>_38 = &amp;(*_39)<br/>_37 = move _38 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_38)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>_47 = &amp;_28<br/>_46 = &amp;(*_47)<br/></td></tr><tr><td align="left">_45 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _46)</td></tr></table>>];
    bb3__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageLive(_27)<br/>_27 = ()<br/>_24 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _27)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = [move _45]<br/>StorageDead(_45)<br/>_43 = &amp;_44<br/>_42 = &amp;(*_43)<br/>_41 = move _42 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">_36 = Arguments::&lt;'_&gt;::new_v1(move _37, move _41)</td></tr></table>>];
    bb5__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">_35 = format(move _36)</td></tr></table>>];
    bb6__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_47)<br/>StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_39)<br/>_34 = move _35<br/>StorageDead(_35)<br/>_33 = &amp;_34<br/>_32 = &amp;(*_33)<br/></td></tr><tr><td align="left">_31 = &lt;String as Deref&gt;::deref(move _32)</td></tr></table>>];
    bb7__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_30 = &amp;(*_31)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">_29 = solana_program::log::sol_log(move _30)</td></tr></table>>];
    bb8__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/></td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb9__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_1867 = const _<br/>_58 = &amp;(*_1867)<br/>_57 = &amp;(*_58)<br/>_56 = move _57 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_57)<br/></td></tr><tr><td align="left">_55 = Arguments::&lt;'_&gt;::new_const(move _56)</td></tr></table>>];
    bb10__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = format(move _55)</td></tr></table>>];
    bb11__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_58)<br/>_53 = move _54<br/>StorageDead(_54)<br/>_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/></td></tr><tr><td align="left">_50 = &lt;String as Deref&gt;::deref(move _51)</td></tr></table>>];
    bb12__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_49 = &amp;(*_50)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_48 = solana_program::log::sol_log(move _49)</td></tr></table>>];
    bb13__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb14__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageDead(_50)<br/>StorageDead(_48)<br/>StorageLive(_60)<br/>_60 = _28<br/>_24 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _60)<br/>StorageDead(_60)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _24)</td></tr></table>>];
    bb16__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>_61 = discriminant(_23)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb17__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = ((_23 as Continue).0: ())<br/>_22 = _65<br/>StorageDead(_65)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_8)<br/></td></tr><tr><td align="left">_69 = User::is_bankrupt(move _70)</td></tr></table>>];
    bb18__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb19__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_23 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_64)<br/>_64 = _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb20__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>StorageDead(_23)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb22__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_72)<br/>_72 = error::ErrorCode::UserBankrupt<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_1866 = const _<br/>_83 = &amp;(*_1866)<br/>_82 = &amp;(*_83)<br/>_81 = move _82 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_82)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = &amp;_72<br/>_90 = &amp;(*_91)<br/></td></tr><tr><td align="left">_89 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _90)</td></tr></table>>];
    bb23__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>_71 = ()<br/>_68 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _71)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>_88 = [move _89]<br/>StorageDead(_89)<br/>_87 = &amp;_88<br/>_86 = &amp;(*_87)<br/>_85 = move _86 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_86)<br/></td></tr><tr><td align="left">_80 = Arguments::&lt;'_&gt;::new_v1(move _81, move _85)</td></tr></table>>];
    bb25__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">_79 = format(move _80)</td></tr></table>>];
    bb26__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_83)<br/>_78 = move _79<br/>StorageDead(_79)<br/>_77 = &amp;_78<br/>_76 = &amp;(*_77)<br/></td></tr><tr><td align="left">_75 = &lt;String as Deref&gt;::deref(move _76)</td></tr></table>>];
    bb27__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">_74 = &amp;(*_75)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">_73 = solana_program::log::sol_log(move _74)</td></tr></table>>];
    bb28__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb29__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>_1865 = const _<br/>_102 = &amp;(*_1865)<br/>_101 = &amp;(*_102)<br/>_100 = move _101 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">_99 = Arguments::&lt;'_&gt;::new_const(move _100)</td></tr></table>>];
    bb30__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/></td></tr><tr><td align="left">_98 = format(move _99)</td></tr></table>>];
    bb31__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_102)<br/>_97 = move _98<br/>StorageDead(_98)<br/>_96 = &amp;_97<br/>_95 = &amp;(*_96)<br/></td></tr><tr><td align="left">_94 = &lt;String as Deref&gt;::deref(move _95)</td></tr></table>>];
    bb32__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">_93 = &amp;(*_94)<br/>StorageDead(_95)<br/></td></tr><tr><td align="left">_92 = solana_program::log::sol_log(move _93)</td></tr></table>>];
    bb33__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb34__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_94)<br/>StorageDead(_92)<br/>StorageLive(_104)<br/>_104 = _72<br/>_68 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _104)<br/>StorageDead(_104)<br/>StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb36__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_105 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb37__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = ((_67 as Continue).0: ())<br/>_66 = _109<br/>StorageDead(_109)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;(*_12)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>_115 = &amp;_1<br/>_114 = &amp;(*_115)<br/></td></tr><tr><td align="left">_112 = SpotMarketMap::&lt;'_&gt;::get_ref(move _113, move _114)</td></tr></table>>];
    bb38__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_108)<br/>_108 = _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb39__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>StorageDead(_67)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb41__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_116 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb42__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>_120 = move ((_111 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1874 = const true<br/>_110 = move _120<br/>StorageDead(_120)<br/>_1877 = discriminant(_111)<br/>StorageDead(_115)<br/>StorageDead(_111)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = &amp;_110<br/></td></tr><tr><td align="left">_126 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _127)</td></tr></table>>];
    bb43__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_117)<br/>_117 = ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_119)<br/>_119 = _117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _119)</td></tr></table>>];
    bb44__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_117)<br/>_1875 = discriminant(_111)<br/>StorageDead(_115)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb45__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">_125 = &amp;(*_126)<br/>StorageDead(_127)<br/>StorageLive(_128)<br/>_128 = SpotOperation::Liquidation<br/></td></tr><tr><td align="left">_124 = SpotMarket::is_operation_paused(move _125, move _128)</td></tr></table>>];
    bb46__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb47__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_125)<br/>StorageDead(_126)<br/>StorageLive(_130)<br/>_130 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_1864 = const _<br/>_141 = &amp;(*_1864)<br/>_140 = &amp;(*_141)<br/>_139 = move _140 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_140)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = &amp;_130<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_147 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _148)</td></tr></table>>];
    bb48__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageDead(_125)<br/>StorageDead(_126)<br/>StorageLive(_129)<br/>_129 = ()<br/>_123 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _129)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_148)<br/>_146 = [move _147]<br/>StorageDead(_147)<br/>_145 = &amp;_146<br/>_144 = &amp;(*_145)<br/>_143 = move _144 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">_138 = Arguments::&lt;'_&gt;::new_v1(move _139, move _143)</td></tr></table>>];
    bb50__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">_137 = format(move _138)</td></tr></table>>];
    bb51__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_149)<br/>StorageDead(_146)<br/>StorageDead(_145)<br/>StorageDead(_141)<br/>_136 = move _137<br/>StorageDead(_137)<br/>_135 = &amp;_136<br/>_134 = &amp;(*_135)<br/></td></tr><tr><td align="left">_133 = &lt;String as Deref&gt;::deref(move _134)</td></tr></table>>];
    bb52__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">_132 = &amp;(*_133)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">_131 = solana_program::log::sol_log(move _132)</td></tr></table>>];
    bb53__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/></td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb54__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_131)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>_1863 = const _<br/>_160 = &amp;(*_1863)<br/>_159 = &amp;(*_160)<br/>_158 = move _159 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_159)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>_168 = &amp;_1<br/>_167 = &amp;(*_168)<br/></td></tr><tr><td align="left">_166 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _167)</td></tr></table>>];
    bb55__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>_165 = [move _166]<br/>StorageDead(_166)<br/>_164 = &amp;_165<br/>_163 = &amp;(*_164)<br/>_162 = move _163 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_163)<br/></td></tr><tr><td align="left">_157 = Arguments::&lt;'_&gt;::new_v1(move _158, move _162)</td></tr></table>>];
    bb56__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_158)<br/></td></tr><tr><td align="left">_156 = format(move _157)</td></tr></table>>];
    bb57__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_157)<br/>StorageDead(_168)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageDead(_160)<br/>_155 = move _156<br/>StorageDead(_156)<br/>_154 = &amp;_155<br/>_153 = &amp;(*_154)<br/></td></tr><tr><td align="left">_152 = &lt;String as Deref&gt;::deref(move _153)</td></tr></table>>];
    bb58__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_151 = &amp;(*_152)<br/>StorageDead(_153)<br/></td></tr><tr><td align="left">_150 = solana_program::log::sol_log(move _151)</td></tr></table>>];
    bb59__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/></td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb60__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_155)<br/>StorageDead(_154)<br/>StorageDead(_152)<br/>StorageDead(_150)<br/>StorageLive(_169)<br/>_169 = _130<br/>_123 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _169)<br/>StorageDead(_169)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/></td></tr><tr><td align="left">_122 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _123)</td></tr></table>>];
    bb62__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_170 = discriminant(_122)<br/></td></tr><tr><td align="left">switchInt(move _170)</td></tr></table>>];
    bb63__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_174)<br/>_174 = ((_122 as Continue).0: ())<br/>_121 = _174<br/>StorageDead(_174)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = ((*_8).27: u8)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = &amp;_110<br/></td></tr><tr><td align="left">_181 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _182)</td></tr></table>>];
    bb64__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_171)<br/>_171 = ((_122 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_173)<br/>_173 = _171<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _173)</td></tr></table>>];
    bb65__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_171)<br/>StorageDead(_122)<br/>StorageDead(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/>_180 = ((*_181).62: u8)<br/>_178 = Eq(move _179, move _180)<br/></td></tr><tr><td align="left">switchInt(move _178)</td></tr></table>>];
    bb67__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageLive(_183)<br/>_183 = ()<br/>_177 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _183)<br/>StorageDead(_183)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>StorageLive(_184)<br/>_184 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_1862 = const _<br/>_195 = &amp;(*_1862)<br/>_194 = &amp;(*_195)<br/>_193 = move _194 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_194)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>StorageLive(_203)<br/>_203 = &amp;_184<br/>_202 = &amp;(*_203)<br/></td></tr><tr><td align="left">_201 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _202)</td></tr></table>>];
    bb69__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>_200 = [move _201]<br/>StorageDead(_201)<br/>_199 = &amp;_200<br/>_198 = &amp;(*_199)<br/>_197 = move _198 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">_192 = Arguments::&lt;'_&gt;::new_v1(move _193, move _197)</td></tr></table>>];
    bb70__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_197)<br/>StorageDead(_193)<br/></td></tr><tr><td align="left">_191 = format(move _192)</td></tr></table>>];
    bb71__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_192)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/>StorageDead(_199)<br/>StorageDead(_195)<br/>_190 = move _191<br/>StorageDead(_191)<br/>_189 = &amp;_190<br/>_188 = &amp;(*_189)<br/></td></tr><tr><td align="left">_187 = &lt;String as Deref&gt;::deref(move _188)</td></tr></table>>];
    bb72__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">_186 = &amp;(*_187)<br/>StorageDead(_188)<br/></td></tr><tr><td align="left">_185 = solana_program::log::sol_log(move _186)</td></tr></table>>];
    bb73__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/></td></tr><tr><td align="left">drop(_190)</td></tr></table>>];
    bb74__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_187)<br/>StorageDead(_185)<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>StorageLive(_206)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_1861 = const _<br/>_214 = &amp;(*_1861)<br/>_213 = &amp;(*_214)<br/>_212 = move _213 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_213)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>_222 = &amp;((*_8).27: u8)<br/>_221 = &amp;(*_222)<br/></td></tr><tr><td align="left">_220 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _221)</td></tr></table>>];
    bb75__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>_227 = &amp;_110<br/></td></tr><tr><td align="left">_226 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _227)</td></tr></table>>];
    bb76__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>_225 = &amp;((*_226).62: u8)<br/>_224 = &amp;(*_225)<br/></td></tr><tr><td align="left">_223 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _224)</td></tr></table>>];
    bb77__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_224)<br/>_219 = [move _220, move _223]<br/>StorageDead(_223)<br/>StorageDead(_220)<br/>_218 = &amp;_219<br/>_217 = &amp;(*_218)<br/>_216 = move _217 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">_211 = Arguments::&lt;'_&gt;::new_v1(move _212, move _216)</td></tr></table>>];
    bb78__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_216)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">_210 = format(move _211)</td></tr></table>>];
    bb79__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_226)<br/>StorageDead(_225)<br/>StorageDead(_222)<br/>StorageDead(_219)<br/>StorageDead(_218)<br/>StorageDead(_214)<br/>_209 = move _210<br/>StorageDead(_210)<br/>_208 = &amp;_209<br/>_207 = &amp;(*_208)<br/></td></tr><tr><td align="left">_206 = &lt;String as Deref&gt;::deref(move _207)</td></tr></table>>];
    bb80__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">_205 = &amp;(*_206)<br/>StorageDead(_207)<br/></td></tr><tr><td align="left">_204 = solana_program::log::sol_log(move _205)</td></tr></table>>];
    bb81__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/></td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb82__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_208)<br/>StorageDead(_206)<br/>StorageDead(_204)<br/>StorageLive(_228)<br/>_228 = _184<br/>_177 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _228)<br/>StorageDead(_228)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/></td></tr><tr><td align="left">_176 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _177)</td></tr></table>>];
    bb84__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>_229 = discriminant(_176)<br/></td></tr><tr><td align="left">switchInt(move _229)</td></tr></table>>];
    bb85__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_176 as Continue).0: ())<br/>_175 = _233<br/>StorageDead(_233)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>_1874 = const false<br/>_235 = move _110<br/></td></tr><tr><td align="left">_234 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _235)</td></tr></table>>];
    bb86__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_230)<br/>_230 = ((_176 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_232)<br/>_232 = _230<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _232)</td></tr></table>>];
    bb87__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_234)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = &amp;(*_12)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = &amp;_2<br/>_240 = &amp;(*_241)<br/></td></tr><tr><td align="left">_238 = SpotMarketMap::&lt;'_&gt;::get_ref(move _239, move _240)</td></tr></table>>];
    bb89__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_239)<br/></td></tr><tr><td align="left">_237 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _238)</td></tr></table>>];
    bb90__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>_242 = discriminant(_237)<br/></td></tr><tr><td align="left">switchInt(move _242)</td></tr></table>>];
    bb91__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageLive(_246)<br/>_246 = move ((_237 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1873 = const true<br/>_236 = move _246<br/>StorageDead(_246)<br/>_1881 = discriminant(_237)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>_253 = &amp;_236<br/></td></tr><tr><td align="left">_252 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _253)</td></tr></table>>];
    bb92__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageLive(_243)<br/>_243 = ((_237 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_245)<br/>_245 = _243<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _245)</td></tr></table>>];
    bb93__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>StorageDead(_243)<br/>_1879 = discriminant(_237)<br/>StorageDead(_241)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">_251 = &amp;(*_252)<br/>StorageDead(_253)<br/>StorageLive(_254)<br/>_254 = SpotOperation::Liquidation<br/></td></tr><tr><td align="left">_250 = SpotMarket::is_operation_paused(move _251, move _254)</td></tr></table>>];
    bb95__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left">switchInt(move _250)</td></tr></table>>];
    bb96__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_252)<br/>StorageLive(_256)<br/>_256 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_1860 = const _<br/>_267 = &amp;(*_1860)<br/>_266 = &amp;(*_267)<br/>_265 = move _266 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_266)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;_256<br/>_274 = &amp;(*_275)<br/></td></tr><tr><td align="left">_273 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _274)</td></tr></table>>];
    bb97__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_251)<br/>StorageDead(_252)<br/>StorageLive(_255)<br/>_255 = ()<br/>_249 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _255)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_272 = [move _273]<br/>StorageDead(_273)<br/>_271 = &amp;_272<br/>_270 = &amp;(*_271)<br/>_269 = move _270 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">_264 = Arguments::&lt;'_&gt;::new_v1(move _265, move _269)</td></tr></table>>];
    bb99__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_263 = format(move _264)</td></tr></table>>];
    bb100__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_275)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>StorageDead(_267)<br/>_262 = move _263<br/>StorageDead(_263)<br/>_261 = &amp;_262<br/>_260 = &amp;(*_261)<br/></td></tr><tr><td align="left">_259 = &lt;String as Deref&gt;::deref(move _260)</td></tr></table>>];
    bb101__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_258 = &amp;(*_259)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_257 = solana_program::log::sol_log(move _258)</td></tr></table>>];
    bb102__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/></td></tr><tr><td align="left">drop(_262)</td></tr></table>>];
    bb103__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>StorageLive(_282)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>StorageLive(_286)<br/>_1859 = const _<br/>_286 = &amp;(*_1859)<br/>_285 = &amp;(*_286)<br/>_284 = move _285 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_285)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>_294 = &amp;_2<br/>_293 = &amp;(*_294)<br/></td></tr><tr><td align="left">_292 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _293)</td></tr></table>>];
    bb104__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>_291 = [move _292]<br/>StorageDead(_292)<br/>_290 = &amp;_291<br/>_289 = &amp;(*_290)<br/>_288 = move _289 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_289)<br/></td></tr><tr><td align="left">_283 = Arguments::&lt;'_&gt;::new_v1(move _284, move _288)</td></tr></table>>];
    bb105__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/>StorageDead(_284)<br/></td></tr><tr><td align="left">_282 = format(move _283)</td></tr></table>>];
    bb106__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageDead(_294)<br/>StorageDead(_291)<br/>StorageDead(_290)<br/>StorageDead(_286)<br/>_281 = move _282<br/>StorageDead(_282)<br/>_280 = &amp;_281<br/>_279 = &amp;(*_280)<br/></td></tr><tr><td align="left">_278 = &lt;String as Deref&gt;::deref(move _279)</td></tr></table>>];
    bb107__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_277 = &amp;(*_278)<br/>StorageDead(_279)<br/></td></tr><tr><td align="left">_276 = solana_program::log::sol_log(move _277)</td></tr></table>>];
    bb108__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/></td></tr><tr><td align="left">drop(_281)</td></tr></table>>];
    bb109__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_281)<br/>StorageDead(_280)<br/>StorageDead(_278)<br/>StorageDead(_276)<br/>StorageLive(_295)<br/>_295 = _256<br/>_249 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _295)<br/>StorageDead(_295)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_250)<br/></td></tr><tr><td align="left">_248 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _249)</td></tr></table>>];
    bb111__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>_296 = discriminant(_248)<br/></td></tr><tr><td align="left">switchInt(move _296)</td></tr></table>>];
    bb112__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageLive(_300)<br/>_300 = ((_248 as Continue).0: ())<br/>_247 = _300<br/>StorageDead(_300)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>_305 = ((*_8).27: u8)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>_308 = &amp;_236<br/></td></tr><tr><td align="left">_307 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _308)</td></tr></table>>];
    bb113__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageLive(_297)<br/>_297 = ((_248 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_299)<br/>_299 = _297<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _299)</td></tr></table>>];
    bb114__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageDead(_297)<br/>StorageDead(_248)<br/>StorageDead(_247)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>_306 = ((*_307).62: u8)<br/>_304 = Eq(move _305, move _306)<br/></td></tr><tr><td align="left">switchInt(move _304)</td></tr></table>>];
    bb116__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_305)<br/>StorageLive(_309)<br/>_309 = ()<br/>_303 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _309)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_305)<br/>StorageLive(_310)<br/>_310 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_1858 = const _<br/>_321 = &amp;(*_1858)<br/>_320 = &amp;(*_321)<br/>_319 = move _320 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_320)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>_329 = &amp;_310<br/>_328 = &amp;(*_329)<br/></td></tr><tr><td align="left">_327 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _328)</td></tr></table>>];
    bb118__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_326 = [move _327]<br/>StorageDead(_327)<br/>_325 = &amp;_326<br/>_324 = &amp;(*_325)<br/>_323 = move _324 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_324)<br/></td></tr><tr><td align="left">_318 = Arguments::&lt;'_&gt;::new_v1(move _319, move _323)</td></tr></table>>];
    bb119__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_323)<br/>StorageDead(_319)<br/></td></tr><tr><td align="left">_317 = format(move _318)</td></tr></table>>];
    bb120__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageDead(_329)<br/>StorageDead(_326)<br/>StorageDead(_325)<br/>StorageDead(_321)<br/>_316 = move _317<br/>StorageDead(_317)<br/>_315 = &amp;_316<br/>_314 = &amp;(*_315)<br/></td></tr><tr><td align="left">_313 = &lt;String as Deref&gt;::deref(move _314)</td></tr></table>>];
    bb121__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">_312 = &amp;(*_313)<br/>StorageDead(_314)<br/></td></tr><tr><td align="left">_311 = solana_program::log::sol_log(move _312)</td></tr></table>>];
    bb122__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_312)<br/></td></tr><tr><td align="left">drop(_316)</td></tr></table>>];
    bb123__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_316)<br/>StorageDead(_315)<br/>StorageDead(_313)<br/>StorageDead(_311)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>_1857 = const _<br/>_340 = &amp;(*_1857)<br/>_339 = &amp;(*_340)<br/>_338 = move _339 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_339)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>_348 = &amp;((*_8).27: u8)<br/>_347 = &amp;(*_348)<br/></td></tr><tr><td align="left">_346 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _347)</td></tr></table>>];
    bb124__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_347)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>_353 = &amp;_236<br/></td></tr><tr><td align="left">_352 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _353)</td></tr></table>>];
    bb125__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/>_351 = &amp;((*_352).62: u8)<br/>_350 = &amp;(*_351)<br/></td></tr><tr><td align="left">_349 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u8&gt;(move _350)</td></tr></table>>];
    bb126__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>_345 = [move _346, move _349]<br/>StorageDead(_349)<br/>StorageDead(_346)<br/>_344 = &amp;_345<br/>_343 = &amp;(*_344)<br/>_342 = move _343 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_343)<br/></td></tr><tr><td align="left">_337 = Arguments::&lt;'_&gt;::new_v1(move _338, move _342)</td></tr></table>>];
    bb127__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_342)<br/>StorageDead(_338)<br/></td></tr><tr><td align="left">_336 = format(move _337)</td></tr></table>>];
    bb128__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_337)<br/>StorageDead(_352)<br/>StorageDead(_351)<br/>StorageDead(_348)<br/>StorageDead(_345)<br/>StorageDead(_344)<br/>StorageDead(_340)<br/>_335 = move _336<br/>StorageDead(_336)<br/>_334 = &amp;_335<br/>_333 = &amp;(*_334)<br/></td></tr><tr><td align="left">_332 = &lt;String as Deref&gt;::deref(move _333)</td></tr></table>>];
    bb129__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">_331 = &amp;(*_332)<br/>StorageDead(_333)<br/></td></tr><tr><td align="left">_330 = solana_program::log::sol_log(move _331)</td></tr></table>>];
    bb130__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_331)<br/></td></tr><tr><td align="left">drop(_335)</td></tr></table>>];
    bb131__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_335)<br/>StorageDead(_334)<br/>StorageDead(_332)<br/>StorageDead(_330)<br/>StorageLive(_354)<br/>_354 = _310<br/>_303 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _354)<br/>StorageDead(_354)<br/>StorageDead(_310)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/></td></tr><tr><td align="left">_302 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _303)</td></tr></table>>];
    bb133__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>_355 = discriminant(_302)<br/></td></tr><tr><td align="left">switchInt(move _355)</td></tr></table>>];
    bb134__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_359)<br/>_359 = ((_302 as Continue).0: ())<br/>_301 = _359<br/>StorageDead(_359)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>_1873 = const false<br/>_361 = move _236<br/></td></tr><tr><td align="left">_360 = std::mem::drop::&lt;Ref&lt;'_, SpotMarket&gt;&gt;(move _361)</td></tr></table>>];
    bb135__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageLive(_356)<br/>_356 = ((_302 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_358)<br/>_358 = _356<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _358)</td></tr></table>>];
    bb136__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_358)<br/>StorageDead(_356)<br/>StorageDead(_302)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb137__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_361)<br/>StorageDead(_360)<br/>StorageLive(_362)<br/>StorageLive(_363)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_366 = &amp;(*_5)<br/>StorageLive(_367)<br/>_367 = _1<br/></td></tr><tr><td align="left">_365 = User::get_spot_position(move _366, move _367)</td></tr></table>>];
    bb138__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_367)<br/>StorageDead(_366)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = &amp;_1<br/>_368 = {closure@programs/drift/src/controller/liquidation.rs:1233:56: 1233:59} { asset_market_index: move _369 }<br/>StorageDead(_369)<br/></td></tr><tr><td align="left">_364 = std::result::Result::&lt;&amp;SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:1233:56: 1233:59}&gt;(move _365, move _368)</td></tr></table>>];
    bb139__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_368)<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">_363 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _364)</td></tr></table>>];
    bb140__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>_370 = discriminant(_363)<br/></td></tr><tr><td align="left">switchInt(move _370)</td></tr></table>>];
    bb141__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageLive(_374)<br/>_374 = ((_363 as Continue).0: &amp;state::user::SpotPosition)<br/>_362 = _374<br/>StorageDead(_374)<br/>StorageDead(_363)<br/>StorageDead(_362)<br/>StorageLive(_375)<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>_379 = &amp;(*_5)<br/>StorageLive(_380)<br/>_380 = _2<br/></td></tr><tr><td align="left">_378 = User::get_spot_position(move _379, move _380)</td></tr></table>>];
    bb142__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageLive(_371)<br/>_371 = ((_363 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_373)<br/>_373 = _371<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _373)</td></tr></table>>];
    bb143__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>StorageDead(_371)<br/>StorageDead(_363)<br/>StorageDead(_362)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb144__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>StorageDead(_379)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>_382 = &amp;_2<br/>_381 = {closure@programs/drift/src/controller/liquidation.rs:1242:18: 1242:21} { liability_market_index: move _382 }<br/>StorageDead(_382)<br/></td></tr><tr><td align="left">_377 = std::result::Result::&lt;&amp;SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:1242:18: 1242:21}&gt;(move _378, move _381)</td></tr></table>>];
    bb145__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_381)<br/>StorageDead(_378)<br/></td></tr><tr><td align="left">_376 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _377)</td></tr></table>>];
    bb146__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_377)<br/>_383 = discriminant(_376)<br/></td></tr><tr><td align="left">switchInt(move _383)</td></tr></table>>];
    bb147__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageLive(_387)<br/>_387 = ((_376 as Continue).0: &amp;state::user::SpotPosition)<br/>_375 = _387<br/>StorageDead(_387)<br/>StorageDead(_376)<br/>StorageDead(_375)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>StorageLive(_392)<br/>_392 = &amp;mut (*_8)<br/>StorageLive(_393)<br/>_393 = _1<br/></td></tr><tr><td align="left">_391 = User::force_get_spot_position_mut(move _392, move _393)</td></tr></table>>];
    bb148__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageLive(_384)<br/>_384 = ((_376 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_386)<br/>_386 = _384<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _386)</td></tr></table>>];
    bb149__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_384)<br/>StorageDead(_376)<br/>StorageDead(_375)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb150__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_393)<br/>StorageDead(_392)<br/>StorageLive(_394)<br/>_394 = {closure@programs/drift/src/controller/liquidation.rs:1252:18: 1252:21}<br/></td></tr><tr><td align="left">_390 = std::result::Result::&lt;&amp;mut SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:1252:18: 1252:21}&gt;(move _391, move _394)</td></tr></table>>];
    bb151__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_394)<br/>StorageDead(_391)<br/></td></tr><tr><td align="left">_389 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _390)</td></tr></table>>];
    bb152__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_390)<br/>_395 = discriminant(_389)<br/></td></tr><tr><td align="left">switchInt(move _395)</td></tr></table>>];
    bb153__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_399)<br/>_399 = move ((_389 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_388 = move _399<br/>StorageDead(_399)<br/>StorageDead(_389)<br/>StorageDead(_388)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>_404 = &amp;mut (*_8)<br/>StorageLive(_405)<br/>_405 = _2<br/></td></tr><tr><td align="left">_403 = User::force_get_spot_position_mut(move _404, move _405)</td></tr></table>>];
    bb154__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>_396 = ((_389 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_398)<br/>_398 = _396<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _398)</td></tr></table>>];
    bb155__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_398)<br/>StorageDead(_396)<br/>StorageDead(_389)<br/>StorageDead(_388)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>StorageDead(_404)<br/>StorageLive(_406)<br/>_406 = {closure@programs/drift/src/controller/liquidation.rs:1259:18: 1259:21}<br/></td></tr><tr><td align="left">_402 = std::result::Result::&lt;&amp;mut SpotPosition, error::ErrorCode&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/controller/liquidation.rs:1259:18: 1259:21}&gt;(move _403, move _406)</td></tr></table>>];
    bb157__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageDead(_406)<br/>StorageDead(_403)<br/></td></tr><tr><td align="left">_401 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _402)</td></tr></table>>];
    bb158__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageDead(_402)<br/>_407 = discriminant(_401)<br/></td></tr><tr><td align="left">switchInt(move _407)</td></tr></table>>];
    bb159__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageLive(_411)<br/>_411 = move ((_401 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_400 = move _411<br/>StorageDead(_411)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_423 = &amp;(*_12)<br/>StorageLive(_424)<br/>StorageLive(_425)<br/>_425 = &amp;_1<br/>_424 = &amp;(*_425)<br/></td></tr><tr><td align="left">_422 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _423, move _424)</td></tr></table>>];
    bb160__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageLive(_408)<br/>_408 = ((_401 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_410)<br/>_410 = _408<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _410)</td></tr></table>>];
    bb161__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_408)<br/>StorageDead(_401)<br/>StorageDead(_400)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb162__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_423)<br/></td></tr><tr><td align="left">_421 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _422)</td></tr></table>>];
    bb163__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>_426 = discriminant(_421)<br/></td></tr><tr><td align="left">switchInt(move _426)</td></tr></table>>];
    bb164__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageLive(_430)<br/>_430 = move ((_421 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_420 = move _430<br/>StorageDead(_430)<br/>_1885 = discriminant(_421)<br/>StorageDead(_425)<br/>StorageDead(_421)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;mut (*_13)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>StorageLive(_442)<br/>_442 = &amp;_420<br/></td></tr><tr><td align="left">_441 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _442)</td></tr></table>>];
    bb165__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageLive(_427)<br/>_427 = ((_421 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_429)<br/>_429 = _427<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _429)</td></tr></table>>];
    bb166__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>StorageDead(_427)<br/>_1883 = discriminant(_421)<br/>StorageDead(_425)<br/>StorageDead(_421)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb167__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">_440 = &amp;(*_441)<br/>StorageDead(_442)<br/></td></tr><tr><td align="left">_439 = SpotMarket::oracle_id(move _440)</td></tr></table>>];
    bb168__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_440)<br/>_438 = &amp;_439<br/>_437 = &amp;(*_438)<br/></td></tr><tr><td align="left">_435 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _436, move _437)</td></tr></table>>];
    bb169__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_437)<br/>StorageDead(_436)<br/></td></tr><tr><td align="left">_434 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _435)</td></tr></table>>];
    bb170__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>_443 = discriminant(_434)<br/></td></tr><tr><td align="left">switchInt(move _443)</td></tr></table>>];
    bb171__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageLive(_447)<br/>_447 = ((_434 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_433 = _447<br/>StorageDead(_447)<br/>StorageLive(_431)<br/>_431 = (_433.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_432)<br/>_432 = (_433.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_441)<br/>StorageDead(_439)<br/>StorageDead(_438)<br/>StorageDead(_434)<br/>StorageDead(_433)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_454 = &amp;mut _420<br/>_453 = &amp;mut (*_454)<br/></td></tr><tr><td align="left">_452 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _453)</td></tr></table>>];
    bb172__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageLive(_444)<br/>_444 = ((_434 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_446)<br/>_446 = _444<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _446)</td></tr></table>>];
    bb173__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/>StorageDead(_444)<br/>StorageDead(_441)<br/>StorageDead(_439)<br/>StorageDead(_438)<br/>StorageDead(_434)<br/>StorageDead(_433)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb174__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">_451 = &amp;mut (*_452)<br/>StorageDead(_453)<br/>StorageLive(_455)<br/>_455 = &amp;(*_431)<br/>StorageLive(_456)<br/>_456 = &amp;(*_432)<br/>StorageLive(_457)<br/>_457 = _14<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>_459 = DriftAction::Liquidate<br/>_458 = Option::&lt;DriftAction&gt;::Some(move _459)<br/>StorageDead(_459)<br/></td></tr><tr><td align="left">_450 = update_spot_market_and_check_validity(move _451, move _455, move _456, move _457, move _458)</td></tr></table>>];
    bb175__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_458)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/>StorageDead(_455)<br/>StorageDead(_451)<br/></td></tr><tr><td align="left">_449 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _450)</td></tr></table>>];
    bb176__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_450)<br/>_460 = discriminant(_449)<br/></td></tr><tr><td align="left">switchInt(move _460)</td></tr></table>>];
    bb177__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageLive(_464)<br/>_464 = ((_449 as Continue).0: ())<br/>_448 = _464<br/>StorageDead(_464)<br/>StorageDead(_454)<br/>StorageDead(_452)<br/>StorageDead(_449)<br/>StorageDead(_448)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/>_468 = &amp;(*_5)<br/>StorageLive(_469)<br/>_469 = _1<br/></td></tr><tr><td align="left">_467 = User::get_spot_position(move _468, move _469)</td></tr></table>>];
    bb178__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_461)<br/>_461 = ((_449 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_463)<br/>_463 = _461<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _463)</td></tr></table>>];
    bb179__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageDead(_461)<br/>StorageDead(_454)<br/>StorageDead(_452)<br/>StorageDead(_449)<br/>StorageDead(_448)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb180__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>StorageDead(_468)<br/></td></tr><tr><td align="left">_466 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _467)</td></tr></table>>];
    bb181__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">StorageDead(_467)<br/>_470 = discriminant(_466)<br/></td></tr><tr><td align="left">switchInt(move _470)</td></tr></table>>];
    bb182__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageLive(_474)<br/>_474 = ((_466 as Continue).0: &amp;state::user::SpotPosition)<br/>_465 = _474<br/>StorageDead(_474)<br/>StorageDead(_466)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>_479 = &amp;((*_465).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_480)<br/>_1856 = const _<br/>_480 = &amp;(*_1856)<br/></td></tr><tr><td align="left">_478 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _479, move _480)</td></tr></table>>];
    bb183__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_471)<br/>_471 = ((_466 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_473)<br/>_473 = _471<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _473)</td></tr></table>>];
    bb184__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>StorageDead(_471)<br/>StorageDead(_466)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb185__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left">switchInt(move _478)</td></tr></table>>];
    bb186__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>StorageDead(_479)<br/>StorageLive(_482)<br/>_482 = ()<br/>_477 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _482)<br/>StorageDead(_482)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_480)<br/>StorageDead(_479)<br/>StorageLive(_483)<br/>_483 = error::ErrorCode::WrongSpotBalanceType<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>StorageLive(_493)<br/>StorageLive(_494)<br/>_1855 = const _<br/>_494 = &amp;(*_1855)<br/>_493 = &amp;(*_494)<br/>_492 = move _493 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_493)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>StorageLive(_498)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>StorageLive(_502)<br/>_502 = &amp;_483<br/>_501 = &amp;(*_502)<br/></td></tr><tr><td align="left">_500 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _501)</td></tr></table>>];
    bb188__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>_499 = [move _500]<br/>StorageDead(_500)<br/>_498 = &amp;_499<br/>_497 = &amp;(*_498)<br/>_496 = move _497 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_497)<br/></td></tr><tr><td align="left">_491 = Arguments::&lt;'_&gt;::new_v1(move _492, move _496)</td></tr></table>>];
    bb189__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageDead(_496)<br/>StorageDead(_492)<br/></td></tr><tr><td align="left">_490 = format(move _491)</td></tr></table>>];
    bb190__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>StorageDead(_502)<br/>StorageDead(_499)<br/>StorageDead(_498)<br/>StorageDead(_494)<br/>_489 = move _490<br/>StorageDead(_490)<br/>_488 = &amp;_489<br/>_487 = &amp;(*_488)<br/></td></tr><tr><td align="left">_486 = &lt;String as Deref&gt;::deref(move _487)</td></tr></table>>];
    bb191__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">_485 = &amp;(*_486)<br/>StorageDead(_487)<br/></td></tr><tr><td align="left">_484 = solana_program::log::sol_log(move _485)</td></tr></table>>];
    bb192__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/></td></tr><tr><td align="left">drop(_489)</td></tr></table>>];
    bb193__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_489)<br/>StorageDead(_488)<br/>StorageDead(_486)<br/>StorageDead(_484)<br/>StorageLive(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_505 = const &quot;User did not have a deposit for the asset market index&quot;<br/>_504 = &amp;(*_505)<br/></td></tr><tr><td align="left">_503 = solana_program::log::sol_log(move _504)</td></tr></table>>];
    bb194__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_504)<br/>StorageDead(_505)<br/>StorageDead(_503)<br/>StorageLive(_506)<br/>_506 = _483<br/>_477 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _506)<br/>StorageDead(_506)<br/>StorageDead(_483)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/></td></tr><tr><td align="left">_476 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _477)</td></tr></table>>];
    bb196__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/>_507 = discriminant(_476)<br/></td></tr><tr><td align="left">switchInt(move _507)</td></tr></table>>];
    bb197__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_511)<br/>_511 = ((_476 as Continue).0: ())<br/>_475 = _511<br/>StorageDead(_511)<br/>StorageDead(_476)<br/>StorageDead(_475)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>_515 = &amp;(*_465)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>StorageLive(_519)<br/>_519 = &amp;_420<br/>_518 = &amp;(*_519)<br/></td></tr><tr><td align="left">_517 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _518)</td></tr></table>>];
    bb198__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageLive(_508)<br/>_508 = ((_476 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_510)<br/>_510 = _508<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _510)</td></tr></table>>];
    bb199__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_510)<br/>StorageDead(_508)<br/>StorageDead(_476)<br/>StorageDead(_475)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb200__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">_516 = &amp;(*_517)<br/>StorageDead(_518)<br/></td></tr><tr><td align="left">_514 = SpotPosition::get_token_amount(move _515, move _516)</td></tr></table>>];
    bb201__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageDead(_516)<br/>StorageDead(_515)<br/></td></tr><tr><td align="left">_513 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _514)</td></tr></table>>];
    bb202__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageDead(_514)<br/>_520 = discriminant(_513)<br/></td></tr><tr><td align="left">switchInt(move _520)</td></tr></table>>];
    bb203__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageLive(_524)<br/>_524 = ((_513 as Continue).0: u128)<br/>_512 = _524<br/>StorageDead(_524)<br/>StorageDead(_519)<br/>StorageDead(_517)<br/>StorageDead(_513)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>_529 = _512<br/>_528 = Ne(move _529, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _528)</td></tr></table>>];
    bb204__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">StorageLive(_521)<br/>_521 = ((_513 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_523)<br/>_523 = _521<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _523)</td></tr></table>>];
    bb205__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_523)<br/>StorageDead(_521)<br/>StorageDead(_519)<br/>StorageDead(_517)<br/>StorageDead(_513)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_529)<br/>StorageLive(_530)<br/>_530 = ()<br/>_527 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _530)<br/>StorageDead(_530)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb207__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_529)<br/>StorageLive(_531)<br/>_531 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>_1854 = const _<br/>_542 = &amp;(*_1854)<br/>_541 = &amp;(*_542)<br/>_540 = move _541 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_541)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>_550 = &amp;_531<br/>_549 = &amp;(*_550)<br/></td></tr><tr><td align="left">_548 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _549)</td></tr></table>>];
    bb208__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_549)<br/>_547 = [move _548]<br/>StorageDead(_548)<br/>_546 = &amp;_547<br/>_545 = &amp;(*_546)<br/>_544 = move _545 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_545)<br/></td></tr><tr><td align="left">_539 = Arguments::&lt;'_&gt;::new_v1(move _540, move _544)</td></tr></table>>];
    bb209__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_544)<br/>StorageDead(_540)<br/></td></tr><tr><td align="left">_538 = format(move _539)</td></tr></table>>];
    bb210__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/>StorageDead(_550)<br/>StorageDead(_547)<br/>StorageDead(_546)<br/>StorageDead(_542)<br/>_537 = move _538<br/>StorageDead(_538)<br/>_536 = &amp;_537<br/>_535 = &amp;(*_536)<br/></td></tr><tr><td align="left">_534 = &lt;String as Deref&gt;::deref(move _535)</td></tr></table>>];
    bb211__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">_533 = &amp;(*_534)<br/>StorageDead(_535)<br/></td></tr><tr><td align="left">_532 = solana_program::log::sol_log(move _533)</td></tr></table>>];
    bb212__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/></td></tr><tr><td align="left">drop(_537)</td></tr></table>>];
    bb213__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">StorageDead(_537)<br/>StorageDead(_536)<br/>StorageDead(_534)<br/>StorageDead(_532)<br/>StorageLive(_551)<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>StorageLive(_554)<br/>StorageLive(_555)<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>StorageLive(_561)<br/>_1853 = const _<br/>_561 = &amp;(*_1853)<br/>_560 = &amp;(*_561)<br/>_559 = move _560 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_560)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>StorageLive(_569)<br/>_569 = &amp;_1<br/>_568 = &amp;(*_569)<br/></td></tr><tr><td align="left">_567 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _568)</td></tr></table>>];
    bb214__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_568)<br/>_566 = [move _567]<br/>StorageDead(_567)<br/>_565 = &amp;_566<br/>_564 = &amp;(*_565)<br/>_563 = move _564 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_564)<br/></td></tr><tr><td align="left">_558 = Arguments::&lt;'_&gt;::new_v1(move _559, move _563)</td></tr></table>>];
    bb215__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_563)<br/>StorageDead(_559)<br/></td></tr><tr><td align="left">_557 = format(move _558)</td></tr></table>>];
    bb216__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/>StorageDead(_569)<br/>StorageDead(_566)<br/>StorageDead(_565)<br/>StorageDead(_561)<br/>_556 = move _557<br/>StorageDead(_557)<br/>_555 = &amp;_556<br/>_554 = &amp;(*_555)<br/></td></tr><tr><td align="left">_553 = &lt;String as Deref&gt;::deref(move _554)</td></tr></table>>];
    bb217__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">_552 = &amp;(*_553)<br/>StorageDead(_554)<br/></td></tr><tr><td align="left">_551 = solana_program::log::sol_log(move _552)</td></tr></table>>];
    bb218__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_552)<br/></td></tr><tr><td align="left">drop(_556)</td></tr></table>>];
    bb219__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_556)<br/>StorageDead(_555)<br/>StorageDead(_553)<br/>StorageDead(_551)<br/>StorageLive(_570)<br/>_570 = _531<br/>_527 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _570)<br/>StorageDead(_570)<br/>StorageDead(_531)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb220__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/></td></tr><tr><td align="left">_526 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _527)</td></tr></table>>];
    bb221__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_527)<br/>_571 = discriminant(_526)<br/></td></tr><tr><td align="left">switchInt(move _571)</td></tr></table>>];
    bb222__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageLive(_575)<br/>_575 = ((_526 as Continue).0: ())<br/>_525 = _575<br/>StorageDead(_575)<br/>StorageDead(_526)<br/>StorageDead(_525)<br/>StorageLive(_576)<br/>_576 = ((*_431).0: i64)<br/>StorageLive(_577)<br/>_577 = _512<br/>StorageLive(_578)<br/>_578 = _576<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>StorageLive(_581)<br/>_581 = &amp;_420<br/></td></tr><tr><td align="left">_580 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _581)</td></tr></table>>];
    bb223__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageLive(_572)<br/>_572 = ((_526 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_574)<br/>_574 = _572<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _574)</td></tr></table>>];
    bb224__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/>StorageDead(_572)<br/>StorageDead(_526)<br/>StorageDead(_525)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_581)<br/>_579 = ((*_580).41: u32)<br/>StorageLive(_582)<br/>StorageLive(_583)<br/>StorageLive(_584)<br/>_584 = &amp;_420<br/></td></tr><tr><td align="left">_583 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _584)</td></tr></table>>];
    bb226__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_584)<br/>_582 = ((*_583).32: u32)<br/>StorageLive(_585)<br/>StorageLive(_586)<br/>StorageLive(_587)<br/>StorageLive(_588)<br/>StorageLive(_589)<br/>StorageLive(_590)<br/>_590 = &amp;_420<br/></td></tr><tr><td align="left">_589 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _590)</td></tr></table>>];
    bb227__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_590)<br/>_588 = ((*_589).36: u32)<br/>StorageLive(_591)<br/>_591 = LiquidationMultiplierType::Premium<br/></td></tr><tr><td align="left">_587 = calculate_liquidation_multiplier(move _588, move _591)</td></tr></table>>];
    bb228__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_591)<br/>StorageDead(_588)<br/></td></tr><tr><td align="left">_586 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _587)</td></tr></table>>];
    bb229__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_587)<br/>_592 = discriminant(_586)<br/></td></tr><tr><td align="left">switchInt(move _592)</td></tr></table>>];
    bb230__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_596)<br/>_596 = ((_586 as Continue).0: u32)<br/>_585 = _596<br/>StorageDead(_596)<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>StorageLive(_599)<br/>_599 = &amp;_420<br/></td></tr><tr><td align="left">_598 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _599)</td></tr></table>>];
    bb231__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_593)<br/>_593 = ((_586 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_595)<br/>_595 = _593<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _595)</td></tr></table>>];
    bb232__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>StorageDead(_593)<br/>StorageDead(_585)<br/>StorageDead(_582)<br/>StorageDead(_579)<br/>StorageDead(_578)<br/>StorageDead(_577)<br/>StorageDead(_576)<br/>StorageDead(_512)<br/>StorageDead(_465)<br/>StorageDead(_432)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">drop(_420)</td></tr></table>>];
    bb233__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_599)<br/>_597 = ((*_598).62: u8)<br/>StorageLive(_600)<br/>_600 = ((*_431).2: i64)<br/>_419 = (move _577, move _578, move _579, move _582, move _585, move _597, move _600)<br/>StorageDead(_600)<br/>StorageDead(_597)<br/>StorageDead(_585)<br/>StorageDead(_582)<br/>StorageDead(_579)<br/>StorageDead(_578)<br/>StorageDead(_577)<br/>StorageDead(_576)<br/>StorageDead(_512)<br/>StorageDead(_465)<br/>StorageDead(_432)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">drop(_420)</td></tr></table>>];
    bb234__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>StorageLive(_412)<br/>_412 = (_419.0: u128)<br/>StorageLive(_413)<br/>_413 = (_419.1: i64)<br/>StorageLive(_414)<br/>_414 = (_419.2: u32)<br/>StorageLive(_415)<br/>_415 = (_419.3: u32)<br/>StorageLive(_416)<br/>_416 = (_419.4: u32)<br/>StorageLive(_417)<br/>_417 = (_419.5: u8)<br/>StorageLive(_418)<br/>_418 = (_419.6: i64)<br/>StorageDead(_598)<br/>StorageDead(_589)<br/>StorageDead(_586)<br/>StorageDead(_583)<br/>StorageDead(_580)<br/>StorageDead(_419)<br/>StorageLive(_608)<br/>StorageLive(_609)<br/>StorageLive(_610)<br/>StorageLive(_611)<br/>StorageLive(_612)<br/>_612 = &amp;(*_12)<br/>StorageLive(_613)<br/>StorageLive(_614)<br/>_614 = &amp;_2<br/>_613 = &amp;(*_614)<br/></td></tr><tr><td align="left">_611 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _612, move _613)</td></tr></table>>];
    bb235__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_613)<br/>StorageDead(_612)<br/></td></tr><tr><td align="left">_610 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _611)</td></tr></table>>];
    bb236__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_611)<br/>_615 = discriminant(_610)<br/></td></tr><tr><td align="left">switchInt(move _615)</td></tr></table>>];
    bb237__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageLive(_619)<br/>_619 = move ((_610 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_609 = move _619<br/>StorageDead(_619)<br/>_1889 = discriminant(_610)<br/>StorageDead(_614)<br/>StorageDead(_610)<br/>StorageLive(_622)<br/>StorageLive(_623)<br/>StorageLive(_624)<br/>StorageLive(_625)<br/>_625 = &amp;mut (*_13)<br/>StorageLive(_626)<br/>StorageLive(_627)<br/>StorageLive(_628)<br/>StorageLive(_629)<br/>StorageLive(_630)<br/>StorageLive(_631)<br/>_631 = &amp;_609<br/></td></tr><tr><td align="left">_630 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _631)</td></tr></table>>];
    bb238__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageLive(_616)<br/>_616 = ((_610 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_618)<br/>_618 = _616<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _618)</td></tr></table>>];
    bb239__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_618)<br/>StorageDead(_616)<br/>_1887 = discriminant(_610)<br/>StorageDead(_614)<br/>StorageDead(_610)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb240__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">_629 = &amp;(*_630)<br/>StorageDead(_631)<br/></td></tr><tr><td align="left">_628 = SpotMarket::oracle_id(move _629)</td></tr></table>>];
    bb241__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_629)<br/>_627 = &amp;_628<br/>_626 = &amp;(*_627)<br/></td></tr><tr><td align="left">_624 = OracleMap::&lt;'_&gt;::get_price_data_and_guard_rails(move _625, move _626)</td></tr></table>>];
    bb242__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_626)<br/>StorageDead(_625)<br/></td></tr><tr><td align="left">_623 = &lt;std::result::Result&lt;(&amp;OraclePriceData, &amp;ValidityGuardRails), error::ErrorCode&gt; as Try&gt;::branch(move _624)</td></tr></table>>];
    bb243__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_624)<br/>_632 = discriminant(_623)<br/></td></tr><tr><td align="left">switchInt(move _632)</td></tr></table>>];
    bb244__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageLive(_636)<br/>_636 = ((_623 as Continue).0: (&amp;state::oracle::OraclePriceData, &amp;state::state::ValidityGuardRails))<br/>_622 = _636<br/>StorageDead(_636)<br/>StorageLive(_620)<br/>_620 = (_622.0: &amp;state::oracle::OraclePriceData)<br/>StorageLive(_621)<br/>_621 = (_622.1: &amp;state::state::ValidityGuardRails)<br/>StorageDead(_630)<br/>StorageDead(_628)<br/>StorageDead(_627)<br/>StorageDead(_623)<br/>StorageDead(_622)<br/>StorageLive(_637)<br/>StorageLive(_638)<br/>StorageLive(_639)<br/>StorageLive(_640)<br/>StorageLive(_641)<br/>StorageLive(_642)<br/>StorageLive(_643)<br/>_643 = &amp;mut _609<br/>_642 = &amp;mut (*_643)<br/></td></tr><tr><td align="left">_641 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _642)</td></tr></table>>];
    bb245__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageLive(_633)<br/>_633 = ((_623 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_635)<br/>_635 = _633<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _635)</td></tr></table>>];
    bb246__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_635)<br/>StorageDead(_633)<br/>StorageDead(_630)<br/>StorageDead(_628)<br/>StorageDead(_627)<br/>StorageDead(_623)<br/>StorageDead(_622)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">_640 = &amp;mut (*_641)<br/>StorageDead(_642)<br/>StorageLive(_644)<br/>_644 = &amp;(*_620)<br/>StorageLive(_645)<br/>_645 = &amp;(*_621)<br/>StorageLive(_646)<br/>_646 = _14<br/>StorageLive(_647)<br/>StorageLive(_648)<br/>_648 = DriftAction::Liquidate<br/>_647 = Option::&lt;DriftAction&gt;::Some(move _648)<br/>StorageDead(_648)<br/></td></tr><tr><td align="left">_639 = update_spot_market_and_check_validity(move _640, move _644, move _645, move _646, move _647)</td></tr></table>>];
    bb248__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_647)<br/>StorageDead(_646)<br/>StorageDead(_645)<br/>StorageDead(_644)<br/>StorageDead(_640)<br/></td></tr><tr><td align="left">_638 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _639)</td></tr></table>>];
    bb249__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_639)<br/>_649 = discriminant(_638)<br/></td></tr><tr><td align="left">switchInt(move _649)</td></tr></table>>];
    bb250__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageLive(_653)<br/>_653 = ((_638 as Continue).0: ())<br/>_637 = _653<br/>StorageDead(_653)<br/>StorageDead(_643)<br/>StorageDead(_641)<br/>StorageDead(_638)<br/>StorageDead(_637)<br/>StorageLive(_654)<br/>StorageLive(_655)<br/>StorageLive(_656)<br/>StorageLive(_657)<br/>_657 = &amp;(*_5)<br/>StorageLive(_658)<br/>_658 = _2<br/></td></tr><tr><td align="left">_656 = User::get_spot_position(move _657, move _658)</td></tr></table>>];
    bb251__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageLive(_650)<br/>_650 = ((_638 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_652)<br/>_652 = _650<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _652)</td></tr></table>>];
    bb252__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_652)<br/>StorageDead(_650)<br/>StorageDead(_643)<br/>StorageDead(_641)<br/>StorageDead(_638)<br/>StorageDead(_637)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_658)<br/>StorageDead(_657)<br/></td></tr><tr><td align="left">_655 = &lt;std::result::Result&lt;&amp;SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _656)</td></tr></table>>];
    bb254__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_656)<br/>_659 = discriminant(_655)<br/></td></tr><tr><td align="left">switchInt(move _659)</td></tr></table>>];
    bb255__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageLive(_663)<br/>_663 = ((_655 as Continue).0: &amp;state::user::SpotPosition)<br/>_654 = _663<br/>StorageDead(_663)<br/>StorageDead(_655)<br/>StorageLive(_664)<br/>StorageLive(_665)<br/>StorageLive(_666)<br/>StorageLive(_667)<br/>StorageLive(_668)<br/>_668 = &amp;((*_654).5: state::spot_market::SpotBalanceType)<br/>StorageLive(_669)<br/>_1852 = const _<br/>_669 = &amp;(*_1852)<br/></td></tr><tr><td align="left">_667 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _668, move _669)</td></tr></table>>];
    bb256__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageLive(_660)<br/>_660 = ((_655 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_662)<br/>_662 = _660<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _662)</td></tr></table>>];
    bb257__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_662)<br/>StorageDead(_660)<br/>StorageDead(_655)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left">switchInt(move _667)</td></tr></table>>];
    bb259__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/>StorageDead(_668)<br/>StorageLive(_671)<br/>_671 = ()<br/>_666 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _671)<br/>StorageDead(_671)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_669)<br/>StorageDead(_668)<br/>StorageLive(_672)<br/>_672 = error::ErrorCode::WrongSpotBalanceType<br/>StorageLive(_673)<br/>StorageLive(_674)<br/>StorageLive(_675)<br/>StorageLive(_676)<br/>StorageLive(_677)<br/>StorageLive(_678)<br/>StorageLive(_679)<br/>StorageLive(_680)<br/>StorageLive(_681)<br/>StorageLive(_682)<br/>StorageLive(_683)<br/>_1851 = const _<br/>_683 = &amp;(*_1851)<br/>_682 = &amp;(*_683)<br/>_681 = move _682 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_682)<br/>StorageLive(_685)<br/>StorageLive(_686)<br/>StorageLive(_687)<br/>StorageLive(_688)<br/>StorageLive(_689)<br/>StorageLive(_690)<br/>StorageLive(_691)<br/>_691 = &amp;_672<br/>_690 = &amp;(*_691)<br/></td></tr><tr><td align="left">_689 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _690)</td></tr></table>>];
    bb261__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_690)<br/>_688 = [move _689]<br/>StorageDead(_689)<br/>_687 = &amp;_688<br/>_686 = &amp;(*_687)<br/>_685 = move _686 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_686)<br/></td></tr><tr><td align="left">_680 = Arguments::&lt;'_&gt;::new_v1(move _681, move _685)</td></tr></table>>];
    bb262__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_685)<br/>StorageDead(_681)<br/></td></tr><tr><td align="left">_679 = format(move _680)</td></tr></table>>];
    bb263__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_680)<br/>StorageDead(_691)<br/>StorageDead(_688)<br/>StorageDead(_687)<br/>StorageDead(_683)<br/>_678 = move _679<br/>StorageDead(_679)<br/>_677 = &amp;_678<br/>_676 = &amp;(*_677)<br/></td></tr><tr><td align="left">_675 = &lt;String as Deref&gt;::deref(move _676)</td></tr></table>>];
    bb264__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">_674 = &amp;(*_675)<br/>StorageDead(_676)<br/></td></tr><tr><td align="left">_673 = solana_program::log::sol_log(move _674)</td></tr></table>>];
    bb265__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_674)<br/></td></tr><tr><td align="left">drop(_678)</td></tr></table>>];
    bb266__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_678)<br/>StorageDead(_677)<br/>StorageDead(_675)<br/>StorageDead(_673)<br/>StorageLive(_692)<br/>StorageLive(_693)<br/>StorageLive(_694)<br/>_694 = const &quot;User did not have a borrow for the liability market index&quot;<br/>_693 = &amp;(*_694)<br/></td></tr><tr><td align="left">_692 = solana_program::log::sol_log(move _693)</td></tr></table>>];
    bb267__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_693)<br/>StorageDead(_694)<br/>StorageDead(_692)<br/>StorageLive(_695)<br/>_695 = _672<br/>_666 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _695)<br/>StorageDead(_695)<br/>StorageDead(_672)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_667)<br/></td></tr><tr><td align="left">_665 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _666)</td></tr></table>>];
    bb269__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_666)<br/>_696 = discriminant(_665)<br/></td></tr><tr><td align="left">switchInt(move _696)</td></tr></table>>];
    bb270__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageLive(_700)<br/>_700 = ((_665 as Continue).0: ())<br/>_664 = _700<br/>StorageDead(_700)<br/>StorageDead(_665)<br/>StorageDead(_664)<br/>StorageLive(_701)<br/>StorageLive(_702)<br/>StorageLive(_703)<br/>StorageLive(_704)<br/>_704 = &amp;(*_654)<br/>StorageLive(_705)<br/>StorageLive(_706)<br/>StorageLive(_707)<br/>StorageLive(_708)<br/>_708 = &amp;_609<br/>_707 = &amp;(*_708)<br/></td></tr><tr><td align="left">_706 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _707)</td></tr></table>>];
    bb271__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageLive(_697)<br/>_697 = ((_665 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_699)<br/>_699 = _697<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _699)</td></tr></table>>];
    bb272__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_699)<br/>StorageDead(_697)<br/>StorageDead(_665)<br/>StorageDead(_664)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb273__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">_705 = &amp;(*_706)<br/>StorageDead(_707)<br/></td></tr><tr><td align="left">_703 = SpotPosition::get_token_amount(move _704, move _705)</td></tr></table>>];
    bb274__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_705)<br/>StorageDead(_704)<br/></td></tr><tr><td align="left">_702 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _703)</td></tr></table>>];
    bb275__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_703)<br/>_709 = discriminant(_702)<br/></td></tr><tr><td align="left">switchInt(move _709)</td></tr></table>>];
    bb276__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageLive(_713)<br/>_713 = ((_702 as Continue).0: u128)<br/>_701 = _713<br/>StorageDead(_713)<br/>StorageDead(_708)<br/>StorageDead(_706)<br/>StorageDead(_702)<br/>StorageLive(_714)<br/>StorageLive(_715)<br/>StorageLive(_716)<br/>StorageLive(_717)<br/>StorageLive(_718)<br/>_718 = _701<br/>_717 = Ne(move _718, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _717)</td></tr></table>>];
    bb277__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageLive(_710)<br/>_710 = ((_702 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_712)<br/>_712 = _710<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _712)</td></tr></table>>];
    bb278__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_712)<br/>StorageDead(_710)<br/>StorageDead(_708)<br/>StorageDead(_706)<br/>StorageDead(_702)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_718)<br/>StorageLive(_719)<br/>_719 = ()<br/>_716 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _719)<br/>StorageDead(_719)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_718)<br/>StorageLive(_720)<br/>_720 = error::ErrorCode::InvalidSpotPosition<br/>StorageLive(_721)<br/>StorageLive(_722)<br/>StorageLive(_723)<br/>StorageLive(_724)<br/>StorageLive(_725)<br/>StorageLive(_726)<br/>StorageLive(_727)<br/>StorageLive(_728)<br/>StorageLive(_729)<br/>StorageLive(_730)<br/>StorageLive(_731)<br/>_1850 = const _<br/>_731 = &amp;(*_1850)<br/>_730 = &amp;(*_731)<br/>_729 = move _730 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_730)<br/>StorageLive(_733)<br/>StorageLive(_734)<br/>StorageLive(_735)<br/>StorageLive(_736)<br/>StorageLive(_737)<br/>StorageLive(_738)<br/>StorageLive(_739)<br/>_739 = &amp;_720<br/>_738 = &amp;(*_739)<br/></td></tr><tr><td align="left">_737 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _738)</td></tr></table>>];
    bb281__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_738)<br/>_736 = [move _737]<br/>StorageDead(_737)<br/>_735 = &amp;_736<br/>_734 = &amp;(*_735)<br/>_733 = move _734 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_734)<br/></td></tr><tr><td align="left">_728 = Arguments::&lt;'_&gt;::new_v1(move _729, move _733)</td></tr></table>>];
    bb282__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_733)<br/>StorageDead(_729)<br/></td></tr><tr><td align="left">_727 = format(move _728)</td></tr></table>>];
    bb283__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left" balign="left">StorageDead(_728)<br/>StorageDead(_739)<br/>StorageDead(_736)<br/>StorageDead(_735)<br/>StorageDead(_731)<br/>_726 = move _727<br/>StorageDead(_727)<br/>_725 = &amp;_726<br/>_724 = &amp;(*_725)<br/></td></tr><tr><td align="left">_723 = &lt;String as Deref&gt;::deref(move _724)</td></tr></table>>];
    bb284__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">284</td></tr><tr><td align="left" balign="left">_722 = &amp;(*_723)<br/>StorageDead(_724)<br/></td></tr><tr><td align="left">_721 = solana_program::log::sol_log(move _722)</td></tr></table>>];
    bb285__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">285</td></tr><tr><td align="left" balign="left">StorageDead(_722)<br/></td></tr><tr><td align="left">drop(_726)</td></tr></table>>];
    bb286__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">286</td></tr><tr><td align="left" balign="left">StorageDead(_726)<br/>StorageDead(_725)<br/>StorageDead(_723)<br/>StorageDead(_721)<br/>StorageLive(_740)<br/>StorageLive(_741)<br/>StorageLive(_742)<br/>StorageLive(_743)<br/>StorageLive(_744)<br/>StorageLive(_745)<br/>StorageLive(_746)<br/>StorageLive(_747)<br/>StorageLive(_748)<br/>StorageLive(_749)<br/>StorageLive(_750)<br/>_1849 = const _<br/>_750 = &amp;(*_1849)<br/>_749 = &amp;(*_750)<br/>_748 = move _749 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_749)<br/>StorageLive(_752)<br/>StorageLive(_753)<br/>StorageLive(_754)<br/>StorageLive(_755)<br/>StorageLive(_756)<br/>StorageLive(_757)<br/>StorageLive(_758)<br/>_758 = &amp;_2<br/>_757 = &amp;(*_758)<br/></td></tr><tr><td align="left">_756 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _757)</td></tr></table>>];
    bb287__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">287</td></tr><tr><td align="left" balign="left">StorageDead(_757)<br/>_755 = [move _756]<br/>StorageDead(_756)<br/>_754 = &amp;_755<br/>_753 = &amp;(*_754)<br/>_752 = move _753 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_753)<br/></td></tr><tr><td align="left">_747 = Arguments::&lt;'_&gt;::new_v1(move _748, move _752)</td></tr></table>>];
    bb288__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">288</td></tr><tr><td align="left" balign="left">StorageDead(_752)<br/>StorageDead(_748)<br/></td></tr><tr><td align="left">_746 = format(move _747)</td></tr></table>>];
    bb289__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">289</td></tr><tr><td align="left" balign="left">StorageDead(_747)<br/>StorageDead(_758)<br/>StorageDead(_755)<br/>StorageDead(_754)<br/>StorageDead(_750)<br/>_745 = move _746<br/>StorageDead(_746)<br/>_744 = &amp;_745<br/>_743 = &amp;(*_744)<br/></td></tr><tr><td align="left">_742 = &lt;String as Deref&gt;::deref(move _743)</td></tr></table>>];
    bb290__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">290</td></tr><tr><td align="left" balign="left">_741 = &amp;(*_742)<br/>StorageDead(_743)<br/></td></tr><tr><td align="left">_740 = solana_program::log::sol_log(move _741)</td></tr></table>>];
    bb291__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">291</td></tr><tr><td align="left" balign="left">StorageDead(_741)<br/></td></tr><tr><td align="left">drop(_745)</td></tr></table>>];
    bb292__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">292</td></tr><tr><td align="left" balign="left">StorageDead(_745)<br/>StorageDead(_744)<br/>StorageDead(_742)<br/>StorageDead(_740)<br/>StorageLive(_759)<br/>_759 = _720<br/>_716 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _759)<br/>StorageDead(_759)<br/>StorageDead(_720)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb293__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">293</td></tr><tr><td align="left" balign="left">StorageDead(_717)<br/></td></tr><tr><td align="left">_715 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _716)</td></tr></table>>];
    bb294__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">294</td></tr><tr><td align="left" balign="left">StorageDead(_716)<br/>_760 = discriminant(_715)<br/></td></tr><tr><td align="left">switchInt(move _760)</td></tr></table>>];
    bb295__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">295</td></tr><tr><td align="left" balign="left">StorageLive(_764)<br/>_764 = ((_715 as Continue).0: ())<br/>_714 = _764<br/>StorageDead(_764)<br/>StorageDead(_715)<br/>StorageDead(_714)<br/>StorageLive(_765)<br/>_765 = ((*_620).0: i64)<br/>StorageLive(_766)<br/>_766 = _701<br/>StorageLive(_767)<br/>_767 = _765<br/>StorageLive(_768)<br/>StorageLive(_769)<br/>StorageLive(_770)<br/>_770 = &amp;_609<br/></td></tr><tr><td align="left">_769 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _770)</td></tr></table>>];
    bb296__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">296</td></tr><tr><td align="left" balign="left">StorageLive(_761)<br/>_761 = ((_715 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_763)<br/>_763 = _761<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _763)</td></tr></table>>];
    bb297__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">297</td></tr><tr><td align="left" balign="left">StorageDead(_763)<br/>StorageDead(_761)<br/>StorageDead(_715)<br/>StorageDead(_714)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb298__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">298</td></tr><tr><td align="left" balign="left">StorageDead(_770)<br/>_768 = ((*_769).41: u32)<br/>StorageLive(_771)<br/>StorageLive(_772)<br/>StorageLive(_773)<br/>_773 = &amp;_609<br/></td></tr><tr><td align="left">_772 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _773)</td></tr></table>>];
    bb299__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">299</td></tr><tr><td align="left" balign="left">StorageDead(_773)<br/>_771 = ((*_772).34: u32)<br/>StorageLive(_774)<br/>StorageLive(_775)<br/>StorageLive(_776)<br/>StorageLive(_777)<br/>StorageLive(_778)<br/>StorageLive(_779)<br/>_779 = &amp;_609<br/></td></tr><tr><td align="left">_778 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _779)</td></tr></table>>];
    bb300__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">300</td></tr><tr><td align="left" balign="left">StorageDead(_779)<br/>_777 = ((*_778).36: u32)<br/>StorageLive(_780)<br/>_780 = LiquidationMultiplierType::Discount<br/></td></tr><tr><td align="left">_776 = calculate_liquidation_multiplier(move _777, move _780)</td></tr></table>>];
    bb301__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">301</td></tr><tr><td align="left" balign="left">StorageDead(_780)<br/>StorageDead(_777)<br/></td></tr><tr><td align="left">_775 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _776)</td></tr></table>>];
    bb302__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">302</td></tr><tr><td align="left" balign="left">StorageDead(_776)<br/>_781 = discriminant(_775)<br/></td></tr><tr><td align="left">switchInt(move _781)</td></tr></table>>];
    bb303__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">303</td></tr><tr><td align="left" balign="left">StorageLive(_785)<br/>_785 = ((_775 as Continue).0: u32)<br/>_774 = _785<br/>StorageDead(_785)<br/>StorageLive(_786)<br/>StorageLive(_787)<br/>StorageLive(_788)<br/>_788 = &amp;_609<br/></td></tr><tr><td align="left">_787 = &lt;RefMut&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _788)</td></tr></table>>];
    bb304__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">304</td></tr><tr><td align="left" balign="left">StorageLive(_782)<br/>_782 = ((_775 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_784)<br/>_784 = _782<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _784)</td></tr></table>>];
    bb305__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">305</td></tr><tr><td align="left" balign="left">StorageDead(_784)<br/>StorageDead(_782)<br/>StorageDead(_774)<br/>StorageDead(_771)<br/>StorageDead(_768)<br/>StorageDead(_767)<br/>StorageDead(_766)<br/>StorageDead(_765)<br/>StorageDead(_701)<br/>StorageDead(_654)<br/>StorageDead(_621)<br/>StorageDead(_620)<br/></td></tr><tr><td align="left">drop(_609)</td></tr></table>>];
    bb306__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">306</td></tr><tr><td align="left" balign="left">StorageDead(_788)<br/>_786 = ((*_787).62: u8)<br/>StorageLive(_789)<br/>_789 = ((*_620).2: i64)<br/>_608 = (move _766, move _767, move _768, move _771, move _774, move _786, move _789)<br/>StorageDead(_789)<br/>StorageDead(_786)<br/>StorageDead(_774)<br/>StorageDead(_771)<br/>StorageDead(_768)<br/>StorageDead(_767)<br/>StorageDead(_766)<br/>StorageDead(_765)<br/>StorageDead(_701)<br/>StorageDead(_654)<br/>StorageDead(_621)<br/>StorageDead(_620)<br/></td></tr><tr><td align="left">drop(_609)</td></tr></table>>];
    bb307__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">307</td></tr><tr><td align="left" balign="left">StorageDead(_609)<br/>StorageLive(_601)<br/>_601 = (_608.0: u128)<br/>StorageLive(_602)<br/>_602 = (_608.1: i64)<br/>StorageLive(_603)<br/>_603 = (_608.2: u32)<br/>StorageLive(_604)<br/>_604 = (_608.3: u32)<br/>StorageLive(_605)<br/>_605 = (_608.4: u32)<br/>StorageLive(_606)<br/>_606 = (_608.5: u8)<br/>StorageLive(_607)<br/>_607 = (_608.6: i64)<br/>StorageDead(_787)<br/>StorageDead(_778)<br/>StorageDead(_775)<br/>StorageDead(_772)<br/>StorageDead(_769)<br/>StorageDead(_608)<br/>StorageLive(_790)<br/>StorageLive(_791)<br/>StorageLive(_792)<br/>_792 = _417<br/>_791 = Eq(move _792, const _)<br/></td></tr><tr><td align="left">switchInt(move _791)</td></tr></table>>];
    bb308__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">308</td></tr><tr><td align="left" balign="left">StorageDead(_792)<br/>StorageLive(_793)<br/>StorageLive(_794)<br/>_794 = _606<br/>_793 = Eq(move _794, const _)<br/></td></tr><tr><td align="left">switchInt(move _793)</td></tr></table>>];
    bb309__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">309</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/>StorageLive(_795)<br/>StorageLive(_796)<br/>StorageLive(_797)<br/>StorageLive(_798)<br/>StorageLive(_799)<br/>_799 = _418<br/>_798 = Eq(move _799, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _798)</td></tr></table>>];
    bb310__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">310</td></tr><tr><td align="left" balign="left">StorageDead(_799)<br/>StorageLive(_800)<br/>StorageLive(_801)<br/>_801 = _607<br/>_800 = Eq(move _801, const 0_i64)<br/></td></tr><tr><td align="left">switchInt(move _800)</td></tr></table>>];
    bb311__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">311</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/>StorageLive(_802)<br/>_802 = ()<br/>_797 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _802)<br/>StorageDead(_802)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">312</td></tr><tr><td align="left" balign="left">StorageDead(_801)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">313</td></tr><tr><td align="left" balign="left">StorageDead(_799)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">314</td></tr><tr><td align="left" balign="left">StorageLive(_803)<br/>_803 = error::ErrorCode::InvalidLiquidation<br/>StorageLive(_804)<br/>StorageLive(_805)<br/>StorageLive(_806)<br/>StorageLive(_807)<br/>StorageLive(_808)<br/>StorageLive(_809)<br/>StorageLive(_810)<br/>StorageLive(_811)<br/>StorageLive(_812)<br/>StorageLive(_813)<br/>StorageLive(_814)<br/>_1848 = const _<br/>_814 = &amp;(*_1848)<br/>_813 = &amp;(*_814)<br/>_812 = move _813 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_813)<br/>StorageLive(_816)<br/>StorageLive(_817)<br/>StorageLive(_818)<br/>StorageLive(_819)<br/>StorageLive(_820)<br/>StorageLive(_821)<br/>StorageLive(_822)<br/>_822 = &amp;_803<br/>_821 = &amp;(*_822)<br/></td></tr><tr><td align="left">_820 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _821)</td></tr></table>>];
    bb315__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">315</td></tr><tr><td align="left" balign="left">StorageDead(_821)<br/>_819 = [move _820]<br/>StorageDead(_820)<br/>_818 = &amp;_819<br/>_817 = &amp;(*_818)<br/>_816 = move _817 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_817)<br/></td></tr><tr><td align="left">_811 = Arguments::&lt;'_&gt;::new_v1(move _812, move _816)</td></tr></table>>];
    bb316__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">316</td></tr><tr><td align="left" balign="left">StorageDead(_816)<br/>StorageDead(_812)<br/></td></tr><tr><td align="left">_810 = format(move _811)</td></tr></table>>];
    bb317__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">317</td></tr><tr><td align="left" balign="left">StorageDead(_811)<br/>StorageDead(_822)<br/>StorageDead(_819)<br/>StorageDead(_818)<br/>StorageDead(_814)<br/>_809 = move _810<br/>StorageDead(_810)<br/>_808 = &amp;_809<br/>_807 = &amp;(*_808)<br/></td></tr><tr><td align="left">_806 = &lt;String as Deref&gt;::deref(move _807)</td></tr></table>>];
    bb318__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">318</td></tr><tr><td align="left" balign="left">_805 = &amp;(*_806)<br/>StorageDead(_807)<br/></td></tr><tr><td align="left">_804 = solana_program::log::sol_log(move _805)</td></tr></table>>];
    bb319__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">319</td></tr><tr><td align="left" balign="left">StorageDead(_805)<br/></td></tr><tr><td align="left">drop(_809)</td></tr></table>>];
    bb320__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">320</td></tr><tr><td align="left" balign="left">StorageDead(_809)<br/>StorageDead(_808)<br/>StorageDead(_806)<br/>StorageDead(_804)<br/>StorageLive(_823)<br/>StorageLive(_824)<br/>StorageLive(_825)<br/>StorageLive(_826)<br/>StorageLive(_827)<br/>StorageLive(_828)<br/>StorageLive(_829)<br/>StorageLive(_830)<br/>StorageLive(_831)<br/>StorageLive(_832)<br/>StorageLive(_833)<br/>_1847 = const _<br/>_833 = &amp;(*_1847)<br/>_832 = &amp;(*_833)<br/>_831 = move _832 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_832)<br/>StorageLive(_835)<br/>StorageLive(_836)<br/>StorageLive(_837)<br/>StorageLive(_838)<br/>StorageLive(_839)<br/>StorageLive(_840)<br/>StorageLive(_841)<br/>_841 = &amp;_418<br/>_840 = &amp;(*_841)<br/></td></tr><tr><td align="left">_839 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _840)</td></tr></table>>];
    bb321__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">321</td></tr><tr><td align="left" balign="left">StorageDead(_840)<br/>StorageLive(_842)<br/>StorageLive(_843)<br/>StorageLive(_844)<br/>_844 = &amp;_607<br/>_843 = &amp;(*_844)<br/></td></tr><tr><td align="left">_842 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i64&gt;(move _843)</td></tr></table>>];
    bb322__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">322</td></tr><tr><td align="left" balign="left">StorageDead(_843)<br/>_838 = [move _839, move _842]<br/>StorageDead(_842)<br/>StorageDead(_839)<br/>_837 = &amp;_838<br/>_836 = &amp;(*_837)<br/>_835 = move _836 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_836)<br/></td></tr><tr><td align="left">_830 = Arguments::&lt;'_&gt;::new_v1(move _831, move _835)</td></tr></table>>];
    bb323__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">323</td></tr><tr><td align="left" balign="left">StorageDead(_835)<br/>StorageDead(_831)<br/></td></tr><tr><td align="left">_829 = format(move _830)</td></tr></table>>];
    bb324__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">324</td></tr><tr><td align="left" balign="left">StorageDead(_830)<br/>StorageDead(_844)<br/>StorageDead(_841)<br/>StorageDead(_838)<br/>StorageDead(_837)<br/>StorageDead(_833)<br/>_828 = move _829<br/>StorageDead(_829)<br/>_827 = &amp;_828<br/>_826 = &amp;(*_827)<br/></td></tr><tr><td align="left">_825 = &lt;String as Deref&gt;::deref(move _826)</td></tr></table>>];
    bb325__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">325</td></tr><tr><td align="left" balign="left">_824 = &amp;(*_825)<br/>StorageDead(_826)<br/></td></tr><tr><td align="left">_823 = solana_program::log::sol_log(move _824)</td></tr></table>>];
    bb326__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">326</td></tr><tr><td align="left" balign="left">StorageDead(_824)<br/></td></tr><tr><td align="left">drop(_828)</td></tr></table>>];
    bb327__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">327</td></tr><tr><td align="left" balign="left">StorageDead(_828)<br/>StorageDead(_827)<br/>StorageDead(_825)<br/>StorageDead(_823)<br/>StorageLive(_845)<br/>_845 = _803<br/>_797 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _845)<br/>StorageDead(_845)<br/>StorageDead(_803)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb328__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">328</td></tr><tr><td align="left" balign="left">StorageDead(_800)<br/>StorageDead(_798)<br/></td></tr><tr><td align="left">_796 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _797)</td></tr></table>>];
    bb329__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">329</td></tr><tr><td align="left" balign="left">StorageDead(_797)<br/>_846 = discriminant(_796)<br/></td></tr><tr><td align="left">switchInt(move _846)</td></tr></table>>];
    bb330__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">330</td></tr><tr><td align="left" balign="left">StorageLive(_850)<br/>_850 = ((_796 as Continue).0: ())<br/>_795 = _850<br/>StorageDead(_850)<br/>StorageDead(_796)<br/>StorageDead(_795)<br/>_790 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb331__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">331</td></tr><tr><td align="left" balign="left">StorageLive(_847)<br/>_847 = ((_796 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_849)<br/>_849 = _847<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _849)</td></tr></table>>];
    bb332__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">332</td></tr><tr><td align="left" balign="left">StorageDead(_849)<br/>StorageDead(_847)<br/>StorageDead(_796)<br/>StorageDead(_795)<br/>StorageDead(_793)<br/>StorageDead(_791)<br/>StorageDead(_790)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb333__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">333</td></tr><tr><td align="left" balign="left">StorageDead(_794)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb334__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">334</td></tr><tr><td align="left" balign="left">StorageDead(_792)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb335__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">335</td></tr><tr><td align="left" balign="left">_790 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb336__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">336</td></tr><tr><td align="left" balign="left">StorageDead(_793)<br/>StorageDead(_791)<br/>StorageDead(_790)<br/>StorageLive(_851)<br/>StorageLive(_852)<br/>StorageLive(_853)<br/>StorageLive(_854)<br/>StorageLive(_855)<br/>StorageLive(_856)<br/>_856 = _17<br/></td></tr><tr><td align="left">_855 = MarginContext::liquidation(move _856)</td></tr></table>>];
    bb337__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">337</td></tr><tr><td align="left" balign="left">StorageDead(_856)<br/>StorageLive(_857)<br/>StorageLive(_858)<br/>_858 = _2<br/></td></tr><tr><td align="left">_857 = MarketIdentifier::spot(move _858)</td></tr></table>>];
    bb338__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">338</td></tr><tr><td align="left" balign="left">StorageDead(_858)<br/></td></tr><tr><td align="left">_854 = MarginContext::track_market_margin_requirement(move _855, move _857)</td></tr></table>>];
    bb339__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">339</td></tr><tr><td align="left" balign="left">StorageDead(_857)<br/>StorageDead(_855)<br/></td></tr><tr><td align="left">_853 = &lt;std::result::Result&lt;MarginContext, error::ErrorCode&gt; as Try&gt;::branch(move _854)</td></tr></table>>];
    bb340__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">340</td></tr><tr><td align="left" balign="left">StorageDead(_854)<br/>_859 = discriminant(_853)<br/></td></tr><tr><td align="left">switchInt(move _859)</td></tr></table>>];
    bb341__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">341</td></tr><tr><td align="left" balign="left">StorageLive(_863)<br/>_863 = ((_853 as Continue).0: state::margin_calculation::MarginContext)<br/>_852 = _863<br/>StorageDead(_863)<br/>StorageLive(_864)<br/>_864 = &amp;(*_5)<br/>StorageLive(_865)<br/>_865 = _14<br/></td></tr><tr><td align="left">_851 = MarginContext::fuel_numerator(move _852, move _864, move _865)</td></tr></table>>];
    bb342__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">342</td></tr><tr><td align="left" balign="left">StorageLive(_860)<br/>_860 = ((_853 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_862)<br/>_862 = _860<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _862)</td></tr></table>>];
    bb343__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">343</td></tr><tr><td align="left" balign="left">StorageDead(_862)<br/>StorageDead(_860)<br/>StorageDead(_852)<br/>StorageDead(_853)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb344__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">344</td></tr><tr><td align="left" balign="left">StorageDead(_865)<br/>StorageDead(_864)<br/>StorageDead(_852)<br/>StorageDead(_853)<br/>StorageLive(_866)<br/>StorageLive(_867)<br/>StorageLive(_868)<br/>StorageLive(_869)<br/>_869 = &amp;mut (*_5)<br/>StorageLive(_870)<br/>_870 = &amp;(*_11)<br/>StorageLive(_871)<br/>_871 = &amp;(*_12)<br/>StorageLive(_872)<br/>_872 = &amp;mut (*_13)<br/>StorageLive(_873)<br/>_873 = _851<br/>StorageLive(_874)<br/>_874 = &amp;mut (*_7)<br/>StorageLive(_875)<br/>_875 = _14<br/></td></tr><tr><td align="left">_868 = User::calculate_margin_and_increment_fuel_bonus(move _869, move _870, move _871, move _872, move _873, move _874, move _875)</td></tr></table>>];
    bb345__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">345</td></tr><tr><td align="left" balign="left">StorageDead(_875)<br/>StorageDead(_874)<br/>StorageDead(_873)<br/>StorageDead(_872)<br/>StorageDead(_871)<br/>StorageDead(_870)<br/>StorageDead(_869)<br/></td></tr><tr><td align="left">_867 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _868)</td></tr></table>>];
    bb346__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">346</td></tr><tr><td align="left" balign="left">StorageDead(_868)<br/>_876 = discriminant(_867)<br/></td></tr><tr><td align="left">switchInt(move _876)</td></tr></table>>];
    bb347__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">347</td></tr><tr><td align="left" balign="left">StorageLive(_880)<br/>_880 = ((_867 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_866 = _880<br/>StorageDead(_880)<br/>StorageDead(_867)<br/>StorageLive(_881)<br/>StorageLive(_882)<br/>StorageLive(_883)<br/>_883 = &amp;(*_5)<br/></td></tr><tr><td align="left">_882 = User::is_being_liquidated(move _883)</td></tr></table>>];
    bb348__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">348</td></tr><tr><td align="left" balign="left">StorageLive(_877)<br/>_877 = ((_867 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_879)<br/>_879 = _877<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _879)</td></tr></table>>];
    bb349__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">349</td></tr><tr><td align="left" balign="left">StorageDead(_879)<br/>StorageDead(_877)<br/>StorageDead(_867)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb350__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">350</td></tr><tr><td align="left">switchInt(move _882)</td></tr></table>>];
    bb351__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">351</td></tr><tr><td align="left" balign="left">StorageDead(_883)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb352__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">352</td></tr><tr><td align="left" balign="left">StorageDead(_883)<br/>StorageLive(_884)<br/>StorageLive(_885)<br/>_885 = &amp;_866<br/></td></tr><tr><td align="left">_884 = MarginCalculation::meets_margin_requirement(move _885)</td></tr></table>>];
    bb353__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">353</td></tr><tr><td align="left">switchInt(move _884)</td></tr></table>>];
    bb354__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">354</td></tr><tr><td align="left" balign="left">StorageDead(_885)<br/>StorageLive(_887)<br/>StorageLive(_888)<br/>StorageLive(_889)<br/>StorageLive(_890)<br/>StorageLive(_891)<br/>StorageLive(_892)<br/>StorageLive(_893)<br/>StorageLive(_894)<br/>StorageLive(_895)<br/>StorageLive(_896)<br/>StorageLive(_897)<br/>_1846 = const _<br/>_897 = &amp;(*_1846)<br/>_896 = &amp;(*_897)<br/>_895 = move _896 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_896)<br/>StorageLive(_899)<br/>StorageLive(_900)<br/>StorageLive(_901)<br/>StorageLive(_902)<br/>StorageLive(_903)<br/>StorageLive(_904)<br/>StorageLive(_905)<br/>_905 = &amp;_866<br/>_904 = &amp;(*_905)<br/></td></tr><tr><td align="left">_903 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;MarginCalculation&gt;(move _904)</td></tr></table>>];
    bb355__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">355</td></tr><tr><td align="left" balign="left">StorageDead(_904)<br/>_902 = [move _903]<br/>StorageDead(_903)<br/>_901 = &amp;_902<br/>_900 = &amp;(*_901)<br/>_899 = move _900 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_900)<br/></td></tr><tr><td align="left">_894 = Arguments::&lt;'_&gt;::new_v1(move _895, move _899)</td></tr></table>>];
    bb356__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">356</td></tr><tr><td align="left" balign="left">StorageDead(_899)<br/>StorageDead(_895)<br/></td></tr><tr><td align="left">_893 = format(move _894)</td></tr></table>>];
    bb357__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">357</td></tr><tr><td align="left" balign="left">StorageDead(_894)<br/>StorageDead(_905)<br/>StorageDead(_902)<br/>StorageDead(_901)<br/>StorageDead(_897)<br/>_892 = move _893<br/>StorageDead(_893)<br/>_891 = &amp;_892<br/>_890 = &amp;(*_891)<br/></td></tr><tr><td align="left">_889 = &lt;String as Deref&gt;::deref(move _890)</td></tr></table>>];
    bb358__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">358</td></tr><tr><td align="left" balign="left">_888 = &amp;(*_889)<br/>StorageDead(_890)<br/></td></tr><tr><td align="left">_887 = solana_program::log::sol_log(move _888)</td></tr></table>>];
    bb359__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">359</td></tr><tr><td align="left" balign="left">StorageDead(_888)<br/></td></tr><tr><td align="left">drop(_892)</td></tr></table>>];
    bb360__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">360</td></tr><tr><td align="left" balign="left">StorageDead(_892)<br/>StorageDead(_891)<br/>StorageDead(_889)<br/>StorageDead(_887)<br/>StorageLive(_906)<br/>_906 = error::ErrorCode::SufficientCollateral<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _906)<br/>StorageDead(_906)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb361__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">361</td></tr><tr><td align="left" balign="left">StorageDead(_885)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb362__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">362</td></tr><tr><td align="left" balign="left">StorageLive(_907)<br/>StorageLive(_908)<br/>_908 = &amp;(*_5)<br/></td></tr><tr><td align="left">_907 = User::is_being_liquidated(move _908)</td></tr></table>>];
    bb363__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">363</td></tr><tr><td align="left">switchInt(move _907)</td></tr></table>>];
    bb364__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">364</td></tr><tr><td align="left" balign="left">StorageDead(_908)<br/>StorageLive(_909)<br/>StorageLive(_910)<br/>StorageLive(_911)<br/>StorageLive(_912)<br/>_912 = &amp;_866<br/></td></tr><tr><td align="left">_911 = MarginCalculation::can_exit_liquidation(move _912)</td></tr></table>>];
    bb365__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">365</td></tr><tr><td align="left" balign="left">StorageDead(_912)<br/></td></tr><tr><td align="left">_910 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _911)</td></tr></table>>];
    bb366__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">366</td></tr><tr><td align="left" balign="left">StorageDead(_911)<br/>_913 = discriminant(_910)<br/></td></tr><tr><td align="left">switchInt(move _913)</td></tr></table>>];
    bb367__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">367</td></tr><tr><td align="left" balign="left">StorageLive(_917)<br/>_917 = ((_910 as Continue).0: bool)<br/>_909 = _917<br/>StorageDead(_917)<br/></td></tr><tr><td align="left">switchInt(move _909)</td></tr></table>>];
    bb368__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">368</td></tr><tr><td align="left" balign="left">StorageLive(_914)<br/>_914 = ((_910 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_916)<br/>_916 = _914<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _916)</td></tr></table>>];
    bb369__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">369</td></tr><tr><td align="left" balign="left">StorageDead(_916)<br/>StorageDead(_914)<br/>StorageDead(_910)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb370__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">370</td></tr><tr><td align="left" balign="left">StorageDead(_910)<br/>StorageLive(_919)<br/>StorageLive(_920)<br/>_920 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_919 = User::exit_liquidation(move _920)</td></tr></table>>];
    bb371__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">371</td></tr><tr><td align="left" balign="left">StorageDead(_910)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb372__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">372</td></tr><tr><td align="left" balign="left">StorageDead(_920)<br/>StorageDead(_919)<br/>StorageLive(_921)<br/>_921 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _921)<br/>StorageDead(_921)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb373__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">373</td></tr><tr><td align="left" balign="left">StorageDead(_908)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb374__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">374</td></tr><tr><td align="left" balign="left">_881 = const ()<br/>StorageDead(_909)<br/>StorageDead(_907)<br/>StorageDead(_884)<br/>StorageDead(_882)<br/>StorageDead(_881)<br/>StorageLive(_922)<br/>StorageLive(_923)<br/>StorageLive(_924)<br/>StorageLive(_925)<br/>_925 = &amp;mut (*_5)<br/>StorageLive(_926)<br/>_926 = _15<br/></td></tr><tr><td align="left">_924 = User::enter_liquidation(move _925, move _926)</td></tr></table>>];
    bb375__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">375</td></tr><tr><td align="left" balign="left">StorageDead(_926)<br/>StorageDead(_925)<br/></td></tr><tr><td align="left">_923 = &lt;std::result::Result&lt;u16, error::ErrorCode&gt; as Try&gt;::branch(move _924)</td></tr></table>>];
    bb376__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">376</td></tr><tr><td align="left" balign="left">StorageDead(_924)<br/>_927 = discriminant(_923)<br/></td></tr><tr><td align="left">switchInt(move _927)</td></tr></table>>];
    bb377__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">377</td></tr><tr><td align="left" balign="left">StorageLive(_931)<br/>_931 = ((_923 as Continue).0: u16)<br/>_922 = _931<br/>StorageDead(_931)<br/>StorageDead(_923)<br/>StorageLive(_932)<br/>_932 = const 0_u64<br/>StorageLive(_933)<br/>StorageLive(_934)<br/>StorageLive(_935)<br/>StorageLive(_936)<br/>_936 = &amp;mut (*_5)<br/>StorageLive(_937)<br/>_937 = &amp;(*_6)<br/>StorageLive(_938)<br/>StorageLive(_939)<br/>_939 = &amp;(*_9)<br/>_938 = Option::&lt;&amp;anchor_lang::prelude::Pubkey&gt;::Some(move _939)<br/>StorageDead(_939)<br/>StorageLive(_940)<br/>_940 = &amp;(*_11)<br/>StorageLive(_941)<br/>_941 = &amp;(*_12)<br/>StorageLive(_942)<br/>_942 = &amp;mut (*_13)<br/>StorageLive(_943)<br/>_943 = _14<br/>StorageLive(_944)<br/>_944 = _15<br/>StorageLive(_945)<br/>_945 = OrderActionExplanation::Liquidation<br/>StorageLive(_946)<br/>_946 = Option::&lt;state::user::MarketType&gt;::None<br/>StorageLive(_947)<br/>_947 = Option::&lt;u16&gt;::None<br/>StorageLive(_948)<br/>_948 = Option::&lt;controller::position::PositionDirection&gt;::None<br/></td></tr><tr><td align="left">_935 = controller::orders::cancel_orders(move _936, move _937, move _938, move _940, move _941, move _942, move _943, move _944, move _945, move _946, move _947, move _948)</td></tr></table>>];
    bb378__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">378</td></tr><tr><td align="left" balign="left">StorageLive(_928)<br/>_928 = ((_923 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_930)<br/>_930 = _928<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _930)</td></tr></table>>];
    bb379__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">379</td></tr><tr><td align="left" balign="left">StorageDead(_930)<br/>StorageDead(_928)<br/>StorageDead(_923)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb380__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">380</td></tr><tr><td align="left" balign="left">StorageDead(_948)<br/>StorageDead(_947)<br/>StorageDead(_946)<br/>StorageDead(_945)<br/>StorageDead(_944)<br/>StorageDead(_943)<br/>StorageDead(_942)<br/>StorageDead(_941)<br/>StorageDead(_940)<br/>StorageDead(_938)<br/>StorageDead(_937)<br/>StorageDead(_936)<br/></td></tr><tr><td align="left">_934 = &lt;std::result::Result&lt;Vec&lt;u32&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _935)</td></tr></table>>];
    bb381__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">381</td></tr><tr><td align="left" balign="left">StorageDead(_935)<br/>_949 = discriminant(_934)<br/></td></tr><tr><td align="left">switchInt(move _949)</td></tr></table>>];
    bb382__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">382</td></tr><tr><td align="left" balign="left">StorageLive(_953)<br/>_953 = move ((_934 as Continue).0: std::vec::Vec&lt;u32&gt;)<br/>_1872 = const true<br/>_933 = move _953<br/>StorageDead(_953)<br/>_1893 = discriminant(_934)<br/>StorageDead(_934)<br/>StorageLive(_954)<br/>StorageLive(_955)<br/>StorageLive(_956)<br/>_956 = &amp;_933<br/></td></tr><tr><td align="left">_955 = Vec::&lt;u32&gt;::is_empty(move _956)</td></tr></table>>];
    bb383__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">383</td></tr><tr><td align="left" balign="left">StorageLive(_950)<br/>_950 = ((_934 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_952)<br/>_952 = _950<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _952)</td></tr></table>>];
    bb384__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">384</td></tr><tr><td align="left" balign="left">StorageDead(_952)<br/>StorageDead(_950)<br/>_1891 = discriminant(_934)<br/>StorageDead(_934)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb385__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">385</td></tr><tr><td align="left">switchInt(move _955)</td></tr></table>>];
    bb386__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">386</td></tr><tr><td align="left" balign="left">StorageDead(_956)<br/>_954 = _866<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb387__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">387</td></tr><tr><td align="left" balign="left">StorageDead(_956)<br/>StorageLive(_957)<br/>StorageLive(_958)<br/>StorageLive(_959)<br/>StorageLive(_960)<br/>_960 = &amp;(*_5)<br/>StorageLive(_961)<br/>_961 = &amp;(*_11)<br/>StorageLive(_962)<br/>_962 = &amp;(*_12)<br/>StorageLive(_963)<br/>_963 = &amp;mut (*_13)<br/>StorageLive(_964)<br/>StorageLive(_965)<br/>StorageLive(_966)<br/>StorageLive(_967)<br/>StorageLive(_968)<br/>StorageLive(_969)<br/>_969 = _17<br/></td></tr><tr><td align="left">_968 = MarginContext::liquidation(move _969)</td></tr></table>>];
    bb388__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">388</td></tr><tr><td align="left" balign="left">StorageDead(_969)<br/>StorageLive(_970)<br/>StorageLive(_971)<br/>_971 = _2<br/></td></tr><tr><td align="left">_970 = MarketIdentifier::spot(move _971)</td></tr></table>>];
    bb389__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">389</td></tr><tr><td align="left" balign="left">StorageDead(_971)<br/></td></tr><tr><td align="left">_967 = MarginContext::track_market_margin_requirement(move _968, move _970)</td></tr></table>>];
    bb390__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">390</td></tr><tr><td align="left" balign="left">StorageDead(_970)<br/>StorageDead(_968)<br/></td></tr><tr><td align="left">_966 = &lt;std::result::Result&lt;MarginContext, error::ErrorCode&gt; as Try&gt;::branch(move _967)</td></tr></table>>];
    bb391__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">391</td></tr><tr><td align="left" balign="left">StorageDead(_967)<br/>_972 = discriminant(_966)<br/></td></tr><tr><td align="left">switchInt(move _972)</td></tr></table>>];
    bb392__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">392</td></tr><tr><td align="left" balign="left">StorageLive(_976)<br/>_976 = ((_966 as Continue).0: state::margin_calculation::MarginContext)<br/>_965 = _976<br/>StorageDead(_976)<br/>StorageLive(_977)<br/>_977 = &amp;(*_5)<br/>StorageLive(_978)<br/>_978 = _14<br/></td></tr><tr><td align="left">_964 = MarginContext::fuel_numerator(move _965, move _977, move _978)</td></tr></table>>];
    bb393__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">393</td></tr><tr><td align="left" balign="left">StorageLive(_973)<br/>_973 = ((_966 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_975)<br/>_975 = _973<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _975)</td></tr></table>>];
    bb394__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">394</td></tr><tr><td align="left" balign="left">StorageDead(_975)<br/>StorageDead(_973)<br/>StorageDead(_965)<br/>StorageDead(_964)<br/>StorageDead(_963)<br/>StorageDead(_962)<br/>StorageDead(_961)<br/>StorageDead(_960)<br/>StorageDead(_959)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb395__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">395</td></tr><tr><td align="left" balign="left">StorageDead(_978)<br/>StorageDead(_977)<br/>StorageDead(_965)<br/></td></tr><tr><td align="left">_959 = math::margin::calculate_margin_requirement_and_total_collateral_and_liability_info(move _960, move _961, move _962, move _963, move _964)</td></tr></table>>];
    bb396__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">396</td></tr><tr><td align="left" balign="left">StorageDead(_964)<br/>StorageDead(_963)<br/>StorageDead(_962)<br/>StorageDead(_961)<br/>StorageDead(_960)<br/></td></tr><tr><td align="left">_958 = &lt;std::result::Result&lt;MarginCalculation, error::ErrorCode&gt; as Try&gt;::branch(move _959)</td></tr></table>>];
    bb397__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">397</td></tr><tr><td align="left" balign="left">StorageDead(_959)<br/>_979 = discriminant(_958)<br/></td></tr><tr><td align="left">switchInt(move _979)</td></tr></table>>];
    bb398__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">398</td></tr><tr><td align="left" balign="left">StorageLive(_983)<br/>_983 = ((_958 as Continue).0: state::margin_calculation::MarginCalculation)<br/>_957 = _983<br/>StorageDead(_983)<br/>StorageDead(_966)<br/>StorageDead(_958)<br/>StorageLive(_984)<br/>StorageLive(_985)<br/>StorageLive(_986)<br/>StorageLive(_987)<br/>_987 = &amp;_866<br/></td></tr><tr><td align="left">_986 = MarginCalculation::margin_shortage(move _987)</td></tr></table>>];
    bb399__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">399</td></tr><tr><td align="left" balign="left">StorageLive(_980)<br/>_980 = ((_958 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_982)<br/>_982 = _980<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _982)</td></tr></table>>];
    bb400__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">400</td></tr><tr><td align="left" balign="left">StorageDead(_982)<br/>StorageDead(_980)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb401__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">401</td></tr><tr><td align="left" balign="left">StorageDead(_987)<br/></td></tr><tr><td align="left">_985 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _986)</td></tr></table>>];
    bb402__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">402</td></tr><tr><td align="left" balign="left">StorageDead(_986)<br/>_988 = discriminant(_985)<br/></td></tr><tr><td align="left">switchInt(move _988)</td></tr></table>>];
    bb403__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">403</td></tr><tr><td align="left" balign="left">StorageLive(_992)<br/>_992 = ((_985 as Continue).0: u128)<br/>_984 = _992<br/>StorageDead(_992)<br/>StorageDead(_985)<br/>StorageLive(_993)<br/>StorageLive(_994)<br/>StorageLive(_995)<br/>StorageLive(_996)<br/>_996 = &amp;_957<br/></td></tr><tr><td align="left">_995 = MarginCalculation::margin_shortage(move _996)</td></tr></table>>];
    bb404__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">404</td></tr><tr><td align="left" balign="left">StorageLive(_989)<br/>_989 = ((_985 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_991)<br/>_991 = _989<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _991)</td></tr></table>>];
    bb405__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">405</td></tr><tr><td align="left" balign="left">StorageDead(_991)<br/>StorageDead(_989)<br/>StorageDead(_985)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb406__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">406</td></tr><tr><td align="left" balign="left">StorageDead(_996)<br/></td></tr><tr><td align="left">_994 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _995)</td></tr></table>>];
    bb407__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">407</td></tr><tr><td align="left" balign="left">StorageDead(_995)<br/>_997 = discriminant(_994)<br/></td></tr><tr><td align="left">switchInt(move _997)</td></tr></table>>];
    bb408__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">408</td></tr><tr><td align="left" balign="left">StorageLive(_1001)<br/>_1001 = ((_994 as Continue).0: u128)<br/>_993 = _1001<br/>StorageDead(_1001)<br/>StorageDead(_994)<br/>StorageLive(_1002)<br/>StorageLive(_1003)<br/>StorageLive(_1004)<br/>StorageLive(_1005)<br/>StorageLive(_1006)<br/>_1006 = _984<br/>StorageLive(_1007)<br/>_1007 = _993<br/></td></tr><tr><td align="left">_1005 = core::num::&lt;impl u128&gt;::saturating_sub(move _1006, move _1007)</td></tr></table>>];
    bb409__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">409</td></tr><tr><td align="left" balign="left">StorageLive(_998)<br/>_998 = ((_994 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1000)<br/>_1000 = _998<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1000)</td></tr></table>>];
    bb410__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">410</td></tr><tr><td align="left" balign="left">StorageDead(_1000)<br/>StorageDead(_998)<br/>StorageDead(_994)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb411__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">411</td></tr><tr><td align="left" balign="left">StorageDead(_1007)<br/>StorageDead(_1006)<br/></td></tr><tr><td align="left">_1004 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _1005)</td></tr></table>>];
    bb412__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">412</td></tr><tr><td align="left" balign="left">StorageDead(_1005)<br/></td></tr><tr><td align="left">_1003 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1004)</td></tr></table>>];
    bb413__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">413</td></tr><tr><td align="left" balign="left">StorageDead(_1004)<br/>_1008 = discriminant(_1003)<br/></td></tr><tr><td align="left">switchInt(move _1008)</td></tr></table>>];
    bb414__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">414</td></tr><tr><td align="left" balign="left">StorageLive(_1012)<br/>_1012 = ((_1003 as Continue).0: u64)<br/>_1002 = _1012<br/>StorageDead(_1012)<br/>_932 = move _1002<br/>StorageDead(_1002)<br/>StorageDead(_1003)<br/>StorageLive(_1013)<br/>StorageLive(_1014)<br/>StorageLive(_1015)<br/>StorageLive(_1016)<br/>_1016 = &amp;mut (*_5)<br/>StorageLive(_1017)<br/>_1017 = _932<br/></td></tr><tr><td align="left">_1015 = User::increment_margin_freed(move _1016, move _1017)</td></tr></table>>];
    bb415__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">415</td></tr><tr><td align="left" balign="left">StorageLive(_1009)<br/>_1009 = ((_1003 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1011)<br/>_1011 = _1009<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1011)</td></tr></table>>];
    bb416__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">416</td></tr><tr><td align="left" balign="left">StorageDead(_1011)<br/>StorageDead(_1009)<br/>StorageDead(_1002)<br/>StorageDead(_1003)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb417__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">417</td></tr><tr><td align="left" balign="left">StorageDead(_1017)<br/>StorageDead(_1016)<br/></td></tr><tr><td align="left">_1014 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1015)</td></tr></table>>];
    bb418__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">418</td></tr><tr><td align="left" balign="left">StorageDead(_1015)<br/>_1018 = discriminant(_1014)<br/></td></tr><tr><td align="left">switchInt(move _1018)</td></tr></table>>];
    bb419__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">419</td></tr><tr><td align="left" balign="left">StorageLive(_1022)<br/>_1022 = ((_1014 as Continue).0: ())<br/>_1013 = _1022<br/>StorageDead(_1022)<br/>StorageDead(_1014)<br/>StorageDead(_1013)<br/>StorageLive(_1023)<br/>StorageLive(_1024)<br/>StorageLive(_1025)<br/>StorageLive(_1026)<br/>StorageLive(_1027)<br/>_1027 = &amp;_957<br/></td></tr><tr><td align="left">_1026 = MarginCalculation::can_exit_liquidation(move _1027)</td></tr></table>>];
    bb420__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">420</td></tr><tr><td align="left" balign="left">StorageLive(_1019)<br/>_1019 = ((_1014 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1021)<br/>_1021 = _1019<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1021)</td></tr></table>>];
    bb421__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">421</td></tr><tr><td align="left" balign="left">StorageDead(_1021)<br/>StorageDead(_1019)<br/>StorageDead(_1014)<br/>StorageDead(_1013)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb422__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">422</td></tr><tr><td align="left" balign="left">StorageDead(_1027)<br/></td></tr><tr><td align="left">_1025 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1026)</td></tr></table>>];
    bb423__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">423</td></tr><tr><td align="left" balign="left">StorageDead(_1026)<br/>_1028 = discriminant(_1025)<br/></td></tr><tr><td align="left">switchInt(move _1028)</td></tr></table>>];
    bb424__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">424</td></tr><tr><td align="left" balign="left">StorageLive(_1032)<br/>_1032 = ((_1025 as Continue).0: bool)<br/>_1024 = _1032<br/>StorageDead(_1032)<br/></td></tr><tr><td align="left">switchInt(move _1024)</td></tr></table>>];
    bb425__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">425</td></tr><tr><td align="left" balign="left">StorageLive(_1029)<br/>_1029 = ((_1025 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1031)<br/>_1031 = _1029<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1031)</td></tr></table>>];
    bb426__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">426</td></tr><tr><td align="left" balign="left">StorageDead(_1031)<br/>StorageDead(_1029)<br/>StorageDead(_1025)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb427__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">427</td></tr><tr><td align="left" balign="left">StorageDead(_1025)<br/>StorageLive(_1034)<br/>StorageLive(_1035)<br/>StorageLive(_1036)<br/>StorageLive(_1037)<br/>StorageLive(_1038)<br/>StorageLive(_1039)<br/>StorageLive(_1040)<br/>StorageLive(_1041)<br/>StorageLive(_1042)<br/>StorageLive(_1043)<br/>StorageLive(_1044)<br/>StorageLive(_1045)<br/>StorageLive(_1046)<br/>StorageLive(_1047)<br/>StorageLive(_1048)<br/>_1048 = _14<br/>StorageLive(_1049)<br/>_1049 = _922<br/>StorageLive(_1050)<br/>_1050 = LiquidationType::LiquidateSpot<br/>StorageLive(_1051)<br/>_1051 = (*_6)<br/>StorageLive(_1052)<br/>_1052 = (*_9)<br/>StorageLive(_1053)<br/>_1053 = (_866.3: u128)<br/>StorageLive(_1054)<br/>_1054 = (_866.1: i128)<br/>StorageLive(_1055)<br/>StorageLive(_1056)<br/>_1056 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1055 = User::is_bankrupt(move _1056)</td></tr></table>>];
    bb428__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">428</td></tr><tr><td align="left" balign="left">StorageDead(_1025)<br/>_1023 = const ()<br/>StorageDead(_1024)<br/>StorageDead(_1023)<br/>_954 = _957<br/>StorageDead(_993)<br/>StorageDead(_984)<br/>StorageDead(_957)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb429__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">429</td></tr><tr><td align="left" balign="left">StorageDead(_1056)<br/>StorageLive(_1057)<br/>_1872 = const false<br/>_1057 = move _933<br/>StorageLive(_1058)<br/>_1058 = _932<br/>StorageLive(_1059)<br/>StorageLive(_1060)<br/>_1060 = _1<br/>StorageLive(_1061)<br/>_1061 = _413<br/>StorageLive(_1062)<br/>_1062 = _2<br/>StorageLive(_1063)<br/>_1063 = _602<br/>_1059 = LiquidateSpotRecord { asset_market_index: move _1060, asset_price: move _1061, asset_transfer: const 0_u128, liability_market_index: move _1062, liability_price: move _1063, liability_transfer: const 0_u128, if_fee: const 0_u64 }<br/>StorageDead(_1063)<br/>StorageDead(_1062)<br/>StorageDead(_1061)<br/>StorageDead(_1060)<br/>StorageLive(_1064)<br/></td></tr><tr><td align="left">_1064 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb430__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">430</td></tr><tr><td align="left" balign="left">_1047 = LiquidationRecord { ts: move _1048, liquidation_type: move _1050, user: move _1051, liquidator: move _1052, margin_requirement: move _1053, total_collateral: move _1054, margin_freed: move _1058, liquidation_id: move _1049, bankrupt: move _1055, canceled_order_ids: move _1057, liquidate_perp: move (_1064.10: state::events::LiquidatePerpRecord), liquidate_spot: move _1059, liquidate_borrow_for_perp_pnl: move (_1064.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move (_1064.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_1064.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_1064.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_1059)<br/>StorageDead(_1058)<br/>StorageDead(_1057)<br/>StorageDead(_1055)<br/>StorageDead(_1054)<br/>StorageDead(_1053)<br/>StorageDead(_1052)<br/>StorageDead(_1051)<br/>StorageDead(_1050)<br/>StorageDead(_1049)<br/>StorageDead(_1048)<br/>_1046 = &amp;_1047<br/>_1045 = &amp;(*_1046)<br/></td></tr><tr><td align="left">_1044 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _1045)</td></tr></table>>];
    bb431__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">431</td></tr><tr><td align="left" balign="left">StorageDead(_1045)<br/>_1043 = &amp;_1044<br/>_1042 = &amp;(*_1043)<br/></td></tr><tr><td align="left">_1041 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _1042)</td></tr></table>>];
    bb432__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">432</td></tr><tr><td align="left" balign="left">_1040 = &amp;(*_1041)<br/>StorageDead(_1042)<br/>_1039 = [move _1040]<br/>StorageDead(_1040)<br/>_1038 = &amp;_1039<br/>_1037 = &amp;(*_1038)<br/>_1036 = move _1037 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_1037)<br/></td></tr><tr><td align="left">_1035 = solana_program::log::sol_log_data(move _1036)</td></tr></table>>];
    bb433__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">433</td></tr><tr><td align="left" balign="left">StorageDead(_1036)<br/></td></tr><tr><td align="left">drop(_1044)</td></tr></table>>];
    bb434__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">434</td></tr><tr><td align="left">drop(_1047)</td></tr></table>>];
    bb435__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">435</td></tr><tr><td align="left">drop(_1064)</td></tr></table>>];
    bb436__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">436</td></tr><tr><td align="left" balign="left">StorageDead(_1064)<br/>StorageDead(_1047)<br/>StorageDead(_1046)<br/>StorageDead(_1044)<br/>StorageDead(_1043)<br/>StorageDead(_1041)<br/>StorageDead(_1039)<br/>StorageDead(_1038)<br/>StorageDead(_1035)<br/>_1034 = const ()<br/>StorageDead(_1034)<br/>StorageLive(_1065)<br/>StorageLive(_1066)<br/>_1066 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_1065 = User::exit_liquidation(move _1066)</td></tr></table>>];
    bb437__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">437</td></tr><tr><td align="left" balign="left">StorageDead(_1066)<br/>StorageDead(_1065)<br/>StorageLive(_1067)<br/>_1067 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1067)<br/>StorageDead(_1067)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb438__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">438</td></tr><tr><td align="left" balign="left">StorageDead(_955)<br/>StorageLive(_1068)<br/>StorageLive(_1069)<br/>StorageLive(_1070)<br/>StorageLive(_1071)<br/>_1071 = &amp;_954<br/></td></tr><tr><td align="left">_1070 = MarginCalculation::margin_shortage(move _1071)</td></tr></table>>];
    bb439__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">439</td></tr><tr><td align="left" balign="left">StorageDead(_1071)<br/></td></tr><tr><td align="left">_1069 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1070)</td></tr></table>>];
    bb440__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">440</td></tr><tr><td align="left" balign="left">StorageDead(_1070)<br/>_1072 = discriminant(_1069)<br/></td></tr><tr><td align="left">switchInt(move _1072)</td></tr></table>>];
    bb441__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">441</td></tr><tr><td align="left" balign="left">StorageLive(_1076)<br/>_1076 = ((_1069 as Continue).0: u128)<br/>_1068 = _1076<br/>StorageDead(_1076)<br/>StorageDead(_1069)<br/>StorageLive(_1077)<br/>StorageLive(_1078)<br/>StorageLive(_1079)<br/>StorageLive(_1080)<br/>_1080 = _604<br/>StorageLive(_1081)<br/>_1081 = _17<br/></td></tr><tr><td align="left">_1079 = &lt;u32 as SafeMath&gt;::safe_add(move _1080, move _1081)</td></tr></table>>];
    bb442__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">442</td></tr><tr><td align="left" balign="left">StorageLive(_1073)<br/>_1073 = ((_1069 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1075)<br/>_1075 = _1073<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1075)</td></tr></table>>];
    bb443__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">443</td></tr><tr><td align="left" balign="left">StorageDead(_1075)<br/>StorageDead(_1073)<br/>StorageDead(_1069)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb444__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">444</td></tr><tr><td align="left" balign="left">StorageDead(_1081)<br/>StorageDead(_1080)<br/></td></tr><tr><td align="left">_1078 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _1079)</td></tr></table>>];
    bb445__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">445</td></tr><tr><td align="left" balign="left">StorageDead(_1079)<br/>_1082 = discriminant(_1078)<br/></td></tr><tr><td align="left">switchInt(move _1082)</td></tr></table>>];
    bb446__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">446</td></tr><tr><td align="left" balign="left">StorageLive(_1086)<br/>_1086 = ((_1078 as Continue).0: u32)<br/>_1077 = _1086<br/>StorageDead(_1086)<br/>StorageDead(_1078)<br/>StorageLive(_1087)<br/>StorageLive(_1088)<br/>StorageLive(_1089)<br/>StorageLive(_1090)<br/>StorageLive(_1091)<br/>StorageLive(_1092)<br/>StorageLive(_1093)<br/>_1093 = &amp;_954<br/>StorageLive(_1094)<br/>_1094 = _1068<br/></td></tr><tr><td align="left">_1092 = MarginCalculation::tracked_market_margin_shortage(move _1093, move _1094)</td></tr></table>>];
    bb447__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">447</td></tr><tr><td align="left" balign="left">StorageLive(_1083)<br/>_1083 = ((_1078 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1085)<br/>_1085 = _1083<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1085)</td></tr></table>>];
    bb448__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">448</td></tr><tr><td align="left" balign="left">StorageDead(_1085)<br/>StorageDead(_1083)<br/>StorageDead(_1078)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb449__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">449</td></tr><tr><td align="left" balign="left">StorageDead(_1094)<br/>StorageDead(_1093)<br/></td></tr><tr><td align="left">_1091 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1092)</td></tr></table>>];
    bb450__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">450</td></tr><tr><td align="left" balign="left">StorageDead(_1092)<br/>_1095 = discriminant(_1091)<br/></td></tr><tr><td align="left">switchInt(move _1095)</td></tr></table>>];
    bb451__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">451</td></tr><tr><td align="left" balign="left">StorageLive(_1099)<br/>_1099 = ((_1091 as Continue).0: u128)<br/>_1090 = _1099<br/>StorageDead(_1099)<br/>StorageLive(_1100)<br/>_1100 = _601<br/>StorageLive(_1101)<br/>_1101 = _415<br/>StorageLive(_1102)<br/>_1102 = _416<br/>StorageLive(_1103)<br/>_1103 = _1077<br/>StorageLive(_1104)<br/>_1104 = _605<br/>StorageLive(_1105)<br/>_1105 = _603<br/>StorageLive(_1106)<br/>_1106 = _602<br/>StorageLive(_1107)<br/>StorageLive(_1108)<br/>StorageLive(_1109)<br/>StorageLive(_1110)<br/>StorageLive(_1111)<br/>StorageLive(_1112)<br/>StorageLive(_1113)<br/>_1113 = &amp;(*_12)<br/>StorageLive(_1114)<br/>StorageLive(_1115)<br/>_1115 = &amp;_2<br/>_1114 = &amp;(*_1115)<br/></td></tr><tr><td align="left">_1112 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1113, move _1114)</td></tr></table>>];
    bb452__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">452</td></tr><tr><td align="left" balign="left">StorageLive(_1096)<br/>_1096 = ((_1091 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1098)<br/>_1098 = _1096<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1098)</td></tr></table>>];
    bb453__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">453</td></tr><tr><td align="left" balign="left">StorageDead(_1098)<br/>StorageDead(_1096)<br/>StorageDead(_1090)<br/>StorageDead(_1089)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb454__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">454</td></tr><tr><td align="left" balign="left">StorageDead(_1114)<br/>StorageDead(_1113)<br/></td></tr><tr><td align="left">_1111 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1112)</td></tr></table>>];
    bb455__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">455</td></tr><tr><td align="left" balign="left">_1871 = const true<br/>StorageDead(_1112)<br/>_1116 = discriminant(_1111)<br/></td></tr><tr><td align="left">switchInt(move _1116)</td></tr></table>>];
    bb456__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">456</td></tr><tr><td align="left" balign="left">StorageLive(_1120)<br/>_1120 = move ((_1111 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1110 = move _1120<br/>StorageDead(_1120)<br/>_1109 = &amp;_1110<br/></td></tr><tr><td align="left">_1108 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1109)</td></tr></table>>];
    bb457__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">457</td></tr><tr><td align="left" balign="left">StorageLive(_1117)<br/>_1117 = ((_1111 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1119)<br/>_1119 = _1117<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1119)</td></tr></table>>];
    bb458__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">458</td></tr><tr><td align="left" balign="left">StorageDead(_1119)<br/>StorageDead(_1117)<br/>StorageDead(_1109)<br/>StorageDead(_1107)<br/>StorageDead(_1106)<br/>StorageDead(_1105)<br/>StorageDead(_1104)<br/>StorageDead(_1103)<br/>StorageDead(_1102)<br/>StorageDead(_1101)<br/>StorageDead(_1100)<br/>StorageDead(_1090)<br/>StorageDead(_1089)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb459__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">459</td></tr><tr><td align="left" balign="left">StorageDead(_1109)<br/>_1107 = ((*_1108).37: u32)<br/></td></tr><tr><td align="left">_1089 = calculate_spot_if_fee(move _1090, move _1100, move _1101, move _1102, move _1103, move _1104, move _1105, move _1106, move _1107)</td></tr></table>>];
    bb460__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">460</td></tr><tr><td align="left" balign="left">StorageDead(_1107)<br/>StorageDead(_1106)<br/>StorageDead(_1105)<br/>StorageDead(_1104)<br/>StorageDead(_1103)<br/>StorageDead(_1102)<br/>StorageDead(_1101)<br/>StorageDead(_1100)<br/>StorageDead(_1090)<br/></td></tr><tr><td align="left">_1088 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _1089)</td></tr></table>>];
    bb461__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">461</td></tr><tr><td align="left" balign="left">StorageDead(_1089)<br/>_1121 = discriminant(_1088)<br/></td></tr><tr><td align="left">switchInt(move _1121)</td></tr></table>>];
    bb462__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">462</td></tr><tr><td align="left" balign="left">StorageLive(_1125)<br/>_1125 = ((_1088 as Continue).0: u32)<br/>_1087 = _1125<br/>StorageDead(_1125)<br/></td></tr><tr><td align="left">drop(_1110)</td></tr></table>>];
    bb463__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">463</td></tr><tr><td align="left" balign="left">StorageLive(_1122)<br/>_1122 = ((_1088 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1124)<br/>_1124 = _1122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1124)</td></tr></table>>];
    bb464__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">464</td></tr><tr><td align="left" balign="left">StorageDead(_1124)<br/>StorageDead(_1122)<br/></td></tr><tr><td align="left">drop(_1110)</td></tr></table>>];
    bb465__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">465</td></tr><tr><td align="left" balign="left">StorageDead(_1136)<br/>StorageDead(_1135)<br/>StorageDead(_1134)<br/>StorageDead(_1133)<br/>StorageDead(_1132)<br/>StorageDead(_1131)<br/>StorageDead(_1130)<br/>StorageDead(_1129)<br/></td></tr><tr><td align="left">_1127 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1128)</td></tr></table>>];
    bb466__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">466</td></tr><tr><td align="left" balign="left">StorageDead(_1128)<br/>_1137 = discriminant(_1127)<br/></td></tr><tr><td align="left">switchInt(move _1137)</td></tr></table>>];
    bb467__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">467</td></tr><tr><td align="left" balign="left">StorageLive(_1141)<br/>_1141 = ((_1127 as Continue).0: u128)<br/>_1126 = _1141<br/>StorageDead(_1141)<br/>StorageDead(_1127)<br/>StorageLive(_1142)<br/>StorageLive(_1143)<br/>StorageLive(_1144)<br/>StorageLive(_1145)<br/>_1145 = &amp;(*_5)<br/>StorageLive(_1146)<br/>_1146 = _1068<br/>StorageLive(_1147)<br/>_1147 = _15<br/>StorageLive(_1148)<br/>_1148 = _18<br/>StorageLive(_1149)<br/>_1149 = _20<br/></td></tr><tr><td align="left">_1144 = calculate_max_pct_to_liquidate(move _1145, move _1146, move _1147, move _1148, move _1149)</td></tr></table>>];
    bb468__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">468</td></tr><tr><td align="left" balign="left">StorageLive(_1138)<br/>_1138 = ((_1127 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1140)<br/>_1140 = _1138<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1140)</td></tr></table>>];
    bb469__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">469</td></tr><tr><td align="left" balign="left">StorageDead(_1140)<br/>StorageDead(_1138)<br/>StorageDead(_1127)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb470__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">470</td></tr><tr><td align="left" balign="left">StorageDead(_1149)<br/>StorageDead(_1148)<br/>StorageDead(_1147)<br/>StorageDead(_1146)<br/>StorageDead(_1145)<br/></td></tr><tr><td align="left">_1143 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1144)</td></tr></table>>];
    bb471__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">471</td></tr><tr><td align="left" balign="left">StorageDead(_1144)<br/>_1150 = discriminant(_1143)<br/></td></tr><tr><td align="left">switchInt(move _1150)</td></tr></table>>];
    bb472__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">472</td></tr><tr><td align="left" balign="left">StorageLive(_1154)<br/>_1154 = ((_1143 as Continue).0: u128)<br/>_1142 = _1154<br/>StorageDead(_1154)<br/>StorageDead(_1143)<br/>StorageLive(_1155)<br/>StorageLive(_1156)<br/>StorageLive(_1157)<br/>StorageLive(_1158)<br/>StorageLive(_1159)<br/>_1159 = _1126<br/>StorageLive(_1160)<br/>_1160 = _1142<br/></td></tr><tr><td align="left">_1158 = core::num::&lt;impl u128&gt;::saturating_mul(move _1159, move _1160)</td></tr></table>>];
    bb473__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">473</td></tr><tr><td align="left" balign="left">StorageLive(_1151)<br/>_1151 = ((_1143 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1153)<br/>_1153 = _1151<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1153)</td></tr></table>>];
    bb474__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">474</td></tr><tr><td align="left" balign="left">StorageDead(_1153)<br/>StorageDead(_1151)<br/>StorageDead(_1143)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb475__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">475</td></tr><tr><td align="left" balign="left">StorageDead(_1160)<br/>StorageDead(_1159)<br/></td></tr><tr><td align="left">_1157 = &lt;u128 as SafeMath&gt;::safe_div(move _1158, const _)</td></tr></table>>];
    bb476__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">476</td></tr><tr><td align="left" balign="left">StorageDead(_1158)<br/></td></tr><tr><td align="left">_1156 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1157)</td></tr></table>>];
    bb477__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">477</td></tr><tr><td align="left" balign="left">StorageDead(_1157)<br/>_1161 = discriminant(_1156)<br/></td></tr><tr><td align="left">switchInt(move _1161)</td></tr></table>>];
    bb478__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">478</td></tr><tr><td align="left" balign="left">StorageLive(_1165)<br/>_1165 = ((_1156 as Continue).0: u128)<br/>_1155 = _1165<br/>StorageDead(_1165)<br/>StorageDead(_1156)<br/>StorageLive(_1166)<br/>StorageLive(_1167)<br/>StorageLive(_1168)<br/>_1168 = _1155<br/>_1167 = Eq(move _1168, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1167)</td></tr></table>>];
    bb479__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">479</td></tr><tr><td align="left" balign="left">StorageLive(_1162)<br/>_1162 = ((_1156 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1164)<br/>_1164 = _1162<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1164)</td></tr></table>>];
    bb480__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">480</td></tr><tr><td align="left" balign="left">StorageDead(_1164)<br/>StorageDead(_1162)<br/>StorageDead(_1156)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb481__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">481</td></tr><tr><td align="left" balign="left">StorageDead(_1168)<br/>StorageLive(_1170)<br/>StorageLive(_1171)<br/>StorageLive(_1172)<br/>_1172 = const &quot;max_liability_allowed_to_be_transferred == 0&quot;<br/>_1171 = &amp;(*_1172)<br/></td></tr><tr><td align="left">_1170 = solana_program::log::sol_log(move _1171)</td></tr></table>>];
    bb482__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">482</td></tr><tr><td align="left" balign="left">StorageDead(_1168)<br/>_1166 = const ()<br/>StorageDead(_1167)<br/>StorageDead(_1166)<br/>StorageLive(_1174)<br/>StorageLive(_1175)<br/>StorageLive(_1176)<br/>StorageLive(_1177)<br/>_1177 = _412<br/>StorageLive(_1178)<br/>_1178 = _416<br/>StorageLive(_1179)<br/>_1179 = _414<br/>StorageLive(_1180)<br/>_1180 = _413<br/>StorageLive(_1181)<br/>_1181 = _605<br/>StorageLive(_1182)<br/>_1182 = _603<br/>StorageLive(_1183)<br/>_1183 = _602<br/></td></tr><tr><td align="left">_1176 = calculate_liability_transfer_implied_by_asset_amount(move _1177, move _1178, move _1179, move _1180, move _1181, move _1182, move _1183)</td></tr></table>>];
    bb483__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">483</td></tr><tr><td align="left" balign="left">StorageDead(_1171)<br/>StorageDead(_1172)<br/>StorageDead(_1170)<br/>StorageLive(_1173)<br/>_1173 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1173)<br/>StorageDead(_1173)<br/>StorageDead(_1167)<br/>StorageDead(_1166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb484__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">484</td></tr><tr><td align="left" balign="left">StorageDead(_1183)<br/>StorageDead(_1182)<br/>StorageDead(_1181)<br/>StorageDead(_1180)<br/>StorageDead(_1179)<br/>StorageDead(_1178)<br/>StorageDead(_1177)<br/></td></tr><tr><td align="left">_1175 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1176)</td></tr></table>>];
    bb485__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">485</td></tr><tr><td align="left" balign="left">StorageDead(_1176)<br/>_1184 = discriminant(_1175)<br/></td></tr><tr><td align="left">switchInt(move _1184)</td></tr></table>>];
    bb486__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">486</td></tr><tr><td align="left" balign="left">StorageLive(_1188)<br/>_1188 = ((_1175 as Continue).0: u128)<br/>_1174 = _1188<br/>StorageDead(_1188)<br/>StorageDead(_1175)<br/>StorageLive(_1189)<br/>StorageLive(_1190)<br/>StorageLive(_1191)<br/>StorageLive(_1192)<br/>StorageLive(_1193)<br/>StorageLive(_1194)<br/>StorageLive(_1195)<br/>_1195 = _601<br/></td></tr><tr><td align="left">_1194 = &lt;u128 as Cast&gt;::cast::&lt;i128&gt;(move _1195)</td></tr></table>>];
    bb487__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">487</td></tr><tr><td align="left" balign="left">StorageLive(_1185)<br/>_1185 = ((_1175 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1187)<br/>_1187 = _1185<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1187)</td></tr></table>>];
    bb488__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">488</td></tr><tr><td align="left" balign="left">StorageDead(_1187)<br/>StorageDead(_1185)<br/>StorageDead(_1175)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb489__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">489</td></tr><tr><td align="left" balign="left">StorageDead(_1195)<br/></td></tr><tr><td align="left">_1193 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1194)</td></tr></table>>];
    bb490__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">490</td></tr><tr><td align="left" balign="left">StorageDead(_1194)<br/>_1196 = discriminant(_1193)<br/></td></tr><tr><td align="left">switchInt(move _1196)</td></tr></table>>];
    bb491__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">491</td></tr><tr><td align="left" balign="left">StorageLive(_1200)<br/>_1200 = ((_1193 as Continue).0: i128)<br/>_1192 = _1200<br/>StorageDead(_1200)<br/>StorageLive(_1201)<br/>_1201 = _603<br/>StorageLive(_1202)<br/>_1202 = _602<br/></td></tr><tr><td align="left">_1191 = get_token_value(move _1192, move _1201, move _1202)</td></tr></table>>];
    bb492__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">492</td></tr><tr><td align="left" balign="left">StorageLive(_1197)<br/>_1197 = ((_1193 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1199)<br/>_1199 = _1197<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1199)</td></tr></table>>];
    bb493__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">493</td></tr><tr><td align="left" balign="left">StorageDead(_1199)<br/>StorageDead(_1197)<br/>StorageDead(_1192)<br/>StorageDead(_1191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb494__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">494</td></tr><tr><td align="left" balign="left">StorageDead(_1202)<br/>StorageDead(_1201)<br/>StorageDead(_1192)<br/></td></tr><tr><td align="left">_1190 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _1191)</td></tr></table>>];
    bb495__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">495</td></tr><tr><td align="left" balign="left">StorageDead(_1191)<br/>_1203 = discriminant(_1190)<br/></td></tr><tr><td align="left">switchInt(move _1203)</td></tr></table>>];
    bb496__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">496</td></tr><tr><td align="left" balign="left">StorageLive(_1207)<br/>_1207 = ((_1190 as Continue).0: i128)<br/>_1189 = _1207<br/>StorageDead(_1207)<br/>StorageDead(_1193)<br/>StorageDead(_1190)<br/>StorageLive(_1208)<br/>StorageLive(_1209)<br/>StorageLive(_1210)<br/>_1210 = _1189<br/>StorageLive(_1211)<br/>_1212 = CheckedMul(const 10_i128, const _)<br/></td></tr><tr><td align="left">assert(!move (_1212.1: bool), &quot;attempt to compute `{} * {}`, which would overflow&quot;, const 10_i128, const _)</td></tr></table>>];
    bb497__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">497</td></tr><tr><td align="left" balign="left">StorageLive(_1204)<br/>_1204 = ((_1190 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1206)<br/>_1206 = _1204<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1206)</td></tr></table>>];
    bb498__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">498</td></tr><tr><td align="left" balign="left">StorageDead(_1206)<br/>StorageDead(_1204)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb499__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">499</td></tr><tr><td align="left" balign="left">_1211 = move (_1212.0: i128)<br/>_1209 = Gt(move _1210, move _1211)<br/></td></tr><tr><td align="left">switchInt(move _1209)</td></tr></table>>];
    bb500__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">500</td></tr><tr><td align="left" balign="left">StorageDead(_1211)<br/>StorageDead(_1210)<br/>_1208 = const 0_u128<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb501__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">501</td></tr><tr><td align="left" balign="left">StorageDead(_1211)<br/>StorageDead(_1210)<br/>_1208 = _601<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb502__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">502</td></tr><tr><td align="left" balign="left">StorageDead(_1209)<br/>StorageLive(_1213)<br/>StorageLive(_1214)<br/>StorageLive(_1215)<br/>StorageLive(_1216)<br/>_1216 = _3<br/>StorageLive(_1217)<br/>_1217 = _601<br/></td></tr><tr><td align="left">_1215 = &lt;u128 as Ord&gt;::min(move _1216, move _1217)</td></tr></table>>];
    bb503__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">503</td></tr><tr><td align="left" balign="left">StorageDead(_1217)<br/>StorageDead(_1216)<br/>StorageLive(_1218)<br/>StorageLive(_1219)<br/>_1219 = _1155<br/>StorageLive(_1220)<br/>_1220 = _1208<br/></td></tr><tr><td align="left">_1218 = &lt;u128 as Ord&gt;::max(move _1219, move _1220)</td></tr></table>>];
    bb504__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">504</td></tr><tr><td align="left" balign="left">StorageDead(_1220)<br/>StorageDead(_1219)<br/></td></tr><tr><td align="left">_1214 = &lt;u128 as Ord&gt;::min(move _1215, move _1218)</td></tr></table>>];
    bb505__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">505</td></tr><tr><td align="left" balign="left">StorageDead(_1218)<br/>StorageDead(_1215)<br/>StorageLive(_1221)<br/>_1221 = _1174<br/></td></tr><tr><td align="left">_1213 = &lt;u128 as Ord&gt;::min(move _1214, move _1221)</td></tr></table>>];
    bb506__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">506</td></tr><tr><td align="left" balign="left">StorageDead(_1221)<br/>StorageDead(_1214)<br/>StorageLive(_1222)<br/>StorageLive(_1223)<br/>StorageLive(_1224)<br/>StorageLive(_1225)<br/>_1225 = _412<br/>StorageLive(_1226)<br/>_1226 = _416<br/>StorageLive(_1227)<br/>_1227 = _414<br/>StorageLive(_1228)<br/>_1228 = _413<br/>StorageLive(_1229)<br/>_1229 = _1213<br/>StorageLive(_1230)<br/>_1230 = _605<br/>StorageLive(_1231)<br/>_1231 = _603<br/>StorageLive(_1232)<br/>_1232 = _602<br/></td></tr><tr><td align="left">_1224 = calculate_asset_transfer_for_liability_transfer(move _1225, move _1226, move _1227, move _1228, move _1229, move _1230, move _1231, move _1232)</td></tr></table>>];
    bb507__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">507</td></tr><tr><td align="left" balign="left">StorageDead(_1232)<br/>StorageDead(_1231)<br/>StorageDead(_1230)<br/>StorageDead(_1229)<br/>StorageDead(_1228)<br/>StorageDead(_1227)<br/>StorageDead(_1226)<br/>StorageDead(_1225)<br/></td></tr><tr><td align="left">_1223 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1224)</td></tr></table>>];
    bb508__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">508</td></tr><tr><td align="left" balign="left">StorageDead(_1224)<br/>_1233 = discriminant(_1223)<br/></td></tr><tr><td align="left">switchInt(move _1233)</td></tr></table>>];
    bb509__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">509</td></tr><tr><td align="left" balign="left">StorageLive(_1237)<br/>_1237 = ((_1223 as Continue).0: u128)<br/>_1222 = _1237<br/>StorageDead(_1237)<br/>StorageDead(_1223)<br/>StorageLive(_1238)<br/>StorageLive(_1239)<br/>StorageLive(_1240)<br/>_1240 = _1222<br/>_1239 = Eq(move _1240, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1239)</td></tr></table>>];
    bb510__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">510</td></tr><tr><td align="left" balign="left">StorageLive(_1234)<br/>_1234 = ((_1223 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1236)<br/>_1236 = _1234<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1236)</td></tr></table>>];
    bb511__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">511</td></tr><tr><td align="left" balign="left">StorageDead(_1236)<br/>StorageDead(_1234)<br/>StorageDead(_1223)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb512__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">512</td></tr><tr><td align="left" balign="left">StorageDead(_1240)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb513__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">513</td></tr><tr><td align="left" balign="left">StorageDead(_1240)<br/>StorageLive(_1241)<br/>StorageLive(_1242)<br/>_1242 = _1213<br/>_1241 = Eq(move _1242, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _1241)</td></tr></table>>];
    bb514__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">514</td></tr><tr><td align="left" balign="left">StorageDead(_1242)<br/>StorageLive(_1244)<br/>StorageLive(_1245)<br/>StorageLive(_1246)<br/>StorageLive(_1247)<br/>StorageLive(_1248)<br/>StorageLive(_1249)<br/>StorageLive(_1250)<br/>StorageLive(_1251)<br/>StorageLive(_1252)<br/>StorageLive(_1253)<br/>StorageLive(_1254)<br/>_1837 = const _<br/>_1254 = &amp;(*_1837)<br/>_1253 = &amp;(*_1254)<br/>_1252 = move _1253 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1253)<br/>StorageLive(_1256)<br/>StorageLive(_1257)<br/>StorageLive(_1258)<br/>StorageLive(_1259)<br/>StorageLive(_1260)<br/>StorageLive(_1261)<br/>StorageLive(_1262)<br/>_1262 = &amp;_1<br/>_1261 = &amp;(*_1262)<br/></td></tr><tr><td align="left">_1260 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1261)</td></tr></table>>];
    bb515__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">515</td></tr><tr><td align="left" balign="left">StorageDead(_1242)<br/>_1238 = const ()<br/>StorageDead(_1241)<br/>StorageDead(_1239)<br/>StorageDead(_1238)<br/>StorageLive(_1317)<br/>StorageLive(_1318)<br/>StorageLive(_1319)<br/>StorageLive(_1320)<br/>StorageLive(_1321)<br/>StorageLive(_1322)<br/>StorageLive(_1323)<br/>_1323 = _602<br/></td></tr><tr><td align="left">_1322 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _1323)</td></tr></table>>];
    bb516__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">516</td></tr><tr><td align="left" balign="left">StorageDead(_1261)<br/>StorageLive(_1263)<br/>StorageLive(_1264)<br/>StorageLive(_1265)<br/>_1265 = &amp;_2<br/>_1264 = &amp;(*_1265)<br/></td></tr><tr><td align="left">_1263 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _1264)</td></tr></table>>];
    bb517__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">517</td></tr><tr><td align="left" balign="left">StorageDead(_1264)<br/>_1259 = [move _1260, move _1263]<br/>StorageDead(_1263)<br/>StorageDead(_1260)<br/>_1258 = &amp;_1259<br/>_1257 = &amp;(*_1258)<br/>_1256 = move _1257 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1257)<br/></td></tr><tr><td align="left">_1251 = Arguments::&lt;'_&gt;::new_v1(move _1252, move _1256)</td></tr></table>>];
    bb518__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">518</td></tr><tr><td align="left" balign="left">StorageDead(_1256)<br/>StorageDead(_1252)<br/></td></tr><tr><td align="left">_1250 = format(move _1251)</td></tr></table>>];
    bb519__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">519</td></tr><tr><td align="left" balign="left">StorageDead(_1251)<br/>StorageDead(_1265)<br/>StorageDead(_1262)<br/>StorageDead(_1259)<br/>StorageDead(_1258)<br/>StorageDead(_1254)<br/>_1249 = move _1250<br/>StorageDead(_1250)<br/>_1248 = &amp;_1249<br/>_1247 = &amp;(*_1248)<br/></td></tr><tr><td align="left">_1246 = &lt;String as Deref&gt;::deref(move _1247)</td></tr></table>>];
    bb520__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">520</td></tr><tr><td align="left" balign="left">_1245 = &amp;(*_1246)<br/>StorageDead(_1247)<br/></td></tr><tr><td align="left">_1244 = solana_program::log::sol_log(move _1245)</td></tr></table>>];
    bb521__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">521</td></tr><tr><td align="left" balign="left">StorageDead(_1245)<br/></td></tr><tr><td align="left">drop(_1249)</td></tr></table>>];
    bb522__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">522</td></tr><tr><td align="left" balign="left">StorageDead(_1249)<br/>StorageDead(_1248)<br/>StorageDead(_1246)<br/>StorageDead(_1244)<br/>StorageLive(_1266)<br/>StorageLive(_1267)<br/>StorageLive(_1268)<br/>StorageLive(_1269)<br/>StorageLive(_1270)<br/>StorageLive(_1271)<br/>StorageLive(_1272)<br/>StorageLive(_1273)<br/>StorageLive(_1274)<br/>StorageLive(_1275)<br/>StorageLive(_1276)<br/>_1836 = const _<br/>_1276 = &amp;(*_1836)<br/>_1275 = &amp;(*_1276)<br/>_1274 = move _1275 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1275)<br/>StorageLive(_1278)<br/>StorageLive(_1279)<br/>StorageLive(_1280)<br/>StorageLive(_1281)<br/>StorageLive(_1282)<br/>StorageLive(_1283)<br/>StorageLive(_1284)<br/>_1284 = &amp;_3<br/>_1283 = &amp;(*_1284)<br/></td></tr><tr><td align="left">_1282 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1283)</td></tr></table>>];
    bb523__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">523</td></tr><tr><td align="left" balign="left">StorageDead(_1283)<br/>StorageLive(_1285)<br/>StorageLive(_1286)<br/>StorageLive(_1287)<br/>_1287 = &amp;_601<br/>_1286 = &amp;(*_1287)<br/></td></tr><tr><td align="left">_1285 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1286)</td></tr></table>>];
    bb524__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">524</td></tr><tr><td align="left" balign="left">StorageDead(_1286)<br/>StorageLive(_1288)<br/>StorageLive(_1289)<br/>StorageLive(_1290)<br/>_1290 = &amp;_1126<br/>_1289 = &amp;(*_1290)<br/></td></tr><tr><td align="left">_1288 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1289)</td></tr></table>>];
    bb525__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">525</td></tr><tr><td align="left" balign="left">StorageDead(_1289)<br/>_1281 = [move _1282, move _1285, move _1288]<br/>StorageDead(_1288)<br/>StorageDead(_1285)<br/>StorageDead(_1282)<br/>_1280 = &amp;_1281<br/>_1279 = &amp;(*_1280)<br/>_1278 = move _1279 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1279)<br/></td></tr><tr><td align="left">_1273 = Arguments::&lt;'_&gt;::new_v1(move _1274, move _1278)</td></tr></table>>];
    bb526__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">526</td></tr><tr><td align="left" balign="left">StorageDead(_1278)<br/>StorageDead(_1274)<br/></td></tr><tr><td align="left">_1272 = format(move _1273)</td></tr></table>>];
    bb527__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">527</td></tr><tr><td align="left" balign="left">StorageDead(_1273)<br/>StorageDead(_1290)<br/>StorageDead(_1287)<br/>StorageDead(_1284)<br/>StorageDead(_1281)<br/>StorageDead(_1280)<br/>StorageDead(_1276)<br/>_1271 = move _1272<br/>StorageDead(_1272)<br/>_1270 = &amp;_1271<br/>_1269 = &amp;(*_1270)<br/></td></tr><tr><td align="left">_1268 = &lt;String as Deref&gt;::deref(move _1269)</td></tr></table>>];
    bb528__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">528</td></tr><tr><td align="left" balign="left">_1267 = &amp;(*_1268)<br/>StorageDead(_1269)<br/></td></tr><tr><td align="left">_1266 = solana_program::log::sol_log(move _1267)</td></tr></table>>];
    bb529__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">529</td></tr><tr><td align="left" balign="left">StorageDead(_1267)<br/></td></tr><tr><td align="left">drop(_1271)</td></tr></table>>];
    bb530__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">530</td></tr><tr><td align="left" balign="left">StorageDead(_1271)<br/>StorageDead(_1270)<br/>StorageDead(_1268)<br/>StorageDead(_1266)<br/>StorageLive(_1291)<br/>StorageLive(_1292)<br/>StorageLive(_1293)<br/>StorageLive(_1294)<br/>StorageLive(_1295)<br/>StorageLive(_1296)<br/>StorageLive(_1297)<br/>StorageLive(_1298)<br/>StorageLive(_1299)<br/>StorageLive(_1300)<br/>StorageLive(_1301)<br/>_1835 = const _<br/>_1301 = &amp;(*_1835)<br/>_1300 = &amp;(*_1301)<br/>_1299 = move _1300 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1300)<br/>StorageLive(_1303)<br/>StorageLive(_1304)<br/>StorageLive(_1305)<br/>StorageLive(_1306)<br/>StorageLive(_1307)<br/>StorageLive(_1308)<br/>StorageLive(_1309)<br/>_1309 = &amp;_1174<br/>_1308 = &amp;(*_1309)<br/></td></tr><tr><td align="left">_1307 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1308)</td></tr></table>>];
    bb531__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">531</td></tr><tr><td align="left" balign="left">StorageDead(_1308)<br/>StorageLive(_1310)<br/>StorageLive(_1311)<br/>StorageLive(_1312)<br/>_1312 = &amp;_1213<br/>_1311 = &amp;(*_1312)<br/></td></tr><tr><td align="left">_1310 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1311)</td></tr></table>>];
    bb532__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">532</td></tr><tr><td align="left" balign="left">StorageDead(_1311)<br/>StorageLive(_1313)<br/>StorageLive(_1314)<br/>StorageLive(_1315)<br/>_1315 = &amp;_1222<br/>_1314 = &amp;(*_1315)<br/></td></tr><tr><td align="left">_1313 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _1314)</td></tr></table>>];
    bb533__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">533</td></tr><tr><td align="left" balign="left">StorageDead(_1314)<br/>_1306 = [move _1307, move _1310, move _1313]<br/>StorageDead(_1313)<br/>StorageDead(_1310)<br/>StorageDead(_1307)<br/>_1305 = &amp;_1306<br/>_1304 = &amp;(*_1305)<br/>_1303 = move _1304 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1304)<br/></td></tr><tr><td align="left">_1298 = Arguments::&lt;'_&gt;::new_v1(move _1299, move _1303)</td></tr></table>>];
    bb534__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">534</td></tr><tr><td align="left" balign="left">StorageDead(_1303)<br/>StorageDead(_1299)<br/></td></tr><tr><td align="left">_1297 = format(move _1298)</td></tr></table>>];
    bb535__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">535</td></tr><tr><td align="left" balign="left">StorageDead(_1298)<br/>StorageDead(_1315)<br/>StorageDead(_1312)<br/>StorageDead(_1309)<br/>StorageDead(_1306)<br/>StorageDead(_1305)<br/>StorageDead(_1301)<br/>_1296 = move _1297<br/>StorageDead(_1297)<br/>_1295 = &amp;_1296<br/>_1294 = &amp;(*_1295)<br/></td></tr><tr><td align="left">_1293 = &lt;String as Deref&gt;::deref(move _1294)</td></tr></table>>];
    bb536__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">536</td></tr><tr><td align="left" balign="left">_1292 = &amp;(*_1293)<br/>StorageDead(_1294)<br/></td></tr><tr><td align="left">_1291 = solana_program::log::sol_log(move _1292)</td></tr></table>>];
    bb537__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">537</td></tr><tr><td align="left" balign="left">StorageDead(_1292)<br/></td></tr><tr><td align="left">drop(_1296)</td></tr></table>>];
    bb538__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">538</td></tr><tr><td align="left" balign="left">StorageDead(_1296)<br/>StorageDead(_1295)<br/>StorageDead(_1293)<br/>StorageDead(_1291)<br/>StorageLive(_1316)<br/>_1316 = error::ErrorCode::InvalidLiquidation<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1316)<br/>StorageDead(_1316)<br/>StorageDead(_1241)<br/>StorageDead(_1239)<br/>StorageDead(_1238)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb539__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">539</td></tr><tr><td align="left" balign="left">StorageDead(_1323)<br/></td></tr><tr><td align="left">_1321 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1322)</td></tr></table>>];
    bb540__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">540</td></tr><tr><td align="left" balign="left">StorageDead(_1322)<br/>_1324 = discriminant(_1321)<br/></td></tr><tr><td align="left">switchInt(move _1324)</td></tr></table>>];
    bb541__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">541</td></tr><tr><td align="left" balign="left">StorageLive(_1328)<br/>_1328 = ((_1321 as Continue).0: i64)<br/>_1320 = _1328<br/>StorageDead(_1328)<br/>StorageLive(_1329)<br/>StorageLive(_1330)<br/>StorageLive(_1331)<br/>StorageLive(_1332)<br/>StorageLive(_1333)<br/>StorageLive(_1334)<br/>StorageLive(_1335)<br/>_1335 = &amp;(*_12)<br/>StorageLive(_1336)<br/>StorageLive(_1337)<br/>_1337 = &amp;_2<br/>_1336 = &amp;(*_1337)<br/></td></tr><tr><td align="left">_1334 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1335, move _1336)</td></tr></table>>];
    bb542__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">542</td></tr><tr><td align="left" balign="left">StorageLive(_1325)<br/>_1325 = ((_1321 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1327)<br/>_1327 = _1325<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1327)</td></tr></table>>];
    bb543__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">543</td></tr><tr><td align="left" balign="left">StorageDead(_1327)<br/>StorageDead(_1325)<br/>StorageDead(_1320)<br/>StorageDead(_1319)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb544__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">544</td></tr><tr><td align="left" balign="left">StorageDead(_1336)<br/>StorageDead(_1335)<br/></td></tr><tr><td align="left">_1333 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1334)</td></tr></table>>];
    bb545__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">545</td></tr><tr><td align="left" balign="left">_1870 = const true<br/>StorageDead(_1334)<br/>_1338 = discriminant(_1333)<br/></td></tr><tr><td align="left">switchInt(move _1338)</td></tr></table>>];
    bb546__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">546</td></tr><tr><td align="left" balign="left">StorageLive(_1342)<br/>_1342 = move ((_1333 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1332 = move _1342<br/>StorageDead(_1342)<br/>_1331 = &amp;_1332<br/></td></tr><tr><td align="left">_1330 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1331)</td></tr></table>>];
    bb547__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">547</td></tr><tr><td align="left" balign="left">StorageLive(_1339)<br/>_1339 = ((_1333 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1341)<br/>_1341 = _1339<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1341)</td></tr></table>>];
    bb548__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">548</td></tr><tr><td align="left" balign="left">StorageDead(_1341)<br/>StorageDead(_1339)<br/>StorageDead(_1331)<br/>StorageDead(_1329)<br/>StorageDead(_1320)<br/>StorageDead(_1319)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb549__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">549</td></tr><tr><td align="left" balign="left">StorageDead(_1331)<br/>_1329 = (((*_1330).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_1343)<br/>StorageLive(_1344)<br/>StorageLive(_1345)<br/>StorageLive(_1346)<br/>StorageLive(_1347)<br/>_1347 = &amp;((*_16).7: state::state::OracleGuardRails)<br/></td></tr><tr><td align="left">_1346 = state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(move _1347)</td></tr></table>>];
    bb550__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">550</td></tr><tr><td align="left" balign="left">StorageDead(_1347)<br/></td></tr><tr><td align="left">_1345 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _1346)</td></tr></table>>];
    bb551__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">551</td></tr><tr><td align="left" balign="left">StorageDead(_1346)<br/></td></tr><tr><td align="left">_1344 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1345)</td></tr></table>>];
    bb552__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">552</td></tr><tr><td align="left" balign="left">StorageDead(_1345)<br/>_1348 = discriminant(_1344)<br/></td></tr><tr><td align="left">switchInt(move _1348)</td></tr></table>>];
    bb553__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">553</td></tr><tr><td align="left" balign="left">StorageLive(_1352)<br/>_1352 = ((_1344 as Continue).0: i64)<br/>_1343 = _1352<br/>StorageDead(_1352)<br/></td></tr><tr><td align="left">_1319 = math::orders::is_oracle_too_divergent_with_twap_5min(move _1320, move _1329, move _1343)</td></tr></table>>];
    bb554__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">554</td></tr><tr><td align="left" balign="left">StorageLive(_1349)<br/>_1349 = ((_1344 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1351)<br/>_1351 = _1349<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1351)</td></tr></table>>];
    bb555__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">555</td></tr><tr><td align="left" balign="left">StorageDead(_1351)<br/>StorageDead(_1349)<br/>StorageDead(_1343)<br/>StorageDead(_1329)<br/>StorageDead(_1320)<br/>StorageDead(_1319)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb556__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">556</td></tr><tr><td align="left" balign="left">StorageDead(_1343)<br/>StorageDead(_1329)<br/>StorageDead(_1320)<br/></td></tr><tr><td align="left">_1318 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1319)</td></tr></table>>];
    bb557__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">557</td></tr><tr><td align="left" balign="left">StorageDead(_1319)<br/>_1353 = discriminant(_1318)<br/></td></tr><tr><td align="left">switchInt(move _1353)</td></tr></table>>];
    bb558__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">558</td></tr><tr><td align="left" balign="left">StorageLive(_1357)<br/>_1357 = ((_1318 as Continue).0: bool)<br/>_1317 = _1357<br/>StorageDead(_1357)<br/>StorageDead(_1344)<br/></td></tr><tr><td align="left">drop(_1332)</td></tr></table>>];
    bb559__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">559</td></tr><tr><td align="left" balign="left">StorageLive(_1354)<br/>_1354 = ((_1318 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1356)<br/>_1356 = _1354<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1356)</td></tr></table>>];
    bb560__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">560</td></tr><tr><td align="left" balign="left">StorageDead(_1356)<br/>StorageDead(_1354)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb561__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">561</td></tr><tr><td align="left" balign="left">StorageLive(_1362)<br/>_1362 = ()<br/>_1360 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1362)<br/>StorageDead(_1362)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb562__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">562</td></tr><tr><td align="left" balign="left">StorageLive(_1363)<br/>_1363 = error::ErrorCode::PriceBandsBreached<br/>StorageLive(_1364)<br/>StorageLive(_1365)<br/>StorageLive(_1366)<br/>StorageLive(_1367)<br/>StorageLive(_1368)<br/>StorageLive(_1369)<br/>StorageLive(_1370)<br/>StorageLive(_1371)<br/>StorageLive(_1372)<br/>StorageLive(_1373)<br/>StorageLive(_1374)<br/>_1845 = const _<br/>_1374 = &amp;(*_1845)<br/>_1373 = &amp;(*_1374)<br/>_1372 = move _1373 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1373)<br/>StorageLive(_1376)<br/>StorageLive(_1377)<br/>StorageLive(_1378)<br/>StorageLive(_1379)<br/>StorageLive(_1380)<br/>StorageLive(_1381)<br/>StorageLive(_1382)<br/>_1382 = &amp;_1363<br/>_1381 = &amp;(*_1382)<br/></td></tr><tr><td align="left">_1380 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1381)</td></tr></table>>];
    bb563__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">563</td></tr><tr><td align="left" balign="left">StorageDead(_1381)<br/>_1379 = [move _1380]<br/>StorageDead(_1380)<br/>_1378 = &amp;_1379<br/>_1377 = &amp;(*_1378)<br/>_1376 = move _1377 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1377)<br/></td></tr><tr><td align="left">_1371 = Arguments::&lt;'_&gt;::new_v1(move _1372, move _1376)</td></tr></table>>];
    bb564__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">564</td></tr><tr><td align="left" balign="left">StorageDead(_1376)<br/>StorageDead(_1372)<br/></td></tr><tr><td align="left">_1370 = format(move _1371)</td></tr></table>>];
    bb565__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">565</td></tr><tr><td align="left" balign="left">StorageDead(_1371)<br/>StorageDead(_1382)<br/>StorageDead(_1379)<br/>StorageDead(_1378)<br/>StorageDead(_1374)<br/>_1369 = move _1370<br/>StorageDead(_1370)<br/>_1368 = &amp;_1369<br/>_1367 = &amp;(*_1368)<br/></td></tr><tr><td align="left">_1366 = &lt;String as Deref&gt;::deref(move _1367)</td></tr></table>>];
    bb566__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">566</td></tr><tr><td align="left" balign="left">_1365 = &amp;(*_1366)<br/>StorageDead(_1367)<br/></td></tr><tr><td align="left">_1364 = solana_program::log::sol_log(move _1365)</td></tr></table>>];
    bb567__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">567</td></tr><tr><td align="left" balign="left">StorageDead(_1365)<br/></td></tr><tr><td align="left">drop(_1369)</td></tr></table>>];
    bb568__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">568</td></tr><tr><td align="left" balign="left">StorageDead(_1369)<br/>StorageDead(_1368)<br/>StorageDead(_1366)<br/>StorageDead(_1364)<br/>StorageLive(_1383)<br/>StorageLive(_1384)<br/>StorageLive(_1385)<br/>_1385 = const &quot;liability oracle too divergent&quot;<br/>_1384 = &amp;(*_1385)<br/></td></tr><tr><td align="left">_1383 = solana_program::log::sol_log(move _1384)</td></tr></table>>];
    bb569__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">569</td></tr><tr><td align="left" balign="left">StorageDead(_1384)<br/>StorageDead(_1385)<br/>StorageDead(_1383)<br/>StorageLive(_1386)<br/>_1386 = _1363<br/>_1360 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1386)<br/>StorageDead(_1386)<br/>StorageDead(_1363)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb570__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">570</td></tr><tr><td align="left" balign="left">StorageDead(_1361)<br/></td></tr><tr><td align="left">_1359 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1360)</td></tr></table>>];
    bb571__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">571</td></tr><tr><td align="left" balign="left">StorageDead(_1360)<br/>_1387 = discriminant(_1359)<br/></td></tr><tr><td align="left">switchInt(move _1387)</td></tr></table>>];
    bb572__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">572</td></tr><tr><td align="left" balign="left">StorageLive(_1391)<br/>_1391 = ((_1359 as Continue).0: ())<br/>_1358 = _1391<br/>StorageDead(_1391)<br/>StorageDead(_1359)<br/>StorageDead(_1358)<br/>StorageLive(_1392)<br/>StorageLive(_1393)<br/>StorageLive(_1394)<br/>StorageLive(_1395)<br/>StorageLive(_1396)<br/>StorageLive(_1397)<br/>StorageLive(_1398)<br/>_1398 = _413<br/></td></tr><tr><td align="left">_1397 = &lt;i64 as Cast&gt;::cast::&lt;i64&gt;(move _1398)</td></tr></table>>];
    bb573__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">573</td></tr><tr><td align="left" balign="left">StorageLive(_1388)<br/>_1388 = ((_1359 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1390)<br/>_1390 = _1388<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1390)</td></tr></table>>];
    bb574__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">574</td></tr><tr><td align="left" balign="left">StorageDead(_1390)<br/>StorageDead(_1388)<br/>StorageDead(_1359)<br/>StorageDead(_1358)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb575__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">575</td></tr><tr><td align="left" balign="left">StorageDead(_1398)<br/></td></tr><tr><td align="left">_1396 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1397)</td></tr></table>>];
    bb576__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">576</td></tr><tr><td align="left" balign="left">StorageDead(_1397)<br/>_1399 = discriminant(_1396)<br/></td></tr><tr><td align="left">switchInt(move _1399)</td></tr></table>>];
    bb577__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">577</td></tr><tr><td align="left" balign="left">StorageLive(_1403)<br/>_1403 = ((_1396 as Continue).0: i64)<br/>_1395 = _1403<br/>StorageDead(_1403)<br/>StorageLive(_1404)<br/>StorageLive(_1405)<br/>StorageLive(_1406)<br/>StorageLive(_1407)<br/>StorageLive(_1408)<br/>StorageLive(_1409)<br/>StorageLive(_1410)<br/>_1410 = &amp;(*_12)<br/>StorageLive(_1411)<br/>StorageLive(_1412)<br/>_1412 = &amp;_1<br/>_1411 = &amp;(*_1412)<br/></td></tr><tr><td align="left">_1409 = SpotMarketMap::&lt;'_&gt;::get_ref(move _1410, move _1411)</td></tr></table>>];
    bb578__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">578</td></tr><tr><td align="left" balign="left">StorageLive(_1400)<br/>_1400 = ((_1396 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1402)<br/>_1402 = _1400<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1402)</td></tr></table>>];
    bb579__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">579</td></tr><tr><td align="left" balign="left">StorageDead(_1402)<br/>StorageDead(_1400)<br/>StorageDead(_1395)<br/>StorageDead(_1394)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb580__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">580</td></tr><tr><td align="left" balign="left">StorageDead(_1411)<br/>StorageDead(_1410)<br/></td></tr><tr><td align="left">_1408 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1409)</td></tr></table>>];
    bb581__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">581</td></tr><tr><td align="left" balign="left">_1869 = const true<br/>StorageDead(_1409)<br/>_1413 = discriminant(_1408)<br/></td></tr><tr><td align="left">switchInt(move _1413)</td></tr></table>>];
    bb582__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">582</td></tr><tr><td align="left" balign="left">StorageLive(_1417)<br/>_1417 = move ((_1408 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1407 = move _1417<br/>StorageDead(_1417)<br/>_1406 = &amp;_1407<br/></td></tr><tr><td align="left">_1405 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _1406)</td></tr></table>>];
    bb583__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">583</td></tr><tr><td align="left" balign="left">StorageLive(_1414)<br/>_1414 = ((_1408 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1416)<br/>_1416 = _1414<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1416)</td></tr></table>>];
    bb584__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">584</td></tr><tr><td align="left" balign="left">StorageDead(_1416)<br/>StorageDead(_1414)<br/>StorageDead(_1406)<br/>StorageDead(_1404)<br/>StorageDead(_1395)<br/>StorageDead(_1394)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb585__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">585</td></tr><tr><td align="left" balign="left">StorageDead(_1406)<br/>_1404 = (((*_1405).5: state::oracle::HistoricalOracleData).4: i64)<br/>StorageLive(_1418)<br/>StorageLive(_1419)<br/>StorageLive(_1420)<br/>StorageLive(_1421)<br/>StorageLive(_1422)<br/>_1422 = &amp;((*_16).7: state::state::OracleGuardRails)<br/></td></tr><tr><td align="left">_1421 = state::state::OracleGuardRails::max_oracle_twap_5min_percent_divergence(move _1422)</td></tr></table>>];
    bb586__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">586</td></tr><tr><td align="left" balign="left">StorageDead(_1422)<br/></td></tr><tr><td align="left">_1420 = &lt;u64 as Cast&gt;::cast::&lt;i64&gt;(move _1421)</td></tr></table>>];
    bb587__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">587</td></tr><tr><td align="left" balign="left">StorageDead(_1421)<br/></td></tr><tr><td align="left">_1419 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _1420)</td></tr></table>>];
    bb588__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">588</td></tr><tr><td align="left" balign="left">StorageDead(_1420)<br/>_1423 = discriminant(_1419)<br/></td></tr><tr><td align="left">switchInt(move _1423)</td></tr></table>>];
    bb589__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">589</td></tr><tr><td align="left" balign="left">StorageLive(_1427)<br/>_1427 = ((_1419 as Continue).0: i64)<br/>_1418 = _1427<br/>StorageDead(_1427)<br/></td></tr><tr><td align="left">_1394 = math::orders::is_oracle_too_divergent_with_twap_5min(move _1395, move _1404, move _1418)</td></tr></table>>];
    bb590__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">590</td></tr><tr><td align="left" balign="left">StorageLive(_1424)<br/>_1424 = ((_1419 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1426)<br/>_1426 = _1424<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1426)</td></tr></table>>];
    bb591__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">591</td></tr><tr><td align="left" balign="left">StorageDead(_1426)<br/>StorageDead(_1424)<br/>StorageDead(_1418)<br/>StorageDead(_1404)<br/>StorageDead(_1395)<br/>StorageDead(_1394)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb592__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">592</td></tr><tr><td align="left" balign="left">StorageDead(_1418)<br/>StorageDead(_1404)<br/>StorageDead(_1395)<br/></td></tr><tr><td align="left">_1393 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1394)</td></tr></table>>];
    bb593__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">593</td></tr><tr><td align="left" balign="left">StorageDead(_1394)<br/>_1428 = discriminant(_1393)<br/></td></tr><tr><td align="left">switchInt(move _1428)</td></tr></table>>];
    bb594__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">594</td></tr><tr><td align="left" balign="left">StorageLive(_1432)<br/>_1432 = ((_1393 as Continue).0: bool)<br/>_1392 = _1432<br/>StorageDead(_1432)<br/>StorageDead(_1419)<br/></td></tr><tr><td align="left">drop(_1407)</td></tr></table>>];
    bb595__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">595</td></tr><tr><td align="left" balign="left">StorageLive(_1429)<br/>_1429 = ((_1393 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1431)<br/>_1431 = _1429<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1431)</td></tr></table>>];
    bb596__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">596</td></tr><tr><td align="left" balign="left">StorageDead(_1431)<br/>StorageDead(_1429)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb597__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">597</td></tr><tr><td align="left" balign="left">StorageLive(_1437)<br/>_1437 = ()<br/>_1435 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1437)<br/>StorageDead(_1437)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb598__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">598</td></tr><tr><td align="left" balign="left">StorageLive(_1438)<br/>_1438 = error::ErrorCode::PriceBandsBreached<br/>StorageLive(_1439)<br/>StorageLive(_1440)<br/>StorageLive(_1441)<br/>StorageLive(_1442)<br/>StorageLive(_1443)<br/>StorageLive(_1444)<br/>StorageLive(_1445)<br/>StorageLive(_1446)<br/>StorageLive(_1447)<br/>StorageLive(_1448)<br/>StorageLive(_1449)<br/>_1844 = const _<br/>_1449 = &amp;(*_1844)<br/>_1448 = &amp;(*_1449)<br/>_1447 = move _1448 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1448)<br/>StorageLive(_1451)<br/>StorageLive(_1452)<br/>StorageLive(_1453)<br/>StorageLive(_1454)<br/>StorageLive(_1455)<br/>StorageLive(_1456)<br/>StorageLive(_1457)<br/>_1457 = &amp;_1438<br/>_1456 = &amp;(*_1457)<br/></td></tr><tr><td align="left">_1455 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1456)</td></tr></table>>];
    bb599__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">599</td></tr><tr><td align="left" balign="left">StorageDead(_1456)<br/>_1454 = [move _1455]<br/>StorageDead(_1455)<br/>_1453 = &amp;_1454<br/>_1452 = &amp;(*_1453)<br/>_1451 = move _1452 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1452)<br/></td></tr><tr><td align="left">_1446 = Arguments::&lt;'_&gt;::new_v1(move _1447, move _1451)</td></tr></table>>];
    bb600__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">600</td></tr><tr><td align="left" balign="left">StorageDead(_1451)<br/>StorageDead(_1447)<br/></td></tr><tr><td align="left">_1445 = format(move _1446)</td></tr></table>>];
    bb601__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">601</td></tr><tr><td align="left" balign="left">StorageDead(_1446)<br/>StorageDead(_1457)<br/>StorageDead(_1454)<br/>StorageDead(_1453)<br/>StorageDead(_1449)<br/>_1444 = move _1445<br/>StorageDead(_1445)<br/>_1443 = &amp;_1444<br/>_1442 = &amp;(*_1443)<br/></td></tr><tr><td align="left">_1441 = &lt;String as Deref&gt;::deref(move _1442)</td></tr></table>>];
    bb602__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">602</td></tr><tr><td align="left" balign="left">_1440 = &amp;(*_1441)<br/>StorageDead(_1442)<br/></td></tr><tr><td align="left">_1439 = solana_program::log::sol_log(move _1440)</td></tr></table>>];
    bb603__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">603</td></tr><tr><td align="left" balign="left">StorageDead(_1440)<br/></td></tr><tr><td align="left">drop(_1444)</td></tr></table>>];
    bb604__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">604</td></tr><tr><td align="left" balign="left">StorageDead(_1444)<br/>StorageDead(_1443)<br/>StorageDead(_1441)<br/>StorageDead(_1439)<br/>StorageLive(_1458)<br/>StorageLive(_1459)<br/>StorageLive(_1460)<br/>_1460 = const &quot;asset oracle too divergent&quot;<br/>_1459 = &amp;(*_1460)<br/></td></tr><tr><td align="left">_1458 = solana_program::log::sol_log(move _1459)</td></tr></table>>];
    bb605__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">605</td></tr><tr><td align="left" balign="left">StorageDead(_1459)<br/>StorageDead(_1460)<br/>StorageDead(_1458)<br/>StorageLive(_1461)<br/>_1461 = _1438<br/>_1435 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1461)<br/>StorageDead(_1461)<br/>StorageDead(_1438)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb606__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">606</td></tr><tr><td align="left" balign="left">StorageDead(_1436)<br/></td></tr><tr><td align="left">_1434 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1435)</td></tr></table>>];
    bb607__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">607</td></tr><tr><td align="left" balign="left">StorageDead(_1435)<br/>_1462 = discriminant(_1434)<br/></td></tr><tr><td align="left">switchInt(move _1462)</td></tr></table>>];
    bb608__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">608</td></tr><tr><td align="left" balign="left">StorageLive(_1466)<br/>_1466 = ((_1434 as Continue).0: ())<br/>_1433 = _1466<br/>StorageDead(_1466)<br/>StorageDead(_1434)<br/>StorageDead(_1433)<br/>StorageLive(_1467)<br/>StorageLive(_1468)<br/>StorageLive(_1469)<br/>StorageLive(_1470)<br/>_1470 = _1222<br/>StorageLive(_1471)<br/>_1471 = _1213<br/>StorageLive(_1472)<br/>_1472 = _414<br/>StorageLive(_1473)<br/>_1473 = _603<br/>StorageLive(_1474)<br/>_1474 = _4<br/></td></tr><tr><td align="left">_1469 = validate_transfer_satisfies_limit_price(move _1470, move _1471, move _1472, move _1473, move _1474)</td></tr></table>>];
    bb609__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">609</td></tr><tr><td align="left" balign="left">StorageLive(_1463)<br/>_1463 = ((_1434 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1465)<br/>_1465 = _1463<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1465)</td></tr></table>>];
    bb610__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">610</td></tr><tr><td align="left" balign="left">StorageDead(_1465)<br/>StorageDead(_1463)<br/>StorageDead(_1434)<br/>StorageDead(_1433)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb611__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">611</td></tr><tr><td align="left" balign="left">StorageDead(_1474)<br/>StorageDead(_1473)<br/>StorageDead(_1472)<br/>StorageDead(_1471)<br/>StorageDead(_1470)<br/></td></tr><tr><td align="left">_1468 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1469)</td></tr></table>>];
    bb612__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">612</td></tr><tr><td align="left" balign="left">StorageDead(_1469)<br/>_1475 = discriminant(_1468)<br/></td></tr><tr><td align="left">switchInt(move _1475)</td></tr></table>>];
    bb613__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">613</td></tr><tr><td align="left" balign="left">StorageLive(_1479)<br/>_1479 = ((_1468 as Continue).0: ())<br/>_1467 = _1479<br/>StorageDead(_1479)<br/>StorageDead(_1468)<br/>StorageDead(_1467)<br/>StorageLive(_1480)<br/>StorageLive(_1481)<br/>StorageLive(_1482)<br/>StorageLive(_1483)<br/>StorageLive(_1484)<br/>StorageLive(_1485)<br/>StorageLive(_1486)<br/>_1486 = _1213<br/>StorageLive(_1487)<br/>StorageLive(_1488)<br/>StorageLive(_1489)<br/>StorageLive(_1490)<br/>_1490 = _1087<br/></td></tr><tr><td align="left">_1489 = &lt;u32 as Cast&gt;::cast::&lt;u128&gt;(move _1490)</td></tr></table>>];
    bb614__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">614</td></tr><tr><td align="left" balign="left">StorageLive(_1476)<br/>_1476 = ((_1468 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1478)<br/>_1478 = _1476<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1478)</td></tr></table>>];
    bb615__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">615</td></tr><tr><td align="left" balign="left">StorageDead(_1478)<br/>StorageDead(_1476)<br/>StorageDead(_1468)<br/>StorageDead(_1467)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb616__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">616</td></tr><tr><td align="left" balign="left">StorageDead(_1490)<br/></td></tr><tr><td align="left">_1488 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1489)</td></tr></table>>];
    bb617__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">617</td></tr><tr><td align="left" balign="left">StorageDead(_1489)<br/>_1491 = discriminant(_1488)<br/></td></tr><tr><td align="left">switchInt(move _1491)</td></tr></table>>];
    bb618__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">618</td></tr><tr><td align="left" balign="left">StorageLive(_1495)<br/>_1495 = ((_1488 as Continue).0: u128)<br/>_1487 = _1495<br/>StorageDead(_1495)<br/></td></tr><tr><td align="left">_1485 = &lt;u128 as SafeMath&gt;::safe_mul(move _1486, move _1487)</td></tr></table>>];
    bb619__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">619</td></tr><tr><td align="left" balign="left">StorageLive(_1492)<br/>_1492 = ((_1488 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1494)<br/>_1494 = _1492<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1494)</td></tr></table>>];
    bb620__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">620</td></tr><tr><td align="left" balign="left">StorageDead(_1494)<br/>StorageDead(_1492)<br/>StorageDead(_1487)<br/>StorageDead(_1486)<br/>StorageDead(_1485)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb621__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">621</td></tr><tr><td align="left" balign="left">StorageDead(_1487)<br/>StorageDead(_1486)<br/></td></tr><tr><td align="left">_1484 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1485)</td></tr></table>>];
    bb622__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">622</td></tr><tr><td align="left" balign="left">StorageDead(_1485)<br/>_1496 = discriminant(_1484)<br/></td></tr><tr><td align="left">switchInt(move _1496)</td></tr></table>>];
    bb623__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">623</td></tr><tr><td align="left" balign="left">StorageLive(_1500)<br/>_1500 = ((_1484 as Continue).0: u128)<br/>_1483 = _1500<br/>StorageDead(_1500)<br/></td></tr><tr><td align="left">_1482 = &lt;u128 as SafeMath&gt;::safe_div(move _1483, const _)</td></tr></table>>];
    bb624__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">624</td></tr><tr><td align="left" balign="left">StorageLive(_1497)<br/>_1497 = ((_1484 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1499)<br/>_1499 = _1497<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1499)</td></tr></table>>];
    bb625__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">625</td></tr><tr><td align="left" balign="left">StorageDead(_1499)<br/>StorageDead(_1497)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb626__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">626</td></tr><tr><td align="left" balign="left">StorageDead(_1483)<br/></td></tr><tr><td align="left">_1481 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1482)</td></tr></table>>];
    bb627__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">627</td></tr><tr><td align="left" balign="left">StorageDead(_1482)<br/>_1501 = discriminant(_1481)<br/></td></tr><tr><td align="left">switchInt(move _1501)</td></tr></table>>];
    bb628__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">628</td></tr><tr><td align="left" balign="left">StorageLive(_1505)<br/>_1505 = ((_1481 as Continue).0: u128)<br/>_1480 = _1505<br/>StorageDead(_1505)<br/>StorageDead(_1488)<br/>StorageDead(_1484)<br/>StorageDead(_1481)<br/>StorageLive(_1506)<br/>StorageLive(_1507)<br/>StorageLive(_1508)<br/>StorageLive(_1509)<br/>StorageLive(_1510)<br/>_1510 = &amp;(*_12)<br/>StorageLive(_1511)<br/>StorageLive(_1512)<br/>_1512 = &amp;_2<br/>_1511 = &amp;(*_1512)<br/></td></tr><tr><td align="left">_1509 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _1510, move _1511)</td></tr></table>>];
    bb629__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">629</td></tr><tr><td align="left" balign="left">StorageLive(_1502)<br/>_1502 = ((_1481 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1504)<br/>_1504 = _1502<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1504)</td></tr></table>>];
    bb630__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">630</td></tr><tr><td align="left" balign="left">StorageDead(_1504)<br/>StorageDead(_1502)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb631__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">631</td></tr><tr><td align="left" balign="left">StorageDead(_1511)<br/>StorageDead(_1510)<br/></td></tr><tr><td align="left">_1508 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1509)</td></tr></table>>];
    bb632__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">632</td></tr><tr><td align="left" balign="left">StorageDead(_1509)<br/>_1513 = discriminant(_1508)<br/></td></tr><tr><td align="left">switchInt(move _1513)</td></tr></table>>];
    bb633__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">633</td></tr><tr><td align="left" balign="left">StorageLive(_1517)<br/>_1517 = move ((_1508 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1507 = move _1517<br/>StorageDead(_1517)<br/>_1903 = discriminant(_1508)<br/>StorageDead(_1512)<br/>StorageDead(_1508)<br/>StorageLive(_1518)<br/>StorageLive(_1519)<br/>StorageLive(_1520)<br/>StorageLive(_1521)<br/>StorageLive(_1522)<br/>StorageLive(_1523)<br/>StorageLive(_1524)<br/>_1524 = _1213<br/>StorageLive(_1525)<br/>_1525 = _1480<br/></td></tr><tr><td align="left">_1523 = &lt;u128 as SafeMath&gt;::safe_sub(move _1524, move _1525)</td></tr></table>>];
    bb634__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">634</td></tr><tr><td align="left" balign="left">StorageLive(_1514)<br/>_1514 = ((_1508 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1516)<br/>_1516 = _1514<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1516)</td></tr></table>>];
    bb635__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">635</td></tr><tr><td align="left" balign="left">StorageDead(_1516)<br/>StorageDead(_1514)<br/>_1901 = discriminant(_1508)<br/>StorageDead(_1512)<br/>StorageDead(_1508)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb636__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">636</td></tr><tr><td align="left" balign="left">StorageDead(_1525)<br/>StorageDead(_1524)<br/></td></tr><tr><td align="left">_1522 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1523)</td></tr></table>>];
    bb637__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">637</td></tr><tr><td align="left" balign="left">StorageDead(_1523)<br/>_1526 = discriminant(_1522)<br/></td></tr><tr><td align="left">switchInt(move _1526)</td></tr></table>>];
    bb638__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">638</td></tr><tr><td align="left" balign="left">StorageLive(_1530)<br/>_1530 = ((_1522 as Continue).0: u128)<br/>_1521 = _1530<br/>StorageDead(_1530)<br/>StorageLive(_1531)<br/>StorageLive(_1532)<br/>_1843 = const _<br/>_1532 = &amp;(*_1843)<br/>_1531 = &amp;(*_1532)<br/>StorageLive(_1534)<br/>StorageLive(_1535)<br/>StorageLive(_1536)<br/>StorageLive(_1537)<br/>_1537 = &amp;mut _1507<br/>_1536 = &amp;mut (*_1537)<br/></td></tr><tr><td align="left">_1535 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1536)</td></tr></table>>];
    bb639__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">639</td></tr><tr><td align="left" balign="left">StorageLive(_1527)<br/>_1527 = ((_1522 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1529)<br/>_1529 = _1527<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1529)</td></tr></table>>];
    bb640__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">640</td></tr><tr><td align="left" balign="left">StorageDead(_1529)<br/>StorageDead(_1527)<br/>StorageDead(_1521)<br/>StorageDead(_1520)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb641__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">641</td></tr><tr><td align="left" balign="left">_1534 = &amp;mut (*_1535)<br/>StorageDead(_1536)<br/>StorageLive(_1538)<br/>StorageLive(_1539)<br/>StorageLive(_1540)<br/>StorageLive(_1541)<br/>StorageLive(_1542)<br/>_1542 = &amp;mut (*_5)<br/>StorageLive(_1543)<br/>_1543 = _2<br/></td></tr><tr><td align="left">_1541 = User::get_spot_position_mut(move _1542, move _1543)</td></tr></table>>];
    bb642__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">642</td></tr><tr><td align="left" balign="left">StorageDead(_1543)<br/>StorageDead(_1542)<br/></td></tr><tr><td align="left">_1540 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1541)</td></tr></table>>];
    bb643__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">643</td></tr><tr><td align="left" balign="left">StorageDead(_1541)<br/>_1544 = discriminant(_1540)<br/></td></tr><tr><td align="left">switchInt(move _1544)</td></tr></table>>];
    bb644__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">644</td></tr><tr><td align="left" balign="left">StorageLive(_1548)<br/>_1548 = move ((_1540 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1539 = &amp;mut (*_1548)<br/>StorageDead(_1548)<br/>_1538 = &amp;mut (*_1539)<br/>StorageLive(_1549)<br/>StorageLive(_1550)<br/>StorageLive(_1551)<br/>StorageLive(_1552)<br/>StorageLive(_1553)<br/>_1553 = _1213<br/>StorageLive(_1554)<br/>_1554 = _1480<br/></td></tr><tr><td align="left">_1552 = &lt;u128 as SafeMath&gt;::safe_sub(move _1553, move _1554)</td></tr></table>>];
    bb645__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">645</td></tr><tr><td align="left" balign="left">StorageLive(_1545)<br/>_1545 = ((_1540 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1547)<br/>_1547 = _1545<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1547)</td></tr></table>>];
    bb646__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">646</td></tr><tr><td align="left" balign="left">StorageDead(_1547)<br/>StorageDead(_1545)<br/>StorageDead(_1538)<br/>StorageDead(_1534)<br/>StorageDead(_1531)<br/>StorageDead(_1521)<br/>StorageDead(_1520)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb647__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">647</td></tr><tr><td align="left" balign="left">StorageDead(_1554)<br/>StorageDead(_1553)<br/></td></tr><tr><td align="left">_1551 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _1552)</td></tr></table>>];
    bb648__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">648</td></tr><tr><td align="left" balign="left">StorageDead(_1552)<br/>_1555 = discriminant(_1551)<br/></td></tr><tr><td align="left">switchInt(move _1555)</td></tr></table>>];
    bb649__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">649</td></tr><tr><td align="left" balign="left">StorageLive(_1559)<br/>_1559 = ((_1551 as Continue).0: u128)<br/>_1550 = _1559<br/>StorageDead(_1559)<br/>_1549 = Option::&lt;u128&gt;::Some(move _1550)<br/>StorageDead(_1550)<br/></td></tr><tr><td align="left">_1520 = update_spot_balances_and_cumulative_deposits(move _1521, move _1531, move _1534, move _1538, const false, move _1549)</td></tr></table>>];
    bb650__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">650</td></tr><tr><td align="left" balign="left">StorageLive(_1556)<br/>_1556 = ((_1551 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1558)<br/>_1558 = _1556<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1558)</td></tr></table>>];
    bb651__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">651</td></tr><tr><td align="left" balign="left">StorageDead(_1558)<br/>StorageDead(_1556)<br/>StorageDead(_1550)<br/>StorageDead(_1549)<br/>StorageDead(_1538)<br/>StorageDead(_1534)<br/>StorageDead(_1531)<br/>StorageDead(_1521)<br/>StorageDead(_1520)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb652__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">652</td></tr><tr><td align="left" balign="left">StorageDead(_1549)<br/>StorageDead(_1538)<br/>StorageDead(_1534)<br/>StorageDead(_1531)<br/>StorageDead(_1521)<br/></td></tr><tr><td align="left">_1519 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1520)</td></tr></table>>];
    bb653__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">653</td></tr><tr><td align="left" balign="left">StorageDead(_1520)<br/>_1560 = discriminant(_1519)<br/></td></tr><tr><td align="left">switchInt(move _1560)</td></tr></table>>];
    bb654__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">654</td></tr><tr><td align="left" balign="left">StorageLive(_1564)<br/>_1564 = ((_1519 as Continue).0: ())<br/>_1518 = _1564<br/>StorageDead(_1564)<br/>StorageDead(_1551)<br/>StorageDead(_1540)<br/>StorageDead(_1539)<br/>StorageDead(_1537)<br/>StorageDead(_1535)<br/>StorageDead(_1532)<br/>StorageDead(_1522)<br/>StorageDead(_1519)<br/>StorageDead(_1518)<br/>StorageLive(_1565)<br/>StorageLive(_1566)<br/>StorageLive(_1567)<br/>StorageLive(_1568)<br/>_1568 = _1480<br/>StorageLive(_1569)<br/>StorageLive(_1570)<br/>_1842 = const _<br/>_1570 = &amp;(*_1842)<br/>_1569 = &amp;(*_1570)<br/>StorageLive(_1572)<br/>StorageLive(_1573)<br/>StorageLive(_1574)<br/>StorageLive(_1575)<br/>_1575 = &amp;mut _1507<br/>_1574 = &amp;mut (*_1575)<br/></td></tr><tr><td align="left">_1573 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1574)</td></tr></table>>];
    bb655__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">655</td></tr><tr><td align="left" balign="left">StorageLive(_1561)<br/>_1561 = ((_1519 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1563)<br/>_1563 = _1561<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1563)</td></tr></table>>];
    bb656__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">656</td></tr><tr><td align="left" balign="left">StorageDead(_1563)<br/>StorageDead(_1561)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb657__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">657</td></tr><tr><td align="left" balign="left">_1572 = &amp;mut (*_1573)<br/>StorageDead(_1574)<br/></td></tr><tr><td align="left">_1567 = update_revenue_pool_balances(move _1568, move _1569, move _1572)</td></tr></table>>];
    bb658__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">658</td></tr><tr><td align="left" balign="left">StorageDead(_1572)<br/>StorageDead(_1569)<br/>StorageDead(_1568)<br/></td></tr><tr><td align="left">_1566 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1567)</td></tr></table>>];
    bb659__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">659</td></tr><tr><td align="left" balign="left">StorageDead(_1567)<br/>_1576 = discriminant(_1566)<br/></td></tr><tr><td align="left">switchInt(move _1576)</td></tr></table>>];
    bb660__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">660</td></tr><tr><td align="left" balign="left">StorageLive(_1580)<br/>_1580 = ((_1566 as Continue).0: ())<br/>_1565 = _1580<br/>StorageDead(_1580)<br/>StorageDead(_1575)<br/>StorageDead(_1573)<br/>StorageDead(_1570)<br/>StorageDead(_1566)<br/>StorageDead(_1565)<br/>StorageLive(_1581)<br/>StorageLive(_1582)<br/>StorageLive(_1583)<br/>StorageLive(_1584)<br/>_1584 = _1213<br/>StorageLive(_1585)<br/>StorageLive(_1586)<br/>_1841 = const _<br/>_1586 = &amp;(*_1841)<br/>_1585 = &amp;(*_1586)<br/>StorageLive(_1588)<br/>StorageLive(_1589)<br/>StorageLive(_1590)<br/>StorageLive(_1591)<br/>_1591 = &amp;mut _1507<br/>_1590 = &amp;mut (*_1591)<br/></td></tr><tr><td align="left">_1589 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1590)</td></tr></table>>];
    bb661__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">661</td></tr><tr><td align="left" balign="left">StorageLive(_1577)<br/>_1577 = ((_1566 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1579)<br/>_1579 = _1577<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1579)</td></tr></table>>];
    bb662__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">662</td></tr><tr><td align="left" balign="left">StorageDead(_1579)<br/>StorageDead(_1577)<br/>StorageDead(_1575)<br/>StorageDead(_1573)<br/>StorageDead(_1570)<br/>StorageDead(_1566)<br/>StorageDead(_1565)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb663__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">663</td></tr><tr><td align="left" balign="left">_1588 = &amp;mut (*_1589)<br/>StorageDead(_1590)<br/>StorageLive(_1592)<br/>StorageLive(_1593)<br/>StorageLive(_1594)<br/>StorageLive(_1595)<br/>StorageLive(_1596)<br/>_1596 = &amp;mut (*_8)<br/>StorageLive(_1597)<br/>_1597 = _2<br/></td></tr><tr><td align="left">_1595 = User::get_spot_position_mut(move _1596, move _1597)</td></tr></table>>];
    bb664__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">664</td></tr><tr><td align="left" balign="left">StorageDead(_1597)<br/>StorageDead(_1596)<br/></td></tr><tr><td align="left">_1594 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1595)</td></tr></table>>];
    bb665__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">665</td></tr><tr><td align="left" balign="left">StorageDead(_1595)<br/>_1598 = discriminant(_1594)<br/></td></tr><tr><td align="left">switchInt(move _1598)</td></tr></table>>];
    bb666__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">666</td></tr><tr><td align="left" balign="left">StorageLive(_1602)<br/>_1602 = move ((_1594 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1593 = &amp;mut (*_1602)<br/>StorageDead(_1602)<br/>_1592 = &amp;mut (*_1593)<br/>StorageLive(_1603)<br/>StorageLive(_1604)<br/>_1604 = _1213<br/>_1603 = Option::&lt;u128&gt;::Some(move _1604)<br/>StorageDead(_1604)<br/></td></tr><tr><td align="left">_1583 = update_spot_balances_and_cumulative_deposits(move _1584, move _1585, move _1588, move _1592, const false, move _1603)</td></tr></table>>];
    bb667__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">667</td></tr><tr><td align="left" balign="left">StorageLive(_1599)<br/>_1599 = ((_1594 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1601)<br/>_1601 = _1599<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1601)</td></tr></table>>];
    bb668__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">668</td></tr><tr><td align="left" balign="left">StorageDead(_1601)<br/>StorageDead(_1599)<br/>StorageDead(_1592)<br/>StorageDead(_1588)<br/>StorageDead(_1585)<br/>StorageDead(_1584)<br/>StorageDead(_1583)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb669__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">669</td></tr><tr><td align="left" balign="left">StorageDead(_1603)<br/>StorageDead(_1592)<br/>StorageDead(_1588)<br/>StorageDead(_1585)<br/>StorageDead(_1584)<br/></td></tr><tr><td align="left">_1582 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1583)</td></tr></table>>];
    bb670__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">670</td></tr><tr><td align="left" balign="left">StorageDead(_1583)<br/>_1605 = discriminant(_1582)<br/></td></tr><tr><td align="left">switchInt(move _1605)</td></tr></table>>];
    bb671__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">671</td></tr><tr><td align="left" balign="left">StorageLive(_1609)<br/>_1609 = ((_1582 as Continue).0: ())<br/>_1581 = _1609<br/>StorageDead(_1609)<br/>StorageDead(_1594)<br/>StorageDead(_1593)<br/>StorageDead(_1591)<br/>StorageDead(_1589)<br/>StorageDead(_1586)<br/>StorageDead(_1582)<br/>StorageDead(_1581)<br/>_1506 = const ()<br/></td></tr><tr><td align="left">drop(_1507)</td></tr></table>>];
    bb672__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">672</td></tr><tr><td align="left" balign="left">StorageLive(_1606)<br/>_1606 = ((_1582 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1608)<br/>_1608 = _1606<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1608)</td></tr></table>>];
    bb673__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">673</td></tr><tr><td align="left" balign="left">StorageDead(_1608)<br/>StorageDead(_1606)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb674__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">674</td></tr><tr><td align="left" balign="left">StorageDead(_1507)<br/>StorageDead(_1506)<br/>StorageLive(_1610)<br/>StorageLive(_1611)<br/>StorageLive(_1612)<br/>StorageLive(_1613)<br/>StorageLive(_1614)<br/>_1614 = &amp;(*_12)<br/>StorageLive(_1615)<br/>StorageLive(_1616)<br/>_1616 = &amp;_1<br/>_1615 = &amp;(*_1616)<br/></td></tr><tr><td align="left">_1613 = SpotMarketMap::&lt;'_&gt;::get_ref_mut(move _1614, move _1615)</td></tr></table>>];
    bb675__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">675</td></tr><tr><td align="left" balign="left">StorageDead(_1615)<br/>StorageDead(_1614)<br/></td></tr><tr><td align="left">_1612 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _1613)</td></tr></table>>];
    bb676__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">676</td></tr><tr><td align="left" balign="left">StorageDead(_1613)<br/>_1617 = discriminant(_1612)<br/></td></tr><tr><td align="left">switchInt(move _1617)</td></tr></table>>];
    bb677__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">677</td></tr><tr><td align="left" balign="left">StorageLive(_1621)<br/>_1621 = move ((_1612 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_1611 = move _1621<br/>StorageDead(_1621)<br/>_1907 = discriminant(_1612)<br/>StorageDead(_1616)<br/>StorageDead(_1612)<br/>StorageLive(_1622)<br/>StorageLive(_1623)<br/>StorageLive(_1624)<br/>StorageLive(_1625)<br/>_1625 = _1222<br/>StorageLive(_1626)<br/>StorageLive(_1627)<br/>_1840 = const _<br/>_1627 = &amp;(*_1840)<br/>_1626 = &amp;(*_1627)<br/>StorageLive(_1629)<br/>StorageLive(_1630)<br/>StorageLive(_1631)<br/>StorageLive(_1632)<br/>_1632 = &amp;mut _1611<br/>_1631 = &amp;mut (*_1632)<br/></td></tr><tr><td align="left">_1630 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1631)</td></tr></table>>];
    bb678__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">678</td></tr><tr><td align="left" balign="left">StorageLive(_1618)<br/>_1618 = ((_1612 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1620)<br/>_1620 = _1618<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1620)</td></tr></table>>];
    bb679__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">679</td></tr><tr><td align="left" balign="left">StorageDead(_1620)<br/>StorageDead(_1618)<br/>_1905 = discriminant(_1612)<br/>StorageDead(_1616)<br/>StorageDead(_1612)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb680__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">680</td></tr><tr><td align="left" balign="left">_1629 = &amp;mut (*_1630)<br/>StorageDead(_1631)<br/>StorageLive(_1633)<br/>StorageLive(_1634)<br/>StorageLive(_1635)<br/>StorageLive(_1636)<br/>StorageLive(_1637)<br/>_1637 = &amp;mut (*_8)<br/>StorageLive(_1638)<br/>_1638 = _1<br/></td></tr><tr><td align="left">_1636 = User::force_get_spot_position_mut(move _1637, move _1638)</td></tr></table>>];
    bb681__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">681</td></tr><tr><td align="left" balign="left">StorageDead(_1638)<br/>StorageDead(_1637)<br/></td></tr><tr><td align="left">_1635 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1636)</td></tr></table>>];
    bb682__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">682</td></tr><tr><td align="left" balign="left">StorageDead(_1636)<br/>_1639 = discriminant(_1635)<br/></td></tr><tr><td align="left">switchInt(move _1639)</td></tr></table>>];
    bb683__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">683</td></tr><tr><td align="left" balign="left">StorageLive(_1643)<br/>_1643 = move ((_1635 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1634 = &amp;mut (*_1643)<br/>StorageDead(_1643)<br/>_1633 = &amp;mut (*_1634)<br/>StorageLive(_1644)<br/>StorageLive(_1645)<br/>_1645 = _1222<br/>_1644 = Option::&lt;u128&gt;::Some(move _1645)<br/>StorageDead(_1645)<br/></td></tr><tr><td align="left">_1624 = update_spot_balances_and_cumulative_deposits(move _1625, move _1626, move _1629, move _1633, const false, move _1644)</td></tr></table>>];
    bb684__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">684</td></tr><tr><td align="left" balign="left">StorageLive(_1640)<br/>_1640 = ((_1635 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1642)<br/>_1642 = _1640<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1642)</td></tr></table>>];
    bb685__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">685</td></tr><tr><td align="left" balign="left">StorageDead(_1642)<br/>StorageDead(_1640)<br/>StorageDead(_1633)<br/>StorageDead(_1629)<br/>StorageDead(_1626)<br/>StorageDead(_1625)<br/>StorageDead(_1624)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb686__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">686</td></tr><tr><td align="left" balign="left">StorageDead(_1644)<br/>StorageDead(_1633)<br/>StorageDead(_1629)<br/>StorageDead(_1626)<br/>StorageDead(_1625)<br/></td></tr><tr><td align="left">_1623 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1624)</td></tr></table>>];
    bb687__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">687</td></tr><tr><td align="left" balign="left">StorageDead(_1624)<br/>_1646 = discriminant(_1623)<br/></td></tr><tr><td align="left">switchInt(move _1646)</td></tr></table>>];
    bb688__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">688</td></tr><tr><td align="left" balign="left">StorageLive(_1650)<br/>_1650 = ((_1623 as Continue).0: ())<br/>_1622 = _1650<br/>StorageDead(_1650)<br/>StorageDead(_1635)<br/>StorageDead(_1634)<br/>StorageDead(_1632)<br/>StorageDead(_1630)<br/>StorageDead(_1627)<br/>StorageDead(_1623)<br/>StorageDead(_1622)<br/>StorageLive(_1651)<br/>StorageLive(_1652)<br/>StorageLive(_1653)<br/>StorageLive(_1654)<br/>_1654 = _1222<br/>StorageLive(_1655)<br/>StorageLive(_1656)<br/>_1839 = const _<br/>_1656 = &amp;(*_1839)<br/>_1655 = &amp;(*_1656)<br/>StorageLive(_1658)<br/>StorageLive(_1659)<br/>StorageLive(_1660)<br/>StorageLive(_1661)<br/>_1661 = &amp;mut _1611<br/>_1660 = &amp;mut (*_1661)<br/></td></tr><tr><td align="left">_1659 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _1660)</td></tr></table>>];
    bb689__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">689</td></tr><tr><td align="left" balign="left">StorageLive(_1647)<br/>_1647 = ((_1623 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1649)<br/>_1649 = _1647<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1649)</td></tr></table>>];
    bb690__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">690</td></tr><tr><td align="left" balign="left">StorageDead(_1649)<br/>StorageDead(_1647)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb691__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">691</td></tr><tr><td align="left" balign="left">_1658 = &amp;mut (*_1659)<br/>StorageDead(_1660)<br/>StorageLive(_1662)<br/>StorageLive(_1663)<br/>StorageLive(_1664)<br/>StorageLive(_1665)<br/>StorageLive(_1666)<br/>_1666 = &amp;mut (*_5)<br/>StorageLive(_1667)<br/>_1667 = _1<br/></td></tr><tr><td align="left">_1665 = User::force_get_spot_position_mut(move _1666, move _1667)</td></tr></table>>];
    bb692__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">692</td></tr><tr><td align="left" balign="left">StorageDead(_1667)<br/>StorageDead(_1666)<br/></td></tr><tr><td align="left">_1664 = &lt;std::result::Result&lt;&amp;mut SpotPosition, error::ErrorCode&gt; as Try&gt;::branch(move _1665)</td></tr></table>>];
    bb693__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">693</td></tr><tr><td align="left" balign="left">StorageDead(_1665)<br/>_1668 = discriminant(_1664)<br/></td></tr><tr><td align="left">switchInt(move _1668)</td></tr></table>>];
    bb694__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">694</td></tr><tr><td align="left" balign="left">StorageLive(_1672)<br/>_1672 = move ((_1664 as Continue).0: &amp;mut state::user::SpotPosition)<br/>_1663 = &amp;mut (*_1672)<br/>StorageDead(_1672)<br/>_1662 = &amp;mut (*_1663)<br/>StorageLive(_1673)<br/>StorageLive(_1674)<br/>_1674 = _1222<br/>_1673 = Option::&lt;u128&gt;::Some(move _1674)<br/>StorageDead(_1674)<br/></td></tr><tr><td align="left">_1653 = update_spot_balances_and_cumulative_deposits(move _1654, move _1655, move _1658, move _1662, const false, move _1673)</td></tr></table>>];
    bb695__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">695</td></tr><tr><td align="left" balign="left">StorageLive(_1669)<br/>_1669 = ((_1664 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1671)<br/>_1671 = _1669<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1671)</td></tr></table>>];
    bb696__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">696</td></tr><tr><td align="left" balign="left">StorageDead(_1671)<br/>StorageDead(_1669)<br/>StorageDead(_1662)<br/>StorageDead(_1658)<br/>StorageDead(_1655)<br/>StorageDead(_1654)<br/>StorageDead(_1653)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb697__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">697</td></tr><tr><td align="left" balign="left">StorageDead(_1673)<br/>StorageDead(_1662)<br/>StorageDead(_1658)<br/>StorageDead(_1655)<br/>StorageDead(_1654)<br/></td></tr><tr><td align="left">_1652 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1653)</td></tr></table>>];
    bb698__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">698</td></tr><tr><td align="left" balign="left">StorageDead(_1653)<br/>_1675 = discriminant(_1652)<br/></td></tr><tr><td align="left">switchInt(move _1675)</td></tr></table>>];
    bb699__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">699</td></tr><tr><td align="left" balign="left">StorageLive(_1679)<br/>_1679 = ((_1652 as Continue).0: ())<br/>_1651 = _1679<br/>StorageDead(_1679)<br/>StorageDead(_1664)<br/>StorageDead(_1663)<br/>StorageDead(_1661)<br/>StorageDead(_1659)<br/>StorageDead(_1656)<br/>StorageDead(_1652)<br/>StorageDead(_1651)<br/>_1610 = const ()<br/></td></tr><tr><td align="left">drop(_1611)</td></tr></table>>];
    bb700__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">700</td></tr><tr><td align="left" balign="left">StorageLive(_1676)<br/>_1676 = ((_1652 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1678)<br/>_1678 = _1676<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1678)</td></tr></table>>];
    bb701__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">701</td></tr><tr><td align="left" balign="left">StorageDead(_1678)<br/>StorageDead(_1676)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb702__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">702</td></tr><tr><td align="left" balign="left">StorageDead(_1611)<br/>StorageDead(_1610)<br/>StorageLive(_1681)<br/>StorageLive(_1682)<br/>StorageLive(_1683)<br/>StorageLive(_1684)<br/>_1684 = &amp;(*_5)<br/>StorageLive(_1685)<br/>_1685 = &amp;(*_11)<br/>StorageLive(_1686)<br/>_1686 = &amp;(*_12)<br/>StorageLive(_1687)<br/>_1687 = &amp;mut (*_13)<br/>StorageLive(_1688)<br/>_1688 = _17<br/>StorageLive(_1689)<br/>_1689 = _1068<br/></td></tr><tr><td align="left">_1683 = calculate_margin_freed(move _1684, move _1685, move _1686, move _1687, move _1688, move _1689)</td></tr></table>>];
    bb703__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">703</td></tr><tr><td align="left" balign="left">StorageDead(_1689)<br/>StorageDead(_1688)<br/>StorageDead(_1687)<br/>StorageDead(_1686)<br/>StorageDead(_1685)<br/>StorageDead(_1684)<br/></td></tr><tr><td align="left">_1682 = &lt;std::result::Result&lt;(u64, MarginCalculation), error::ErrorCode&gt; as Try&gt;::branch(move _1683)</td></tr></table>>];
    bb704__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">704</td></tr><tr><td align="left" balign="left">StorageDead(_1683)<br/>_1690 = discriminant(_1682)<br/></td></tr><tr><td align="left">switchInt(move _1690)</td></tr></table>>];
    bb705__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">705</td></tr><tr><td align="left" balign="left">StorageLive(_1694)<br/>_1694 = ((_1682 as Continue).0: (u64, state::margin_calculation::MarginCalculation))<br/>_1681 = _1694<br/>StorageDead(_1694)<br/>StorageLive(_1680)<br/>_1680 = (_1681.0: u64)<br/>StorageDead(_1682)<br/>StorageDead(_1681)<br/>StorageLive(_1695)<br/>StorageLive(_1696)<br/>StorageLive(_1697)<br/>StorageLive(_1698)<br/>_1698 = _932<br/>StorageLive(_1699)<br/>_1699 = _1680<br/></td></tr><tr><td align="left">_1697 = &lt;u64 as SafeMath&gt;::safe_add(move _1698, move _1699)</td></tr></table>>];
    bb706__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">706</td></tr><tr><td align="left" balign="left">StorageLive(_1691)<br/>_1691 = ((_1682 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1693)<br/>_1693 = _1691<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1693)</td></tr></table>>];
    bb707__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">707</td></tr><tr><td align="left" balign="left">StorageDead(_1693)<br/>StorageDead(_1691)<br/>StorageDead(_1682)<br/>StorageDead(_1681)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb708__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">708</td></tr><tr><td align="left" balign="left">StorageDead(_1699)<br/>StorageDead(_1698)<br/></td></tr><tr><td align="left">_1696 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1697)</td></tr></table>>];
    bb709__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">709</td></tr><tr><td align="left" balign="left">StorageDead(_1697)<br/>_1700 = discriminant(_1696)<br/></td></tr><tr><td align="left">switchInt(move _1700)</td></tr></table>>];
    bb710__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">710</td></tr><tr><td align="left" balign="left">StorageLive(_1704)<br/>_1704 = ((_1696 as Continue).0: u64)<br/>_1695 = _1704<br/>StorageDead(_1704)<br/>_932 = move _1695<br/>StorageDead(_1695)<br/>StorageDead(_1696)<br/>StorageLive(_1705)<br/>StorageLive(_1706)<br/>StorageLive(_1707)<br/>StorageLive(_1708)<br/>_1708 = &amp;mut (*_5)<br/>StorageLive(_1709)<br/>_1709 = _1680<br/></td></tr><tr><td align="left">_1707 = User::increment_margin_freed(move _1708, move _1709)</td></tr></table>>];
    bb711__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">711</td></tr><tr><td align="left" balign="left">StorageLive(_1701)<br/>_1701 = ((_1696 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1703)<br/>_1703 = _1701<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1703)</td></tr></table>>];
    bb712__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">712</td></tr><tr><td align="left" balign="left">StorageDead(_1703)<br/>StorageDead(_1701)<br/>StorageDead(_1695)<br/>StorageDead(_1696)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb713__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">713</td></tr><tr><td align="left" balign="left">StorageDead(_1709)<br/>StorageDead(_1708)<br/></td></tr><tr><td align="left">_1706 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1707)</td></tr></table>>];
    bb714__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">714</td></tr><tr><td align="left" balign="left">StorageDead(_1707)<br/>_1710 = discriminant(_1706)<br/></td></tr><tr><td align="left">switchInt(move _1710)</td></tr></table>>];
    bb715__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">715</td></tr><tr><td align="left" balign="left">StorageLive(_1714)<br/>_1714 = ((_1706 as Continue).0: ())<br/>_1705 = _1714<br/>StorageDead(_1714)<br/>StorageDead(_1706)<br/>StorageDead(_1705)<br/>StorageLive(_1715)<br/>StorageLive(_1716)<br/>StorageLive(_1717)<br/>_1717 = _1213<br/>StorageLive(_1718)<br/>_1718 = _1126<br/>_1716 = Ge(move _1717, move _1718)<br/></td></tr><tr><td align="left">switchInt(move _1716)</td></tr></table>>];
    bb716__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">716</td></tr><tr><td align="left" balign="left">StorageLive(_1711)<br/>_1711 = ((_1706 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1713)<br/>_1713 = _1711<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1713)</td></tr></table>>];
    bb717__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">717</td></tr><tr><td align="left" balign="left">StorageDead(_1713)<br/>StorageDead(_1711)<br/>StorageDead(_1706)<br/>StorageDead(_1705)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb718__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">718</td></tr><tr><td align="left" balign="left">StorageDead(_1718)<br/>StorageDead(_1717)<br/>StorageLive(_1719)<br/>StorageLive(_1720)<br/>_1720 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_1719 = User::exit_liquidation(move _1720)</td></tr></table>>];
    bb719__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">719</td></tr><tr><td align="left" balign="left">StorageDead(_1718)<br/>StorageDead(_1717)<br/>StorageLive(_1721)<br/>StorageLive(_1722)<br/>_1722 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1721 = is_user_bankrupt(move _1722)</td></tr></table>>];
    bb720__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">720</td></tr><tr><td align="left" balign="left">StorageDead(_1720)<br/>StorageDead(_1719)<br/>_1715 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb721__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">721</td></tr><tr><td align="left">switchInt(move _1721)</td></tr></table>>];
    bb722__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">722</td></tr><tr><td align="left" balign="left">StorageDead(_1722)<br/>StorageLive(_1723)<br/>StorageLive(_1724)<br/>_1724 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_1723 = User::enter_bankruptcy(move _1724)</td></tr></table>>];
    bb723__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">723</td></tr><tr><td align="left" balign="left">StorageDead(_1724)<br/>StorageDead(_1723)<br/>_1715 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb724__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">724</td></tr><tr><td align="left" balign="left">StorageDead(_1722)<br/>_1715 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb725__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">725</td></tr><tr><td align="left" balign="left">StorageDead(_1721)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb726__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">726</td></tr><tr><td align="left" balign="left">StorageDead(_1716)<br/>StorageDead(_1715)<br/>StorageLive(_1725)<br/>StorageLive(_1726)<br/>StorageLive(_1727)<br/>StorageLive(_1728)<br/>_1728 = math::margin::MarginRequirementType::Initial<br/></td></tr><tr><td align="left">_1727 = MarginContext::standard(move _1728)</td></tr></table>>];
    bb727__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">727</td></tr><tr><td align="left" balign="left">StorageDead(_1728)<br/>StorageLive(_1729)<br/>StorageLive(_1730)<br/>StorageLive(_1731)<br/>_1731 = _1<br/>StorageLive(_1732)<br/>StorageLive(_1733)<br/>StorageLive(_1734)<br/>_1734 = _1222<br/>_1733 = move _1734 as i128 (IntToInt)<br/>StorageDead(_1734)<br/>_1735 = Eq(_1733, const i128::MIN)<br/></td></tr><tr><td align="left">assert(!move _1735, &quot;attempt to negate `{}`, which would overflow&quot;, _1733)</td></tr></table>>];
    bb728__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">728</td></tr><tr><td align="left" balign="left">_1732 = Neg(move _1733)<br/>StorageDead(_1733)<br/>_1730 = (move _1731, move _1732)<br/>StorageDead(_1732)<br/>StorageDead(_1731)<br/>StorageLive(_1736)<br/>StorageLive(_1737)<br/>_1737 = _2<br/>StorageLive(_1738)<br/>StorageLive(_1739)<br/>_1739 = _1213<br/>_1738 = move _1739 as i128 (IntToInt)<br/>StorageDead(_1739)<br/>_1736 = (move _1737, move _1738)<br/>StorageDead(_1738)<br/>StorageDead(_1737)<br/>_1729 = [move _1730, move _1736]<br/>StorageDead(_1736)<br/>StorageDead(_1730)<br/></td></tr><tr><td align="left">_1726 = MarginContext::fuel_spot_deltas(move _1727, move _1729)</td></tr></table>>];
    bb729__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">729</td></tr><tr><td align="left" balign="left">StorageDead(_1729)<br/>StorageDead(_1727)<br/>StorageLive(_1740)<br/>_1740 = &amp;(*_8)<br/>StorageLive(_1741)<br/>_1741 = _14<br/></td></tr><tr><td align="left">_1725 = MarginContext::fuel_numerator(move _1726, move _1740, move _1741)</td></tr></table>>];
    bb730__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">730</td></tr><tr><td align="left" balign="left">StorageDead(_1741)<br/>StorageDead(_1740)<br/>StorageDead(_1726)<br/>StorageLive(_1742)<br/>StorageLive(_1743)<br/>StorageLive(_1744)<br/>StorageLive(_1745)<br/>StorageLive(_1746)<br/>_1746 = &amp;mut (*_8)<br/>StorageLive(_1747)<br/>_1747 = &amp;(*_11)<br/>StorageLive(_1748)<br/>_1748 = &amp;(*_12)<br/>StorageLive(_1749)<br/>_1749 = &amp;mut (*_13)<br/>StorageLive(_1750)<br/>_1750 = _1725<br/>StorageLive(_1751)<br/>_1751 = &amp;mut (*_10)<br/>StorageLive(_1752)<br/>_1752 = _14<br/></td></tr><tr><td align="left">_1745 = User::calculate_margin_and_increment_fuel_bonus(move _1746, move _1747, move _1748, move _1749, move _1750, move _1751, move _1752)</td></tr></table>>];
    bb731__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">731</td></tr><tr><td align="left" balign="left">StorageDead(_1752)<br/>StorageDead(_1751)<br/>StorageDead(_1750)<br/>StorageDead(_1749)<br/>StorageDead(_1748)<br/>StorageDead(_1747)<br/>StorageDead(_1746)<br/>StorageLive(_1753)<br/>_1753 = {closure@programs/drift/src/controller/liquidation.rs:1708:14: 1708:20}<br/></td></tr><tr><td align="left">_1744 = std::result::Result::&lt;MarginCalculation, error::ErrorCode&gt;::map::&lt;bool, {closure@programs/drift/src/controller/liquidation.rs:1708:14: 1708:20}&gt;(move _1745, move _1753)</td></tr></table>>];
    bb732__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">732</td></tr><tr><td align="left" balign="left">StorageDead(_1753)<br/>StorageDead(_1745)<br/></td></tr><tr><td align="left">_1743 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _1744)</td></tr></table>>];
    bb733__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">733</td></tr><tr><td align="left" balign="left">StorageDead(_1744)<br/>_1754 = discriminant(_1743)<br/></td></tr><tr><td align="left">switchInt(move _1754)</td></tr></table>>];
    bb734__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">734</td></tr><tr><td align="left" balign="left">StorageLive(_1758)<br/>_1758 = ((_1743 as Continue).0: bool)<br/>_1742 = _1758<br/>StorageDead(_1758)<br/>StorageDead(_1743)<br/>StorageLive(_1759)<br/>StorageLive(_1760)<br/>StorageLive(_1761)<br/>StorageLive(_1762)<br/>_1762 = _1742<br/></td></tr><tr><td align="left">switchInt(move _1762)</td></tr></table>>];
    bb735__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">735</td></tr><tr><td align="left" balign="left">StorageLive(_1755)<br/>_1755 = ((_1743 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1757)<br/>_1757 = _1755<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1757)</td></tr></table>>];
    bb736__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">736</td></tr><tr><td align="left" balign="left">StorageDead(_1757)<br/>StorageDead(_1755)<br/>StorageDead(_1743)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb737__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">737</td></tr><tr><td align="left" balign="left">StorageLive(_1763)<br/>_1763 = ()<br/>_1761 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1763)<br/>StorageDead(_1763)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb738__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">738</td></tr><tr><td align="left" balign="left">StorageLive(_1764)<br/>_1764 = error::ErrorCode::InsufficientCollateral<br/>StorageLive(_1765)<br/>StorageLive(_1766)<br/>StorageLive(_1767)<br/>StorageLive(_1768)<br/>StorageLive(_1769)<br/>StorageLive(_1770)<br/>StorageLive(_1771)<br/>StorageLive(_1772)<br/>StorageLive(_1773)<br/>StorageLive(_1774)<br/>StorageLive(_1775)<br/>_1838 = const _<br/>_1775 = &amp;(*_1838)<br/>_1774 = &amp;(*_1775)<br/>_1773 = move _1774 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_1774)<br/>StorageLive(_1777)<br/>StorageLive(_1778)<br/>StorageLive(_1779)<br/>StorageLive(_1780)<br/>StorageLive(_1781)<br/>StorageLive(_1782)<br/>StorageLive(_1783)<br/>_1783 = &amp;_1764<br/>_1782 = &amp;(*_1783)<br/></td></tr><tr><td align="left">_1781 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _1782)</td></tr></table>>];
    bb739__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">739</td></tr><tr><td align="left" balign="left">StorageDead(_1782)<br/>_1780 = [move _1781]<br/>StorageDead(_1781)<br/>_1779 = &amp;_1780<br/>_1778 = &amp;(*_1779)<br/>_1777 = move _1778 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_1778)<br/></td></tr><tr><td align="left">_1772 = Arguments::&lt;'_&gt;::new_v1(move _1773, move _1777)</td></tr></table>>];
    bb740__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">740</td></tr><tr><td align="left" balign="left">StorageDead(_1777)<br/>StorageDead(_1773)<br/></td></tr><tr><td align="left">_1771 = format(move _1772)</td></tr></table>>];
    bb741__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">741</td></tr><tr><td align="left" balign="left">StorageDead(_1772)<br/>StorageDead(_1783)<br/>StorageDead(_1780)<br/>StorageDead(_1779)<br/>StorageDead(_1775)<br/>_1770 = move _1771<br/>StorageDead(_1771)<br/>_1769 = &amp;_1770<br/>_1768 = &amp;(*_1769)<br/></td></tr><tr><td align="left">_1767 = &lt;String as Deref&gt;::deref(move _1768)</td></tr></table>>];
    bb742__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">742</td></tr><tr><td align="left" balign="left">_1766 = &amp;(*_1767)<br/>StorageDead(_1768)<br/></td></tr><tr><td align="left">_1765 = solana_program::log::sol_log(move _1766)</td></tr></table>>];
    bb743__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">743</td></tr><tr><td align="left" balign="left">StorageDead(_1766)<br/></td></tr><tr><td align="left">drop(_1770)</td></tr></table>>];
    bb744__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">744</td></tr><tr><td align="left" balign="left">StorageDead(_1770)<br/>StorageDead(_1769)<br/>StorageDead(_1767)<br/>StorageDead(_1765)<br/>StorageLive(_1784)<br/>StorageLive(_1785)<br/>StorageLive(_1786)<br/>_1786 = const &quot;Liquidator doesnt have enough collateral to take over borrow&quot;<br/>_1785 = &amp;(*_1786)<br/></td></tr><tr><td align="left">_1784 = solana_program::log::sol_log(move _1785)</td></tr></table>>];
    bb745__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">745</td></tr><tr><td align="left" balign="left">StorageDead(_1785)<br/>StorageDead(_1786)<br/>StorageDead(_1784)<br/>StorageLive(_1787)<br/>_1787 = _1764<br/>_1761 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _1787)<br/>StorageDead(_1787)<br/>StorageDead(_1764)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb746__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">746</td></tr><tr><td align="left" balign="left">StorageDead(_1762)<br/></td></tr><tr><td align="left">_1760 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _1761)</td></tr></table>>];
    bb747__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">747</td></tr><tr><td align="left" balign="left">StorageDead(_1761)<br/>_1788 = discriminant(_1760)<br/></td></tr><tr><td align="left">switchInt(move _1788)</td></tr></table>>];
    bb748__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">748</td></tr><tr><td align="left" balign="left">StorageLive(_1792)<br/>_1792 = ((_1760 as Continue).0: ())<br/>_1759 = _1792<br/>StorageDead(_1792)<br/>StorageDead(_1760)<br/>StorageDead(_1759)<br/>StorageLive(_1793)<br/>StorageLive(_1794)<br/>StorageLive(_1795)<br/>StorageLive(_1796)<br/>StorageLive(_1797)<br/>StorageLive(_1798)<br/>StorageLive(_1799)<br/>StorageLive(_1800)<br/>StorageLive(_1801)<br/>StorageLive(_1802)<br/>StorageLive(_1803)<br/>StorageLive(_1804)<br/>StorageLive(_1805)<br/>StorageLive(_1806)<br/>StorageLive(_1807)<br/>_1807 = _14<br/>StorageLive(_1808)<br/>_1808 = _922<br/>StorageLive(_1809)<br/>_1809 = LiquidationType::LiquidateSpot<br/>StorageLive(_1810)<br/>_1810 = (*_6)<br/>StorageLive(_1811)<br/>_1811 = (*_9)<br/>StorageLive(_1812)<br/>_1812 = (_866.3: u128)<br/>StorageLive(_1813)<br/>_1813 = (_866.1: i128)<br/>StorageLive(_1814)<br/>StorageLive(_1815)<br/>_1815 = &amp;(*_5)<br/></td></tr><tr><td align="left">_1814 = User::is_bankrupt(move _1815)</td></tr></table>>];
    bb749__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">749</td></tr><tr><td align="left" balign="left">StorageLive(_1789)<br/>_1789 = ((_1760 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1791)<br/>_1791 = _1789<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1791)</td></tr></table>>];
    bb750__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">750</td></tr><tr><td align="left" balign="left">StorageDead(_1791)<br/>StorageDead(_1789)<br/>StorageDead(_1760)<br/>StorageDead(_1759)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb751__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">751</td></tr><tr><td align="left" balign="left">StorageDead(_1815)<br/>StorageLive(_1816)<br/>_1816 = _932<br/>StorageLive(_1817)<br/>StorageLive(_1818)<br/>_1818 = _1<br/>StorageLive(_1819)<br/>_1819 = _413<br/>StorageLive(_1820)<br/>_1820 = _1222<br/>StorageLive(_1821)<br/>_1821 = _2<br/>StorageLive(_1822)<br/>_1822 = _602<br/>StorageLive(_1823)<br/>_1823 = _1213<br/>StorageLive(_1824)<br/>StorageLive(_1825)<br/>StorageLive(_1826)<br/>StorageLive(_1827)<br/>_1827 = _1480<br/></td></tr><tr><td align="left">_1826 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _1827)</td></tr></table>>];
    bb752__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">752</td></tr><tr><td align="left" balign="left">StorageDead(_1827)<br/></td></tr><tr><td align="left">_1825 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _1826)</td></tr></table>>];
    bb753__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">753</td></tr><tr><td align="left" balign="left">StorageDead(_1826)<br/>_1828 = discriminant(_1825)<br/></td></tr><tr><td align="left">switchInt(move _1828)</td></tr></table>>];
    bb754__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">754</td></tr><tr><td align="left" balign="left">StorageLive(_1832)<br/>_1832 = ((_1825 as Continue).0: u64)<br/>_1824 = _1832<br/>StorageDead(_1832)<br/>_1817 = LiquidateSpotRecord { asset_market_index: move _1818, asset_price: move _1819, asset_transfer: move _1820, liability_market_index: move _1821, liability_price: move _1822, liability_transfer: move _1823, if_fee: move _1824 }<br/>StorageDead(_1824)<br/>StorageDead(_1823)<br/>StorageDead(_1822)<br/>StorageDead(_1821)<br/>StorageDead(_1820)<br/>StorageDead(_1819)<br/>StorageDead(_1818)<br/>StorageLive(_1833)<br/></td></tr><tr><td align="left">_1833 = &lt;LiquidationRecord as Default&gt;::default()</td></tr></table>>];
    bb755__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">755</td></tr><tr><td align="left" balign="left">StorageLive(_1829)<br/>_1829 = ((_1825 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_1831)<br/>_1831 = _1829<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _1831)</td></tr></table>>];
    bb756__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">756</td></tr><tr><td align="left" balign="left">StorageDead(_1831)<br/>StorageDead(_1829)<br/>StorageDead(_1824)<br/>StorageDead(_1823)<br/>StorageDead(_1822)<br/>StorageDead(_1821)<br/>StorageDead(_1820)<br/>StorageDead(_1819)<br/>StorageDead(_1818)<br/>StorageDead(_1817)<br/>StorageDead(_1816)<br/>StorageDead(_1814)<br/>StorageDead(_1813)<br/>StorageDead(_1812)<br/>StorageDead(_1811)<br/>StorageDead(_1810)<br/>StorageDead(_1809)<br/>StorageDead(_1808)<br/>StorageDead(_1807)<br/>StorageDead(_1804)<br/>StorageDead(_1801)<br/>StorageDead(_1799)<br/>StorageDead(_1796)<br/>StorageDead(_1795)<br/>StorageDead(_1825)<br/>StorageDead(_1806)<br/>StorageDead(_1805)<br/>StorageDead(_1803)<br/>StorageDead(_1802)<br/>StorageDead(_1800)<br/>StorageDead(_1798)<br/>StorageDead(_1797)<br/>StorageDead(_1794)<br/>StorageDead(_1793)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb757__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">757</td></tr><tr><td align="left" balign="left">_1806 = LiquidationRecord { ts: move _1807, liquidation_type: move _1809, user: move _1810, liquidator: move _1811, margin_requirement: move _1812, total_collateral: move _1813, margin_freed: move _1816, liquidation_id: move _1808, bankrupt: move _1814, canceled_order_ids: move (_1833.9: std::vec::Vec&lt;u32&gt;), liquidate_perp: move (_1833.10: state::events::LiquidatePerpRecord), liquidate_spot: move _1817, liquidate_borrow_for_perp_pnl: move (_1833.12: state::events::LiquidateBorrowForPerpPnlRecord), liquidate_perp_pnl_for_deposit: move (_1833.13: state::events::LiquidatePerpPnlForDepositRecord), perp_bankruptcy: move (_1833.14: state::events::PerpBankruptcyRecord), spot_bankruptcy: move (_1833.15: state::events::SpotBankruptcyRecord) }<br/>StorageDead(_1817)<br/>StorageDead(_1816)<br/>StorageDead(_1814)<br/>StorageDead(_1813)<br/>StorageDead(_1812)<br/>StorageDead(_1811)<br/>StorageDead(_1810)<br/>StorageDead(_1809)<br/>StorageDead(_1808)<br/>StorageDead(_1807)<br/>_1805 = &amp;_1806<br/>_1804 = &amp;(*_1805)<br/></td></tr><tr><td align="left">_1803 = &lt;LiquidationRecord as anchor_lang::Event&gt;::data(move _1804)</td></tr></table>>];
    bb758__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">758</td></tr><tr><td align="left" balign="left">StorageDead(_1804)<br/>_1802 = &amp;_1803<br/>_1801 = &amp;(*_1802)<br/></td></tr><tr><td align="left">_1800 = &lt;Vec&lt;u8&gt; as Deref&gt;::deref(move _1801)</td></tr></table>>];
    bb759__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">759</td></tr><tr><td align="left" balign="left">_1799 = &amp;(*_1800)<br/>StorageDead(_1801)<br/>_1798 = [move _1799]<br/>StorageDead(_1799)<br/>_1797 = &amp;_1798<br/>_1796 = &amp;(*_1797)<br/>_1795 = move _1796 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_1796)<br/></td></tr><tr><td align="left">_1794 = solana_program::log::sol_log_data(move _1795)</td></tr></table>>];
    bb760__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">760</td></tr><tr><td align="left" balign="left">StorageDead(_1795)<br/></td></tr><tr><td align="left">drop(_1803)</td></tr></table>>];
    bb761__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">761</td></tr><tr><td align="left">drop(_1806)</td></tr></table>>];
    bb762__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">762</td></tr><tr><td align="left" balign="left">StorageDead(_1833)<br/>StorageDead(_1825)<br/>StorageDead(_1806)<br/>StorageDead(_1805)<br/>StorageDead(_1803)<br/>StorageDead(_1802)<br/>StorageDead(_1800)<br/>StorageDead(_1798)<br/>StorageDead(_1797)<br/>StorageDead(_1794)<br/>_1793 = const ()<br/>StorageDead(_1793)<br/>StorageLive(_1834)<br/>_1834 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _1834)<br/>StorageDead(_1834)<br/>StorageDead(_1742)<br/>StorageDead(_1725)<br/>StorageDead(_1680)<br/>StorageDead(_1480)<br/>StorageDead(_1392)<br/>StorageDead(_1317)<br/>StorageDead(_1222)<br/>StorageDead(_1213)<br/>StorageDead(_1208)<br/>StorageDead(_1189)<br/>StorageDead(_1174)<br/>StorageDead(_1155)<br/>StorageDead(_1142)<br/>StorageDead(_1126)<br/>StorageDead(_1087)<br/>StorageDead(_1077)<br/>StorageDead(_1068)<br/>StorageDead(_954)<br/></td></tr><tr><td align="left">drop(_933)</td></tr></table>>];
    bb763__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">763</td></tr><tr><td align="left" balign="left">_1872 = const false<br/>StorageDead(_933)<br/>StorageDead(_932)<br/>StorageDead(_922)<br/>StorageDead(_866)<br/>StorageDead(_851)<br/>StorageDead(_607)<br/>StorageDead(_606)<br/>StorageDead(_605)<br/>StorageDead(_604)<br/>StorageDead(_603)<br/>StorageDead(_602)<br/>StorageDead(_601)<br/>StorageDead(_418)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/>StorageDead(_412)<br/>_1873 = const false<br/>StorageDead(_236)<br/>_1874 = const false<br/>StorageDead(_110)<br/>StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb764__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">764</td></tr><tr><td align="left" balign="left">StorageDead(_1742)<br/>StorageDead(_1725)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb765__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">765</td></tr><tr><td align="left" balign="left">StorageDead(_1680)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb766__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">766</td></tr><tr><td align="left" balign="left">StorageDead(_1664)<br/>StorageDead(_1663)<br/>StorageDead(_1661)<br/>StorageDead(_1659)<br/>StorageDead(_1656)<br/>StorageDead(_1652)<br/>StorageDead(_1651)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb767__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">767</td></tr><tr><td align="left" balign="left">StorageDead(_1635)<br/>StorageDead(_1634)<br/>StorageDead(_1632)<br/>StorageDead(_1630)<br/>StorageDead(_1627)<br/>StorageDead(_1623)<br/>StorageDead(_1622)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb768__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">768</td></tr><tr><td align="left">drop(_1611)</td></tr></table>>];
    bb769__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">769</td></tr><tr><td align="left" balign="left">StorageDead(_1611)<br/>StorageDead(_1610)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb770__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">770</td></tr><tr><td align="left" balign="left">StorageDead(_1594)<br/>StorageDead(_1593)<br/>StorageDead(_1591)<br/>StorageDead(_1589)<br/>StorageDead(_1586)<br/>StorageDead(_1582)<br/>StorageDead(_1581)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb771__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">771</td></tr><tr><td align="left" balign="left">StorageDead(_1551)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb772__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">772</td></tr><tr><td align="left" balign="left">StorageDead(_1540)<br/>StorageDead(_1539)<br/>StorageDead(_1537)<br/>StorageDead(_1535)<br/>StorageDead(_1532)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb773__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">773</td></tr><tr><td align="left" balign="left">StorageDead(_1522)<br/>StorageDead(_1519)<br/>StorageDead(_1518)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb774__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">774</td></tr><tr><td align="left">drop(_1507)</td></tr></table>>];
    bb775__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">775</td></tr><tr><td align="left" balign="left">StorageDead(_1507)<br/>StorageDead(_1506)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb776__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">776</td></tr><tr><td align="left" balign="left">StorageDead(_1483)<br/>StorageDead(_1482)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb777__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">777</td></tr><tr><td align="left" balign="left">StorageDead(_1488)<br/>StorageDead(_1484)<br/>StorageDead(_1481)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb778__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">778</td></tr><tr><td align="left" balign="left">StorageDead(_1480)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb779__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">779</td></tr><tr><td align="left" balign="left">StorageDead(_1419)<br/></td></tr><tr><td align="left">drop(_1407)</td></tr></table>>];
    bb780__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">780</td></tr><tr><td align="left" balign="left">StorageDead(_1396)<br/>StorageDead(_1393)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb781__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">781</td></tr><tr><td align="left" balign="left">StorageDead(_1392)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb782__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">782</td></tr><tr><td align="left" balign="left">StorageDead(_1344)<br/></td></tr><tr><td align="left">drop(_1332)</td></tr></table>>];
    bb783__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">783</td></tr><tr><td align="left" balign="left">StorageDead(_1321)<br/>StorageDead(_1318)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb784__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">784</td></tr><tr><td align="left" balign="left">StorageDead(_1317)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb785__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">785</td></tr><tr><td align="left" balign="left">StorageDead(_1222)<br/>StorageDead(_1213)<br/>StorageDead(_1208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb786__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">786</td></tr><tr><td align="left" balign="left">StorageDead(_1193)<br/>StorageDead(_1190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb787__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">787</td></tr><tr><td align="left" balign="left">StorageDead(_1189)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb788__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">788</td></tr><tr><td align="left" balign="left">StorageDead(_1174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb789__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">789</td></tr><tr><td align="left" balign="left">StorageDead(_1155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb790__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">790</td></tr><tr><td align="left" balign="left">StorageDead(_1142)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb791__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">791</td></tr><tr><td align="left" balign="left">StorageDead(_1126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb792__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">792</td></tr><tr><td align="left" balign="left">StorageDead(_1091)<br/>StorageDead(_1088)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb793__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">793</td></tr><tr><td align="left" balign="left">StorageDead(_1087)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb794__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">794</td></tr><tr><td align="left" balign="left">StorageDead(_1077)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb795__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">795</td></tr><tr><td align="left" balign="left">StorageDead(_1068)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb796__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">796</td></tr><tr><td align="left" balign="left">StorageDead(_1024)<br/>StorageDead(_1023)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb797__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">797</td></tr><tr><td align="left" balign="left">StorageDead(_993)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb798__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">798</td></tr><tr><td align="left" balign="left">StorageDead(_984)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb799__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">799</td></tr><tr><td align="left" balign="left">StorageDead(_966)<br/>StorageDead(_958)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb800__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">800</td></tr><tr><td align="left" balign="left">StorageDead(_957)<br/>StorageDead(_955)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb801__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">801</td></tr><tr><td align="left" balign="left">StorageDead(_954)<br/></td></tr><tr><td align="left">switchInt(_1872)</td></tr></table>>];
    bb802__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">802</td></tr><tr><td align="left" balign="left">_1872 = const false<br/>StorageDead(_933)<br/>StorageDead(_932)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb803__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">803</td></tr><tr><td align="left" balign="left">StorageDead(_922)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb804__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">804</td></tr><tr><td align="left" balign="left">StorageDead(_909)<br/>StorageDead(_907)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb805__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">805</td></tr><tr><td align="left" balign="left">StorageDead(_884)<br/>StorageDead(_882)<br/>StorageDead(_881)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb806__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">806</td></tr><tr><td align="left" balign="left">StorageDead(_866)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb807__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">807</td></tr><tr><td align="left" balign="left">StorageDead(_851)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb808__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">808</td></tr><tr><td align="left" balign="left">StorageDead(_607)<br/>StorageDead(_606)<br/>StorageDead(_605)<br/>StorageDead(_604)<br/>StorageDead(_603)<br/>StorageDead(_602)<br/>StorageDead(_601)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb809__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">809</td></tr><tr><td align="left" balign="left">StorageDead(_609)<br/>StorageDead(_778)<br/>StorageDead(_775)<br/>StorageDead(_772)<br/>StorageDead(_769)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb810__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">810</td></tr><tr><td align="left" balign="left">StorageDead(_701)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb811__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">811</td></tr><tr><td align="left" balign="left">StorageDead(_654)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb812__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">812</td></tr><tr><td align="left" balign="left">StorageDead(_621)<br/>StorageDead(_620)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb813__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">813</td></tr><tr><td align="left">drop(_609)</td></tr></table>>];
    bb814__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">814</td></tr><tr><td align="left" balign="left">StorageDead(_609)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb815__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">815</td></tr><tr><td align="left" balign="left">StorageDead(_608)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb816__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">816</td></tr><tr><td align="left" balign="left">StorageDead(_418)<br/>StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_415)<br/>StorageDead(_414)<br/>StorageDead(_413)<br/>StorageDead(_412)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb817__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">817</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>StorageDead(_589)<br/>StorageDead(_586)<br/>StorageDead(_583)<br/>StorageDead(_580)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb818__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">818</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb819__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">819</td></tr><tr><td align="left" balign="left">StorageDead(_465)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb820__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">820</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_431)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb821__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">821</td></tr><tr><td align="left">drop(_420)</td></tr></table>>];
    bb822__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">822</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb823__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">823</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb824__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">824</td></tr><tr><td align="left" balign="left">_1873 = const false<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb825__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">825</td></tr><tr><td align="left" balign="left">_1874 = const false<br/>StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb826__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">826</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb827__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">827</td></tr><tr><td align="left">return</td></tr></table>>];
    bb828__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">828 (cleanup)</td></tr><tr><td align="left">drop(_1803)</td></tr></table>>];
    bb829__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">829 (cleanup)</td></tr><tr><td align="left">drop(_1806)</td></tr></table>>];
    bb830__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">830 (cleanup)</td></tr><tr><td align="left">drop(_1770)</td></tr></table>>];
    bb831__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">831 (cleanup)</td></tr><tr><td align="left">drop(_1611)</td></tr></table>>];
    bb832__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">832 (cleanup)</td></tr><tr><td align="left">drop(_1507)</td></tr></table>>];
    bb833__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">833 (cleanup)</td></tr><tr><td align="left">drop(_1444)</td></tr></table>>];
    bb834__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">834 (cleanup)</td></tr><tr><td align="left">drop(_1407)</td></tr></table>>];
    bb835__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">835 (cleanup)</td></tr><tr><td align="left">drop(_1369)</td></tr></table>>];
    bb836__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">836 (cleanup)</td></tr><tr><td align="left">drop(_1332)</td></tr></table>>];
    bb837__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">837 (cleanup)</td></tr><tr><td align="left">drop(_1296)</td></tr></table>>];
    bb838__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">838 (cleanup)</td></tr><tr><td align="left">drop(_1271)</td></tr></table>>];
    bb839__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">839 (cleanup)</td></tr><tr><td align="left">drop(_1249)</td></tr></table>>];
    bb840__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">840 (cleanup)</td></tr><tr><td align="left">drop(_1110)</td></tr></table>>];
    bb841__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">841 (cleanup)</td></tr><tr><td align="left">drop(_1044)</td></tr></table>>];
    bb842__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">842 (cleanup)</td></tr><tr><td align="left">drop(_1047)</td></tr></table>>];
    bb843__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">843 (cleanup)</td></tr><tr><td align="left">drop(_1064)</td></tr></table>>];
    bb844__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">844 (cleanup)</td></tr><tr><td align="left">drop(_1057)</td></tr></table>>];
    bb845__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">845 (cleanup)</td></tr><tr><td align="left">drop(_892)</td></tr></table>>];
    bb846__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">846 (cleanup)</td></tr><tr><td align="left">drop(_828)</td></tr></table>>];
    bb847__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">847 (cleanup)</td></tr><tr><td align="left">drop(_809)</td></tr></table>>];
    bb848__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">848 (cleanup)</td></tr><tr><td align="left">drop(_745)</td></tr></table>>];
    bb849__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">849 (cleanup)</td></tr><tr><td align="left">drop(_726)</td></tr></table>>];
    bb850__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">850 (cleanup)</td></tr><tr><td align="left">drop(_678)</td></tr></table>>];
    bb851__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">851 (cleanup)</td></tr><tr><td align="left">drop(_609)</td></tr></table>>];
    bb852__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">852 (cleanup)</td></tr><tr><td align="left">drop(_556)</td></tr></table>>];
    bb853__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">853 (cleanup)</td></tr><tr><td align="left">drop(_537)</td></tr></table>>];
    bb854__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">854 (cleanup)</td></tr><tr><td align="left">drop(_489)</td></tr></table>>];
    bb855__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">855 (cleanup)</td></tr><tr><td align="left">drop(_420)</td></tr></table>>];
    bb856__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">856 (cleanup)</td></tr><tr><td align="left">drop(_335)</td></tr></table>>];
    bb857__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">857 (cleanup)</td></tr><tr><td align="left">drop(_316)</td></tr></table>>];
    bb858__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">858 (cleanup)</td></tr><tr><td align="left">drop(_281)</td></tr></table>>];
    bb859__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">859 (cleanup)</td></tr><tr><td align="left">drop(_262)</td></tr></table>>];
    bb860__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">860 (cleanup)</td></tr><tr><td align="left">drop(_209)</td></tr></table>>];
    bb861__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">861 (cleanup)</td></tr><tr><td align="left">drop(_190)</td></tr></table>>];
    bb862__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">862 (cleanup)</td></tr><tr><td align="left">drop(_155)</td></tr></table>>];
    bb863__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">863 (cleanup)</td></tr><tr><td align="left">drop(_136)</td></tr></table>>];
    bb864__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">864 (cleanup)</td></tr><tr><td align="left">drop(_97)</td></tr></table>>];
    bb865__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">865 (cleanup)</td></tr><tr><td align="left">drop(_78)</td></tr></table>>];
    bb866__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">866 (cleanup)</td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb867__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">867 (cleanup)</td></tr><tr><td align="left">drop(_34)</td></tr></table>>];
    bb868__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">868 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb869__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">869</td></tr><tr><td align="left" balign="left">_1895 = discriminant(_1111)<br/>StorageDead(_1115)<br/>_1871 = const false<br/>StorageDead(_1111)<br/>StorageDead(_1110)<br/>StorageDead(_1108)<br/>StorageDead(_1091)<br/>StorageDead(_1088)<br/>StorageLive(_1126)<br/>StorageLive(_1127)<br/>StorageLive(_1128)<br/>StorageLive(_1129)<br/>_1129 = _1068<br/>StorageLive(_1130)<br/>_1130 = _415<br/>StorageLive(_1131)<br/>_1131 = _416<br/>StorageLive(_1132)<br/>_1132 = _1077<br/>StorageLive(_1133)<br/>_1133 = _605<br/>StorageLive(_1134)<br/>_1134 = _603<br/>StorageLive(_1135)<br/>_1135 = _602<br/>StorageLive(_1136)<br/>_1136 = _1087<br/></td></tr><tr><td align="left">_1128 = calculate_liability_transfer_to_cover_margin_shortage(move _1129, move _1130, move _1131, move _1132, move _1133, move _1134, move _1135, move _1136)</td></tr></table>>];
    bb870__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">870</td></tr><tr><td align="left" balign="left">_1897 = discriminant(_1333)<br/>StorageDead(_1337)<br/>_1870 = const false<br/>StorageDead(_1333)<br/>StorageDead(_1332)<br/>StorageDead(_1330)<br/>StorageDead(_1321)<br/>StorageDead(_1318)<br/>StorageLive(_1358)<br/>StorageLive(_1359)<br/>StorageLive(_1360)<br/>StorageLive(_1361)<br/>_1361 = _1317<br/></td></tr><tr><td align="left">switchInt(move _1361)</td></tr></table>>];
    bb871__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">871</td></tr><tr><td align="left" balign="left">_1899 = discriminant(_1408)<br/>StorageDead(_1412)<br/>_1869 = const false<br/>StorageDead(_1408)<br/>StorageDead(_1407)<br/>StorageDead(_1405)<br/>StorageDead(_1396)<br/>StorageDead(_1393)<br/>StorageLive(_1433)<br/>StorageLive(_1434)<br/>StorageLive(_1435)<br/>StorageLive(_1436)<br/>_1436 = _1392<br/></td></tr><tr><td align="left">switchInt(move _1436)</td></tr></table>>];
    bb872__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">872</td></tr><tr><td align="left" balign="left">_1909 = discriminant(_1408)<br/>StorageDead(_1412)<br/>_1869 = const false<br/>StorageDead(_1408)<br/>StorageDead(_1407)<br/>StorageDead(_1405)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb873__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">873</td></tr><tr><td align="left" balign="left">_1911 = discriminant(_1333)<br/>StorageDead(_1337)<br/>_1870 = const false<br/>StorageDead(_1333)<br/>StorageDead(_1332)<br/>StorageDead(_1330)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb874__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">874</td></tr><tr><td align="left" balign="left">_1913 = discriminant(_1111)<br/>StorageDead(_1115)<br/>_1871 = const false<br/>StorageDead(_1111)<br/>StorageDead(_1110)<br/>StorageDead(_1108)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb875__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">875</td></tr><tr><td align="left">drop(_933)</td></tr></table>>];
    bb876__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">876</td></tr><tr><td align="left">drop(_236)</td></tr></table>>];
    bb877__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">877</td></tr><tr><td align="left">switchInt(_1873)</td></tr></table>>];
    bb878__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">878</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb879__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">879</td></tr><tr><td align="left">switchInt(_1874)</td></tr></table>>];
    bb880__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">880 (cleanup)</td></tr><tr><td align="left" balign="left">_1915 = discriminant(_1612)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb881__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">881 (cleanup)</td></tr><tr><td align="left" balign="left">_1916 = discriminant(_1508)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb882__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">882 (cleanup)</td></tr><tr><td align="left" balign="left">_1917 = discriminant(_1408)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb883__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">883 (cleanup)</td></tr><tr><td align="left" balign="left">_1918 = discriminant(_1333)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb884__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">884 (cleanup)</td></tr><tr><td align="left" balign="left">_1919 = discriminant(_1111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb885__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">885 (cleanup)</td></tr><tr><td align="left">drop(_933)</td></tr></table>>];
    bb886__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">886 (cleanup)</td></tr><tr><td align="left">switchInt(_1872)</td></tr></table>>];
    bb887__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">887 (cleanup)</td></tr><tr><td align="left" balign="left">_1920 = discriminant(_934)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb888__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">888 (cleanup)</td></tr><tr><td align="left" balign="left">_1921 = discriminant(_610)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb889__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">889 (cleanup)</td></tr><tr><td align="left" balign="left">_1922 = discriminant(_421)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb890__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">890 (cleanup)</td></tr><tr><td align="left">drop(_236)</td></tr></table>>];
    bb891__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">891 (cleanup)</td></tr><tr><td align="left">switchInt(_1873)</td></tr></table>>];
    bb892__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">892 (cleanup)</td></tr><tr><td align="left" balign="left">_1923 = discriminant(_237)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb893__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">893 (cleanup)</td></tr><tr><td align="left">drop(_110)</td></tr></table>>];
    bb894__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">894 (cleanup)</td></tr><tr><td align="left">switchInt(_1874)</td></tr></table>>];
    bb895__0_334 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">895 (cleanup)</td></tr><tr><td align="left" balign="left">_1924 = discriminant(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_334 -> bb1__0_334 [label="return"];
    bb1__0_334 -> bb3__0_334 [label="0"];
    bb1__0_334 -> bb2__0_334 [label="otherwise"];
    bb2__0_334 -> bb4__0_334 [label="return"];
    bb3__0_334 -> bb15__0_334 [label=""];
    bb4__0_334 -> bb5__0_334 [label="return"];
    bb5__0_334 -> bb6__0_334 [label="return"];
    bb6__0_334 -> bb7__0_334 [label="return"];
    bb6__0_334 -> bb867__0_334 [label="unwind"];
    bb7__0_334 -> bb8__0_334 [label="return"];
    bb7__0_334 -> bb867__0_334 [label="unwind"];
    bb8__0_334 -> bb9__0_334 [label="return"];
    bb8__0_334 -> bb868__0_334 [label="unwind"];
    bb9__0_334 -> bb10__0_334 [label="return"];
    bb10__0_334 -> bb11__0_334 [label="return"];
    bb11__0_334 -> bb12__0_334 [label="return"];
    bb11__0_334 -> bb866__0_334 [label="unwind"];
    bb12__0_334 -> bb13__0_334 [label="return"];
    bb12__0_334 -> bb866__0_334 [label="unwind"];
    bb13__0_334 -> bb14__0_334 [label="return"];
    bb13__0_334 -> bb868__0_334 [label="unwind"];
    bb14__0_334 -> bb15__0_334 [label=""];
    bb15__0_334 -> bb16__0_334 [label="return"];
    bb16__0_334 -> bb17__0_334 [label="0"];
    bb16__0_334 -> bb19__0_334 [label="1"];
    bb16__0_334 -> bb18__0_334 [label="otherwise"];
    bb17__0_334 -> bb21__0_334 [label="return"];
    bb19__0_334 -> bb20__0_334 [label="return"];
    bb20__0_334 -> bb826__0_334 [label=""];
    bb21__0_334 -> bb23__0_334 [label="0"];
    bb21__0_334 -> bb22__0_334 [label="otherwise"];
    bb22__0_334 -> bb24__0_334 [label="return"];
    bb23__0_334 -> bb35__0_334 [label=""];
    bb24__0_334 -> bb25__0_334 [label="return"];
    bb25__0_334 -> bb26__0_334 [label="return"];
    bb26__0_334 -> bb27__0_334 [label="return"];
    bb26__0_334 -> bb865__0_334 [label="unwind"];
    bb27__0_334 -> bb28__0_334 [label="return"];
    bb27__0_334 -> bb865__0_334 [label="unwind"];
    bb28__0_334 -> bb29__0_334 [label="return"];
    bb28__0_334 -> bb868__0_334 [label="unwind"];
    bb29__0_334 -> bb30__0_334 [label="return"];
    bb30__0_334 -> bb31__0_334 [label="return"];
    bb31__0_334 -> bb32__0_334 [label="return"];
    bb31__0_334 -> bb864__0_334 [label="unwind"];
    bb32__0_334 -> bb33__0_334 [label="return"];
    bb32__0_334 -> bb864__0_334 [label="unwind"];
    bb33__0_334 -> bb34__0_334 [label="return"];
    bb33__0_334 -> bb868__0_334 [label="unwind"];
    bb34__0_334 -> bb35__0_334 [label=""];
    bb35__0_334 -> bb36__0_334 [label="return"];
    bb36__0_334 -> bb37__0_334 [label="0"];
    bb36__0_334 -> bb38__0_334 [label="1"];
    bb36__0_334 -> bb18__0_334 [label="otherwise"];
    bb37__0_334 -> bb40__0_334 [label="return"];
    bb38__0_334 -> bb39__0_334 [label="return"];
    bb39__0_334 -> bb826__0_334 [label=""];
    bb40__0_334 -> bb41__0_334 [label="return"];
    bb40__0_334 -> bb868__0_334 [label="unwind"];
    bb41__0_334 -> bb42__0_334 [label="0"];
    bb41__0_334 -> bb43__0_334 [label="1"];
    bb41__0_334 -> bb18__0_334 [label="otherwise"];
    bb42__0_334 -> bb45__0_334 [label="return"];
    bb42__0_334 -> bb894__0_334 [label="unwind"];
    bb43__0_334 -> bb44__0_334 [label="return"];
    bb43__0_334 -> bb895__0_334 [label="unwind"];
    bb44__0_334 -> bb825__0_334 [label=""];
    bb45__0_334 -> bb46__0_334 [label="return"];
    bb45__0_334 -> bb894__0_334 [label="unwind"];
    bb46__0_334 -> bb48__0_334 [label="0"];
    bb46__0_334 -> bb47__0_334 [label="otherwise"];
    bb47__0_334 -> bb49__0_334 [label="return"];
    bb47__0_334 -> bb894__0_334 [label="unwind"];
    bb48__0_334 -> bb61__0_334 [label=""];
    bb49__0_334 -> bb50__0_334 [label="return"];
    bb49__0_334 -> bb894__0_334 [label="unwind"];
    bb50__0_334 -> bb51__0_334 [label="return"];
    bb50__0_334 -> bb894__0_334 [label="unwind"];
    bb51__0_334 -> bb52__0_334 [label="return"];
    bb51__0_334 -> bb863__0_334 [label="unwind"];
    bb52__0_334 -> bb53__0_334 [label="return"];
    bb52__0_334 -> bb863__0_334 [label="unwind"];
    bb53__0_334 -> bb54__0_334 [label="return"];
    bb53__0_334 -> bb894__0_334 [label="unwind"];
    bb54__0_334 -> bb55__0_334 [label="return"];
    bb54__0_334 -> bb894__0_334 [label="unwind"];
    bb55__0_334 -> bb56__0_334 [label="return"];
    bb55__0_334 -> bb894__0_334 [label="unwind"];
    bb56__0_334 -> bb57__0_334 [label="return"];
    bb56__0_334 -> bb894__0_334 [label="unwind"];
    bb57__0_334 -> bb58__0_334 [label="return"];
    bb57__0_334 -> bb862__0_334 [label="unwind"];
    bb58__0_334 -> bb59__0_334 [label="return"];
    bb58__0_334 -> bb862__0_334 [label="unwind"];
    bb59__0_334 -> bb60__0_334 [label="return"];
    bb59__0_334 -> bb894__0_334 [label="unwind"];
    bb60__0_334 -> bb61__0_334 [label=""];
    bb61__0_334 -> bb62__0_334 [label="return"];
    bb61__0_334 -> bb894__0_334 [label="unwind"];
    bb62__0_334 -> bb63__0_334 [label="0"];
    bb62__0_334 -> bb64__0_334 [label="1"];
    bb62__0_334 -> bb18__0_334 [label="otherwise"];
    bb63__0_334 -> bb66__0_334 [label="return"];
    bb63__0_334 -> bb894__0_334 [label="unwind"];
    bb64__0_334 -> bb65__0_334 [label="return"];
    bb64__0_334 -> bb894__0_334 [label="unwind"];
    bb65__0_334 -> bb879__0_334 [label=""];
    bb66__0_334 -> bb68__0_334 [label="0"];
    bb66__0_334 -> bb67__0_334 [label="otherwise"];
    bb67__0_334 -> bb83__0_334 [label=""];
    bb68__0_334 -> bb69__0_334 [label="return"];
    bb68__0_334 -> bb894__0_334 [label="unwind"];
    bb69__0_334 -> bb70__0_334 [label="return"];
    bb69__0_334 -> bb894__0_334 [label="unwind"];
    bb70__0_334 -> bb71__0_334 [label="return"];
    bb70__0_334 -> bb894__0_334 [label="unwind"];
    bb71__0_334 -> bb72__0_334 [label="return"];
    bb71__0_334 -> bb861__0_334 [label="unwind"];
    bb72__0_334 -> bb73__0_334 [label="return"];
    bb72__0_334 -> bb861__0_334 [label="unwind"];
    bb73__0_334 -> bb74__0_334 [label="return"];
    bb73__0_334 -> bb894__0_334 [label="unwind"];
    bb74__0_334 -> bb75__0_334 [label="return"];
    bb74__0_334 -> bb894__0_334 [label="unwind"];
    bb75__0_334 -> bb76__0_334 [label="return"];
    bb75__0_334 -> bb894__0_334 [label="unwind"];
    bb76__0_334 -> bb77__0_334 [label="return"];
    bb76__0_334 -> bb894__0_334 [label="unwind"];
    bb77__0_334 -> bb78__0_334 [label="return"];
    bb77__0_334 -> bb894__0_334 [label="unwind"];
    bb78__0_334 -> bb79__0_334 [label="return"];
    bb78__0_334 -> bb894__0_334 [label="unwind"];
    bb79__0_334 -> bb80__0_334 [label="return"];
    bb79__0_334 -> bb860__0_334 [label="unwind"];
    bb80__0_334 -> bb81__0_334 [label="return"];
    bb80__0_334 -> bb860__0_334 [label="unwind"];
    bb81__0_334 -> bb82__0_334 [label="return"];
    bb81__0_334 -> bb894__0_334 [label="unwind"];
    bb82__0_334 -> bb83__0_334 [label=""];
    bb83__0_334 -> bb84__0_334 [label="return"];
    bb83__0_334 -> bb894__0_334 [label="unwind"];
    bb84__0_334 -> bb85__0_334 [label="0"];
    bb84__0_334 -> bb86__0_334 [label="1"];
    bb84__0_334 -> bb18__0_334 [label="otherwise"];
    bb85__0_334 -> bb88__0_334 [label="return"];
    bb85__0_334 -> bb894__0_334 [label="unwind"];
    bb86__0_334 -> bb87__0_334 [label="return"];
    bb86__0_334 -> bb894__0_334 [label="unwind"];
    bb87__0_334 -> bb879__0_334 [label=""];
    bb88__0_334 -> bb89__0_334 [label="return"];
    bb88__0_334 -> bb894__0_334 [label="unwind"];
    bb89__0_334 -> bb90__0_334 [label="return"];
    bb89__0_334 -> bb894__0_334 [label="unwind"];
    bb90__0_334 -> bb91__0_334 [label="0"];
    bb90__0_334 -> bb92__0_334 [label="1"];
    bb90__0_334 -> bb18__0_334 [label="otherwise"];
    bb91__0_334 -> bb94__0_334 [label="return"];
    bb91__0_334 -> bb891__0_334 [label="unwind"];
    bb92__0_334 -> bb93__0_334 [label="return"];
    bb92__0_334 -> bb892__0_334 [label="unwind"];
    bb93__0_334 -> bb824__0_334 [label=""];
    bb94__0_334 -> bb95__0_334 [label="return"];
    bb94__0_334 -> bb891__0_334 [label="unwind"];
    bb95__0_334 -> bb97__0_334 [label="0"];
    bb95__0_334 -> bb96__0_334 [label="otherwise"];
    bb96__0_334 -> bb98__0_334 [label="return"];
    bb96__0_334 -> bb891__0_334 [label="unwind"];
    bb97__0_334 -> bb110__0_334 [label=""];
    bb98__0_334 -> bb99__0_334 [label="return"];
    bb98__0_334 -> bb891__0_334 [label="unwind"];
    bb99__0_334 -> bb100__0_334 [label="return"];
    bb99__0_334 -> bb891__0_334 [label="unwind"];
    bb100__0_334 -> bb101__0_334 [label="return"];
    bb100__0_334 -> bb859__0_334 [label="unwind"];
    bb101__0_334 -> bb102__0_334 [label="return"];
    bb101__0_334 -> bb859__0_334 [label="unwind"];
    bb102__0_334 -> bb103__0_334 [label="return"];
    bb102__0_334 -> bb891__0_334 [label="unwind"];
    bb103__0_334 -> bb104__0_334 [label="return"];
    bb103__0_334 -> bb891__0_334 [label="unwind"];
    bb104__0_334 -> bb105__0_334 [label="return"];
    bb104__0_334 -> bb891__0_334 [label="unwind"];
    bb105__0_334 -> bb106__0_334 [label="return"];
    bb105__0_334 -> bb891__0_334 [label="unwind"];
    bb106__0_334 -> bb107__0_334 [label="return"];
    bb106__0_334 -> bb858__0_334 [label="unwind"];
    bb107__0_334 -> bb108__0_334 [label="return"];
    bb107__0_334 -> bb858__0_334 [label="unwind"];
    bb108__0_334 -> bb109__0_334 [label="return"];
    bb108__0_334 -> bb891__0_334 [label="unwind"];
    bb109__0_334 -> bb110__0_334 [label=""];
    bb110__0_334 -> bb111__0_334 [label="return"];
    bb110__0_334 -> bb891__0_334 [label="unwind"];
    bb111__0_334 -> bb112__0_334 [label="0"];
    bb111__0_334 -> bb113__0_334 [label="1"];
    bb111__0_334 -> bb18__0_334 [label="otherwise"];
    bb112__0_334 -> bb115__0_334 [label="return"];
    bb112__0_334 -> bb891__0_334 [label="unwind"];
    bb113__0_334 -> bb114__0_334 [label="return"];
    bb113__0_334 -> bb891__0_334 [label="unwind"];
    bb114__0_334 -> bb877__0_334 [label=""];
    bb115__0_334 -> bb117__0_334 [label="0"];
    bb115__0_334 -> bb116__0_334 [label="otherwise"];
    bb116__0_334 -> bb132__0_334 [label=""];
    bb117__0_334 -> bb118__0_334 [label="return"];
    bb117__0_334 -> bb891__0_334 [label="unwind"];
    bb118__0_334 -> bb119__0_334 [label="return"];
    bb118__0_334 -> bb891__0_334 [label="unwind"];
    bb119__0_334 -> bb120__0_334 [label="return"];
    bb119__0_334 -> bb891__0_334 [label="unwind"];
    bb120__0_334 -> bb121__0_334 [label="return"];
    bb120__0_334 -> bb857__0_334 [label="unwind"];
    bb121__0_334 -> bb122__0_334 [label="return"];
    bb121__0_334 -> bb857__0_334 [label="unwind"];
    bb122__0_334 -> bb123__0_334 [label="return"];
    bb122__0_334 -> bb891__0_334 [label="unwind"];
    bb123__0_334 -> bb124__0_334 [label="return"];
    bb123__0_334 -> bb891__0_334 [label="unwind"];
    bb124__0_334 -> bb125__0_334 [label="return"];
    bb124__0_334 -> bb891__0_334 [label="unwind"];
    bb125__0_334 -> bb126__0_334 [label="return"];
    bb125__0_334 -> bb891__0_334 [label="unwind"];
    bb126__0_334 -> bb127__0_334 [label="return"];
    bb126__0_334 -> bb891__0_334 [label="unwind"];
    bb127__0_334 -> bb128__0_334 [label="return"];
    bb127__0_334 -> bb891__0_334 [label="unwind"];
    bb128__0_334 -> bb129__0_334 [label="return"];
    bb128__0_334 -> bb856__0_334 [label="unwind"];
    bb129__0_334 -> bb130__0_334 [label="return"];
    bb129__0_334 -> bb856__0_334 [label="unwind"];
    bb130__0_334 -> bb131__0_334 [label="return"];
    bb130__0_334 -> bb891__0_334 [label="unwind"];
    bb131__0_334 -> bb132__0_334 [label=""];
    bb132__0_334 -> bb133__0_334 [label="return"];
    bb132__0_334 -> bb891__0_334 [label="unwind"];
    bb133__0_334 -> bb134__0_334 [label="0"];
    bb133__0_334 -> bb135__0_334 [label="1"];
    bb133__0_334 -> bb18__0_334 [label="otherwise"];
    bb134__0_334 -> bb137__0_334 [label="return"];
    bb134__0_334 -> bb891__0_334 [label="unwind"];
    bb135__0_334 -> bb136__0_334 [label="return"];
    bb135__0_334 -> bb891__0_334 [label="unwind"];
    bb136__0_334 -> bb877__0_334 [label=""];
    bb137__0_334 -> bb138__0_334 [label="return"];
    bb137__0_334 -> bb891__0_334 [label="unwind"];
    bb138__0_334 -> bb139__0_334 [label="return"];
    bb138__0_334 -> bb891__0_334 [label="unwind"];
    bb139__0_334 -> bb140__0_334 [label="return"];
    bb139__0_334 -> bb891__0_334 [label="unwind"];
    bb140__0_334 -> bb141__0_334 [label="0"];
    bb140__0_334 -> bb142__0_334 [label="1"];
    bb140__0_334 -> bb18__0_334 [label="otherwise"];
    bb141__0_334 -> bb144__0_334 [label="return"];
    bb141__0_334 -> bb891__0_334 [label="unwind"];
    bb142__0_334 -> bb143__0_334 [label="return"];
    bb142__0_334 -> bb891__0_334 [label="unwind"];
    bb143__0_334 -> bb877__0_334 [label=""];
    bb144__0_334 -> bb145__0_334 [label="return"];
    bb144__0_334 -> bb891__0_334 [label="unwind"];
    bb145__0_334 -> bb146__0_334 [label="return"];
    bb145__0_334 -> bb891__0_334 [label="unwind"];
    bb146__0_334 -> bb147__0_334 [label="0"];
    bb146__0_334 -> bb148__0_334 [label="1"];
    bb146__0_334 -> bb18__0_334 [label="otherwise"];
    bb147__0_334 -> bb150__0_334 [label="return"];
    bb147__0_334 -> bb891__0_334 [label="unwind"];
    bb148__0_334 -> bb149__0_334 [label="return"];
    bb148__0_334 -> bb891__0_334 [label="unwind"];
    bb149__0_334 -> bb877__0_334 [label=""];
    bb150__0_334 -> bb151__0_334 [label="return"];
    bb150__0_334 -> bb891__0_334 [label="unwind"];
    bb151__0_334 -> bb152__0_334 [label="return"];
    bb151__0_334 -> bb891__0_334 [label="unwind"];
    bb152__0_334 -> bb153__0_334 [label="0"];
    bb152__0_334 -> bb154__0_334 [label="1"];
    bb152__0_334 -> bb18__0_334 [label="otherwise"];
    bb153__0_334 -> bb156__0_334 [label="return"];
    bb153__0_334 -> bb891__0_334 [label="unwind"];
    bb154__0_334 -> bb155__0_334 [label="return"];
    bb154__0_334 -> bb891__0_334 [label="unwind"];
    bb155__0_334 -> bb877__0_334 [label=""];
    bb156__0_334 -> bb157__0_334 [label="return"];
    bb156__0_334 -> bb891__0_334 [label="unwind"];
    bb157__0_334 -> bb158__0_334 [label="return"];
    bb157__0_334 -> bb891__0_334 [label="unwind"];
    bb158__0_334 -> bb159__0_334 [label="0"];
    bb158__0_334 -> bb160__0_334 [label="1"];
    bb158__0_334 -> bb18__0_334 [label="otherwise"];
    bb159__0_334 -> bb162__0_334 [label="return"];
    bb159__0_334 -> bb891__0_334 [label="unwind"];
    bb160__0_334 -> bb161__0_334 [label="return"];
    bb160__0_334 -> bb891__0_334 [label="unwind"];
    bb161__0_334 -> bb877__0_334 [label=""];
    bb162__0_334 -> bb163__0_334 [label="return"];
    bb162__0_334 -> bb891__0_334 [label="unwind"];
    bb163__0_334 -> bb164__0_334 [label="0"];
    bb163__0_334 -> bb165__0_334 [label="1"];
    bb163__0_334 -> bb18__0_334 [label="otherwise"];
    bb164__0_334 -> bb167__0_334 [label="return"];
    bb164__0_334 -> bb855__0_334 [label="unwind"];
    bb165__0_334 -> bb166__0_334 [label="return"];
    bb165__0_334 -> bb889__0_334 [label="unwind"];
    bb166__0_334 -> bb822__0_334 [label=""];
    bb167__0_334 -> bb168__0_334 [label="return"];
    bb167__0_334 -> bb855__0_334 [label="unwind"];
    bb168__0_334 -> bb169__0_334 [label="return"];
    bb168__0_334 -> bb855__0_334 [label="unwind"];
    bb169__0_334 -> bb170__0_334 [label="return"];
    bb169__0_334 -> bb855__0_334 [label="unwind"];
    bb170__0_334 -> bb171__0_334 [label="0"];
    bb170__0_334 -> bb172__0_334 [label="1"];
    bb170__0_334 -> bb18__0_334 [label="otherwise"];
    bb171__0_334 -> bb174__0_334 [label="return"];
    bb171__0_334 -> bb855__0_334 [label="unwind"];
    bb172__0_334 -> bb173__0_334 [label="return"];
    bb172__0_334 -> bb855__0_334 [label="unwind"];
    bb173__0_334 -> bb821__0_334 [label=""];
    bb174__0_334 -> bb175__0_334 [label="return"];
    bb174__0_334 -> bb855__0_334 [label="unwind"];
    bb175__0_334 -> bb176__0_334 [label="return"];
    bb175__0_334 -> bb855__0_334 [label="unwind"];
    bb176__0_334 -> bb177__0_334 [label="0"];
    bb176__0_334 -> bb178__0_334 [label="1"];
    bb176__0_334 -> bb18__0_334 [label="otherwise"];
    bb177__0_334 -> bb180__0_334 [label="return"];
    bb177__0_334 -> bb855__0_334 [label="unwind"];
    bb178__0_334 -> bb179__0_334 [label="return"];
    bb178__0_334 -> bb855__0_334 [label="unwind"];
    bb179__0_334 -> bb820__0_334 [label=""];
    bb180__0_334 -> bb181__0_334 [label="return"];
    bb180__0_334 -> bb855__0_334 [label="unwind"];
    bb181__0_334 -> bb182__0_334 [label="0"];
    bb181__0_334 -> bb183__0_334 [label="1"];
    bb181__0_334 -> bb18__0_334 [label="otherwise"];
    bb182__0_334 -> bb185__0_334 [label="return"];
    bb182__0_334 -> bb855__0_334 [label="unwind"];
    bb183__0_334 -> bb184__0_334 [label="return"];
    bb183__0_334 -> bb855__0_334 [label="unwind"];
    bb184__0_334 -> bb819__0_334 [label=""];
    bb185__0_334 -> bb187__0_334 [label="0"];
    bb185__0_334 -> bb186__0_334 [label="otherwise"];
    bb186__0_334 -> bb195__0_334 [label=""];
    bb187__0_334 -> bb188__0_334 [label="return"];
    bb187__0_334 -> bb855__0_334 [label="unwind"];
    bb188__0_334 -> bb189__0_334 [label="return"];
    bb188__0_334 -> bb855__0_334 [label="unwind"];
    bb189__0_334 -> bb190__0_334 [label="return"];
    bb189__0_334 -> bb855__0_334 [label="unwind"];
    bb190__0_334 -> bb191__0_334 [label="return"];
    bb190__0_334 -> bb854__0_334 [label="unwind"];
    bb191__0_334 -> bb192__0_334 [label="return"];
    bb191__0_334 -> bb854__0_334 [label="unwind"];
    bb192__0_334 -> bb193__0_334 [label="return"];
    bb192__0_334 -> bb855__0_334 [label="unwind"];
    bb193__0_334 -> bb194__0_334 [label="return"];
    bb193__0_334 -> bb855__0_334 [label="unwind"];
    bb194__0_334 -> bb195__0_334 [label=""];
    bb195__0_334 -> bb196__0_334 [label="return"];
    bb195__0_334 -> bb855__0_334 [label="unwind"];
    bb196__0_334 -> bb197__0_334 [label="0"];
    bb196__0_334 -> bb198__0_334 [label="1"];
    bb196__0_334 -> bb18__0_334 [label="otherwise"];
    bb197__0_334 -> bb200__0_334 [label="return"];
    bb197__0_334 -> bb855__0_334 [label="unwind"];
    bb198__0_334 -> bb199__0_334 [label="return"];
    bb198__0_334 -> bb855__0_334 [label="unwind"];
    bb199__0_334 -> bb819__0_334 [label=""];
    bb200__0_334 -> bb201__0_334 [label="return"];
    bb200__0_334 -> bb855__0_334 [label="unwind"];
    bb201__0_334 -> bb202__0_334 [label="return"];
    bb201__0_334 -> bb855__0_334 [label="unwind"];
    bb202__0_334 -> bb203__0_334 [label="0"];
    bb202__0_334 -> bb204__0_334 [label="1"];
    bb202__0_334 -> bb18__0_334 [label="otherwise"];
    bb203__0_334 -> bb207__0_334 [label="0"];
    bb203__0_334 -> bb206__0_334 [label="otherwise"];
    bb204__0_334 -> bb205__0_334 [label="return"];
    bb204__0_334 -> bb855__0_334 [label="unwind"];
    bb205__0_334 -> bb818__0_334 [label=""];
    bb206__0_334 -> bb220__0_334 [label=""];
    bb207__0_334 -> bb208__0_334 [label="return"];
    bb207__0_334 -> bb855__0_334 [label="unwind"];
    bb208__0_334 -> bb209__0_334 [label="return"];
    bb208__0_334 -> bb855__0_334 [label="unwind"];
    bb209__0_334 -> bb210__0_334 [label="return"];
    bb209__0_334 -> bb855__0_334 [label="unwind"];
    bb210__0_334 -> bb211__0_334 [label="return"];
    bb210__0_334 -> bb853__0_334 [label="unwind"];
    bb211__0_334 -> bb212__0_334 [label="return"];
    bb211__0_334 -> bb853__0_334 [label="unwind"];
    bb212__0_334 -> bb213__0_334 [label="return"];
    bb212__0_334 -> bb855__0_334 [label="unwind"];
    bb213__0_334 -> bb214__0_334 [label="return"];
    bb213__0_334 -> bb855__0_334 [label="unwind"];
    bb214__0_334 -> bb215__0_334 [label="return"];
    bb214__0_334 -> bb855__0_334 [label="unwind"];
    bb215__0_334 -> bb216__0_334 [label="return"];
    bb215__0_334 -> bb855__0_334 [label="unwind"];
    bb216__0_334 -> bb217__0_334 [label="return"];
    bb216__0_334 -> bb852__0_334 [label="unwind"];
    bb217__0_334 -> bb218__0_334 [label="return"];
    bb217__0_334 -> bb852__0_334 [label="unwind"];
    bb218__0_334 -> bb219__0_334 [label="return"];
    bb218__0_334 -> bb855__0_334 [label="unwind"];
    bb219__0_334 -> bb220__0_334 [label=""];
    bb220__0_334 -> bb221__0_334 [label="return"];
    bb220__0_334 -> bb855__0_334 [label="unwind"];
    bb221__0_334 -> bb222__0_334 [label="0"];
    bb221__0_334 -> bb223__0_334 [label="1"];
    bb221__0_334 -> bb18__0_334 [label="otherwise"];
    bb222__0_334 -> bb225__0_334 [label="return"];
    bb222__0_334 -> bb855__0_334 [label="unwind"];
    bb223__0_334 -> bb224__0_334 [label="return"];
    bb223__0_334 -> bb855__0_334 [label="unwind"];
    bb224__0_334 -> bb818__0_334 [label=""];
    bb225__0_334 -> bb226__0_334 [label="return"];
    bb225__0_334 -> bb855__0_334 [label="unwind"];
    bb226__0_334 -> bb227__0_334 [label="return"];
    bb226__0_334 -> bb855__0_334 [label="unwind"];
    bb227__0_334 -> bb228__0_334 [label="return"];
    bb227__0_334 -> bb855__0_334 [label="unwind"];
    bb228__0_334 -> bb229__0_334 [label="return"];
    bb228__0_334 -> bb855__0_334 [label="unwind"];
    bb229__0_334 -> bb230__0_334 [label="0"];
    bb229__0_334 -> bb231__0_334 [label="1"];
    bb229__0_334 -> bb18__0_334 [label="otherwise"];
    bb230__0_334 -> bb233__0_334 [label="return"];
    bb230__0_334 -> bb855__0_334 [label="unwind"];
    bb231__0_334 -> bb232__0_334 [label="return"];
    bb231__0_334 -> bb855__0_334 [label="unwind"];
    bb232__0_334 -> bb817__0_334 [label="return"];
    bb232__0_334 -> bb891__0_334 [label="unwind"];
    bb233__0_334 -> bb234__0_334 [label="return"];
    bb233__0_334 -> bb891__0_334 [label="unwind"];
    bb234__0_334 -> bb235__0_334 [label="return"];
    bb234__0_334 -> bb891__0_334 [label="unwind"];
    bb235__0_334 -> bb236__0_334 [label="return"];
    bb235__0_334 -> bb891__0_334 [label="unwind"];
    bb236__0_334 -> bb237__0_334 [label="0"];
    bb236__0_334 -> bb238__0_334 [label="1"];
    bb236__0_334 -> bb18__0_334 [label="otherwise"];
    bb237__0_334 -> bb240__0_334 [label="return"];
    bb237__0_334 -> bb851__0_334 [label="unwind"];
    bb238__0_334 -> bb239__0_334 [label="return"];
    bb238__0_334 -> bb888__0_334 [label="unwind"];
    bb239__0_334 -> bb814__0_334 [label=""];
    bb240__0_334 -> bb241__0_334 [label="return"];
    bb240__0_334 -> bb851__0_334 [label="unwind"];
    bb241__0_334 -> bb242__0_334 [label="return"];
    bb241__0_334 -> bb851__0_334 [label="unwind"];
    bb242__0_334 -> bb243__0_334 [label="return"];
    bb242__0_334 -> bb851__0_334 [label="unwind"];
    bb243__0_334 -> bb244__0_334 [label="0"];
    bb243__0_334 -> bb245__0_334 [label="1"];
    bb243__0_334 -> bb18__0_334 [label="otherwise"];
    bb244__0_334 -> bb247__0_334 [label="return"];
    bb244__0_334 -> bb851__0_334 [label="unwind"];
    bb245__0_334 -> bb246__0_334 [label="return"];
    bb245__0_334 -> bb851__0_334 [label="unwind"];
    bb246__0_334 -> bb813__0_334 [label=""];
    bb247__0_334 -> bb248__0_334 [label="return"];
    bb247__0_334 -> bb851__0_334 [label="unwind"];
    bb248__0_334 -> bb249__0_334 [label="return"];
    bb248__0_334 -> bb851__0_334 [label="unwind"];
    bb249__0_334 -> bb250__0_334 [label="0"];
    bb249__0_334 -> bb251__0_334 [label="1"];
    bb249__0_334 -> bb18__0_334 [label="otherwise"];
    bb250__0_334 -> bb253__0_334 [label="return"];
    bb250__0_334 -> bb851__0_334 [label="unwind"];
    bb251__0_334 -> bb252__0_334 [label="return"];
    bb251__0_334 -> bb851__0_334 [label="unwind"];
    bb252__0_334 -> bb812__0_334 [label=""];
    bb253__0_334 -> bb254__0_334 [label="return"];
    bb253__0_334 -> bb851__0_334 [label="unwind"];
    bb254__0_334 -> bb255__0_334 [label="0"];
    bb254__0_334 -> bb256__0_334 [label="1"];
    bb254__0_334 -> bb18__0_334 [label="otherwise"];
    bb255__0_334 -> bb258__0_334 [label="return"];
    bb255__0_334 -> bb851__0_334 [label="unwind"];
    bb256__0_334 -> bb257__0_334 [label="return"];
    bb256__0_334 -> bb851__0_334 [label="unwind"];
    bb257__0_334 -> bb811__0_334 [label=""];
    bb258__0_334 -> bb260__0_334 [label="0"];
    bb258__0_334 -> bb259__0_334 [label="otherwise"];
    bb259__0_334 -> bb268__0_334 [label=""];
    bb260__0_334 -> bb261__0_334 [label="return"];
    bb260__0_334 -> bb851__0_334 [label="unwind"];
    bb261__0_334 -> bb262__0_334 [label="return"];
    bb261__0_334 -> bb851__0_334 [label="unwind"];
    bb262__0_334 -> bb263__0_334 [label="return"];
    bb262__0_334 -> bb851__0_334 [label="unwind"];
    bb263__0_334 -> bb264__0_334 [label="return"];
    bb263__0_334 -> bb850__0_334 [label="unwind"];
    bb264__0_334 -> bb265__0_334 [label="return"];
    bb264__0_334 -> bb850__0_334 [label="unwind"];
    bb265__0_334 -> bb266__0_334 [label="return"];
    bb265__0_334 -> bb851__0_334 [label="unwind"];
    bb266__0_334 -> bb267__0_334 [label="return"];
    bb266__0_334 -> bb851__0_334 [label="unwind"];
    bb267__0_334 -> bb268__0_334 [label=""];
    bb268__0_334 -> bb269__0_334 [label="return"];
    bb268__0_334 -> bb851__0_334 [label="unwind"];
    bb269__0_334 -> bb270__0_334 [label="0"];
    bb269__0_334 -> bb271__0_334 [label="1"];
    bb269__0_334 -> bb18__0_334 [label="otherwise"];
    bb270__0_334 -> bb273__0_334 [label="return"];
    bb270__0_334 -> bb851__0_334 [label="unwind"];
    bb271__0_334 -> bb272__0_334 [label="return"];
    bb271__0_334 -> bb851__0_334 [label="unwind"];
    bb272__0_334 -> bb811__0_334 [label=""];
    bb273__0_334 -> bb274__0_334 [label="return"];
    bb273__0_334 -> bb851__0_334 [label="unwind"];
    bb274__0_334 -> bb275__0_334 [label="return"];
    bb274__0_334 -> bb851__0_334 [label="unwind"];
    bb275__0_334 -> bb276__0_334 [label="0"];
    bb275__0_334 -> bb277__0_334 [label="1"];
    bb275__0_334 -> bb18__0_334 [label="otherwise"];
    bb276__0_334 -> bb280__0_334 [label="0"];
    bb276__0_334 -> bb279__0_334 [label="otherwise"];
    bb277__0_334 -> bb278__0_334 [label="return"];
    bb277__0_334 -> bb851__0_334 [label="unwind"];
    bb278__0_334 -> bb810__0_334 [label=""];
    bb279__0_334 -> bb293__0_334 [label=""];
    bb280__0_334 -> bb281__0_334 [label="return"];
    bb280__0_334 -> bb851__0_334 [label="unwind"];
    bb281__0_334 -> bb282__0_334 [label="return"];
    bb281__0_334 -> bb851__0_334 [label="unwind"];
    bb282__0_334 -> bb283__0_334 [label="return"];
    bb282__0_334 -> bb851__0_334 [label="unwind"];
    bb283__0_334 -> bb284__0_334 [label="return"];
    bb283__0_334 -> bb849__0_334 [label="unwind"];
    bb284__0_334 -> bb285__0_334 [label="return"];
    bb284__0_334 -> bb849__0_334 [label="unwind"];
    bb285__0_334 -> bb286__0_334 [label="return"];
    bb285__0_334 -> bb851__0_334 [label="unwind"];
    bb286__0_334 -> bb287__0_334 [label="return"];
    bb286__0_334 -> bb851__0_334 [label="unwind"];
    bb287__0_334 -> bb288__0_334 [label="return"];
    bb287__0_334 -> bb851__0_334 [label="unwind"];
    bb288__0_334 -> bb289__0_334 [label="return"];
    bb288__0_334 -> bb851__0_334 [label="unwind"];
    bb289__0_334 -> bb290__0_334 [label="return"];
    bb289__0_334 -> bb848__0_334 [label="unwind"];
    bb290__0_334 -> bb291__0_334 [label="return"];
    bb290__0_334 -> bb848__0_334 [label="unwind"];
    bb291__0_334 -> bb292__0_334 [label="return"];
    bb291__0_334 -> bb851__0_334 [label="unwind"];
    bb292__0_334 -> bb293__0_334 [label=""];
    bb293__0_334 -> bb294__0_334 [label="return"];
    bb293__0_334 -> bb851__0_334 [label="unwind"];
    bb294__0_334 -> bb295__0_334 [label="0"];
    bb294__0_334 -> bb296__0_334 [label="1"];
    bb294__0_334 -> bb18__0_334 [label="otherwise"];
    bb295__0_334 -> bb298__0_334 [label="return"];
    bb295__0_334 -> bb851__0_334 [label="unwind"];
    bb296__0_334 -> bb297__0_334 [label="return"];
    bb296__0_334 -> bb851__0_334 [label="unwind"];
    bb297__0_334 -> bb810__0_334 [label=""];
    bb298__0_334 -> bb299__0_334 [label="return"];
    bb298__0_334 -> bb851__0_334 [label="unwind"];
    bb299__0_334 -> bb300__0_334 [label="return"];
    bb299__0_334 -> bb851__0_334 [label="unwind"];
    bb300__0_334 -> bb301__0_334 [label="return"];
    bb300__0_334 -> bb851__0_334 [label="unwind"];
    bb301__0_334 -> bb302__0_334 [label="return"];
    bb301__0_334 -> bb851__0_334 [label="unwind"];
    bb302__0_334 -> bb303__0_334 [label="0"];
    bb302__0_334 -> bb304__0_334 [label="1"];
    bb302__0_334 -> bb18__0_334 [label="otherwise"];
    bb303__0_334 -> bb306__0_334 [label="return"];
    bb303__0_334 -> bb851__0_334 [label="unwind"];
    bb304__0_334 -> bb305__0_334 [label="return"];
    bb304__0_334 -> bb851__0_334 [label="unwind"];
    bb305__0_334 -> bb809__0_334 [label="return"];
    bb305__0_334 -> bb891__0_334 [label="unwind"];
    bb306__0_334 -> bb307__0_334 [label="return"];
    bb306__0_334 -> bb891__0_334 [label="unwind"];
    bb307__0_334 -> bb334__0_334 [label="0"];
    bb307__0_334 -> bb308__0_334 [label="otherwise"];
    bb308__0_334 -> bb333__0_334 [label="0"];
    bb308__0_334 -> bb309__0_334 [label="otherwise"];
    bb309__0_334 -> bb313__0_334 [label="0"];
    bb309__0_334 -> bb310__0_334 [label="otherwise"];
    bb310__0_334 -> bb312__0_334 [label="0"];
    bb310__0_334 -> bb311__0_334 [label="otherwise"];
    bb311__0_334 -> bb328__0_334 [label=""];
    bb312__0_334 -> bb314__0_334 [label=""];
    bb313__0_334 -> bb314__0_334 [label=""];
    bb314__0_334 -> bb315__0_334 [label="return"];
    bb314__0_334 -> bb891__0_334 [label="unwind"];
    bb315__0_334 -> bb316__0_334 [label="return"];
    bb315__0_334 -> bb891__0_334 [label="unwind"];
    bb316__0_334 -> bb317__0_334 [label="return"];
    bb316__0_334 -> bb891__0_334 [label="unwind"];
    bb317__0_334 -> bb318__0_334 [label="return"];
    bb317__0_334 -> bb847__0_334 [label="unwind"];
    bb318__0_334 -> bb319__0_334 [label="return"];
    bb318__0_334 -> bb847__0_334 [label="unwind"];
    bb319__0_334 -> bb320__0_334 [label="return"];
    bb319__0_334 -> bb891__0_334 [label="unwind"];
    bb320__0_334 -> bb321__0_334 [label="return"];
    bb320__0_334 -> bb891__0_334 [label="unwind"];
    bb321__0_334 -> bb322__0_334 [label="return"];
    bb321__0_334 -> bb891__0_334 [label="unwind"];
    bb322__0_334 -> bb323__0_334 [label="return"];
    bb322__0_334 -> bb891__0_334 [label="unwind"];
    bb323__0_334 -> bb324__0_334 [label="return"];
    bb323__0_334 -> bb891__0_334 [label="unwind"];
    bb324__0_334 -> bb325__0_334 [label="return"];
    bb324__0_334 -> bb846__0_334 [label="unwind"];
    bb325__0_334 -> bb326__0_334 [label="return"];
    bb325__0_334 -> bb846__0_334 [label="unwind"];
    bb326__0_334 -> bb327__0_334 [label="return"];
    bb326__0_334 -> bb891__0_334 [label="unwind"];
    bb327__0_334 -> bb328__0_334 [label=""];
    bb328__0_334 -> bb329__0_334 [label="return"];
    bb328__0_334 -> bb891__0_334 [label="unwind"];
    bb329__0_334 -> bb330__0_334 [label="0"];
    bb329__0_334 -> bb331__0_334 [label="1"];
    bb329__0_334 -> bb18__0_334 [label="otherwise"];
    bb330__0_334 -> bb336__0_334 [label=""];
    bb331__0_334 -> bb332__0_334 [label="return"];
    bb331__0_334 -> bb891__0_334 [label="unwind"];
    bb332__0_334 -> bb808__0_334 [label=""];
    bb333__0_334 -> bb335__0_334 [label=""];
    bb334__0_334 -> bb335__0_334 [label=""];
    bb335__0_334 -> bb336__0_334 [label=""];
    bb336__0_334 -> bb337__0_334 [label="return"];
    bb336__0_334 -> bb891__0_334 [label="unwind"];
    bb337__0_334 -> bb338__0_334 [label="return"];
    bb337__0_334 -> bb891__0_334 [label="unwind"];
    bb338__0_334 -> bb339__0_334 [label="return"];
    bb338__0_334 -> bb891__0_334 [label="unwind"];
    bb339__0_334 -> bb340__0_334 [label="return"];
    bb339__0_334 -> bb891__0_334 [label="unwind"];
    bb340__0_334 -> bb341__0_334 [label="0"];
    bb340__0_334 -> bb342__0_334 [label="1"];
    bb340__0_334 -> bb18__0_334 [label="otherwise"];
    bb341__0_334 -> bb344__0_334 [label="return"];
    bb341__0_334 -> bb891__0_334 [label="unwind"];
    bb342__0_334 -> bb343__0_334 [label="return"];
    bb342__0_334 -> bb891__0_334 [label="unwind"];
    bb343__0_334 -> bb807__0_334 [label=""];
    bb344__0_334 -> bb345__0_334 [label="return"];
    bb344__0_334 -> bb891__0_334 [label="unwind"];
    bb345__0_334 -> bb346__0_334 [label="return"];
    bb345__0_334 -> bb891__0_334 [label="unwind"];
    bb346__0_334 -> bb347__0_334 [label="0"];
    bb346__0_334 -> bb348__0_334 [label="1"];
    bb346__0_334 -> bb18__0_334 [label="otherwise"];
    bb347__0_334 -> bb350__0_334 [label="return"];
    bb347__0_334 -> bb891__0_334 [label="unwind"];
    bb348__0_334 -> bb349__0_334 [label="return"];
    bb348__0_334 -> bb891__0_334 [label="unwind"];
    bb349__0_334 -> bb806__0_334 [label=""];
    bb350__0_334 -> bb352__0_334 [label="0"];
    bb350__0_334 -> bb351__0_334 [label="otherwise"];
    bb351__0_334 -> bb362__0_334 [label=""];
    bb352__0_334 -> bb353__0_334 [label="return"];
    bb352__0_334 -> bb891__0_334 [label="unwind"];
    bb353__0_334 -> bb361__0_334 [label="0"];
    bb353__0_334 -> bb354__0_334 [label="otherwise"];
    bb354__0_334 -> bb355__0_334 [label="return"];
    bb354__0_334 -> bb891__0_334 [label="unwind"];
    bb355__0_334 -> bb356__0_334 [label="return"];
    bb355__0_334 -> bb891__0_334 [label="unwind"];
    bb356__0_334 -> bb357__0_334 [label="return"];
    bb356__0_334 -> bb891__0_334 [label="unwind"];
    bb357__0_334 -> bb358__0_334 [label="return"];
    bb357__0_334 -> bb845__0_334 [label="unwind"];
    bb358__0_334 -> bb359__0_334 [label="return"];
    bb358__0_334 -> bb845__0_334 [label="unwind"];
    bb359__0_334 -> bb360__0_334 [label="return"];
    bb359__0_334 -> bb891__0_334 [label="unwind"];
    bb360__0_334 -> bb805__0_334 [label=""];
    bb361__0_334 -> bb362__0_334 [label=""];
    bb362__0_334 -> bb363__0_334 [label="return"];
    bb362__0_334 -> bb891__0_334 [label="unwind"];
    bb363__0_334 -> bb373__0_334 [label="0"];
    bb363__0_334 -> bb364__0_334 [label="otherwise"];
    bb364__0_334 -> bb365__0_334 [label="return"];
    bb364__0_334 -> bb891__0_334 [label="unwind"];
    bb365__0_334 -> bb366__0_334 [label="return"];
    bb365__0_334 -> bb891__0_334 [label="unwind"];
    bb366__0_334 -> bb367__0_334 [label="0"];
    bb366__0_334 -> bb368__0_334 [label="1"];
    bb366__0_334 -> bb18__0_334 [label="otherwise"];
    bb367__0_334 -> bb371__0_334 [label="0"];
    bb367__0_334 -> bb370__0_334 [label="otherwise"];
    bb368__0_334 -> bb369__0_334 [label="return"];
    bb368__0_334 -> bb891__0_334 [label="unwind"];
    bb369__0_334 -> bb804__0_334 [label=""];
    bb370__0_334 -> bb372__0_334 [label="return"];
    bb370__0_334 -> bb891__0_334 [label="unwind"];
    bb371__0_334 -> bb374__0_334 [label=""];
    bb372__0_334 -> bb804__0_334 [label=""];
    bb373__0_334 -> bb374__0_334 [label=""];
    bb374__0_334 -> bb375__0_334 [label="return"];
    bb374__0_334 -> bb891__0_334 [label="unwind"];
    bb375__0_334 -> bb376__0_334 [label="return"];
    bb375__0_334 -> bb891__0_334 [label="unwind"];
    bb376__0_334 -> bb377__0_334 [label="0"];
    bb376__0_334 -> bb378__0_334 [label="1"];
    bb376__0_334 -> bb18__0_334 [label="otherwise"];
    bb377__0_334 -> bb380__0_334 [label="return"];
    bb377__0_334 -> bb891__0_334 [label="unwind"];
    bb378__0_334 -> bb379__0_334 [label="return"];
    bb378__0_334 -> bb891__0_334 [label="unwind"];
    bb379__0_334 -> bb803__0_334 [label=""];
    bb380__0_334 -> bb381__0_334 [label="return"];
    bb380__0_334 -> bb891__0_334 [label="unwind"];
    bb381__0_334 -> bb382__0_334 [label="0"];
    bb381__0_334 -> bb383__0_334 [label="1"];
    bb381__0_334 -> bb18__0_334 [label="otherwise"];
    bb382__0_334 -> bb385__0_334 [label="return"];
    bb382__0_334 -> bb886__0_334 [label="unwind"];
    bb383__0_334 -> bb384__0_334 [label="return"];
    bb383__0_334 -> bb887__0_334 [label="unwind"];
    bb384__0_334 -> bb802__0_334 [label=""];
    bb385__0_334 -> bb387__0_334 [label="0"];
    bb385__0_334 -> bb386__0_334 [label="otherwise"];
    bb386__0_334 -> bb438__0_334 [label=""];
    bb387__0_334 -> bb388__0_334 [label="return"];
    bb387__0_334 -> bb886__0_334 [label="unwind"];
    bb388__0_334 -> bb389__0_334 [label="return"];
    bb388__0_334 -> bb886__0_334 [label="unwind"];
    bb389__0_334 -> bb390__0_334 [label="return"];
    bb389__0_334 -> bb886__0_334 [label="unwind"];
    bb390__0_334 -> bb391__0_334 [label="return"];
    bb390__0_334 -> bb886__0_334 [label="unwind"];
    bb391__0_334 -> bb392__0_334 [label="0"];
    bb391__0_334 -> bb393__0_334 [label="1"];
    bb391__0_334 -> bb18__0_334 [label="otherwise"];
    bb392__0_334 -> bb395__0_334 [label="return"];
    bb392__0_334 -> bb886__0_334 [label="unwind"];
    bb393__0_334 -> bb394__0_334 [label="return"];
    bb393__0_334 -> bb886__0_334 [label="unwind"];
    bb394__0_334 -> bb799__0_334 [label=""];
    bb395__0_334 -> bb396__0_334 [label="return"];
    bb395__0_334 -> bb886__0_334 [label="unwind"];
    bb396__0_334 -> bb397__0_334 [label="return"];
    bb396__0_334 -> bb886__0_334 [label="unwind"];
    bb397__0_334 -> bb398__0_334 [label="0"];
    bb397__0_334 -> bb399__0_334 [label="1"];
    bb397__0_334 -> bb18__0_334 [label="otherwise"];
    bb398__0_334 -> bb401__0_334 [label="return"];
    bb398__0_334 -> bb886__0_334 [label="unwind"];
    bb399__0_334 -> bb400__0_334 [label="return"];
    bb399__0_334 -> bb886__0_334 [label="unwind"];
    bb400__0_334 -> bb799__0_334 [label=""];
    bb401__0_334 -> bb402__0_334 [label="return"];
    bb401__0_334 -> bb886__0_334 [label="unwind"];
    bb402__0_334 -> bb403__0_334 [label="0"];
    bb402__0_334 -> bb404__0_334 [label="1"];
    bb402__0_334 -> bb18__0_334 [label="otherwise"];
    bb403__0_334 -> bb406__0_334 [label="return"];
    bb403__0_334 -> bb886__0_334 [label="unwind"];
    bb404__0_334 -> bb405__0_334 [label="return"];
    bb404__0_334 -> bb886__0_334 [label="unwind"];
    bb405__0_334 -> bb798__0_334 [label=""];
    bb406__0_334 -> bb407__0_334 [label="return"];
    bb406__0_334 -> bb886__0_334 [label="unwind"];
    bb407__0_334 -> bb408__0_334 [label="0"];
    bb407__0_334 -> bb409__0_334 [label="1"];
    bb407__0_334 -> bb18__0_334 [label="otherwise"];
    bb408__0_334 -> bb411__0_334 [label="return"];
    bb408__0_334 -> bb886__0_334 [label="unwind"];
    bb409__0_334 -> bb410__0_334 [label="return"];
    bb409__0_334 -> bb886__0_334 [label="unwind"];
    bb410__0_334 -> bb797__0_334 [label=""];
    bb411__0_334 -> bb412__0_334 [label="return"];
    bb411__0_334 -> bb886__0_334 [label="unwind"];
    bb412__0_334 -> bb413__0_334 [label="return"];
    bb412__0_334 -> bb886__0_334 [label="unwind"];
    bb413__0_334 -> bb414__0_334 [label="0"];
    bb413__0_334 -> bb415__0_334 [label="1"];
    bb413__0_334 -> bb18__0_334 [label="otherwise"];
    bb414__0_334 -> bb417__0_334 [label="return"];
    bb414__0_334 -> bb886__0_334 [label="unwind"];
    bb415__0_334 -> bb416__0_334 [label="return"];
    bb415__0_334 -> bb886__0_334 [label="unwind"];
    bb416__0_334 -> bb797__0_334 [label=""];
    bb417__0_334 -> bb418__0_334 [label="return"];
    bb417__0_334 -> bb886__0_334 [label="unwind"];
    bb418__0_334 -> bb419__0_334 [label="0"];
    bb418__0_334 -> bb420__0_334 [label="1"];
    bb418__0_334 -> bb18__0_334 [label="otherwise"];
    bb419__0_334 -> bb422__0_334 [label="return"];
    bb419__0_334 -> bb886__0_334 [label="unwind"];
    bb420__0_334 -> bb421__0_334 [label="return"];
    bb420__0_334 -> bb886__0_334 [label="unwind"];
    bb421__0_334 -> bb797__0_334 [label=""];
    bb422__0_334 -> bb423__0_334 [label="return"];
    bb422__0_334 -> bb886__0_334 [label="unwind"];
    bb423__0_334 -> bb424__0_334 [label="0"];
    bb423__0_334 -> bb425__0_334 [label="1"];
    bb423__0_334 -> bb18__0_334 [label="otherwise"];
    bb424__0_334 -> bb428__0_334 [label="0"];
    bb424__0_334 -> bb427__0_334 [label="otherwise"];
    bb425__0_334 -> bb426__0_334 [label="return"];
    bb425__0_334 -> bb886__0_334 [label="unwind"];
    bb426__0_334 -> bb796__0_334 [label=""];
    bb427__0_334 -> bb429__0_334 [label="return"];
    bb427__0_334 -> bb886__0_334 [label="unwind"];
    bb428__0_334 -> bb438__0_334 [label=""];
    bb429__0_334 -> bb430__0_334 [label="return"];
    bb429__0_334 -> bb844__0_334 [label="unwind"];
    bb430__0_334 -> bb431__0_334 [label="return"];
    bb430__0_334 -> bb842__0_334 [label="unwind"];
    bb431__0_334 -> bb432__0_334 [label="return"];
    bb431__0_334 -> bb841__0_334 [label="unwind"];
    bb432__0_334 -> bb433__0_334 [label="return"];
    bb432__0_334 -> bb841__0_334 [label="unwind"];
    bb433__0_334 -> bb434__0_334 [label="return"];
    bb433__0_334 -> bb842__0_334 [label="unwind"];
    bb434__0_334 -> bb435__0_334 [label="return"];
    bb434__0_334 -> bb843__0_334 [label="unwind"];
    bb435__0_334 -> bb436__0_334 [label="return"];
    bb435__0_334 -> bb886__0_334 [label="unwind"];
    bb436__0_334 -> bb437__0_334 [label="return"];
    bb436__0_334 -> bb886__0_334 [label="unwind"];
    bb437__0_334 -> bb796__0_334 [label=""];
    bb438__0_334 -> bb439__0_334 [label="return"];
    bb438__0_334 -> bb886__0_334 [label="unwind"];
    bb439__0_334 -> bb440__0_334 [label="return"];
    bb439__0_334 -> bb886__0_334 [label="unwind"];
    bb440__0_334 -> bb441__0_334 [label="0"];
    bb440__0_334 -> bb442__0_334 [label="1"];
    bb440__0_334 -> bb18__0_334 [label="otherwise"];
    bb441__0_334 -> bb444__0_334 [label="return"];
    bb441__0_334 -> bb886__0_334 [label="unwind"];
    bb442__0_334 -> bb443__0_334 [label="return"];
    bb442__0_334 -> bb886__0_334 [label="unwind"];
    bb443__0_334 -> bb795__0_334 [label=""];
    bb444__0_334 -> bb445__0_334 [label="return"];
    bb444__0_334 -> bb886__0_334 [label="unwind"];
    bb445__0_334 -> bb446__0_334 [label="0"];
    bb445__0_334 -> bb447__0_334 [label="1"];
    bb445__0_334 -> bb18__0_334 [label="otherwise"];
    bb446__0_334 -> bb449__0_334 [label="return"];
    bb446__0_334 -> bb886__0_334 [label="unwind"];
    bb447__0_334 -> bb448__0_334 [label="return"];
    bb447__0_334 -> bb886__0_334 [label="unwind"];
    bb448__0_334 -> bb794__0_334 [label=""];
    bb449__0_334 -> bb450__0_334 [label="return"];
    bb449__0_334 -> bb886__0_334 [label="unwind"];
    bb450__0_334 -> bb451__0_334 [label="0"];
    bb450__0_334 -> bb452__0_334 [label="1"];
    bb450__0_334 -> bb18__0_334 [label="otherwise"];
    bb451__0_334 -> bb454__0_334 [label="return"];
    bb451__0_334 -> bb886__0_334 [label="unwind"];
    bb452__0_334 -> bb453__0_334 [label="return"];
    bb452__0_334 -> bb886__0_334 [label="unwind"];
    bb453__0_334 -> bb792__0_334 [label=""];
    bb454__0_334 -> bb455__0_334 [label="return"];
    bb454__0_334 -> bb886__0_334 [label="unwind"];
    bb455__0_334 -> bb456__0_334 [label="0"];
    bb455__0_334 -> bb457__0_334 [label="1"];
    bb455__0_334 -> bb18__0_334 [label="otherwise"];
    bb456__0_334 -> bb459__0_334 [label="return"];
    bb456__0_334 -> bb840__0_334 [label="unwind"];
    bb457__0_334 -> bb458__0_334 [label="return"];
    bb457__0_334 -> bb884__0_334 [label="unwind"];
    bb458__0_334 -> bb874__0_334 [label=""];
    bb459__0_334 -> bb460__0_334 [label="return"];
    bb459__0_334 -> bb840__0_334 [label="unwind"];
    bb460__0_334 -> bb461__0_334 [label="return"];
    bb460__0_334 -> bb840__0_334 [label="unwind"];
    bb461__0_334 -> bb462__0_334 [label="0"];
    bb461__0_334 -> bb463__0_334 [label="1"];
    bb461__0_334 -> bb18__0_334 [label="otherwise"];
    bb462__0_334 -> bb869__0_334 [label="return"];
    bb462__0_334 -> bb884__0_334 [label="unwind"];
    bb463__0_334 -> bb464__0_334 [label="return"];
    bb463__0_334 -> bb840__0_334 [label="unwind"];
    bb464__0_334 -> bb874__0_334 [label="return"];
    bb464__0_334 -> bb884__0_334 [label="unwind"];
    bb465__0_334 -> bb466__0_334 [label="return"];
    bb465__0_334 -> bb886__0_334 [label="unwind"];
    bb466__0_334 -> bb467__0_334 [label="0"];
    bb466__0_334 -> bb468__0_334 [label="1"];
    bb466__0_334 -> bb18__0_334 [label="otherwise"];
    bb467__0_334 -> bb470__0_334 [label="return"];
    bb467__0_334 -> bb886__0_334 [label="unwind"];
    bb468__0_334 -> bb469__0_334 [label="return"];
    bb468__0_334 -> bb886__0_334 [label="unwind"];
    bb469__0_334 -> bb791__0_334 [label=""];
    bb470__0_334 -> bb471__0_334 [label="return"];
    bb470__0_334 -> bb886__0_334 [label="unwind"];
    bb471__0_334 -> bb472__0_334 [label="0"];
    bb471__0_334 -> bb473__0_334 [label="1"];
    bb471__0_334 -> bb18__0_334 [label="otherwise"];
    bb472__0_334 -> bb475__0_334 [label="return"];
    bb472__0_334 -> bb886__0_334 [label="unwind"];
    bb473__0_334 -> bb474__0_334 [label="return"];
    bb473__0_334 -> bb886__0_334 [label="unwind"];
    bb474__0_334 -> bb790__0_334 [label=""];
    bb475__0_334 -> bb476__0_334 [label="return"];
    bb475__0_334 -> bb886__0_334 [label="unwind"];
    bb476__0_334 -> bb477__0_334 [label="return"];
    bb476__0_334 -> bb886__0_334 [label="unwind"];
    bb477__0_334 -> bb478__0_334 [label="0"];
    bb477__0_334 -> bb479__0_334 [label="1"];
    bb477__0_334 -> bb18__0_334 [label="otherwise"];
    bb478__0_334 -> bb482__0_334 [label="0"];
    bb478__0_334 -> bb481__0_334 [label="otherwise"];
    bb479__0_334 -> bb480__0_334 [label="return"];
    bb479__0_334 -> bb886__0_334 [label="unwind"];
    bb480__0_334 -> bb789__0_334 [label=""];
    bb481__0_334 -> bb483__0_334 [label="return"];
    bb481__0_334 -> bb886__0_334 [label="unwind"];
    bb482__0_334 -> bb484__0_334 [label="return"];
    bb482__0_334 -> bb886__0_334 [label="unwind"];
    bb483__0_334 -> bb789__0_334 [label=""];
    bb484__0_334 -> bb485__0_334 [label="return"];
    bb484__0_334 -> bb886__0_334 [label="unwind"];
    bb485__0_334 -> bb486__0_334 [label="0"];
    bb485__0_334 -> bb487__0_334 [label="1"];
    bb485__0_334 -> bb18__0_334 [label="otherwise"];
    bb486__0_334 -> bb489__0_334 [label="return"];
    bb486__0_334 -> bb886__0_334 [label="unwind"];
    bb487__0_334 -> bb488__0_334 [label="return"];
    bb487__0_334 -> bb886__0_334 [label="unwind"];
    bb488__0_334 -> bb788__0_334 [label=""];
    bb489__0_334 -> bb490__0_334 [label="return"];
    bb489__0_334 -> bb886__0_334 [label="unwind"];
    bb490__0_334 -> bb491__0_334 [label="0"];
    bb490__0_334 -> bb492__0_334 [label="1"];
    bb490__0_334 -> bb18__0_334 [label="otherwise"];
    bb491__0_334 -> bb494__0_334 [label="return"];
    bb491__0_334 -> bb886__0_334 [label="unwind"];
    bb492__0_334 -> bb493__0_334 [label="return"];
    bb492__0_334 -> bb886__0_334 [label="unwind"];
    bb493__0_334 -> bb786__0_334 [label=""];
    bb494__0_334 -> bb495__0_334 [label="return"];
    bb494__0_334 -> bb886__0_334 [label="unwind"];
    bb495__0_334 -> bb496__0_334 [label="0"];
    bb495__0_334 -> bb497__0_334 [label="1"];
    bb495__0_334 -> bb18__0_334 [label="otherwise"];
    bb496__0_334 -> bb499__0_334 [label="success"];
    bb496__0_334 -> bb886__0_334 [label="unwind"];
    bb497__0_334 -> bb498__0_334 [label="return"];
    bb497__0_334 -> bb886__0_334 [label="unwind"];
    bb498__0_334 -> bb786__0_334 [label=""];
    bb499__0_334 -> bb501__0_334 [label="0"];
    bb499__0_334 -> bb500__0_334 [label="otherwise"];
    bb500__0_334 -> bb502__0_334 [label=""];
    bb501__0_334 -> bb502__0_334 [label=""];
    bb502__0_334 -> bb503__0_334 [label="return"];
    bb502__0_334 -> bb886__0_334 [label="unwind"];
    bb503__0_334 -> bb504__0_334 [label="return"];
    bb503__0_334 -> bb886__0_334 [label="unwind"];
    bb504__0_334 -> bb505__0_334 [label="return"];
    bb504__0_334 -> bb886__0_334 [label="unwind"];
    bb505__0_334 -> bb506__0_334 [label="return"];
    bb505__0_334 -> bb886__0_334 [label="unwind"];
    bb506__0_334 -> bb507__0_334 [label="return"];
    bb506__0_334 -> bb886__0_334 [label="unwind"];
    bb507__0_334 -> bb508__0_334 [label="return"];
    bb507__0_334 -> bb886__0_334 [label="unwind"];
    bb508__0_334 -> bb509__0_334 [label="0"];
    bb508__0_334 -> bb510__0_334 [label="1"];
    bb508__0_334 -> bb18__0_334 [label="otherwise"];
    bb509__0_334 -> bb513__0_334 [label="0"];
    bb509__0_334 -> bb512__0_334 [label="otherwise"];
    bb510__0_334 -> bb511__0_334 [label="return"];
    bb510__0_334 -> bb886__0_334 [label="unwind"];
    bb511__0_334 -> bb785__0_334 [label=""];
    bb512__0_334 -> bb514__0_334 [label=""];
    bb513__0_334 -> bb515__0_334 [label="0"];
    bb513__0_334 -> bb514__0_334 [label="otherwise"];
    bb514__0_334 -> bb516__0_334 [label="return"];
    bb514__0_334 -> bb886__0_334 [label="unwind"];
    bb515__0_334 -> bb539__0_334 [label="return"];
    bb515__0_334 -> bb886__0_334 [label="unwind"];
    bb516__0_334 -> bb517__0_334 [label="return"];
    bb516__0_334 -> bb886__0_334 [label="unwind"];
    bb517__0_334 -> bb518__0_334 [label="return"];
    bb517__0_334 -> bb886__0_334 [label="unwind"];
    bb518__0_334 -> bb519__0_334 [label="return"];
    bb518__0_334 -> bb886__0_334 [label="unwind"];
    bb519__0_334 -> bb520__0_334 [label="return"];
    bb519__0_334 -> bb839__0_334 [label="unwind"];
    bb520__0_334 -> bb521__0_334 [label="return"];
    bb520__0_334 -> bb839__0_334 [label="unwind"];
    bb521__0_334 -> bb522__0_334 [label="return"];
    bb521__0_334 -> bb886__0_334 [label="unwind"];
    bb522__0_334 -> bb523__0_334 [label="return"];
    bb522__0_334 -> bb886__0_334 [label="unwind"];
    bb523__0_334 -> bb524__0_334 [label="return"];
    bb523__0_334 -> bb886__0_334 [label="unwind"];
    bb524__0_334 -> bb525__0_334 [label="return"];
    bb524__0_334 -> bb886__0_334 [label="unwind"];
    bb525__0_334 -> bb526__0_334 [label="return"];
    bb525__0_334 -> bb886__0_334 [label="unwind"];
    bb526__0_334 -> bb527__0_334 [label="return"];
    bb526__0_334 -> bb886__0_334 [label="unwind"];
    bb527__0_334 -> bb528__0_334 [label="return"];
    bb527__0_334 -> bb838__0_334 [label="unwind"];
    bb528__0_334 -> bb529__0_334 [label="return"];
    bb528__0_334 -> bb838__0_334 [label="unwind"];
    bb529__0_334 -> bb530__0_334 [label="return"];
    bb529__0_334 -> bb886__0_334 [label="unwind"];
    bb530__0_334 -> bb531__0_334 [label="return"];
    bb530__0_334 -> bb886__0_334 [label="unwind"];
    bb531__0_334 -> bb532__0_334 [label="return"];
    bb531__0_334 -> bb886__0_334 [label="unwind"];
    bb532__0_334 -> bb533__0_334 [label="return"];
    bb532__0_334 -> bb886__0_334 [label="unwind"];
    bb533__0_334 -> bb534__0_334 [label="return"];
    bb533__0_334 -> bb886__0_334 [label="unwind"];
    bb534__0_334 -> bb535__0_334 [label="return"];
    bb534__0_334 -> bb886__0_334 [label="unwind"];
    bb535__0_334 -> bb536__0_334 [label="return"];
    bb535__0_334 -> bb837__0_334 [label="unwind"];
    bb536__0_334 -> bb537__0_334 [label="return"];
    bb536__0_334 -> bb837__0_334 [label="unwind"];
    bb537__0_334 -> bb538__0_334 [label="return"];
    bb537__0_334 -> bb886__0_334 [label="unwind"];
    bb538__0_334 -> bb785__0_334 [label=""];
    bb539__0_334 -> bb540__0_334 [label="return"];
    bb539__0_334 -> bb886__0_334 [label="unwind"];
    bb540__0_334 -> bb541__0_334 [label="0"];
    bb540__0_334 -> bb542__0_334 [label="1"];
    bb540__0_334 -> bb18__0_334 [label="otherwise"];
    bb541__0_334 -> bb544__0_334 [label="return"];
    bb541__0_334 -> bb886__0_334 [label="unwind"];
    bb542__0_334 -> bb543__0_334 [label="return"];
    bb542__0_334 -> bb886__0_334 [label="unwind"];
    bb543__0_334 -> bb783__0_334 [label=""];
    bb544__0_334 -> bb545__0_334 [label="return"];
    bb544__0_334 -> bb886__0_334 [label="unwind"];
    bb545__0_334 -> bb546__0_334 [label="0"];
    bb545__0_334 -> bb547__0_334 [label="1"];
    bb545__0_334 -> bb18__0_334 [label="otherwise"];
    bb546__0_334 -> bb549__0_334 [label="return"];
    bb546__0_334 -> bb836__0_334 [label="unwind"];
    bb547__0_334 -> bb548__0_334 [label="return"];
    bb547__0_334 -> bb883__0_334 [label="unwind"];
    bb548__0_334 -> bb873__0_334 [label=""];
    bb549__0_334 -> bb550__0_334 [label="return"];
    bb549__0_334 -> bb836__0_334 [label="unwind"];
    bb550__0_334 -> bb551__0_334 [label="return"];
    bb550__0_334 -> bb836__0_334 [label="unwind"];
    bb551__0_334 -> bb552__0_334 [label="return"];
    bb551__0_334 -> bb836__0_334 [label="unwind"];
    bb552__0_334 -> bb553__0_334 [label="0"];
    bb552__0_334 -> bb554__0_334 [label="1"];
    bb552__0_334 -> bb18__0_334 [label="otherwise"];
    bb553__0_334 -> bb556__0_334 [label="return"];
    bb553__0_334 -> bb836__0_334 [label="unwind"];
    bb554__0_334 -> bb555__0_334 [label="return"];
    bb554__0_334 -> bb836__0_334 [label="unwind"];
    bb555__0_334 -> bb782__0_334 [label=""];
    bb556__0_334 -> bb557__0_334 [label="return"];
    bb556__0_334 -> bb836__0_334 [label="unwind"];
    bb557__0_334 -> bb558__0_334 [label="0"];
    bb557__0_334 -> bb559__0_334 [label="1"];
    bb557__0_334 -> bb18__0_334 [label="otherwise"];
    bb558__0_334 -> bb870__0_334 [label="return"];
    bb558__0_334 -> bb883__0_334 [label="unwind"];
    bb559__0_334 -> bb560__0_334 [label="return"];
    bb559__0_334 -> bb836__0_334 [label="unwind"];
    bb560__0_334 -> bb782__0_334 [label=""];
    bb561__0_334 -> bb570__0_334 [label=""];
    bb562__0_334 -> bb563__0_334 [label="return"];
    bb562__0_334 -> bb886__0_334 [label="unwind"];
    bb563__0_334 -> bb564__0_334 [label="return"];
    bb563__0_334 -> bb886__0_334 [label="unwind"];
    bb564__0_334 -> bb565__0_334 [label="return"];
    bb564__0_334 -> bb886__0_334 [label="unwind"];
    bb565__0_334 -> bb566__0_334 [label="return"];
    bb565__0_334 -> bb835__0_334 [label="unwind"];
    bb566__0_334 -> bb567__0_334 [label="return"];
    bb566__0_334 -> bb835__0_334 [label="unwind"];
    bb567__0_334 -> bb568__0_334 [label="return"];
    bb567__0_334 -> bb886__0_334 [label="unwind"];
    bb568__0_334 -> bb569__0_334 [label="return"];
    bb568__0_334 -> bb886__0_334 [label="unwind"];
    bb569__0_334 -> bb570__0_334 [label=""];
    bb570__0_334 -> bb571__0_334 [label="return"];
    bb570__0_334 -> bb886__0_334 [label="unwind"];
    bb571__0_334 -> bb572__0_334 [label="0"];
    bb571__0_334 -> bb573__0_334 [label="1"];
    bb571__0_334 -> bb18__0_334 [label="otherwise"];
    bb572__0_334 -> bb575__0_334 [label="return"];
    bb572__0_334 -> bb886__0_334 [label="unwind"];
    bb573__0_334 -> bb574__0_334 [label="return"];
    bb573__0_334 -> bb886__0_334 [label="unwind"];
    bb574__0_334 -> bb784__0_334 [label=""];
    bb575__0_334 -> bb576__0_334 [label="return"];
    bb575__0_334 -> bb886__0_334 [label="unwind"];
    bb576__0_334 -> bb577__0_334 [label="0"];
    bb576__0_334 -> bb578__0_334 [label="1"];
    bb576__0_334 -> bb18__0_334 [label="otherwise"];
    bb577__0_334 -> bb580__0_334 [label="return"];
    bb577__0_334 -> bb886__0_334 [label="unwind"];
    bb578__0_334 -> bb579__0_334 [label="return"];
    bb578__0_334 -> bb886__0_334 [label="unwind"];
    bb579__0_334 -> bb780__0_334 [label=""];
    bb580__0_334 -> bb581__0_334 [label="return"];
    bb580__0_334 -> bb886__0_334 [label="unwind"];
    bb581__0_334 -> bb582__0_334 [label="0"];
    bb581__0_334 -> bb583__0_334 [label="1"];
    bb581__0_334 -> bb18__0_334 [label="otherwise"];
    bb582__0_334 -> bb585__0_334 [label="return"];
    bb582__0_334 -> bb834__0_334 [label="unwind"];
    bb583__0_334 -> bb584__0_334 [label="return"];
    bb583__0_334 -> bb882__0_334 [label="unwind"];
    bb584__0_334 -> bb872__0_334 [label=""];
    bb585__0_334 -> bb586__0_334 [label="return"];
    bb585__0_334 -> bb834__0_334 [label="unwind"];
    bb586__0_334 -> bb587__0_334 [label="return"];
    bb586__0_334 -> bb834__0_334 [label="unwind"];
    bb587__0_334 -> bb588__0_334 [label="return"];
    bb587__0_334 -> bb834__0_334 [label="unwind"];
    bb588__0_334 -> bb589__0_334 [label="0"];
    bb588__0_334 -> bb590__0_334 [label="1"];
    bb588__0_334 -> bb18__0_334 [label="otherwise"];
    bb589__0_334 -> bb592__0_334 [label="return"];
    bb589__0_334 -> bb834__0_334 [label="unwind"];
    bb590__0_334 -> bb591__0_334 [label="return"];
    bb590__0_334 -> bb834__0_334 [label="unwind"];
    bb591__0_334 -> bb779__0_334 [label=""];
    bb592__0_334 -> bb593__0_334 [label="return"];
    bb592__0_334 -> bb834__0_334 [label="unwind"];
    bb593__0_334 -> bb594__0_334 [label="0"];
    bb593__0_334 -> bb595__0_334 [label="1"];
    bb593__0_334 -> bb18__0_334 [label="otherwise"];
    bb594__0_334 -> bb871__0_334 [label="return"];
    bb594__0_334 -> bb882__0_334 [label="unwind"];
    bb595__0_334 -> bb596__0_334 [label="return"];
    bb595__0_334 -> bb834__0_334 [label="unwind"];
    bb596__0_334 -> bb779__0_334 [label=""];
    bb597__0_334 -> bb606__0_334 [label=""];
    bb598__0_334 -> bb599__0_334 [label="return"];
    bb598__0_334 -> bb886__0_334 [label="unwind"];
    bb599__0_334 -> bb600__0_334 [label="return"];
    bb599__0_334 -> bb886__0_334 [label="unwind"];
    bb600__0_334 -> bb601__0_334 [label="return"];
    bb600__0_334 -> bb886__0_334 [label="unwind"];
    bb601__0_334 -> bb602__0_334 [label="return"];
    bb601__0_334 -> bb833__0_334 [label="unwind"];
    bb602__0_334 -> bb603__0_334 [label="return"];
    bb602__0_334 -> bb833__0_334 [label="unwind"];
    bb603__0_334 -> bb604__0_334 [label="return"];
    bb603__0_334 -> bb886__0_334 [label="unwind"];
    bb604__0_334 -> bb605__0_334 [label="return"];
    bb604__0_334 -> bb886__0_334 [label="unwind"];
    bb605__0_334 -> bb606__0_334 [label=""];
    bb606__0_334 -> bb607__0_334 [label="return"];
    bb606__0_334 -> bb886__0_334 [label="unwind"];
    bb607__0_334 -> bb608__0_334 [label="0"];
    bb607__0_334 -> bb609__0_334 [label="1"];
    bb607__0_334 -> bb18__0_334 [label="otherwise"];
    bb608__0_334 -> bb611__0_334 [label="return"];
    bb608__0_334 -> bb886__0_334 [label="unwind"];
    bb609__0_334 -> bb610__0_334 [label="return"];
    bb609__0_334 -> bb886__0_334 [label="unwind"];
    bb610__0_334 -> bb781__0_334 [label=""];
    bb611__0_334 -> bb612__0_334 [label="return"];
    bb611__0_334 -> bb886__0_334 [label="unwind"];
    bb612__0_334 -> bb613__0_334 [label="0"];
    bb612__0_334 -> bb614__0_334 [label="1"];
    bb612__0_334 -> bb18__0_334 [label="otherwise"];
    bb613__0_334 -> bb616__0_334 [label="return"];
    bb613__0_334 -> bb886__0_334 [label="unwind"];
    bb614__0_334 -> bb615__0_334 [label="return"];
    bb614__0_334 -> bb886__0_334 [label="unwind"];
    bb615__0_334 -> bb781__0_334 [label=""];
    bb616__0_334 -> bb617__0_334 [label="return"];
    bb616__0_334 -> bb886__0_334 [label="unwind"];
    bb617__0_334 -> bb618__0_334 [label="0"];
    bb617__0_334 -> bb619__0_334 [label="1"];
    bb617__0_334 -> bb18__0_334 [label="otherwise"];
    bb618__0_334 -> bb621__0_334 [label="return"];
    bb618__0_334 -> bb886__0_334 [label="unwind"];
    bb619__0_334 -> bb620__0_334 [label="return"];
    bb619__0_334 -> bb886__0_334 [label="unwind"];
    bb620__0_334 -> bb776__0_334 [label=""];
    bb621__0_334 -> bb622__0_334 [label="return"];
    bb621__0_334 -> bb886__0_334 [label="unwind"];
    bb622__0_334 -> bb623__0_334 [label="0"];
    bb622__0_334 -> bb624__0_334 [label="1"];
    bb622__0_334 -> bb18__0_334 [label="otherwise"];
    bb623__0_334 -> bb626__0_334 [label="return"];
    bb623__0_334 -> bb886__0_334 [label="unwind"];
    bb624__0_334 -> bb625__0_334 [label="return"];
    bb624__0_334 -> bb886__0_334 [label="unwind"];
    bb625__0_334 -> bb776__0_334 [label=""];
    bb626__0_334 -> bb627__0_334 [label="return"];
    bb626__0_334 -> bb886__0_334 [label="unwind"];
    bb627__0_334 -> bb628__0_334 [label="0"];
    bb627__0_334 -> bb629__0_334 [label="1"];
    bb627__0_334 -> bb18__0_334 [label="otherwise"];
    bb628__0_334 -> bb631__0_334 [label="return"];
    bb628__0_334 -> bb886__0_334 [label="unwind"];
    bb629__0_334 -> bb630__0_334 [label="return"];
    bb629__0_334 -> bb886__0_334 [label="unwind"];
    bb630__0_334 -> bb777__0_334 [label=""];
    bb631__0_334 -> bb632__0_334 [label="return"];
    bb631__0_334 -> bb886__0_334 [label="unwind"];
    bb632__0_334 -> bb633__0_334 [label="0"];
    bb632__0_334 -> bb634__0_334 [label="1"];
    bb632__0_334 -> bb18__0_334 [label="otherwise"];
    bb633__0_334 -> bb636__0_334 [label="return"];
    bb633__0_334 -> bb832__0_334 [label="unwind"];
    bb634__0_334 -> bb635__0_334 [label="return"];
    bb634__0_334 -> bb881__0_334 [label="unwind"];
    bb635__0_334 -> bb775__0_334 [label=""];
    bb636__0_334 -> bb637__0_334 [label="return"];
    bb636__0_334 -> bb832__0_334 [label="unwind"];
    bb637__0_334 -> bb638__0_334 [label="0"];
    bb637__0_334 -> bb639__0_334 [label="1"];
    bb637__0_334 -> bb18__0_334 [label="otherwise"];
    bb638__0_334 -> bb641__0_334 [label="return"];
    bb638__0_334 -> bb832__0_334 [label="unwind"];
    bb639__0_334 -> bb640__0_334 [label="return"];
    bb639__0_334 -> bb832__0_334 [label="unwind"];
    bb640__0_334 -> bb773__0_334 [label=""];
    bb641__0_334 -> bb642__0_334 [label="return"];
    bb641__0_334 -> bb832__0_334 [label="unwind"];
    bb642__0_334 -> bb643__0_334 [label="return"];
    bb642__0_334 -> bb832__0_334 [label="unwind"];
    bb643__0_334 -> bb644__0_334 [label="0"];
    bb643__0_334 -> bb645__0_334 [label="1"];
    bb643__0_334 -> bb18__0_334 [label="otherwise"];
    bb644__0_334 -> bb647__0_334 [label="return"];
    bb644__0_334 -> bb832__0_334 [label="unwind"];
    bb645__0_334 -> bb646__0_334 [label="return"];
    bb645__0_334 -> bb832__0_334 [label="unwind"];
    bb646__0_334 -> bb772__0_334 [label=""];
    bb647__0_334 -> bb648__0_334 [label="return"];
    bb647__0_334 -> bb832__0_334 [label="unwind"];
    bb648__0_334 -> bb649__0_334 [label="0"];
    bb648__0_334 -> bb650__0_334 [label="1"];
    bb648__0_334 -> bb18__0_334 [label="otherwise"];
    bb649__0_334 -> bb652__0_334 [label="return"];
    bb649__0_334 -> bb832__0_334 [label="unwind"];
    bb650__0_334 -> bb651__0_334 [label="return"];
    bb650__0_334 -> bb832__0_334 [label="unwind"];
    bb651__0_334 -> bb771__0_334 [label=""];
    bb652__0_334 -> bb653__0_334 [label="return"];
    bb652__0_334 -> bb832__0_334 [label="unwind"];
    bb653__0_334 -> bb654__0_334 [label="0"];
    bb653__0_334 -> bb655__0_334 [label="1"];
    bb653__0_334 -> bb18__0_334 [label="otherwise"];
    bb654__0_334 -> bb657__0_334 [label="return"];
    bb654__0_334 -> bb832__0_334 [label="unwind"];
    bb655__0_334 -> bb656__0_334 [label="return"];
    bb655__0_334 -> bb832__0_334 [label="unwind"];
    bb656__0_334 -> bb771__0_334 [label=""];
    bb657__0_334 -> bb658__0_334 [label="return"];
    bb657__0_334 -> bb832__0_334 [label="unwind"];
    bb658__0_334 -> bb659__0_334 [label="return"];
    bb658__0_334 -> bb832__0_334 [label="unwind"];
    bb659__0_334 -> bb660__0_334 [label="0"];
    bb659__0_334 -> bb661__0_334 [label="1"];
    bb659__0_334 -> bb18__0_334 [label="otherwise"];
    bb660__0_334 -> bb663__0_334 [label="return"];
    bb660__0_334 -> bb832__0_334 [label="unwind"];
    bb661__0_334 -> bb662__0_334 [label="return"];
    bb661__0_334 -> bb832__0_334 [label="unwind"];
    bb662__0_334 -> bb774__0_334 [label=""];
    bb663__0_334 -> bb664__0_334 [label="return"];
    bb663__0_334 -> bb832__0_334 [label="unwind"];
    bb664__0_334 -> bb665__0_334 [label="return"];
    bb664__0_334 -> bb832__0_334 [label="unwind"];
    bb665__0_334 -> bb666__0_334 [label="0"];
    bb665__0_334 -> bb667__0_334 [label="1"];
    bb665__0_334 -> bb18__0_334 [label="otherwise"];
    bb666__0_334 -> bb669__0_334 [label="return"];
    bb666__0_334 -> bb832__0_334 [label="unwind"];
    bb667__0_334 -> bb668__0_334 [label="return"];
    bb667__0_334 -> bb832__0_334 [label="unwind"];
    bb668__0_334 -> bb770__0_334 [label=""];
    bb669__0_334 -> bb670__0_334 [label="return"];
    bb669__0_334 -> bb832__0_334 [label="unwind"];
    bb670__0_334 -> bb671__0_334 [label="0"];
    bb670__0_334 -> bb672__0_334 [label="1"];
    bb670__0_334 -> bb18__0_334 [label="otherwise"];
    bb671__0_334 -> bb674__0_334 [label="return"];
    bb671__0_334 -> bb886__0_334 [label="unwind"];
    bb672__0_334 -> bb673__0_334 [label="return"];
    bb672__0_334 -> bb832__0_334 [label="unwind"];
    bb673__0_334 -> bb770__0_334 [label=""];
    bb674__0_334 -> bb675__0_334 [label="return"];
    bb674__0_334 -> bb886__0_334 [label="unwind"];
    bb675__0_334 -> bb676__0_334 [label="return"];
    bb675__0_334 -> bb886__0_334 [label="unwind"];
    bb676__0_334 -> bb677__0_334 [label="0"];
    bb676__0_334 -> bb678__0_334 [label="1"];
    bb676__0_334 -> bb18__0_334 [label="otherwise"];
    bb677__0_334 -> bb680__0_334 [label="return"];
    bb677__0_334 -> bb831__0_334 [label="unwind"];
    bb678__0_334 -> bb679__0_334 [label="return"];
    bb678__0_334 -> bb880__0_334 [label="unwind"];
    bb679__0_334 -> bb769__0_334 [label=""];
    bb680__0_334 -> bb681__0_334 [label="return"];
    bb680__0_334 -> bb831__0_334 [label="unwind"];
    bb681__0_334 -> bb682__0_334 [label="return"];
    bb681__0_334 -> bb831__0_334 [label="unwind"];
    bb682__0_334 -> bb683__0_334 [label="0"];
    bb682__0_334 -> bb684__0_334 [label="1"];
    bb682__0_334 -> bb18__0_334 [label="otherwise"];
    bb683__0_334 -> bb686__0_334 [label="return"];
    bb683__0_334 -> bb831__0_334 [label="unwind"];
    bb684__0_334 -> bb685__0_334 [label="return"];
    bb684__0_334 -> bb831__0_334 [label="unwind"];
    bb685__0_334 -> bb767__0_334 [label=""];
    bb686__0_334 -> bb687__0_334 [label="return"];
    bb686__0_334 -> bb831__0_334 [label="unwind"];
    bb687__0_334 -> bb688__0_334 [label="0"];
    bb687__0_334 -> bb689__0_334 [label="1"];
    bb687__0_334 -> bb18__0_334 [label="otherwise"];
    bb688__0_334 -> bb691__0_334 [label="return"];
    bb688__0_334 -> bb831__0_334 [label="unwind"];
    bb689__0_334 -> bb690__0_334 [label="return"];
    bb689__0_334 -> bb831__0_334 [label="unwind"];
    bb690__0_334 -> bb767__0_334 [label=""];
    bb691__0_334 -> bb692__0_334 [label="return"];
    bb691__0_334 -> bb831__0_334 [label="unwind"];
    bb692__0_334 -> bb693__0_334 [label="return"];
    bb692__0_334 -> bb831__0_334 [label="unwind"];
    bb693__0_334 -> bb694__0_334 [label="0"];
    bb693__0_334 -> bb695__0_334 [label="1"];
    bb693__0_334 -> bb18__0_334 [label="otherwise"];
    bb694__0_334 -> bb697__0_334 [label="return"];
    bb694__0_334 -> bb831__0_334 [label="unwind"];
    bb695__0_334 -> bb696__0_334 [label="return"];
    bb695__0_334 -> bb831__0_334 [label="unwind"];
    bb696__0_334 -> bb766__0_334 [label=""];
    bb697__0_334 -> bb698__0_334 [label="return"];
    bb697__0_334 -> bb831__0_334 [label="unwind"];
    bb698__0_334 -> bb699__0_334 [label="0"];
    bb698__0_334 -> bb700__0_334 [label="1"];
    bb698__0_334 -> bb18__0_334 [label="otherwise"];
    bb699__0_334 -> bb702__0_334 [label="return"];
    bb699__0_334 -> bb886__0_334 [label="unwind"];
    bb700__0_334 -> bb701__0_334 [label="return"];
    bb700__0_334 -> bb831__0_334 [label="unwind"];
    bb701__0_334 -> bb766__0_334 [label=""];
    bb702__0_334 -> bb703__0_334 [label="return"];
    bb702__0_334 -> bb886__0_334 [label="unwind"];
    bb703__0_334 -> bb704__0_334 [label="return"];
    bb703__0_334 -> bb886__0_334 [label="unwind"];
    bb704__0_334 -> bb705__0_334 [label="0"];
    bb704__0_334 -> bb706__0_334 [label="1"];
    bb704__0_334 -> bb18__0_334 [label="otherwise"];
    bb705__0_334 -> bb708__0_334 [label="return"];
    bb705__0_334 -> bb886__0_334 [label="unwind"];
    bb706__0_334 -> bb707__0_334 [label="return"];
    bb706__0_334 -> bb886__0_334 [label="unwind"];
    bb707__0_334 -> bb778__0_334 [label=""];
    bb708__0_334 -> bb709__0_334 [label="return"];
    bb708__0_334 -> bb886__0_334 [label="unwind"];
    bb709__0_334 -> bb710__0_334 [label="0"];
    bb709__0_334 -> bb711__0_334 [label="1"];
    bb709__0_334 -> bb18__0_334 [label="otherwise"];
    bb710__0_334 -> bb713__0_334 [label="return"];
    bb710__0_334 -> bb886__0_334 [label="unwind"];
    bb711__0_334 -> bb712__0_334 [label="return"];
    bb711__0_334 -> bb886__0_334 [label="unwind"];
    bb712__0_334 -> bb765__0_334 [label=""];
    bb713__0_334 -> bb714__0_334 [label="return"];
    bb713__0_334 -> bb886__0_334 [label="unwind"];
    bb714__0_334 -> bb715__0_334 [label="0"];
    bb714__0_334 -> bb716__0_334 [label="1"];
    bb714__0_334 -> bb18__0_334 [label="otherwise"];
    bb715__0_334 -> bb719__0_334 [label="0"];
    bb715__0_334 -> bb718__0_334 [label="otherwise"];
    bb716__0_334 -> bb717__0_334 [label="return"];
    bb716__0_334 -> bb886__0_334 [label="unwind"];
    bb717__0_334 -> bb765__0_334 [label=""];
    bb718__0_334 -> bb720__0_334 [label="return"];
    bb718__0_334 -> bb886__0_334 [label="unwind"];
    bb719__0_334 -> bb721__0_334 [label="return"];
    bb719__0_334 -> bb886__0_334 [label="unwind"];
    bb720__0_334 -> bb726__0_334 [label=""];
    bb721__0_334 -> bb724__0_334 [label="0"];
    bb721__0_334 -> bb722__0_334 [label="otherwise"];
    bb722__0_334 -> bb723__0_334 [label="return"];
    bb722__0_334 -> bb886__0_334 [label="unwind"];
    bb723__0_334 -> bb725__0_334 [label=""];
    bb724__0_334 -> bb725__0_334 [label=""];
    bb725__0_334 -> bb726__0_334 [label=""];
    bb726__0_334 -> bb727__0_334 [label="return"];
    bb726__0_334 -> bb886__0_334 [label="unwind"];
    bb727__0_334 -> bb728__0_334 [label="success"];
    bb727__0_334 -> bb886__0_334 [label="unwind"];
    bb728__0_334 -> bb729__0_334 [label="return"];
    bb728__0_334 -> bb886__0_334 [label="unwind"];
    bb729__0_334 -> bb730__0_334 [label="return"];
    bb729__0_334 -> bb886__0_334 [label="unwind"];
    bb730__0_334 -> bb731__0_334 [label="return"];
    bb730__0_334 -> bb886__0_334 [label="unwind"];
    bb731__0_334 -> bb732__0_334 [label="return"];
    bb731__0_334 -> bb886__0_334 [label="unwind"];
    bb732__0_334 -> bb733__0_334 [label="return"];
    bb732__0_334 -> bb886__0_334 [label="unwind"];
    bb733__0_334 -> bb734__0_334 [label="0"];
    bb733__0_334 -> bb735__0_334 [label="1"];
    bb733__0_334 -> bb18__0_334 [label="otherwise"];
    bb734__0_334 -> bb738__0_334 [label="0"];
    bb734__0_334 -> bb737__0_334 [label="otherwise"];
    bb735__0_334 -> bb736__0_334 [label="return"];
    bb735__0_334 -> bb886__0_334 [label="unwind"];
    bb736__0_334 -> bb764__0_334 [label=""];
    bb737__0_334 -> bb746__0_334 [label=""];
    bb738__0_334 -> bb739__0_334 [label="return"];
    bb738__0_334 -> bb886__0_334 [label="unwind"];
    bb739__0_334 -> bb740__0_334 [label="return"];
    bb739__0_334 -> bb886__0_334 [label="unwind"];
    bb740__0_334 -> bb741__0_334 [label="return"];
    bb740__0_334 -> bb886__0_334 [label="unwind"];
    bb741__0_334 -> bb742__0_334 [label="return"];
    bb741__0_334 -> bb830__0_334 [label="unwind"];
    bb742__0_334 -> bb743__0_334 [label="return"];
    bb742__0_334 -> bb830__0_334 [label="unwind"];
    bb743__0_334 -> bb744__0_334 [label="return"];
    bb743__0_334 -> bb886__0_334 [label="unwind"];
    bb744__0_334 -> bb745__0_334 [label="return"];
    bb744__0_334 -> bb886__0_334 [label="unwind"];
    bb745__0_334 -> bb746__0_334 [label=""];
    bb746__0_334 -> bb747__0_334 [label="return"];
    bb746__0_334 -> bb886__0_334 [label="unwind"];
    bb747__0_334 -> bb748__0_334 [label="0"];
    bb747__0_334 -> bb749__0_334 [label="1"];
    bb747__0_334 -> bb18__0_334 [label="otherwise"];
    bb748__0_334 -> bb751__0_334 [label="return"];
    bb748__0_334 -> bb886__0_334 [label="unwind"];
    bb749__0_334 -> bb750__0_334 [label="return"];
    bb749__0_334 -> bb886__0_334 [label="unwind"];
    bb750__0_334 -> bb764__0_334 [label=""];
    bb751__0_334 -> bb752__0_334 [label="return"];
    bb751__0_334 -> bb886__0_334 [label="unwind"];
    bb752__0_334 -> bb753__0_334 [label="return"];
    bb752__0_334 -> bb886__0_334 [label="unwind"];
    bb753__0_334 -> bb754__0_334 [label="0"];
    bb753__0_334 -> bb755__0_334 [label="1"];
    bb753__0_334 -> bb18__0_334 [label="otherwise"];
    bb754__0_334 -> bb757__0_334 [label="return"];
    bb754__0_334 -> bb886__0_334 [label="unwind"];
    bb755__0_334 -> bb756__0_334 [label="return"];
    bb755__0_334 -> bb886__0_334 [label="unwind"];
    bb756__0_334 -> bb764__0_334 [label=""];
    bb757__0_334 -> bb758__0_334 [label="return"];
    bb757__0_334 -> bb829__0_334 [label="unwind"];
    bb758__0_334 -> bb759__0_334 [label="return"];
    bb758__0_334 -> bb828__0_334 [label="unwind"];
    bb759__0_334 -> bb760__0_334 [label="return"];
    bb759__0_334 -> bb828__0_334 [label="unwind"];
    bb760__0_334 -> bb761__0_334 [label="return"];
    bb760__0_334 -> bb829__0_334 [label="unwind"];
    bb761__0_334 -> bb762__0_334 [label="return"];
    bb761__0_334 -> bb886__0_334 [label="unwind"];
    bb762__0_334 -> bb763__0_334 [label="return"];
    bb762__0_334 -> bb891__0_334 [label="unwind"];
    bb763__0_334 -> bb827__0_334 [label=""];
    bb764__0_334 -> bb765__0_334 [label=""];
    bb765__0_334 -> bb778__0_334 [label=""];
    bb766__0_334 -> bb768__0_334 [label=""];
    bb767__0_334 -> bb768__0_334 [label=""];
    bb768__0_334 -> bb769__0_334 [label="return"];
    bb768__0_334 -> bb886__0_334 [label="unwind"];
    bb769__0_334 -> bb778__0_334 [label=""];
    bb770__0_334 -> bb774__0_334 [label=""];
    bb771__0_334 -> bb772__0_334 [label=""];
    bb772__0_334 -> bb773__0_334 [label=""];
    bb773__0_334 -> bb774__0_334 [label=""];
    bb774__0_334 -> bb775__0_334 [label="return"];
    bb774__0_334 -> bb886__0_334 [label="unwind"];
    bb775__0_334 -> bb778__0_334 [label=""];
    bb776__0_334 -> bb777__0_334 [label=""];
    bb777__0_334 -> bb778__0_334 [label=""];
    bb778__0_334 -> bb781__0_334 [label=""];
    bb779__0_334 -> bb872__0_334 [label="return"];
    bb779__0_334 -> bb882__0_334 [label="unwind"];
    bb780__0_334 -> bb781__0_334 [label=""];
    bb781__0_334 -> bb784__0_334 [label=""];
    bb782__0_334 -> bb873__0_334 [label="return"];
    bb782__0_334 -> bb883__0_334 [label="unwind"];
    bb783__0_334 -> bb784__0_334 [label=""];
    bb784__0_334 -> bb785__0_334 [label=""];
    bb785__0_334 -> bb787__0_334 [label=""];
    bb786__0_334 -> bb787__0_334 [label=""];
    bb787__0_334 -> bb788__0_334 [label=""];
    bb788__0_334 -> bb789__0_334 [label=""];
    bb789__0_334 -> bb790__0_334 [label=""];
    bb790__0_334 -> bb791__0_334 [label=""];
    bb791__0_334 -> bb793__0_334 [label=""];
    bb792__0_334 -> bb793__0_334 [label=""];
    bb793__0_334 -> bb794__0_334 [label=""];
    bb794__0_334 -> bb795__0_334 [label=""];
    bb795__0_334 -> bb801__0_334 [label=""];
    bb796__0_334 -> bb797__0_334 [label=""];
    bb797__0_334 -> bb798__0_334 [label=""];
    bb798__0_334 -> bb800__0_334 [label=""];
    bb799__0_334 -> bb800__0_334 [label=""];
    bb800__0_334 -> bb801__0_334 [label=""];
    bb801__0_334 -> bb802__0_334 [label="0"];
    bb801__0_334 -> bb875__0_334 [label="otherwise"];
    bb802__0_334 -> bb803__0_334 [label=""];
    bb803__0_334 -> bb806__0_334 [label=""];
    bb804__0_334 -> bb805__0_334 [label=""];
    bb805__0_334 -> bb806__0_334 [label=""];
    bb806__0_334 -> bb807__0_334 [label=""];
    bb807__0_334 -> bb808__0_334 [label=""];
    bb808__0_334 -> bb816__0_334 [label=""];
    bb809__0_334 -> bb815__0_334 [label=""];
    bb810__0_334 -> bb811__0_334 [label=""];
    bb811__0_334 -> bb812__0_334 [label=""];
    bb812__0_334 -> bb813__0_334 [label=""];
    bb813__0_334 -> bb814__0_334 [label="return"];
    bb813__0_334 -> bb891__0_334 [label="unwind"];
    bb814__0_334 -> bb815__0_334 [label=""];
    bb815__0_334 -> bb816__0_334 [label=""];
    bb816__0_334 -> bb877__0_334 [label=""];
    bb817__0_334 -> bb823__0_334 [label=""];
    bb818__0_334 -> bb819__0_334 [label=""];
    bb819__0_334 -> bb820__0_334 [label=""];
    bb820__0_334 -> bb821__0_334 [label=""];
    bb821__0_334 -> bb822__0_334 [label="return"];
    bb821__0_334 -> bb891__0_334 [label="unwind"];
    bb822__0_334 -> bb823__0_334 [label=""];
    bb823__0_334 -> bb877__0_334 [label=""];
    bb824__0_334 -> bb879__0_334 [label=""];
    bb825__0_334 -> bb826__0_334 [label=""];
    bb826__0_334 -> bb827__0_334 [label=""];
    bb828__0_334 -> bb829__0_334 [label="return"];
    bb829__0_334 -> bb886__0_334 [label="return"];
    bb830__0_334 -> bb886__0_334 [label="return"];
    bb831__0_334 -> bb886__0_334 [label="return"];
    bb832__0_334 -> bb886__0_334 [label="return"];
    bb833__0_334 -> bb886__0_334 [label="return"];
    bb834__0_334 -> bb882__0_334 [label="return"];
    bb835__0_334 -> bb886__0_334 [label="return"];
    bb836__0_334 -> bb883__0_334 [label="return"];
    bb837__0_334 -> bb886__0_334 [label="return"];
    bb838__0_334 -> bb886__0_334 [label="return"];
    bb839__0_334 -> bb886__0_334 [label="return"];
    bb840__0_334 -> bb884__0_334 [label="return"];
    bb841__0_334 -> bb842__0_334 [label="return"];
    bb842__0_334 -> bb843__0_334 [label="return"];
    bb843__0_334 -> bb886__0_334 [label="return"];
    bb844__0_334 -> bb886__0_334 [label="return"];
    bb845__0_334 -> bb891__0_334 [label="return"];
    bb846__0_334 -> bb891__0_334 [label="return"];
    bb847__0_334 -> bb891__0_334 [label="return"];
    bb848__0_334 -> bb851__0_334 [label="return"];
    bb849__0_334 -> bb851__0_334 [label="return"];
    bb850__0_334 -> bb851__0_334 [label="return"];
    bb851__0_334 -> bb891__0_334 [label="return"];
    bb852__0_334 -> bb855__0_334 [label="return"];
    bb853__0_334 -> bb855__0_334 [label="return"];
    bb854__0_334 -> bb855__0_334 [label="return"];
    bb855__0_334 -> bb891__0_334 [label="return"];
    bb856__0_334 -> bb891__0_334 [label="return"];
    bb857__0_334 -> bb891__0_334 [label="return"];
    bb858__0_334 -> bb891__0_334 [label="return"];
    bb859__0_334 -> bb891__0_334 [label="return"];
    bb860__0_334 -> bb894__0_334 [label="return"];
    bb861__0_334 -> bb894__0_334 [label="return"];
    bb862__0_334 -> bb894__0_334 [label="return"];
    bb863__0_334 -> bb894__0_334 [label="return"];
    bb864__0_334 -> bb868__0_334 [label="return"];
    bb865__0_334 -> bb868__0_334 [label="return"];
    bb866__0_334 -> bb868__0_334 [label="return"];
    bb867__0_334 -> bb868__0_334 [label="return"];
    bb869__0_334 -> bb465__0_334 [label="return"];
    bb869__0_334 -> bb886__0_334 [label="unwind"];
    bb870__0_334 -> bb561__0_334 [label="0"];
    bb870__0_334 -> bb562__0_334 [label="otherwise"];
    bb871__0_334 -> bb597__0_334 [label="0"];
    bb871__0_334 -> bb598__0_334 [label="otherwise"];
    bb872__0_334 -> bb780__0_334 [label=""];
    bb873__0_334 -> bb783__0_334 [label=""];
    bb874__0_334 -> bb792__0_334 [label=""];
    bb875__0_334 -> bb802__0_334 [label="return"];
    bb875__0_334 -> bb891__0_334 [label="unwind"];
    bb876__0_334 -> bb824__0_334 [label="return"];
    bb876__0_334 -> bb894__0_334 [label="unwind"];
    bb877__0_334 -> bb824__0_334 [label="0"];
    bb877__0_334 -> bb876__0_334 [label="otherwise"];
    bb878__0_334 -> bb825__0_334 [label="return"];
    bb878__0_334 -> bb868__0_334 [label="unwind"];
    bb879__0_334 -> bb825__0_334 [label="0"];
    bb879__0_334 -> bb878__0_334 [label="otherwise"];
    bb880__0_334 -> bb886__0_334 [label=""];
    bb881__0_334 -> bb886__0_334 [label=""];
    bb882__0_334 -> bb886__0_334 [label=""];
    bb883__0_334 -> bb886__0_334 [label=""];
    bb884__0_334 -> bb886__0_334 [label=""];
    bb885__0_334 -> bb891__0_334 [label="return"];
    bb886__0_334 -> bb891__0_334 [label="0"];
    bb886__0_334 -> bb885__0_334 [label="otherwise"];
    bb887__0_334 -> bb891__0_334 [label=""];
    bb888__0_334 -> bb891__0_334 [label=""];
    bb889__0_334 -> bb891__0_334 [label=""];
    bb890__0_334 -> bb894__0_334 [label="return"];
    bb891__0_334 -> bb894__0_334 [label="0"];
    bb891__0_334 -> bb890__0_334 [label="otherwise"];
    bb892__0_334 -> bb894__0_334 [label=""];
    bb893__0_334 -> bb868__0_334 [label="return"];
    bb894__0_334 -> bb868__0_334 [label="0"];
    bb894__0_334 -> bb893__0_334 [label="otherwise"];
    bb895__0_334 -> bb868__0_334 [label=""];
}
