digraph Mir_0_6671 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;admin::UpdatePerpMarketPnlPool&lt;'info&gt; as anchor_lang::Accounts&lt;'info, UpdatePerpMarketPnlPoolBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPoolBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::admin::UpdatePerpMarketPnlPool&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let _6: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _8: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _11: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _12: &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPoolBumps;<br align="left"/>let mut _14: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _15: Closure(DefId(0:6672 ~ drift[d311]::instructions::admin::{impl#107}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _20: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _21: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _23: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _26: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _27: &amp;ReErased [u8];<br align="left"/>let mut _28: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPoolBumps;<br align="left"/>let mut _29: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _30: Closure(DefId(0:6673 ~ drift[d311]::instructions::admin::{impl#107}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _35: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _36: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _39: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _40: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _41: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _42: &amp;ReErased [u8];<br align="left"/>let mut _43: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPoolBumps;<br align="left"/>let mut _44: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _45: Closure(DefId(0:6674 ~ drift[d311]::instructions::admin::{impl#107}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _46: isize;<br align="left"/>let _47: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _48: !;<br align="left"/>let mut _49: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _50: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _51: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _52: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _53: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _55: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _56: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _57: &amp;ReErased [u8];<br align="left"/>let mut _58: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPoolBumps;<br align="left"/>let mut _59: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _60: Closure(DefId(0:6675 ~ drift[d311]::instructions::admin::{impl#107}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _61: isize;<br align="left"/>let _62: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _63: !;<br align="left"/>let mut _64: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _65: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let _66: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _67: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _68: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _70: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _71: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _72: &amp;ReErased [u8];<br align="left"/>let mut _73: &amp;ReErased mut instructions::admin::UpdatePerpMarketPnlPoolBumps;<br align="left"/>let mut _74: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _75: Closure(DefId(0:6676 ~ drift[d311]::instructions::admin::{impl#107}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _76: isize;<br align="left"/>let _77: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _78: !;<br align="left"/>let mut _79: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _80: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _81: ();<br align="left"/>let _82: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _83: &amp;ReErased state::state::State;<br align="left"/>let mut _84: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _85: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _86: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _87: bool;<br align="left"/>let mut _88: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _89: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _90: !;<br align="left"/>let mut _91: anchor_lang::error::Error;<br align="left"/>let mut _92: anchor_lang::error::Error;<br align="left"/>let mut _93: anchor_lang::error::Error;<br align="left"/>let mut _94: anchor_lang::error::ErrorCode;<br align="left"/>let mut _95: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _96: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _97: anchor_lang::prelude::Pubkey;<br align="left"/>let _98: anchor_lang::prelude::Pubkey;<br align="left"/>let _99: u8;<br align="left"/>let mut _100: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _101: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _102: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _103: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _104: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _105: &amp;ReErased [u8];<br align="left"/>let mut _106: &amp;ReErased [u8; 11_usize];<br align="left"/>let _107: &amp;ReErased [u8; 11_usize];<br align="left"/>let mut _108: &amp;ReErased [u8];<br align="left"/>let _109: &amp;ReErased [u8];<br align="left"/>let mut _110: &amp;ReErased [u8; 2_usize];<br align="left"/>let _111: [u8; 2_usize];<br align="left"/>let mut _112: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _113: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _114: u8;<br align="left"/>let _115: ();<br align="left"/>let mut _116: bool;<br align="left"/>let mut _117: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _118: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _119: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _120: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _121: !;<br align="left"/>let mut _122: anchor_lang::error::Error;<br align="left"/>let mut _123: anchor_lang::error::Error;<br align="left"/>let mut _124: anchor_lang::error::Error;<br align="left"/>let mut _125: anchor_lang::error::ErrorCode;<br align="left"/>let mut _126: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _127: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _128: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _129: anchor_lang::prelude::Pubkey;<br align="left"/>let _130: ();<br align="left"/>let mut _131: bool;<br align="left"/>let mut _132: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _133: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _134: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _135: !;<br align="left"/>let mut _136: anchor_lang::error::Error;<br align="left"/>let mut _137: anchor_lang::error::Error;<br align="left"/>let mut _138: anchor_lang::error::ErrorCode;<br align="left"/>let _139: anchor_lang::prelude::Pubkey;<br align="left"/>let _140: u8;<br align="left"/>let mut _141: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _142: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _143: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _144: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _145: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _146: &amp;ReErased [u8];<br align="left"/>let _147: &amp;ReErased [u8];<br align="left"/>let mut _148: &amp;ReErased [u8; 17_usize];<br align="left"/>let _149: &amp;ReErased [u8; 17_usize];<br align="left"/>let mut _150: &amp;ReErased [u8];<br align="left"/>let _151: &amp;ReErased [u8];<br align="left"/>let mut _152: &amp;ReErased [u8; 2_usize];<br align="left"/>let _153: [u8; 2_usize];<br align="left"/>let mut _154: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _155: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _156: u8;<br align="left"/>let _157: ();<br align="left"/>let mut _158: bool;<br align="left"/>let mut _159: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _160: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _161: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _162: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _163: !;<br align="left"/>let mut _164: anchor_lang::error::Error;<br align="left"/>let mut _165: anchor_lang::error::Error;<br align="left"/>let mut _166: anchor_lang::error::Error;<br align="left"/>let mut _167: anchor_lang::error::ErrorCode;<br align="left"/>let mut _168: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _169: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _170: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _171: anchor_lang::prelude::Pubkey;<br align="left"/>let _172: ();<br align="left"/>let mut _173: bool;<br align="left"/>let mut _174: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _175: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let _176: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _177: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _178: !;<br align="left"/>let mut _179: anchor_lang::error::Error;<br align="left"/>let mut _180: anchor_lang::error::Error;<br align="left"/>let mut _181: anchor_lang::error::ErrorCode;<br align="left"/>let _182: ();<br align="left"/>let mut _183: bool;<br align="left"/>let mut _184: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _185: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _186: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _187: !;<br align="left"/>let mut _188: anchor_lang::error::Error;<br align="left"/>let mut _189: anchor_lang::error::Error;<br align="left"/>let mut _190: anchor_lang::error::ErrorCode;<br align="left"/>let mut _191: instructions::admin::UpdatePerpMarketPnlPool&lt;ReErased&gt;;<br align="left"/>let mut _192: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _193: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _194: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _195: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _196: anchor_lang::prelude::AccountLoader&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _197: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _198: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _199: bool;<br align="left"/>let mut _200: bool;<br align="left"/>let mut _201: isize;<br align="left"/>let mut _202: isize;<br align="left"/>let mut _203: isize;<br align="left"/>let mut _204: isize;<br align="left"/>let mut _205: isize;<br align="left"/>let mut _206: isize;<br align="left"/>let mut _207: isize;<br align="left"/>let mut _208: isize;<br align="left"/>let mut _209: isize;<br align="left"/>let mut _210: isize;<br align="left"/>let mut _211: isize;<br align="left"/>let mut _212: isize;<br align="left"/>let mut _213: isize;<br align="left"/>let mut _214: isize;<br align="left"/>let mut _215: isize;<br align="left"/>let mut _216: isize;<br align="left"/>let mut _217: isize;<br align="left"/>let mut _218: isize;<br align="left"/>let mut _219: isize;<br align="left"/>let mut _220: isize;<br align="left"/>let mut _221: isize;<br align="left"/>let mut _222: isize;<br align="left"/>let mut _223: isize;<br align="left"/>let mut _224: isize;<br align="left"/>let mut _225: isize;<br align="left"/>let mut _226: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _227: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _228: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug state =&gt; _6;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug admin =&gt; _21;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug spot_market =&gt; _36;<br align="left"/>debug residual =&gt; _47;<br align="left"/>debug val =&gt; _50;<br align="left"/>debug spot_market_vault =&gt; _51;<br align="left"/>debug residual =&gt; _62;<br align="left"/>debug val =&gt; _65;<br align="left"/>debug perp_market =&gt; _66;<br align="left"/>debug residual =&gt; _77;<br align="left"/>debug val =&gt; _80;<br align="left"/>debug my_key =&gt; _82;<br align="left"/>debug target_key =&gt; _85;<br align="left"/>debug __pda_address =&gt; _98;<br align="left"/>debug __bump =&gt; _99;<br align="left"/>debug __pda_address =&gt; _139;<br align="left"/>debug __bump =&gt; _140;<br align="left"/>>;
    bb0__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_200 = const false<br/>_199 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_1)<br/>StorageLive(_11)<br/>_11 = &amp;mut (*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = &amp;mut (*_4)<br/>StorageLive(_14)<br/>_14 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_9 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::Accounts&lt;'_, UpdatePerpMarketPnlPoolBumps&gt;&gt;::try_accounts(move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/>StorageLive(_15)<br/>_15 = {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}<br/></td></tr><tr><td align="left">_8 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}&gt;(move _9, move _15)</td></tr></table>>];
    bb2__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb3__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_16 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb4__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_7 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_6 = move _20<br/>StorageDead(_20)<br/>_201 = discriminant(_7)<br/>StorageDead(_7)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_1)<br/>StorageLive(_26)<br/>_26 = &amp;mut (*_2)<br/>StorageLive(_27)<br/>_27 = &amp;(*_3)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_4)<br/>StorageLive(_29)<br/>_29 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, UpdatePerpMarketPnlPoolBumps&gt;&gt;::try_accounts(move _25, move _26, move _27, move _28, move _29)</td></tr></table>>];
    bb5__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb7__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_219 = discriminant(_7)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}<br/></td></tr><tr><td align="left">_23 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}&gt;(move _24, move _30)</td></tr></table>>];
    bb9__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb10__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_31 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb11__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_22 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_21 = move _35<br/>StorageDead(_35)<br/>_203 = discriminant(_22)<br/>StorageDead(_22)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = &amp;(*_1)<br/>StorageLive(_41)<br/>_41 = &amp;mut (*_2)<br/>StorageLive(_42)<br/>_42 = &amp;(*_3)<br/>StorageLive(_43)<br/>_43 = &amp;mut (*_4)<br/>StorageLive(_44)<br/>_44 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Accounts&lt;'_, UpdatePerpMarketPnlPoolBumps&gt;&gt;::try_accounts(move _40, move _41, move _42, move _43, move _44)</td></tr></table>>];
    bb12__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = move ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_34)<br/>_34 = move _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb13__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_217 = discriminant(_22)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_45)<br/>_45 = {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}<br/></td></tr><tr><td align="left">_38 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}&gt;(move _39, move _45)</td></tr></table>>];
    bb15__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb16__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_46 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _46)</td></tr></table>>];
    bb17__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_50)<br/>_50 = move ((_37 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_36 = move _50<br/>StorageDead(_50)<br/>_205 = discriminant(_37)<br/>StorageDead(_37)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_55 = &amp;(*_1)<br/>StorageLive(_56)<br/>_56 = &amp;mut (*_2)<br/>StorageLive(_57)<br/>_57 = &amp;(*_3)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_4)<br/>StorageLive(_59)<br/>_59 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_54 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as anchor_lang::Accounts&lt;'_, UpdatePerpMarketPnlPoolBumps&gt;&gt;::try_accounts(move _55, move _56, move _57, move _58, move _59)</td></tr></table>>];
    bb18__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_47)<br/>_47 = move ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_49)<br/>_49 = move _47<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _49)</td></tr></table>>];
    bb19__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_47)<br/>_215 = discriminant(_37)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageLive(_60)<br/>_60 = {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}<br/></td></tr><tr><td align="left">_53 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}&gt;(move _54, move _60)</td></tr></table>>];
    bb21__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_60)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_52 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _53)</td></tr></table>>];
    bb22__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>_61 = discriminant(_52)<br/></td></tr><tr><td align="left">switchInt(move _61)</td></tr></table>>];
    bb23__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_65)<br/>_65 = move ((_52 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_51 = move _65<br/>StorageDead(_65)<br/>_207 = discriminant(_52)<br/>StorageDead(_52)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;(*_1)<br/>StorageLive(_71)<br/>_71 = &amp;mut (*_2)<br/>StorageLive(_72)<br/>_72 = &amp;(*_3)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_4)<br/>StorageLive(_74)<br/>_74 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_69 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt; as anchor_lang::Accounts&lt;'_, UpdatePerpMarketPnlPoolBumps&gt;&gt;::try_accounts(move _70, move _71, move _72, move _73, move _74)</td></tr></table>>];
    bb24__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = move ((_52 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_64)<br/>_64 = move _62<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _64)</td></tr></table>>];
    bb25__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_62)<br/>_213 = discriminant(_52)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageLive(_75)<br/>_75 = {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}<br/></td></tr><tr><td align="left">_68 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5233:10: 5233:18}&gt;(move _69, move _75)</td></tr></table>>];
    bb27__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">_67 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _68)</td></tr></table>>];
    bb28__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>_76 = discriminant(_67)<br/></td></tr><tr><td align="left">switchInt(move _76)</td></tr></table>>];
    bb29__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_80)<br/>_80 = move ((_67 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_66 = move _80<br/>StorageDead(_80)<br/>_209 = discriminant(_67)<br/>StorageDead(_67)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_226 = (((_6.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_84 = &amp;(*_226)<br/></td></tr><tr><td align="left">_83 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _84)</td></tr></table>>];
    bb30__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_77)<br/>_77 = move ((_67 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_79)<br/>_79 = move _77<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _79)</td></tr></table>>];
    bb31__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_77)<br/>_211 = discriminant(_67)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>_82 = ((*_83).0: anchor_lang::prelude::Pubkey)<br/>StorageDead(_83)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>_86 = &amp;_21<br/></td></tr><tr><td align="left">_85 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _86)</td></tr></table>>];
    bb33__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = &amp;_82<br/>StorageLive(_89)<br/>_89 = &amp;_85<br/></td></tr><tr><td align="left">_87 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _88, move _89)</td></tr></table>>];
    bb34__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">switchInt(move _87)</td></tr></table>>];
    bb35__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_94 = ConstraintHasOne<br/></td></tr><tr><td align="left">_93 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _94)</td></tr></table>>];
    bb36__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">_92 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _93, const &quot;state&quot;)</td></tr></table>>];
    bb37__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = _82<br/>StorageLive(_97)<br/>_97 = _85<br/>_95 = (move _96, move _97)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">_91 = anchor_lang::error::Error::with_pubkeys(move _92, move _95)</td></tr></table>>];
    bb38__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>StorageDead(_92)<br/>_0 = std::result::Result::&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _91)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>_81 = const ()<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = const b&quot;spot_market&quot;<br/>_106 = &amp;(*_107)<br/>_105 = move _106 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/></td></tr><tr><td align="left">_111 = core::num::&lt;impl u16&gt;::to_le_bytes(const 0_u16)</td></tr></table>>];
    bb40__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">_110 = &amp;_111<br/></td></tr><tr><td align="left">_109 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _110)</td></tr></table>>];
    bb41__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">_108 = &amp;(*_109)<br/>StorageDead(_110)<br/>_104 = [move _105, move _108]<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>_103 = &amp;_104<br/>_102 = &amp;(*_103)<br/>_101 = move _102 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_102)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_1<br/>_197 = deref_copy (*_113)<br/>_112 = &amp;(*_197)<br/></td></tr><tr><td align="left">_100 = anchor_lang::prelude::Pubkey::find_program_address(move _101, move _112)</td></tr></table>>];
    bb42__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>StorageDead(_101)<br/>StorageLive(_98)<br/>_98 = (_100.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_99)<br/>_99 = (_100.1: u8)<br/>StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_104)<br/>StorageDead(_103)<br/>StorageDead(_100)<br/>StorageLive(_114)<br/>_114 = _99<br/>((*_4).0: u8) = move _114<br/>StorageDead(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = &amp;_36<br/></td></tr><tr><td align="left">_118 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _119)</td></tr></table>>];
    bb43__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">_117 = &amp;_118<br/>StorageDead(_119)<br/>StorageLive(_120)<br/>_120 = &amp;_98<br/></td></tr><tr><td align="left">_116 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _117, move _120)</td></tr></table>>];
    bb44__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">switchInt(move _116)</td></tr></table>>];
    bb45__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>StorageLive(_125)<br/>_125 = ConstraintSeeds<br/></td></tr><tr><td align="left">_124 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _125)</td></tr></table>>];
    bb46__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">_123 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _124, const &quot;spot_market&quot;)</td></tr></table>>];
    bb47__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_200 = const true<br/>StorageDead(_124)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>_128 = &amp;_36<br/></td></tr><tr><td align="left">_127 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _128)</td></tr></table>>];
    bb48__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_128)<br/>StorageLive(_129)<br/>_129 = _98<br/>_126 = (move _127, move _129)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>_200 = const false<br/></td></tr><tr><td align="left">_122 = anchor_lang::error::Error::with_pubkeys(move _123, move _126)</td></tr></table>>];
    bb49__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>_200 = const false<br/>StorageDead(_123)<br/>_0 = std::result::Result::&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _122)<br/>StorageDead(_122)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>_115 = const ()<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>_134 = &amp;_36<br/>_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _133)</td></tr></table>>];
    bb51__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>_131 = ((*_132).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _131)</td></tr></table>>];
    bb52__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = ConstraintMut<br/></td></tr><tr><td align="left">_137 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _138)</td></tr></table>>];
    bb53__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/></td></tr><tr><td align="left">_136 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _137, const &quot;spot_market&quot;)</td></tr></table>>];
    bb54__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>_0 = std::result::Result::&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _136)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_132)<br/>_130 = const ()<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>StorageLive(_149)<br/>_149 = const b&quot;spot_market_vault&quot;<br/>_148 = &amp;(*_149)<br/></td></tr><tr><td align="left">_147 = &lt;[u8; 17] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _148)</td></tr></table>>];
    bb56__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">_146 = &amp;(*_147)<br/>StorageDead(_148)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/></td></tr><tr><td align="left">_153 = core::num::&lt;impl u16&gt;::to_le_bytes(const 0_u16)</td></tr></table>>];
    bb57__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_152 = &amp;_153<br/></td></tr><tr><td align="left">_151 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _152)</td></tr></table>>];
    bb58__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">_150 = &amp;(*_151)<br/>StorageDead(_152)<br/>_145 = [move _146, move _150]<br/>StorageDead(_150)<br/>StorageDead(_146)<br/>_144 = &amp;_145<br/>_143 = &amp;(*_144)<br/>_142 = move _143 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_143)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>_155 = &amp;_1<br/>_198 = deref_copy (*_155)<br/>_154 = &amp;(*_198)<br/></td></tr><tr><td align="left">_141 = anchor_lang::prelude::Pubkey::find_program_address(move _142, move _154)</td></tr></table>>];
    bb59__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_142)<br/>StorageLive(_139)<br/>_139 = (_141.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_140)<br/>_140 = (_141.1: u8)<br/>StorageDead(_155)<br/>StorageDead(_153)<br/>StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_144)<br/>StorageDead(_141)<br/>StorageLive(_156)<br/>_156 = _140<br/>((*_4).1: u8) = move _156<br/>StorageDead(_156)<br/>StorageLive(_157)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>_227 = (((_51.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_161 = &amp;(*_227)<br/></td></tr><tr><td align="left">_160 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _161)</td></tr></table>>];
    bb60__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_159 = &amp;_160<br/>StorageDead(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_139<br/></td></tr><tr><td align="left">_158 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _159, move _162)</td></tr></table>>];
    bb61__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left">switchInt(move _158)</td></tr></table>>];
    bb62__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = ConstraintSeeds<br/></td></tr><tr><td align="left">_166 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _167)</td></tr></table>>];
    bb63__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/></td></tr><tr><td align="left">_165 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _166, const &quot;spot_market_vault&quot;)</td></tr></table>>];
    bb64__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_199 = const true<br/>StorageDead(_166)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_228 = (((_51.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_170 = &amp;(*_228)<br/></td></tr><tr><td align="left">_169 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::Key&gt;::key(move _170)</td></tr></table>>];
    bb65__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageLive(_171)<br/>_171 = _139<br/>_168 = (move _169, move _171)<br/>StorageDead(_171)<br/>StorageDead(_169)<br/>_199 = const false<br/></td></tr><tr><td align="left">_164 = anchor_lang::error::Error::with_pubkeys(move _165, move _168)</td></tr></table>>];
    bb66__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_199 = const false<br/>StorageDead(_165)<br/>_0 = std::result::Result::&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _164)<br/>StorageDead(_164)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb67__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>_157 = const ()<br/>StorageDead(_158)<br/>StorageDead(_157)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>_177 = &amp;_51<br/></td></tr><tr><td align="left">_176 = &lt;Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt; as AsRef&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;&gt;::as_ref(move _177)</td></tr></table>>];
    bb68__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">_175 = &amp;(*_176)<br/>StorageDead(_177)<br/></td></tr><tr><td align="left">_174 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _175)</td></tr></table>>];
    bb69__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>_173 = ((*_174).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _173)</td></tr></table>>];
    bb70__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>_181 = ConstraintMut<br/></td></tr><tr><td align="left">_180 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _181)</td></tr></table>>];
    bb71__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/></td></tr><tr><td align="left">_179 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _180, const &quot;spot_market_vault&quot;)</td></tr></table>>];
    bb72__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/>_0 = std::result::Result::&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _179)<br/>StorageDead(_179)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_176)<br/>StorageDead(_174)<br/>_172 = const ()<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;_66<br/>_185 = &amp;(*_186)<br/></td></tr><tr><td align="left">_184 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PerpMarket&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _185)</td></tr></table>>];
    bb74__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>_183 = ((*_184).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _183)</td></tr></table>>];
    bb75__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_184)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = ConstraintMut<br/></td></tr><tr><td align="left">_189 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _190)</td></tr></table>>];
    bb76__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_190)<br/></td></tr><tr><td align="left">_188 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _189, const &quot;perp_market&quot;)</td></tr></table>>];
    bb77__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>_0 = std::result::Result::&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _188)<br/>StorageDead(_188)<br/>StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb78__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_184)<br/>_182 = const ()<br/>StorageDead(_183)<br/>StorageDead(_182)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = move _6<br/>StorageLive(_193)<br/>_193 = move _21<br/>StorageLive(_194)<br/>_194 = move _36<br/>StorageLive(_195)<br/>_195 = move _51<br/>StorageLive(_196)<br/>_196 = move _66<br/>_191 = admin::UpdatePerpMarketPnlPool::&lt;'_&gt; { state: move _192, admin: move _193, spot_market: move _194, spot_market_vault: move _195, perp_market: move _196 }<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_194)<br/>StorageDead(_193)<br/>StorageDead(_192)<br/>_0 = std::result::Result::&lt;admin::UpdatePerpMarketPnlPool&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _191)<br/>StorageDead(_191)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_66)<br/>StorageDead(_51)<br/>StorageDead(_36)<br/>StorageDead(_21)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb79__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb80__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb82__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/></td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb85__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left">return</td></tr></table>>];
    bb87__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">87 (cleanup)</td></tr><tr><td align="left">drop(_51)</td></tr></table>>];
    bb88__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">88 (cleanup)</td></tr><tr><td align="left">drop(_6)</td></tr></table>>];
    bb89__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">89 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb90__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">90 (cleanup)</td></tr><tr><td align="left">drop(_165)</td></tr></table>>];
    bb91__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">91 (cleanup)</td></tr><tr><td align="left">switchInt(_199)</td></tr></table>>];
    bb92__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">92 (cleanup)</td></tr><tr><td align="left">drop(_123)</td></tr></table>>];
    bb93__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">93 (cleanup)</td></tr><tr><td align="left">switchInt(_200)</td></tr></table>>];
    bb94__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">94 (cleanup)</td></tr><tr><td align="left" balign="left">_221 = discriminant(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">95 (cleanup)</td></tr><tr><td align="left" balign="left">_222 = discriminant(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">96 (cleanup)</td></tr><tr><td align="left" balign="left">_223 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">97 (cleanup)</td></tr><tr><td align="left" balign="left">_224 = discriminant(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_6671 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">98 (cleanup)</td></tr><tr><td align="left" balign="left">_225 = discriminant(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_6671 -> bb1__0_6671 [label="return"];
    bb1__0_6671 -> bb2__0_6671 [label="return"];
    bb1__0_6671 -> bb89__0_6671 [label="unwind"];
    bb2__0_6671 -> bb3__0_6671 [label="return"];
    bb2__0_6671 -> bb89__0_6671 [label="unwind"];
    bb3__0_6671 -> bb4__0_6671 [label="0"];
    bb3__0_6671 -> bb6__0_6671 [label="1"];
    bb3__0_6671 -> bb5__0_6671 [label="otherwise"];
    bb4__0_6671 -> bb8__0_6671 [label="return"];
    bb4__0_6671 -> bb88__0_6671 [label="unwind"];
    bb6__0_6671 -> bb7__0_6671 [label="return"];
    bb6__0_6671 -> bb98__0_6671 [label="unwind"];
    bb7__0_6671 -> bb85__0_6671 [label=""];
    bb8__0_6671 -> bb9__0_6671 [label="return"];
    bb8__0_6671 -> bb88__0_6671 [label="unwind"];
    bb9__0_6671 -> bb10__0_6671 [label="return"];
    bb9__0_6671 -> bb88__0_6671 [label="unwind"];
    bb10__0_6671 -> bb11__0_6671 [label="0"];
    bb10__0_6671 -> bb12__0_6671 [label="1"];
    bb10__0_6671 -> bb5__0_6671 [label="otherwise"];
    bb11__0_6671 -> bb14__0_6671 [label="return"];
    bb11__0_6671 -> bb88__0_6671 [label="unwind"];
    bb12__0_6671 -> bb13__0_6671 [label="return"];
    bb12__0_6671 -> bb97__0_6671 [label="unwind"];
    bb13__0_6671 -> bb84__0_6671 [label=""];
    bb14__0_6671 -> bb15__0_6671 [label="return"];
    bb14__0_6671 -> bb88__0_6671 [label="unwind"];
    bb15__0_6671 -> bb16__0_6671 [label="return"];
    bb15__0_6671 -> bb88__0_6671 [label="unwind"];
    bb16__0_6671 -> bb17__0_6671 [label="0"];
    bb16__0_6671 -> bb18__0_6671 [label="1"];
    bb16__0_6671 -> bb5__0_6671 [label="otherwise"];
    bb17__0_6671 -> bb20__0_6671 [label="return"];
    bb17__0_6671 -> bb88__0_6671 [label="unwind"];
    bb18__0_6671 -> bb19__0_6671 [label="return"];
    bb18__0_6671 -> bb96__0_6671 [label="unwind"];
    bb19__0_6671 -> bb83__0_6671 [label=""];
    bb20__0_6671 -> bb21__0_6671 [label="return"];
    bb20__0_6671 -> bb88__0_6671 [label="unwind"];
    bb21__0_6671 -> bb22__0_6671 [label="return"];
    bb21__0_6671 -> bb88__0_6671 [label="unwind"];
    bb22__0_6671 -> bb23__0_6671 [label="0"];
    bb22__0_6671 -> bb24__0_6671 [label="1"];
    bb22__0_6671 -> bb5__0_6671 [label="otherwise"];
    bb23__0_6671 -> bb26__0_6671 [label="return"];
    bb23__0_6671 -> bb87__0_6671 [label="unwind"];
    bb24__0_6671 -> bb25__0_6671 [label="return"];
    bb24__0_6671 -> bb95__0_6671 [label="unwind"];
    bb25__0_6671 -> bb82__0_6671 [label=""];
    bb26__0_6671 -> bb27__0_6671 [label="return"];
    bb26__0_6671 -> bb87__0_6671 [label="unwind"];
    bb27__0_6671 -> bb28__0_6671 [label="return"];
    bb27__0_6671 -> bb87__0_6671 [label="unwind"];
    bb28__0_6671 -> bb29__0_6671 [label="0"];
    bb28__0_6671 -> bb30__0_6671 [label="1"];
    bb28__0_6671 -> bb5__0_6671 [label="otherwise"];
    bb29__0_6671 -> bb32__0_6671 [label="return"];
    bb29__0_6671 -> bb87__0_6671 [label="unwind"];
    bb30__0_6671 -> bb31__0_6671 [label="return"];
    bb30__0_6671 -> bb94__0_6671 [label="unwind"];
    bb31__0_6671 -> bb81__0_6671 [label=""];
    bb32__0_6671 -> bb33__0_6671 [label="return"];
    bb32__0_6671 -> bb87__0_6671 [label="unwind"];
    bb33__0_6671 -> bb34__0_6671 [label="return"];
    bb33__0_6671 -> bb87__0_6671 [label="unwind"];
    bb34__0_6671 -> bb39__0_6671 [label="0"];
    bb34__0_6671 -> bb35__0_6671 [label="otherwise"];
    bb35__0_6671 -> bb36__0_6671 [label="return"];
    bb35__0_6671 -> bb87__0_6671 [label="unwind"];
    bb36__0_6671 -> bb37__0_6671 [label="return"];
    bb36__0_6671 -> bb87__0_6671 [label="unwind"];
    bb37__0_6671 -> bb38__0_6671 [label="return"];
    bb37__0_6671 -> bb87__0_6671 [label="unwind"];
    bb38__0_6671 -> bb81__0_6671 [label=""];
    bb39__0_6671 -> bb40__0_6671 [label="return"];
    bb39__0_6671 -> bb87__0_6671 [label="unwind"];
    bb40__0_6671 -> bb41__0_6671 [label="return"];
    bb40__0_6671 -> bb87__0_6671 [label="unwind"];
    bb41__0_6671 -> bb42__0_6671 [label="return"];
    bb41__0_6671 -> bb87__0_6671 [label="unwind"];
    bb42__0_6671 -> bb43__0_6671 [label="return"];
    bb42__0_6671 -> bb87__0_6671 [label="unwind"];
    bb43__0_6671 -> bb44__0_6671 [label="return"];
    bb43__0_6671 -> bb87__0_6671 [label="unwind"];
    bb44__0_6671 -> bb50__0_6671 [label="0"];
    bb44__0_6671 -> bb45__0_6671 [label="otherwise"];
    bb45__0_6671 -> bb46__0_6671 [label="return"];
    bb45__0_6671 -> bb87__0_6671 [label="unwind"];
    bb46__0_6671 -> bb47__0_6671 [label="return"];
    bb46__0_6671 -> bb87__0_6671 [label="unwind"];
    bb47__0_6671 -> bb48__0_6671 [label="return"];
    bb47__0_6671 -> bb93__0_6671 [label="unwind"];
    bb48__0_6671 -> bb49__0_6671 [label="return"];
    bb48__0_6671 -> bb93__0_6671 [label="unwind"];
    bb49__0_6671 -> bb80__0_6671 [label=""];
    bb50__0_6671 -> bb51__0_6671 [label="return"];
    bb50__0_6671 -> bb87__0_6671 [label="unwind"];
    bb51__0_6671 -> bb52__0_6671 [label="0"];
    bb51__0_6671 -> bb55__0_6671 [label="otherwise"];
    bb52__0_6671 -> bb53__0_6671 [label="return"];
    bb52__0_6671 -> bb87__0_6671 [label="unwind"];
    bb53__0_6671 -> bb54__0_6671 [label="return"];
    bb53__0_6671 -> bb87__0_6671 [label="unwind"];
    bb54__0_6671 -> bb80__0_6671 [label=""];
    bb55__0_6671 -> bb56__0_6671 [label="return"];
    bb55__0_6671 -> bb87__0_6671 [label="unwind"];
    bb56__0_6671 -> bb57__0_6671 [label="return"];
    bb56__0_6671 -> bb87__0_6671 [label="unwind"];
    bb57__0_6671 -> bb58__0_6671 [label="return"];
    bb57__0_6671 -> bb87__0_6671 [label="unwind"];
    bb58__0_6671 -> bb59__0_6671 [label="return"];
    bb58__0_6671 -> bb87__0_6671 [label="unwind"];
    bb59__0_6671 -> bb60__0_6671 [label="return"];
    bb59__0_6671 -> bb87__0_6671 [label="unwind"];
    bb60__0_6671 -> bb61__0_6671 [label="return"];
    bb60__0_6671 -> bb87__0_6671 [label="unwind"];
    bb61__0_6671 -> bb67__0_6671 [label="0"];
    bb61__0_6671 -> bb62__0_6671 [label="otherwise"];
    bb62__0_6671 -> bb63__0_6671 [label="return"];
    bb62__0_6671 -> bb87__0_6671 [label="unwind"];
    bb63__0_6671 -> bb64__0_6671 [label="return"];
    bb63__0_6671 -> bb87__0_6671 [label="unwind"];
    bb64__0_6671 -> bb65__0_6671 [label="return"];
    bb64__0_6671 -> bb91__0_6671 [label="unwind"];
    bb65__0_6671 -> bb66__0_6671 [label="return"];
    bb65__0_6671 -> bb91__0_6671 [label="unwind"];
    bb66__0_6671 -> bb79__0_6671 [label=""];
    bb67__0_6671 -> bb68__0_6671 [label="return"];
    bb67__0_6671 -> bb87__0_6671 [label="unwind"];
    bb68__0_6671 -> bb69__0_6671 [label="return"];
    bb68__0_6671 -> bb87__0_6671 [label="unwind"];
    bb69__0_6671 -> bb70__0_6671 [label="0"];
    bb69__0_6671 -> bb73__0_6671 [label="otherwise"];
    bb70__0_6671 -> bb71__0_6671 [label="return"];
    bb70__0_6671 -> bb87__0_6671 [label="unwind"];
    bb71__0_6671 -> bb72__0_6671 [label="return"];
    bb71__0_6671 -> bb87__0_6671 [label="unwind"];
    bb72__0_6671 -> bb79__0_6671 [label=""];
    bb73__0_6671 -> bb74__0_6671 [label="return"];
    bb73__0_6671 -> bb87__0_6671 [label="unwind"];
    bb74__0_6671 -> bb75__0_6671 [label="0"];
    bb74__0_6671 -> bb78__0_6671 [label="otherwise"];
    bb75__0_6671 -> bb76__0_6671 [label="return"];
    bb75__0_6671 -> bb87__0_6671 [label="unwind"];
    bb76__0_6671 -> bb77__0_6671 [label="return"];
    bb76__0_6671 -> bb87__0_6671 [label="unwind"];
    bb77__0_6671 -> bb79__0_6671 [label=""];
    bb78__0_6671 -> bb86__0_6671 [label=""];
    bb79__0_6671 -> bb80__0_6671 [label=""];
    bb80__0_6671 -> bb81__0_6671 [label=""];
    bb81__0_6671 -> bb82__0_6671 [label="return"];
    bb81__0_6671 -> bb88__0_6671 [label="unwind"];
    bb82__0_6671 -> bb83__0_6671 [label=""];
    bb83__0_6671 -> bb84__0_6671 [label=""];
    bb84__0_6671 -> bb85__0_6671 [label="return"];
    bb84__0_6671 -> bb89__0_6671 [label="unwind"];
    bb85__0_6671 -> bb86__0_6671 [label=""];
    bb87__0_6671 -> bb88__0_6671 [label="return"];
    bb88__0_6671 -> bb89__0_6671 [label="return"];
    bb90__0_6671 -> bb87__0_6671 [label="return"];
    bb91__0_6671 -> bb87__0_6671 [label="0"];
    bb91__0_6671 -> bb90__0_6671 [label="otherwise"];
    bb92__0_6671 -> bb87__0_6671 [label="return"];
    bb93__0_6671 -> bb87__0_6671 [label="0"];
    bb93__0_6671 -> bb92__0_6671 [label="otherwise"];
    bb94__0_6671 -> bb87__0_6671 [label=""];
    bb95__0_6671 -> bb88__0_6671 [label=""];
    bb96__0_6671 -> bb88__0_6671 [label=""];
    bb97__0_6671 -> bb88__0_6671 [label=""];
    bb98__0_6671 -> bb89__0_6671 [label=""];
}
