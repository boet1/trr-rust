digraph Mir_0_1071 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn admin::handle_initialize_spot_market(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::admin::InitializeSpotMarket&lt;ReErased&gt;&gt;, _2: u32, _3: u32, _4: u32, _5: state::oracle::OracleSource, _6: u32, _7: u32, _8: u32, _9: u32, _10: u32, _11: u32, _12: u32, _13: bool, _14: state::spot_market::AssetTier, _15: u64, _16: u64, _17: u64, _18: u64, _19: u32, _20: [u8; 32_usize]) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _21: &amp;ReErased mut std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _22: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _24: ();<br align="left"/>let mut _25: bool;<br align="left"/>let mut _26: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _27: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _28: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _29: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _30: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _31: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _32: &amp;ReErased state::state::State;<br align="left"/>let mut _33: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _34: !;<br align="left"/>let mut _35: anchor_lang::error::Error;<br align="left"/>let mut _36: error::ErrorCode;<br align="left"/>let _37: ();<br align="left"/>let mut _38: bool;<br align="left"/>let mut _39: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _40: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _41: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _42: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _43: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _44: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _45: &amp;ReErased state::state::State;<br align="left"/>let mut _46: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: anchor_lang::error::Error;<br align="left"/>let mut _49: error::ErrorCode;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _52: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _53: u32;<br align="left"/>let mut _54: u32;<br align="left"/>let mut _55: u32;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: ();<br align="left"/>let _61: u16;<br align="left"/>let _62: u16;<br align="left"/>let mut _63: &amp;ReErased state::state::State;<br align="left"/>let mut _64: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _65: u16;<br align="left"/>let mut _66: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _67: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _68: u16;<br align="left"/>let mut _69: std::option::Option&lt;u16&gt;;<br align="left"/>let mut _70: &amp;ReErased mut state::state::State;<br align="left"/>let mut _71: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _72: ();<br align="left"/>let mut _73: &amp;ReErased str;<br align="left"/>let _74: &amp;ReErased str;<br align="left"/>let mut _75: &amp;ReErased std::string::String;<br align="left"/>let _76: &amp;ReErased std::string::String;<br align="left"/>let _77: std::string::String;<br align="left"/>let _78: std::string::String;<br align="left"/>let mut _79: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _80: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _81: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _82: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _83: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _84: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _85: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _86: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _87: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _88: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _89: &amp;ReErased u16;<br align="left"/>let _90: &amp;ReErased u16;<br align="left"/>let _91: ();<br align="left"/>let mut _92: bool;<br align="left"/>let mut _93: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _94: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _95: state::oracle::OracleSource;<br align="left"/>let _96: ();<br align="left"/>let mut _97: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _98: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _99: bool;<br align="left"/>let mut _100: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _101: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _102: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _103: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _104: ();<br align="left"/>let _105: error::ErrorCode;<br align="left"/>let _106: ();<br align="left"/>let mut _107: &amp;ReErased str;<br align="left"/>let _108: &amp;ReErased str;<br align="left"/>let mut _109: &amp;ReErased std::string::String;<br align="left"/>let _110: &amp;ReErased std::string::String;<br align="left"/>let _111: std::string::String;<br align="left"/>let _112: std::string::String;<br align="left"/>let mut _113: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _114: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _115: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _116: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _117: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _118: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _119: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _120: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _121: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _122: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _123: &amp;ReErased error::ErrorCode;<br align="left"/>let _124: &amp;ReErased error::ErrorCode;<br align="left"/>let _125: ();<br align="left"/>let mut _126: &amp;ReErased str;<br align="left"/>let _127: &amp;ReErased str;<br align="left"/>let mut _128: error::ErrorCode;<br align="left"/>let mut _129: isize;<br align="left"/>let _130: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _131: !;<br align="left"/>let mut _132: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _133: ();<br align="left"/>let _134: ();<br align="left"/>let mut _135: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _136: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _137: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _138: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _139: isize;<br align="left"/>let _140: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _141: !;<br align="left"/>let mut _142: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _143: ();<br align="left"/>let _144: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _145: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _146: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _147: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _148: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _149: u64;<br align="left"/>let mut _150: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _151: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _152: i64;<br align="left"/>let mut _153: anchor_lang::prelude::Clock;<br align="left"/>let mut _154: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _155: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _156: isize;<br align="left"/>let _157: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _158: !;<br align="left"/>let mut _159: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _160: anchor_lang::prelude::Clock;<br align="left"/>let mut _161: isize;<br align="left"/>let _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _163: !;<br align="left"/>let mut _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _165: u64;<br align="left"/>let _166: state::oracle::HistoricalOracleData;<br align="left"/>let _167: state::oracle::HistoricalIndexData;<br align="left"/>let mut _168: (state::oracle::HistoricalOracleData, state::oracle::HistoricalIndexData);<br align="left"/>let mut _169: bool;<br align="left"/>let mut _170: u16;<br align="left"/>let _171: ();<br align="left"/>let mut _172: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _173: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _174: bool;<br align="left"/>let mut _175: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _176: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _177: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _178: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _179: ();<br align="left"/>let _180: error::ErrorCode;<br align="left"/>let _181: ();<br align="left"/>let mut _182: &amp;ReErased str;<br align="left"/>let _183: &amp;ReErased str;<br align="left"/>let mut _184: &amp;ReErased std::string::String;<br align="left"/>let _185: &amp;ReErased std::string::String;<br align="left"/>let _186: std::string::String;<br align="left"/>let _187: std::string::String;<br align="left"/>let mut _188: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _189: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _190: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _191: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _192: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _193: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _194: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _195: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _196: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _197: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _198: &amp;ReErased error::ErrorCode;<br align="left"/>let _199: &amp;ReErased error::ErrorCode;<br align="left"/>let _200: ();<br align="left"/>let mut _201: &amp;ReErased str;<br align="left"/>let _202: &amp;ReErased str;<br align="left"/>let mut _203: error::ErrorCode;<br align="left"/>let mut _204: isize;<br align="left"/>let _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _206: !;<br align="left"/>let mut _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _208: ();<br align="left"/>let _209: ();<br align="left"/>let mut _210: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _211: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _212: bool;<br align="left"/>let mut _213: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _214: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _215: state::oracle::OracleSource;<br align="left"/>let mut _216: ();<br align="left"/>let _217: error::ErrorCode;<br align="left"/>let _218: ();<br align="left"/>let mut _219: &amp;ReErased str;<br align="left"/>let _220: &amp;ReErased str;<br align="left"/>let mut _221: &amp;ReErased std::string::String;<br align="left"/>let _222: &amp;ReErased std::string::String;<br align="left"/>let _223: std::string::String;<br align="left"/>let _224: std::string::String;<br align="left"/>let mut _225: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _226: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _227: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _228: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _229: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _230: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _231: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _232: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _233: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _234: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _235: &amp;ReErased error::ErrorCode;<br align="left"/>let _236: &amp;ReErased error::ErrorCode;<br align="left"/>let _237: ();<br align="left"/>let mut _238: &amp;ReErased str;<br align="left"/>let _239: &amp;ReErased str;<br align="left"/>let mut _240: error::ErrorCode;<br align="left"/>let mut _241: isize;<br align="left"/>let _242: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _243: !;<br align="left"/>let mut _244: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _245: ();<br align="left"/>let _246: ();<br align="left"/>let mut _247: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _248: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _249: bool;<br align="left"/>let mut _250: u8;<br align="left"/>let mut _251: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Mint;<br align="left"/>let mut _252: &amp;ReErased anchor_spl::token_interface::Mint;<br align="left"/>let _253: &amp;ReErased anchor_spl::token_interface::Mint;<br align="left"/>let mut _254: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _255: ();<br align="left"/>let _256: error::ErrorCode;<br align="left"/>let _257: ();<br align="left"/>let mut _258: &amp;ReErased str;<br align="left"/>let _259: &amp;ReErased str;<br align="left"/>let mut _260: &amp;ReErased std::string::String;<br align="left"/>let _261: &amp;ReErased std::string::String;<br align="left"/>let _262: std::string::String;<br align="left"/>let _263: std::string::String;<br align="left"/>let mut _264: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _265: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _266: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _267: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _268: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _269: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _270: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _271: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _272: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _273: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _274: &amp;ReErased error::ErrorCode;<br align="left"/>let _275: &amp;ReErased error::ErrorCode;<br align="left"/>let _276: ();<br align="left"/>let mut _277: &amp;ReErased str;<br align="left"/>let _278: &amp;ReErased str;<br align="left"/>let mut _279: error::ErrorCode;<br align="left"/>let mut _280: isize;<br align="left"/>let _281: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _282: !;<br align="left"/>let mut _283: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _284: ();<br align="left"/>let mut _285: state::oracle::HistoricalOracleData;<br align="left"/>let mut _286: state::oracle::HistoricalIndexData;<br align="left"/>let _287: ();<br align="left"/>let mut _288: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _289: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _290: bool;<br align="left"/>let mut _291: u8;<br align="left"/>let mut _292: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Mint;<br align="left"/>let mut _293: &amp;ReErased anchor_spl::token_interface::Mint;<br align="left"/>let _294: &amp;ReErased anchor_spl::token_interface::Mint;<br align="left"/>let mut _295: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _296: ();<br align="left"/>let _297: error::ErrorCode;<br align="left"/>let _298: ();<br align="left"/>let mut _299: &amp;ReErased str;<br align="left"/>let _300: &amp;ReErased str;<br align="left"/>let mut _301: &amp;ReErased std::string::String;<br align="left"/>let _302: &amp;ReErased std::string::String;<br align="left"/>let _303: std::string::String;<br align="left"/>let _304: std::string::String;<br align="left"/>let mut _305: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _306: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _307: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _308: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _309: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _310: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _311: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _312: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _313: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _314: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _315: &amp;ReErased error::ErrorCode;<br align="left"/>let _316: &amp;ReErased error::ErrorCode;<br align="left"/>let _317: ();<br align="left"/>let mut _318: &amp;ReErased str;<br align="left"/>let _319: &amp;ReErased str;<br align="left"/>let mut _320: error::ErrorCode;<br align="left"/>let mut _321: isize;<br align="left"/>let _322: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _323: !;<br align="left"/>let mut _324: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _325: ();<br align="left"/>let _326: ();<br align="left"/>let mut _327: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _328: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _329: bool;<br align="left"/>let mut _330: &amp;ReErased std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _331: ();<br align="left"/>let _332: error::ErrorCode;<br align="left"/>let _333: ();<br align="left"/>let mut _334: &amp;ReErased str;<br align="left"/>let _335: &amp;ReErased str;<br align="left"/>let mut _336: &amp;ReErased std::string::String;<br align="left"/>let _337: &amp;ReErased std::string::String;<br align="left"/>let _338: std::string::String;<br align="left"/>let _339: std::string::String;<br align="left"/>let mut _340: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _341: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _342: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _343: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _344: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _345: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _346: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _347: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _348: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _349: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _350: &amp;ReErased error::ErrorCode;<br align="left"/>let _351: &amp;ReErased error::ErrorCode;<br align="left"/>let _352: ();<br align="left"/>let mut _353: &amp;ReErased str;<br align="left"/>let _354: &amp;ReErased str;<br align="left"/>let mut _355: &amp;ReErased std::string::String;<br align="left"/>let _356: &amp;ReErased std::string::String;<br align="left"/>let _357: std::string::String;<br align="left"/>let _358: std::string::String;<br align="left"/>let mut _359: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _360: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _361: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _362: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let _363: [&amp;ReErased str; 1_usize];<br align="left"/>let mut _364: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _365: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _366: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _367: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _368: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _369: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _370: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _371: error::ErrorCode;<br align="left"/>let mut _372: isize;<br align="left"/>let _373: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _374: !;<br align="left"/>let mut _375: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _376: ();<br align="left"/>let mut _377: state::oracle::HistoricalOracleData;<br align="left"/>let mut _378: state::oracle::OraclePriceData;<br align="left"/>let mut _379: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _380: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _381: isize;<br align="left"/>let _382: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _383: !;<br align="left"/>let mut _384: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _385: state::oracle::OraclePriceData;<br align="left"/>let mut _386: state::oracle::HistoricalIndexData;<br align="left"/>let mut _387: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::HistoricalIndexData&gt;;<br align="left"/>let mut _388: std::result::Result&lt;state::oracle::HistoricalIndexData, error::ErrorCode&gt;;<br align="left"/>let mut _389: state::oracle::OraclePriceData;<br align="left"/>let mut _390: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, state::oracle::OraclePriceData&gt;;<br align="left"/>let mut _391: std::result::Result&lt;state::oracle::OraclePriceData, error::ErrorCode&gt;;<br align="left"/>let mut _392: isize;<br align="left"/>let _393: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _394: !;<br align="left"/>let mut _395: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _396: state::oracle::OraclePriceData;<br align="left"/>let mut _397: isize;<br align="left"/>let _398: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _399: !;<br align="left"/>let mut _400: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _401: state::oracle::HistoricalIndexData;<br align="left"/>let _402: ();<br align="left"/>let mut _403: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _404: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _405: u16;<br align="left"/>let mut _406: u32;<br align="left"/>let mut _407: u32;<br align="left"/>let mut _408: u32;<br align="left"/>let mut _409: u32;<br align="left"/>let mut _410: u32;<br align="left"/>let mut _411: isize;<br align="left"/>let _412: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _413: !;<br align="left"/>let mut _414: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _415: ();<br align="left"/>let _416: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _417: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _418: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _419: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _420: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _421: isize;<br align="left"/>let _422: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _423: !;<br align="left"/>let mut _424: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _425: std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _426: anchor_lang::prelude::Clock;<br align="left"/>let mut _427: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _428: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _429: isize;<br align="left"/>let _430: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _431: !;<br align="left"/>let mut _432: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _433: anchor_lang::prelude::Clock;<br align="left"/>let _434: u64;<br align="left"/>let mut _435: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _436: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _437: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _438: i64;<br align="left"/>let mut _439: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _440: error::ErrorCode;<br align="left"/>let mut _441: isize;<br align="left"/>let _442: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _443: !;<br align="left"/>let mut _444: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _445: u64;<br align="left"/>let _446: u32;<br align="left"/>let mut _447: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u32&gt;;<br align="left"/>let mut _448: std::result::Result&lt;u32, error::ErrorCode&gt;;<br align="left"/>let mut _449: u8;<br align="left"/>let mut _450: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Mint;<br align="left"/>let mut _451: &amp;ReErased anchor_spl::token_interface::Mint;<br align="left"/>let _452: &amp;ReErased anchor_spl::token_interface::Mint;<br align="left"/>let mut _453: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _454: isize;<br align="left"/>let _455: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _456: !;<br align="left"/>let mut _457: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _458: u32;<br align="left"/>let mut _459: u8;<br align="left"/>let _460: ();<br align="left"/>let mut _461: bool;<br align="left"/>let mut _462: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _463: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _464: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _465: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _466: &amp;ReErased anchor_lang::prelude::Interface&lt;ReErased, anchor_spl::token_interface::TokenInterface&gt;;<br align="left"/>let mut _467: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _468: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _469: u8;<br align="left"/>let mut _470: isize;<br align="left"/>let mut _471: (isize, bool);<br align="left"/>let _472: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _473: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let _474: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _475: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;&gt;;<br align="left"/>let mut _476: std::result::Result&lt;std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _477: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _478: isize;<br align="left"/>let _479: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _480: !;<br align="left"/>let mut _481: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _482: std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _483: anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;;<br align="left"/>let mut _484: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;&gt;;<br align="left"/>let mut _485: std::result::Result&lt;anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _486: &amp;ReErased [u8];<br align="left"/>let _487: &amp;ReErased &amp;ReErased mut [u8];<br align="left"/>let mut _488: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let _489: &amp;ReErased std::cell::Ref&lt;ReErased, &amp;ReErased mut [u8]&gt;;<br align="left"/>let mut _490: isize;<br align="left"/>let _491: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _492: !;<br align="left"/>let mut _493: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _494: anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;;<br align="left"/>let _495: ();<br align="left"/>let mut _496: std::result::Result&lt;&amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::transfer_hook::TransferHook, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _497: &amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;ReErased, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;;<br align="left"/>let mut _498: isize;<br align="left"/>let _499: &amp;ReErased anchor_spl::token_2022::spl_token_2022::extension::transfer_hook::TransferHook;<br align="left"/>let _500: std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _501: spl_pod::optional_keys::OptionalNonZeroPubkey;<br align="left"/>let mut _502: bool;<br align="left"/>let mut _503: &amp;ReErased std::option::Option&lt;anchor_lang::prelude::Pubkey&gt;;<br align="left"/>let mut _504: u8;<br align="left"/>let mut _505: isize;<br align="left"/>let mut _506: (isize, bool);<br align="left"/>let _507: ();<br align="left"/>let mut _508: bool;<br align="left"/>let _509: ();<br align="left"/>let mut _510: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _511: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _512: bool;<br align="left"/>let mut _513: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _514: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _515: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _516: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _517: &amp;ReErased state::state::State;<br align="left"/>let mut _518: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _519: ();<br align="left"/>let _520: error::ErrorCode;<br align="left"/>let _521: ();<br align="left"/>let mut _522: &amp;ReErased str;<br align="left"/>let _523: &amp;ReErased str;<br align="left"/>let mut _524: &amp;ReErased std::string::String;<br align="left"/>let _525: &amp;ReErased std::string::String;<br align="left"/>let _526: std::string::String;<br align="left"/>let _527: std::string::String;<br align="left"/>let mut _528: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _529: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _530: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _531: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _532: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _533: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _534: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _535: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _536: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _537: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _538: &amp;ReErased error::ErrorCode;<br align="left"/>let _539: &amp;ReErased error::ErrorCode;<br align="left"/>let _540: ();<br align="left"/>let mut _541: &amp;ReErased str;<br align="left"/>let _542: &amp;ReErased str;<br align="left"/>let mut _543: error::ErrorCode;<br align="left"/>let mut _544: isize;<br align="left"/>let _545: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _546: !;<br align="left"/>let mut _547: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _548: ();<br align="left"/>let mut _549: state::spot_market::SpotMarket;<br align="left"/>let mut _550: u16;<br align="left"/>let mut _551: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _552: state::perp_market::MarketStatus;<br align="left"/>let mut _553: bool;<br align="left"/>let mut _554: [u8; 32_usize];<br align="left"/>let mut _555: state::spot_market::AssetTier;<br align="left"/>let mut _556: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _557: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _558: state::oracle::OracleSource;<br align="left"/>let mut _559: state::oracle::HistoricalOracleData;<br align="left"/>let mut _560: state::oracle::HistoricalIndexData;<br align="left"/>let mut _561: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _562: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _563: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _564: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _565: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _566: state::perp_market::PoolBalance;<br align="left"/>let mut _567: u16;<br align="left"/>let mut _568: state::perp_market::PoolBalance;<br align="left"/>let mut _569: u32;<br align="left"/>let mut _570: u32;<br align="left"/>let mut _571: u32;<br align="left"/>let mut _572: u32;<br align="left"/>let mut _573: u64;<br align="left"/>let mut _574: u64;<br align="left"/>let mut _575: u32;<br align="left"/>let mut _576: u32;<br align="left"/>let mut _577: u32;<br align="left"/>let mut _578: u32;<br align="left"/>let mut _579: u32;<br align="left"/>let mut _580: u32;<br align="left"/>let mut _581: u32;<br align="left"/>let mut _582: u64;<br align="left"/>let mut _583: u64;<br align="left"/>let mut _584: u64;<br align="left"/>let mut _585: u64;<br align="left"/>let mut _586: state::perp_market::PoolBalance;<br align="left"/>let mut _587: bool;<br align="left"/>let mut _588: u16;<br align="left"/>let mut _589: u64;<br align="left"/>let mut _590: u8;<br align="left"/>let mut _591: [u8; 40_usize];<br align="left"/>let mut _592: state::spot_market::InsuranceFund;<br align="left"/>let mut _593: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _594: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _595: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _596: u32;<br align="left"/>let mut _597: u32;<br align="left"/>let mut _598: u32;<br align="left"/>let mut _599: bool;<br align="left"/>let mut _600: state::spot_market::InsuranceFund;<br align="left"/>let mut _601: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _602: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _603: ();<br align="left"/>let mut _604: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _605: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _606: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _607: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _608: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _609: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _610: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _611: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _612: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _613: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _614: &amp;ReErased [&amp;ReErased str; 1_usize];<br align="left"/>let mut _615: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _616: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _617: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _618: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _619: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _620: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _621: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _622: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _623: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _624: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _625: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _626: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _627: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _628: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _629: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _630: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _631: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _632: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _633: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _634: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _635: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _636: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _637: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _638: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _639: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _640: &amp;ReErased mut [u8];<br align="left"/>let mut _641: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _642: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _643: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _644: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _645: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _646: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _647: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _648: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _649: &amp;ReErased mut instructions::admin::InitializeSpotMarket&lt;ReErased&gt;;<br align="left"/>let mut _650: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _651: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _652: bool;<br align="left"/>let mut _653: bool;<br align="left"/>let mut _654: isize;<br align="left"/>let mut _655: isize;<br align="left"/>let mut _656: isize;<br align="left"/>let mut _657: isize;<br align="left"/>let mut _658: isize;<br align="left"/>let mut _659: isize;<br align="left"/>let mut _660: isize;<br align="left"/>let mut _661: isize;<br align="left"/>let mut _662: isize;<br align="left"/>let mut _663: isize;<br align="left"/>let mut _664: isize;<br align="left"/>let mut _665: isize;<br align="left"/>let mut _666: isize;<br align="left"/>let mut _667: isize;<br align="left"/>let mut _668: isize;<br align="left"/>let mut _669: isize;<br align="left"/>let mut _670: isize;<br align="left"/>let mut _671: isize;<br align="left"/>let mut _672: isize;<br align="left"/>let mut _673: isize;<br align="left"/>let mut _674: isize;<br align="left"/>let mut _675: isize;<br align="left"/>let mut _676: isize;<br align="left"/>let mut _677: isize;<br align="left"/>let mut _678: isize;<br align="left"/>let mut _679: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _680: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _681: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _682: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _683: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _684: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _685: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _686: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _687: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _688: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _689: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _690: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::Mint&gt;;<br align="left"/>let mut _691: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _692: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug optimal_utilization =&gt; _2;<br align="left"/>debug optimal_borrow_rate =&gt; _3;<br align="left"/>debug max_borrow_rate =&gt; _4;<br align="left"/>debug oracle_source =&gt; _5;<br align="left"/>debug initial_asset_weight =&gt; _6;<br align="left"/>debug maintenance_asset_weight =&gt; _7;<br align="left"/>debug initial_liability_weight =&gt; _8;<br align="left"/>debug maintenance_liability_weight =&gt; _9;<br align="left"/>debug imf_factor =&gt; _10;<br align="left"/>debug liquidator_fee =&gt; _11;<br align="left"/>debug if_liquidation_fee =&gt; _12;<br align="left"/>debug active_status =&gt; _13;<br align="left"/>debug asset_tier =&gt; _14;<br align="left"/>debug scale_initial_asset_weight_start =&gt; _15;<br align="left"/>debug withdraw_guard_threshold =&gt; _16;<br align="left"/>debug order_tick_size =&gt; _17;<br align="left"/>debug order_step_size =&gt; _18;<br align="left"/>debug if_total_factor =&gt; _19;<br align="left"/>debug name =&gt; _20;<br align="left"/>debug state =&gt; _21;<br align="left"/>debug spot_market_pubkey =&gt; _22;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug spot_market_index =&gt; _61;<br align="left"/>debug current_id =&gt; _62;<br align="left"/>debug res =&gt; _78;<br align="left"/>debug error_code =&gt; _105;<br align="left"/>debug res =&gt; _112;<br align="left"/>debug residual =&gt; _130;<br align="left"/>debug val =&gt; _133;<br align="left"/>debug residual =&gt; _140;<br align="left"/>debug val =&gt; _143;<br align="left"/>debug oracle_price_data =&gt; _144;<br align="left"/>debug residual =&gt; _157;<br align="left"/>debug val =&gt; _160;<br align="left"/>debug residual =&gt; _162;<br align="left"/>debug val =&gt; _165;<br align="left"/>debug historical_oracle_data_default =&gt; _166;<br align="left"/>debug historical_index_data_default =&gt; _167;<br align="left"/>debug error_code =&gt; _180;<br align="left"/>debug res =&gt; _187;<br align="left"/>debug residual =&gt; _205;<br align="left"/>debug val =&gt; _208;<br align="left"/>debug error_code =&gt; _217;<br align="left"/>debug res =&gt; _224;<br align="left"/>debug residual =&gt; _242;<br align="left"/>debug val =&gt; _245;<br align="left"/>debug error_code =&gt; _256;<br align="left"/>debug res =&gt; _263;<br align="left"/>debug residual =&gt; _281;<br align="left"/>debug val =&gt; _284;<br align="left"/>debug error_code =&gt; _297;<br align="left"/>debug res =&gt; _304;<br align="left"/>debug residual =&gt; _322;<br align="left"/>debug val =&gt; _325;<br align="left"/>debug error_code =&gt; _332;<br align="left"/>debug res =&gt; _339;<br align="left"/>debug res =&gt; _358;<br align="left"/>debug residual =&gt; _373;<br align="left"/>debug val =&gt; _376;<br align="left"/>debug residual =&gt; _382;<br align="left"/>debug val =&gt; _385;<br align="left"/>debug residual =&gt; _393;<br align="left"/>debug val =&gt; _396;<br align="left"/>debug residual =&gt; _398;<br align="left"/>debug val =&gt; _401;<br align="left"/>debug residual =&gt; _412;<br align="left"/>debug val =&gt; _415;<br align="left"/>debug spot_market =&gt; _416;<br align="left"/>debug residual =&gt; _422;<br align="left"/>debug val =&gt; _425;<br align="left"/>debug clock =&gt; _426;<br align="left"/>debug residual =&gt; _430;<br align="left"/>debug val =&gt; _433;<br align="left"/>debug now =&gt; _434;<br align="left"/>debug residual =&gt; _442;<br align="left"/>debug val =&gt; _445;<br align="left"/>debug decimals =&gt; _446;<br align="left"/>debug residual =&gt; _455;<br align="left"/>debug val =&gt; _458;<br align="left"/>debug token_program =&gt; _459;<br align="left"/>debug mint_account_info =&gt; _472;<br align="left"/>debug mint_data =&gt; _474;<br align="left"/>debug residual =&gt; _479;<br align="left"/>debug val =&gt; _482;<br align="left"/>debug mint_with_extension =&gt; _483;<br align="left"/>debug residual =&gt; _491;<br align="left"/>debug val =&gt; _494;<br align="left"/>debug transfer_hook =&gt; _499;<br align="left"/>debug transfer_hook_program_id =&gt; _500;<br align="left"/>debug error_code =&gt; _520;<br align="left"/>debug res =&gt; _527;<br align="left"/>debug residual =&gt; _545;<br align="left"/>debug val =&gt; _548;<br align="left"/>>;
    bb0__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_653 = const false<br/>_652 = const false<br/>StorageLive(_21)<br/>_615 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_21 = &amp;mut ((*_615).5: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_616 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_23 = &amp;((*_616).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_22 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _23)</td></tr></table>>];
    bb1__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_617 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_618 = deref_copy ((*_617).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_679 = (((_618.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_30 = &amp;(*_679)<br/></td></tr><tr><td align="left">_29 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _30)</td></tr></table>>];
    bb2__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_28 = &amp;(*_29)<br/></td></tr><tr><td align="left">_27 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _28)</td></tr></table>>];
    bb3__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_26 = &amp;((*_27).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_619 = deref_copy (*_21)<br/>_680 = (((_619.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_33 = &amp;(*_680)<br/></td></tr><tr><td align="left">_32 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _33)</td></tr></table>>];
    bb4__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>_31 = &amp;((*_32).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_25 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _26, move _31)</td></tr></table>>];
    bb5__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb6__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = error::ErrorCode::InvalidSpotMarketAuthority<br/></td></tr><tr><td align="left">_35 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _36)</td></tr></table>>];
    bb7__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _35)<br/>StorageDead(_35)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>_24 = const ()<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_620 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_621 = deref_copy ((*_620).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_681 = (((_621.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_43 = &amp;(*_681)<br/></td></tr><tr><td align="left">_42 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _43)</td></tr></table>>];
    bb9__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_41 = &amp;(*_42)<br/></td></tr><tr><td align="left">_40 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _41)</td></tr></table>>];
    bb10__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>_39 = &amp;((*_40).1: anchor_lang::prelude::Pubkey)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>_622 = deref_copy (*_21)<br/>_682 = (((_622.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_46 = &amp;(*_682)<br/></td></tr><tr><td align="left">_45 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _46)</td></tr></table>>];
    bb11__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_44 = &amp;((*_45).3: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_38 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _39, move _44)</td></tr></table>>];
    bb12__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left">switchInt(move _38)</td></tr></table>>];
    bb13__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = error::ErrorCode::InvalidInsuranceFundAuthority<br/></td></tr><tr><td align="left">_48 = &lt;error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _49)</td></tr></table>>];
    bb14__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Err(move _48)<br/>StorageDead(_48)<br/>StorageDead(_38)<br/>StorageDead(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_40)<br/>StorageDead(_39)<br/>_37 = const ()<br/>StorageDead(_38)<br/>StorageDead(_37)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>_53 = _2<br/>StorageLive(_54)<br/>_54 = _3<br/>StorageLive(_55)<br/>_55 = _4<br/></td></tr><tr><td align="left">_52 = validate_borrow_rate(move _53, move _54, move _55, const 0_u32)</td></tr></table>>];
    bb16__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb17__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_56 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb18__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_51 as Continue).0: ())<br/>_50 = _60<br/>StorageDead(_60)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>_623 = deref_copy (*_21)<br/>_683 = (((_623.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_64 = &amp;(*_683)<br/></td></tr><tr><td align="left">_63 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _64)</td></tr></table>>];
    bb19__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb20__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb21__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>_62 = ((*_63).14: u16)<br/>StorageDead(_63)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _62<br/></td></tr><tr><td align="left">_67 = core::num::&lt;impl u16&gt;::checked_add(move _68, const 1_u16)</td></tr></table>>];
    bb23__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_69)<br/>_69 = Option::&lt;u16&gt;::Some(const 1_u16)<br/></td></tr><tr><td align="left">_66 = Option::&lt;u16&gt;::or(move _67, move _69)</td></tr></table>>];
    bb24__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>StorageDead(_67)<br/></td></tr><tr><td align="left">_65 = Option::&lt;u16&gt;::unwrap(move _66)</td></tr></table>>];
    bb25__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>_624 = deref_copy (*_21)<br/>_684 = (((_624.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_71 = &amp;mut (*_684)<br/></td></tr><tr><td align="left">_70 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as DerefMut&gt;::deref_mut(move _71)</td></tr></table>>];
    bb26__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>((*_70).14: u16) = move _65<br/>StorageDead(_65)<br/>StorageDead(_70)<br/>_61 = _62<br/>StorageDead(_62)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_614 = const _<br/>_82 = &amp;(*_614)<br/>_81 = &amp;(*_82)<br/>_80 = move _81 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_81)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>_90 = &amp;_61<br/>_89 = &amp;(*_90)<br/></td></tr><tr><td align="left">_88 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _89)</td></tr></table>>];
    bb27__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>_87 = [move _88]<br/>StorageDead(_88)<br/>_86 = &amp;_87<br/>_85 = &amp;(*_86)<br/>_84 = move _85 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">_79 = Arguments::&lt;'_&gt;::new_v1(move _80, move _84)</td></tr></table>>];
    bb28__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_84)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">_78 = format(move _79)</td></tr></table>>];
    bb29__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_79)<br/>StorageDead(_90)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_82)<br/>_77 = move _78<br/>StorageDead(_78)<br/>_76 = &amp;_77<br/>_75 = &amp;(*_76)<br/></td></tr><tr><td align="left">_74 = &lt;String as Deref&gt;::deref(move _75)</td></tr></table>>];
    bb30__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_73 = &amp;(*_74)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_72 = solana_program::log::sol_log(move _73)</td></tr></table>>];
    bb31__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb32__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_74)<br/>StorageDead(_72)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = &amp;_5<br/>StorageLive(_94)<br/>_613 = const _<br/>_94 = &amp;(*_613)<br/></td></tr><tr><td align="left">_92 = &lt;state::oracle::OracleSource as PartialEq&gt;::eq(move _93, move _94)</td></tr></table>>];
    bb33__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left">switchInt(move _92)</td></tr></table>>];
    bb34__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>_625 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_100 = &amp;(((*_625).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/></td></tr><tr><td align="left">_103 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb35__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_102 = &amp;_103<br/>_101 = &amp;_102<br/></td></tr><tr><td align="left">_99 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _100, move _101)</td></tr></table>>];
    bb36__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb37__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_104)<br/>_104 = ()<br/>_98 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _104)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageLive(_105)<br/>_105 = error::ErrorCode::InvalidSpotMarketInitialization<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>_612 = const _<br/>_116 = &amp;(*_612)<br/>_115 = &amp;(*_116)<br/>_114 = move _115 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_115)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>StorageLive(_124)<br/>_124 = &amp;_105<br/>_123 = &amp;(*_124)<br/></td></tr><tr><td align="left">_122 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _123)</td></tr></table>>];
    bb39__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>_121 = [move _122]<br/>StorageDead(_122)<br/>_120 = &amp;_121<br/>_119 = &amp;(*_120)<br/>_118 = move _119 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_119)<br/></td></tr><tr><td align="left">_113 = Arguments::&lt;'_&gt;::new_v1(move _114, move _118)</td></tr></table>>];
    bb40__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_114)<br/></td></tr><tr><td align="left">_112 = format(move _113)</td></tr></table>>];
    bb41__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_124)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageDead(_116)<br/>_111 = move _112<br/>StorageDead(_112)<br/>_110 = &amp;_111<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = &lt;String as Deref&gt;::deref(move _109)</td></tr></table>>];
    bb42__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">_107 = &amp;(*_108)<br/>StorageDead(_109)<br/></td></tr><tr><td align="left">_106 = solana_program::log::sol_log(move _107)</td></tr></table>>];
    bb43__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/></td></tr><tr><td align="left">drop(_111)</td></tr></table>>];
    bb44__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_111)<br/>StorageDead(_110)<br/>StorageDead(_108)<br/>StorageDead(_106)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>_127 = const &quot;For OracleSource::QuoteAsset, oracle must be default public key&quot;<br/>_126 = &amp;(*_127)<br/></td></tr><tr><td align="left">_125 = solana_program::log::sol_log(move _126)</td></tr></table>>];
    bb45__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_126)<br/>StorageDead(_127)<br/>StorageDead(_125)<br/>StorageLive(_128)<br/>_128 = _105<br/>_98 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _128)<br/>StorageDead(_128)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/></td></tr><tr><td align="left">_97 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _98)</td></tr></table>>];
    bb47__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>_129 = discriminant(_97)<br/></td></tr><tr><td align="left">switchInt(move _129)</td></tr></table>>];
    bb48__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_97 as Continue).0: ())<br/>_96 = _133<br/>StorageDead(_133)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>_91 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_130)<br/>_130 = ((_97 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_132)<br/>_132 = _130<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _132)</td></tr></table>>];
    bb50__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_132)<br/>StorageDead(_130)<br/>StorageDead(_97)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/>StorageDead(_93)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_626 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_138 = &amp;((*_626).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_137 = &amp;(*_138)<br/></td></tr><tr><td align="left">_136 = OracleMap::&lt;'_&gt;::validate_oracle_account_info(move _137)</td></tr></table>>];
    bb52__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/></td></tr><tr><td align="left">_135 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _136)</td></tr></table>>];
    bb53__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_136)<br/>_139 = discriminant(_135)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb54__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_143)<br/>_143 = ((_135 as Continue).0: ())<br/>_134 = _143<br/>StorageDead(_143)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/>_91 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_140)<br/>_140 = ((_135 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_142)<br/>_142 = _140<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _142)</td></tr></table>>];
    bb56__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_135)<br/>StorageDead(_134)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = &amp;_5<br/>_145 = &amp;(*_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_627 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_148 = &amp;((*_627).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/>_147 = &amp;(*_148)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/></td></tr><tr><td align="left">_155 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb58__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left">_154 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _155)</td></tr></table>>];
    bb59__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_652 = const true<br/>_653 = const true<br/>StorageDead(_155)<br/>_156 = discriminant(_154)<br/></td></tr><tr><td align="left">switchInt(move _156)</td></tr></table>>];
    bb60__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = move ((_154 as Continue).0: anchor_lang::prelude::Clock)<br/>_153 = move _160<br/>StorageDead(_160)<br/>_152 = (_153.4: i64)<br/></td></tr><tr><td align="left">_151 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _152)</td></tr></table>>];
    bb61__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_157)<br/>_157 = move ((_154 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_159)<br/>_159 = move _157<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _159)</td></tr></table>>];
    bb62__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_152)<br/>StorageDead(_151)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/></td></tr><tr><td align="left">_150 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _151)</td></tr></table>>];
    bb64__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>_161 = discriminant(_150)<br/></td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb65__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_150 as Continue).0: u64)<br/>_149 = _165<br/>StorageDead(_165)<br/></td></tr><tr><td align="left">_144 = get_oracle_price(move _145, move _147, move _149)</td></tr></table>>];
    bb66__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_150 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_164)<br/>_164 = _162<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _164)</td></tr></table>>];
    bb67__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>_654 = discriminant(_154)<br/>_652 = const false<br/>_653 = const false<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = _61<br/>_169 = Eq(move _170, const _)<br/></td></tr><tr><td align="left">switchInt(move _169)</td></tr></table>>];
    bb69__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>_628 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_175 = &amp;(((*_628).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/></td></tr><tr><td align="left">_178 = &lt;anchor_lang::prelude::Pubkey as Default&gt;::default()</td></tr></table>>];
    bb70__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_177 = &amp;_178<br/>_176 = &amp;_177<br/></td></tr><tr><td align="left">_174 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _175, move _176)</td></tr></table>>];
    bb71__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left">switchInt(move _174)</td></tr></table>>];
    bb72__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_179)<br/>_179 = ()<br/>_173 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _179)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>StorageDead(_175)<br/>StorageLive(_180)<br/>_180 = error::ErrorCode::InvalidSpotMarketInitialization<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_608 = const _<br/>_191 = &amp;(*_608)<br/>_190 = &amp;(*_191)<br/>_189 = move _190 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_190)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;_180<br/>_198 = &amp;(*_199)<br/></td></tr><tr><td align="left">_197 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _198)</td></tr></table>>];
    bb74__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_198)<br/>_196 = [move _197]<br/>StorageDead(_197)<br/>_195 = &amp;_196<br/>_194 = &amp;(*_195)<br/>_193 = move _194 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_188 = Arguments::&lt;'_&gt;::new_v1(move _189, move _193)</td></tr></table>>];
    bb75__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_189)<br/></td></tr><tr><td align="left">_187 = format(move _188)</td></tr></table>>];
    bb76__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_188)<br/>StorageDead(_199)<br/>StorageDead(_196)<br/>StorageDead(_195)<br/>StorageDead(_191)<br/>_186 = move _187<br/>StorageDead(_187)<br/>_185 = &amp;_186<br/>_184 = &amp;(*_185)<br/></td></tr><tr><td align="left">_183 = &lt;String as Deref&gt;::deref(move _184)</td></tr></table>>];
    bb77__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">_182 = &amp;(*_183)<br/>StorageDead(_184)<br/></td></tr><tr><td align="left">_181 = solana_program::log::sol_log(move _182)</td></tr></table>>];
    bb78__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_182)<br/></td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb79__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_186)<br/>StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_181)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = const &quot;For quote asset spot market, oracle must be default public key&quot;<br/>_201 = &amp;(*_202)<br/></td></tr><tr><td align="left">_200 = solana_program::log::sol_log(move _201)</td></tr></table>>];
    bb80__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_202)<br/>StorageDead(_200)<br/>StorageLive(_203)<br/>_203 = _180<br/>_173 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _203)<br/>StorageDead(_203)<br/>StorageDead(_180)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/></td></tr><tr><td align="left">_172 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _173)</td></tr></table>>];
    bb82__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>_204 = discriminant(_172)<br/></td></tr><tr><td align="left">switchInt(move _204)</td></tr></table>>];
    bb83__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_208)<br/>_208 = ((_172 as Continue).0: ())<br/>_171 = _208<br/>StorageDead(_208)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_213 = &amp;_5<br/>StorageLive(_214)<br/>_607 = const _<br/>_214 = &amp;(*_607)<br/></td></tr><tr><td align="left">_212 = &lt;state::oracle::OracleSource as PartialEq&gt;::eq(move _213, move _214)</td></tr></table>>];
    bb84__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_205)<br/>_205 = ((_172 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_207)<br/>_207 = _205<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _207)</td></tr></table>>];
    bb85__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/>StorageDead(_205)<br/>StorageDead(_172)<br/>StorageDead(_171)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left">switchInt(move _212)</td></tr></table>>];
    bb87__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_213)<br/>StorageLive(_216)<br/>_216 = ()<br/>_211 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _216)<br/>StorageDead(_216)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageDead(_213)<br/>StorageLive(_217)<br/>_217 = error::ErrorCode::InvalidSpotMarketInitialization<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>_606 = const _<br/>_228 = &amp;(*_606)<br/>_227 = &amp;(*_228)<br/>_226 = move _227 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_227)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = &amp;_217<br/>_235 = &amp;(*_236)<br/></td></tr><tr><td align="left">_234 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _235)</td></tr></table>>];
    bb89__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>_233 = [move _234]<br/>StorageDead(_234)<br/>_232 = &amp;_233<br/>_231 = &amp;(*_232)<br/>_230 = move _231 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">_225 = Arguments::&lt;'_&gt;::new_v1(move _226, move _230)</td></tr></table>>];
    bb90__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_230)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">_224 = format(move _225)</td></tr></table>>];
    bb91__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_236)<br/>StorageDead(_233)<br/>StorageDead(_232)<br/>StorageDead(_228)<br/>_223 = move _224<br/>StorageDead(_224)<br/>_222 = &amp;_223<br/>_221 = &amp;(*_222)<br/></td></tr><tr><td align="left">_220 = &lt;String as Deref&gt;::deref(move _221)</td></tr></table>>];
    bb92__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_219 = &amp;(*_220)<br/>StorageDead(_221)<br/></td></tr><tr><td align="left">_218 = solana_program::log::sol_log(move _219)</td></tr></table>>];
    bb93__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_219)<br/></td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb94__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/>StorageDead(_222)<br/>StorageDead(_220)<br/>StorageDead(_218)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>_239 = const &quot;For quote asset spot market, oracle source must be QuoteAsset&quot;<br/>_238 = &amp;(*_239)<br/></td></tr><tr><td align="left">_237 = solana_program::log::sol_log(move _238)</td></tr></table>>];
    bb95__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_238)<br/>StorageDead(_239)<br/>StorageDead(_237)<br/>StorageLive(_240)<br/>_240 = _217<br/>_211 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _240)<br/>StorageDead(_240)<br/>StorageDead(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/></td></tr><tr><td align="left">_210 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _211)</td></tr></table>>];
    bb97__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_241 = discriminant(_210)<br/></td></tr><tr><td align="left">switchInt(move _241)</td></tr></table>>];
    bb98__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageLive(_245)<br/>_245 = ((_210 as Continue).0: ())<br/>_209 = _245<br/>StorageDead(_245)<br/>StorageDead(_210)<br/>StorageDead(_209)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>_629 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_630 = deref_copy ((*_629).1: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_685 = (((_630.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>_254 = &amp;(*_685)<br/></td></tr><tr><td align="left">_253 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as Deref&gt;::deref(move _254)</td></tr></table>>];
    bb99__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_242)<br/>_242 = ((_210 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_244)<br/>_244 = _242<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _244)</td></tr></table>>];
    bb100__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_244)<br/>StorageDead(_242)<br/>StorageDead(_210)<br/>StorageDead(_209)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb101__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">_252 = &amp;(*_253)<br/></td></tr><tr><td align="left">_251 = &lt;anchor_spl::token_interface::Mint as Deref&gt;::deref(move _252)</td></tr></table>>];
    bb102__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_252)<br/>_250 = ((*_251).2: u8)<br/>_249 = Eq(move _250, const 6_u8)<br/></td></tr><tr><td align="left">switchInt(move _249)</td></tr></table>>];
    bb103__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageLive(_255)<br/>_255 = ()<br/>_248 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _255)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageLive(_256)<br/>_256 = error::ErrorCode::InvalidSpotMarketInitialization<br/>StorageLive(_257)<br/>StorageLive(_258)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>_605 = const _<br/>_267 = &amp;(*_605)<br/>_266 = &amp;(*_267)<br/>_265 = move _266 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_266)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>StorageLive(_273)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = &amp;_256<br/>_274 = &amp;(*_275)<br/></td></tr><tr><td align="left">_273 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _274)</td></tr></table>>];
    bb105__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_274)<br/>_272 = [move _273]<br/>StorageDead(_273)<br/>_271 = &amp;_272<br/>_270 = &amp;(*_271)<br/>_269 = move _270 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_270)<br/></td></tr><tr><td align="left">_264 = Arguments::&lt;'_&gt;::new_v1(move _265, move _269)</td></tr></table>>];
    bb106__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_269)<br/>StorageDead(_265)<br/></td></tr><tr><td align="left">_263 = format(move _264)</td></tr></table>>];
    bb107__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageDead(_275)<br/>StorageDead(_272)<br/>StorageDead(_271)<br/>StorageDead(_267)<br/>_262 = move _263<br/>StorageDead(_263)<br/>_261 = &amp;_262<br/>_260 = &amp;(*_261)<br/></td></tr><tr><td align="left">_259 = &lt;String as Deref&gt;::deref(move _260)</td></tr></table>>];
    bb108__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">_258 = &amp;(*_259)<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_257 = solana_program::log::sol_log(move _258)</td></tr></table>>];
    bb109__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_258)<br/></td></tr><tr><td align="left">drop(_262)</td></tr></table>>];
    bb110__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_259)<br/>StorageDead(_257)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>StorageLive(_278)<br/>_278 = const &quot;For quote asset spot market, mint decimals must be 6&quot;<br/>_277 = &amp;(*_278)<br/></td></tr><tr><td align="left">_276 = solana_program::log::sol_log(move _277)</td></tr></table>>];
    bb111__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageDead(_278)<br/>StorageDead(_276)<br/>StorageLive(_279)<br/>_279 = _256<br/>_248 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _279)<br/>StorageDead(_279)<br/>StorageDead(_256)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/></td></tr><tr><td align="left">_247 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _248)</td></tr></table>>];
    bb113__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>_280 = discriminant(_247)<br/></td></tr><tr><td align="left">switchInt(move _280)</td></tr></table>>];
    bb114__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageLive(_284)<br/>_284 = ((_247 as Continue).0: ())<br/>_246 = _284<br/>StorageDead(_284)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/>StorageLive(_285)<br/></td></tr><tr><td align="left">_285 = HistoricalOracleData::default_quote_oracle()</td></tr></table>>];
    bb115__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageLive(_281)<br/>_281 = ((_247 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_283)<br/>_283 = _281<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _283)</td></tr></table>>];
    bb116__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>StorageDead(_281)<br/>StorageDead(_247)<br/>StorageDead(_246)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageLive(_286)<br/></td></tr><tr><td align="left">_286 = HistoricalIndexData::default_quote_oracle()</td></tr></table>>];
    bb118__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">_168 = (move _285, move _286)<br/>StorageDead(_286)<br/>StorageDead(_285)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb119__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageLive(_287)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>StorageLive(_292)<br/>StorageLive(_293)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>_631 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_632 = deref_copy ((*_631).1: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_686 = (((_632.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>_295 = &amp;(*_686)<br/></td></tr><tr><td align="left">_294 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as Deref&gt;::deref(move _295)</td></tr></table>>];
    bb120__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">_293 = &amp;(*_294)<br/></td></tr><tr><td align="left">_292 = &lt;anchor_spl::token_interface::Mint as Deref&gt;::deref(move _293)</td></tr></table>>];
    bb121__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_293)<br/>_291 = ((*_292).2: u8)<br/>_290 = Ge(move _291, const 5_u8)<br/></td></tr><tr><td align="left">switchInt(move _290)</td></tr></table>>];
    bb122__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_291)<br/>StorageLive(_296)<br/>_296 = ()<br/>_289 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _296)<br/>StorageDead(_296)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_294)<br/>StorageDead(_292)<br/>StorageDead(_291)<br/>StorageLive(_297)<br/>_297 = error::ErrorCode::InvalidSpotMarketInitialization<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>StorageLive(_305)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>_611 = const _<br/>_308 = &amp;(*_611)<br/>_307 = &amp;(*_308)<br/>_306 = move _307 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_307)<br/>StorageLive(_310)<br/>StorageLive(_311)<br/>StorageLive(_312)<br/>StorageLive(_313)<br/>StorageLive(_314)<br/>StorageLive(_315)<br/>StorageLive(_316)<br/>_316 = &amp;_297<br/>_315 = &amp;(*_316)<br/></td></tr><tr><td align="left">_314 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _315)</td></tr></table>>];
    bb124__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_315)<br/>_313 = [move _314]<br/>StorageDead(_314)<br/>_312 = &amp;_313<br/>_311 = &amp;(*_312)<br/>_310 = move _311 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_311)<br/></td></tr><tr><td align="left">_305 = Arguments::&lt;'_&gt;::new_v1(move _306, move _310)</td></tr></table>>];
    bb125__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_306)<br/></td></tr><tr><td align="left">_304 = format(move _305)</td></tr></table>>];
    bb126__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_316)<br/>StorageDead(_313)<br/>StorageDead(_312)<br/>StorageDead(_308)<br/>_303 = move _304<br/>StorageDead(_304)<br/>_302 = &amp;_303<br/>_301 = &amp;(*_302)<br/></td></tr><tr><td align="left">_300 = &lt;String as Deref&gt;::deref(move _301)</td></tr></table>>];
    bb127__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_299 = &amp;(*_300)<br/>StorageDead(_301)<br/></td></tr><tr><td align="left">_298 = solana_program::log::sol_log(move _299)</td></tr></table>>];
    bb128__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/></td></tr><tr><td align="left">drop(_303)</td></tr></table>>];
    bb129__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_303)<br/>StorageDead(_302)<br/>StorageDead(_300)<br/>StorageDead(_298)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>StorageLive(_319)<br/>_319 = const &quot;Mint decimals must be greater than or equal to 5&quot;<br/>_318 = &amp;(*_319)<br/></td></tr><tr><td align="left">_317 = solana_program::log::sol_log(move _318)</td></tr></table>>];
    bb130__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>StorageDead(_319)<br/>StorageDead(_317)<br/>StorageLive(_320)<br/>_320 = _297<br/>_289 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _320)<br/>StorageDead(_320)<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/></td></tr><tr><td align="left">_288 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _289)</td></tr></table>>];
    bb132__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_289)<br/>_321 = discriminant(_288)<br/></td></tr><tr><td align="left">switchInt(move _321)</td></tr></table>>];
    bb133__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageLive(_325)<br/>_325 = ((_288 as Continue).0: ())<br/>_287 = _325<br/>StorageDead(_325)<br/>StorageDead(_288)<br/>StorageDead(_287)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>_330 = &amp;_144<br/></td></tr><tr><td align="left">_329 = std::result::Result::&lt;OraclePriceData, error::ErrorCode&gt;::is_ok(move _330)</td></tr></table>>];
    bb134__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageLive(_322)<br/>_322 = ((_288 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_324)<br/>_324 = _322<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _324)</td></tr></table>>];
    bb135__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_324)<br/>StorageDead(_322)<br/>StorageDead(_288)<br/>StorageDead(_287)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left">switchInt(move _329)</td></tr></table>>];
    bb137__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageLive(_331)<br/>_331 = ()<br/>_328 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _331)<br/>StorageDead(_331)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb138__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageDead(_330)<br/>StorageLive(_332)<br/>_332 = error::ErrorCode::InvalidSpotMarketInitialization<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_610 = const _<br/>_343 = &amp;(*_610)<br/>_342 = &amp;(*_343)<br/>_341 = move _342 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_342)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>_351 = &amp;_332<br/>_350 = &amp;(*_351)<br/></td></tr><tr><td align="left">_349 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _350)</td></tr></table>>];
    bb139__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_350)<br/>_348 = [move _349]<br/>StorageDead(_349)<br/>_347 = &amp;_348<br/>_346 = &amp;(*_347)<br/>_345 = move _346 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_346)<br/></td></tr><tr><td align="left">_340 = Arguments::&lt;'_&gt;::new_v1(move _341, move _345)</td></tr></table>>];
    bb140__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_345)<br/>StorageDead(_341)<br/></td></tr><tr><td align="left">_339 = format(move _340)</td></tr></table>>];
    bb141__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_340)<br/>StorageDead(_351)<br/>StorageDead(_348)<br/>StorageDead(_347)<br/>StorageDead(_343)<br/>_338 = move _339<br/>StorageDead(_339)<br/>_337 = &amp;_338<br/>_336 = &amp;(*_337)<br/></td></tr><tr><td align="left">_335 = &lt;String as Deref&gt;::deref(move _336)</td></tr></table>>];
    bb142__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">_334 = &amp;(*_335)<br/>StorageDead(_336)<br/></td></tr><tr><td align="left">_333 = solana_program::log::sol_log(move _334)</td></tr></table>>];
    bb143__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_334)<br/></td></tr><tr><td align="left">drop(_338)</td></tr></table>>];
    bb144__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_338)<br/>StorageDead(_337)<br/>StorageDead(_335)<br/>StorageDead(_333)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>StorageLive(_355)<br/>StorageLive(_356)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>StorageLive(_359)<br/>StorageLive(_360)<br/>StorageLive(_361)<br/>StorageLive(_362)<br/>_609 = const _<br/>_362 = &amp;(*_609)<br/>_361 = &amp;(*_362)<br/>_360 = move _361 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_361)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>StorageLive(_370)<br/>_633 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_370 = &amp;(((*_633).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;).0: &amp;anchor_lang::prelude::Pubkey)<br/>_369 = &amp;(*_370)<br/></td></tr><tr><td align="left">_368 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;&amp;anchor_lang::prelude::Pubkey&gt;(move _369)</td></tr></table>>];
    bb145__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">StorageDead(_369)<br/>_367 = [move _368]<br/>StorageDead(_368)<br/>_366 = &amp;_367<br/>_365 = &amp;(*_366)<br/>_364 = move _365 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_365)<br/></td></tr><tr><td align="left">_359 = Arguments::&lt;'_&gt;::new_v1(move _360, move _364)</td></tr></table>>];
    bb146__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">StorageDead(_364)<br/>StorageDead(_360)<br/></td></tr><tr><td align="left">_358 = format(move _359)</td></tr></table>>];
    bb147__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_359)<br/>StorageDead(_370)<br/>StorageDead(_367)<br/>StorageDead(_366)<br/>StorageDead(_362)<br/>_357 = move _358<br/>StorageDead(_358)<br/>_356 = &amp;_357<br/>_355 = &amp;(*_356)<br/></td></tr><tr><td align="left">_354 = &lt;String as Deref&gt;::deref(move _355)</td></tr></table>>];
    bb148__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">_353 = &amp;(*_354)<br/>StorageDead(_355)<br/></td></tr><tr><td align="left">_352 = solana_program::log::sol_log(move _353)</td></tr></table>>];
    bb149__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_353)<br/></td></tr><tr><td align="left">drop(_357)</td></tr></table>>];
    bb150__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_356)<br/>StorageDead(_354)<br/>StorageDead(_352)<br/>StorageLive(_371)<br/>_371 = _332<br/>_328 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _371)<br/>StorageDead(_371)<br/>StorageDead(_332)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb151__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_329)<br/></td></tr><tr><td align="left">_327 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _328)</td></tr></table>>];
    bb152__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_372 = discriminant(_327)<br/></td></tr><tr><td align="left">switchInt(move _372)</td></tr></table>>];
    bb153__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_376)<br/>_376 = ((_327 as Continue).0: ())<br/>_326 = _376<br/>StorageDead(_376)<br/>StorageDead(_327)<br/>StorageDead(_326)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>_380 = _144<br/></td></tr><tr><td align="left">_379 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _380)</td></tr></table>>];
    bb154__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageLive(_373)<br/>_373 = ((_327 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_375)<br/>_375 = _373<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _375)</td></tr></table>>];
    bb155__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_375)<br/>StorageDead(_373)<br/>StorageDead(_327)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb156__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_380)<br/>_381 = discriminant(_379)<br/></td></tr><tr><td align="left">switchInt(move _381)</td></tr></table>>];
    bb157__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_385)<br/>_385 = ((_379 as Continue).0: state::oracle::OraclePriceData)<br/>_378 = _385<br/>StorageDead(_385)<br/></td></tr><tr><td align="left">_377 = HistoricalOracleData::default_with_current_oracle(move _378)</td></tr></table>>];
    bb158__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_382)<br/>_382 = ((_379 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_384)<br/>_384 = _382<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _384)</td></tr></table>>];
    bb159__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_384)<br/>StorageDead(_382)<br/>StorageDead(_378)<br/>StorageDead(_377)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_378)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = _144<br/></td></tr><tr><td align="left">_390 = &lt;std::result::Result&lt;OraclePriceData, error::ErrorCode&gt; as Try&gt;::branch(move _391)</td></tr></table>>];
    bb161__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>_392 = discriminant(_390)<br/></td></tr><tr><td align="left">switchInt(move _392)</td></tr></table>>];
    bb162__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_396)<br/>_396 = ((_390 as Continue).0: state::oracle::OraclePriceData)<br/>_389 = _396<br/>StorageDead(_396)<br/></td></tr><tr><td align="left">_388 = HistoricalIndexData::default_with_current_oracle(move _389)</td></tr></table>>];
    bb163__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_393)<br/>_393 = ((_390 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_395)<br/>_395 = _393<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _395)</td></tr></table>>];
    bb164__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_389)<br/>StorageDead(_388)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/></td></tr><tr><td align="left">_387 = &lt;std::result::Result&lt;HistoricalIndexData, error::ErrorCode&gt; as Try&gt;::branch(move _388)</td></tr></table>>];
    bb166__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageDead(_388)<br/>_397 = discriminant(_387)<br/></td></tr><tr><td align="left">switchInt(move _397)</td></tr></table>>];
    bb167__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageLive(_401)<br/>_401 = ((_387 as Continue).0: state::oracle::HistoricalIndexData)<br/>_386 = _401<br/>StorageDead(_401)<br/>_168 = (move _377, move _386)<br/>StorageDead(_386)<br/>StorageDead(_377)<br/>StorageDead(_390)<br/>StorageDead(_387)<br/>StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb168__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageLive(_398)<br/>_398 = ((_387 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_400)<br/>_400 = _398<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _400)</td></tr></table>>];
    bb169__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_400)<br/>StorageDead(_398)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb170__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageLive(_166)<br/>_166 = (_168.0: state::oracle::HistoricalOracleData)<br/>StorageLive(_167)<br/>_167 = (_168.1: state::oracle::HistoricalIndexData)<br/>StorageDead(_168)<br/>StorageLive(_402)<br/>StorageLive(_403)<br/>StorageLive(_404)<br/>StorageLive(_405)<br/>_405 = _61<br/>StorageLive(_406)<br/>_406 = _6<br/>StorageLive(_407)<br/>_407 = _7<br/>StorageLive(_408)<br/>_408 = _8<br/>StorageLive(_409)<br/>_409 = _9<br/>StorageLive(_410)<br/>_410 = _10<br/></td></tr><tr><td align="left">_404 = validate_margin_weights(move _405, move _406, move _407, move _408, move _409, move _410)</td></tr></table>>];
    bb171__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_410)<br/>StorageDead(_409)<br/>StorageDead(_408)<br/>StorageDead(_407)<br/>StorageDead(_406)<br/>StorageDead(_405)<br/></td></tr><tr><td align="left">_403 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _404)</td></tr></table>>];
    bb172__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>_411 = discriminant(_403)<br/></td></tr><tr><td align="left">switchInt(move _411)</td></tr></table>>];
    bb173__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageLive(_415)<br/>_415 = ((_403 as Continue).0: ())<br/>_402 = _415<br/>StorageDead(_415)<br/>StorageDead(_403)<br/>StorageDead(_402)<br/>StorageLive(_416)<br/>StorageLive(_417)<br/>StorageLive(_418)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>_634 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_420 = &amp;((*_634).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/></td></tr><tr><td align="left">_419 = anchor_lang::prelude::AccountLoader::&lt;'_, SpotMarket&gt;::load_init(move _420)</td></tr></table>>];
    bb174__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left" balign="left">StorageLive(_412)<br/>_412 = ((_403 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_414)<br/>_414 = _412<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _414)</td></tr></table>>];
    bb175__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_414)<br/>StorageDead(_412)<br/>StorageDead(_403)<br/>StorageDead(_402)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb176__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/></td></tr><tr><td align="left">_418 = &lt;std::result::Result&lt;RefMut&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _419)</td></tr></table>>];
    bb177__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_419)<br/>_421 = discriminant(_418)<br/></td></tr><tr><td align="left">switchInt(move _421)</td></tr></table>>];
    bb178__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageLive(_425)<br/>_425 = move ((_418 as Continue).0: std::cell::RefMut&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_417 = move _425<br/>StorageDead(_425)<br/>_416 = &amp;mut _417<br/>_656 = discriminant(_418)<br/>StorageDead(_418)<br/>StorageLive(_426)<br/>StorageLive(_427)<br/>StorageLive(_428)<br/></td></tr><tr><td align="left">_428 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb179__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageLive(_422)<br/>_422 = move ((_418 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_424)<br/>_424 = move _422<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _424)</td></tr></table>>];
    bb180__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_424)<br/>StorageDead(_422)<br/>_670 = discriminant(_418)<br/>StorageDead(_418)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb181__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left">_427 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _428)</td></tr></table>>];
    bb182__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_428)<br/>_429 = discriminant(_427)<br/></td></tr><tr><td align="left">switchInt(move _429)</td></tr></table>>];
    bb183__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageLive(_433)<br/>_433 = move ((_427 as Continue).0: anchor_lang::prelude::Clock)<br/>_426 = move _433<br/>StorageDead(_433)<br/>_658 = discriminant(_427)<br/>StorageDead(_427)<br/>StorageLive(_434)<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>StorageLive(_437)<br/>StorageLive(_438)<br/>_438 = (_426.4: i64)<br/></td></tr><tr><td align="left">_437 = &lt;i64 as Cast&gt;::cast::&lt;u64&gt;(move _438)</td></tr></table>>];
    bb184__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageLive(_430)<br/>_430 = move ((_427 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_432)<br/>_432 = move _430<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _432)</td></tr></table>>];
    bb185__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_432)<br/>StorageDead(_430)<br/>_668 = discriminant(_427)<br/>StorageDead(_427)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb186__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>_440 = error::ErrorCode::UnableToCastUnixTime<br/>_439 = std::result::Result::&lt;u64, error::ErrorCode&gt;::Err(move _440)<br/>StorageDead(_440)<br/></td></tr><tr><td align="left">_436 = std::result::Result::&lt;u64, error::ErrorCode&gt;::or::&lt;error::ErrorCode&gt;(move _437, move _439)</td></tr></table>>];
    bb187__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_439)<br/>StorageDead(_437)<br/></td></tr><tr><td align="left">_435 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _436)</td></tr></table>>];
    bb188__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_436)<br/>_441 = discriminant(_435)<br/></td></tr><tr><td align="left">switchInt(move _441)</td></tr></table>>];
    bb189__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">StorageLive(_445)<br/>_445 = ((_435 as Continue).0: u64)<br/>_434 = _445<br/>StorageDead(_445)<br/>StorageDead(_435)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>StorageLive(_449)<br/>StorageLive(_450)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>_635 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_636 = deref_copy ((*_635).1: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_687 = (((_636.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>_453 = &amp;(*_687)<br/></td></tr><tr><td align="left">_452 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as Deref&gt;::deref(move _453)</td></tr></table>>];
    bb190__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageLive(_442)<br/>_442 = ((_435 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_444)<br/>_444 = _442<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _444)</td></tr></table>>];
    bb191__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_444)<br/>StorageDead(_442)<br/>StorageDead(_435)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb192__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">_451 = &amp;(*_452)<br/></td></tr><tr><td align="left">_450 = &lt;anchor_spl::token_interface::Mint as Deref&gt;::deref(move _451)</td></tr></table>>];
    bb193__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageDead(_451)<br/>_449 = ((*_450).2: u8)<br/></td></tr><tr><td align="left">_448 = &lt;u8 as Cast&gt;::cast::&lt;u32&gt;(move _449)</td></tr></table>>];
    bb194__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/></td></tr><tr><td align="left">_447 = &lt;std::result::Result&lt;u32, error::ErrorCode&gt; as Try&gt;::branch(move _448)</td></tr></table>>];
    bb195__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_448)<br/>_454 = discriminant(_447)<br/></td></tr><tr><td align="left">switchInt(move _454)</td></tr></table>>];
    bb196__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">StorageLive(_458)<br/>_458 = ((_447 as Continue).0: u32)<br/>_446 = _458<br/>StorageDead(_458)<br/>StorageDead(_452)<br/>StorageDead(_450)<br/>StorageDead(_447)<br/>StorageLive(_459)<br/>_459 = const 0_u8<br/>StorageLive(_460)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>StorageLive(_466)<br/>_637 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_466 = &amp;((*_637).10: anchor_lang::prelude::Interface&lt;'_, anchor_spl::token_interface::TokenInterface&gt;)<br/></td></tr><tr><td align="left">_465 = &lt;anchor_lang::prelude::Interface&lt;'_, TokenInterface&gt; as Deref&gt;::deref(move _466)</td></tr></table>>];
    bb197__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageLive(_455)<br/>_455 = ((_447 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_457)<br/>_457 = _455<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _457)</td></tr></table>>];
    bb198__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">StorageDead(_457)<br/>StorageDead(_455)<br/>StorageDead(_452)<br/>StorageDead(_450)<br/>StorageDead(_447)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb199__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">_464 = &amp;(*_465)<br/>StorageDead(_466)<br/></td></tr><tr><td align="left">_463 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _464)</td></tr></table>>];
    bb200__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">_462 = &amp;_463<br/>StorageDead(_464)<br/>StorageLive(_467)<br/>StorageLive(_468)<br/></td></tr><tr><td align="left">_468 = &lt;Token2022 as anchor_lang::Id&gt;::id()</td></tr></table>>];
    bb201__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">_467 = &amp;_468<br/></td></tr><tr><td align="left">_461 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _462, move _467)</td></tr></table>>];
    bb202__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left">switchInt(move _461)</td></tr></table>>];
    bb203__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>StorageDead(_467)<br/>StorageDead(_465)<br/>StorageDead(_463)<br/>StorageDead(_462)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>_471 = CheckedAdd(const _, const 0_isize)<br/></td></tr><tr><td align="left">assert(!move (_471.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_isize)</td></tr></table>>];
    bb204__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left" balign="left">_470 = move (_471.0: isize)<br/>_469 = move _470 as u8 (IntToInt)<br/>StorageDead(_470)<br/>_459 = BitOr(_459, move _469)<br/>StorageDead(_469)<br/>_460 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb205__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_468)<br/>StorageDead(_467)<br/>StorageDead(_465)<br/>StorageDead(_463)<br/>StorageDead(_462)<br/>_460 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb206__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_461)<br/>StorageDead(_460)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>_638 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_639 = deref_copy ((*_638).1: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_688 = (((_639.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>_473 = &amp;(*_688)<br/></td></tr><tr><td align="left">_472 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _473)</td></tr></table>>];
    bb207__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>StorageLive(_476)<br/>StorageLive(_477)<br/>_477 = &amp;_472<br/></td></tr><tr><td align="left">_476 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_borrow_data(move _477)</td></tr></table>>];
    bb208__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_477)<br/></td></tr><tr><td align="left">_475 = &lt;std::result::Result&lt;Ref&lt;'_, &amp;mut [u8]&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _476)</td></tr></table>>];
    bb209__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_476)<br/>_478 = discriminant(_475)<br/></td></tr><tr><td align="left">switchInt(move _478)</td></tr></table>>];
    bb210__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageLive(_482)<br/>_482 = move ((_475 as Continue).0: std::cell::Ref&lt;'_, &amp;mut [u8]&gt;)<br/>_474 = move _482<br/>StorageDead(_482)<br/>_660 = discriminant(_475)<br/>StorageDead(_475)<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>_489 = &amp;_474<br/>_488 = &amp;(*_489)<br/></td></tr><tr><td align="left">_487 = &lt;Ref&lt;'_, &amp;mut [u8]&gt; as Deref&gt;::deref(move _488)</td></tr></table>>];
    bb211__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageLive(_479)<br/>_479 = move ((_475 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_481)<br/>_481 = move _479<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _481)</td></tr></table>>];
    bb212__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>StorageDead(_479)<br/>_666 = discriminant(_475)<br/>StorageDead(_475)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb213__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">_640 = deref_copy (*_487)<br/>_486 = &amp;(*_640)<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">_485 = StateWithExtensions::&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;::unpack(move _486)</td></tr></table>>];
    bb214__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">StorageDead(_486)<br/></td></tr><tr><td align="left">_484 = &lt;std::result::Result&lt;StateWithExtensions&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _485)</td></tr></table>>];
    bb215__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>_490 = discriminant(_484)<br/></td></tr><tr><td align="left">switchInt(move _490)</td></tr></table>>];
    bb216__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">StorageLive(_494)<br/>_494 = move ((_484 as Continue).0: anchor_spl::token_2022::spl_token_2022::extension::StateWithExtensions&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt;)<br/>_483 = move _494<br/>StorageDead(_494)<br/>_662 = discriminant(_484)<br/>StorageDead(_489)<br/>StorageDead(_487)<br/>StorageDead(_484)<br/>StorageLive(_495)<br/>StorageLive(_496)<br/>StorageLive(_497)<br/>_497 = &amp;_483<br/></td></tr><tr><td align="left">_496 = &lt;StateWithExtensions&lt;'_, anchor_spl::token_2022::spl_token_2022::state::Mint&gt; as BaseStateWithExtensions&lt;anchor_spl::token_2022::spl_token_2022::state::Mint&gt;&gt;::get_extension::&lt;anchor_spl::token_2022::spl_token_2022::extension::transfer_hook::TransferHook&gt;(move _497)</td></tr></table>>];
    bb217__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left" balign="left">StorageLive(_491)<br/>_491 = move ((_484 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_493)<br/>_493 = move _491<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _493)</td></tr></table>>];
    bb218__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_493)<br/>StorageDead(_491)<br/>_664 = discriminant(_484)<br/>StorageDead(_489)<br/>StorageDead(_487)<br/>StorageDead(_484)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb219__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_497)<br/>_498 = discriminant(_496)<br/></td></tr><tr><td align="left">switchInt(move _498)</td></tr></table>>];
    bb220__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">StorageLive(_499)<br/>_499 = ((_496 as Ok).0: &amp;anchor_spl::token_2022::spl_token_2022::extension::transfer_hook::TransferHook)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>_501 = ((*_499).1: spl_pod::optional_keys::OptionalNonZeroPubkey)<br/></td></tr><tr><td align="left">_500 = &lt;spl_pod::optional_keys::OptionalNonZeroPubkey as Into&lt;Option&lt;anchor_lang::prelude::Pubkey&gt;&gt;&gt;::into(move _501)</td></tr></table>>];
    bb221__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/>StorageLive(_502)<br/>StorageLive(_503)<br/>_503 = &amp;_500<br/></td></tr><tr><td align="left">_502 = Option::&lt;anchor_lang::prelude::Pubkey&gt;::is_some(move _503)</td></tr></table>>];
    bb222__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left">switchInt(move _502)</td></tr></table>>];
    bb223__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>_506 = CheckedAdd(const _, const 0_isize)<br/></td></tr><tr><td align="left">assert(!move (_506.1: bool), &quot;attempt to compute `{} + {}`, which would overflow&quot;, const _, const 0_isize)</td></tr></table>>];
    bb224__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">_505 = move (_506.0: isize)<br/>_504 = move _505 as u8 (IntToInt)<br/>StorageDead(_505)<br/>_459 = BitOr(_459, move _504)<br/>StorageDead(_504)<br/>_495 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb225__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>_495 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb226__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_502)<br/>StorageDead(_500)<br/>StorageDead(_499)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb227__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">_495 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left">drop(_496)</td></tr></table>>];
    bb229__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_496)<br/>StorageDead(_495)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>_508 = _13<br/></td></tr><tr><td align="left">switchInt(move _508)</td></tr></table>>];
    bb230__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>_641 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_515 = &amp;((*_641).7: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_514 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _515)</td></tr></table>>];
    bb231__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">_513 = &amp;_514<br/>StorageDead(_515)<br/>StorageLive(_516)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>_642 = deref_copy (*_21)<br/>_689 = (((_642.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_518 = &amp;(*_689)<br/></td></tr><tr><td align="left">_517 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _518)</td></tr></table>>];
    bb232__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageDead(_518)<br/>_516 = &amp;((*_517).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">_512 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _513, move _516)</td></tr></table>>];
    bb233__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left">switchInt(move _512)</td></tr></table>>];
    bb234__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>StorageDead(_516)<br/>StorageDead(_514)<br/>StorageDead(_513)<br/>StorageLive(_519)<br/>_519 = ()<br/>_511 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _519)<br/>StorageDead(_519)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb235__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>StorageDead(_516)<br/>StorageDead(_514)<br/>StorageDead(_513)<br/>StorageLive(_520)<br/>_520 = error::ErrorCode::DefaultError<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>StorageLive(_525)<br/>StorageLive(_526)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>StorageLive(_531)<br/>_604 = const _<br/>_531 = &amp;(*_604)<br/>_530 = &amp;(*_531)<br/>_529 = move _530 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_530)<br/>StorageLive(_533)<br/>StorageLive(_534)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>_539 = &amp;_520<br/>_538 = &amp;(*_539)<br/></td></tr><tr><td align="left">_537 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _538)</td></tr></table>>];
    bb236__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>_536 = [move _537]<br/>StorageDead(_537)<br/>_535 = &amp;_536<br/>_534 = &amp;(*_535)<br/>_533 = move _534 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_534)<br/></td></tr><tr><td align="left">_528 = Arguments::&lt;'_&gt;::new_v1(move _529, move _533)</td></tr></table>>];
    bb237__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>StorageDead(_529)<br/></td></tr><tr><td align="left">_527 = format(move _528)</td></tr></table>>];
    bb238__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_528)<br/>StorageDead(_539)<br/>StorageDead(_536)<br/>StorageDead(_535)<br/>StorageDead(_531)<br/>_526 = move _527<br/>StorageDead(_527)<br/>_525 = &amp;_526<br/>_524 = &amp;(*_525)<br/></td></tr><tr><td align="left">_523 = &lt;String as Deref&gt;::deref(move _524)</td></tr></table>>];
    bb239__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">_522 = &amp;(*_523)<br/>StorageDead(_524)<br/></td></tr><tr><td align="left">_521 = solana_program::log::sol_log(move _522)</td></tr></table>>];
    bb240__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_522)<br/></td></tr><tr><td align="left">drop(_526)</td></tr></table>>];
    bb241__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_526)<br/>StorageDead(_525)<br/>StorageDead(_523)<br/>StorageDead(_521)<br/>StorageLive(_540)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>_542 = const &quot;admin must be state admin&quot;<br/>_541 = &amp;(*_542)<br/></td></tr><tr><td align="left">_540 = solana_program::log::sol_log(move _541)</td></tr></table>>];
    bb242__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_541)<br/>StorageDead(_542)<br/>StorageDead(_540)<br/>StorageLive(_543)<br/>_543 = _520<br/>_511 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _543)<br/>StorageDead(_543)<br/>StorageDead(_520)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb243__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_512)<br/></td></tr><tr><td align="left">_510 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _511)</td></tr></table>>];
    bb244__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_511)<br/>_544 = discriminant(_510)<br/></td></tr><tr><td align="left">switchInt(move _544)</td></tr></table>>];
    bb245__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageLive(_548)<br/>_548 = ((_510 as Continue).0: ())<br/>_509 = _548<br/>StorageDead(_548)<br/>StorageDead(_510)<br/>StorageDead(_509)<br/>_507 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageLive(_545)<br/>_545 = ((_510 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_547)<br/>_547 = _545<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _547)</td></tr></table>>];
    bb247__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_547)<br/>StorageDead(_545)<br/>StorageDead(_510)<br/>StorageDead(_509)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">_507 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_508)<br/>StorageDead(_507)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>_550 = _61<br/>StorageLive(_551)<br/>_551 = _22<br/>StorageLive(_552)<br/>StorageLive(_553)<br/>_553 = _13<br/></td></tr><tr><td align="left">switchInt(move _553)</td></tr></table>>];
    bb250__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">_552 = state::perp_market::MarketStatus::Active<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">_552 = state::perp_market::MarketStatus::Initialized<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_553)<br/>StorageLive(_554)<br/>_554 = _20<br/>StorageLive(_555)<br/>_555 = _14<br/>StorageLive(_556)<br/>StorageLive(_557)<br/>_643 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_557 = &amp;((*_643).6: anchor_lang::prelude::AccountInfo&lt;'_&gt;)<br/></td></tr><tr><td align="left">_556 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _557)</td></tr></table>>];
    bb253__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_557)<br/>StorageLive(_558)<br/>_558 = _5<br/>StorageLive(_559)<br/>_559 = _166<br/>StorageLive(_560)<br/>_560 = _167<br/>StorageLive(_561)<br/>StorageLive(_562)<br/>_644 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_645 = deref_copy ((*_644).1: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;)<br/>_690 = (((_645.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt;)<br/>_562 = &amp;(*_690)<br/></td></tr><tr><td align="left">_561 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::Mint&gt; as anchor_lang::Key&gt;::key(move _562)</td></tr></table>>];
    bb254__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_562)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>_646 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_647 = deref_copy ((*_646).2: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_691 = (((_647.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_565 = &amp;(*_691)<br/></td></tr><tr><td align="left">_564 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _565)</td></tr></table>>];
    bb255__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>_648 = deref_copy (_564.0: &amp;anchor_lang::prelude::Pubkey)<br/>_563 = (*_648)<br/>StorageLive(_566)<br/>StorageLive(_567)<br/>_567 = _61<br/>StorageLive(_568)<br/></td></tr><tr><td align="left">_568 = &lt;PoolBalance as Default&gt;::default()</td></tr></table>>];
    bb256__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">_566 = PoolBalance { scaled_balance: const 0_u128, market_index: move _567, padding: (_568.2: [u8; 6]) }<br/>StorageDead(_567)<br/>StorageLive(_569)<br/>_569 = _446<br/>StorageLive(_570)<br/>_570 = _2<br/>StorageLive(_571)<br/>_571 = _3<br/>StorageLive(_572)<br/>_572 = _4<br/>StorageLive(_573)<br/>_573 = _434<br/>StorageLive(_574)<br/>_574 = _434<br/>StorageLive(_575)<br/>_575 = _6<br/>StorageLive(_576)<br/>_576 = _7<br/>StorageLive(_577)<br/>_577 = _8<br/>StorageLive(_578)<br/>_578 = _9<br/>StorageLive(_579)<br/>_579 = _10<br/>StorageLive(_580)<br/>_580 = _11<br/>StorageLive(_581)<br/>_581 = _12<br/>StorageLive(_582)<br/>_582 = _16<br/>StorageLive(_583)<br/>_583 = _18<br/>StorageLive(_584)<br/>_584 = _17<br/>StorageLive(_585)<br/>_585 = _18<br/>StorageLive(_586)<br/></td></tr><tr><td align="left">_586 = &lt;PoolBalance as Default&gt;::default()</td></tr></table>>];
    bb257__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageLive(_587)<br/>StorageLive(_588)<br/>_588 = _61<br/>_587 = Ne(move _588, const 0_u16)<br/>StorageDead(_588)<br/>StorageLive(_589)<br/>_589 = _15<br/>StorageLive(_590)<br/>_590 = _459<br/>StorageLive(_591)<br/>_591 = [const 0_u8; 40]<br/>StorageLive(_592)<br/>StorageLive(_593)<br/>StorageLive(_594)<br/>StorageLive(_595)<br/>_649 = deref_copy (_1.1: &amp;mut instructions::admin::InitializeSpotMarket&lt;'_&gt;)<br/>_650 = deref_copy ((*_649).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_692 = (((_650.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_595 = &amp;(*_692)<br/></td></tr><tr><td align="left">_594 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _595)</td></tr></table>>];
    bb258__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_595)<br/>_651 = deref_copy (_594.0: &amp;anchor_lang::prelude::Pubkey)<br/>_593 = (*_651)<br/>StorageLive(_596)<br/>_596 = _19<br/>StorageLive(_597)<br/>StorageLive(_598)<br/>_598 = _19<br/>_599 = Eq(const 2_u32, const 0_u32)<br/></td></tr><tr><td align="left">assert(!move _599, &quot;attempt to divide `{}` by zero&quot;, _598)</td></tr></table>>];
    bb259__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">_597 = Div(move _598, const 2_u32)<br/>StorageDead(_598)<br/>StorageLive(_600)<br/></td></tr><tr><td align="left">_600 = &lt;InsuranceFund as Default&gt;::default()</td></tr></table>>];
    bb260__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">_592 = InsuranceFund { vault: move _593, total_shares: (_600.1: u128), user_shares: (_600.2: u128), shares_base: (_600.3: u128), unstaking_period: const _, last_revenue_settle_ts: (_600.5: i64), revenue_settle_period: const 3600_i64, total_factor: move _596, user_factor: move _597 }<br/>StorageDead(_597)<br/>StorageDead(_596)<br/>StorageDead(_593)<br/>_549 = SpotMarket { pubkey: move _551, oracle: move _556, mint: move _561, vault: move _563, name: move _554, historical_oracle_data: move _559, historical_index_data: move _560, revenue_pool: move _566, spot_fee_pool: move _586, insurance_fund: move _592, total_spot_fee: const 0_u128, deposit_balance: const 0_u128, borrow_balance: const 0_u128, cumulative_deposit_interest: const _, cumulative_borrow_interest: const _, total_social_loss: const 0_u128, total_quote_social_loss: const 0_u128, withdraw_guard_threshold: move _582, max_token_deposits: const 0_u64, deposit_token_twap: const 0_u64, borrow_token_twap: const 0_u64, utilization_twap: const 0_u64, last_interest_ts: move _573, last_twap_ts: move _574, expiry_ts: const 0_i64, order_step_size: move _583, order_tick_size: move _584, min_order_size: move _585, max_position_size: const 0_u64, next_fill_record_id: const 1_u64, next_deposit_record_id: const 1_u64, initial_asset_weight: move _575, maintenance_asset_weight: move _576, initial_liability_weight: move _577, maintenance_liability_weight: move _578, imf_factor: move _579, liquidator_fee: move _580, if_liquidation_fee: move _581, optimal_utilization: move _570, optimal_borrow_rate: move _571, max_borrow_rate: move _572, decimals: move _569, market_index: move _550, orders_enabled: move _587, oracle_source: move _558, status: move _552, asset_tier: move _555, paused_operations: const 0_u8, if_paused_operations: const 0_u8, fee_adjustment: const 0_i16, max_token_borrows_fraction: const 0_u16, flash_loan_amount: const 0_u64, flash_loan_initial_token_amount: const 0_u64, total_swap_fee: const 0_u64, scale_initial_asset_weight_start: move _589, min_borrow_rate: const 0_u8, fuel_boost_deposits: const 0_u8, fuel_boost_borrows: const 0_u8, fuel_boost_taker: const 1_u8, fuel_boost_maker: const 1_u8, fuel_boost_insurance: const 0_u8, token_program_flag: move _590, pool_id: const 0_u8, padding: move _591 }<br/>StorageDead(_592)<br/>StorageDead(_591)<br/>StorageDead(_590)<br/>StorageDead(_589)<br/>StorageDead(_587)<br/>StorageDead(_586)<br/>StorageDead(_585)<br/>StorageDead(_584)<br/>StorageDead(_583)<br/>StorageDead(_582)<br/>StorageDead(_581)<br/>StorageDead(_580)<br/>StorageDead(_579)<br/>StorageDead(_578)<br/>StorageDead(_577)<br/>StorageDead(_576)<br/>StorageDead(_575)<br/>StorageDead(_574)<br/>StorageDead(_573)<br/>StorageDead(_572)<br/>StorageDead(_571)<br/>StorageDead(_570)<br/>StorageDead(_569)<br/>StorageDead(_566)<br/>StorageDead(_563)<br/>StorageDead(_561)<br/>StorageDead(_560)<br/>StorageDead(_559)<br/>StorageDead(_558)<br/>StorageDead(_556)<br/>StorageDead(_555)<br/>StorageDead(_554)<br/>StorageDead(_552)<br/>StorageDead(_551)<br/>StorageDead(_550)<br/>StorageLive(_601)<br/>StorageLive(_602)<br/>_602 = &amp;mut (*_416)<br/></td></tr><tr><td align="left">_601 = &lt;RefMut&lt;'_, SpotMarket&gt; as DerefMut&gt;::deref_mut(move _602)</td></tr></table>>];
    bb261__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_602)<br/>(*_601) = move _549<br/>StorageDead(_549)<br/>StorageDead(_601)<br/>StorageDead(_600)<br/></td></tr><tr><td align="left">drop(_594)</td></tr></table>>];
    bb262__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_594)<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">drop(_564)</td></tr></table>>];
    bb263__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_564)<br/>StorageLive(_603)<br/>_603 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _603)<br/>StorageDead(_603)<br/>StorageDead(_483)<br/></td></tr><tr><td align="left">drop(_474)</td></tr></table>>];
    bb264__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/></td></tr><tr><td align="left">drop(_472)</td></tr></table>>];
    bb265__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_472)<br/>StorageDead(_459)<br/>StorageDead(_446)<br/>StorageDead(_434)<br/>StorageDead(_426)<br/></td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb266__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageDead(_144)<br/>StorageDead(_61)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_483)<br/></td></tr><tr><td align="left">drop(_474)</td></tr></table>>];
    bb268__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/></td></tr><tr><td align="left">drop(_472)</td></tr></table>>];
    bb269__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left" balign="left">StorageDead(_472)<br/>StorageDead(_459)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb270__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">270</td></tr><tr><td align="left" balign="left">StorageDead(_446)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb271__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">271</td></tr><tr><td align="left" balign="left">StorageDead(_434)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb272__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">272</td></tr><tr><td align="left" balign="left">StorageDead(_426)<br/></td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb273__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">273</td></tr><tr><td align="left" balign="left">StorageDead(_417)<br/>StorageDead(_416)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb274__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">274</td></tr><tr><td align="left" balign="left">StorageDead(_167)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb275__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">275</td></tr><tr><td align="left" balign="left">StorageDead(_386)<br/>StorageDead(_377)<br/>StorageDead(_390)<br/>StorageDead(_387)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb276__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">276</td></tr><tr><td align="left" balign="left">StorageDead(_379)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb277__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">277</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_168)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb278__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">278</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>_672 = discriminant(_154)<br/>_652 = const false<br/>_653 = const false<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageDead(_148)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb279__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb280__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">280</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">281</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb282__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">282</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb283__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">283</td></tr><tr><td align="left">return</td></tr></table>>];
    bb284__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">284 (cleanup)</td></tr><tr><td align="left">drop(_594)</td></tr></table>>];
    bb285__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">285 (cleanup)</td></tr><tr><td align="left">drop(_564)</td></tr></table>>];
    bb286__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">286 (cleanup)</td></tr><tr><td align="left">drop(_526)</td></tr></table>>];
    bb287__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">287 (cleanup)</td></tr><tr><td align="left">drop(_496)</td></tr></table>>];
    bb288__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">288 (cleanup)</td></tr><tr><td align="left">drop(_474)</td></tr></table>>];
    bb289__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">289 (cleanup)</td></tr><tr><td align="left">drop(_472)</td></tr></table>>];
    bb290__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">290 (cleanup)</td></tr><tr><td align="left">drop(_417)</td></tr></table>>];
    bb291__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">291 (cleanup)</td></tr><tr><td align="left">drop(_357)</td></tr></table>>];
    bb292__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">292 (cleanup)</td></tr><tr><td align="left">drop(_338)</td></tr></table>>];
    bb293__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left">drop(_303)</td></tr></table>>];
    bb294__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left">drop(_262)</td></tr></table>>];
    bb295__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left">drop(_223)</td></tr></table>>];
    bb296__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left">drop(_186)</td></tr></table>>];
    bb297__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left">drop(_111)</td></tr></table>>];
    bb298__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left">drop(_77)</td></tr></table>>];
    bb299__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb300__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">300 (cleanup)</td></tr><tr><td align="left" balign="left">_674 = discriminant(_484)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb301__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">301 (cleanup)</td></tr><tr><td align="left" balign="left">_675 = discriminant(_475)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb302__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">302 (cleanup)</td></tr><tr><td align="left" balign="left">_676 = discriminant(_427)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb303__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">303 (cleanup)</td></tr><tr><td align="left" balign="left">_677 = discriminant(_418)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb304__0_1071 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">304 (cleanup)</td></tr><tr><td align="left" balign="left">_678 = discriminant(_154)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_1071 -> bb1__0_1071 [label="return"];
    bb1__0_1071 -> bb2__0_1071 [label="return"];
    bb2__0_1071 -> bb3__0_1071 [label="return"];
    bb3__0_1071 -> bb4__0_1071 [label="return"];
    bb4__0_1071 -> bb5__0_1071 [label="return"];
    bb5__0_1071 -> bb8__0_1071 [label="0"];
    bb5__0_1071 -> bb6__0_1071 [label="otherwise"];
    bb6__0_1071 -> bb7__0_1071 [label="return"];
    bb7__0_1071 -> bb282__0_1071 [label=""];
    bb8__0_1071 -> bb9__0_1071 [label="return"];
    bb9__0_1071 -> bb10__0_1071 [label="return"];
    bb10__0_1071 -> bb11__0_1071 [label="return"];
    bb11__0_1071 -> bb12__0_1071 [label="return"];
    bb12__0_1071 -> bb15__0_1071 [label="0"];
    bb12__0_1071 -> bb13__0_1071 [label="otherwise"];
    bb13__0_1071 -> bb14__0_1071 [label="return"];
    bb14__0_1071 -> bb282__0_1071 [label=""];
    bb15__0_1071 -> bb16__0_1071 [label="return"];
    bb16__0_1071 -> bb17__0_1071 [label="return"];
    bb17__0_1071 -> bb18__0_1071 [label="0"];
    bb17__0_1071 -> bb20__0_1071 [label="1"];
    bb17__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb18__0_1071 -> bb22__0_1071 [label="return"];
    bb20__0_1071 -> bb21__0_1071 [label="return"];
    bb21__0_1071 -> bb282__0_1071 [label=""];
    bb22__0_1071 -> bb23__0_1071 [label="return"];
    bb23__0_1071 -> bb24__0_1071 [label="return"];
    bb24__0_1071 -> bb25__0_1071 [label="return"];
    bb25__0_1071 -> bb26__0_1071 [label="return"];
    bb26__0_1071 -> bb27__0_1071 [label="return"];
    bb27__0_1071 -> bb28__0_1071 [label="return"];
    bb28__0_1071 -> bb29__0_1071 [label="return"];
    bb29__0_1071 -> bb30__0_1071 [label="return"];
    bb29__0_1071 -> bb298__0_1071 [label="unwind"];
    bb30__0_1071 -> bb31__0_1071 [label="return"];
    bb30__0_1071 -> bb298__0_1071 [label="unwind"];
    bb31__0_1071 -> bb32__0_1071 [label="return"];
    bb31__0_1071 -> bb299__0_1071 [label="unwind"];
    bb32__0_1071 -> bb33__0_1071 [label="return"];
    bb33__0_1071 -> bb51__0_1071 [label="0"];
    bb33__0_1071 -> bb34__0_1071 [label="otherwise"];
    bb34__0_1071 -> bb35__0_1071 [label="return"];
    bb35__0_1071 -> bb36__0_1071 [label="return"];
    bb36__0_1071 -> bb38__0_1071 [label="0"];
    bb36__0_1071 -> bb37__0_1071 [label="otherwise"];
    bb37__0_1071 -> bb46__0_1071 [label=""];
    bb38__0_1071 -> bb39__0_1071 [label="return"];
    bb39__0_1071 -> bb40__0_1071 [label="return"];
    bb40__0_1071 -> bb41__0_1071 [label="return"];
    bb41__0_1071 -> bb42__0_1071 [label="return"];
    bb41__0_1071 -> bb297__0_1071 [label="unwind"];
    bb42__0_1071 -> bb43__0_1071 [label="return"];
    bb42__0_1071 -> bb297__0_1071 [label="unwind"];
    bb43__0_1071 -> bb44__0_1071 [label="return"];
    bb43__0_1071 -> bb299__0_1071 [label="unwind"];
    bb44__0_1071 -> bb45__0_1071 [label="return"];
    bb45__0_1071 -> bb46__0_1071 [label=""];
    bb46__0_1071 -> bb47__0_1071 [label="return"];
    bb47__0_1071 -> bb48__0_1071 [label="0"];
    bb47__0_1071 -> bb49__0_1071 [label="1"];
    bb47__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb48__0_1071 -> bb57__0_1071 [label=""];
    bb49__0_1071 -> bb50__0_1071 [label="return"];
    bb50__0_1071 -> bb280__0_1071 [label=""];
    bb51__0_1071 -> bb52__0_1071 [label="return"];
    bb52__0_1071 -> bb53__0_1071 [label="return"];
    bb53__0_1071 -> bb54__0_1071 [label="0"];
    bb53__0_1071 -> bb55__0_1071 [label="1"];
    bb53__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb54__0_1071 -> bb57__0_1071 [label=""];
    bb55__0_1071 -> bb56__0_1071 [label="return"];
    bb56__0_1071 -> bb280__0_1071 [label=""];
    bb57__0_1071 -> bb58__0_1071 [label="return"];
    bb58__0_1071 -> bb59__0_1071 [label="return"];
    bb58__0_1071 -> bb299__0_1071 [label="unwind"];
    bb59__0_1071 -> bb60__0_1071 [label="0"];
    bb59__0_1071 -> bb61__0_1071 [label="1"];
    bb59__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb60__0_1071 -> bb63__0_1071 [label="return"];
    bb60__0_1071 -> bb304__0_1071 [label="unwind"];
    bb61__0_1071 -> bb62__0_1071 [label="return"];
    bb61__0_1071 -> bb304__0_1071 [label="unwind"];
    bb62__0_1071 -> bb278__0_1071 [label=""];
    bb63__0_1071 -> bb64__0_1071 [label="return"];
    bb63__0_1071 -> bb304__0_1071 [label="unwind"];
    bb64__0_1071 -> bb65__0_1071 [label="0"];
    bb64__0_1071 -> bb66__0_1071 [label="1"];
    bb64__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb65__0_1071 -> bb68__0_1071 [label="return"];
    bb65__0_1071 -> bb304__0_1071 [label="unwind"];
    bb66__0_1071 -> bb67__0_1071 [label="return"];
    bb66__0_1071 -> bb304__0_1071 [label="unwind"];
    bb67__0_1071 -> bb278__0_1071 [label=""];
    bb68__0_1071 -> bb119__0_1071 [label="0"];
    bb68__0_1071 -> bb69__0_1071 [label="otherwise"];
    bb69__0_1071 -> bb70__0_1071 [label="return"];
    bb70__0_1071 -> bb71__0_1071 [label="return"];
    bb71__0_1071 -> bb73__0_1071 [label="0"];
    bb71__0_1071 -> bb72__0_1071 [label="otherwise"];
    bb72__0_1071 -> bb81__0_1071 [label=""];
    bb73__0_1071 -> bb74__0_1071 [label="return"];
    bb74__0_1071 -> bb75__0_1071 [label="return"];
    bb75__0_1071 -> bb76__0_1071 [label="return"];
    bb76__0_1071 -> bb77__0_1071 [label="return"];
    bb76__0_1071 -> bb296__0_1071 [label="unwind"];
    bb77__0_1071 -> bb78__0_1071 [label="return"];
    bb77__0_1071 -> bb296__0_1071 [label="unwind"];
    bb78__0_1071 -> bb79__0_1071 [label="return"];
    bb78__0_1071 -> bb299__0_1071 [label="unwind"];
    bb79__0_1071 -> bb80__0_1071 [label="return"];
    bb80__0_1071 -> bb81__0_1071 [label=""];
    bb81__0_1071 -> bb82__0_1071 [label="return"];
    bb82__0_1071 -> bb83__0_1071 [label="0"];
    bb82__0_1071 -> bb84__0_1071 [label="1"];
    bb82__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb83__0_1071 -> bb86__0_1071 [label="return"];
    bb84__0_1071 -> bb85__0_1071 [label="return"];
    bb85__0_1071 -> bb277__0_1071 [label=""];
    bb86__0_1071 -> bb88__0_1071 [label="0"];
    bb86__0_1071 -> bb87__0_1071 [label="otherwise"];
    bb87__0_1071 -> bb96__0_1071 [label=""];
    bb88__0_1071 -> bb89__0_1071 [label="return"];
    bb89__0_1071 -> bb90__0_1071 [label="return"];
    bb90__0_1071 -> bb91__0_1071 [label="return"];
    bb91__0_1071 -> bb92__0_1071 [label="return"];
    bb91__0_1071 -> bb295__0_1071 [label="unwind"];
    bb92__0_1071 -> bb93__0_1071 [label="return"];
    bb92__0_1071 -> bb295__0_1071 [label="unwind"];
    bb93__0_1071 -> bb94__0_1071 [label="return"];
    bb93__0_1071 -> bb299__0_1071 [label="unwind"];
    bb94__0_1071 -> bb95__0_1071 [label="return"];
    bb95__0_1071 -> bb96__0_1071 [label=""];
    bb96__0_1071 -> bb97__0_1071 [label="return"];
    bb97__0_1071 -> bb98__0_1071 [label="0"];
    bb97__0_1071 -> bb99__0_1071 [label="1"];
    bb97__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb98__0_1071 -> bb101__0_1071 [label="return"];
    bb99__0_1071 -> bb100__0_1071 [label="return"];
    bb100__0_1071 -> bb277__0_1071 [label=""];
    bb101__0_1071 -> bb102__0_1071 [label="return"];
    bb102__0_1071 -> bb104__0_1071 [label="0"];
    bb102__0_1071 -> bb103__0_1071 [label="otherwise"];
    bb103__0_1071 -> bb112__0_1071 [label=""];
    bb104__0_1071 -> bb105__0_1071 [label="return"];
    bb105__0_1071 -> bb106__0_1071 [label="return"];
    bb106__0_1071 -> bb107__0_1071 [label="return"];
    bb107__0_1071 -> bb108__0_1071 [label="return"];
    bb107__0_1071 -> bb294__0_1071 [label="unwind"];
    bb108__0_1071 -> bb109__0_1071 [label="return"];
    bb108__0_1071 -> bb294__0_1071 [label="unwind"];
    bb109__0_1071 -> bb110__0_1071 [label="return"];
    bb109__0_1071 -> bb299__0_1071 [label="unwind"];
    bb110__0_1071 -> bb111__0_1071 [label="return"];
    bb111__0_1071 -> bb112__0_1071 [label=""];
    bb112__0_1071 -> bb113__0_1071 [label="return"];
    bb113__0_1071 -> bb114__0_1071 [label="0"];
    bb113__0_1071 -> bb115__0_1071 [label="1"];
    bb113__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb114__0_1071 -> bb117__0_1071 [label="return"];
    bb115__0_1071 -> bb116__0_1071 [label="return"];
    bb116__0_1071 -> bb277__0_1071 [label=""];
    bb117__0_1071 -> bb118__0_1071 [label="return"];
    bb118__0_1071 -> bb170__0_1071 [label=""];
    bb119__0_1071 -> bb120__0_1071 [label="return"];
    bb120__0_1071 -> bb121__0_1071 [label="return"];
    bb121__0_1071 -> bb123__0_1071 [label="0"];
    bb121__0_1071 -> bb122__0_1071 [label="otherwise"];
    bb122__0_1071 -> bb131__0_1071 [label=""];
    bb123__0_1071 -> bb124__0_1071 [label="return"];
    bb124__0_1071 -> bb125__0_1071 [label="return"];
    bb125__0_1071 -> bb126__0_1071 [label="return"];
    bb126__0_1071 -> bb127__0_1071 [label="return"];
    bb126__0_1071 -> bb293__0_1071 [label="unwind"];
    bb127__0_1071 -> bb128__0_1071 [label="return"];
    bb127__0_1071 -> bb293__0_1071 [label="unwind"];
    bb128__0_1071 -> bb129__0_1071 [label="return"];
    bb128__0_1071 -> bb299__0_1071 [label="unwind"];
    bb129__0_1071 -> bb130__0_1071 [label="return"];
    bb130__0_1071 -> bb131__0_1071 [label=""];
    bb131__0_1071 -> bb132__0_1071 [label="return"];
    bb132__0_1071 -> bb133__0_1071 [label="0"];
    bb132__0_1071 -> bb134__0_1071 [label="1"];
    bb132__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb133__0_1071 -> bb136__0_1071 [label="return"];
    bb134__0_1071 -> bb135__0_1071 [label="return"];
    bb135__0_1071 -> bb277__0_1071 [label=""];
    bb136__0_1071 -> bb138__0_1071 [label="0"];
    bb136__0_1071 -> bb137__0_1071 [label="otherwise"];
    bb137__0_1071 -> bb151__0_1071 [label=""];
    bb138__0_1071 -> bb139__0_1071 [label="return"];
    bb139__0_1071 -> bb140__0_1071 [label="return"];
    bb140__0_1071 -> bb141__0_1071 [label="return"];
    bb141__0_1071 -> bb142__0_1071 [label="return"];
    bb141__0_1071 -> bb292__0_1071 [label="unwind"];
    bb142__0_1071 -> bb143__0_1071 [label="return"];
    bb142__0_1071 -> bb292__0_1071 [label="unwind"];
    bb143__0_1071 -> bb144__0_1071 [label="return"];
    bb143__0_1071 -> bb299__0_1071 [label="unwind"];
    bb144__0_1071 -> bb145__0_1071 [label="return"];
    bb145__0_1071 -> bb146__0_1071 [label="return"];
    bb146__0_1071 -> bb147__0_1071 [label="return"];
    bb147__0_1071 -> bb148__0_1071 [label="return"];
    bb147__0_1071 -> bb291__0_1071 [label="unwind"];
    bb148__0_1071 -> bb149__0_1071 [label="return"];
    bb148__0_1071 -> bb291__0_1071 [label="unwind"];
    bb149__0_1071 -> bb150__0_1071 [label="return"];
    bb149__0_1071 -> bb299__0_1071 [label="unwind"];
    bb150__0_1071 -> bb151__0_1071 [label=""];
    bb151__0_1071 -> bb152__0_1071 [label="return"];
    bb152__0_1071 -> bb153__0_1071 [label="0"];
    bb152__0_1071 -> bb154__0_1071 [label="1"];
    bb152__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb153__0_1071 -> bb156__0_1071 [label="return"];
    bb154__0_1071 -> bb155__0_1071 [label="return"];
    bb155__0_1071 -> bb277__0_1071 [label=""];
    bb156__0_1071 -> bb157__0_1071 [label="0"];
    bb156__0_1071 -> bb158__0_1071 [label="1"];
    bb156__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb157__0_1071 -> bb160__0_1071 [label="return"];
    bb158__0_1071 -> bb159__0_1071 [label="return"];
    bb159__0_1071 -> bb276__0_1071 [label=""];
    bb160__0_1071 -> bb161__0_1071 [label="return"];
    bb161__0_1071 -> bb162__0_1071 [label="0"];
    bb161__0_1071 -> bb163__0_1071 [label="1"];
    bb161__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb162__0_1071 -> bb165__0_1071 [label="return"];
    bb163__0_1071 -> bb164__0_1071 [label="return"];
    bb164__0_1071 -> bb275__0_1071 [label=""];
    bb165__0_1071 -> bb166__0_1071 [label="return"];
    bb166__0_1071 -> bb167__0_1071 [label="0"];
    bb166__0_1071 -> bb168__0_1071 [label="1"];
    bb166__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb167__0_1071 -> bb170__0_1071 [label=""];
    bb168__0_1071 -> bb169__0_1071 [label="return"];
    bb169__0_1071 -> bb275__0_1071 [label=""];
    bb170__0_1071 -> bb171__0_1071 [label="return"];
    bb171__0_1071 -> bb172__0_1071 [label="return"];
    bb172__0_1071 -> bb173__0_1071 [label="0"];
    bb172__0_1071 -> bb174__0_1071 [label="1"];
    bb172__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb173__0_1071 -> bb176__0_1071 [label="return"];
    bb174__0_1071 -> bb175__0_1071 [label="return"];
    bb175__0_1071 -> bb274__0_1071 [label=""];
    bb176__0_1071 -> bb177__0_1071 [label="return"];
    bb176__0_1071 -> bb299__0_1071 [label="unwind"];
    bb177__0_1071 -> bb178__0_1071 [label="0"];
    bb177__0_1071 -> bb179__0_1071 [label="1"];
    bb177__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb178__0_1071 -> bb181__0_1071 [label="return"];
    bb178__0_1071 -> bb290__0_1071 [label="unwind"];
    bb179__0_1071 -> bb180__0_1071 [label="return"];
    bb179__0_1071 -> bb303__0_1071 [label="unwind"];
    bb180__0_1071 -> bb273__0_1071 [label=""];
    bb181__0_1071 -> bb182__0_1071 [label="return"];
    bb181__0_1071 -> bb290__0_1071 [label="unwind"];
    bb182__0_1071 -> bb183__0_1071 [label="0"];
    bb182__0_1071 -> bb184__0_1071 [label="1"];
    bb182__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb183__0_1071 -> bb186__0_1071 [label="return"];
    bb183__0_1071 -> bb290__0_1071 [label="unwind"];
    bb184__0_1071 -> bb185__0_1071 [label="return"];
    bb184__0_1071 -> bb302__0_1071 [label="unwind"];
    bb185__0_1071 -> bb272__0_1071 [label=""];
    bb186__0_1071 -> bb187__0_1071 [label="return"];
    bb186__0_1071 -> bb290__0_1071 [label="unwind"];
    bb187__0_1071 -> bb188__0_1071 [label="return"];
    bb187__0_1071 -> bb290__0_1071 [label="unwind"];
    bb188__0_1071 -> bb189__0_1071 [label="0"];
    bb188__0_1071 -> bb190__0_1071 [label="1"];
    bb188__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb189__0_1071 -> bb192__0_1071 [label="return"];
    bb189__0_1071 -> bb290__0_1071 [label="unwind"];
    bb190__0_1071 -> bb191__0_1071 [label="return"];
    bb190__0_1071 -> bb290__0_1071 [label="unwind"];
    bb191__0_1071 -> bb271__0_1071 [label=""];
    bb192__0_1071 -> bb193__0_1071 [label="return"];
    bb192__0_1071 -> bb290__0_1071 [label="unwind"];
    bb193__0_1071 -> bb194__0_1071 [label="return"];
    bb193__0_1071 -> bb290__0_1071 [label="unwind"];
    bb194__0_1071 -> bb195__0_1071 [label="return"];
    bb194__0_1071 -> bb290__0_1071 [label="unwind"];
    bb195__0_1071 -> bb196__0_1071 [label="0"];
    bb195__0_1071 -> bb197__0_1071 [label="1"];
    bb195__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb196__0_1071 -> bb199__0_1071 [label="return"];
    bb196__0_1071 -> bb290__0_1071 [label="unwind"];
    bb197__0_1071 -> bb198__0_1071 [label="return"];
    bb197__0_1071 -> bb290__0_1071 [label="unwind"];
    bb198__0_1071 -> bb270__0_1071 [label=""];
    bb199__0_1071 -> bb200__0_1071 [label="return"];
    bb199__0_1071 -> bb290__0_1071 [label="unwind"];
    bb200__0_1071 -> bb201__0_1071 [label="return"];
    bb200__0_1071 -> bb290__0_1071 [label="unwind"];
    bb201__0_1071 -> bb202__0_1071 [label="return"];
    bb201__0_1071 -> bb290__0_1071 [label="unwind"];
    bb202__0_1071 -> bb205__0_1071 [label="0"];
    bb202__0_1071 -> bb203__0_1071 [label="otherwise"];
    bb203__0_1071 -> bb204__0_1071 [label="success"];
    bb203__0_1071 -> bb290__0_1071 [label="unwind"];
    bb204__0_1071 -> bb206__0_1071 [label=""];
    bb205__0_1071 -> bb206__0_1071 [label=""];
    bb206__0_1071 -> bb207__0_1071 [label="return"];
    bb206__0_1071 -> bb290__0_1071 [label="unwind"];
    bb207__0_1071 -> bb208__0_1071 [label="return"];
    bb207__0_1071 -> bb289__0_1071 [label="unwind"];
    bb208__0_1071 -> bb209__0_1071 [label="return"];
    bb208__0_1071 -> bb289__0_1071 [label="unwind"];
    bb209__0_1071 -> bb210__0_1071 [label="0"];
    bb209__0_1071 -> bb211__0_1071 [label="1"];
    bb209__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb210__0_1071 -> bb213__0_1071 [label="return"];
    bb210__0_1071 -> bb288__0_1071 [label="unwind"];
    bb211__0_1071 -> bb212__0_1071 [label="return"];
    bb211__0_1071 -> bb301__0_1071 [label="unwind"];
    bb212__0_1071 -> bb268__0_1071 [label=""];
    bb213__0_1071 -> bb214__0_1071 [label="return"];
    bb213__0_1071 -> bb288__0_1071 [label="unwind"];
    bb214__0_1071 -> bb215__0_1071 [label="return"];
    bb214__0_1071 -> bb288__0_1071 [label="unwind"];
    bb215__0_1071 -> bb216__0_1071 [label="0"];
    bb215__0_1071 -> bb217__0_1071 [label="1"];
    bb215__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb216__0_1071 -> bb219__0_1071 [label="return"];
    bb216__0_1071 -> bb288__0_1071 [label="unwind"];
    bb217__0_1071 -> bb218__0_1071 [label="return"];
    bb217__0_1071 -> bb300__0_1071 [label="unwind"];
    bb218__0_1071 -> bb267__0_1071 [label=""];
    bb219__0_1071 -> bb220__0_1071 [label="0"];
    bb219__0_1071 -> bb227__0_1071 [label="otherwise"];
    bb220__0_1071 -> bb221__0_1071 [label="return"];
    bb220__0_1071 -> bb287__0_1071 [label="unwind"];
    bb221__0_1071 -> bb222__0_1071 [label="return"];
    bb221__0_1071 -> bb287__0_1071 [label="unwind"];
    bb222__0_1071 -> bb225__0_1071 [label="0"];
    bb222__0_1071 -> bb223__0_1071 [label="otherwise"];
    bb223__0_1071 -> bb224__0_1071 [label="success"];
    bb223__0_1071 -> bb287__0_1071 [label="unwind"];
    bb224__0_1071 -> bb226__0_1071 [label=""];
    bb225__0_1071 -> bb226__0_1071 [label=""];
    bb226__0_1071 -> bb228__0_1071 [label=""];
    bb227__0_1071 -> bb228__0_1071 [label=""];
    bb228__0_1071 -> bb229__0_1071 [label="return"];
    bb228__0_1071 -> bb288__0_1071 [label="unwind"];
    bb229__0_1071 -> bb248__0_1071 [label="0"];
    bb229__0_1071 -> bb230__0_1071 [label="otherwise"];
    bb230__0_1071 -> bb231__0_1071 [label="return"];
    bb230__0_1071 -> bb288__0_1071 [label="unwind"];
    bb231__0_1071 -> bb232__0_1071 [label="return"];
    bb231__0_1071 -> bb288__0_1071 [label="unwind"];
    bb232__0_1071 -> bb233__0_1071 [label="return"];
    bb232__0_1071 -> bb288__0_1071 [label="unwind"];
    bb233__0_1071 -> bb235__0_1071 [label="0"];
    bb233__0_1071 -> bb234__0_1071 [label="otherwise"];
    bb234__0_1071 -> bb243__0_1071 [label=""];
    bb235__0_1071 -> bb236__0_1071 [label="return"];
    bb235__0_1071 -> bb288__0_1071 [label="unwind"];
    bb236__0_1071 -> bb237__0_1071 [label="return"];
    bb236__0_1071 -> bb288__0_1071 [label="unwind"];
    bb237__0_1071 -> bb238__0_1071 [label="return"];
    bb237__0_1071 -> bb288__0_1071 [label="unwind"];
    bb238__0_1071 -> bb239__0_1071 [label="return"];
    bb238__0_1071 -> bb286__0_1071 [label="unwind"];
    bb239__0_1071 -> bb240__0_1071 [label="return"];
    bb239__0_1071 -> bb286__0_1071 [label="unwind"];
    bb240__0_1071 -> bb241__0_1071 [label="return"];
    bb240__0_1071 -> bb288__0_1071 [label="unwind"];
    bb241__0_1071 -> bb242__0_1071 [label="return"];
    bb241__0_1071 -> bb288__0_1071 [label="unwind"];
    bb242__0_1071 -> bb243__0_1071 [label=""];
    bb243__0_1071 -> bb244__0_1071 [label="return"];
    bb243__0_1071 -> bb288__0_1071 [label="unwind"];
    bb244__0_1071 -> bb245__0_1071 [label="0"];
    bb244__0_1071 -> bb246__0_1071 [label="1"];
    bb244__0_1071 -> bb19__0_1071 [label="otherwise"];
    bb245__0_1071 -> bb249__0_1071 [label=""];
    bb246__0_1071 -> bb247__0_1071 [label="return"];
    bb246__0_1071 -> bb288__0_1071 [label="unwind"];
    bb247__0_1071 -> bb267__0_1071 [label=""];
    bb248__0_1071 -> bb249__0_1071 [label=""];
    bb249__0_1071 -> bb251__0_1071 [label="0"];
    bb249__0_1071 -> bb250__0_1071 [label="otherwise"];
    bb250__0_1071 -> bb252__0_1071 [label=""];
    bb251__0_1071 -> bb252__0_1071 [label=""];
    bb252__0_1071 -> bb253__0_1071 [label="return"];
    bb252__0_1071 -> bb288__0_1071 [label="unwind"];
    bb253__0_1071 -> bb254__0_1071 [label="return"];
    bb253__0_1071 -> bb288__0_1071 [label="unwind"];
    bb254__0_1071 -> bb255__0_1071 [label="return"];
    bb254__0_1071 -> bb288__0_1071 [label="unwind"];
    bb255__0_1071 -> bb256__0_1071 [label="return"];
    bb255__0_1071 -> bb285__0_1071 [label="unwind"];
    bb256__0_1071 -> bb257__0_1071 [label="return"];
    bb256__0_1071 -> bb285__0_1071 [label="unwind"];
    bb257__0_1071 -> bb258__0_1071 [label="return"];
    bb257__0_1071 -> bb285__0_1071 [label="unwind"];
    bb258__0_1071 -> bb259__0_1071 [label="success"];
    bb258__0_1071 -> bb284__0_1071 [label="unwind"];
    bb259__0_1071 -> bb260__0_1071 [label="return"];
    bb259__0_1071 -> bb284__0_1071 [label="unwind"];
    bb260__0_1071 -> bb261__0_1071 [label="return"];
    bb260__0_1071 -> bb284__0_1071 [label="unwind"];
    bb261__0_1071 -> bb262__0_1071 [label="return"];
    bb261__0_1071 -> bb285__0_1071 [label="unwind"];
    bb262__0_1071 -> bb263__0_1071 [label="return"];
    bb262__0_1071 -> bb288__0_1071 [label="unwind"];
    bb263__0_1071 -> bb264__0_1071 [label="return"];
    bb263__0_1071 -> bb289__0_1071 [label="unwind"];
    bb264__0_1071 -> bb265__0_1071 [label="return"];
    bb264__0_1071 -> bb290__0_1071 [label="unwind"];
    bb265__0_1071 -> bb266__0_1071 [label="return"];
    bb265__0_1071 -> bb299__0_1071 [label="unwind"];
    bb266__0_1071 -> bb283__0_1071 [label=""];
    bb267__0_1071 -> bb268__0_1071 [label="return"];
    bb267__0_1071 -> bb289__0_1071 [label="unwind"];
    bb268__0_1071 -> bb269__0_1071 [label="return"];
    bb268__0_1071 -> bb290__0_1071 [label="unwind"];
    bb269__0_1071 -> bb270__0_1071 [label=""];
    bb270__0_1071 -> bb271__0_1071 [label=""];
    bb271__0_1071 -> bb272__0_1071 [label=""];
    bb272__0_1071 -> bb273__0_1071 [label="return"];
    bb272__0_1071 -> bb299__0_1071 [label="unwind"];
    bb273__0_1071 -> bb274__0_1071 [label=""];
    bb274__0_1071 -> bb279__0_1071 [label=""];
    bb275__0_1071 -> bb276__0_1071 [label=""];
    bb276__0_1071 -> bb277__0_1071 [label=""];
    bb277__0_1071 -> bb279__0_1071 [label=""];
    bb278__0_1071 -> bb279__0_1071 [label=""];
    bb279__0_1071 -> bb281__0_1071 [label=""];
    bb280__0_1071 -> bb281__0_1071 [label=""];
    bb281__0_1071 -> bb282__0_1071 [label=""];
    bb282__0_1071 -> bb283__0_1071 [label=""];
    bb284__0_1071 -> bb285__0_1071 [label="return"];
    bb285__0_1071 -> bb288__0_1071 [label="return"];
    bb286__0_1071 -> bb288__0_1071 [label="return"];
    bb287__0_1071 -> bb288__0_1071 [label="return"];
    bb288__0_1071 -> bb289__0_1071 [label="return"];
    bb289__0_1071 -> bb290__0_1071 [label="return"];
    bb290__0_1071 -> bb299__0_1071 [label="return"];
    bb291__0_1071 -> bb299__0_1071 [label="return"];
    bb292__0_1071 -> bb299__0_1071 [label="return"];
    bb293__0_1071 -> bb299__0_1071 [label="return"];
    bb294__0_1071 -> bb299__0_1071 [label="return"];
    bb295__0_1071 -> bb299__0_1071 [label="return"];
    bb296__0_1071 -> bb299__0_1071 [label="return"];
    bb297__0_1071 -> bb299__0_1071 [label="return"];
    bb298__0_1071 -> bb299__0_1071 [label="return"];
    bb300__0_1071 -> bb288__0_1071 [label=""];
    bb301__0_1071 -> bb289__0_1071 [label=""];
    bb302__0_1071 -> bb290__0_1071 [label=""];
    bb303__0_1071 -> bb299__0_1071 [label=""];
    bb304__0_1071 -> bb299__0_1071 [label=""];
}
