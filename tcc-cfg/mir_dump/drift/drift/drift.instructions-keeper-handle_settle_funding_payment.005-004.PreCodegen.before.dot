digraph Mir_0_9246 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_settle_funding_payment(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::SettleFunding&lt;ReErased&gt;&gt;) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _2: ();<br align="left"/>let mut _3: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _4: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _5: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _6: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _7: isize;<br align="left"/>let _8: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _9: !;<br align="left"/>let mut _10: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _11: ();<br align="left"/>let _12: anchor_lang::prelude::Clock;<br align="left"/>let mut _13: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _14: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _19: anchor_lang::prelude::Clock;<br align="left"/>let _20: i64;<br align="left"/>let _21: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _23: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _24: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _26: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _28: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _29: Closure(DefId(0:9249 ~ drift[d311]::instructions::keeper::handle_settle_funding_payment::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _35: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _36: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _38: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _39: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _40: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _41: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _42: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _43: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _44: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _45: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _46: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _47: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _48: &amp;ReErased [state::user::PerpPosition; 8_usize];<br align="left"/>let _49: &amp;ReErased state::user::User;<br align="left"/>let mut _50: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _51: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _52: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _53: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _54: u64;<br align="left"/>let mut _55: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _56: isize;<br align="left"/>let _57: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _58: !;<br align="left"/>let mut _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _60: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _61: ();<br align="left"/>let mut _62: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _63: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _64: &amp;ReErased mut state::user::User;<br align="left"/>let mut _65: &amp;ReErased mut state::user::User;<br align="left"/>let mut _66: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _67: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _68: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _69: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _70: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _71: i64;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: ();<br align="left"/>let _77: ();<br align="left"/>let mut _78: &amp;ReErased mut state::user::User;<br align="left"/>let mut _79: &amp;ReErased mut state::user::User;<br align="left"/>let mut _80: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _81: u64;<br align="left"/>let mut _82: ();<br align="left"/>let mut _83: &amp;ReErased mut instructions::keeper::SettleFunding&lt;ReErased&gt;;<br align="left"/>let mut _84: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _85: &amp;ReErased mut instructions::keeper::SettleFunding&lt;ReErased&gt;;<br align="left"/>let mut _86: &amp;ReErased mut instructions::keeper::SettleFunding&lt;ReErased&gt;;<br align="left"/>let mut _87: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _88: isize;<br align="left"/>let mut _89: isize;<br align="left"/>let mut _90: isize;<br align="left"/>let mut _91: isize;<br align="left"/>let mut _92: isize;<br align="left"/>let mut _93: isize;<br align="left"/>let mut _94: isize;<br align="left"/>let mut _95: isize;<br align="left"/>let mut _96: isize;<br align="left"/>let mut _97: isize;<br align="left"/>let mut _98: isize;<br align="left"/>let mut _99: isize;<br align="left"/>let mut _100: isize;<br align="left"/>let mut _101: isize;<br align="left"/>let mut _102: isize;<br align="left"/>let mut _103: isize;<br align="left"/>let mut _104: isize;<br align="left"/>let mut _105: isize;<br align="left"/>let mut _106: isize;<br align="left"/>let mut _107: isize;<br align="left"/>let mut _108: isize;<br align="left"/>let mut _109: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug residual =&gt; _8;<br align="left"/>debug val =&gt; _11;<br align="left"/>debug clock =&gt; _12;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug now =&gt; _20;<br align="left"/>debug user_key =&gt; _21;<br align="left"/>debug user =&gt; _23;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug perp_market_map =&gt; _35;<br align="left"/>debug residual =&gt; _57;<br align="left"/>debug val =&gt; _60;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>>;
    bb0__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_83 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleFunding&lt;'_&gt;)<br/>_6 = &amp;((*_83).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_84 = deref_copy (*_6)<br/>_109 = (((_84.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_5 = &amp;(*_109)<br/></td></tr><tr><td align="left">_4 = constraints::funding_not_paused(move _5)</td></tr></table>>];
    bb1__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/></td></tr><tr><td align="left">_3 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _4)</td></tr></table>>];
    bb2__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>_7 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _7)</td></tr></table>>];
    bb3__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_3 as Continue).0: ())<br/>_2 = _11<br/>StorageDead(_11)<br/>_88 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/></td></tr><tr><td align="left">_14 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_8)<br/>_8 = move ((_3 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_10)<br/>_10 = move _8<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _10)</td></tr></table>>];
    bb6__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_8)<br/>_102 = discriminant(_3)<br/>StorageDead(_6)<br/>StorageDead(_3)<br/>StorageDead(_2)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_13 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _14)</td></tr></table>>];
    bb8__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>_15 = discriminant(_13)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb9__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_13 as Continue).0: anchor_lang::prelude::Clock)<br/>_12 = move _19<br/>StorageDead(_19)<br/>_90 = discriminant(_13)<br/>StorageDead(_13)<br/>StorageLive(_20)<br/>_20 = (_12.4: i64)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_85 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleFunding&lt;'_&gt;)<br/>_22 = &amp;((*_85).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_21 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _22)</td></tr></table>>];
    bb10__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = move ((_13 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_18)<br/>_18 = move _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb11__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>_100 = discriminant(_13)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_86 = deref_copy (_1.1: &amp;mut instructions::keeper::SettleFunding&lt;'_&gt;)<br/>_28 = &amp;((*_86).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_27 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _28)</td></tr></table>>];
    bb13__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_26 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _27, move _29)</td></tr></table>>];
    bb14__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb15__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_30 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb16__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_25 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_24 = move _34<br/>StorageDead(_34)<br/>_23 = &amp;mut _24<br/>_94 = discriminant(_25)<br/>StorageDead(_25)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_87 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_43 = &amp;(*_87)<br/></td></tr><tr><td align="left">_42 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _43)</td></tr></table>>];
    bb17__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb18__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_92 = discriminant(_25)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/></td></tr><tr><td align="left">_41 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _42)</td></tr></table>>];
    bb20__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = &amp;mut _41<br/>_39 = &amp;mut (*_40)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = &amp;(*_23)<br/></td></tr><tr><td align="left">_49 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _50)</td></tr></table>>];
    bb21__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>_48 = &amp;((*_49).4: [state::user::PerpPosition; 8])<br/>_47 = &amp;(*_48)<br/></td></tr><tr><td align="left">_46 = get_market_set_for_user_positions(move _47)</td></tr></table>>];
    bb22__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>_45 = &amp;_46<br/>_44 = &amp;(*_45)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/></td></tr><tr><td align="left">_53 = BTreeSet::&lt;u16&gt;::new()</td></tr></table>>];
    bb23__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">_52 = &amp;_53<br/>_51 = &amp;(*_52)<br/>StorageLive(_54)<br/>_54 = (_12.0: u64)<br/>StorageLive(_55)<br/>_55 = Option::&lt;state::state::OracleGuardRails&gt;::None<br/></td></tr><tr><td align="left">_38 = load_maps(move _39, move _44, move _51, move _54, move _55)</td></tr></table>>];
    bb24__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_54)<br/>StorageDead(_51)<br/>StorageDead(_44)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb25__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_56 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _56)</td></tr></table>>];
    bb26__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = move ((_37 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_36 = move _60<br/>StorageDead(_60)<br/>StorageLive(_35)<br/>_35 = move (_36.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/></td></tr><tr><td align="left">drop((_36.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;))</td></tr></table>>];
    bb27__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_59)<br/>_59 = _57<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _59)</td></tr></table>>];
    bb28__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_57)<br/>_96 = discriminant(_37)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb29__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb30__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = &amp;mut (*_23)<br/></td></tr><tr><td align="left">_65 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _66)</td></tr></table>>];
    bb31__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_64 = &amp;mut (*_65)<br/>StorageDead(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;_21<br/>_67 = &amp;(*_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;_35<br/>_69 = &amp;(*_70)<br/>StorageLive(_71)<br/>_71 = _20<br/></td></tr><tr><td align="left">_63 = settle_funding_payments(move _64, move _67, move _69, move _71)</td></tr></table>>];
    bb32__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">_62 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _63)</td></tr></table>>];
    bb33__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>_72 = discriminant(_62)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb34__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_62 as Continue).0: ())<br/>_61 = _76<br/>StorageDead(_76)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>_80 = &amp;mut (*_23)<br/></td></tr><tr><td align="left">_79 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _80)</td></tr></table>>];
    bb35__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_62 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb36__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_70)<br/>StorageDead(_68)<br/>StorageDead(_65)<br/>StorageDead(_62)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb37__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_78 = &amp;mut (*_79)<br/>StorageDead(_80)<br/>StorageLive(_81)<br/>_81 = (_12.0: u64)<br/></td></tr><tr><td align="left">_77 = User::update_last_active_slot(move _78, move _81)</td></tr></table>>];
    bb38__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_78)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageLive(_82)<br/>_82 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _82)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb39__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb40__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb43__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/>StorageDead(_41)<br/>StorageDead(_40)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb45__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_23)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left">return</td></tr></table>>];
    bb48__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">48 (cleanup)</td></tr><tr><td align="left" balign="left">_104 = discriminant(_37)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb49__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">49 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb50__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_35)</td></tr></table>>];
    bb51__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb52__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">drop(_46)</td></tr></table>>];
    bb53__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">53 (cleanup)</td></tr><tr><td align="left">drop(_24)</td></tr></table>>];
    bb54__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">54 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb55__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_98 = discriminant(_37)<br/></td></tr><tr><td align="left">drop(_53)</td></tr></table>>];
    bb56__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">56 (cleanup)</td></tr><tr><td align="left">drop((_36.2: state::oracle_map::OracleMap&lt;'_&gt;))</td></tr></table>>];
    bb57__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left">drop((_36.2: state::oracle_map::OracleMap&lt;'_&gt;))</td></tr></table>>];
    bb58__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">58 (cleanup)</td></tr><tr><td align="left" balign="left">_105 = discriminant(_37)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">59 (cleanup)</td></tr><tr><td align="left" balign="left">_106 = discriminant(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">60 (cleanup)</td></tr><tr><td align="left" balign="left">_107 = discriminant(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_9246 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">61 (cleanup)</td></tr><tr><td align="left" balign="left">_108 = discriminant(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9246 -> bb1__0_9246 [label="return"];
    bb1__0_9246 -> bb2__0_9246 [label="return"];
    bb1__0_9246 -> bb54__0_9246 [label="unwind"];
    bb2__0_9246 -> bb3__0_9246 [label="0"];
    bb2__0_9246 -> bb5__0_9246 [label="1"];
    bb2__0_9246 -> bb4__0_9246 [label="otherwise"];
    bb3__0_9246 -> bb7__0_9246 [label="return"];
    bb5__0_9246 -> bb6__0_9246 [label="return"];
    bb5__0_9246 -> bb61__0_9246 [label="unwind"];
    bb6__0_9246 -> bb47__0_9246 [label=""];
    bb7__0_9246 -> bb8__0_9246 [label="return"];
    bb7__0_9246 -> bb54__0_9246 [label="unwind"];
    bb8__0_9246 -> bb9__0_9246 [label="0"];
    bb8__0_9246 -> bb10__0_9246 [label="1"];
    bb8__0_9246 -> bb4__0_9246 [label="otherwise"];
    bb9__0_9246 -> bb12__0_9246 [label="return"];
    bb10__0_9246 -> bb11__0_9246 [label="return"];
    bb10__0_9246 -> bb60__0_9246 [label="unwind"];
    bb11__0_9246 -> bb46__0_9246 [label=""];
    bb12__0_9246 -> bb13__0_9246 [label="return"];
    bb13__0_9246 -> bb14__0_9246 [label="return"];
    bb13__0_9246 -> bb54__0_9246 [label="unwind"];
    bb14__0_9246 -> bb15__0_9246 [label="return"];
    bb14__0_9246 -> bb54__0_9246 [label="unwind"];
    bb15__0_9246 -> bb16__0_9246 [label="0"];
    bb15__0_9246 -> bb17__0_9246 [label="1"];
    bb15__0_9246 -> bb4__0_9246 [label="otherwise"];
    bb16__0_9246 -> bb19__0_9246 [label="return"];
    bb16__0_9246 -> bb53__0_9246 [label="unwind"];
    bb17__0_9246 -> bb18__0_9246 [label="return"];
    bb17__0_9246 -> bb59__0_9246 [label="unwind"];
    bb18__0_9246 -> bb45__0_9246 [label=""];
    bb19__0_9246 -> bb20__0_9246 [label="return"];
    bb19__0_9246 -> bb53__0_9246 [label="unwind"];
    bb20__0_9246 -> bb21__0_9246 [label="return"];
    bb20__0_9246 -> bb53__0_9246 [label="unwind"];
    bb21__0_9246 -> bb22__0_9246 [label="return"];
    bb21__0_9246 -> bb53__0_9246 [label="unwind"];
    bb22__0_9246 -> bb23__0_9246 [label="return"];
    bb22__0_9246 -> bb52__0_9246 [label="unwind"];
    bb23__0_9246 -> bb24__0_9246 [label="return"];
    bb23__0_9246 -> bb51__0_9246 [label="unwind"];
    bb24__0_9246 -> bb25__0_9246 [label="return"];
    bb24__0_9246 -> bb51__0_9246 [label="unwind"];
    bb25__0_9246 -> bb26__0_9246 [label="0"];
    bb25__0_9246 -> bb27__0_9246 [label="1"];
    bb25__0_9246 -> bb4__0_9246 [label="otherwise"];
    bb26__0_9246 -> bb57__0_9246 [label="return"];
    bb26__0_9246 -> bb56__0_9246 [label="unwind"];
    bb27__0_9246 -> bb28__0_9246 [label="return"];
    bb27__0_9246 -> bb58__0_9246 [label="unwind"];
    bb28__0_9246 -> bb42__0_9246 [label="return"];
    bb28__0_9246 -> bb52__0_9246 [label="unwind"];
    bb29__0_9246 -> bb30__0_9246 [label="return"];
    bb29__0_9246 -> bb50__0_9246 [label="unwind"];
    bb30__0_9246 -> bb31__0_9246 [label="return"];
    bb30__0_9246 -> bb50__0_9246 [label="unwind"];
    bb31__0_9246 -> bb32__0_9246 [label="return"];
    bb31__0_9246 -> bb50__0_9246 [label="unwind"];
    bb32__0_9246 -> bb33__0_9246 [label="return"];
    bb32__0_9246 -> bb50__0_9246 [label="unwind"];
    bb33__0_9246 -> bb34__0_9246 [label="0"];
    bb33__0_9246 -> bb35__0_9246 [label="1"];
    bb33__0_9246 -> bb4__0_9246 [label="otherwise"];
    bb34__0_9246 -> bb37__0_9246 [label="return"];
    bb34__0_9246 -> bb50__0_9246 [label="unwind"];
    bb35__0_9246 -> bb36__0_9246 [label="return"];
    bb35__0_9246 -> bb50__0_9246 [label="unwind"];
    bb36__0_9246 -> bb41__0_9246 [label="return"];
    bb36__0_9246 -> bb53__0_9246 [label="unwind"];
    bb37__0_9246 -> bb38__0_9246 [label="return"];
    bb37__0_9246 -> bb50__0_9246 [label="unwind"];
    bb38__0_9246 -> bb39__0_9246 [label="return"];
    bb38__0_9246 -> bb53__0_9246 [label="unwind"];
    bb39__0_9246 -> bb40__0_9246 [label="return"];
    bb39__0_9246 -> bb54__0_9246 [label="unwind"];
    bb40__0_9246 -> bb47__0_9246 [label=""];
    bb41__0_9246 -> bb44__0_9246 [label=""];
    bb42__0_9246 -> bb43__0_9246 [label="return"];
    bb42__0_9246 -> bb53__0_9246 [label="unwind"];
    bb43__0_9246 -> bb44__0_9246 [label=""];
    bb44__0_9246 -> bb45__0_9246 [label="return"];
    bb44__0_9246 -> bb54__0_9246 [label="unwind"];
    bb45__0_9246 -> bb46__0_9246 [label=""];
    bb46__0_9246 -> bb47__0_9246 [label=""];
    bb48__0_9246 -> bb49__0_9246 [label="return"];
    bb49__0_9246 -> bb50__0_9246 [label="return"];
    bb50__0_9246 -> bb53__0_9246 [label="return"];
    bb51__0_9246 -> bb52__0_9246 [label="return"];
    bb52__0_9246 -> bb53__0_9246 [label="return"];
    bb53__0_9246 -> bb54__0_9246 [label="return"];
    bb55__0_9246 -> bb29__0_9246 [label="return"];
    bb55__0_9246 -> bb49__0_9246 [label="unwind"];
    bb56__0_9246 -> bb48__0_9246 [label="return"];
    bb57__0_9246 -> bb55__0_9246 [label="return"];
    bb57__0_9246 -> bb48__0_9246 [label="unwind"];
    bb58__0_9246 -> bb51__0_9246 [label=""];
    bb59__0_9246 -> bb54__0_9246 [label=""];
    bb60__0_9246 -> bb54__0_9246 [label=""];
    bb61__0_9246 -> bb54__0_9246 [label=""];
}
