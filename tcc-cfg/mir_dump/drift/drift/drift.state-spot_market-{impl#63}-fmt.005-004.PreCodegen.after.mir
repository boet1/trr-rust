// MIR for `state::spot_market::<impl at programs/drift/src/state/spot_market.rs:688:34: 688:39>::fmt` after PreCodegen

fn state::spot_market::<impl at programs/drift/src/state/spot_market.rs:688:34: 688:39>::fmt(_1: &InsuranceFund, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &[&str; 9];
    let _4: &[&str; 9];
    let _5: [&str; 9];
    let mut _6: &str;
    let _7: &str;
    let mut _8: &str;
    let _9: &str;
    let mut _10: &str;
    let _11: &str;
    let mut _12: &str;
    let _13: &str;
    let mut _14: &str;
    let _15: &str;
    let mut _16: &str;
    let _17: &str;
    let mut _18: &str;
    let _19: &str;
    let mut _20: &str;
    let _21: &str;
    let mut _23: &[&dyn std::fmt::Debug; 9];
    let _24: &[&dyn std::fmt::Debug; 9];
    let _25: [&dyn std::fmt::Debug; 9];
    let mut _26: &dyn std::fmt::Debug;
    let mut _27: &anchor_lang::prelude::Pubkey;
    let _28: &anchor_lang::prelude::Pubkey;
    let mut _29: &dyn std::fmt::Debug;
    let mut _30: &u128;
    let _31: &u128;
    let mut _32: &dyn std::fmt::Debug;
    let mut _33: &u128;
    let _34: &u128;
    let mut _35: &dyn std::fmt::Debug;
    let mut _36: &u128;
    let _37: &u128;
    let mut _38: &dyn std::fmt::Debug;
    let mut _39: &i64;
    let _40: &i64;
    let mut _41: &dyn std::fmt::Debug;
    let mut _42: &i64;
    let _43: &i64;
    let mut _44: &dyn std::fmt::Debug;
    let mut _45: &i64;
    let _46: &i64;
    let mut _47: &dyn std::fmt::Debug;
    let mut _48: &u32;
    let _49: &u32;
    let mut _50: &dyn std::fmt::Debug;
    let mut _51: &&u32;
    let _52: &&u32;
    let _53: &u32;
    let mut _54: &mut std::fmt::Formatter<'_>;
    let mut _55: &str;
    let _56: &str;
    let mut _57: &[&str];
    let mut _58: &[&str; 9];
    let mut _59: &[&dyn std::fmt::Debug];
    let mut _60: &[&str; 9];
    scope 1 {
        debug names => _3;
        let _22: &[&dyn std::fmt::Debug];
        scope 2 {
            debug values => _22;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _60 = const _;
        _4 = &(*_60);
        _3 = &(*_4);
        StorageDead(_4);
        StorageLive(_22);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &((*_1).0: anchor_lang::prelude::Pubkey);
        _27 = &(*_28);
        _26 = move _27 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_27);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &((*_1).1: u128);
        _30 = &(*_31);
        _29 = move _30 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_30);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &((*_1).2: u128);
        _33 = &(*_34);
        _32 = move _33 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_33);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        _37 = &((*_1).3: u128);
        _36 = &(*_37);
        _35 = move _36 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_36);
        StorageLive(_38);
        StorageLive(_39);
        StorageLive(_40);
        _40 = &((*_1).4: i64);
        _39 = &(*_40);
        _38 = move _39 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_39);
        StorageLive(_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &((*_1).5: i64);
        _42 = &(*_43);
        _41 = move _42 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_42);
        StorageLive(_44);
        StorageLive(_45);
        StorageLive(_46);
        _46 = &((*_1).6: i64);
        _45 = &(*_46);
        _44 = move _45 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_45);
        StorageLive(_47);
        StorageLive(_48);
        StorageLive(_49);
        _49 = &((*_1).7: u32);
        _48 = &(*_49);
        _47 = move _48 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_48);
        StorageLive(_50);
        StorageLive(_51);
        StorageLive(_52);
        StorageLive(_53);
        _53 = &((*_1).8: u32);
        _52 = &_53;
        _51 = &(*_52);
        _50 = move _51 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_51);
        _25 = [move _26, move _29, move _32, move _35, move _38, move _41, move _44, move _47, move _50];
        StorageDead(_50);
        StorageDead(_47);
        StorageDead(_44);
        StorageDead(_41);
        StorageDead(_38);
        StorageDead(_35);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_26);
        _24 = &_25;
        _23 = &(*_24);
        _22 = move _23 as &[&dyn std::fmt::Debug] (PointerCoercion(Unsize));
        StorageDead(_23);
        StorageDead(_52);
        StorageDead(_49);
        StorageDead(_46);
        StorageDead(_43);
        StorageDead(_40);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_31);
        StorageDead(_28);
        StorageDead(_24);
        StorageLive(_54);
        _54 = &mut (*_2);
        StorageLive(_55);
        StorageLive(_56);
        _56 = const "InsuranceFund";
        _55 = &(*_56);
        StorageLive(_57);
        StorageLive(_58);
        _58 = &(*_3);
        _57 = move _58 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_58);
        StorageLive(_59);
        _59 = &(*_22);
        _0 = Formatter::<'_>::debug_struct_fields_finish(move _54, move _55, move _57, move _59) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_59);
        StorageDead(_57);
        StorageDead(_55);
        StorageDead(_54);
        StorageDead(_53);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_3);
        StorageDead(_56);
        return;
    }
}
