// MIR for `state::user::<impl at programs/drift/src/state/user.rs:65:10: 65:17>::default` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:65:10: 65:17>::default() -> User {
    let mut _0: state::user::User;
    let mut _1: anchor_lang::prelude::Pubkey;
    let mut _2: anchor_lang::prelude::Pubkey;
    let mut _3: [u8; 32];
    let mut _4: [state::user::SpotPosition; 8];
    let mut _5: [state::user::PerpPosition; 8];
    let mut _6: [state::user::Order; 32];
    let mut _7: i64;
    let mut _8: u64;
    let mut _9: u64;
    let mut _10: u64;
    let mut _11: i64;
    let mut _12: i64;
    let mut _13: i64;
    let mut _14: u64;
    let mut _15: u64;
    let mut _16: u32;
    let mut _17: u32;
    let mut _18: u16;
    let mut _19: u16;
    let mut _20: u8;
    let mut _21: bool;
    let mut _22: bool;
    let mut _23: u8;
    let mut _24: bool;
    let mut _25: u8;
    let mut _26: bool;
    let mut _27: state::user::MarginMode;
    let mut _28: u8;
    let mut _29: [u8; 3];
    let mut _30: u32;
    let mut _31: [u8; 12];

    bb0: {
        StorageLive(_1);
        _1 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageLive(_2);
        _2 = <anchor_lang::prelude::Pubkey as Default>::default() -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageLive(_3);
        _3 = <[u8; 32] as Default>::default() -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageLive(_4);
        _4 = <[SpotPosition; 8] as Default>::default() -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageLive(_5);
        _5 = <[PerpPosition; 8] as Default>::default() -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageLive(_6);
        _6 = <[Order; 32] as Default>::default() -> [return: bb6, unwind continue];
    }

    bb6: {
        StorageLive(_7);
        _7 = <i64 as Default>::default() -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageLive(_8);
        _8 = <u64 as Default>::default() -> [return: bb8, unwind continue];
    }

    bb8: {
        StorageLive(_9);
        _9 = <u64 as Default>::default() -> [return: bb9, unwind continue];
    }

    bb9: {
        StorageLive(_10);
        _10 = <u64 as Default>::default() -> [return: bb10, unwind continue];
    }

    bb10: {
        StorageLive(_11);
        _11 = <i64 as Default>::default() -> [return: bb11, unwind continue];
    }

    bb11: {
        StorageLive(_12);
        _12 = <i64 as Default>::default() -> [return: bb12, unwind continue];
    }

    bb12: {
        StorageLive(_13);
        _13 = <i64 as Default>::default() -> [return: bb13, unwind continue];
    }

    bb13: {
        StorageLive(_14);
        _14 = <u64 as Default>::default() -> [return: bb14, unwind continue];
    }

    bb14: {
        StorageLive(_15);
        _15 = <u64 as Default>::default() -> [return: bb15, unwind continue];
    }

    bb15: {
        StorageLive(_16);
        _16 = <u32 as Default>::default() -> [return: bb16, unwind continue];
    }

    bb16: {
        StorageLive(_17);
        _17 = <u32 as Default>::default() -> [return: bb17, unwind continue];
    }

    bb17: {
        StorageLive(_18);
        _18 = <u16 as Default>::default() -> [return: bb18, unwind continue];
    }

    bb18: {
        StorageLive(_19);
        _19 = <u16 as Default>::default() -> [return: bb19, unwind continue];
    }

    bb19: {
        StorageLive(_20);
        _20 = <u8 as Default>::default() -> [return: bb20, unwind continue];
    }

    bb20: {
        StorageLive(_21);
        _21 = <bool as Default>::default() -> [return: bb21, unwind continue];
    }

    bb21: {
        StorageLive(_22);
        _22 = <bool as Default>::default() -> [return: bb22, unwind continue];
    }

    bb22: {
        StorageLive(_23);
        _23 = <u8 as Default>::default() -> [return: bb23, unwind continue];
    }

    bb23: {
        StorageLive(_24);
        _24 = <bool as Default>::default() -> [return: bb24, unwind continue];
    }

    bb24: {
        StorageLive(_25);
        _25 = <u8 as Default>::default() -> [return: bb25, unwind continue];
    }

    bb25: {
        StorageLive(_26);
        _26 = <bool as Default>::default() -> [return: bb26, unwind continue];
    }

    bb26: {
        StorageLive(_27);
        _27 = <MarginMode as Default>::default() -> [return: bb27, unwind continue];
    }

    bb27: {
        StorageLive(_28);
        _28 = <u8 as Default>::default() -> [return: bb28, unwind continue];
    }

    bb28: {
        StorageLive(_29);
        _29 = <[u8; 3] as Default>::default() -> [return: bb29, unwind continue];
    }

    bb29: {
        StorageLive(_30);
        _30 = <u32 as Default>::default() -> [return: bb30, unwind continue];
    }

    bb30: {
        StorageLive(_31);
        _31 = <[u8; 12] as Default>::default() -> [return: bb31, unwind continue];
    }

    bb31: {
        _0 = User { authority: move _1, delegate: move _2, name: move _3, spot_positions: move _4, perp_positions: move _5, orders: move _6, last_add_perp_lp_shares_ts: move _7, total_deposits: move _8, total_withdraws: move _9, total_social_loss: move _10, settled_perp_pnl: move _11, cumulative_spot_fees: move _12, cumulative_perp_funding: move _13, liquidation_margin_freed: move _14, last_active_slot: move _15, next_order_id: move _16, max_margin_ratio: move _17, next_liquidation_id: move _18, sub_account_id: move _19, status: move _20, is_margin_trading_enabled: move _21, idle: move _22, open_orders: move _23, has_open_order: move _24, open_auctions: move _25, has_open_auction: move _26, margin_mode: move _27, pool_id: move _28, padding1: move _29, last_fuel_bonus_update_ts: move _30, padding: move _31 };
        StorageDead(_31);
        StorageDead(_30);
        StorageDead(_29);
        StorageDead(_28);
        StorageDead(_27);
        StorageDead(_26);
        StorageDead(_25);
        StorageDead(_24);
        StorageDead(_23);
        StorageDead(_22);
        StorageDead(_21);
        StorageDead(_20);
        StorageDead(_19);
        StorageDead(_18);
        StorageDead(_17);
        StorageDead(_16);
        StorageDead(_15);
        StorageDead(_14);
        StorageDead(_13);
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        StorageDead(_9);
        StorageDead(_8);
        StorageDead(_7);
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
