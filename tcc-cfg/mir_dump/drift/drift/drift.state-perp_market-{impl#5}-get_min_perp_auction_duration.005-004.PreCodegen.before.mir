// MIR for `state::perp_market::<impl at programs/drift/src/state/perp_market.rs:298:1: 298:16>::get_min_perp_auction_duration` before PreCodegen

fn state::perp_market::<impl at programs/drift/src/state/perp_market.rs:298:1: 298:16>::get_min_perp_auction_duration(_1: &PerpMarket, _2: u8) -> u8 {
    debug self => _1;
    debug default_min_auction_duration => _2;
    let mut _0: u8;
    let mut _3: bool;
    let mut _4: i8;
    let mut _5: i8;
    let mut _6: i8;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = (((*_1).1: state::perp_market::AMM).76: i8);
        _3 = Ne(move _4, const 0_i8);
        switchInt(move _3) -> [0: bb4, otherwise: bb1];
    }

    bb1: {
        StorageDead(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = (((*_1).1: state::perp_market::AMM).76: i8);
        _5 = <i8 as Ord>::max(move _6, const 0_i8) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_6);
        _0 = core::num::<impl i8>::unsigned_abs(move _5) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_5);
        goto -> bb5;
    }

    bb4: {
        StorageDead(_4);
        _0 = _2;
        goto -> bb5;
    }

    bb5: {
        StorageDead(_3);
        return;
    }
}
