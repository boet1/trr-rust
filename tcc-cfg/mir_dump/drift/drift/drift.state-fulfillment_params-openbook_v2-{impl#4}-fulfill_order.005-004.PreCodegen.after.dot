digraph Mir_0_3063 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;OpenbookV2FulfillmentParams&lt;'a, 'b&gt; as SpotFulfillmentParams&gt;::fulfill_order(_1: &amp;ReErased mut state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;, _2: controller::position::PositionDirection, _3: u64, _4: u64, _5: u64) -&gt; std::result::Result&lt;state::spot_fulfillment_params::ExternalSpotFill, error::ErrorCode&gt;<br align="left"/>let _6: openbook_v2_light::Market;<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, openbook_v2_light::Market&gt;;<br align="left"/>let mut _8: std::result::Result&lt;openbook_v2_light::Market, error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::fulfillment_params::openbook_v2::OpenbookV2Context&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _10: isize;<br align="left"/>let _11: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _12: !;<br align="left"/>let mut _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _14: openbook_v2_light::Market;<br align="left"/>let _15: u64;<br align="left"/>let mut _16: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _17: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: i64;<br align="left"/>let mut _21: isize;<br align="left"/>let _22: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _25: u64;<br align="left"/>let _26: u64;<br align="left"/>let mut _27: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _28: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _29: u64;<br align="left"/>let mut _30: u64;<br align="left"/>let mut _31: i64;<br align="left"/>let mut _32: u32;<br align="left"/>let mut _33: u8;<br align="left"/>let mut _34: u64;<br align="left"/>let mut _35: i64;<br align="left"/>let mut _36: controller::position::PositionDirection;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: u64;<br align="left"/>let _42: i64;<br align="left"/>let mut _43: u64;<br align="left"/>let mut _44: u64;<br align="left"/>let mut _45: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _46: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: i64;<br align="left"/>let mut _52: u64;<br align="left"/>let mut _53: isize;<br align="left"/>let _54: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _55: !;<br align="left"/>let mut _56: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _57: u64;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: u64;<br align="left"/>let mut _64: u64;<br align="left"/>let _65: i64;<br align="left"/>let mut _66: i64;<br align="left"/>let mut _67: u64;<br align="left"/>let mut _68: i64;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: bool;<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: bool;<br align="left"/>let _73: openbook_v2_light::Side;<br align="left"/>let mut _74: isize;<br align="left"/>let _75: openbook_v2_light::instruction::PlaceTakeOrder;<br align="left"/>let mut _76: openbook_v2_light::Side;<br align="left"/>let mut _77: i64;<br align="left"/>let mut _78: u64;<br align="left"/>let mut _79: i64;<br align="left"/>let mut _80: i64;<br align="left"/>let mut _81: openbook_v2_light::PlaceOrderType;<br align="left"/>let _82: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _83: &amp;ReErased openbook_v2_light::instruction::PlaceTakeOrder;<br align="left"/>let _84: u64;<br align="left"/>let mut _85: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _86: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _87: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _88: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _89: u64;<br align="left"/>let mut _90: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _91: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _92: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _93: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _94: ();<br align="left"/>let mut _95: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _96: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _97: &amp;ReErased state::fulfillment_params::openbook_v2::OpenbookV2FulfillmentParams&lt;ReErased, ReErased&gt;;<br align="left"/>let mut _98: std::vec::Vec&lt;u8, std::alloc::Global&gt;;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: ();<br align="left"/>let _104: ();<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _106: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _107: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _108: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _109: Closure(DefId(0:3064 ~ drift[d311]::state::fulfillment_params::openbook_v2::{impl#4}::fulfill_order::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _110: isize;<br align="left"/>let _111: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _112: !;<br align="left"/>let mut _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _114: ();<br align="left"/>let _115: ();<br align="left"/>let mut _116: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _117: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _118: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _119: &amp;ReErased mut anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _120: Closure(DefId(0:3065 ~ drift[d311]::state::fulfillment_params::openbook_v2::{impl#4}::fulfill_order::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _121: isize;<br align="left"/>let _122: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _123: !;<br align="left"/>let mut _124: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _125: ();<br align="left"/>let _126: u64;<br align="left"/>let mut _127: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _128: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _129: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _130: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _131: u64;<br align="left"/>let mut _132: &amp;ReErased anchor_spl::token::spl_token::state::Account;<br align="left"/>let mut _133: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let _134: &amp;ReErased anchor_spl::token::TokenAccount;<br align="left"/>let mut _135: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let _136: state::spot_market::SpotBalanceType;<br align="left"/>let _137: u64;<br align="left"/>let mut _138: (state::spot_market::SpotBalanceType, u64);<br align="left"/>let mut _139: bool;<br align="left"/>let mut _140: u64;<br align="left"/>let mut _141: u64;<br align="left"/>let mut _142: state::spot_market::SpotBalanceType;<br align="left"/>let mut _143: u64;<br align="left"/>let mut _144: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _145: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _146: u64;<br align="left"/>let mut _147: u64;<br align="left"/>let mut _148: isize;<br align="left"/>let _149: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _150: !;<br align="left"/>let mut _151: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _152: u64;<br align="left"/>let mut _153: state::spot_market::SpotBalanceType;<br align="left"/>let mut _154: u64;<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _156: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _157: u64;<br align="left"/>let mut _158: u64;<br align="left"/>let mut _159: isize;<br align="left"/>let _160: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _161: !;<br align="left"/>let mut _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _163: u64;<br align="left"/>let _164: ();<br align="left"/>let mut _165: bool;<br align="left"/>let mut _166: u64;<br align="left"/>let mut _167: !;<br align="left"/>let _168: ();<br align="left"/>let mut _169: &amp;ReErased str;<br align="left"/>let _170: &amp;ReErased str;<br align="left"/>let mut _171: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let _172: state::spot_market::SpotBalanceType;<br align="left"/>let _173: u64;<br align="left"/>let mut _174: (state::spot_market::SpotBalanceType, u64);<br align="left"/>let mut _175: bool;<br align="left"/>let mut _176: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _177: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _178: state::spot_market::SpotBalanceType;<br align="left"/>let _179: u64;<br align="left"/>let mut _180: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _181: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _182: u64;<br align="left"/>let mut _183: u64;<br align="left"/>let mut _184: isize;<br align="left"/>let _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _186: !;<br align="left"/>let mut _187: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _188: u64;<br align="left"/>let mut _189: state::spot_market::SpotBalanceType;<br align="left"/>let mut _190: u64;<br align="left"/>let _191: u64;<br align="left"/>let mut _192: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _193: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _194: u64;<br align="left"/>let mut _195: u64;<br align="left"/>let mut _196: isize;<br align="left"/>let _197: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _198: !;<br align="left"/>let mut _199: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _200: u64;<br align="left"/>let mut _201: state::spot_market::SpotBalanceType;<br align="left"/>let mut _202: u64;<br align="left"/>let mut _203: state::spot_fulfillment_params::ExternalSpotFill;<br align="left"/>let mut _204: u64;<br align="left"/>let mut _205: u64;<br align="left"/>let mut _206: state::spot_market::SpotBalanceType;<br align="left"/>let mut _207: state::spot_market::SpotBalanceType;<br align="left"/>let mut _208: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _209: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _210: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _211: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _212: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _213: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _214: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _215: bool;<br align="left"/>let mut _216: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _217: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _218: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _219: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _220: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>let mut _221: *const anchor_lang::prelude::Account&lt;ReErased, anchor_spl::token::TokenAccount&gt;;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug taker_direction =&gt; _2;<br align="left"/>debug taker_price =&gt; _3;<br align="left"/>debug taker_base_asset_amount =&gt; _4;<br align="left"/>debug taker_max_quote_asset_amount =&gt; _5;<br align="left"/>debug market =&gt; _6;<br align="left"/>debug residual =&gt; _11;<br align="left"/>debug val =&gt; _14;<br align="left"/>debug serum_max_coin_qty =&gt; _15;<br align="left"/>debug residual =&gt; _22;<br align="left"/>debug val =&gt; _25;<br align="left"/>debug price_lots =&gt; _26;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug max_quote_lots_including_fees =&gt; _42;<br align="left"/>debug residual =&gt; _54;<br align="left"/>debug val =&gt; _57;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug max_base_lots =&gt; _65;<br align="left"/>debug openbook_v2_order_side =&gt; _73;<br align="left"/>debug args =&gt; _75;<br align="left"/>debug data =&gt; _82;<br align="left"/>debug base_before =&gt; _84;<br align="left"/>debug quote_before =&gt; _89;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug residual =&gt; _111;<br align="left"/>debug val =&gt; _114;<br align="left"/>debug residual =&gt; _122;<br align="left"/>debug val =&gt; _125;<br align="left"/>debug base_after =&gt; _126;<br align="left"/>debug quote_after =&gt; _131;<br align="left"/>debug base_update_direction =&gt; _136;<br align="left"/>debug base_asset_amount_filled =&gt; _137;<br align="left"/>debug residual =&gt; _149;<br align="left"/>debug val =&gt; _152;<br align="left"/>debug residual =&gt; _160;<br align="left"/>debug val =&gt; _163;<br align="left"/>debug quote_update_direction =&gt; _172;<br align="left"/>debug quote_asset_amount_filled =&gt; _173;<br align="left"/>debug quote_asset_amount_delta =&gt; _179;<br align="left"/>debug residual =&gt; _185;<br align="left"/>debug val =&gt; _188;<br align="left"/>debug quote_asset_amount_delta =&gt; _191;<br align="left"/>debug residual =&gt; _197;<br align="left"/>debug val =&gt; _200;<br align="left"/>>;
    bb0__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_215 = const false<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;((*_1).1: state::fulfillment_params::openbook_v2::OpenbookV2Context&lt;'_, '_&gt;)<br/></td></tr><tr><td align="left">_8 = OpenbookV2Context::&lt;'_, '_&gt;::load_openbook_v2_market(move _9)</td></tr></table>>];
    bb1__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;openbook_v2_light::Market, error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb2__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_10 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = ((_7 as Continue).0: openbook_v2_light::Market)<br/>_6 = _14<br/>StorageDead(_14)<br/>StorageDead(_7)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _4<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = (_6.18: i64)<br/>_19 = move _20 as u64 (IntToInt)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_17 = calculate_serum_max_coin_qty(move _18, move _19)</td></tr></table>>];
    bb4__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>_11 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_13)<br/>_13 = _11<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _13)</td></tr></table>>];
    bb6__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>StorageDead(_11)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">_16 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _17)</td></tr></table>>];
    bb8__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>_21 = discriminant(_16)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_25)<br/>_25 = ((_16 as Continue).0: u64)<br/>_15 = _25<br/>StorageDead(_25)<br/>StorageDead(_16)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_29 = _3<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>_31 = (_6.17: i64)<br/>_30 = move _31 as u64 (IntToInt)<br/>StorageDead(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>_33 = (_6.1: u8)<br/>_32 = move _33 as u32 (IntToInt)<br/>StorageDead(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = (_6.18: i64)<br/>_34 = move _35 as u64 (IntToInt)<br/>StorageDead(_35)<br/>StorageLive(_36)<br/>_36 = _2<br/></td></tr><tr><td align="left">_28 = calculate_serum_limit_price(move _29, move _30, move _32, move _34, move _36)</td></tr></table>>];
    bb10__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_22)<br/>_22 = ((_16 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_24)<br/>_24 = _22<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _24)</td></tr></table>>];
    bb11__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_30)<br/>StorageDead(_29)<br/></td></tr><tr><td align="left">_27 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _28)</td></tr></table>>];
    bb13__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>_37 = discriminant(_27)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb14__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_27 as Continue).0: u64)<br/>_26 = _41<br/>StorageDead(_41)<br/>StorageDead(_27)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = (_6.17: i64)<br/>_50 = move _51 as u64 (IntToInt)<br/>StorageDead(_51)<br/>StorageLive(_52)<br/>_52 = _26<br/></td></tr><tr><td align="left">_49 = &lt;u64 as SafeMath&gt;::safe_mul(move _50, move _52)</td></tr></table>>];
    bb15__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_27 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb16__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_27)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb18__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_53 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb19__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_57)<br/>_57 = ((_48 as Continue).0: u64)<br/>_47 = _57<br/>StorageDead(_57)<br/>StorageLive(_58)<br/>_58 = _15<br/></td></tr><tr><td align="left">_46 = &lt;u64 as SafeMath&gt;::safe_mul(move _47, move _58)</td></tr></table>>];
    bb20__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_54)<br/>_54 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_56)<br/>_56 = _54<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _56)</td></tr></table>>];
    bb21__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_54)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">_45 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _46)</td></tr></table>>];
    bb23__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/>_59 = discriminant(_45)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb24__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_45 as Continue).0: u64)<br/>_44 = _63<br/>StorageDead(_63)<br/>StorageLive(_64)<br/>_64 = _5<br/></td></tr><tr><td align="left">_43 = &lt;u64 as Ord&gt;::min(move _44, move _64)</td></tr></table>>];
    bb25__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_45 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb26__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_64)<br/>StorageDead(_44)<br/>_42 = move _43 as i64 (IntToInt)<br/>StorageDead(_43)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>_67 = _4<br/>_66 = move _67 as i64 (IntToInt)<br/>StorageDead(_67)<br/>StorageLive(_68)<br/>_68 = (_6.18: i64)<br/>_69 = Eq(_68, const 0_i64)<br/></td></tr><tr><td align="left">assert(!move _69, &quot;attempt to divide `{}` by zero&quot;, _66)</td></tr></table>>];
    bb28__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_70 = Eq(_68, const -1_i64)<br/>_71 = Eq(_66, const i64::MIN)<br/>_72 = BitAnd(move _70, move _71)<br/></td></tr><tr><td align="left">assert(!move _72, &quot;attempt to compute `{} / {}`, which would overflow&quot;, _66, _68)</td></tr></table>>];
    bb29__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">_65 = Div(move _66, move _68)<br/>StorageDead(_68)<br/>StorageDead(_66)<br/>StorageLive(_73)<br/>_74 = discriminant(_2)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb30__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">_73 = openbook_v2_light::Side::Ask<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb31__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_73 = openbook_v2_light::Side::Bid<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_75)<br/>StorageLive(_76)<br/>_76 = move _73<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _26<br/>_77 = move _78 as i64 (IntToInt)<br/>StorageDead(_78)<br/>StorageLive(_79)<br/>_79 = _65<br/>StorageLive(_80)<br/>_80 = _42<br/>StorageLive(_81)<br/>_81 = openbook_v2_light::PlaceOrderType::Market<br/>_75 = openbook_v2_light::instruction::PlaceTakeOrder { side: move _76, price_lots: move _77, max_base_lots: move _79, max_quote_lots_including_fees: move _80, order_type: move _81, limit: const 20_u8 }<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;_75<br/>_215 = const true<br/></td></tr><tr><td align="left">_82 = &lt;openbook_v2_light::instruction::PlaceTakeOrder as anchor_lang::InstructionData&gt;::data(move _83)</td></tr></table>>];
    bb33__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_209 = deref_copy ((*_1).8: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_216 = (((_209.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_88 = &amp;(*_216)<br/></td></tr><tr><td align="left">_87 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _88)</td></tr></table>>];
    bb34__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">_86 = &amp;(*_87)<br/></td></tr><tr><td align="left">_85 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _86)</td></tr></table>>];
    bb35__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>_84 = ((*_85).2: u64)<br/>StorageDead(_87)<br/>StorageDead(_85)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_210 = deref_copy ((*_1).9: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_217 = (((_210.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_93 = &amp;(*_217)<br/></td></tr><tr><td align="left">_92 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _93)</td></tr></table>>];
    bb36__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_91 = &amp;(*_92)<br/></td></tr><tr><td align="left">_90 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _91)</td></tr></table>>];
    bb37__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>_89 = ((*_90).2: u64)<br/>StorageDead(_92)<br/>StorageDead(_90)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>_97 = &amp;(*_1)<br/>StorageLive(_98)<br/>_215 = const false<br/>_98 = move _82<br/></td></tr><tr><td align="left">_96 = OpenbookV2FulfillmentParams::&lt;'_, '_&gt;::invoke_new_order(move _97, move _98)</td></tr></table>>];
    bb38__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_98)<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_95 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _96)</td></tr></table>>];
    bb39__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>_99 = discriminant(_95)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb40__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_95 as Continue).0: ())<br/>_94 = _103<br/>StorageDead(_103)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_211 = deref_copy ((*_1).8: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_218 = (((_211.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_108 = &amp;mut (*_218)<br/></td></tr><tr><td align="left">_107 = anchor_lang::prelude::Account::&lt;'_, anchor_spl::token::TokenAccount&gt;::reload(move _108)</td></tr></table>>];
    bb41__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_95 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb42__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageLive(_109)<br/>_109 = {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:375:49: 375:53}<br/></td></tr><tr><td align="left">_106 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:375:49: 375:53}&gt;(move _107, move _109)</td></tr></table>>];
    bb44__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb45__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_110 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _110)</td></tr></table>>];
    bb46__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_114)<br/>_114 = ((_105 as Continue).0: ())<br/>_104 = _114<br/>StorageDead(_114)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_115)<br/>StorageLive(_116)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_212 = deref_copy ((*_1).9: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_219 = (((_212.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_119 = &amp;mut (*_219)<br/></td></tr><tr><td align="left">_118 = anchor_lang::prelude::Account::&lt;'_, anchor_spl::token::TokenAccount&gt;::reload(move _119)</td></tr></table>>];
    bb47__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_111)<br/>_111 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_113)<br/>_113 = _111<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _113)</td></tr></table>>];
    bb48__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_113)<br/>StorageDead(_111)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageLive(_120)<br/>_120 = {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:379:50: 379:54}<br/></td></tr><tr><td align="left">_117 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/state/fulfillment_params/openbook_v2.rs:379:50: 379:54}&gt;(move _118, move _120)</td></tr></table>>];
    bb50__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_120)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">_116 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _117)</td></tr></table>>];
    bb51__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_117)<br/>_121 = discriminant(_116)<br/></td></tr><tr><td align="left">switchInt(move _121)</td></tr></table>>];
    bb52__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = ((_116 as Continue).0: ())<br/>_115 = _125<br/>StorageDead(_125)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_213 = deref_copy ((*_1).8: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_220 = (((_213.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_130 = &amp;(*_220)<br/></td></tr><tr><td align="left">_129 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _130)</td></tr></table>>];
    bb53__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_122)<br/>_122 = ((_116 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_124)<br/>_124 = _122<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _124)</td></tr></table>>];
    bb54__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_124)<br/>StorageDead(_122)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">_128 = &amp;(*_129)<br/></td></tr><tr><td align="left">_127 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _128)</td></tr></table>>];
    bb56__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_130)<br/>StorageDead(_128)<br/>_126 = ((*_127).2: u64)<br/>StorageDead(_129)<br/>StorageDead(_127)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_214 = deref_copy ((*_1).9: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;)<br/>_221 = (((_214.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt;)<br/>_135 = &amp;(*_221)<br/></td></tr><tr><td align="left">_134 = &lt;anchor_lang::prelude::Account&lt;'_, anchor_spl::token::TokenAccount&gt; as Deref&gt;::deref(move _135)</td></tr></table>>];
    bb57__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">_133 = &amp;(*_134)<br/></td></tr><tr><td align="left">_132 = &lt;anchor_spl::token::TokenAccount as Deref&gt;::deref(move _133)</td></tr></table>>];
    bb58__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/>_131 = ((*_132).2: u64)<br/>StorageDead(_134)<br/>StorageDead(_132)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>_140 = _126<br/>StorageLive(_141)<br/>_141 = _84<br/>_139 = Gt(move _140, move _141)<br/></td></tr><tr><td align="left">switchInt(move _139)</td></tr></table>>];
    bb59__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_140)<br/>StorageLive(_142)<br/>_142 = SpotBalanceType::Deposit<br/>StorageLive(_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>StorageLive(_146)<br/>_146 = _126<br/>StorageLive(_147)<br/>_147 = _84<br/></td></tr><tr><td align="left">_145 = &lt;u64 as SafeMath&gt;::safe_sub(move _146, move _147)</td></tr></table>>];
    bb60__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_146)<br/></td></tr><tr><td align="left">_144 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _145)</td></tr></table>>];
    bb61__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_145)<br/>_148 = discriminant(_144)<br/></td></tr><tr><td align="left">switchInt(move _148)</td></tr></table>>];
    bb62__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageLive(_152)<br/>_152 = ((_144 as Continue).0: u64)<br/>_143 = _152<br/>StorageDead(_152)<br/>_138 = (move _142, move _143)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_149)<br/>_149 = ((_144 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_151)<br/>_151 = _149<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _151)</td></tr></table>>];
    bb64__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_149)<br/>StorageDead(_143)<br/>StorageDead(_142)<br/>StorageDead(_144)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>StorageDead(_140)<br/>StorageLive(_153)<br/>_153 = SpotBalanceType::Borrow<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = _84<br/>StorageLive(_158)<br/>_158 = _126<br/></td></tr><tr><td align="left">_156 = &lt;u64 as SafeMath&gt;::safe_sub(move _157, move _158)</td></tr></table>>];
    bb66__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb67__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_159 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _159)</td></tr></table>>];
    bb68__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_163)<br/>_163 = ((_155 as Continue).0: u64)<br/>_154 = _163<br/>StorageDead(_163)<br/>_138 = (move _153, move _154)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb69__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageLive(_160)<br/>_160 = ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_162)<br/>_162 = _160<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _162)</td></tr></table>>];
    bb70__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>StorageDead(_160)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb71__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageLive(_136)<br/>_136 = (_138.0: state::spot_market::SpotBalanceType)<br/>StorageLive(_137)<br/>_137 = (_138.1: u64)<br/>StorageDead(_138)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>_166 = _137<br/>_165 = Eq(move _166, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _165)</td></tr></table>>];
    bb72__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_170 = const &quot;No base filled on openbook v2&quot;<br/>_169 = &amp;(*_170)<br/></td></tr><tr><td align="left">_168 = solana_program::log::sol_log(move _169)</td></tr></table>>];
    bb73__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_169)<br/>StorageDead(_170)<br/>StorageDead(_168)<br/>StorageLive(_171)<br/></td></tr><tr><td align="left">_171 = ExternalSpotFill::empty()</td></tr></table>>];
    bb74__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _171)<br/>StorageDead(_171)<br/>StorageDead(_165)<br/>StorageDead(_164)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb75__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_166)<br/>_164 = const ()<br/>StorageDead(_165)<br/>StorageDead(_164)<br/>StorageLive(_174)<br/>StorageLive(_175)<br/>StorageLive(_176)<br/>_176 = &amp;_136<br/>StorageLive(_177)<br/>_208 = const _<br/>_177 = &amp;(*_208)<br/></td></tr><tr><td align="left">_175 = &lt;SpotBalanceType as PartialEq&gt;::eq(move _176, move _177)</td></tr></table>>];
    bb76__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left">switchInt(move _175)</td></tr></table>>];
    bb77__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_176)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>_182 = _131<br/>StorageLive(_183)<br/>_183 = _89<br/></td></tr><tr><td align="left">_181 = &lt;u64 as SafeMath&gt;::safe_sub(move _182, move _183)</td></tr></table>>];
    bb78__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _181)</td></tr></table>>];
    bb79__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_184 = discriminant(_180)<br/></td></tr><tr><td align="left">switchInt(move _184)</td></tr></table>>];
    bb80__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageLive(_188)<br/>_188 = ((_180 as Continue).0: u64)<br/>_179 = _188<br/>StorageDead(_188)<br/>StorageDead(_180)<br/>StorageLive(_189)<br/>_189 = SpotBalanceType::Deposit<br/>StorageLive(_190)<br/>_190 = _179<br/>_174 = (move _189, move _190)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageLive(_185)<br/>_185 = ((_180 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_187)<br/>_187 = _185<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _187)</td></tr></table>>];
    bb82__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_185)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_176)<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = _89<br/>StorageLive(_195)<br/>_195 = _131<br/></td></tr><tr><td align="left">_193 = &lt;u64 as SafeMath&gt;::safe_sub(move _194, move _195)</td></tr></table>>];
    bb84__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">_192 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _193)</td></tr></table>>];
    bb85__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>_196 = discriminant(_192)<br/></td></tr><tr><td align="left">switchInt(move _196)</td></tr></table>>];
    bb86__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageLive(_200)<br/>_200 = ((_192 as Continue).0: u64)<br/>_191 = _200<br/>StorageDead(_200)<br/>StorageDead(_192)<br/>StorageLive(_201)<br/>_201 = SpotBalanceType::Borrow<br/>StorageLive(_202)<br/>_202 = _191<br/>_174 = (move _201, move _202)<br/>StorageDead(_202)<br/>StorageDead(_201)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageLive(_197)<br/>_197 = ((_192 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_199)<br/>_199 = _197<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;ExternalSpotFill, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _199)</td></tr></table>>];
    bb88__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_192)<br/>StorageDead(_191)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb89__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageLive(_172)<br/>_172 = (_174.0: state::spot_market::SpotBalanceType)<br/>StorageLive(_173)<br/>_173 = (_174.1: u64)<br/>StorageDead(_174)<br/>StorageLive(_203)<br/>StorageLive(_204)<br/>_204 = _137<br/>StorageLive(_205)<br/>_205 = _173<br/>StorageLive(_206)<br/>_206 = _136<br/>StorageLive(_207)<br/>_207 = _172<br/>_203 = ExternalSpotFill { base_asset_amount_filled: move _204, base_update_direction: move _206, quote_asset_amount_filled: move _205, quote_update_direction: move _207, settled_referrer_rebate: const 0_u64, unsettled_referrer_rebate: const 0_u64, fee: const 0_u64 }<br/>StorageDead(_207)<br/>StorageDead(_206)<br/>StorageDead(_205)<br/>StorageDead(_204)<br/>_0 = std::result::Result::&lt;ExternalSpotFill, error::ErrorCode&gt;::Ok(move _203)<br/>StorageDead(_203)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageDead(_137)<br/>StorageDead(_136)<br/>StorageDead(_131)<br/>StorageDead(_126)<br/>StorageDead(_89)<br/>StorageDead(_84)<br/>_215 = const false<br/>StorageDead(_82)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_65)<br/>StorageDead(_42)<br/>StorageDead(_26)<br/>StorageDead(_15)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb90__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_174)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_136)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb92__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_139)<br/>StorageDead(_138)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb93__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb94__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_84)<br/>_215 = const false<br/>StorageDead(_82)<br/>StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_48)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb96__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb98__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb99__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb100__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left">return</td></tr></table>>];
    bb101__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">101 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb102__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">102 (cleanup)</td></tr><tr><td align="left">drop(_82)</td></tr></table>>];
    bb103__0_3063 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">103 (cleanup)</td></tr><tr><td align="left">switchInt(_215)</td></tr></table>>];
    bb0__0_3063 -> bb1__0_3063 [label="return"];
    bb1__0_3063 -> bb2__0_3063 [label="return"];
    bb2__0_3063 -> bb3__0_3063 [label="0"];
    bb2__0_3063 -> bb5__0_3063 [label="1"];
    bb2__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb3__0_3063 -> bb7__0_3063 [label="return"];
    bb5__0_3063 -> bb6__0_3063 [label="return"];
    bb6__0_3063 -> bb99__0_3063 [label=""];
    bb7__0_3063 -> bb8__0_3063 [label="return"];
    bb8__0_3063 -> bb9__0_3063 [label="0"];
    bb8__0_3063 -> bb10__0_3063 [label="1"];
    bb8__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb9__0_3063 -> bb12__0_3063 [label="return"];
    bb10__0_3063 -> bb11__0_3063 [label="return"];
    bb11__0_3063 -> bb98__0_3063 [label=""];
    bb12__0_3063 -> bb13__0_3063 [label="return"];
    bb13__0_3063 -> bb14__0_3063 [label="0"];
    bb13__0_3063 -> bb15__0_3063 [label="1"];
    bb13__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb14__0_3063 -> bb17__0_3063 [label="return"];
    bb15__0_3063 -> bb16__0_3063 [label="return"];
    bb16__0_3063 -> bb97__0_3063 [label=""];
    bb17__0_3063 -> bb18__0_3063 [label="return"];
    bb18__0_3063 -> bb19__0_3063 [label="0"];
    bb18__0_3063 -> bb20__0_3063 [label="1"];
    bb18__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb19__0_3063 -> bb22__0_3063 [label="return"];
    bb20__0_3063 -> bb21__0_3063 [label="return"];
    bb21__0_3063 -> bb95__0_3063 [label=""];
    bb22__0_3063 -> bb23__0_3063 [label="return"];
    bb23__0_3063 -> bb24__0_3063 [label="0"];
    bb23__0_3063 -> bb25__0_3063 [label="1"];
    bb23__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb24__0_3063 -> bb27__0_3063 [label="return"];
    bb25__0_3063 -> bb26__0_3063 [label="return"];
    bb26__0_3063 -> bb95__0_3063 [label=""];
    bb27__0_3063 -> bb28__0_3063 [label="success"];
    bb28__0_3063 -> bb29__0_3063 [label="success"];
    bb29__0_3063 -> bb31__0_3063 [label="0"];
    bb29__0_3063 -> bb30__0_3063 [label="1"];
    bb29__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb30__0_3063 -> bb32__0_3063 [label=""];
    bb31__0_3063 -> bb32__0_3063 [label=""];
    bb32__0_3063 -> bb33__0_3063 [label="return"];
    bb33__0_3063 -> bb34__0_3063 [label="return"];
    bb33__0_3063 -> bb103__0_3063 [label="unwind"];
    bb34__0_3063 -> bb35__0_3063 [label="return"];
    bb34__0_3063 -> bb103__0_3063 [label="unwind"];
    bb35__0_3063 -> bb36__0_3063 [label="return"];
    bb35__0_3063 -> bb103__0_3063 [label="unwind"];
    bb36__0_3063 -> bb37__0_3063 [label="return"];
    bb36__0_3063 -> bb103__0_3063 [label="unwind"];
    bb37__0_3063 -> bb38__0_3063 [label="return"];
    bb37__0_3063 -> bb103__0_3063 [label="unwind"];
    bb38__0_3063 -> bb39__0_3063 [label="return"];
    bb38__0_3063 -> bb103__0_3063 [label="unwind"];
    bb39__0_3063 -> bb40__0_3063 [label="0"];
    bb39__0_3063 -> bb41__0_3063 [label="1"];
    bb39__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb40__0_3063 -> bb43__0_3063 [label="return"];
    bb40__0_3063 -> bb103__0_3063 [label="unwind"];
    bb41__0_3063 -> bb42__0_3063 [label="return"];
    bb41__0_3063 -> bb103__0_3063 [label="unwind"];
    bb42__0_3063 -> bb94__0_3063 [label=""];
    bb43__0_3063 -> bb44__0_3063 [label="return"];
    bb43__0_3063 -> bb103__0_3063 [label="unwind"];
    bb44__0_3063 -> bb45__0_3063 [label="return"];
    bb44__0_3063 -> bb103__0_3063 [label="unwind"];
    bb45__0_3063 -> bb46__0_3063 [label="0"];
    bb45__0_3063 -> bb47__0_3063 [label="1"];
    bb45__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb46__0_3063 -> bb49__0_3063 [label="return"];
    bb46__0_3063 -> bb103__0_3063 [label="unwind"];
    bb47__0_3063 -> bb48__0_3063 [label="return"];
    bb47__0_3063 -> bb103__0_3063 [label="unwind"];
    bb48__0_3063 -> bb94__0_3063 [label=""];
    bb49__0_3063 -> bb50__0_3063 [label="return"];
    bb49__0_3063 -> bb103__0_3063 [label="unwind"];
    bb50__0_3063 -> bb51__0_3063 [label="return"];
    bb50__0_3063 -> bb103__0_3063 [label="unwind"];
    bb51__0_3063 -> bb52__0_3063 [label="0"];
    bb51__0_3063 -> bb53__0_3063 [label="1"];
    bb51__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb52__0_3063 -> bb55__0_3063 [label="return"];
    bb52__0_3063 -> bb103__0_3063 [label="unwind"];
    bb53__0_3063 -> bb54__0_3063 [label="return"];
    bb53__0_3063 -> bb103__0_3063 [label="unwind"];
    bb54__0_3063 -> bb94__0_3063 [label=""];
    bb55__0_3063 -> bb56__0_3063 [label="return"];
    bb55__0_3063 -> bb103__0_3063 [label="unwind"];
    bb56__0_3063 -> bb57__0_3063 [label="return"];
    bb56__0_3063 -> bb103__0_3063 [label="unwind"];
    bb57__0_3063 -> bb58__0_3063 [label="return"];
    bb57__0_3063 -> bb103__0_3063 [label="unwind"];
    bb58__0_3063 -> bb65__0_3063 [label="0"];
    bb58__0_3063 -> bb59__0_3063 [label="otherwise"];
    bb59__0_3063 -> bb60__0_3063 [label="return"];
    bb59__0_3063 -> bb103__0_3063 [label="unwind"];
    bb60__0_3063 -> bb61__0_3063 [label="return"];
    bb60__0_3063 -> bb103__0_3063 [label="unwind"];
    bb61__0_3063 -> bb62__0_3063 [label="0"];
    bb61__0_3063 -> bb63__0_3063 [label="1"];
    bb61__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb62__0_3063 -> bb71__0_3063 [label=""];
    bb63__0_3063 -> bb64__0_3063 [label="return"];
    bb63__0_3063 -> bb103__0_3063 [label="unwind"];
    bb64__0_3063 -> bb92__0_3063 [label=""];
    bb65__0_3063 -> bb66__0_3063 [label="return"];
    bb65__0_3063 -> bb103__0_3063 [label="unwind"];
    bb66__0_3063 -> bb67__0_3063 [label="return"];
    bb66__0_3063 -> bb103__0_3063 [label="unwind"];
    bb67__0_3063 -> bb68__0_3063 [label="0"];
    bb67__0_3063 -> bb69__0_3063 [label="1"];
    bb67__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb68__0_3063 -> bb71__0_3063 [label=""];
    bb69__0_3063 -> bb70__0_3063 [label="return"];
    bb69__0_3063 -> bb103__0_3063 [label="unwind"];
    bb70__0_3063 -> bb92__0_3063 [label=""];
    bb71__0_3063 -> bb75__0_3063 [label="0"];
    bb71__0_3063 -> bb72__0_3063 [label="otherwise"];
    bb72__0_3063 -> bb73__0_3063 [label="return"];
    bb72__0_3063 -> bb103__0_3063 [label="unwind"];
    bb73__0_3063 -> bb74__0_3063 [label="return"];
    bb73__0_3063 -> bb103__0_3063 [label="unwind"];
    bb74__0_3063 -> bb91__0_3063 [label=""];
    bb75__0_3063 -> bb76__0_3063 [label="return"];
    bb75__0_3063 -> bb103__0_3063 [label="unwind"];
    bb76__0_3063 -> bb83__0_3063 [label="0"];
    bb76__0_3063 -> bb77__0_3063 [label="otherwise"];
    bb77__0_3063 -> bb78__0_3063 [label="return"];
    bb77__0_3063 -> bb103__0_3063 [label="unwind"];
    bb78__0_3063 -> bb79__0_3063 [label="return"];
    bb78__0_3063 -> bb103__0_3063 [label="unwind"];
    bb79__0_3063 -> bb80__0_3063 [label="0"];
    bb79__0_3063 -> bb81__0_3063 [label="1"];
    bb79__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb80__0_3063 -> bb89__0_3063 [label=""];
    bb81__0_3063 -> bb82__0_3063 [label="return"];
    bb81__0_3063 -> bb103__0_3063 [label="unwind"];
    bb82__0_3063 -> bb90__0_3063 [label=""];
    bb83__0_3063 -> bb84__0_3063 [label="return"];
    bb83__0_3063 -> bb103__0_3063 [label="unwind"];
    bb84__0_3063 -> bb85__0_3063 [label="return"];
    bb84__0_3063 -> bb103__0_3063 [label="unwind"];
    bb85__0_3063 -> bb86__0_3063 [label="0"];
    bb85__0_3063 -> bb87__0_3063 [label="1"];
    bb85__0_3063 -> bb4__0_3063 [label="otherwise"];
    bb86__0_3063 -> bb89__0_3063 [label=""];
    bb87__0_3063 -> bb88__0_3063 [label="return"];
    bb87__0_3063 -> bb103__0_3063 [label="unwind"];
    bb88__0_3063 -> bb90__0_3063 [label=""];
    bb89__0_3063 -> bb100__0_3063 [label=""];
    bb90__0_3063 -> bb91__0_3063 [label=""];
    bb91__0_3063 -> bb93__0_3063 [label=""];
    bb92__0_3063 -> bb93__0_3063 [label=""];
    bb93__0_3063 -> bb94__0_3063 [label=""];
    bb94__0_3063 -> bb96__0_3063 [label=""];
    bb95__0_3063 -> bb96__0_3063 [label=""];
    bb96__0_3063 -> bb97__0_3063 [label=""];
    bb97__0_3063 -> bb98__0_3063 [label=""];
    bb98__0_3063 -> bb99__0_3063 [label=""];
    bb99__0_3063 -> bb100__0_3063 [label=""];
    bb102__0_3063 -> bb101__0_3063 [label="return"];
    bb103__0_3063 -> bb101__0_3063 [label="0"];
    bb103__0_3063 -> bb102__0_3063 [label="otherwise"];
}
