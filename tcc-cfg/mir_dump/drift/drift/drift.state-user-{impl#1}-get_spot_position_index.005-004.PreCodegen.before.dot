digraph Mir_0_4278 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn User::get_spot_position_index(_1: &amp;ReErased state::user::User, _2: u16) -&gt; std::result::Result&lt;usize, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: u16;<br align="left"/>let mut _6: !;<br align="left"/>let _7: ();<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _9: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _10: bool;<br align="left"/>let mut _11: u16;<br align="left"/>let _12: usize;<br align="left"/>let mut _13: usize;<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: ();<br align="left"/>let _16: error::ErrorCode;<br align="left"/>let _17: ();<br align="left"/>let mut _18: &amp;ReErased str;<br align="left"/>let _19: &amp;ReErased str;<br align="left"/>let mut _20: &amp;ReErased std::string::String;<br align="left"/>let _21: &amp;ReErased std::string::String;<br align="left"/>let _22: std::string::String;<br align="left"/>let _23: std::string::String;<br align="left"/>let mut _24: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _26: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _27: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _28: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _29: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _30: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _31: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _32: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _33: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _34: &amp;ReErased error::ErrorCode;<br align="left"/>let _35: &amp;ReErased error::ErrorCode;<br align="left"/>let _36: ();<br align="left"/>let mut _37: &amp;ReErased str;<br align="left"/>let _38: &amp;ReErased str;<br align="left"/>let mut _39: error::ErrorCode;<br align="left"/>let mut _40: isize;<br align="left"/>let _41: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _42: !;<br align="left"/>let mut _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _44: ();<br align="left"/>let mut _45: std::option::Option&lt;usize&gt;;<br align="left"/>let mut _46: &amp;ReErased mut std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _47: std::slice::Iter&lt;ReErased, state::user::SpotPosition&gt;;<br align="left"/>let mut _48: &amp;ReErased [state::user::SpotPosition];<br align="left"/>let mut _49: &amp;ReErased [state::user::SpotPosition; 8_usize];<br align="left"/>let mut _50: Closure(DefId(0:4279 ~ drift[d311]::state::user::{impl#1}::get_spot_position_index::{closure#0}), [i16, Binder(extern &quot;RustCall&quot; fn((&amp;ReErased state::user::SpotPosition,)) -&gt; bool, []), (&amp;ReErased u16,)]);<br align="left"/>let mut _51: &amp;ReErased u16;<br align="left"/>let mut _52: error::ErrorCode;<br align="left"/>let mut _53: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug self =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug error_code =&gt; _16;<br align="left"/>debug res =&gt; _23;<br align="left"/>debug residual =&gt; _41;<br align="left"/>debug val =&gt; _44;<br align="left"/>>;
    bb0__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_5 = _2<br/>_4 = Eq(move _5, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb1__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = const 0_usize<br/>_13 = Len(((*_1).3: [state::user::SpotPosition; 8]))<br/>_14 = Lt(_12, _13)<br/></td></tr><tr><td align="left">assert(move _14, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _13, _12)</td></tr></table>>];
    bb2__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_11 = (((*_1).3: [state::user::SpotPosition; 8])[_12].4: u16)<br/>_10 = Eq(move _11, const 0_u16)<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb3__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_15)<br/>_15 = ()<br/>_9 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _15)<br/>StorageDead(_15)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_16)<br/>_16 = error::ErrorCode::DefaultError<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_53 = const _<br/>_27 = &amp;(*_53)<br/>_26 = &amp;(*_27)<br/>_25 = move _26 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_26)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;_16<br/>_34 = &amp;(*_35)<br/></td></tr><tr><td align="left">_33 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _34)</td></tr></table>>];
    bb5__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_32 = [move _33]<br/>StorageDead(_33)<br/>_31 = &amp;_32<br/>_30 = &amp;(*_31)<br/>_29 = move _30 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_30)<br/></td></tr><tr><td align="left">_24 = Arguments::&lt;'_&gt;::new_v1(move _25, move _29)</td></tr></table>>];
    bb6__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">_23 = format(move _24)</td></tr></table>>];
    bb7__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_35)<br/>StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>_22 = move _23<br/>StorageDead(_23)<br/>_21 = &amp;_22<br/>_20 = &amp;(*_21)<br/></td></tr><tr><td align="left">_19 = &lt;String as Deref&gt;::deref(move _20)</td></tr></table>>];
    bb8__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_18 = &amp;(*_19)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_17 = solana_program::log::sol_log(move _18)</td></tr></table>>];
    bb9__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/></td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb10__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_19)<br/>StorageDead(_17)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>_38 = const &quot;User position 0 not market_index=0&quot;<br/>_37 = &amp;(*_38)<br/></td></tr><tr><td align="left">_36 = solana_program::log::sol_log(move _37)</td></tr></table>>];
    bb11__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_38)<br/>StorageDead(_36)<br/>StorageLive(_39)<br/>_39 = _16<br/>_9 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _39)<br/>StorageDead(_39)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb13__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_40 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _40)</td></tr></table>>];
    bb14__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_44)<br/>_44 = ((_8 as Continue).0: ())<br/>_7 = _44<br/>StorageDead(_44)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>_0 = std::result::Result::&lt;usize, error::ErrorCode&gt;::Ok(const 0_usize)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb16__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_43)<br/>_43 = _41<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;usize, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _43)</td></tr></table>>];
    bb17__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_43)<br/>StorageDead(_41)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>_49 = &amp;((*_1).3: [state::user::SpotPosition; 8])<br/>_48 = move _49 as &amp;[state::user::SpotPosition] (PointerCoercion(Unsize))<br/>StorageDead(_49)<br/></td></tr><tr><td align="left">_47 = core::slice::&lt;impl [SpotPosition]&gt;::iter(move _48)</td></tr></table>>];
    bb19__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_46 = &amp;mut _47<br/>StorageDead(_48)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>_51 = &amp;_2<br/>_50 = {closure@programs/drift/src/state/user.rs:178:23: 178:38} { market_index: move _51 }<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">_45 = &lt;std::slice::Iter&lt;'_, SpotPosition&gt; as Iterator&gt;::position::&lt;{closure@programs/drift/src/state/user.rs:178:23: 178:38}&gt;(move _46, move _50)</td></tr></table>>];
    bb20__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_46)<br/>StorageLive(_52)<br/>_52 = error::ErrorCode::CouldNotFindSpotPosition<br/></td></tr><tr><td align="left">_0 = Option::&lt;usize&gt;::ok_or::&lt;error::ErrorCode&gt;(move _45, move _52)</td></tr></table>>];
    bb21__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_45)<br/>StorageDead(_47)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left">return</td></tr></table>>];
    bb24__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_22)</td></tr></table>>];
    bb25__0_4278 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_4278 -> bb18__0_4278 [label="0"];
    bb0__0_4278 -> bb1__0_4278 [label="otherwise"];
    bb1__0_4278 -> bb2__0_4278 [label="success"];
    bb2__0_4278 -> bb4__0_4278 [label="0"];
    bb2__0_4278 -> bb3__0_4278 [label="otherwise"];
    bb3__0_4278 -> bb12__0_4278 [label=""];
    bb4__0_4278 -> bb5__0_4278 [label="return"];
    bb5__0_4278 -> bb6__0_4278 [label="return"];
    bb6__0_4278 -> bb7__0_4278 [label="return"];
    bb7__0_4278 -> bb8__0_4278 [label="return"];
    bb7__0_4278 -> bb24__0_4278 [label="unwind"];
    bb8__0_4278 -> bb9__0_4278 [label="return"];
    bb8__0_4278 -> bb24__0_4278 [label="unwind"];
    bb9__0_4278 -> bb10__0_4278 [label="return"];
    bb9__0_4278 -> bb25__0_4278 [label="unwind"];
    bb10__0_4278 -> bb11__0_4278 [label="return"];
    bb11__0_4278 -> bb12__0_4278 [label=""];
    bb12__0_4278 -> bb13__0_4278 [label="return"];
    bb13__0_4278 -> bb14__0_4278 [label="0"];
    bb13__0_4278 -> bb16__0_4278 [label="1"];
    bb13__0_4278 -> bb15__0_4278 [label="otherwise"];
    bb14__0_4278 -> bb22__0_4278 [label=""];
    bb16__0_4278 -> bb17__0_4278 [label="return"];
    bb17__0_4278 -> bb22__0_4278 [label=""];
    bb18__0_4278 -> bb19__0_4278 [label="return"];
    bb19__0_4278 -> bb20__0_4278 [label="return"];
    bb20__0_4278 -> bb21__0_4278 [label="return"];
    bb21__0_4278 -> bb23__0_4278 [label=""];
    bb22__0_4278 -> bb23__0_4278 [label=""];
    bb24__0_4278 -> bb25__0_4278 [label="return"];
}
