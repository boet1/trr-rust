// MIR for `state::user::<impl at programs/drift/src/state/user.rs:657:34: 657:39>::fmt` before PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:657:34: 657:39>::fmt(_1: &UserFees, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let _3: &[&str; 6];
    let _4: &[&str; 6];
    let _5: [&str; 6];
    let mut _6: &str;
    let _7: &str;
    let mut _8: &str;
    let _9: &str;
    let mut _10: &str;
    let _11: &str;
    let mut _12: &str;
    let _13: &str;
    let mut _14: &str;
    let _15: &str;
    let mut _17: &[&dyn std::fmt::Debug; 6];
    let _18: &[&dyn std::fmt::Debug; 6];
    let _19: [&dyn std::fmt::Debug; 6];
    let mut _20: &dyn std::fmt::Debug;
    let mut _21: &u64;
    let _22: &u64;
    let mut _23: &dyn std::fmt::Debug;
    let mut _24: &u64;
    let _25: &u64;
    let mut _26: &dyn std::fmt::Debug;
    let mut _27: &u64;
    let _28: &u64;
    let mut _29: &dyn std::fmt::Debug;
    let mut _30: &u64;
    let _31: &u64;
    let mut _32: &dyn std::fmt::Debug;
    let mut _33: &u64;
    let _34: &u64;
    let mut _35: &dyn std::fmt::Debug;
    let mut _36: &&u64;
    let _37: &&u64;
    let _38: &u64;
    let mut _39: &mut std::fmt::Formatter<'_>;
    let mut _40: &str;
    let _41: &str;
    let mut _42: &[&str];
    let mut _43: &[&str; 6];
    let mut _44: &[&dyn std::fmt::Debug];
    let mut _45: &[&str; 6];
    scope 1 {
        debug names => _3;
        let _16: &[&dyn std::fmt::Debug];
        scope 2 {
            debug values => _16;
        }
    }

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _45 = const _;
        _4 = &(*_45);
        _3 = &(*_4);
        StorageDead(_4);
        StorageLive(_16);
        StorageLive(_17);
        StorageLive(_18);
        StorageLive(_19);
        StorageLive(_20);
        StorageLive(_21);
        StorageLive(_22);
        _22 = &((*_1).0: u64);
        _21 = &(*_22);
        _20 = move _21 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_21);
        StorageLive(_23);
        StorageLive(_24);
        StorageLive(_25);
        _25 = &((*_1).1: u64);
        _24 = &(*_25);
        _23 = move _24 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_24);
        StorageLive(_26);
        StorageLive(_27);
        StorageLive(_28);
        _28 = &((*_1).2: u64);
        _27 = &(*_28);
        _26 = move _27 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_27);
        StorageLive(_29);
        StorageLive(_30);
        StorageLive(_31);
        _31 = &((*_1).3: u64);
        _30 = &(*_31);
        _29 = move _30 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_30);
        StorageLive(_32);
        StorageLive(_33);
        StorageLive(_34);
        _34 = &((*_1).4: u64);
        _33 = &(*_34);
        _32 = move _33 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_33);
        StorageLive(_35);
        StorageLive(_36);
        StorageLive(_37);
        StorageLive(_38);
        _38 = &((*_1).5: u64);
        _37 = &_38;
        _36 = &(*_37);
        _35 = move _36 as &dyn std::fmt::Debug (PointerCoercion(Unsize));
        StorageDead(_36);
        _19 = [move _20, move _23, move _26, move _29, move _32, move _35];
        StorageDead(_35);
        StorageDead(_32);
        StorageDead(_29);
        StorageDead(_26);
        StorageDead(_23);
        StorageDead(_20);
        _18 = &_19;
        _17 = &(*_18);
        _16 = move _17 as &[&dyn std::fmt::Debug] (PointerCoercion(Unsize));
        StorageDead(_17);
        StorageDead(_37);
        StorageDead(_34);
        StorageDead(_31);
        StorageDead(_28);
        StorageDead(_25);
        StorageDead(_22);
        StorageDead(_18);
        StorageLive(_39);
        _39 = &mut (*_2);
        StorageLive(_40);
        StorageLive(_41);
        _41 = const "UserFees";
        _40 = &(*_41);
        StorageLive(_42);
        StorageLive(_43);
        _43 = &(*_3);
        _42 = move _43 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_43);
        StorageLive(_44);
        _44 = &(*_16);
        _0 = Formatter::<'_>::debug_struct_fields_finish(move _39, move _40, move _42, move _44) -> [return: bb1, unwind continue];
    }

    bb1: {
        StorageDead(_44);
        StorageDead(_42);
        StorageDead(_40);
        StorageDead(_39);
        StorageDead(_38);
        StorageDead(_19);
        StorageDead(_16);
        StorageDead(_3);
        StorageDead(_41);
        return;
    }
}
