digraph Mir_0_23717 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;__idl::IdlAccount as anchor_lang::AccountDeserialize&gt;::try_deserialize_unchecked(_1: &amp;ReErased mut &amp;ReErased [u8]) -&gt; std::result::Result&lt;__private::__idl::IdlAccount, anchor_lang::error::Error&gt;<br align="left"/>let mut _2: &amp;ReErased [u8];<br align="left"/>let _3: &amp;ReErased [u8];<br align="left"/>let _4: &amp;ReErased [u8];<br align="left"/>let mut _5: &amp;ReErased [u8];<br align="left"/>let mut _6: std::ops::RangeFrom&lt;usize&gt;;<br align="left"/>let mut _7: std::result::Result&lt;__private::__idl::IdlAccount, std::io::Error&gt;;<br align="left"/>let mut _8: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _9: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _10: Closure(DefId(0:23718 ~ drift[d311]::__private::__idl::{impl#46}::try_deserialize_unchecked::{closure#0}), [i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _11: &amp;ReErased [u8];<br align="left"/>debug buf =&gt; _1;<br align="left"/>debug data =&gt; _2;<br align="left"/>>;
    bb0__0_23717 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_2)<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>_11 = deref_copy (*_1)<br/>_5 = &amp;(*_11)<br/>StorageLive(_6)<br/>_6 = RangeFrom::&lt;usize&gt; { start: const 8_usize }<br/></td></tr><tr><td align="left">_4 = &lt;[u8] as Index&lt;RangeFrom&lt;usize&gt;&gt;&gt;::index(move _5, move _6)</td></tr></table>>];
    bb1__0_23717 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = &amp;(*_4)<br/>_2 = &amp;(*_3)<br/>StorageDead(_3)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;mut _2<br/>_8 = &amp;mut (*_9)<br/></td></tr><tr><td align="left">_7 = &lt;__idl::IdlAccount as BorshDeserialize&gt;::deserialize(move _8)</td></tr></table>>];
    bb2__0_23717 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_10)<br/>_10 = {closure@programs/drift/src/lib.rs:69:1: 69:11}<br/></td></tr><tr><td align="left">_0 = std::result::Result::&lt;__idl::IdlAccount, std::io::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/lib.rs:69:1: 69:11}&gt;(move _7, move _10)</td></tr></table>>];
    bb3__0_23717 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_2)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb4__0_23717 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">4 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_23717 -> bb1__0_23717 [label="return"];
    bb1__0_23717 -> bb2__0_23717 [label="return"];
    bb2__0_23717 -> bb3__0_23717 [label="return"];
    bb2__0_23717 -> bb4__0_23717 [label="unwind"];
}
