digraph Mir_0_746 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_amm_and_check_validity(_1: &amp;ReErased mut state::perp_market::PerpMarket, _2: &amp;ReErased state::oracle::MMOraclePriceData, _3: &amp;ReErased state::state::State, _4: i64, _5: u64, _6: std::option::Option&lt;math::oracle::DriftAction&gt;) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _7: i128;<br align="left"/>let mut _8: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i128&gt;;<br align="left"/>let mut _9: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _10: &amp;ReErased mut state::perp_market::PerpMarket;<br align="left"/>let mut _11: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _12: &amp;ReErased state::state::State;<br align="left"/>let mut _13: i64;<br align="left"/>let mut _14: u64;<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _19: i128;<br align="left"/>let _20: i64;<br align="left"/>let _21: math::oracle::OracleValidity;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, math::oracle::OracleValidity&gt;;<br align="left"/>let mut _23: std::result::Result&lt;math::oracle::OracleValidity, error::ErrorCode&gt;;<br align="left"/>let mut _24: state::user::MarketType;<br align="left"/>let mut _25: u16;<br align="left"/>let mut _26: i64;<br align="left"/>let mut _27: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _28: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _29: state::oracle::OraclePriceData;<br align="left"/>let mut _30: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _31: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let _32: &amp;ReErased state::state::ValidityGuardRails;<br align="left"/>let mut _33: u64;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _35: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _36: state::perp_market::PerpMarket;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: u64;<br align="left"/>let mut _42: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let _43: &amp;ReErased state::oracle::OracleSource;<br align="left"/>let mut _44: math::oracle::LogMode;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: math::oracle::OracleValidity;<br align="left"/>let _50: ();<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _52: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _53: bool;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, bool&gt;;<br align="left"/>let mut _55: std::result::Result&lt;bool, error::ErrorCode&gt;;<br align="left"/>let mut _56: math::oracle::OracleValidity;<br align="left"/>let mut _57: std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _60: !;<br align="left"/>let mut _61: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _62: bool;<br align="left"/>let mut _63: ();<br align="left"/>let _64: error::ErrorCode;<br align="left"/>let _65: ();<br align="left"/>let mut _66: &amp;ReErased str;<br align="left"/>let _67: &amp;ReErased str;<br align="left"/>let mut _68: &amp;ReErased std::string::String;<br align="left"/>let _69: &amp;ReErased std::string::String;<br align="left"/>let _70: std::string::String;<br align="left"/>let _71: std::string::String;<br align="left"/>let mut _72: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _73: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _74: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _75: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _76: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _77: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _78: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _79: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _80: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _81: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _82: &amp;ReErased error::ErrorCode;<br align="left"/>let _83: &amp;ReErased error::ErrorCode;<br align="left"/>let _84: ();<br align="left"/>let mut _85: &amp;ReErased str;<br align="left"/>let _86: &amp;ReErased str;<br align="left"/>let mut _87: &amp;ReErased std::string::String;<br align="left"/>let _88: &amp;ReErased std::string::String;<br align="left"/>let _89: std::string::String;<br align="left"/>let _90: std::string::String;<br align="left"/>let mut _91: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _92: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _93: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _94: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let _95: [&amp;ReErased str; 4_usize];<br align="left"/>let mut _96: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _97: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _98: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let _99: [core::fmt::rt::Argument&lt;ReErased&gt;; 4_usize];<br align="left"/>let mut _100: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _101: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _102: &amp;ReErased state::oracle::OraclePriceData;<br align="left"/>let _103: state::oracle::OraclePriceData;<br align="left"/>let mut _104: &amp;ReErased state::oracle::MMOraclePriceData;<br align="left"/>let mut _105: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _106: &amp;ReErased i64;<br align="left"/>let _107: &amp;ReErased i64;<br align="left"/>let mut _108: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased u16;<br align="left"/>let _110: &amp;ReErased u16;<br align="left"/>let mut _111: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _112: &amp;ReErased std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let _113: &amp;ReErased std::option::Option&lt;math::oracle::DriftAction&gt;;<br align="left"/>let mut _114: error::ErrorCode;<br align="left"/>let mut _115: isize;<br align="left"/>let _116: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _117: !;<br align="left"/>let mut _118: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _119: ();<br align="left"/>let mut _120: ();<br align="left"/>let mut _121: &amp;ReErased [&amp;ReErased str; 4_usize];<br align="left"/>let mut _122: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>debug market =&gt; _1;<br align="left"/>debug mm_oracle_price_data =&gt; _2;<br align="left"/>debug state =&gt; _3;<br align="left"/>debug now =&gt; _4;<br align="left"/>debug clock_slot =&gt; _5;<br align="left"/>debug action =&gt; _6;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug risk_ema_price =&gt; _20;<br align="left"/>debug oracle_validity =&gt; _21;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug residual =&gt; _59;<br align="left"/>debug val =&gt; _62;<br align="left"/>debug error_code =&gt; _64;<br align="left"/>debug res =&gt; _71;<br align="left"/>debug res =&gt; _90;<br align="left"/>debug residual =&gt; _116;<br align="left"/>debug val =&gt; _119;<br align="left"/>>;
    bb0__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;mut (*_1)<br/>StorageLive(_11)<br/>_11 = &amp;(*_2)<br/>StorageLive(_12)<br/>_12 = &amp;(*_3)<br/>StorageLive(_13)<br/>_13 = _4<br/>StorageLive(_14)<br/>_14 = _5<br/></td></tr><tr><td align="left">_9 = _update_amm(move _10, move _11, move _12, move _13, move _14)</td></tr></table>>];
    bb1__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_13)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_8 = &lt;std::result::Result&lt;i128, error::ErrorCode&gt; as Try&gt;::branch(move _9)</td></tr></table>>];
    bb2__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>_15 = discriminant(_8)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb3__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = ((_8 as Continue).0: i128)<br/>_7 = _19<br/>StorageDead(_19)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/>StorageLive(_20)<br/>_20 = ((((*_1).1: state::perp_market::AMM).1: state::oracle::HistoricalOracleData).3: i64)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = state::user::MarketType::Perp<br/>StorageLive(_25)<br/>_25 = ((*_1).21: u16)<br/>StorageLive(_26)<br/>_26 = _20<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>StorageLive(_30)<br/>_30 = &amp;(*_2)<br/></td></tr><tr><td align="left">_29 = MMOraclePriceData::get_safe_oracle_price_data(move _30)</td></tr></table>>];
    bb4__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_8 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb6__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_8)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>_28 = &amp;_29<br/>_27 = &amp;(*_28)<br/>StorageLive(_31)<br/>StorageLive(_32)<br/>_32 = &amp;(((*_3).7: state::state::OracleGuardRails).1: state::state::ValidityGuardRails)<br/>_31 = &amp;(*_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = (*_1)<br/></td></tr><tr><td align="left">_35 = PerpMarket::get_max_confidence_interval_multiplier(move _36)</td></tr></table>>];
    bb8__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb9__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_37 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb10__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_34 as Continue).0: u64)<br/>_33 = _41<br/>StorageDead(_41)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = &amp;(((*_1).1: state::perp_market::AMM).72: state::oracle::OracleSource)<br/>_42 = &amp;(*_43)<br/>StorageLive(_44)<br/>_44 = LogMode::SafeMMOracle<br/></td></tr><tr><td align="left">_23 = oracle_validity(move _24, move _25, move _26, move _27, move _31, move _33, move _42, move _44, const 0_i8)</td></tr></table>>];
    bb11__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb12__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_42)<br/>StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;OracleValidity, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb14__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_45 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb15__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_22 as Continue).0: math::oracle::OracleValidity)<br/>_21 = _49<br/>StorageDead(_49)<br/>StorageDead(_43)<br/>StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_22)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = _21<br/>StorageLive(_57)<br/>_57 = _6<br/></td></tr><tr><td align="left">_55 = is_oracle_valid_for_action(move _56, move _57)</td></tr></table>>];
    bb16__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb17__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;bool, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb19__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_58 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb20__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_62)<br/>_62 = ((_54 as Continue).0: bool)<br/>_53 = _62<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">switchInt(move _53)</td></tr></table>>];
    bb21__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_59)<br/>_59 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_61)<br/>_61 = _59<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _61)</td></tr></table>>];
    bb22__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_59)<br/>StorageDead(_54)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageLive(_63)<br/>_63 = ()<br/>_52 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _63)<br/>StorageDead(_63)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb24__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>StorageLive(_64)<br/>_64 = error::ErrorCode::InvalidOracle<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_122 = const _<br/>_75 = &amp;(*_122)<br/>_74 = &amp;(*_75)<br/>_73 = move _74 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_74)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_83 = &amp;_64<br/>_82 = &amp;(*_83)<br/></td></tr><tr><td align="left">_81 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _82)</td></tr></table>>];
    bb25__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_80 = [move _81]<br/>StorageDead(_81)<br/>_79 = &amp;_80<br/>_78 = &amp;(*_79)<br/>_77 = move _78 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_78)<br/></td></tr><tr><td align="left">_72 = Arguments::&lt;'_&gt;::new_v1(move _73, move _77)</td></tr></table>>];
    bb26__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_77)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">_71 = format(move _72)</td></tr></table>>];
    bb27__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_83)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_75)<br/>_70 = move _71<br/>StorageDead(_71)<br/>_69 = &amp;_70<br/>_68 = &amp;(*_69)<br/></td></tr><tr><td align="left">_67 = &lt;String as Deref&gt;::deref(move _68)</td></tr></table>>];
    bb28__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">_66 = &amp;(*_67)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_65 = solana_program::log::sol_log(move _66)</td></tr></table>>];
    bb29__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/></td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb30__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageDead(_65)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>_121 = const _<br/>_94 = &amp;(*_121)<br/>_93 = &amp;(*_94)<br/>_92 = move _93 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_93)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>StorageLive(_100)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>_104 = &amp;(*_2)<br/></td></tr><tr><td align="left">_103 = MMOraclePriceData::get_safe_oracle_price_data(move _104)</td></tr></table>>];
    bb31__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_102 = &amp;_103<br/>_101 = &amp;(*_102)<br/></td></tr><tr><td align="left">_100 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;OraclePriceData&gt;(move _101)</td></tr></table>>];
    bb32__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = &amp;_20<br/>_106 = &amp;(*_107)<br/></td></tr><tr><td align="left">_105 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;i64&gt;(move _106)</td></tr></table>>];
    bb33__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>StorageLive(_108)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;((*_1).21: u16)<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_108 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u16&gt;(move _109)</td></tr></table>>];
    bb34__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>_113 = &amp;_6<br/>_112 = &amp;(*_113)<br/></td></tr><tr><td align="left">_111 = core::fmt::rt::Argument::&lt;'_&gt;::new_debug::&lt;Option&lt;DriftAction&gt;&gt;(move _112)</td></tr></table>>];
    bb35__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_99 = [move _100, move _105, move _108, move _111]<br/>StorageDead(_111)<br/>StorageDead(_108)<br/>StorageDead(_105)<br/>StorageDead(_100)<br/>_98 = &amp;_99<br/>_97 = &amp;(*_98)<br/>_96 = move _97 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_97)<br/></td></tr><tr><td align="left">_91 = Arguments::&lt;'_&gt;::new_v1(move _92, move _96)</td></tr></table>>];
    bb36__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/>StorageDead(_92)<br/></td></tr><tr><td align="left">_90 = format(move _91)</td></tr></table>>];
    bb37__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_91)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_107)<br/>StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_99)<br/>StorageDead(_98)<br/>StorageDead(_94)<br/>_89 = move _90<br/>StorageDead(_90)<br/>_88 = &amp;_89<br/>_87 = &amp;(*_88)<br/></td></tr><tr><td align="left">_86 = &lt;String as Deref&gt;::deref(move _87)</td></tr></table>>];
    bb38__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_85 = &amp;(*_86)<br/>StorageDead(_87)<br/></td></tr><tr><td align="left">_84 = solana_program::log::sol_log(move _85)</td></tr></table>>];
    bb39__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/></td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb40__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_84)<br/>StorageLive(_114)<br/>_114 = _64<br/>_52 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _114)<br/>StorageDead(_114)<br/>StorageDead(_64)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb42__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_115 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _115)</td></tr></table>>];
    bb43__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageLive(_119)<br/>_119 = ((_51 as Continue).0: ())<br/>_50 = _119<br/>StorageDead(_119)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageLive(_120)<br/>_120 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _120)<br/>StorageDead(_120)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_118)<br/>_118 = _116<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _118)</td></tr></table>>];
    bb45__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_116)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb47__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>StorageDead(_29)<br/>StorageDead(_28)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left">return</td></tr></table>>];
    bb50__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">50 (cleanup)</td></tr><tr><td align="left">drop(_89)</td></tr></table>>];
    bb51__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">51 (cleanup)</td></tr><tr><td align="left">drop(_70)</td></tr></table>>];
    bb52__0_746 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">52 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_746 -> bb1__0_746 [label="return"];
    bb1__0_746 -> bb2__0_746 [label="return"];
    bb2__0_746 -> bb3__0_746 [label="0"];
    bb2__0_746 -> bb5__0_746 [label="1"];
    bb2__0_746 -> bb4__0_746 [label="otherwise"];
    bb3__0_746 -> bb7__0_746 [label="return"];
    bb5__0_746 -> bb6__0_746 [label="return"];
    bb6__0_746 -> bb49__0_746 [label=""];
    bb7__0_746 -> bb8__0_746 [label="return"];
    bb8__0_746 -> bb9__0_746 [label="return"];
    bb9__0_746 -> bb10__0_746 [label="0"];
    bb9__0_746 -> bb11__0_746 [label="1"];
    bb9__0_746 -> bb4__0_746 [label="otherwise"];
    bb10__0_746 -> bb13__0_746 [label="return"];
    bb11__0_746 -> bb12__0_746 [label="return"];
    bb12__0_746 -> bb47__0_746 [label=""];
    bb13__0_746 -> bb14__0_746 [label="return"];
    bb14__0_746 -> bb15__0_746 [label="0"];
    bb14__0_746 -> bb16__0_746 [label="1"];
    bb14__0_746 -> bb4__0_746 [label="otherwise"];
    bb15__0_746 -> bb18__0_746 [label="return"];
    bb16__0_746 -> bb17__0_746 [label="return"];
    bb17__0_746 -> bb47__0_746 [label=""];
    bb18__0_746 -> bb19__0_746 [label="return"];
    bb19__0_746 -> bb20__0_746 [label="0"];
    bb19__0_746 -> bb21__0_746 [label="1"];
    bb19__0_746 -> bb4__0_746 [label="otherwise"];
    bb20__0_746 -> bb24__0_746 [label="0"];
    bb20__0_746 -> bb23__0_746 [label="otherwise"];
    bb21__0_746 -> bb22__0_746 [label="return"];
    bb22__0_746 -> bb46__0_746 [label=""];
    bb23__0_746 -> bb41__0_746 [label=""];
    bb24__0_746 -> bb25__0_746 [label="return"];
    bb25__0_746 -> bb26__0_746 [label="return"];
    bb26__0_746 -> bb27__0_746 [label="return"];
    bb27__0_746 -> bb28__0_746 [label="return"];
    bb27__0_746 -> bb51__0_746 [label="unwind"];
    bb28__0_746 -> bb29__0_746 [label="return"];
    bb28__0_746 -> bb51__0_746 [label="unwind"];
    bb29__0_746 -> bb30__0_746 [label="return"];
    bb29__0_746 -> bb52__0_746 [label="unwind"];
    bb30__0_746 -> bb31__0_746 [label="return"];
    bb31__0_746 -> bb32__0_746 [label="return"];
    bb32__0_746 -> bb33__0_746 [label="return"];
    bb33__0_746 -> bb34__0_746 [label="return"];
    bb34__0_746 -> bb35__0_746 [label="return"];
    bb35__0_746 -> bb36__0_746 [label="return"];
    bb36__0_746 -> bb37__0_746 [label="return"];
    bb37__0_746 -> bb38__0_746 [label="return"];
    bb37__0_746 -> bb50__0_746 [label="unwind"];
    bb38__0_746 -> bb39__0_746 [label="return"];
    bb38__0_746 -> bb50__0_746 [label="unwind"];
    bb39__0_746 -> bb40__0_746 [label="return"];
    bb39__0_746 -> bb52__0_746 [label="unwind"];
    bb40__0_746 -> bb41__0_746 [label=""];
    bb41__0_746 -> bb42__0_746 [label="return"];
    bb42__0_746 -> bb43__0_746 [label="0"];
    bb42__0_746 -> bb44__0_746 [label="1"];
    bb42__0_746 -> bb4__0_746 [label="otherwise"];
    bb43__0_746 -> bb49__0_746 [label=""];
    bb44__0_746 -> bb45__0_746 [label="return"];
    bb45__0_746 -> bb46__0_746 [label=""];
    bb46__0_746 -> bb48__0_746 [label=""];
    bb47__0_746 -> bb48__0_746 [label=""];
    bb48__0_746 -> bb49__0_746 [label=""];
    bb50__0_746 -> bb52__0_746 [label="return"];
    bb51__0_746 -> bb52__0_746 [label="return"];
}
