digraph Mir_0_3457 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn MarginCalculation::tracked_market_margin_shortage(_1: &amp;ReErased state::margin_calculation::MarginCalculation, _2: u128) -&gt; std::result::Result&lt;u128, error::ErrorCode&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: bool;<br align="left"/>let mut _5: &amp;ReErased std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;;<br align="left"/>let _6: std::option::Option&lt;state::margin_calculation::MarketIdentifier&gt;;<br align="left"/>let mut _7: &amp;ReErased state::margin_calculation::MarginCalculation;<br align="left"/>let mut _8: !;<br align="left"/>let _9: ();<br align="left"/>let mut _10: &amp;ReErased str;<br align="left"/>let _11: &amp;ReErased str;<br align="left"/>let mut _12: error::ErrorCode;<br align="left"/>let _13: ();<br align="left"/>let mut _14: bool;<br align="left"/>let mut _15: u128;<br align="left"/>let mut _16: !;<br align="left"/>let mut _17: u128;<br align="left"/>let mut _18: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _19: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _20: u128;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: isize;<br align="left"/>let _23: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _24: !;<br align="left"/>let mut _25: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _26: u128;<br align="left"/>let mut _27: u128;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug margin_shortage =&gt; _2;<br align="left"/>debug residual =&gt; _23;<br align="left"/>debug val =&gt; _26;<br align="left"/>>;
    bb0__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;(*_1)<br/></td></tr><tr><td align="left">_6 = MarginCalculation::market_to_track_margin_requirement(move _7)</td></tr></table>>];
    bb1__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_5 = &amp;_6<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">_4 = Option::&lt;MarketIdentifier&gt;::is_none(move _5)</td></tr></table>>];
    bb2__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">switchInt(move _4)</td></tr></table>>];
    bb3__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>_11 = const &quot;cant call tracked_market_margin_shortage&quot;<br/>_10 = &amp;(*_11)<br/></td></tr><tr><td align="left">_9 = solana_program::log::sol_log(move _10)</td></tr></table>>];
    bb4__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageLive(_12)<br/>_12 = error::ErrorCode::InvalidMarginCalculation<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Err(move _12)<br/>StorageDead(_12)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb5__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/>StorageDead(_5)<br/>_3 = const ()<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>_15 = ((*_1).3: u128)<br/>_14 = Eq(move _15, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _14)</td></tr></table>>];
    bb6__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_0 = std::result::Result::&lt;u128, error::ErrorCode&gt;::Ok(const 0_u128)<br/>StorageDead(_14)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_13 = const ()<br/>StorageDead(_14)<br/>StorageDead(_13)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>_20 = _2<br/>StorageLive(_21)<br/>_21 = ((*_1).16: u128)<br/></td></tr><tr><td align="left">_19 = &lt;u128 as SafeMath&gt;::safe_mul(move _20, move _21)</td></tr></table>>];
    bb8__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">_18 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _19)</td></tr></table>>];
    bb9__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>_22 = discriminant(_18)<br/></td></tr><tr><td align="left">switchInt(move _22)</td></tr></table>>];
    bb10__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_18 as Continue).0: u128)<br/>_17 = _26<br/>StorageDead(_26)<br/>StorageLive(_27)<br/>_27 = ((*_1).3: u128)<br/></td></tr><tr><td align="left">_0 = &lt;u128 as SafeMath&gt;::safe_div(move _17, move _27)</td></tr></table>>];
    bb11__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb12__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_23)<br/>_23 = ((_18 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_25)<br/>_25 = _23<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _25)</td></tr></table>>];
    bb13__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_23)<br/>StorageDead(_17)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>StorageDead(_17)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_3457 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_3457 -> bb1__0_3457 [label="return"];
    bb1__0_3457 -> bb2__0_3457 [label="return"];
    bb2__0_3457 -> bb5__0_3457 [label="0"];
    bb2__0_3457 -> bb3__0_3457 [label="otherwise"];
    bb3__0_3457 -> bb4__0_3457 [label="return"];
    bb4__0_3457 -> bb15__0_3457 [label=""];
    bb5__0_3457 -> bb7__0_3457 [label="0"];
    bb5__0_3457 -> bb6__0_3457 [label="otherwise"];
    bb6__0_3457 -> bb15__0_3457 [label=""];
    bb7__0_3457 -> bb8__0_3457 [label="return"];
    bb8__0_3457 -> bb9__0_3457 [label="return"];
    bb9__0_3457 -> bb10__0_3457 [label="0"];
    bb9__0_3457 -> bb12__0_3457 [label="1"];
    bb9__0_3457 -> bb11__0_3457 [label="otherwise"];
    bb10__0_3457 -> bb14__0_3457 [label="return"];
    bb12__0_3457 -> bb13__0_3457 [label="return"];
    bb13__0_3457 -> bb15__0_3457 [label=""];
    bb14__0_3457 -> bb15__0_3457 [label=""];
}
