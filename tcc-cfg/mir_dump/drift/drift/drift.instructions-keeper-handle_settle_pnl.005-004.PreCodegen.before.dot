digraph Mir_0_9234 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn keeper::handle_settle_pnl(_1: anchor_lang::context::Context&lt;ReErased, ReErased, ReErased, ReErased, instructions::keeper::SettlePNL&lt;ReErased&gt;&gt;, _2: u16) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let _7: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _8: isize;<br align="left"/>let _9: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _10: !;<br align="left"/>let mut _11: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _12: ();<br align="left"/>let _13: anchor_lang::prelude::Clock;<br align="left"/>let mut _14: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Clock&gt;;<br align="left"/>let mut _15: std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _16: isize;<br align="left"/>let _17: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _18: !;<br align="left"/>let mut _19: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _20: anchor_lang::prelude::Clock;<br align="left"/>let _21: &amp;ReErased std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _22: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _23: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let _24: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _25: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::RefMut&lt;ReErased, state::user::User&gt;&gt;;<br align="left"/>let mut _27: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _28: std::result::Result&lt;std::cell::RefMut&lt;ReErased, state::user::User&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _30: Closure(DefId(0:9239 ~ drift[d311]::instructions::keeper::handle_settle_pnl::{closure#2}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _31: isize;<br align="left"/>let _32: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _33: !;<br align="left"/>let mut _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _35: std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let _36: ();<br align="left"/>let mut _37: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _38: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _39: bool;<br align="left"/>let mut _40: u8;<br align="left"/>let mut _41: &amp;ReErased state::user::User;<br align="left"/>let mut _42: &amp;ReErased std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _43: ();<br align="left"/>let _44: error::ErrorCode;<br align="left"/>let _45: ();<br align="left"/>let mut _46: &amp;ReErased str;<br align="left"/>let _47: &amp;ReErased str;<br align="left"/>let mut _48: &amp;ReErased std::string::String;<br align="left"/>let _49: &amp;ReErased std::string::String;<br align="left"/>let _50: std::string::String;<br align="left"/>let _51: std::string::String;<br align="left"/>let mut _52: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _53: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _54: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _55: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _56: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _57: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _58: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _59: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _60: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _61: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _62: &amp;ReErased error::ErrorCode;<br align="left"/>let _63: &amp;ReErased error::ErrorCode;<br align="left"/>let _64: ();<br align="left"/>let mut _65: &amp;ReErased str;<br align="left"/>let _66: &amp;ReErased str;<br align="left"/>let mut _67: error::ErrorCode;<br align="left"/>let mut _68: isize;<br align="left"/>let _69: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _70: !;<br align="left"/>let mut _71: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _72: ();<br align="left"/>let _73: state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _74: state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _75: state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _76: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let mut _77: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, instructions::optional_accounts::AccountMaps&lt;ReErased&gt;&gt;;<br align="left"/>let mut _78: std::result::Result&lt;instructions::optional_accounts::AccountMaps&lt;ReErased&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _79: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _80: &amp;ReErased mut std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _81: std::iter::Peekable&lt;std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;&gt;;<br align="left"/>let mut _82: std::slice::Iter&lt;ReErased, anchor_lang::prelude::AccountInfo&lt;ReErased&gt;&gt;;<br align="left"/>let mut _83: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _84: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _85: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _86: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _87: u16;<br align="left"/>let mut _88: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _89: &amp;ReErased std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let _90: std::collections::BTreeSet&lt;u16, std::alloc::Global&gt;;<br align="left"/>let mut _91: u64;<br align="left"/>let mut _92: std::option::Option&lt;state::state::OracleGuardRails&gt;;<br align="left"/>let mut _93: state::state::OracleGuardRails;<br align="left"/>let mut _94: &amp;ReErased state::state::State;<br align="left"/>let mut _95: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _96: isize;<br align="left"/>let _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _98: !;<br align="left"/>let mut _99: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _100: instructions::optional_accounts::AccountMaps&lt;ReErased&gt;;<br align="left"/>let _101: bool;<br align="left"/>let mut _102: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _103: &amp;ReErased state::perp_market::PerpMarket;<br align="left"/>let mut _104: &amp;ReErased std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let _105: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _106: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;&gt;;<br align="left"/>let mut _107: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _108: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _109: &amp;ReErased u16;<br align="left"/>let _110: &amp;ReErased u16;<br align="left"/>let mut _111: isize;<br align="left"/>let _112: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _113: !;<br align="left"/>let mut _114: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _115: std::cell::Ref&lt;ReErased, state::perp_market::PerpMarket&gt;;<br align="left"/>let mut _116: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let _117: state::perp_market::MarketStatus;<br align="left"/>let _118: ();<br align="left"/>let mut _119: bool;<br align="left"/>let _120: ();<br align="left"/>let mut _121: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _122: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _123: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _124: isize;<br align="left"/>let _125: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _126: !;<br align="left"/>let mut _127: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _128: ();<br align="left"/>let _129: ();<br align="left"/>let mut _130: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _131: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _132: u16;<br align="left"/>let mut _133: &amp;ReErased mut state::user::User;<br align="left"/>let mut _134: &amp;ReErased mut state::user::User;<br align="left"/>let mut _135: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _136: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _137: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _138: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _139: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _140: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _141: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _142: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _143: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _144: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _145: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _146: &amp;ReErased state::state::State;<br align="left"/>let _147: &amp;ReErased state::state::State;<br align="left"/>let mut _148: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _149: isize;<br align="left"/>let _150: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _151: !;<br align="left"/>let mut _152: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _153: ();<br align="left"/>let _154: ();<br align="left"/>let mut _155: &amp;ReErased mut state::user::User;<br align="left"/>let mut _156: &amp;ReErased mut state::user::User;<br align="left"/>let mut _157: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _158: u64;<br align="left"/>let _159: error::ErrorCode;<br align="left"/>let mut _160: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _161: std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt;;<br align="left"/>let mut _162: std::result::Result&lt;i128, error::ErrorCode&gt;;<br align="left"/>let mut _163: u16;<br align="left"/>let mut _164: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _165: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _166: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _167: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _168: &amp;ReErased state::state::State;<br align="left"/>let _169: &amp;ReErased state::state::State;<br align="left"/>let mut _170: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _171: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _172: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _173: Closure(DefId(0:9237 ~ drift[d311]::instructions::keeper::handle_settle_pnl::{closure#0}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn((i128,)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _174: isize;<br align="left"/>let _175: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _176: !;<br align="left"/>let mut _177: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _178: error::ErrorCode;<br align="left"/>let _179: error::ErrorCode;<br align="left"/>let mut _180: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _181: std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt;;<br align="left"/>let mut _182: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _183: u16;<br align="left"/>let mut _184: &amp;ReErased mut state::user::User;<br align="left"/>let mut _185: &amp;ReErased mut state::user::User;<br align="left"/>let mut _186: &amp;ReErased mut std::cell::RefMut&lt;ReErased, state::user::User&gt;;<br align="left"/>let mut _187: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _188: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _189: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _190: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _191: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _192: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let _193: &amp;ReErased state::perp_market_map::PerpMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _194: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let _195: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _196: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _197: &amp;ReErased mut state::oracle_map::OracleMap&lt;ReErased&gt;;<br align="left"/>let mut _198: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let _199: &amp;ReErased anchor_lang::prelude::Clock;<br align="left"/>let mut _200: &amp;ReErased state::state::State;<br align="left"/>let _201: &amp;ReErased state::state::State;<br align="left"/>let mut _202: &amp;ReErased anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _203: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _204: state::settle_pnl_mode::SettlePnlMode;<br align="left"/>let mut _205: Closure(DefId(0:9238 ~ drift[d311]::instructions::keeper::handle_settle_pnl::{closure#1}), [ReErased, ReErased, i32, Binder(extern &quot;RustCall&quot; fn(((),)) -&gt; error::ErrorCode, []), ()]);<br align="left"/>let mut _206: isize;<br align="left"/>let _207: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _208: !;<br align="left"/>let mut _209: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _210: error::ErrorCode;<br align="left"/>let _211: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _212: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _213: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;, error::ErrorCode&gt;;<br align="left"/>let mut _214: &amp;ReErased state::spot_market_map::SpotMarketMap&lt;ReErased&gt;;<br align="left"/>let mut _215: isize;<br align="left"/>let _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _219: std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _220: i64;<br align="left"/>let mut _221: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, i64&gt;;<br align="left"/>let mut _222: std::result::Result&lt;i64, error::ErrorCode&gt;;<br align="left"/>let mut _223: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let _224: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _225: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _226: &amp;ReErased std::cell::Ref&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _227: u64;<br align="left"/>let mut _228: &amp;ReErased anchor_spl::token_2022::spl_token_2022::state::Account;<br align="left"/>let mut _229: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let _230: &amp;ReErased anchor_spl::token_interface::TokenAccount;<br align="left"/>let mut _231: &amp;ReErased anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>let mut _232: isize;<br align="left"/>let _233: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _234: !;<br align="left"/>let mut _235: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _236: i64;<br align="left"/>let mut _237: ();<br align="left"/>let mut _238: &amp;ReErased state::perp_market::MarketStatus;<br align="left"/>let mut _239: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _240: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _241: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _242: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _243: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _244: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _245: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _246: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _247: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _248: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _249: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _250: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _251: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _252: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _253: &amp;ReErased mut instructions::keeper::SettlePNL&lt;ReErased&gt;;<br align="left"/>let mut _254: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _255: bool;<br align="left"/>let mut _256: isize;<br align="left"/>let mut _257: isize;<br align="left"/>let mut _258: isize;<br align="left"/>let mut _259: isize;<br align="left"/>let mut _260: isize;<br align="left"/>let mut _261: isize;<br align="left"/>let mut _262: isize;<br align="left"/>let mut _263: isize;<br align="left"/>let mut _264: isize;<br align="left"/>let mut _265: isize;<br align="left"/>let mut _266: isize;<br align="left"/>let mut _267: isize;<br align="left"/>let mut _268: isize;<br align="left"/>let mut _269: isize;<br align="left"/>let mut _270: isize;<br align="left"/>let mut _271: isize;<br align="left"/>let mut _272: isize;<br align="left"/>let mut _273: isize;<br align="left"/>let mut _274: isize;<br align="left"/>let mut _275: isize;<br align="left"/>let mut _276: isize;<br align="left"/>let mut _277: isize;<br align="left"/>let mut _278: isize;<br align="left"/>let mut _279: isize;<br align="left"/>let mut _280: isize;<br align="left"/>let mut _281: isize;<br align="left"/>let mut _282: isize;<br align="left"/>let mut _283: isize;<br align="left"/>let mut _284: isize;<br align="left"/>let mut _285: isize;<br align="left"/>let mut _286: isize;<br align="left"/>let mut _287: isize;<br align="left"/>let mut _288: isize;<br align="left"/>let mut _289: isize;<br align="left"/>let mut _290: isize;<br align="left"/>let mut _291: isize;<br align="left"/>let mut _292: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _293: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _294: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _295: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _296: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _297: *const anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;;<br align="left"/>let mut _298: *const anchor_lang::prelude::InterfaceAccount&lt;ReErased, anchor_spl::token_interface::TokenAccount&gt;;<br align="left"/>debug ctx =&gt; _1;<br align="left"/>debug market_index =&gt; _2;<br align="left"/>debug residual =&gt; _9;<br align="left"/>debug val =&gt; _12;<br align="left"/>debug clock =&gt; _13;<br align="left"/>debug residual =&gt; _17;<br align="left"/>debug val =&gt; _20;<br align="left"/>debug state =&gt; _21;<br align="left"/>debug user_key =&gt; _22;<br align="left"/>debug user =&gt; _24;<br align="left"/>debug residual =&gt; _32;<br align="left"/>debug val =&gt; _35;<br align="left"/>debug error_code =&gt; _44;<br align="left"/>debug res =&gt; _51;<br align="left"/>debug residual =&gt; _69;<br align="left"/>debug val =&gt; _72;<br align="left"/>debug perp_market_map =&gt; _73;<br align="left"/>debug spot_market_map =&gt; _74;<br align="left"/>debug oracle_map =&gt; _75;<br align="left"/>debug residual =&gt; _97;<br align="left"/>debug val =&gt; _100;<br align="left"/>debug market_in_settlement =&gt; _101;<br align="left"/>debug residual =&gt; _112;<br align="left"/>debug val =&gt; _115;<br align="left"/>debug residual =&gt; _125;<br align="left"/>debug val =&gt; _128;<br align="left"/>debug residual =&gt; _150;<br align="left"/>debug val =&gt; _153;<br align="left"/>debug residual =&gt; _175;<br align="left"/>debug val =&gt; _178;<br align="left"/>debug residual =&gt; _207;<br align="left"/>debug val =&gt; _210;<br align="left"/>debug spot_market =&gt; _211;<br align="left"/>debug residual =&gt; _216;<br align="left"/>debug val =&gt; _219;<br align="left"/>debug residual =&gt; _233;<br align="left"/>debug val =&gt; _236;<br align="left"/>>;
    bb0__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_255 = const false<br/>StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>_240 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_7 = &amp;((*_240).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_241 = deref_copy (*_7)<br/>_292 = (((_241.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_6 = &amp;(*_292)<br/></td></tr><tr><td align="left">_5 = constraints::settle_pnl_not_paused(move _6)</td></tr></table>>];
    bb1__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb2__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_8 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _8)</td></tr></table>>];
    bb3__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = ((_4 as Continue).0: ())<br/>_3 = _12<br/>StorageDead(_12)<br/>_256 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/></td></tr><tr><td align="left">_15 = &lt;anchor_lang::prelude::Clock as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb4__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb5__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageLive(_9)<br/>_9 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_11)<br/>_11 = move _9<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _11)</td></tr></table>>];
    bb6__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_11)<br/>StorageDead(_9)<br/>_282 = discriminant(_4)<br/>StorageDead(_7)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left">_14 = &lt;std::result::Result&lt;anchor_lang::prelude::Clock, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _15)</td></tr></table>>];
    bb8__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>_16 = discriminant(_14)<br/></td></tr><tr><td align="left">switchInt(move _16)</td></tr></table>>];
    bb9__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageLive(_20)<br/>_20 = move ((_14 as Continue).0: anchor_lang::prelude::Clock)<br/>_13 = move _20<br/>StorageDead(_20)<br/>_258 = discriminant(_14)<br/>StorageDead(_14)<br/>StorageLive(_21)<br/>_242 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_21 = &amp;((*_242).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_243 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_23 = &amp;((*_243).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_22 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, User&gt; as anchor_lang::Key&gt;::key(move _23)</td></tr></table>>];
    bb10__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = move ((_14 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_19)<br/>_19 = move _17<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _19)</td></tr></table>>];
    bb11__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_17)<br/>_280 = discriminant(_14)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>StorageLive(_29)<br/>_244 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_29 = &amp;((*_244).1: anchor_lang::prelude::AccountLoader&lt;'_, state::user::User&gt;)<br/></td></tr><tr><td align="left">_28 = anchor_lang::prelude::AccountLoader::&lt;'_, User&gt;::load_mut(move _29)</td></tr></table>>];
    bb13__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = {closure@programs/drift/src/macros.rs:58:44: 58:47}<br/></td></tr><tr><td align="left">_27 = std::result::Result::&lt;RefMut&lt;'_, User&gt;, anchor_lang::error::Error&gt;::map_err::&lt;error::ErrorCode, {closure@programs/drift/src/macros.rs:58:44: 58:47}&gt;(move _28, move _30)</td></tr></table>>];
    bb14__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;RefMut&lt;'_, User&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb15__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_31 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _31)</td></tr></table>>];
    bb16__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>_35 = move ((_26 as Continue).0: std::cell::RefMut&lt;'_, state::user::User&gt;)<br/>_25 = move _35<br/>StorageDead(_35)<br/>_24 = &amp;mut _25<br/>_262 = discriminant(_26)<br/>StorageDead(_26)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = &amp;(*_24)<br/></td></tr><tr><td align="left">_41 = &lt;RefMut&lt;'_, User&gt; as Deref&gt;::deref(move _42)</td></tr></table>>];
    bb17__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_34)<br/>_34 = _32<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _34)</td></tr></table>>];
    bb18__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>StorageDead(_32)<br/>_260 = discriminant(_26)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb19__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_42)<br/>_40 = ((*_41).27: u8)<br/>_39 = Eq(move _40, const 0_u8)<br/></td></tr><tr><td align="left">switchInt(move _39)</td></tr></table>>];
    bb20__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_43)<br/>_43 = ()<br/>_38 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _43)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_44)<br/>_44 = error::ErrorCode::InvalidPoolId<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>_239 = const _<br/>_55 = &amp;(*_239)<br/>_54 = &amp;(*_55)<br/>_53 = move _54 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_54)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>StorageLive(_63)<br/>_63 = &amp;_44<br/>_62 = &amp;(*_63)<br/></td></tr><tr><td align="left">_61 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _62)</td></tr></table>>];
    bb22__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>_60 = [move _61]<br/>StorageDead(_61)<br/>_59 = &amp;_60<br/>_58 = &amp;(*_59)<br/>_57 = move _58 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">_52 = Arguments::&lt;'_&gt;::new_v1(move _53, move _57)</td></tr></table>>];
    bb23__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = format(move _52)</td></tr></table>>];
    bb24__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_59)<br/>StorageDead(_55)<br/>_50 = move _51<br/>StorageDead(_51)<br/>_49 = &amp;_50<br/>_48 = &amp;(*_49)<br/></td></tr><tr><td align="left">_47 = &lt;String as Deref&gt;::deref(move _48)</td></tr></table>>];
    bb25__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_46 = &amp;(*_47)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">_45 = solana_program::log::sol_log(move _46)</td></tr></table>>];
    bb26__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_46)<br/></td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb27__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_49)<br/>StorageDead(_47)<br/>StorageDead(_45)<br/>StorageLive(_64)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>_66 = const &quot;user have pool_id 0&quot;<br/>_65 = &amp;(*_66)<br/></td></tr><tr><td align="left">_64 = solana_program::log::sol_log(move _65)</td></tr></table>>];
    bb28__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_66)<br/>StorageDead(_64)<br/>StorageLive(_67)<br/>_67 = _44<br/>_38 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _67)<br/>StorageDead(_67)<br/>StorageDead(_44)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb29__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_39)<br/></td></tr><tr><td align="left">_37 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _38)</td></tr></table>>];
    bb30__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>_68 = discriminant(_37)<br/></td></tr><tr><td align="left">switchInt(move _68)</td></tr></table>>];
    bb31__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_72)<br/>_72 = ((_37 as Continue).0: ())<br/>_36 = _72<br/>StorageDead(_72)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_76)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>_245 = deref_copy (_1.2: &amp;[anchor_lang::prelude::AccountInfo&lt;'_&gt;])<br/>_83 = &amp;(*_245)<br/></td></tr><tr><td align="left">_82 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::iter(move _83)</td></tr></table>>];
    bb32__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_69)<br/>_69 = ((_37 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_71)<br/>_71 = _69<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _71)</td></tr></table>>];
    bb33__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_37)<br/>StorageDead(_36)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::slice::Iter&lt;'_, anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt; as Iterator&gt;::peekable(move _82)</td></tr></table>>];
    bb35__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_80 = &amp;mut _81<br/>_79 = &amp;mut (*_80)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>_87 = _2<br/></td></tr><tr><td align="left">_86 = get_writable_perp_market_set(move _87)</td></tr></table>>];
    bb36__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_85 = &amp;_86<br/>_84 = &amp;(*_85)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>StorageLive(_90)<br/></td></tr><tr><td align="left">_90 = get_writable_spot_market_set(const _)</td></tr></table>>];
    bb37__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">_89 = &amp;_90<br/>_88 = &amp;(*_89)<br/>StorageLive(_91)<br/>_91 = (_13.0: u64)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>_246 = deref_copy (*_21)<br/>_293 = (((_246.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_95 = &amp;(*_293)<br/></td></tr><tr><td align="left">_94 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _95)</td></tr></table>>];
    bb38__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_93 = ((*_94).7: state::state::OracleGuardRails)<br/>_92 = Option::&lt;state::state::OracleGuardRails&gt;::Some(move _93)<br/>StorageDead(_93)<br/></td></tr><tr><td align="left">_78 = load_maps(move _79, move _84, move _88, move _91, move _92)</td></tr></table>>];
    bb39__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_88)<br/>StorageDead(_84)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">_77 = &lt;std::result::Result&lt;AccountMaps&lt;'_&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _78)</td></tr></table>>];
    bb40__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_96 = discriminant(_77)<br/></td></tr><tr><td align="left">switchInt(move _96)</td></tr></table>>];
    bb41__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = move ((_77 as Continue).0: instructions::optional_accounts::AccountMaps&lt;'_&gt;)<br/>_76 = move _100<br/>StorageDead(_100)<br/>StorageLive(_73)<br/>_73 = move (_76.0: state::perp_market_map::PerpMarketMap&lt;'_&gt;)<br/>StorageLive(_74)<br/>_74 = move (_76.1: state::spot_market_map::SpotMarketMap&lt;'_&gt;)<br/>StorageLive(_75)<br/>_75 = move (_76.2: state::oracle_map::OracleMap&lt;'_&gt;)<br/>_266 = discriminant(_77)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb42__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_97)<br/>_97 = ((_77 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_99)<br/>_99 = _97<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _99)</td></tr></table>>];
    bb43__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_99)<br/>StorageDead(_97)<br/>_264 = discriminant(_77)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb44__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb45__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageLive(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>StorageLive(_108)<br/>_108 = &amp;_73<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>_110 = &amp;_2<br/>_109 = &amp;(*_110)<br/></td></tr><tr><td align="left">_107 = PerpMarketMap::&lt;'_&gt;::get_ref(move _108, move _109)</td></tr></table>>];
    bb46__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/></td></tr><tr><td align="left">_106 = &lt;std::result::Result&lt;Ref&lt;'_, PerpMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _107)</td></tr></table>>];
    bb47__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_255 = const true<br/>StorageDead(_107)<br/>_111 = discriminant(_106)<br/></td></tr><tr><td align="left">switchInt(move _111)</td></tr></table>>];
    bb48__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_115)<br/>_115 = move ((_106 as Continue).0: std::cell::Ref&lt;'_, state::perp_market::PerpMarket&gt;)<br/>_105 = move _115<br/>StorageDead(_115)<br/>_104 = &amp;_105<br/></td></tr><tr><td align="left">_103 = &lt;Ref&lt;'_, PerpMarket&gt; as Deref&gt;::deref(move _104)</td></tr></table>>];
    bb49__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageLive(_112)<br/>_112 = ((_106 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_114)<br/>_114 = _112<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _114)</td></tr></table>>];
    bb50__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_114)<br/>StorageDead(_112)<br/>StorageDead(_104)<br/>StorageDead(_102)<br/>_268 = discriminant(_106)<br/>StorageDead(_110)<br/>_255 = const false<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb51__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_102 = &amp;((*_103).22: state::perp_market::MarketStatus)<br/>StorageLive(_116)<br/>_238 = const _<br/>_116 = &amp;(*_238)<br/></td></tr><tr><td align="left">_101 = &lt;state::perp_market::MarketStatus as PartialEq&gt;::eq(move _102, move _116)</td></tr></table>>];
    bb52__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_116)<br/>StorageDead(_102)<br/></td></tr><tr><td align="left">drop(_105)</td></tr></table>>];
    bb53__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_120)<br/>StorageLive(_121)<br/>StorageLive(_122)<br/>StorageLive(_123)<br/>_247 = deref_copy (*_21)<br/>_294 = (((_247.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_123 = &amp;(*_294)<br/></td></tr><tr><td align="left">_122 = constraints::amm_not_paused(move _123)</td></tr></table>>];
    bb54__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/></td></tr><tr><td align="left">_121 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _122)</td></tr></table>>];
    bb55__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_122)<br/>_124 = discriminant(_121)<br/></td></tr><tr><td align="left">switchInt(move _124)</td></tr></table>>];
    bb56__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_128)<br/>_128 = ((_121 as Continue).0: ())<br/>_120 = _128<br/>StorageDead(_128)<br/>_272 = discriminant(_121)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>StorageLive(_131)<br/>StorageLive(_132)<br/>_132 = _2<br/>StorageLive(_133)<br/>StorageLive(_134)<br/>StorageLive(_135)<br/>_135 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_134 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _135)</td></tr></table>>];
    bb57__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageLive(_125)<br/>_125 = move ((_121 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_127)<br/>_127 = move _125<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _127)</td></tr></table>>];
    bb58__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>StorageDead(_125)<br/>_278 = discriminant(_121)<br/>StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">_133 = &amp;mut (*_134)<br/>StorageDead(_135)<br/>StorageLive(_136)<br/>StorageLive(_137)<br/>_137 = &amp;_22<br/>_136 = &amp;(*_137)<br/>StorageLive(_138)<br/>StorageLive(_139)<br/>_139 = &amp;_73<br/>_138 = &amp;(*_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>_141 = &amp;_74<br/>_140 = &amp;(*_141)<br/>StorageLive(_142)<br/>StorageLive(_143)<br/>_143 = &amp;mut _75<br/>_142 = &amp;mut (*_143)<br/>StorageLive(_144)<br/>StorageLive(_145)<br/>_145 = &amp;_13<br/>_144 = &amp;(*_145)<br/>StorageLive(_146)<br/>StorageLive(_147)<br/>StorageLive(_148)<br/>_248 = deref_copy (*_21)<br/>_295 = (((_248.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_148 = &amp;(*_295)<br/></td></tr><tr><td align="left">_147 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _148)</td></tr></table>>];
    bb60__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">_146 = &amp;(*_147)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">_131 = settle_expired_position(move _132, move _133, move _136, move _138, move _140, move _142, move _144, move _146)</td></tr></table>>];
    bb61__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>StorageDead(_142)<br/>StorageDead(_140)<br/>StorageDead(_138)<br/>StorageDead(_136)<br/>StorageDead(_133)<br/>StorageDead(_132)<br/></td></tr><tr><td align="left">_130 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _131)</td></tr></table>>];
    bb62__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>_149 = discriminant(_130)<br/></td></tr><tr><td align="left">switchInt(move _149)</td></tr></table>>];
    bb63__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageLive(_153)<br/>_153 = ((_130 as Continue).0: ())<br/>_129 = _153<br/>StorageDead(_153)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_156 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _157)</td></tr></table>>];
    bb64__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageLive(_150)<br/>_150 = ((_130 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_152)<br/>_152 = _150<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _152)</td></tr></table>>];
    bb65__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_152)<br/>StorageDead(_150)<br/>StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_143)<br/>StorageDead(_141)<br/>StorageDead(_139)<br/>StorageDead(_137)<br/>StorageDead(_134)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb66__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_155 = &amp;mut (*_156)<br/>StorageDead(_157)<br/>StorageLive(_158)<br/>_158 = (_13.0: u64)<br/></td></tr><tr><td align="left">_154 = User::update_last_active_slot(move _155, move _158)</td></tr></table>>];
    bb67__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageDead(_158)<br/>StorageDead(_155)<br/>StorageDead(_156)<br/>StorageDead(_154)<br/>_118 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb68__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>StorageLive(_163)<br/>_163 = _2<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>_165 = &amp;_73<br/>_164 = &amp;(*_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = &amp;mut _75<br/>_166 = &amp;mut (*_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>StorageLive(_170)<br/>_249 = deref_copy (*_21)<br/>_296 = (((_249.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_170 = &amp;(*_296)<br/></td></tr><tr><td align="left">_169 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _170)</td></tr></table>>];
    bb69__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">_168 = &amp;(*_169)<br/>StorageDead(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>_172 = &amp;_13<br/>_171 = &amp;(*_172)<br/></td></tr><tr><td align="left">_162 = update_amm(move _163, move _164, move _166, move _168, move _171)</td></tr></table>>];
    bb70__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_171)<br/>StorageDead(_168)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_163)<br/>StorageLive(_173)<br/>_173 = {closure@programs/drift/src/instructions/keeper.rs:942:14: 942:17}<br/></td></tr><tr><td align="left">_161 = std::result::Result::&lt;i128, error::ErrorCode&gt;::map::&lt;error::ErrorCode, {closure@programs/drift/src/instructions/keeper.rs:942:14: 942:17}&gt;(move _162, move _173)</td></tr></table>>];
    bb71__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_173)<br/>StorageDead(_162)<br/></td></tr><tr><td align="left">_160 = &lt;std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt; as Try&gt;::branch(move _161)</td></tr></table>>];
    bb72__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_161)<br/>_174 = discriminant(_160)<br/></td></tr><tr><td align="left">switchInt(move _174)</td></tr></table>>];
    bb73__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_178)<br/>_178 = ((_160 as Continue).0: error::ErrorCode)<br/>_159 = _178<br/>StorageDead(_178)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = _2<br/>StorageLive(_184)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>_186 = &amp;mut (*_24)<br/></td></tr><tr><td align="left">_185 = &lt;RefMut&lt;'_, User&gt; as DerefMut&gt;::deref_mut(move _186)</td></tr></table>>];
    bb74__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>_175 = ((_160 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_177)<br/>_177 = _175<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _177)</td></tr></table>>];
    bb75__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_177)<br/>StorageDead(_175)<br/>StorageDead(_172)<br/>StorageDead(_169)<br/>StorageDead(_167)<br/>StorageDead(_165)<br/>StorageDead(_160)<br/>StorageDead(_159)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">_184 = &amp;mut (*_185)<br/>StorageDead(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>StorageLive(_189)<br/>_250 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_189 = &amp;((*_250).2: anchor_lang::prelude::Signer&lt;'_&gt;)<br/></td></tr><tr><td align="left">_188 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _189)</td></tr></table>>];
    bb77__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>_251 = deref_copy ((*_188).0: &amp;anchor_lang::prelude::Pubkey)<br/>_187 = &amp;(*_251)<br/>StorageLive(_190)<br/>StorageLive(_191)<br/>_191 = &amp;_22<br/>_190 = &amp;(*_191)<br/>StorageLive(_192)<br/>StorageLive(_193)<br/>_193 = &amp;_73<br/>_192 = &amp;(*_193)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>_195 = &amp;_74<br/>_194 = &amp;(*_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = &amp;mut _75<br/>_196 = &amp;mut (*_197)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;_13<br/>_198 = &amp;(*_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_252 = deref_copy (*_21)<br/>_297 = (((_252.0: std::ptr::Unique&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;).0: *const anchor_lang::prelude::Account&lt;'_, state::state::State&gt;)<br/>_202 = &amp;(*_297)<br/></td></tr><tr><td align="left">_201 = &lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt; as Deref&gt;::deref(move _202)</td></tr></table>>];
    bb78__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">_200 = &amp;(*_201)<br/>StorageDead(_202)<br/>StorageLive(_203)<br/>_203 = Option::&lt;bool&gt;::None<br/>StorageLive(_204)<br/>_204 = settle_pnl_mode::SettlePnlMode::MustSettle<br/></td></tr><tr><td align="left">_182 = controller::pnl::settle_pnl(move _183, move _184, move _187, move _190, move _192, move _194, move _196, move _198, move _200, move _203, move _204)</td></tr></table>>];
    bb79__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_204)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/>StorageDead(_196)<br/>StorageDead(_194)<br/>StorageDead(_192)<br/>StorageDead(_190)<br/>StorageDead(_187)<br/>StorageDead(_184)<br/>StorageDead(_183)<br/>StorageLive(_205)<br/>_205 = {closure@programs/drift/src/instructions/keeper.rs:957:14: 957:17}<br/></td></tr><tr><td align="left">_181 = std::result::Result::&lt;(), error::ErrorCode&gt;::map::&lt;error::ErrorCode, {closure@programs/drift/src/instructions/keeper.rs:957:14: 957:17}&gt;(move _182, move _205)</td></tr></table>>];
    bb80__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_182)<br/></td></tr><tr><td align="left">_180 = &lt;std::result::Result&lt;error::ErrorCode, error::ErrorCode&gt; as Try&gt;::branch(move _181)</td></tr></table>>];
    bb81__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_206 = discriminant(_180)<br/></td></tr><tr><td align="left">switchInt(move _206)</td></tr></table>>];
    bb82__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageLive(_210)<br/>_210 = ((_180 as Continue).0: error::ErrorCode)<br/>_179 = _210<br/>StorageDead(_210)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/>_118 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb83__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_207)<br/>_207 = ((_180 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_209)<br/>_209 = _207<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _209)</td></tr></table>>];
    bb84__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageDead(_207)<br/>StorageDead(_201)<br/>StorageDead(_199)<br/>StorageDead(_197)<br/>StorageDead(_195)<br/>StorageDead(_193)<br/>StorageDead(_191)<br/>StorageDead(_188)<br/>StorageDead(_185)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb85__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/>StorageLive(_211)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_74<br/></td></tr><tr><td align="left">_213 = SpotMarketMap::&lt;'_&gt;::get_quote_spot_market(move _214)</td></tr></table>>];
    bb86__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/></td></tr><tr><td align="left">_212 = &lt;std::result::Result&lt;Ref&lt;'_, SpotMarket&gt;, error::ErrorCode&gt; as Try&gt;::branch(move _213)</td></tr></table>>];
    bb87__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_213)<br/>_215 = discriminant(_212)<br/></td></tr><tr><td align="left">switchInt(move _215)</td></tr></table>>];
    bb88__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = move ((_212 as Continue).0: std::cell::Ref&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_211 = move _219<br/>StorageDead(_219)<br/>_276 = discriminant(_212)<br/>StorageDead(_212)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>_226 = &amp;_211<br/>_225 = &amp;(*_226)<br/></td></tr><tr><td align="left">_224 = &lt;Ref&lt;'_, SpotMarket&gt; as Deref&gt;::deref(move _225)</td></tr></table>>];
    bb89__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = ((_212 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_218)<br/>_218 = _216<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _218)</td></tr></table>>];
    bb90__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/>_274 = discriminant(_212)<br/>StorageDead(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb91__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">_223 = &amp;(*_224)<br/>StorageDead(_225)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>_253 = deref_copy (_1.1: &amp;mut instructions::keeper::SettlePNL&lt;'_&gt;)<br/>_254 = deref_copy ((*_253).3: std::boxed::Box&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;)<br/>_298 = (((_254.0: std::ptr::Unique&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: std::ptr::NonNull&lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;&gt;).0: *const anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt;)<br/>_231 = &amp;(*_298)<br/></td></tr><tr><td align="left">_230 = &lt;anchor_lang::prelude::InterfaceAccount&lt;'_, anchor_spl::token_interface::TokenAccount&gt; as Deref&gt;::deref(move _231)</td></tr></table>>];
    bb92__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">_229 = &amp;(*_230)<br/></td></tr><tr><td align="left">_228 = &lt;anchor_spl::token_interface::TokenAccount as Deref&gt;::deref(move _229)</td></tr></table>>];
    bb93__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_231)<br/>StorageDead(_229)<br/>_227 = ((*_228).2: u64)<br/></td></tr><tr><td align="left">_222 = validate_spot_market_vault_amount(move _223, move _227)</td></tr></table>>];
    bb94__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageDead(_227)<br/>StorageDead(_223)<br/></td></tr><tr><td align="left">_221 = &lt;std::result::Result&lt;i64, error::ErrorCode&gt; as Try&gt;::branch(move _222)</td></tr></table>>];
    bb95__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>_232 = discriminant(_221)<br/></td></tr><tr><td align="left">switchInt(move _232)</td></tr></table>>];
    bb96__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageLive(_236)<br/>_236 = ((_221 as Continue).0: i64)<br/>_220 = _236<br/>StorageDead(_236)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>StorageLive(_237)<br/>_237 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _237)<br/>StorageDead(_237)<br/></td></tr><tr><td align="left">drop(_211)</td></tr></table>>];
    bb97__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageLive(_233)<br/>_233 = ((_221 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_235)<br/>_235 = _233<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _235)</td></tr></table>>];
    bb98__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_233)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">drop(_211)</td></tr></table>>];
    bb99__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb100__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb101__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb102__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb103__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb104__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb105__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_118)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb106__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_101)<br/></td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb107__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/></td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb108__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/></td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb109__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb110__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb111__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb112__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb113__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_22)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb114__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb115__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left">return</td></tr></table>>];
    bb116__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">116 (cleanup)</td></tr><tr><td align="left">drop(_211)</td></tr></table>>];
    bb117__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">117 (cleanup)</td></tr><tr><td align="left">drop(_105)</td></tr></table>>];
    bb118__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">118 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb119__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">119 (cleanup)</td></tr><tr><td align="left">drop(_75)</td></tr></table>>];
    bb120__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">120 (cleanup)</td></tr><tr><td align="left">drop(_74)</td></tr></table>>];
    bb121__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">121 (cleanup)</td></tr><tr><td align="left">drop(_73)</td></tr></table>>];
    bb122__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">122 (cleanup)</td></tr><tr><td align="left">drop(_90)</td></tr></table>>];
    bb123__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">123 (cleanup)</td></tr><tr><td align="left">drop(_86)</td></tr></table>>];
    bb124__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">124 (cleanup)</td></tr><tr><td align="left">drop(_50)</td></tr></table>>];
    bb125__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">125 (cleanup)</td></tr><tr><td align="left">drop(_25)</td></tr></table>>];
    bb126__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">126 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb127__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">_270 = discriminant(_106)<br/>StorageDead(_110)<br/>_255 = const false<br/>StorageDead(_106)<br/>StorageDead(_105)<br/>StorageDead(_103)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>_119 = _101<br/></td></tr><tr><td align="left">switchInt(move _119)</td></tr></table>>];
    bb128__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">128 (cleanup)</td></tr><tr><td align="left" balign="left">_284 = discriminant(_212)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">129 (cleanup)</td></tr><tr><td align="left" balign="left">_285 = discriminant(_121)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">130 (cleanup)</td></tr><tr><td align="left" balign="left">_286 = discriminant(_106)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">131 (cleanup)</td></tr><tr><td align="left" balign="left">_288 = discriminant(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">132 (cleanup)</td></tr><tr><td align="left" balign="left">_289 = discriminant(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">133 (cleanup)</td></tr><tr><td align="left" balign="left">_290 = discriminant(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_9234 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">134 (cleanup)</td></tr><tr><td align="left" balign="left">_291 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_9234 -> bb1__0_9234 [label="return"];
    bb1__0_9234 -> bb2__0_9234 [label="return"];
    bb1__0_9234 -> bb126__0_9234 [label="unwind"];
    bb2__0_9234 -> bb3__0_9234 [label="0"];
    bb2__0_9234 -> bb5__0_9234 [label="1"];
    bb2__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb3__0_9234 -> bb7__0_9234 [label="return"];
    bb5__0_9234 -> bb6__0_9234 [label="return"];
    bb5__0_9234 -> bb134__0_9234 [label="unwind"];
    bb6__0_9234 -> bb115__0_9234 [label=""];
    bb7__0_9234 -> bb8__0_9234 [label="return"];
    bb7__0_9234 -> bb126__0_9234 [label="unwind"];
    bb8__0_9234 -> bb9__0_9234 [label="0"];
    bb8__0_9234 -> bb10__0_9234 [label="1"];
    bb8__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb9__0_9234 -> bb12__0_9234 [label="return"];
    bb10__0_9234 -> bb11__0_9234 [label="return"];
    bb10__0_9234 -> bb133__0_9234 [label="unwind"];
    bb11__0_9234 -> bb114__0_9234 [label=""];
    bb12__0_9234 -> bb13__0_9234 [label="return"];
    bb13__0_9234 -> bb14__0_9234 [label="return"];
    bb13__0_9234 -> bb126__0_9234 [label="unwind"];
    bb14__0_9234 -> bb15__0_9234 [label="return"];
    bb14__0_9234 -> bb126__0_9234 [label="unwind"];
    bb15__0_9234 -> bb16__0_9234 [label="0"];
    bb15__0_9234 -> bb17__0_9234 [label="1"];
    bb15__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb16__0_9234 -> bb19__0_9234 [label="return"];
    bb16__0_9234 -> bb125__0_9234 [label="unwind"];
    bb17__0_9234 -> bb18__0_9234 [label="return"];
    bb17__0_9234 -> bb132__0_9234 [label="unwind"];
    bb18__0_9234 -> bb113__0_9234 [label=""];
    bb19__0_9234 -> bb21__0_9234 [label="0"];
    bb19__0_9234 -> bb20__0_9234 [label="otherwise"];
    bb20__0_9234 -> bb29__0_9234 [label=""];
    bb21__0_9234 -> bb22__0_9234 [label="return"];
    bb21__0_9234 -> bb125__0_9234 [label="unwind"];
    bb22__0_9234 -> bb23__0_9234 [label="return"];
    bb22__0_9234 -> bb125__0_9234 [label="unwind"];
    bb23__0_9234 -> bb24__0_9234 [label="return"];
    bb23__0_9234 -> bb125__0_9234 [label="unwind"];
    bb24__0_9234 -> bb25__0_9234 [label="return"];
    bb24__0_9234 -> bb124__0_9234 [label="unwind"];
    bb25__0_9234 -> bb26__0_9234 [label="return"];
    bb25__0_9234 -> bb124__0_9234 [label="unwind"];
    bb26__0_9234 -> bb27__0_9234 [label="return"];
    bb26__0_9234 -> bb125__0_9234 [label="unwind"];
    bb27__0_9234 -> bb28__0_9234 [label="return"];
    bb27__0_9234 -> bb125__0_9234 [label="unwind"];
    bb28__0_9234 -> bb29__0_9234 [label=""];
    bb29__0_9234 -> bb30__0_9234 [label="return"];
    bb29__0_9234 -> bb125__0_9234 [label="unwind"];
    bb30__0_9234 -> bb31__0_9234 [label="0"];
    bb30__0_9234 -> bb32__0_9234 [label="1"];
    bb30__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb31__0_9234 -> bb34__0_9234 [label="return"];
    bb31__0_9234 -> bb125__0_9234 [label="unwind"];
    bb32__0_9234 -> bb33__0_9234 [label="return"];
    bb32__0_9234 -> bb125__0_9234 [label="unwind"];
    bb33__0_9234 -> bb112__0_9234 [label=""];
    bb34__0_9234 -> bb35__0_9234 [label="return"];
    bb34__0_9234 -> bb125__0_9234 [label="unwind"];
    bb35__0_9234 -> bb36__0_9234 [label="return"];
    bb35__0_9234 -> bb125__0_9234 [label="unwind"];
    bb36__0_9234 -> bb37__0_9234 [label="return"];
    bb36__0_9234 -> bb123__0_9234 [label="unwind"];
    bb37__0_9234 -> bb38__0_9234 [label="return"];
    bb37__0_9234 -> bb122__0_9234 [label="unwind"];
    bb38__0_9234 -> bb39__0_9234 [label="return"];
    bb38__0_9234 -> bb122__0_9234 [label="unwind"];
    bb39__0_9234 -> bb40__0_9234 [label="return"];
    bb39__0_9234 -> bb122__0_9234 [label="unwind"];
    bb40__0_9234 -> bb41__0_9234 [label="0"];
    bb40__0_9234 -> bb42__0_9234 [label="1"];
    bb40__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb41__0_9234 -> bb44__0_9234 [label="return"];
    bb41__0_9234 -> bb118__0_9234 [label="unwind"];
    bb42__0_9234 -> bb43__0_9234 [label="return"];
    bb42__0_9234 -> bb131__0_9234 [label="unwind"];
    bb43__0_9234 -> bb110__0_9234 [label="return"];
    bb43__0_9234 -> bb123__0_9234 [label="unwind"];
    bb44__0_9234 -> bb45__0_9234 [label="return"];
    bb44__0_9234 -> bb119__0_9234 [label="unwind"];
    bb45__0_9234 -> bb46__0_9234 [label="return"];
    bb45__0_9234 -> bb119__0_9234 [label="unwind"];
    bb46__0_9234 -> bb47__0_9234 [label="return"];
    bb46__0_9234 -> bb119__0_9234 [label="unwind"];
    bb47__0_9234 -> bb48__0_9234 [label="0"];
    bb47__0_9234 -> bb49__0_9234 [label="1"];
    bb47__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb48__0_9234 -> bb51__0_9234 [label="return"];
    bb48__0_9234 -> bb117__0_9234 [label="unwind"];
    bb49__0_9234 -> bb50__0_9234 [label="return"];
    bb49__0_9234 -> bb130__0_9234 [label="unwind"];
    bb50__0_9234 -> bb106__0_9234 [label=""];
    bb51__0_9234 -> bb52__0_9234 [label="return"];
    bb51__0_9234 -> bb117__0_9234 [label="unwind"];
    bb52__0_9234 -> bb127__0_9234 [label="return"];
    bb52__0_9234 -> bb130__0_9234 [label="unwind"];
    bb53__0_9234 -> bb54__0_9234 [label="return"];
    bb53__0_9234 -> bb119__0_9234 [label="unwind"];
    bb54__0_9234 -> bb55__0_9234 [label="return"];
    bb54__0_9234 -> bb119__0_9234 [label="unwind"];
    bb55__0_9234 -> bb56__0_9234 [label="0"];
    bb55__0_9234 -> bb57__0_9234 [label="1"];
    bb55__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb56__0_9234 -> bb59__0_9234 [label="return"];
    bb56__0_9234 -> bb119__0_9234 [label="unwind"];
    bb57__0_9234 -> bb58__0_9234 [label="return"];
    bb57__0_9234 -> bb129__0_9234 [label="unwind"];
    bb58__0_9234 -> bb105__0_9234 [label=""];
    bb59__0_9234 -> bb60__0_9234 [label="return"];
    bb59__0_9234 -> bb119__0_9234 [label="unwind"];
    bb60__0_9234 -> bb61__0_9234 [label="return"];
    bb60__0_9234 -> bb119__0_9234 [label="unwind"];
    bb61__0_9234 -> bb62__0_9234 [label="return"];
    bb61__0_9234 -> bb119__0_9234 [label="unwind"];
    bb62__0_9234 -> bb63__0_9234 [label="0"];
    bb62__0_9234 -> bb64__0_9234 [label="1"];
    bb62__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb63__0_9234 -> bb66__0_9234 [label="return"];
    bb63__0_9234 -> bb119__0_9234 [label="unwind"];
    bb64__0_9234 -> bb65__0_9234 [label="return"];
    bb64__0_9234 -> bb119__0_9234 [label="unwind"];
    bb65__0_9234 -> bb105__0_9234 [label=""];
    bb66__0_9234 -> bb67__0_9234 [label="return"];
    bb66__0_9234 -> bb119__0_9234 [label="unwind"];
    bb67__0_9234 -> bb85__0_9234 [label=""];
    bb68__0_9234 -> bb69__0_9234 [label="return"];
    bb68__0_9234 -> bb119__0_9234 [label="unwind"];
    bb69__0_9234 -> bb70__0_9234 [label="return"];
    bb69__0_9234 -> bb119__0_9234 [label="unwind"];
    bb70__0_9234 -> bb71__0_9234 [label="return"];
    bb70__0_9234 -> bb119__0_9234 [label="unwind"];
    bb71__0_9234 -> bb72__0_9234 [label="return"];
    bb71__0_9234 -> bb119__0_9234 [label="unwind"];
    bb72__0_9234 -> bb73__0_9234 [label="0"];
    bb72__0_9234 -> bb74__0_9234 [label="1"];
    bb72__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb73__0_9234 -> bb76__0_9234 [label="return"];
    bb73__0_9234 -> bb119__0_9234 [label="unwind"];
    bb74__0_9234 -> bb75__0_9234 [label="return"];
    bb74__0_9234 -> bb119__0_9234 [label="unwind"];
    bb75__0_9234 -> bb105__0_9234 [label=""];
    bb76__0_9234 -> bb77__0_9234 [label="return"];
    bb76__0_9234 -> bb119__0_9234 [label="unwind"];
    bb77__0_9234 -> bb78__0_9234 [label="return"];
    bb77__0_9234 -> bb119__0_9234 [label="unwind"];
    bb78__0_9234 -> bb79__0_9234 [label="return"];
    bb78__0_9234 -> bb119__0_9234 [label="unwind"];
    bb79__0_9234 -> bb80__0_9234 [label="return"];
    bb79__0_9234 -> bb119__0_9234 [label="unwind"];
    bb80__0_9234 -> bb81__0_9234 [label="return"];
    bb80__0_9234 -> bb119__0_9234 [label="unwind"];
    bb81__0_9234 -> bb82__0_9234 [label="0"];
    bb81__0_9234 -> bb83__0_9234 [label="1"];
    bb81__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb82__0_9234 -> bb85__0_9234 [label=""];
    bb83__0_9234 -> bb84__0_9234 [label="return"];
    bb83__0_9234 -> bb119__0_9234 [label="unwind"];
    bb84__0_9234 -> bb105__0_9234 [label=""];
    bb85__0_9234 -> bb86__0_9234 [label="return"];
    bb85__0_9234 -> bb119__0_9234 [label="unwind"];
    bb86__0_9234 -> bb87__0_9234 [label="return"];
    bb86__0_9234 -> bb119__0_9234 [label="unwind"];
    bb87__0_9234 -> bb88__0_9234 [label="0"];
    bb87__0_9234 -> bb89__0_9234 [label="1"];
    bb87__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb88__0_9234 -> bb91__0_9234 [label="return"];
    bb88__0_9234 -> bb116__0_9234 [label="unwind"];
    bb89__0_9234 -> bb90__0_9234 [label="return"];
    bb89__0_9234 -> bb128__0_9234 [label="unwind"];
    bb90__0_9234 -> bb104__0_9234 [label=""];
    bb91__0_9234 -> bb92__0_9234 [label="return"];
    bb91__0_9234 -> bb116__0_9234 [label="unwind"];
    bb92__0_9234 -> bb93__0_9234 [label="return"];
    bb92__0_9234 -> bb116__0_9234 [label="unwind"];
    bb93__0_9234 -> bb94__0_9234 [label="return"];
    bb93__0_9234 -> bb116__0_9234 [label="unwind"];
    bb94__0_9234 -> bb95__0_9234 [label="return"];
    bb94__0_9234 -> bb116__0_9234 [label="unwind"];
    bb95__0_9234 -> bb96__0_9234 [label="0"];
    bb95__0_9234 -> bb97__0_9234 [label="1"];
    bb95__0_9234 -> bb4__0_9234 [label="otherwise"];
    bb96__0_9234 -> bb99__0_9234 [label="return"];
    bb96__0_9234 -> bb119__0_9234 [label="unwind"];
    bb97__0_9234 -> bb98__0_9234 [label="return"];
    bb97__0_9234 -> bb116__0_9234 [label="unwind"];
    bb98__0_9234 -> bb104__0_9234 [label="return"];
    bb98__0_9234 -> bb119__0_9234 [label="unwind"];
    bb99__0_9234 -> bb100__0_9234 [label="return"];
    bb99__0_9234 -> bb120__0_9234 [label="unwind"];
    bb100__0_9234 -> bb101__0_9234 [label="return"];
    bb100__0_9234 -> bb121__0_9234 [label="unwind"];
    bb101__0_9234 -> bb102__0_9234 [label="return"];
    bb101__0_9234 -> bb125__0_9234 [label="unwind"];
    bb102__0_9234 -> bb103__0_9234 [label="return"];
    bb102__0_9234 -> bb126__0_9234 [label="unwind"];
    bb103__0_9234 -> bb115__0_9234 [label=""];
    bb104__0_9234 -> bb106__0_9234 [label=""];
    bb105__0_9234 -> bb106__0_9234 [label=""];
    bb106__0_9234 -> bb107__0_9234 [label="return"];
    bb106__0_9234 -> bb120__0_9234 [label="unwind"];
    bb107__0_9234 -> bb108__0_9234 [label="return"];
    bb107__0_9234 -> bb121__0_9234 [label="unwind"];
    bb108__0_9234 -> bb109__0_9234 [label="return"];
    bb108__0_9234 -> bb125__0_9234 [label="unwind"];
    bb109__0_9234 -> bb112__0_9234 [label=""];
    bb110__0_9234 -> bb111__0_9234 [label="return"];
    bb110__0_9234 -> bb125__0_9234 [label="unwind"];
    bb111__0_9234 -> bb112__0_9234 [label=""];
    bb112__0_9234 -> bb113__0_9234 [label="return"];
    bb112__0_9234 -> bb126__0_9234 [label="unwind"];
    bb113__0_9234 -> bb114__0_9234 [label=""];
    bb114__0_9234 -> bb115__0_9234 [label=""];
    bb116__0_9234 -> bb119__0_9234 [label="return"];
    bb117__0_9234 -> bb130__0_9234 [label="return"];
    bb118__0_9234 -> bb119__0_9234 [label="return"];
    bb119__0_9234 -> bb120__0_9234 [label="return"];
    bb120__0_9234 -> bb121__0_9234 [label="return"];
    bb121__0_9234 -> bb125__0_9234 [label="return"];
    bb122__0_9234 -> bb123__0_9234 [label="return"];
    bb123__0_9234 -> bb125__0_9234 [label="return"];
    bb124__0_9234 -> bb125__0_9234 [label="return"];
    bb125__0_9234 -> bb126__0_9234 [label="return"];
    bb127__0_9234 -> bb68__0_9234 [label="0"];
    bb127__0_9234 -> bb53__0_9234 [label="otherwise"];
    bb128__0_9234 -> bb119__0_9234 [label=""];
    bb129__0_9234 -> bb119__0_9234 [label=""];
    bb130__0_9234 -> bb119__0_9234 [label=""];
    bb131__0_9234 -> bb122__0_9234 [label=""];
    bb132__0_9234 -> bb126__0_9234 [label=""];
    bb133__0_9234 -> bb126__0_9234 [label=""];
    bb134__0_9234 -> bb126__0_9234 [label=""];
}
