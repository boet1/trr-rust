digraph Mir_0_7718 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;admin::DeletePrelaunchOracle&lt;'info&gt; as anchor_lang::AccountsExit&lt;'info&gt;&gt;::exit(_1: &amp;ReErased instructions::admin::DeletePrelaunchOracle&lt;ReErased&gt;, _2: &amp;ReErased anchor_lang::prelude::Pubkey) -&gt; std::result::Result&lt;(), anchor_lang::error::Error&gt;<br align="left"/>let _3: ();<br align="left"/>let mut _4: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _5: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _6: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _7: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _8: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _9: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _10: Closure(DefId(0:7719 ~ drift[d311]::instructions::admin::{impl#229}::exit::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _11: isize;<br align="left"/>let _12: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _13: !;<br align="left"/>let mut _14: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _15: ();<br align="left"/>let _16: ();<br align="left"/>let _17: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _18: ();<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _20: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _21: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _22: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::oracle::PrelaunchOracle&gt;;<br align="left"/>let _23: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::oracle::PrelaunchOracle&gt;;<br align="left"/>let mut _24: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _25: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _26: Closure(DefId(0:7720 ~ drift[d311]::instructions::admin::{impl#229}::exit::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _31: ();<br align="left"/>let mut _32: ();<br align="left"/>let mut _33: isize;<br align="left"/>let mut _34: isize;<br align="left"/>let mut _35: isize;<br align="left"/>let mut _36: isize;<br align="left"/>let mut _37: isize;<br align="left"/>let mut _38: isize;<br align="left"/>let mut _39: isize;<br align="left"/>let mut _40: isize;<br align="left"/>let mut _41: isize;<br align="left"/>let mut _42: isize;<br align="left"/>debug self =&gt; _1;<br align="left"/>debug program_id =&gt; _2;<br align="left"/>debug residual =&gt; _12;<br align="left"/>debug val =&gt; _15;<br align="left"/>debug admin =&gt; _17;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>>;
    bb0__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>StorageLive(_4)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = &amp;((*_1).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_7 = &amp;(*_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_2)<br/></td></tr><tr><td align="left">_6 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::AccountsExit&lt;'_&gt;&gt;::exit(move _7, move _9)</td></tr></table>>];
    bb1__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_7)<br/>StorageLive(_10)<br/>_10 = {closure@programs/drift/src/instructions/admin.rs:5514:10: 5514:18}<br/></td></tr><tr><td align="left">_5 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5514:10: 5514:18}&gt;(move _6, move _10)</td></tr></table>>];
    bb2__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">_4 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _5)</td></tr></table>>];
    bb3__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>_11 = discriminant(_4)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb4__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_15)<br/>_15 = ((_4 as Continue).0: ())<br/>_3 = _15<br/>StorageDead(_15)<br/>_33 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/>StorageLive(_16)<br/>StorageLive(_17)<br/>_17 = &amp;((*_1).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = &amp;((*_1).1: anchor_lang::prelude::AccountLoader&lt;'_, state::oracle::PrelaunchOracle&gt;)<br/>_22 = &amp;(*_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>_25 = &amp;(*_17)<br/></td></tr><tr><td align="left">_24 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _25)</td></tr></table>>];
    bb5__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_12)<br/>_12 = move ((_4 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_14)<br/>_14 = move _12<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _14)</td></tr></table>>];
    bb7__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>_39 = discriminant(_4)<br/>StorageDead(_8)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/></td></tr><tr><td align="left">_21 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, PrelaunchOracle&gt; as AccountsClose&lt;'_&gt;&gt;::close(move _22, move _24)</td></tr></table>>];
    bb9__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/>StorageDead(_22)<br/>StorageLive(_26)<br/>_26 = {closure@programs/drift/src/instructions/admin.rs:5514:10: 5514:18}<br/></td></tr><tr><td align="left">_20 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/admin.rs:5514:10: 5514:18}&gt;(move _21, move _26)</td></tr></table>>];
    bb10__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb11__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_27 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb12__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_19 as Continue).0: ())<br/>_18 = _31<br/>StorageDead(_31)<br/>_35 = discriminant(_19)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>_16 = const ()<br/>StorageDead(_17)<br/>StorageDead(_16)<br/>StorageLive(_32)<br/>_32 = ()<br/>_0 = std::result::Result::&lt;(), anchor_lang::error::Error&gt;::Ok(move _32)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = move ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_30)<br/>_30 = move _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb14__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>_37 = discriminant(_19)<br/>StorageDead(_23)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_16)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">return</td></tr></table>>];
    bb16__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">16 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb17__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">17 (cleanup)</td></tr><tr><td align="left" balign="left">_41 = discriminant(_19)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_7718 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">18 (cleanup)</td></tr><tr><td align="left" balign="left">_42 = discriminant(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_7718 -> bb1__0_7718 [label="return"];
    bb1__0_7718 -> bb2__0_7718 [label="return"];
    bb1__0_7718 -> bb16__0_7718 [label="unwind"];
    bb2__0_7718 -> bb3__0_7718 [label="return"];
    bb2__0_7718 -> bb16__0_7718 [label="unwind"];
    bb3__0_7718 -> bb4__0_7718 [label="0"];
    bb3__0_7718 -> bb6__0_7718 [label="1"];
    bb3__0_7718 -> bb5__0_7718 [label="otherwise"];
    bb4__0_7718 -> bb8__0_7718 [label="return"];
    bb6__0_7718 -> bb7__0_7718 [label="return"];
    bb6__0_7718 -> bb18__0_7718 [label="unwind"];
    bb7__0_7718 -> bb15__0_7718 [label=""];
    bb8__0_7718 -> bb9__0_7718 [label="return"];
    bb8__0_7718 -> bb16__0_7718 [label="unwind"];
    bb9__0_7718 -> bb10__0_7718 [label="return"];
    bb9__0_7718 -> bb16__0_7718 [label="unwind"];
    bb10__0_7718 -> bb11__0_7718 [label="return"];
    bb10__0_7718 -> bb16__0_7718 [label="unwind"];
    bb11__0_7718 -> bb12__0_7718 [label="0"];
    bb11__0_7718 -> bb13__0_7718 [label="1"];
    bb11__0_7718 -> bb5__0_7718 [label="otherwise"];
    bb12__0_7718 -> bb15__0_7718 [label=""];
    bb13__0_7718 -> bb14__0_7718 [label="return"];
    bb13__0_7718 -> bb17__0_7718 [label="unwind"];
    bb14__0_7718 -> bb15__0_7718 [label=""];
    bb17__0_7718 -> bb16__0_7718 [label=""];
    bb18__0_7718 -> bb16__0_7718 [label=""];
}
