digraph Mir_0_795 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn update_spot_balances(_1: u128, _2: &amp;ReErased state::spot_market::SpotBalanceType, _3: &amp;ReErased mut state::spot_market::SpotMarket, _4: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased, _5: bool) -&gt; std::result::Result&lt;(), error::ErrorCode&gt;<br align="left"/>let _6: bool;<br align="left"/>let mut _7: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _8: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _9: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _10: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let _11: ();<br align="left"/>let mut _12: bool;<br align="left"/>let _13: bool;<br align="left"/>let mut _14: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _15: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _16: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _17: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _18: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _19: state::spot_market::SpotBalanceType;<br align="left"/>let _20: u128;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _22: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _23: u128;<br align="left"/>let mut _24: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _25: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _26: bool;<br align="left"/>let mut _27: isize;<br align="left"/>let _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _29: !;<br align="left"/>let mut _30: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _31: u128;<br align="left"/>let _32: ();<br align="left"/>let mut _33: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _34: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _35: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _36: u128;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: ();<br align="left"/>let _42: ();<br align="left"/>let mut _43: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _44: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _45: u128;<br align="left"/>let mut _46: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _47: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _48: isize;<br align="left"/>let _49: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _50: !;<br align="left"/>let mut _51: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _52: ();<br align="left"/>let _53: u128;<br align="left"/>let mut _54: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _55: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _56: u128;<br align="left"/>let mut _57: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _58: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _59: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _60: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _61: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u128;<br align="left"/>let _67: bool;<br align="left"/>let mut _68: u128;<br align="left"/>let _69: ();<br align="left"/>let mut _70: bool;<br align="left"/>let _71: u128;<br align="left"/>let _72: u128;<br align="left"/>let mut _73: (u128, u128);<br align="left"/>let mut _74: bool;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: u128;<br align="left"/>let _77: bool;<br align="left"/>let mut _78: bool;<br align="left"/>let mut _79: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _80: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _81: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _82: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _83: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _84: state::spot_market::SpotBalanceType;<br align="left"/>let _85: u128;<br align="left"/>let mut _86: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _87: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _88: u128;<br align="left"/>let mut _89: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _90: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _91: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _92: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _93: bool;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: u128;<br align="left"/>let mut _99: u128;<br align="left"/>let mut _100: u128;<br align="left"/>let mut _101: u128;<br align="left"/>let mut _102: u128;<br align="left"/>let mut _103: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let _104: ();<br align="left"/>let mut _105: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _106: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _107: u128;<br align="left"/>let mut _108: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _109: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _110: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _111: &amp;ReErased dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _112: isize;<br align="left"/>let _113: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _114: !;<br align="left"/>let mut _115: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _116: ();<br align="left"/>let _117: ();<br align="left"/>let mut _118: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _119: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _120: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _121: u128;<br align="left"/>let mut _122: isize;<br align="left"/>let _123: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _124: !;<br align="left"/>let mut _125: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _126: ();<br align="left"/>let mut _127: u128;<br align="left"/>let mut _128: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _129: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _130: u128;<br align="left"/>let mut _131: u128;<br align="left"/>let mut _132: isize;<br align="left"/>let _133: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _134: !;<br align="left"/>let mut _135: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _136: u128;<br align="left"/>let mut _137: bool;<br align="left"/>let mut _138: u128;<br align="left"/>let _139: ();<br align="left"/>let mut _140: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _141: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _142: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _143: state::spot_market::SpotBalanceType;<br align="left"/>let mut _144: isize;<br align="left"/>let _145: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _146: !;<br align="left"/>let mut _147: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _148: ();<br align="left"/>let _149: bool;<br align="left"/>let mut _150: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _151: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _152: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _153: state::spot_market::SpotBalanceType;<br align="left"/>let _154: u128;<br align="left"/>let mut _155: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _156: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _157: u128;<br align="left"/>let mut _158: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _159: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _160: bool;<br align="left"/>let mut _161: isize;<br align="left"/>let _162: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _163: !;<br align="left"/>let mut _164: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _165: u128;<br align="left"/>let _166: ();<br align="left"/>let mut _167: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _168: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _169: &amp;ReErased mut dyn [Binder(Trait(state::spot_market::SpotBalance), [])] + ReErased;<br align="left"/>let mut _170: u128;<br align="left"/>let mut _171: isize;<br align="left"/>let _172: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _173: !;<br align="left"/>let mut _174: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _175: ();<br align="left"/>let _176: ();<br align="left"/>let mut _177: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _178: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _179: u128;<br align="left"/>let mut _180: &amp;ReErased mut state::spot_market::SpotMarket;<br align="left"/>let mut _181: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _182: isize;<br align="left"/>let _183: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _184: !;<br align="left"/>let mut _185: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _186: ();<br align="left"/>let _187: ();<br align="left"/>let mut _188: bool;<br align="left"/>let mut _189: bool;<br align="left"/>let mut _190: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _191: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _192: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _193: state::spot_market::SpotBalanceType;<br align="left"/>let _194: u128;<br align="left"/>let mut _195: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _196: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _197: u128;<br align="left"/>let mut _198: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _199: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _200: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _201: state::spot_market::SpotBalanceType;<br align="left"/>let mut _202: isize;<br align="left"/>let _203: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _204: !;<br align="left"/>let mut _205: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _206: u128;<br align="left"/>let _207: u128;<br align="left"/>let mut _208: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _209: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _210: u128;<br align="left"/>let mut _211: &amp;ReErased state::spot_market::SpotMarket;<br align="left"/>let mut _212: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _213: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let _214: state::spot_market::SpotBalanceType;<br align="left"/>let mut _215: isize;<br align="left"/>let _216: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _217: !;<br align="left"/>let mut _218: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _219: u128;<br align="left"/>let _220: ();<br align="left"/>let mut _221: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, ()&gt;;<br align="left"/>let mut _222: std::result::Result&lt;(), error::ErrorCode&gt;;<br align="left"/>let mut _223: bool;<br align="left"/>let mut _224: u128;<br align="left"/>let mut _225: u128;<br align="left"/>let mut _226: ();<br align="left"/>let _227: error::ErrorCode;<br align="left"/>let _228: ();<br align="left"/>let mut _229: &amp;ReErased str;<br align="left"/>let _230: &amp;ReErased str;<br align="left"/>let mut _231: &amp;ReErased std::string::String;<br align="left"/>let _232: &amp;ReErased std::string::String;<br align="left"/>let _233: std::string::String;<br align="left"/>let _234: std::string::String;<br align="left"/>let mut _235: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _236: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _237: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _238: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let _239: [&amp;ReErased str; 2_usize];<br align="left"/>let mut _240: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _241: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _242: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let _243: [core::fmt::rt::Argument&lt;ReErased&gt;; 1_usize];<br align="left"/>let mut _244: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _245: &amp;ReErased error::ErrorCode;<br align="left"/>let _246: &amp;ReErased error::ErrorCode;<br align="left"/>let _247: ();<br align="left"/>let mut _248: &amp;ReErased str;<br align="left"/>let _249: &amp;ReErased str;<br align="left"/>let mut _250: &amp;ReErased std::string::String;<br align="left"/>let _251: &amp;ReErased std::string::String;<br align="left"/>let _252: std::string::String;<br align="left"/>let _253: std::string::String;<br align="left"/>let mut _254: std::fmt::Arguments&lt;ReErased&gt;;<br align="left"/>let mut _255: &amp;ReErased [&amp;ReErased str];<br align="left"/>let mut _256: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _257: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let _258: [&amp;ReErased str; 3_usize];<br align="left"/>let mut _259: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;];<br align="left"/>let mut _260: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _261: &amp;ReErased [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let _262: [core::fmt::rt::Argument&lt;ReErased&gt;; 2_usize];<br align="left"/>let mut _263: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _264: &amp;ReErased u128;<br align="left"/>let _265: &amp;ReErased u128;<br align="left"/>let mut _266: core::fmt::rt::Argument&lt;ReErased&gt;;<br align="left"/>let mut _267: &amp;ReErased u128;<br align="left"/>let _268: &amp;ReErased u128;<br align="left"/>let mut _269: error::ErrorCode;<br align="left"/>let mut _270: isize;<br align="left"/>let _271: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _272: !;<br align="left"/>let mut _273: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _274: ();<br align="left"/>let mut _275: ();<br align="left"/>let mut _276: &amp;ReErased [&amp;ReErased str; 3_usize];<br align="left"/>let mut _277: &amp;ReErased [&amp;ReErased str; 2_usize];<br align="left"/>let mut _278: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _279: &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _280: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _281: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _282: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>let mut _283: &amp;ReErased &amp;ReErased state::spot_market::SpotBalanceType;<br align="left"/>debug token_amount =&gt; _1;<br align="left"/>debug update_direction =&gt; _2;<br align="left"/>debug spot_market =&gt; _3;<br align="left"/>debug spot_balance =&gt; _4;<br align="left"/>debug is_leaving_drift =&gt; _5;<br align="left"/>debug increase_user_existing_balance =&gt; _6;<br align="left"/>debug round_up =&gt; _13;<br align="left"/>debug balance_delta =&gt; _20;<br align="left"/>debug residual =&gt; _28;<br align="left"/>debug val =&gt; _31;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _49;<br align="left"/>debug val =&gt; _52;<br align="left"/>debug current_token_amount =&gt; _53;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug reduce_user_existing_balance =&gt; _67;<br align="left"/>debug token_delta =&gt; _71;<br align="left"/>debug balance_delta =&gt; _72;<br align="left"/>debug round_up =&gt; _77;<br align="left"/>debug balance_delta =&gt; _85;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _113;<br align="left"/>debug val =&gt; _116;<br align="left"/>debug residual =&gt; _123;<br align="left"/>debug val =&gt; _126;<br align="left"/>debug residual =&gt; _133;<br align="left"/>debug val =&gt; _136;<br align="left"/>debug residual =&gt; _145;<br align="left"/>debug val =&gt; _148;<br align="left"/>debug round_up =&gt; _149;<br align="left"/>debug balance_delta =&gt; _154;<br align="left"/>debug residual =&gt; _162;<br align="left"/>debug val =&gt; _165;<br align="left"/>debug residual =&gt; _172;<br align="left"/>debug val =&gt; _175;<br align="left"/>debug residual =&gt; _183;<br align="left"/>debug val =&gt; _186;<br align="left"/>debug deposit_token_amount =&gt; _194;<br align="left"/>debug residual =&gt; _203;<br align="left"/>debug val =&gt; _206;<br align="left"/>debug borrow_token_amount =&gt; _207;<br align="left"/>debug residual =&gt; _216;<br align="left"/>debug val =&gt; _219;<br align="left"/>debug error_code =&gt; _227;<br align="left"/>debug res =&gt; _234;<br align="left"/>debug res =&gt; _253;<br align="left"/>debug residual =&gt; _271;<br align="left"/>debug val =&gt; _274;<br align="left"/>>;
    bb0__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>_7 = &amp;_2<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>_10 = &amp;(*_4)<br/></td></tr><tr><td align="left">_9 = &lt;dyn SpotBalance as SpotBalance&gt;::balance_type(move _10)</td></tr></table>>];
    bb1__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_8 = &amp;_9<br/>StorageDead(_10)<br/></td></tr><tr><td align="left">_6 = &lt;&amp;SpotBalanceType as PartialEq&gt;::eq(move _7, move _8)</td></tr></table>>];
    bb2__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageDead(_7)<br/>StorageDead(_9)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>_12 = _6<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb3__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>StorageLive(_14)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_4)<br/></td></tr><tr><td align="left">_15 = &lt;dyn SpotBalance as SpotBalance&gt;::balance_type(move _16)</td></tr></table>>];
    bb4__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_14 = &amp;_15<br/>StorageDead(_16)<br/>StorageLive(_17)<br/>_281 = const _<br/>_17 = &amp;(*_281)<br/></td></tr><tr><td align="left">_13 = &lt;&amp;SpotBalanceType as PartialEq&gt;::eq(move _14, move _17)</td></tr></table>>];
    bb5__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_15)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>_23 = _1<br/>StorageLive(_24)<br/>_24 = &amp;(*_3)<br/>StorageLive(_25)<br/>_25 = &amp;(*_2)<br/>StorageLive(_26)<br/>_26 = _13<br/></td></tr><tr><td align="left">_22 = get_spot_balance(move _23, move _24, move _25, move _26)</td></tr></table>>];
    bb6__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb7__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_27 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _27)</td></tr></table>>];
    bb8__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_21 as Continue).0: u128)<br/>_20 = _31<br/>StorageDead(_31)<br/>StorageDead(_21)<br/>StorageLive(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>_35 = &amp;mut (*_4)<br/>StorageLive(_36)<br/>_36 = _20<br/></td></tr><tr><td align="left">_34 = &lt;dyn SpotBalance as SpotBalance&gt;::increase_balance(move _35, move _36)</td></tr></table>>];
    bb9__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb10__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_28)<br/>_28 = ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_30)<br/>_30 = _28<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _30)</td></tr></table>>];
    bb11__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_30)<br/>StorageDead(_28)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb12__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">_33 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _34)</td></tr></table>>];
    bb13__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/>_37 = discriminant(_33)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb14__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_33 as Continue).0: ())<br/>_32 = _41<br/>StorageDead(_41)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = _20<br/>StorageLive(_46)<br/>_46 = &amp;mut (*_3)<br/>StorageLive(_47)<br/>_47 = &amp;(*_2)<br/></td></tr><tr><td align="left">_44 = increase_spot_balance(move _45, move _46, move _47)</td></tr></table>>];
    bb15__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_33 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb16__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_32)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_45)<br/></td></tr><tr><td align="left">_43 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _44)</td></tr></table>>];
    bb18__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>_48 = discriminant(_43)<br/></td></tr><tr><td align="left">switchInt(move _48)</td></tr></table>>];
    bb19__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageLive(_52)<br/>_52 = ((_43 as Continue).0: ())<br/>_42 = _52<br/>StorageDead(_52)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>_11 = const ()<br/>StorageDead(_20)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_43 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_51)<br/>_51 = _49<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _51)</td></tr></table>>];
    bb21__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_49)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb22__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>_57 = &amp;(*_4)<br/></td></tr><tr><td align="left">_56 = &lt;dyn SpotBalance as SpotBalance&gt;::balance(move _57)</td></tr></table>>];
    bb23__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageLive(_58)<br/>_58 = &amp;(*_3)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>StorageLive(_61)<br/>_61 = &amp;(*_4)<br/></td></tr><tr><td align="left">_60 = &lt;dyn SpotBalance as SpotBalance&gt;::balance_type(move _61)</td></tr></table>>];
    bb24__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">_59 = &amp;(*_60)<br/>StorageDead(_61)<br/></td></tr><tr><td align="left">_55 = get_token_amount(move _56, move _58, move _59)</td></tr></table>>];
    bb25__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_58)<br/>StorageDead(_56)<br/></td></tr><tr><td align="left">_54 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _55)</td></tr></table>>];
    bb26__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>_62 = discriminant(_54)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb27__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_54 as Continue).0: u128)<br/>_53 = _66<br/>StorageDead(_66)<br/>StorageDead(_60)<br/>StorageDead(_54)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = _53<br/>_67 = Ne(move _68, const 0_u128)<br/>StorageDead(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _67<br/></td></tr><tr><td align="left">switchInt(move _70)</td></tr></table>>];
    bb28__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_54 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb29__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_60)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _53<br/>StorageLive(_76)<br/>_76 = _1<br/>_74 = Gt(move _75, move _76)<br/></td></tr><tr><td align="left">switchInt(move _74)</td></tr></table>>];
    bb31__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">_69 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _5<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb33__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">_77 = const true<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb34__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = &amp;(*_4)<br/></td></tr><tr><td align="left">_80 = &lt;dyn SpotBalance as SpotBalance&gt;::balance_type(move _81)</td></tr></table>>];
    bb35__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_79 = &amp;_80<br/>StorageDead(_81)<br/>StorageLive(_82)<br/>_283 = const _<br/>_82 = &amp;(*_283)<br/></td></tr><tr><td align="left">_77 = &lt;&amp;SpotBalanceType as PartialEq&gt;::eq(move _79, move _82)</td></tr></table>>];
    bb36__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>_88 = _1<br/>StorageLive(_89)<br/>_89 = &amp;(*_3)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>_92 = &amp;(*_4)<br/></td></tr><tr><td align="left">_91 = &lt;dyn SpotBalance as SpotBalance&gt;::balance_type(move _92)</td></tr></table>>];
    bb38__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">_90 = &amp;(*_91)<br/>StorageDead(_92)<br/>StorageLive(_93)<br/>_93 = _77<br/></td></tr><tr><td align="left">_87 = get_spot_balance(move _88, move _89, move _90, move _93)</td></tr></table>>];
    bb39__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">_86 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _87)</td></tr></table>>];
    bb40__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_87)<br/>_94 = discriminant(_86)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb41__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_86 as Continue).0: u128)<br/>_85 = _98<br/>StorageDead(_98)<br/>StorageDead(_91)<br/>StorageDead(_86)<br/>StorageLive(_99)<br/>_99 = _1<br/>StorageLive(_100)<br/>_100 = _85<br/>_73 = (move _99, move _100)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageDead(_85)<br/>StorageDead(_77)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_86 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb43__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_91)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_77)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_76)<br/>StorageDead(_75)<br/>StorageLive(_101)<br/>_101 = _53<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>_103 = &amp;(*_4)<br/></td></tr><tr><td align="left">_102 = &lt;dyn SpotBalance as SpotBalance&gt;::balance(move _103)</td></tr></table>>];
    bb45__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>_73 = (move _101, move _102)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb46__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageLive(_71)<br/>_71 = (_73.0: u128)<br/>StorageLive(_72)<br/>_72 = (_73.1: u128)<br/>StorageDead(_73)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>StorageLive(_106)<br/>StorageLive(_107)<br/>_107 = _72<br/>StorageLive(_108)<br/>_108 = &amp;mut (*_3)<br/>StorageLive(_109)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>_111 = &amp;(*_4)<br/></td></tr><tr><td align="left">_110 = &lt;dyn SpotBalance as SpotBalance&gt;::balance_type(move _111)</td></tr></table>>];
    bb47__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">_109 = &amp;(*_110)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">_106 = decrease_spot_balance(move _107, move _108, move _109)</td></tr></table>>];
    bb48__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_108)<br/>StorageDead(_107)<br/></td></tr><tr><td align="left">_105 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _106)</td></tr></table>>];
    bb49__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_106)<br/>_112 = discriminant(_105)<br/></td></tr><tr><td align="left">switchInt(move _112)</td></tr></table>>];
    bb50__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_116)<br/>_116 = ((_105 as Continue).0: ())<br/>_104 = _116<br/>StorageDead(_116)<br/>StorageDead(_110)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/>StorageLive(_117)<br/>StorageLive(_118)<br/>StorageLive(_119)<br/>StorageLive(_120)<br/>_120 = &amp;mut (*_4)<br/>StorageLive(_121)<br/>_121 = _72<br/></td></tr><tr><td align="left">_119 = &lt;dyn SpotBalance as SpotBalance&gt;::decrease_balance(move _120, move _121)</td></tr></table>>];
    bb51__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_113)<br/>_113 = ((_105 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_115)<br/>_115 = _113<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _115)</td></tr></table>>];
    bb52__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_115)<br/>StorageDead(_113)<br/>StorageDead(_110)<br/>StorageDead(_105)<br/>StorageDead(_104)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_121)<br/>StorageDead(_120)<br/></td></tr><tr><td align="left">_118 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _119)</td></tr></table>>];
    bb54__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>_122 = discriminant(_118)<br/></td></tr><tr><td align="left">switchInt(move _122)</td></tr></table>>];
    bb55__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_126)<br/>_126 = ((_118 as Continue).0: ())<br/>_117 = _126<br/>StorageDead(_126)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>StorageLive(_130)<br/>_130 = _1<br/>StorageLive(_131)<br/>_131 = _71<br/></td></tr><tr><td align="left">_129 = &lt;u128 as SafeMath&gt;::safe_sub(move _130, move _131)</td></tr></table>>];
    bb56__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_123)<br/>_123 = ((_118 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_125)<br/>_125 = _123<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _125)</td></tr></table>>];
    bb57__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/>StorageDead(_123)<br/>StorageDead(_118)<br/>StorageDead(_117)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_131)<br/>StorageDead(_130)<br/></td></tr><tr><td align="left">_128 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _129)</td></tr></table>>];
    bb59__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_129)<br/>_132 = discriminant(_128)<br/></td></tr><tr><td align="left">switchInt(move _132)</td></tr></table>>];
    bb60__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = ((_128 as Continue).0: u128)<br/>_127 = _136<br/>StorageDead(_136)<br/>_1 = move _127<br/>StorageDead(_127)<br/>StorageDead(_128)<br/>_69 = const ()<br/>StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageLive(_133)<br/>_133 = ((_128 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_135)<br/>_135 = _133<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _135)</td></tr></table>>];
    bb62__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_135)<br/>StorageDead(_133)<br/>StorageDead(_127)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_137)<br/>StorageLive(_138)<br/>_138 = _1<br/>_137 = Gt(move _138, const 0_u128)<br/></td></tr><tr><td align="left">switchInt(move _137)</td></tr></table>>];
    bb64__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageLive(_139)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/>_142 = &amp;mut (*_4)<br/>StorageLive(_143)<br/>_143 = (*_2)<br/></td></tr><tr><td align="left">_141 = &lt;dyn SpotBalance as SpotBalance&gt;::update_balance_type(move _142, move _143)</td></tr></table>>];
    bb65__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_143)<br/>StorageDead(_142)<br/></td></tr><tr><td align="left">_140 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _141)</td></tr></table>>];
    bb66__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">StorageDead(_141)<br/>_144 = discriminant(_140)<br/></td></tr><tr><td align="left">switchInt(move _144)</td></tr></table>>];
    bb67__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left" balign="left">StorageLive(_148)<br/>_148 = ((_140 as Continue).0: ())<br/>_139 = _148<br/>StorageDead(_148)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/>StorageLive(_149)<br/>StorageLive(_150)<br/>_150 = &amp;_2<br/>StorageLive(_151)<br/>_282 = const _<br/>_151 = &amp;(*_282)<br/></td></tr><tr><td align="left">_149 = &lt;&amp;SpotBalanceType as PartialEq&gt;::eq(move _150, move _151)</td></tr></table>>];
    bb68__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageLive(_145)<br/>_145 = ((_140 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_147)<br/>_147 = _145<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _147)</td></tr></table>>];
    bb69__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_147)<br/>StorageDead(_145)<br/>StorageDead(_140)<br/>StorageDead(_139)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb70__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">StorageDead(_151)<br/>StorageDead(_150)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = _1<br/>StorageLive(_158)<br/>_158 = &amp;(*_3)<br/>StorageLive(_159)<br/>_159 = &amp;(*_2)<br/>StorageLive(_160)<br/>_160 = _149<br/></td></tr><tr><td align="left">_156 = get_spot_balance(move _157, move _158, move _159, move _160)</td></tr></table>>];
    bb71__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_160)<br/>StorageDead(_159)<br/>StorageDead(_158)<br/>StorageDead(_157)<br/></td></tr><tr><td align="left">_155 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _156)</td></tr></table>>];
    bb72__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_156)<br/>_161 = discriminant(_155)<br/></td></tr><tr><td align="left">switchInt(move _161)</td></tr></table>>];
    bb73__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageLive(_165)<br/>_165 = ((_155 as Continue).0: u128)<br/>_154 = _165<br/>StorageDead(_165)<br/>StorageDead(_155)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>StorageLive(_168)<br/>StorageLive(_169)<br/>_169 = &amp;mut (*_4)<br/>StorageLive(_170)<br/>_170 = _154<br/></td></tr><tr><td align="left">_168 = &lt;dyn SpotBalance as SpotBalance&gt;::increase_balance(move _169, move _170)</td></tr></table>>];
    bb74__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageLive(_162)<br/>_162 = ((_155 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_164)<br/>_164 = _162<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _164)</td></tr></table>>];
    bb75__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageDead(_164)<br/>StorageDead(_162)<br/>StorageDead(_155)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb76__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left" balign="left">StorageDead(_170)<br/>StorageDead(_169)<br/></td></tr><tr><td align="left">_167 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _168)</td></tr></table>>];
    bb77__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>_171 = discriminant(_167)<br/></td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb78__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageLive(_175)<br/>_175 = ((_167 as Continue).0: ())<br/>_166 = _175<br/>StorageDead(_175)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/>StorageLive(_176)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>_179 = _154<br/>StorageLive(_180)<br/>_180 = &amp;mut (*_3)<br/>StorageLive(_181)<br/>_181 = &amp;(*_2)<br/></td></tr><tr><td align="left">_178 = increase_spot_balance(move _179, move _180, move _181)</td></tr></table>>];
    bb79__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageLive(_172)<br/>_172 = ((_167 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_174)<br/>_174 = _172<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _174)</td></tr></table>>];
    bb80__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_174)<br/>StorageDead(_172)<br/>StorageDead(_167)<br/>StorageDead(_166)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb81__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>StorageDead(_180)<br/>StorageDead(_179)<br/></td></tr><tr><td align="left">_177 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _178)</td></tr></table>>];
    bb82__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_178)<br/>_182 = discriminant(_177)<br/></td></tr><tr><td align="left">switchInt(move _182)</td></tr></table>>];
    bb83__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageLive(_186)<br/>_186 = ((_177 as Continue).0: ())<br/>_176 = _186<br/>StorageDead(_186)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/>_11 = const ()<br/>StorageDead(_154)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb84__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageLive(_183)<br/>_183 = ((_177 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_185)<br/>_185 = _183<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _185)</td></tr></table>>];
    bb85__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/>StorageDead(_183)<br/>StorageDead(_177)<br/>StorageDead(_176)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb86__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>_11 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb87__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/>StorageDead(_67)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb88__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = _5<br/></td></tr><tr><td align="left">switchInt(move _188)</td></tr></table>>];
    bb89__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageLive(_189)<br/>StorageLive(_190)<br/>_190 = &amp;_2<br/>StorageLive(_191)<br/>_280 = const _<br/>_191 = &amp;(*_280)<br/></td></tr><tr><td align="left">_189 = &lt;&amp;SpotBalanceType as PartialEq&gt;::eq(move _190, move _191)</td></tr></table>>];
    bb90__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left">switchInt(move _189)</td></tr></table>>];
    bb91__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_190)<br/>StorageLive(_194)<br/>StorageLive(_195)<br/>StorageLive(_196)<br/>StorageLive(_197)<br/>_197 = ((*_3).11: u128)<br/>StorageLive(_198)<br/>_198 = &amp;(*_3)<br/>StorageLive(_199)<br/>StorageLive(_200)<br/>_279 = const _<br/>_200 = &amp;(*_279)<br/>_199 = &amp;(*_200)<br/></td></tr><tr><td align="left">_196 = get_token_amount(move _197, move _198, move _199)</td></tr></table>>];
    bb92__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageDead(_198)<br/>StorageDead(_197)<br/></td></tr><tr><td align="left">_195 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _196)</td></tr></table>>];
    bb93__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_196)<br/>_202 = discriminant(_195)<br/></td></tr><tr><td align="left">switchInt(move _202)</td></tr></table>>];
    bb94__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_206)<br/>_206 = ((_195 as Continue).0: u128)<br/>_194 = _206<br/>StorageDead(_206)<br/>StorageDead(_200)<br/>StorageDead(_195)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>StorageLive(_210)<br/>_210 = ((*_3).12: u128)<br/>StorageLive(_211)<br/>_211 = &amp;(*_3)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>_278 = const _<br/>_213 = &amp;(*_278)<br/>_212 = &amp;(*_213)<br/></td></tr><tr><td align="left">_209 = get_token_amount(move _210, move _211, move _212)</td></tr></table>>];
    bb95__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_203)<br/>_203 = ((_195 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_205)<br/>_205 = _203<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _205)</td></tr></table>>];
    bb96__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_205)<br/>StorageDead(_203)<br/>StorageDead(_200)<br/>StorageDead(_195)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_212)<br/>StorageDead(_211)<br/>StorageDead(_210)<br/></td></tr><tr><td align="left">_208 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _209)</td></tr></table>>];
    bb98__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>_215 = discriminant(_208)<br/></td></tr><tr><td align="left">switchInt(move _215)</td></tr></table>>];
    bb99__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">StorageLive(_219)<br/>_219 = ((_208 as Continue).0: u128)<br/>_207 = _219<br/>StorageDead(_219)<br/>StorageDead(_213)<br/>StorageDead(_208)<br/>StorageLive(_220)<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>_224 = _194<br/>StorageLive(_225)<br/>_225 = _207<br/>_223 = Ge(move _224, move _225)<br/></td></tr><tr><td align="left">switchInt(move _223)</td></tr></table>>];
    bb100__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left" balign="left">StorageLive(_216)<br/>_216 = ((_208 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_218)<br/>_218 = _216<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _218)</td></tr></table>>];
    bb101__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>StorageDead(_216)<br/>StorageDead(_213)<br/>StorageDead(_208)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb102__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_224)<br/>StorageLive(_226)<br/>_226 = ()<br/>_222 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _226)<br/>StorageDead(_226)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb103__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_225)<br/>StorageDead(_224)<br/>StorageLive(_227)<br/>_227 = error::ErrorCode::SpotMarketInsufficientDeposits<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>_277 = const _<br/>_238 = &amp;(*_277)<br/>_237 = &amp;(*_238)<br/>_236 = move _237 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_237)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>_246 = &amp;_227<br/>_245 = &amp;(*_246)<br/></td></tr><tr><td align="left">_244 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;error::ErrorCode&gt;(move _245)</td></tr></table>>];
    bb104__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_245)<br/>_243 = [move _244]<br/>StorageDead(_244)<br/>_242 = &amp;_243<br/>_241 = &amp;(*_242)<br/>_240 = move _241 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">_235 = Arguments::&lt;'_&gt;::new_v1(move _236, move _240)</td></tr></table>>];
    bb105__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">StorageDead(_240)<br/>StorageDead(_236)<br/></td></tr><tr><td align="left">_234 = format(move _235)</td></tr></table>>];
    bb106__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_235)<br/>StorageDead(_246)<br/>StorageDead(_243)<br/>StorageDead(_242)<br/>StorageDead(_238)<br/>_233 = move _234<br/>StorageDead(_234)<br/>_232 = &amp;_233<br/>_231 = &amp;(*_232)<br/></td></tr><tr><td align="left">_230 = &lt;String as Deref&gt;::deref(move _231)</td></tr></table>>];
    bb107__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">_229 = &amp;(*_230)<br/>StorageDead(_231)<br/></td></tr><tr><td align="left">_228 = solana_program::log::sol_log(move _229)</td></tr></table>>];
    bb108__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_229)<br/></td></tr><tr><td align="left">drop(_233)</td></tr></table>>];
    bb109__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_233)<br/>StorageDead(_232)<br/>StorageDead(_230)<br/>StorageDead(_228)<br/>StorageLive(_247)<br/>StorageLive(_248)<br/>StorageLive(_249)<br/>StorageLive(_250)<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>StorageLive(_253)<br/>StorageLive(_254)<br/>StorageLive(_255)<br/>StorageLive(_256)<br/>StorageLive(_257)<br/>_276 = const _<br/>_257 = &amp;(*_276)<br/>_256 = &amp;(*_257)<br/>_255 = move _256 as &amp;[&amp;str] (PointerCoercion(Unsize))<br/>StorageDead(_256)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>_265 = &amp;_194<br/>_264 = &amp;(*_265)<br/></td></tr><tr><td align="left">_263 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _264)</td></tr></table>>];
    bb110__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_264)<br/>StorageLive(_266)<br/>StorageLive(_267)<br/>StorageLive(_268)<br/>_268 = &amp;_207<br/>_267 = &amp;(*_268)<br/></td></tr><tr><td align="left">_266 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;u128&gt;(move _267)</td></tr></table>>];
    bb111__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_267)<br/>_262 = [move _263, move _266]<br/>StorageDead(_266)<br/>StorageDead(_263)<br/>_261 = &amp;_262<br/>_260 = &amp;(*_261)<br/>_259 = move _260 as &amp;[core::fmt::rt::Argument&lt;'_&gt;] (PointerCoercion(Unsize))<br/>StorageDead(_260)<br/></td></tr><tr><td align="left">_254 = Arguments::&lt;'_&gt;::new_v1(move _255, move _259)</td></tr></table>>];
    bb112__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_259)<br/>StorageDead(_255)<br/></td></tr><tr><td align="left">_253 = format(move _254)</td></tr></table>>];
    bb113__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_254)<br/>StorageDead(_268)<br/>StorageDead(_265)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageDead(_257)<br/>_252 = move _253<br/>StorageDead(_253)<br/>_251 = &amp;_252<br/>_250 = &amp;(*_251)<br/></td></tr><tr><td align="left">_249 = &lt;String as Deref&gt;::deref(move _250)</td></tr></table>>];
    bb114__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">_248 = &amp;(*_249)<br/>StorageDead(_250)<br/></td></tr><tr><td align="left">_247 = solana_program::log::sol_log(move _248)</td></tr></table>>];
    bb115__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/></td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb116__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_252)<br/>StorageDead(_251)<br/>StorageDead(_249)<br/>StorageDead(_247)<br/>StorageLive(_269)<br/>_269 = _227<br/>_222 = std::result::Result::&lt;(), error::ErrorCode&gt;::Err(move _269)<br/>StorageDead(_269)<br/>StorageDead(_227)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb117__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_223)<br/></td></tr><tr><td align="left">_221 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as Try&gt;::branch(move _222)</td></tr></table>>];
    bb118__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_222)<br/>_270 = discriminant(_221)<br/></td></tr><tr><td align="left">switchInt(move _270)</td></tr></table>>];
    bb119__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageLive(_274)<br/>_274 = ((_221 as Continue).0: ())<br/>_220 = _274<br/>StorageDead(_274)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/>_187 = const ()<br/>StorageDead(_207)<br/>StorageDead(_194)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb120__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_271)<br/>_271 = ((_221 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_273)<br/>_273 = _271<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _273)</td></tr></table>>];
    bb121__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageDead(_273)<br/>StorageDead(_271)<br/>StorageDead(_221)<br/>StorageDead(_220)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb122__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_190)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">_187 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/>StorageLive(_275)<br/>_275 = ()<br/>_0 = std::result::Result::&lt;(), error::ErrorCode&gt;::Ok(move _275)<br/>StorageDead(_275)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb125__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_207)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb126__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_194)<br/>StorageDead(_189)<br/>StorageDead(_188)<br/>StorageDead(_187)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb127__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_154)<br/>StorageDead(_149)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb128__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_137)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb129__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageDead(_71)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb130__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_69)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb131__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb132__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb133__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_13)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb134__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb135__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb136__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left">return</td></tr></table>>];
    bb137__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">137 (cleanup)</td></tr><tr><td align="left">drop(_252)</td></tr></table>>];
    bb138__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">138 (cleanup)</td></tr><tr><td align="left">drop(_233)</td></tr></table>>];
    bb139__0_795 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">139 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb0__0_795 -> bb1__0_795 [label="return"];
    bb1__0_795 -> bb2__0_795 [label="return"];
    bb2__0_795 -> bb22__0_795 [label="0"];
    bb2__0_795 -> bb3__0_795 [label="otherwise"];
    bb3__0_795 -> bb4__0_795 [label="return"];
    bb4__0_795 -> bb5__0_795 [label="return"];
    bb5__0_795 -> bb6__0_795 [label="return"];
    bb6__0_795 -> bb7__0_795 [label="return"];
    bb7__0_795 -> bb8__0_795 [label="0"];
    bb7__0_795 -> bb10__0_795 [label="1"];
    bb7__0_795 -> bb9__0_795 [label="otherwise"];
    bb8__0_795 -> bb12__0_795 [label="return"];
    bb10__0_795 -> bb11__0_795 [label="return"];
    bb11__0_795 -> bb133__0_795 [label=""];
    bb12__0_795 -> bb13__0_795 [label="return"];
    bb13__0_795 -> bb14__0_795 [label="0"];
    bb13__0_795 -> bb15__0_795 [label="1"];
    bb13__0_795 -> bb9__0_795 [label="otherwise"];
    bb14__0_795 -> bb17__0_795 [label="return"];
    bb15__0_795 -> bb16__0_795 [label="return"];
    bb16__0_795 -> bb133__0_795 [label=""];
    bb17__0_795 -> bb18__0_795 [label="return"];
    bb18__0_795 -> bb19__0_795 [label="0"];
    bb18__0_795 -> bb20__0_795 [label="1"];
    bb18__0_795 -> bb9__0_795 [label="otherwise"];
    bb19__0_795 -> bb88__0_795 [label=""];
    bb20__0_795 -> bb21__0_795 [label="return"];
    bb21__0_795 -> bb133__0_795 [label=""];
    bb22__0_795 -> bb23__0_795 [label="return"];
    bb23__0_795 -> bb24__0_795 [label="return"];
    bb24__0_795 -> bb25__0_795 [label="return"];
    bb25__0_795 -> bb26__0_795 [label="return"];
    bb26__0_795 -> bb27__0_795 [label="0"];
    bb26__0_795 -> bb28__0_795 [label="1"];
    bb26__0_795 -> bb9__0_795 [label="otherwise"];
    bb27__0_795 -> bb31__0_795 [label="0"];
    bb27__0_795 -> bb30__0_795 [label="otherwise"];
    bb28__0_795 -> bb29__0_795 [label="return"];
    bb29__0_795 -> bb132__0_795 [label=""];
    bb30__0_795 -> bb44__0_795 [label="0"];
    bb30__0_795 -> bb32__0_795 [label="otherwise"];
    bb31__0_795 -> bb63__0_795 [label=""];
    bb32__0_795 -> bb34__0_795 [label="0"];
    bb32__0_795 -> bb33__0_795 [label="otherwise"];
    bb33__0_795 -> bb37__0_795 [label=""];
    bb34__0_795 -> bb35__0_795 [label="return"];
    bb35__0_795 -> bb36__0_795 [label="return"];
    bb36__0_795 -> bb37__0_795 [label=""];
    bb37__0_795 -> bb38__0_795 [label="return"];
    bb38__0_795 -> bb39__0_795 [label="return"];
    bb39__0_795 -> bb40__0_795 [label="return"];
    bb40__0_795 -> bb41__0_795 [label="0"];
    bb40__0_795 -> bb42__0_795 [label="1"];
    bb40__0_795 -> bb9__0_795 [label="otherwise"];
    bb41__0_795 -> bb46__0_795 [label=""];
    bb42__0_795 -> bb43__0_795 [label="return"];
    bb43__0_795 -> bb130__0_795 [label=""];
    bb44__0_795 -> bb45__0_795 [label="return"];
    bb45__0_795 -> bb46__0_795 [label=""];
    bb46__0_795 -> bb47__0_795 [label="return"];
    bb47__0_795 -> bb48__0_795 [label="return"];
    bb48__0_795 -> bb49__0_795 [label="return"];
    bb49__0_795 -> bb50__0_795 [label="0"];
    bb49__0_795 -> bb51__0_795 [label="1"];
    bb49__0_795 -> bb9__0_795 [label="otherwise"];
    bb50__0_795 -> bb53__0_795 [label="return"];
    bb51__0_795 -> bb52__0_795 [label="return"];
    bb52__0_795 -> bb129__0_795 [label=""];
    bb53__0_795 -> bb54__0_795 [label="return"];
    bb54__0_795 -> bb55__0_795 [label="0"];
    bb54__0_795 -> bb56__0_795 [label="1"];
    bb54__0_795 -> bb9__0_795 [label="otherwise"];
    bb55__0_795 -> bb58__0_795 [label="return"];
    bb56__0_795 -> bb57__0_795 [label="return"];
    bb57__0_795 -> bb129__0_795 [label=""];
    bb58__0_795 -> bb59__0_795 [label="return"];
    bb59__0_795 -> bb60__0_795 [label="0"];
    bb59__0_795 -> bb61__0_795 [label="1"];
    bb59__0_795 -> bb9__0_795 [label="otherwise"];
    bb60__0_795 -> bb63__0_795 [label=""];
    bb61__0_795 -> bb62__0_795 [label="return"];
    bb62__0_795 -> bb129__0_795 [label=""];
    bb63__0_795 -> bb86__0_795 [label="0"];
    bb63__0_795 -> bb64__0_795 [label="otherwise"];
    bb64__0_795 -> bb65__0_795 [label="return"];
    bb65__0_795 -> bb66__0_795 [label="return"];
    bb66__0_795 -> bb67__0_795 [label="0"];
    bb66__0_795 -> bb68__0_795 [label="1"];
    bb66__0_795 -> bb9__0_795 [label="otherwise"];
    bb67__0_795 -> bb70__0_795 [label="return"];
    bb68__0_795 -> bb69__0_795 [label="return"];
    bb69__0_795 -> bb128__0_795 [label=""];
    bb70__0_795 -> bb71__0_795 [label="return"];
    bb71__0_795 -> bb72__0_795 [label="return"];
    bb72__0_795 -> bb73__0_795 [label="0"];
    bb72__0_795 -> bb74__0_795 [label="1"];
    bb72__0_795 -> bb9__0_795 [label="otherwise"];
    bb73__0_795 -> bb76__0_795 [label="return"];
    bb74__0_795 -> bb75__0_795 [label="return"];
    bb75__0_795 -> bb127__0_795 [label=""];
    bb76__0_795 -> bb77__0_795 [label="return"];
    bb77__0_795 -> bb78__0_795 [label="0"];
    bb77__0_795 -> bb79__0_795 [label="1"];
    bb77__0_795 -> bb9__0_795 [label="otherwise"];
    bb78__0_795 -> bb81__0_795 [label="return"];
    bb79__0_795 -> bb80__0_795 [label="return"];
    bb80__0_795 -> bb127__0_795 [label=""];
    bb81__0_795 -> bb82__0_795 [label="return"];
    bb82__0_795 -> bb83__0_795 [label="0"];
    bb82__0_795 -> bb84__0_795 [label="1"];
    bb82__0_795 -> bb9__0_795 [label="otherwise"];
    bb83__0_795 -> bb87__0_795 [label=""];
    bb84__0_795 -> bb85__0_795 [label="return"];
    bb85__0_795 -> bb127__0_795 [label=""];
    bb86__0_795 -> bb87__0_795 [label=""];
    bb87__0_795 -> bb88__0_795 [label=""];
    bb88__0_795 -> bb123__0_795 [label="0"];
    bb88__0_795 -> bb89__0_795 [label="otherwise"];
    bb89__0_795 -> bb90__0_795 [label="return"];
    bb90__0_795 -> bb122__0_795 [label="0"];
    bb90__0_795 -> bb91__0_795 [label="otherwise"];
    bb91__0_795 -> bb92__0_795 [label="return"];
    bb92__0_795 -> bb93__0_795 [label="return"];
    bb93__0_795 -> bb94__0_795 [label="0"];
    bb93__0_795 -> bb95__0_795 [label="1"];
    bb93__0_795 -> bb9__0_795 [label="otherwise"];
    bb94__0_795 -> bb97__0_795 [label="return"];
    bb95__0_795 -> bb96__0_795 [label="return"];
    bb96__0_795 -> bb126__0_795 [label=""];
    bb97__0_795 -> bb98__0_795 [label="return"];
    bb98__0_795 -> bb99__0_795 [label="0"];
    bb98__0_795 -> bb100__0_795 [label="1"];
    bb98__0_795 -> bb9__0_795 [label="otherwise"];
    bb99__0_795 -> bb103__0_795 [label="0"];
    bb99__0_795 -> bb102__0_795 [label="otherwise"];
    bb100__0_795 -> bb101__0_795 [label="return"];
    bb101__0_795 -> bb125__0_795 [label=""];
    bb102__0_795 -> bb117__0_795 [label=""];
    bb103__0_795 -> bb104__0_795 [label="return"];
    bb104__0_795 -> bb105__0_795 [label="return"];
    bb105__0_795 -> bb106__0_795 [label="return"];
    bb106__0_795 -> bb107__0_795 [label="return"];
    bb106__0_795 -> bb138__0_795 [label="unwind"];
    bb107__0_795 -> bb108__0_795 [label="return"];
    bb107__0_795 -> bb138__0_795 [label="unwind"];
    bb108__0_795 -> bb109__0_795 [label="return"];
    bb108__0_795 -> bb139__0_795 [label="unwind"];
    bb109__0_795 -> bb110__0_795 [label="return"];
    bb110__0_795 -> bb111__0_795 [label="return"];
    bb111__0_795 -> bb112__0_795 [label="return"];
    bb112__0_795 -> bb113__0_795 [label="return"];
    bb113__0_795 -> bb114__0_795 [label="return"];
    bb113__0_795 -> bb137__0_795 [label="unwind"];
    bb114__0_795 -> bb115__0_795 [label="return"];
    bb114__0_795 -> bb137__0_795 [label="unwind"];
    bb115__0_795 -> bb116__0_795 [label="return"];
    bb115__0_795 -> bb139__0_795 [label="unwind"];
    bb116__0_795 -> bb117__0_795 [label=""];
    bb117__0_795 -> bb118__0_795 [label="return"];
    bb118__0_795 -> bb119__0_795 [label="0"];
    bb118__0_795 -> bb120__0_795 [label="1"];
    bb118__0_795 -> bb9__0_795 [label="otherwise"];
    bb119__0_795 -> bb124__0_795 [label=""];
    bb120__0_795 -> bb121__0_795 [label="return"];
    bb121__0_795 -> bb125__0_795 [label=""];
    bb122__0_795 -> bb123__0_795 [label=""];
    bb123__0_795 -> bb124__0_795 [label=""];
    bb124__0_795 -> bb136__0_795 [label=""];
    bb125__0_795 -> bb126__0_795 [label=""];
    bb126__0_795 -> bb135__0_795 [label=""];
    bb127__0_795 -> bb128__0_795 [label=""];
    bb128__0_795 -> bb131__0_795 [label=""];
    bb129__0_795 -> bb130__0_795 [label=""];
    bb130__0_795 -> bb131__0_795 [label=""];
    bb131__0_795 -> bb132__0_795 [label=""];
    bb132__0_795 -> bb134__0_795 [label=""];
    bb133__0_795 -> bb134__0_795 [label=""];
    bb134__0_795 -> bb135__0_795 [label=""];
    bb135__0_795 -> bb136__0_795 [label=""];
    bb137__0_795 -> bb139__0_795 [label="return"];
    bb138__0_795 -> bb139__0_795 [label="return"];
}
