digraph Mir_0_522 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn merge_modify_order_params_with_existing_order(_1: &amp;ReErased state::user::Order, _2: &amp;ReErased state::order_params::ModifyOrderParams) -&gt; std::result::Result&lt;std::option::Option&lt;state::order_params::OrderParams&gt;, error::ErrorCode&gt;<br align="left"/>let _3: state::user::OrderType;<br align="left"/>let _4: state::user::MarketType;<br align="left"/>let _5: controller::position::PositionDirection;<br align="left"/>let mut _6: std::option::Option&lt;controller::position::PositionDirection&gt;;<br align="left"/>let mut _7: controller::position::PositionDirection;<br align="left"/>let _8: u8;<br align="left"/>let _9: u64;<br align="left"/>let mut _10: isize;<br align="left"/>let mut _11: &amp;ReErased &amp;ReErased state::order_params::ModifyOrderParams;<br align="left"/>let mut _12: &amp;ReErased std::option::Option&lt;u64&gt;;<br align="left"/>let _13: u64;<br align="left"/>let _14: &amp;ReErased u64;<br align="left"/>let mut _15: bool;<br align="left"/>let mut _16: &amp;ReErased state::order_params::ModifyOrderParams;<br align="left"/>let _17: u64;<br align="left"/>let mut _18: u64;<br align="left"/>let mut _19: u64;<br align="left"/>let _20: ();<br align="left"/>let mut _21: bool;<br align="left"/>let mut _22: u64;<br align="left"/>let mut _23: !;<br align="left"/>let mut _24: std::option::Option&lt;state::order_params::OrderParams&gt;;<br align="left"/>let _25: u64;<br align="left"/>let mut _26: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _27: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _28: &amp;ReErased state::user::Order;<br align="left"/>let mut _29: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _34: u64;<br align="left"/>let _35: u64;<br align="left"/>let mut _36: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _37: u64;<br align="left"/>let _38: u16;<br align="left"/>let _39: bool;<br align="left"/>let mut _40: std::option::Option&lt;bool&gt;;<br align="left"/>let mut _41: bool;<br align="left"/>let _42: state::order_params::PostOnlyParam;<br align="left"/>let mut _43: std::option::Option&lt;state::order_params::PostOnlyParam&gt;;<br align="left"/>let mut _44: state::order_params::PostOnlyParam;<br align="left"/>let mut _45: bool;<br align="left"/>let _46: u8;<br align="left"/>let _47: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _48: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _49: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _50: i64;<br align="left"/>let _51: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _52: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _53: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _54: u64;<br align="left"/>let _55: state::user::OrderTriggerCondition;<br align="left"/>let mut _56: std::option::Option&lt;state::user::OrderTriggerCondition&gt;;<br align="left"/>let mut _57: state::user::OrderTriggerCondition;<br align="left"/>let mut _58: isize;<br align="left"/>let _59: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _60: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _61: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _62: i32;<br align="left"/>let _63: std::option::Option&lt;u8&gt;;<br align="left"/>let _64: std::option::Option&lt;i64&gt;;<br align="left"/>let _65: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _66: (std::option::Option&lt;u8&gt;, std::option::Option&lt;i64&gt;, std::option::Option&lt;i64&gt;);<br align="left"/>let mut _67: bool;<br align="left"/>let mut _68: &amp;ReErased std::option::Option&lt;u8&gt;;<br align="left"/>let mut _69: bool;<br align="left"/>let mut _70: &amp;ReErased std::option::Option&lt;i64&gt;;<br align="left"/>let mut _71: bool;<br align="left"/>let mut _72: &amp;ReErased std::option::Option&lt;i64&gt;;<br align="left"/>let mut _73: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _74: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _75: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _76: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _77: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _78: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _79: std::option::Option&lt;state::order_params::OrderParams&gt;;<br align="left"/>let mut _80: state::order_params::OrderParams;<br align="left"/>let mut _81: state::user::OrderType;<br align="left"/>let mut _82: state::user::MarketType;<br align="left"/>let mut _83: controller::position::PositionDirection;<br align="left"/>let mut _84: u8;<br align="left"/>let mut _85: u64;<br align="left"/>let mut _86: u64;<br align="left"/>let mut _87: u16;<br align="left"/>let mut _88: bool;<br align="left"/>let mut _89: state::order_params::PostOnlyParam;<br align="left"/>let mut _90: u8;<br align="left"/>let mut _91: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _92: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _93: state::user::OrderTriggerCondition;<br align="left"/>let mut _94: std::option::Option&lt;i32&gt;;<br align="left"/>let mut _95: std::option::Option&lt;u8&gt;;<br align="left"/>let mut _96: std::option::Option&lt;i64&gt;;<br align="left"/>let mut _97: std::option::Option&lt;i64&gt;;<br align="left"/>debug existing_order =&gt; _1;<br align="left"/>debug modify_order_params =&gt; _2;<br align="left"/>debug order_type =&gt; _3;<br align="left"/>debug market_type =&gt; _4;<br align="left"/>debug direction =&gt; _5;<br align="left"/>debug user_order_id =&gt; _8;<br align="left"/>debug base_asset_amount =&gt; _9;<br align="left"/>debug base_asset_amount =&gt; _13;<br align="left"/>debug base_asset_amount =&gt; _14;<br align="left"/>debug base_asset_amount =&gt; _17;<br align="left"/>debug base_asset_amount =&gt; _25;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug price =&gt; _35;<br align="left"/>debug market_index =&gt; _38;<br align="left"/>debug reduce_only =&gt; _39;<br align="left"/>debug post_only =&gt; _42;<br align="left"/>debug bit_flags =&gt; _46;<br align="left"/>debug max_ts =&gt; _47;<br align="left"/>debug trigger_price =&gt; _51;<br align="left"/>debug trigger_condition =&gt; _55;<br align="left"/>debug oracle_price_offset =&gt; _59;<br align="left"/>debug auction_duration =&gt; _63;<br align="left"/>debug auction_start_price =&gt; _64;<br align="left"/>debug auction_end_price =&gt; _65;<br align="left"/>>;
    bb0__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = ((*_1).13: state::user::OrderType)<br/>StorageLive(_4)<br/>_4 = ((*_1).14: state::user::MarketType)<br/>StorageLive(_5)<br/>StorageLive(_6)<br/>_6 = ((*_2).0: std::option::Option&lt;controller::position::PositionDirection&gt;)<br/>StorageLive(_7)<br/>_7 = ((*_1).17: controller::position::PositionDirection)<br/></td></tr><tr><td align="left">_5 = Option::&lt;controller::position::PositionDirection&gt;::unwrap_or(move _6, move _7)</td></tr></table>>];
    bb1__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_8)<br/>_8 = ((*_1).15: u8)<br/>StorageLive(_9)<br/>_10 = discriminant(((*_2).1: std::option::Option&lt;u64&gt;))<br/></td></tr><tr><td align="left">switchInt(move _10)</td></tr></table>>];
    bb2__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>StorageLive(_27)<br/>StorageLive(_28)<br/>_28 = &amp;(*_1)<br/>StorageLive(_29)<br/>_29 = Option::&lt;i64&gt;::None<br/></td></tr><tr><td align="left">_27 = Order::get_base_asset_amount_unfilled(move _28, move _29)</td></tr></table>>];
    bb3__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb4__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_14)<br/>_14 = &amp;((((*_2).1: std::option::Option&lt;u64&gt;) as Some).0: u64)<br/>StorageLive(_15)<br/>StorageLive(_16)<br/>_16 = &amp;(*_2)<br/></td></tr><tr><td align="left">_15 = order_params::ModifyOrderParams::exclude_previous_fill(move _16)</td></tr></table>>];
    bb5__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb6__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageLive(_13)<br/>_13 = ((((*_2).1: std::option::Option&lt;u64&gt;) as Some).0: u64)<br/>StorageLive(_17)<br/>StorageLive(_18)<br/>_18 = _13<br/>StorageLive(_19)<br/>_19 = ((*_1).3: u64)<br/></td></tr><tr><td align="left">_17 = core::num::&lt;impl u64&gt;::saturating_sub(move _18, move _19)</td></tr></table>>];
    bb7__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_16)<br/>StorageDead(_15)<br/>StorageDead(_14)<br/>StorageLive(_25)<br/>_25 = ((((*_2).1: std::option::Option&lt;u64&gt;) as Some).0: u64)<br/>_9 = _25<br/>StorageDead(_25)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>_22 = _17<br/>_21 = Eq(move _22, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _21)</td></tr></table>>];
    bb9__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageLive(_24)<br/>_24 = Option::&lt;order_params::OrderParams&gt;::None<br/>_0 = std::result::Result::&lt;Option&lt;order_params::OrderParams&gt;, error::ErrorCode&gt;::Ok(move _24)<br/>StorageDead(_24)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>StorageDead(_17)<br/>StorageDead(_13)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_20 = const ()<br/>StorageDead(_21)<br/>StorageDead(_20)<br/>_9 = _17<br/>StorageDead(_17)<br/>StorageDead(_13)<br/>StorageDead(_14)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb11__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_28)<br/></td></tr><tr><td align="left">_26 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _27)</td></tr></table>>];
    bb12__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/>_30 = discriminant(_26)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb13__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_26 as Continue).0: u64)<br/>_9 = _34<br/>StorageDead(_34)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = ((_26 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_33)<br/>_33 = _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;order_params::OrderParams&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb15__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>StorageDead(_26)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb16__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = ((*_2).2: std::option::Option&lt;u64&gt;)<br/>StorageLive(_37)<br/>_37 = ((*_1).1: u64)<br/></td></tr><tr><td align="left">_35 = Option::&lt;u64&gt;::unwrap_or(move _36, move _37)</td></tr></table>>];
    bb17__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageDead(_36)<br/>StorageLive(_38)<br/>_38 = ((*_1).11: u16)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = ((*_2).3: std::option::Option&lt;bool&gt;)<br/>StorageLive(_41)<br/>_41 = ((*_1).18: bool)<br/></td></tr><tr><td align="left">_39 = Option::&lt;bool&gt;::unwrap_or(move _40, move _41)</td></tr></table>>];
    bb18__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_41)<br/>StorageDead(_40)<br/>StorageLive(_42)<br/>StorageLive(_43)<br/>_43 = ((*_2).4: std::option::Option&lt;state::order_params::PostOnlyParam&gt;)<br/>StorageLive(_44)<br/>StorageLive(_45)<br/>_45 = ((*_1).19: bool)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb19__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_44 = PostOnlyParam::MustPostOnly<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_44 = PostOnlyParam::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb21__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/></td></tr><tr><td align="left">_42 = Option::&lt;PostOnlyParam&gt;::unwrap_or(move _43, move _44)</td></tr></table>>];
    bb22__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageLive(_46)<br/>_46 = const 0_u8<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_48 = ((*_2).6: std::option::Option&lt;i64&gt;)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = ((*_1).8: i64)<br/>_49 = Option::&lt;i64&gt;::Some(move _50)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_47 = Option::&lt;i64&gt;::or(move _48, move _49)</td></tr></table>>];
    bb23__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>_52 = ((*_2).7: std::option::Option&lt;u64&gt;)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = ((*_1).5: u64)<br/>_53 = Option::&lt;u64&gt;::Some(move _54)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">_51 = Option::&lt;u64&gt;::or(move _52, move _53)</td></tr></table>>];
    bb24__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>_56 = ((*_2).8: std::option::Option&lt;state::user::OrderTriggerCondition&gt;)<br/>StorageLive(_57)<br/>_58 = discriminant(((*_1).21: state::user::OrderTriggerCondition))<br/></td></tr><tr><td align="left">switchInt(move _58)</td></tr></table>>];
    bb25__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">_57 = OrderTriggerCondition::Above<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">_57 = OrderTriggerCondition::Below<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb27__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left">_55 = Option::&lt;OrderTriggerCondition&gt;::unwrap_or(move _56, move _57)</td></tr></table>>];
    bb28__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>StorageDead(_56)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = ((*_2).9: std::option::Option&lt;i32&gt;)<br/>StorageLive(_61)<br/>StorageLive(_62)<br/>_62 = ((*_1).9: i32)<br/>_61 = Option::&lt;i32&gt;::Some(move _62)<br/>StorageDead(_62)<br/></td></tr><tr><td align="left">_59 = Option::&lt;i32&gt;::or(move _60, move _61)</td></tr></table>>];
    bb29__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>_68 = &amp;((*_2).10: std::option::Option&lt;u8&gt;)<br/></td></tr><tr><td align="left">_67 = Option::&lt;u8&gt;::is_some(move _68)</td></tr></table>>];
    bb30__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb31__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = &amp;((*_2).11: std::option::Option&lt;i64&gt;)<br/></td></tr><tr><td align="left">_69 = Option::&lt;i64&gt;::is_some(move _70)</td></tr></table>>];
    bb32__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left">switchInt(move _69)</td></tr></table>>];
    bb33__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageLive(_71)<br/>StorageLive(_72)<br/>_72 = &amp;((*_2).12: std::option::Option&lt;i64&gt;)<br/></td></tr><tr><td align="left">_71 = Option::&lt;i64&gt;::is_some(move _72)</td></tr></table>>];
    bb34__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left">switchInt(move _71)</td></tr></table>>];
    bb35__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/>StorageLive(_73)<br/>_73 = ((*_2).10: std::option::Option&lt;u8&gt;)<br/>StorageLive(_74)<br/>_74 = ((*_2).11: std::option::Option&lt;i64&gt;)<br/>StorageLive(_75)<br/>_75 = ((*_2).12: std::option::Option&lt;i64&gt;)<br/>_66 = (move _73, move _74, move _75)<br/>StorageDead(_75)<br/>StorageDead(_74)<br/>StorageDead(_73)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageDead(_72)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = Option::&lt;u8&gt;::None<br/>StorageLive(_77)<br/>_77 = Option::&lt;i64&gt;::None<br/>StorageLive(_78)<br/>_78 = Option::&lt;i64&gt;::None<br/>_66 = (move _76, move _77, move _78)<br/>StorageDead(_78)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_69)<br/>StorageDead(_67)<br/>StorageLive(_63)<br/>_63 = (_66.0: std::option::Option&lt;u8&gt;)<br/>StorageLive(_64)<br/>_64 = (_66.1: std::option::Option&lt;i64&gt;)<br/>StorageLive(_65)<br/>_65 = (_66.2: std::option::Option&lt;i64&gt;)<br/>StorageDead(_66)<br/>StorageLive(_79)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>_81 = _3<br/>StorageLive(_82)<br/>_82 = _4<br/>StorageLive(_83)<br/>_83 = _5<br/>StorageLive(_84)<br/>_84 = _8<br/>StorageLive(_85)<br/>_85 = _9<br/>StorageLive(_86)<br/>_86 = _35<br/>StorageLive(_87)<br/>_87 = _38<br/>StorageLive(_88)<br/>_88 = _39<br/>StorageLive(_89)<br/>_89 = _42<br/>StorageLive(_90)<br/>_90 = _46<br/>StorageLive(_91)<br/>_91 = _47<br/>StorageLive(_92)<br/>_92 = _51<br/>StorageLive(_93)<br/>_93 = _55<br/>StorageLive(_94)<br/>_94 = _59<br/>StorageLive(_95)<br/>_95 = _63<br/>StorageLive(_96)<br/>_96 = _64<br/>StorageLive(_97)<br/>_97 = _65<br/>_80 = order_params::OrderParams { order_type: move _81, market_type: move _82, direction: move _83, user_order_id: move _84, base_asset_amount: move _85, price: move _86, market_index: move _87, reduce_only: move _88, post_only: move _89, bit_flags: move _90, max_ts: move _91, trigger_price: move _92, trigger_condition: move _93, oracle_price_offset: move _94, auction_duration: move _95, auction_start_price: move _96, auction_end_price: move _97 }<br/>StorageDead(_97)<br/>StorageDead(_96)<br/>StorageDead(_95)<br/>StorageDead(_94)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageDead(_83)<br/>StorageDead(_82)<br/>StorageDead(_81)<br/>_79 = Option::&lt;order_params::OrderParams&gt;::Some(move _80)<br/>StorageDead(_80)<br/>_0 = std::result::Result::&lt;Option&lt;order_params::OrderParams&gt;, error::ErrorCode&gt;::Ok(move _79)<br/>StorageDead(_79)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_63)<br/>StorageDead(_59)<br/>StorageDead(_55)<br/>StorageDead(_51)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageDead(_42)<br/>StorageDead(_39)<br/>StorageDead(_38)<br/>StorageDead(_35)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb41__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_9)<br/>StorageDead(_8)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb42__0_522 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_522 -> bb1__0_522 [label="return"];
    bb1__0_522 -> bb2__0_522 [label="0"];
    bb1__0_522 -> bb4__0_522 [label="1"];
    bb1__0_522 -> bb3__0_522 [label="otherwise"];
    bb2__0_522 -> bb11__0_522 [label="return"];
    bb4__0_522 -> bb5__0_522 [label="return"];
    bb5__0_522 -> bb7__0_522 [label="0"];
    bb5__0_522 -> bb6__0_522 [label="otherwise"];
    bb6__0_522 -> bb8__0_522 [label="return"];
    bb7__0_522 -> bb16__0_522 [label=""];
    bb8__0_522 -> bb10__0_522 [label="0"];
    bb8__0_522 -> bb9__0_522 [label="otherwise"];
    bb9__0_522 -> bb41__0_522 [label=""];
    bb10__0_522 -> bb16__0_522 [label=""];
    bb11__0_522 -> bb12__0_522 [label="return"];
    bb12__0_522 -> bb13__0_522 [label="0"];
    bb12__0_522 -> bb14__0_522 [label="1"];
    bb12__0_522 -> bb3__0_522 [label="otherwise"];
    bb13__0_522 -> bb16__0_522 [label=""];
    bb14__0_522 -> bb15__0_522 [label="return"];
    bb15__0_522 -> bb41__0_522 [label=""];
    bb16__0_522 -> bb17__0_522 [label="return"];
    bb17__0_522 -> bb18__0_522 [label="return"];
    bb18__0_522 -> bb20__0_522 [label="0"];
    bb18__0_522 -> bb19__0_522 [label="otherwise"];
    bb19__0_522 -> bb21__0_522 [label=""];
    bb20__0_522 -> bb21__0_522 [label=""];
    bb21__0_522 -> bb22__0_522 [label="return"];
    bb22__0_522 -> bb23__0_522 [label="return"];
    bb23__0_522 -> bb24__0_522 [label="return"];
    bb24__0_522 -> bb25__0_522 [label="0"];
    bb24__0_522 -> bb26__0_522 [label="1"];
    bb24__0_522 -> bb25__0_522 [label="2"];
    bb24__0_522 -> bb26__0_522 [label="3"];
    bb24__0_522 -> bb3__0_522 [label="otherwise"];
    bb25__0_522 -> bb27__0_522 [label=""];
    bb26__0_522 -> bb27__0_522 [label=""];
    bb27__0_522 -> bb28__0_522 [label="return"];
    bb28__0_522 -> bb29__0_522 [label="return"];
    bb29__0_522 -> bb30__0_522 [label="return"];
    bb30__0_522 -> bb38__0_522 [label="0"];
    bb30__0_522 -> bb31__0_522 [label="otherwise"];
    bb31__0_522 -> bb32__0_522 [label="return"];
    bb32__0_522 -> bb37__0_522 [label="0"];
    bb32__0_522 -> bb33__0_522 [label="otherwise"];
    bb33__0_522 -> bb34__0_522 [label="return"];
    bb34__0_522 -> bb36__0_522 [label="0"];
    bb34__0_522 -> bb35__0_522 [label="otherwise"];
    bb35__0_522 -> bb40__0_522 [label=""];
    bb36__0_522 -> bb39__0_522 [label=""];
    bb37__0_522 -> bb39__0_522 [label=""];
    bb38__0_522 -> bb39__0_522 [label=""];
    bb39__0_522 -> bb40__0_522 [label=""];
    bb40__0_522 -> bb42__0_522 [label=""];
    bb41__0_522 -> bb42__0_522 [label=""];
}
