// MIR for `state::user::<impl at programs/drift/src/state/user.rs:1596:1: 1596:33>::fmt` after PreCodegen

fn state::user::<impl at programs/drift/src/state/user.rs:1596:1: 1596:33>::fmt(_1: &state::user::MarketType, _2: &mut Formatter<'_>) -> std::result::Result<(), std::fmt::Error> {
    debug self => _1;
    debug f => _2;
    let mut _0: std::result::Result<(), std::fmt::Error>;
    let mut _3: isize;
    let mut _4: &mut std::fmt::Formatter<'_>;
    let mut _5: std::fmt::Arguments<'_>;
    let mut _6: &[&str];
    let mut _7: &[&str; 1];
    let _8: &[&str; 1];
    let _9: [&str; 1];
    let mut _10: &mut std::fmt::Formatter<'_>;
    let mut _11: std::fmt::Arguments<'_>;
    let mut _12: &[&str];
    let mut _13: &[&str; 1];
    let _14: &[&str; 1];
    let _15: [&str; 1];
    let mut _16: &[&str; 1];
    let mut _17: &[&str; 1];

    bb0: {
        _3 = discriminant((*_1));
        switchInt(move _3) -> [0: bb3, 1: bb1, otherwise: bb2];
    }

    bb1: {
        StorageLive(_10);
        _10 = &mut (*_2);
        StorageLive(_11);
        StorageLive(_12);
        StorageLive(_13);
        StorageLive(_14);
        _16 = const _;
        _14 = &(*_16);
        _13 = &(*_14);
        _12 = move _13 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_13);
        _11 = Arguments::<'_>::new_const(move _12) -> [return: bb6, unwind continue];
    }

    bb2: {
        unreachable;
    }

    bb3: {
        StorageLive(_4);
        _4 = &mut (*_2);
        StorageLive(_5);
        StorageLive(_6);
        StorageLive(_7);
        StorageLive(_8);
        _17 = const _;
        _8 = &(*_17);
        _7 = &(*_8);
        _6 = move _7 as &[&str] (PointerCoercion(Unsize));
        StorageDead(_7);
        _5 = Arguments::<'_>::new_const(move _6) -> [return: bb4, unwind continue];
    }

    bb4: {
        StorageDead(_6);
        _0 = Formatter::<'_>::write_fmt(move _4, move _5) -> [return: bb5, unwind continue];
    }

    bb5: {
        StorageDead(_8);
        StorageDead(_5);
        StorageDead(_4);
        goto -> bb8;
    }

    bb6: {
        StorageDead(_12);
        _0 = Formatter::<'_>::write_fmt(move _10, move _11) -> [return: bb7, unwind continue];
    }

    bb7: {
        StorageDead(_14);
        StorageDead(_11);
        StorageDead(_10);
        goto -> bb8;
    }

    bb8: {
        return;
    }
}
