digraph Mir_0_2623 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn estimate_price_from_side(_1: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;, _2: u64) -&gt; std::result::Result&lt;std::option::Option&lt;u64&gt;, error::ErrorCode&gt;<br align="left"/>let mut _3: u64;<br align="left"/>let mut _4: u64;<br align="left"/>let mut _5: u128;<br align="left"/>let _6: ();<br align="left"/>let mut _7: std::slice::Iter&lt;ReErased, math::orders::Level&gt;;<br align="left"/>let mut _8: &amp;ReErased std::vec::Vec&lt;math::orders::Level, std::alloc::Global&gt;;<br align="left"/>let mut _9: std::slice::Iter&lt;ReErased, math::orders::Level&gt;;<br align="left"/>let mut _10: ();<br align="left"/>let _11: ();<br align="left"/>let mut _12: std::option::Option&lt;&amp;ReErased math::orders::Level&gt;;<br align="left"/>let mut _13: &amp;ReErased mut std::slice::Iter&lt;ReErased, math::orders::Level&gt;;<br align="left"/>let mut _14: &amp;ReErased mut std::slice::Iter&lt;ReErased, math::orders::Level&gt;;<br align="left"/>let mut _15: isize;<br align="left"/>let mut _16: !;<br align="left"/>let _17: &amp;ReErased math::orders::Level;<br align="left"/>let _18: u64;<br align="left"/>let mut _19: u64;<br align="left"/>let mut _20: u64;<br align="left"/>let _21: u128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _24: u128;<br align="left"/>let mut _25: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _26: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _27: u64;<br align="left"/>let mut _28: isize;<br align="left"/>let _29: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _30: !;<br align="left"/>let mut _31: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _32: u128;<br align="left"/>let mut _33: u128;<br align="left"/>let mut _34: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _35: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _36: u64;<br align="left"/>let mut _37: isize;<br align="left"/>let _38: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _39: !;<br align="left"/>let mut _40: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _41: u128;<br align="left"/>let mut _42: isize;<br align="left"/>let _43: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _44: !;<br align="left"/>let mut _45: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _46: u128;<br align="left"/>let mut _47: u64;<br align="left"/>let mut _48: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _49: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _50: u64;<br align="left"/>let mut _51: u64;<br align="left"/>let mut _52: isize;<br align="left"/>let _53: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _54: !;<br align="left"/>let mut _55: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _56: u64;<br align="left"/>let mut _57: u64;<br align="left"/>let mut _58: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _59: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _60: u64;<br align="left"/>let mut _61: u64;<br align="left"/>let mut _62: isize;<br align="left"/>let _63: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _64: !;<br align="left"/>let mut _65: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _66: u64;<br align="left"/>let mut _67: u128;<br align="left"/>let mut _68: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _69: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _70: u128;<br align="left"/>let mut _71: u128;<br align="left"/>let mut _72: isize;<br align="left"/>let _73: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _74: !;<br align="left"/>let mut _75: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _76: u128;<br align="left"/>let mut _77: bool;<br align="left"/>let mut _78: u64;<br align="left"/>let mut _79: !;<br align="left"/>let _80: std::option::Option&lt;u64&gt;;<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: u64;<br align="left"/>let mut _83: u64;<br align="left"/>let mut _84: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _85: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _86: u128;<br align="left"/>let mut _87: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _88: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _89: u128;<br align="left"/>let mut _90: u128;<br align="left"/>let mut _91: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _92: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: isize;<br align="left"/>let _95: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _96: !;<br align="left"/>let mut _97: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _98: u128;<br align="left"/>let mut _99: isize;<br align="left"/>let _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _101: !;<br align="left"/>let mut _102: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _103: u128;<br align="left"/>let mut _104: isize;<br align="left"/>let _105: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _106: !;<br align="left"/>let mut _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _108: u64;<br align="left"/>let mut _109: std::option::Option&lt;u64&gt;;<br align="left"/>debug side =&gt; _1;<br align="left"/>debug depth =&gt; _2;<br align="left"/>debug depth_remaining =&gt; _3;<br align="left"/>debug cumulative_base =&gt; _4;<br align="left"/>debug cumulative_quote =&gt; _5;<br align="left"/>debug iter =&gt; _9;<br align="left"/>debug level =&gt; _17;<br align="left"/>debug base_delta =&gt; _18;<br align="left"/>debug quote_delta =&gt; _21;<br align="left"/>debug residual =&gt; _29;<br align="left"/>debug val =&gt; _32;<br align="left"/>debug residual =&gt; _38;<br align="left"/>debug val =&gt; _41;<br align="left"/>debug residual =&gt; _43;<br align="left"/>debug val =&gt; _46;<br align="left"/>debug residual =&gt; _53;<br align="left"/>debug val =&gt; _56;<br align="left"/>debug residual =&gt; _63;<br align="left"/>debug val =&gt; _66;<br align="left"/>debug residual =&gt; _73;<br align="left"/>debug val =&gt; _76;<br align="left"/>debug price =&gt; _80;<br align="left"/>debug residual =&gt; _95;<br align="left"/>debug val =&gt; _98;<br align="left"/>debug residual =&gt; _100;<br align="left"/>debug val =&gt; _103;<br align="left"/>debug residual =&gt; _105;<br align="left"/>debug val =&gt; _108;<br align="left"/>>;
    bb0__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_3)<br/>_3 = _2<br/>StorageLive(_4)<br/>_4 = const 0_u64<br/>StorageLive(_5)<br/>_5 = const 0_u128<br/>StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>_8 = _1<br/></td></tr><tr><td align="left">_7 = &lt;&amp;Vec&lt;Level&gt; as IntoIterator&gt;::into_iter(move _8)</td></tr></table>>];
    bb1__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>StorageLive(_9)<br/>_9 = move _7<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>StorageLive(_14)<br/>_14 = &amp;mut _9<br/>_13 = &amp;mut (*_14)<br/></td></tr><tr><td align="left">_12 = &lt;std::slice::Iter&lt;'_, Level&gt; as Iterator&gt;::next(move _13)</td></tr></table>>];
    bb3__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_13)<br/>_15 = discriminant(_12)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_17)<br/>_17 = ((_12 as Some).0: &amp;math::orders::Level)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>_19 = ((*_17).1: u64)<br/>StorageLive(_20)<br/>_20 = _3<br/></td></tr><tr><td align="left">_18 = &lt;u64 as Ord&gt;::min(move _19, move _20)</td></tr></table>>];
    bb5__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">_6 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb7__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_19)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>StorageLive(_25)<br/>StorageLive(_26)<br/>StorageLive(_27)<br/>_27 = ((*_17).0: u64)<br/></td></tr><tr><td align="left">_26 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _27)</td></tr></table>>];
    bb8__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_27)<br/></td></tr><tr><td align="left">_25 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _26)</td></tr></table>>];
    bb9__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_26)<br/>_28 = discriminant(_25)<br/></td></tr><tr><td align="left">switchInt(move _28)</td></tr></table>>];
    bb10__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageLive(_32)<br/>_32 = ((_25 as Continue).0: u128)<br/>_24 = _32<br/>StorageDead(_32)<br/>StorageLive(_33)<br/>StorageLive(_34)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>_36 = _18<br/></td></tr><tr><td align="left">_35 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _36)</td></tr></table>>];
    bb11__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_25 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_31)<br/>_31 = _29<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _31)</td></tr></table>>];
    bb12__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageDead(_31)<br/>StorageDead(_29)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb13__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/></td></tr><tr><td align="left">_34 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _35)</td></tr></table>>];
    bb14__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_35)<br/>_37 = discriminant(_34)<br/></td></tr><tr><td align="left">switchInt(move _37)</td></tr></table>>];
    bb15__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageLive(_41)<br/>_41 = ((_34 as Continue).0: u128)<br/>_33 = _41<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_23 = &lt;u128 as SafeMath&gt;::safe_mul(move _24, move _33)</td></tr></table>>];
    bb16__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageLive(_38)<br/>_38 = ((_34 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_40)<br/>_40 = _38<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _40)</td></tr></table>>];
    bb17__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>StorageDead(_38)<br/>StorageDead(_33)<br/>StorageDead(_24)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb18__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb19__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_42 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _42)</td></tr></table>>];
    bb20__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_22 as Continue).0: u128)<br/>_21 = _46<br/>StorageDead(_46)<br/>StorageDead(_34)<br/>StorageDead(_25)<br/>StorageDead(_22)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>StorageLive(_49)<br/>StorageLive(_50)<br/>_50 = _4<br/>StorageLive(_51)<br/>_51 = _18<br/></td></tr><tr><td align="left">_49 = &lt;u64 as SafeMath&gt;::safe_add(move _50, move _51)</td></tr></table>>];
    bb21__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageLive(_43)<br/>_43 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_45)<br/>_45 = _43<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _45)</td></tr></table>>];
    bb22__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_45)<br/>StorageDead(_43)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb23__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">_48 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _49)</td></tr></table>>];
    bb24__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>_52 = discriminant(_48)<br/></td></tr><tr><td align="left">switchInt(move _52)</td></tr></table>>];
    bb25__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageLive(_56)<br/>_56 = ((_48 as Continue).0: u64)<br/>_47 = _56<br/>StorageDead(_56)<br/>_4 = move _47<br/>StorageDead(_47)<br/>StorageDead(_48)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>StorageLive(_59)<br/>StorageLive(_60)<br/>_60 = _3<br/>StorageLive(_61)<br/>_61 = _18<br/></td></tr><tr><td align="left">_59 = &lt;u64 as SafeMath&gt;::safe_sub(move _60, move _61)</td></tr></table>>];
    bb26__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageLive(_53)<br/>_53 = ((_48 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_55)<br/>_55 = _53<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _55)</td></tr></table>>];
    bb27__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_55)<br/>StorageDead(_53)<br/>StorageDead(_47)<br/>StorageDead(_48)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb28__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_61)<br/>StorageDead(_60)<br/></td></tr><tr><td align="left">_58 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _59)</td></tr></table>>];
    bb29__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>_62 = discriminant(_58)<br/></td></tr><tr><td align="left">switchInt(move _62)</td></tr></table>>];
    bb30__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_66)<br/>_66 = ((_58 as Continue).0: u64)<br/>_57 = _66<br/>StorageDead(_66)<br/>_3 = move _57<br/>StorageDead(_57)<br/>StorageDead(_58)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>StorageLive(_70)<br/>_70 = _5<br/>StorageLive(_71)<br/>_71 = _21<br/></td></tr><tr><td align="left">_69 = &lt;u128 as SafeMath&gt;::safe_add(move _70, move _71)</td></tr></table>>];
    bb31__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_58 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_65)<br/>_65 = _63<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _65)</td></tr></table>>];
    bb32__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/>StorageDead(_63)<br/>StorageDead(_57)<br/>StorageDead(_58)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb33__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_71)<br/>StorageDead(_70)<br/></td></tr><tr><td align="left">_68 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _69)</td></tr></table>>];
    bb34__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_69)<br/>_72 = discriminant(_68)<br/></td></tr><tr><td align="left">switchInt(move _72)</td></tr></table>>];
    bb35__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = ((_68 as Continue).0: u128)<br/>_67 = _76<br/>StorageDead(_76)<br/>_5 = move _67<br/>StorageDead(_67)<br/>StorageDead(_68)<br/>StorageLive(_77)<br/>StorageLive(_78)<br/>_78 = _3<br/>_77 = Eq(move _78, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _77)</td></tr></table>>];
    bb36__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_73)<br/>_73 = ((_68 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_75)<br/>_75 = _73<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _75)</td></tr></table>>];
    bb37__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_75)<br/>StorageDead(_73)<br/>StorageDead(_67)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_6 = const ()<br/>StorageDead(_77)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb39__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>_11 = const ()<br/>StorageDead(_77)<br/>StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>_10 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb40__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = _3<br/>_81 = Eq(move _82, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _81)</td></tr></table>>];
    bb41__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>StorageLive(_85)<br/>StorageLive(_86)<br/>StorageLive(_87)<br/>StorageLive(_88)<br/>StorageLive(_89)<br/>_89 = _5<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>StorageLive(_92)<br/>StorageLive(_93)<br/>_93 = _4<br/></td></tr><tr><td align="left">_92 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _93)</td></tr></table>>];
    bb42__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_80 = Option::&lt;u64&gt;::None<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb43__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/></td></tr><tr><td align="left">_91 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _92)</td></tr></table>>];
    bb44__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_92)<br/>_94 = discriminant(_91)<br/></td></tr><tr><td align="left">switchInt(move _94)</td></tr></table>>];
    bb45__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_91 as Continue).0: u128)<br/>_90 = _98<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_88 = &lt;u128 as SafeMath&gt;::safe_div(move _89, move _90)</td></tr></table>>];
    bb46__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_95)<br/>_95 = ((_91 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_97)<br/>_97 = _95<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _97)</td></tr></table>>];
    bb47__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>StorageDead(_95)<br/>StorageDead(_90)<br/>StorageDead(_89)<br/>StorageDead(_88)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb48__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_90)<br/>StorageDead(_89)<br/></td></tr><tr><td align="left">_87 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _88)</td></tr></table>>];
    bb49__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>_99 = discriminant(_87)<br/></td></tr><tr><td align="left">switchInt(move _99)</td></tr></table>>];
    bb50__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageLive(_103)<br/>_103 = ((_87 as Continue).0: u128)<br/>_86 = _103<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">_85 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _86)</td></tr></table>>];
    bb51__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_100)<br/>_100 = ((_87 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_102)<br/>_102 = _100<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _102)</td></tr></table>>];
    bb52__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_102)<br/>StorageDead(_100)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb53__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/></td></tr><tr><td align="left">_84 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _85)</td></tr></table>>];
    bb54__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_85)<br/>_104 = discriminant(_84)<br/></td></tr><tr><td align="left">switchInt(move _104)</td></tr></table>>];
    bb55__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageLive(_108)<br/>_108 = ((_84 as Continue).0: u64)<br/>_83 = _108<br/>StorageDead(_108)<br/>_80 = Option::&lt;u64&gt;::Some(move _83)<br/>StorageDead(_83)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageLive(_105)<br/>_105 = ((_84 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_107)<br/>_107 = _105<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;Option&lt;u64&gt;, error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _107)</td></tr></table>>];
    bb57__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_107)<br/>StorageDead(_105)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageLive(_109)<br/>_109 = _80<br/>_0 = std::result::Result::&lt;Option&lt;u64&gt;, error::ErrorCode&gt;::Ok(move _109)<br/>StorageDead(_109)<br/>StorageDead(_80)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageDead(_86)<br/>StorageDead(_85)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb60__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_91)<br/>StorageDead(_87)<br/>StorageDead(_84)<br/>StorageDead(_81)<br/>StorageDead(_80)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb62__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">StorageDead(_25)<br/>StorageDead(_22)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb63__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">StorageDead(_21)<br/>StorageDead(_18)<br/>StorageDead(_17)<br/>StorageDead(_14)<br/>StorageDead(_12)<br/>StorageDead(_11)<br/>StorageDead(_9)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb64__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_3)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb65__0_2623 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_2623 -> bb1__0_2623 [label="return"];
    bb1__0_2623 -> bb2__0_2623 [label=""];
    bb2__0_2623 -> bb3__0_2623 [label="return"];
    bb3__0_2623 -> bb6__0_2623 [label="0"];
    bb3__0_2623 -> bb4__0_2623 [label="1"];
    bb3__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb4__0_2623 -> bb7__0_2623 [label="return"];
    bb6__0_2623 -> bb40__0_2623 [label=""];
    bb7__0_2623 -> bb8__0_2623 [label="return"];
    bb8__0_2623 -> bb9__0_2623 [label="return"];
    bb9__0_2623 -> bb10__0_2623 [label="0"];
    bb9__0_2623 -> bb11__0_2623 [label="1"];
    bb9__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb10__0_2623 -> bb13__0_2623 [label="return"];
    bb11__0_2623 -> bb12__0_2623 [label="return"];
    bb12__0_2623 -> bb62__0_2623 [label=""];
    bb13__0_2623 -> bb14__0_2623 [label="return"];
    bb14__0_2623 -> bb15__0_2623 [label="0"];
    bb14__0_2623 -> bb16__0_2623 [label="1"];
    bb14__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb15__0_2623 -> bb18__0_2623 [label="return"];
    bb16__0_2623 -> bb17__0_2623 [label="return"];
    bb17__0_2623 -> bb61__0_2623 [label=""];
    bb18__0_2623 -> bb19__0_2623 [label="return"];
    bb19__0_2623 -> bb20__0_2623 [label="0"];
    bb19__0_2623 -> bb21__0_2623 [label="1"];
    bb19__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb20__0_2623 -> bb23__0_2623 [label="return"];
    bb21__0_2623 -> bb22__0_2623 [label="return"];
    bb22__0_2623 -> bb61__0_2623 [label=""];
    bb23__0_2623 -> bb24__0_2623 [label="return"];
    bb24__0_2623 -> bb25__0_2623 [label="0"];
    bb24__0_2623 -> bb26__0_2623 [label="1"];
    bb24__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb25__0_2623 -> bb28__0_2623 [label="return"];
    bb26__0_2623 -> bb27__0_2623 [label="return"];
    bb27__0_2623 -> bb63__0_2623 [label=""];
    bb28__0_2623 -> bb29__0_2623 [label="return"];
    bb29__0_2623 -> bb30__0_2623 [label="0"];
    bb29__0_2623 -> bb31__0_2623 [label="1"];
    bb29__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb30__0_2623 -> bb33__0_2623 [label="return"];
    bb31__0_2623 -> bb32__0_2623 [label="return"];
    bb32__0_2623 -> bb63__0_2623 [label=""];
    bb33__0_2623 -> bb34__0_2623 [label="return"];
    bb34__0_2623 -> bb35__0_2623 [label="0"];
    bb34__0_2623 -> bb36__0_2623 [label="1"];
    bb34__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb35__0_2623 -> bb39__0_2623 [label="0"];
    bb35__0_2623 -> bb38__0_2623 [label="otherwise"];
    bb36__0_2623 -> bb37__0_2623 [label="return"];
    bb37__0_2623 -> bb63__0_2623 [label=""];
    bb38__0_2623 -> bb40__0_2623 [label=""];
    bb39__0_2623 -> bb2__0_2623 [label=""];
    bb40__0_2623 -> bb42__0_2623 [label="0"];
    bb40__0_2623 -> bb41__0_2623 [label="otherwise"];
    bb41__0_2623 -> bb43__0_2623 [label="return"];
    bb42__0_2623 -> bb58__0_2623 [label=""];
    bb43__0_2623 -> bb44__0_2623 [label="return"];
    bb44__0_2623 -> bb45__0_2623 [label="0"];
    bb44__0_2623 -> bb46__0_2623 [label="1"];
    bb44__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb45__0_2623 -> bb48__0_2623 [label="return"];
    bb46__0_2623 -> bb47__0_2623 [label="return"];
    bb47__0_2623 -> bb59__0_2623 [label=""];
    bb48__0_2623 -> bb49__0_2623 [label="return"];
    bb49__0_2623 -> bb50__0_2623 [label="0"];
    bb49__0_2623 -> bb51__0_2623 [label="1"];
    bb49__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb50__0_2623 -> bb53__0_2623 [label="return"];
    bb51__0_2623 -> bb52__0_2623 [label="return"];
    bb52__0_2623 -> bb59__0_2623 [label=""];
    bb53__0_2623 -> bb54__0_2623 [label="return"];
    bb54__0_2623 -> bb55__0_2623 [label="0"];
    bb54__0_2623 -> bb56__0_2623 [label="1"];
    bb54__0_2623 -> bb5__0_2623 [label="otherwise"];
    bb55__0_2623 -> bb58__0_2623 [label=""];
    bb56__0_2623 -> bb57__0_2623 [label="return"];
    bb57__0_2623 -> bb60__0_2623 [label=""];
    bb58__0_2623 -> bb65__0_2623 [label=""];
    bb59__0_2623 -> bb60__0_2623 [label=""];
    bb60__0_2623 -> bb64__0_2623 [label=""];
    bb61__0_2623 -> bb62__0_2623 [label=""];
    bb62__0_2623 -> bb63__0_2623 [label=""];
    bb63__0_2623 -> bb64__0_2623 [label=""];
    bb64__0_2623 -> bb65__0_2623 [label=""];
}
