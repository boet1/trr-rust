digraph Mir_0_84 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn calculate_base_swap_output_with_spread(_1: &amp;ReErased state::perp_market::AMM, _2: u64, _3: controller::amm::SwapDirection) -&gt; std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt;<br align="left"/>let _4: u128;<br align="left"/>let _5: u128;<br align="left"/>let mut _6: (u128, u128);<br align="left"/>let mut _7: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _8: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _9: &amp;ReErased state::perp_market::AMM;<br align="left"/>let mut _10: controller::position::PositionDirection;<br align="left"/>let mut _11: isize;<br align="left"/>let mut _12: isize;<br align="left"/>let _13: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _14: !;<br align="left"/>let mut _15: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _16: (u128, u128);<br align="left"/>let _17: u128;<br align="left"/>let mut _18: (u128, u128);<br align="left"/>let mut _19: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _20: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _21: u128;<br align="left"/>let mut _22: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _23: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _24: u64;<br align="left"/>let mut _25: isize;<br align="left"/>let _26: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _27: !;<br align="left"/>let mut _28: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _29: u128;<br align="left"/>let mut _30: u128;<br align="left"/>let mut _31: controller::amm::SwapDirection;<br align="left"/>let mut _32: u128;<br align="left"/>let mut _33: isize;<br align="left"/>let _34: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _35: !;<br align="left"/>let mut _36: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _37: (u128, u128);<br align="left"/>let _38: u128;<br align="left"/>let mut _39: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _40: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _41: u128;<br align="left"/>let mut _42: u128;<br align="left"/>let mut _43: controller::amm::SwapDirection;<br align="left"/>let mut _44: u128;<br align="left"/>let mut _45: isize;<br align="left"/>let _46: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _47: !;<br align="left"/>let mut _48: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _49: u128;<br align="left"/>let _50: u128;<br align="left"/>let _51: u128;<br align="left"/>let mut _52: (u128, u128);<br align="left"/>let mut _53: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, (u128, u128)&gt;;<br align="left"/>let mut _54: std::result::Result&lt;(u128, u128), error::ErrorCode&gt;;<br align="left"/>let mut _55: u128;<br align="left"/>let mut _56: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _57: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _58: u64;<br align="left"/>let mut _59: isize;<br align="left"/>let _60: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _61: !;<br align="left"/>let mut _62: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _63: u128;<br align="left"/>let mut _64: u128;<br align="left"/>let mut _65: controller::amm::SwapDirection;<br align="left"/>let mut _66: u128;<br align="left"/>let mut _67: isize;<br align="left"/>let _68: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _69: !;<br align="left"/>let mut _70: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _71: (u128, u128);<br align="left"/>let _72: u128;<br align="left"/>let mut _73: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u128&gt;;<br align="left"/>let mut _74: std::result::Result&lt;u128, error::ErrorCode&gt;;<br align="left"/>let mut _75: u128;<br align="left"/>let mut _76: u128;<br align="left"/>let mut _77: controller::amm::SwapDirection;<br align="left"/>let mut _78: isize;<br align="left"/>let mut _79: u128;<br align="left"/>let mut _80: u128;<br align="left"/>let mut _81: bool;<br align="left"/>let mut _82: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let mut _83: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>let _84: controller::amm::SwapDirection;<br align="left"/>let mut _85: isize;<br align="left"/>let _86: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _87: !;<br align="left"/>let mut _88: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _89: u128;<br align="left"/>let mut _90: (u128, u128, u64, u64);<br align="left"/>let mut _91: u128;<br align="left"/>let mut _92: u128;<br align="left"/>let mut _93: u64;<br align="left"/>let mut _94: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _95: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _96: u128;<br align="left"/>let mut _97: isize;<br align="left"/>let _98: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _99: !;<br align="left"/>let mut _100: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _101: u64;<br align="left"/>let mut _102: u64;<br align="left"/>let mut _103: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;, u64&gt;;<br align="left"/>let mut _104: std::result::Result&lt;u64, error::ErrorCode&gt;;<br align="left"/>let mut _105: u128;<br align="left"/>let mut _106: isize;<br align="left"/>let _107: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let mut _108: !;<br align="left"/>let mut _109: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;;<br align="left"/>let _110: u64;<br align="left"/>let mut _111: &amp;ReErased controller::amm::SwapDirection;<br align="left"/>debug amm =&gt; _1;<br align="left"/>debug base_asset_swap_amount =&gt; _2;<br align="left"/>debug direction =&gt; _3;<br align="left"/>debug base_asset_reserve_with_spread =&gt; _4;<br align="left"/>debug quote_asset_reserve_with_spread =&gt; _5;<br align="left"/>debug residual =&gt; _13;<br align="left"/>debug val =&gt; _16;<br align="left"/>debug new_quote_asset_reserve_with_spread =&gt; _17;<br align="left"/>debug residual =&gt; _26;<br align="left"/>debug val =&gt; _29;<br align="left"/>debug residual =&gt; _34;<br align="left"/>debug val =&gt; _37;<br align="left"/>debug quote_asset_amount =&gt; _38;<br align="left"/>debug residual =&gt; _46;<br align="left"/>debug val =&gt; _49;<br align="left"/>debug new_quote_asset_reserve =&gt; _50;<br align="left"/>debug new_base_asset_reserve =&gt; _51;<br align="left"/>debug residual =&gt; _60;<br align="left"/>debug val =&gt; _63;<br align="left"/>debug residual =&gt; _68;<br align="left"/>debug val =&gt; _71;<br align="left"/>debug quote_asset_amount_surplus =&gt; _72;<br align="left"/>debug residual =&gt; _86;<br align="left"/>debug val =&gt; _89;<br align="left"/>debug residual =&gt; _98;<br align="left"/>debug val =&gt; _101;<br align="left"/>debug residual =&gt; _107;<br align="left"/>debug val =&gt; _110;<br align="left"/>>;
    bb0__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">StorageLive(_6)<br/>StorageLive(_7)<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>_9 = &amp;(*_1)<br/>StorageLive(_10)<br/>_11 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _11)</td></tr></table>>];
    bb1__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">_10 = controller::position::PositionDirection::Long<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb2__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb3__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_10 = controller::position::PositionDirection::Short<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb4__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left">_8 = get_spread_reserves(move _9, move _10)</td></tr></table>>];
    bb5__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>StorageDead(_9)<br/></td></tr><tr><td align="left">_7 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _8)</td></tr></table>>];
    bb6__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageDead(_8)<br/>_12 = discriminant(_7)<br/></td></tr><tr><td align="left">switchInt(move _12)</td></tr></table>>];
    bb7__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_7 as Continue).0: (u128, u128))<br/>_6 = _16<br/>StorageDead(_16)<br/>StorageLive(_4)<br/>_4 = (_6.0: u128)<br/>StorageLive(_5)<br/>_5 = (_6.1: u128)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/>StorageLive(_18)<br/>StorageLive(_19)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = _2<br/></td></tr><tr><td align="left">_23 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _24)</td></tr></table>>];
    bb8__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageLive(_13)<br/>_13 = ((_7 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_15)<br/>_15 = _13<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _15)</td></tr></table>>];
    bb9__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_15)<br/>StorageDead(_13)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb10__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_24)<br/></td></tr><tr><td align="left">_22 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _23)</td></tr></table>>];
    bb11__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageDead(_23)<br/>_25 = discriminant(_22)<br/></td></tr><tr><td align="left">switchInt(move _25)</td></tr></table>>];
    bb12__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_29)<br/>_29 = ((_22 as Continue).0: u128)<br/>_21 = _29<br/>StorageDead(_29)<br/>StorageLive(_30)<br/>_30 = _4<br/>StorageLive(_31)<br/>_31 = _3<br/>StorageLive(_32)<br/>_32 = ((*_1).10: u128)<br/></td></tr><tr><td align="left">_20 = calculate_swap_output(move _21, move _30, move _31, move _32)</td></tr></table>>];
    bb13__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageLive(_26)<br/>_26 = ((_22 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_28)<br/>_28 = _26<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _28)</td></tr></table>>];
    bb14__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_26)<br/>StorageDead(_21)<br/>StorageDead(_20)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb15__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_32)<br/>StorageDead(_31)<br/>StorageDead(_30)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">_19 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _20)</td></tr></table>>];
    bb16__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>_33 = discriminant(_19)<br/></td></tr><tr><td align="left">switchInt(move _33)</td></tr></table>>];
    bb17__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageLive(_37)<br/>_37 = ((_19 as Continue).0: (u128, u128))<br/>_18 = _37<br/>StorageDead(_37)<br/>StorageLive(_17)<br/>_17 = (_18.0: u128)<br/>StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/>StorageLive(_38)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>StorageLive(_41)<br/>_41 = _5<br/>StorageLive(_42)<br/>_42 = _17<br/>StorageLive(_43)<br/>_43 = _3<br/>StorageLive(_44)<br/>_44 = ((*_1).11: u128)<br/></td></tr><tr><td align="left">_40 = calculate_quote_asset_amount_swapped(move _41, move _42, move _43, move _44)</td></tr></table>>];
    bb18__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = ((_19 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_36)<br/>_36 = _34<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _36)</td></tr></table>>];
    bb19__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_36)<br/>StorageDead(_34)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb20__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_44)<br/>StorageDead(_43)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">_39 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _40)</td></tr></table>>];
    bb21__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_45 = discriminant(_39)<br/></td></tr><tr><td align="left">switchInt(move _45)</td></tr></table>>];
    bb22__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageLive(_49)<br/>_49 = ((_39 as Continue).0: u128)<br/>_38 = _49<br/>StorageDead(_49)<br/>StorageDead(_39)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>StorageLive(_55)<br/>StorageLive(_56)<br/>StorageLive(_57)<br/>StorageLive(_58)<br/>_58 = _2<br/></td></tr><tr><td align="left">_57 = &lt;u64 as Cast&gt;::cast::&lt;u128&gt;(move _58)</td></tr></table>>];
    bb23__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_46)<br/>_46 = ((_39 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_48)<br/>_48 = _46<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _48)</td></tr></table>>];
    bb24__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageDead(_48)<br/>StorageDead(_46)<br/>StorageDead(_39)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb25__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/></td></tr><tr><td align="left">_56 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _57)</td></tr></table>>];
    bb26__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_57)<br/>_59 = discriminant(_56)<br/></td></tr><tr><td align="left">switchInt(move _59)</td></tr></table>>];
    bb27__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageLive(_63)<br/>_63 = ((_56 as Continue).0: u128)<br/>_55 = _63<br/>StorageDead(_63)<br/>StorageLive(_64)<br/>_64 = ((*_1).5: u128)<br/>StorageLive(_65)<br/>_65 = _3<br/>StorageLive(_66)<br/>_66 = ((*_1).10: u128)<br/></td></tr><tr><td align="left">_54 = calculate_swap_output(move _55, move _64, move _65, move _66)</td></tr></table>>];
    bb28__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageLive(_60)<br/>_60 = ((_56 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_62)<br/>_62 = _60<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _62)</td></tr></table>>];
    bb29__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageDead(_62)<br/>StorageDead(_60)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb30__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageDead(_66)<br/>StorageDead(_65)<br/>StorageDead(_64)<br/>StorageDead(_55)<br/></td></tr><tr><td align="left">_53 = &lt;std::result::Result&lt;(u128, u128), error::ErrorCode&gt; as Try&gt;::branch(move _54)</td></tr></table>>];
    bb31__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_54)<br/>_67 = discriminant(_53)<br/></td></tr><tr><td align="left">switchInt(move _67)</td></tr></table>>];
    bb32__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageLive(_71)<br/>_71 = ((_53 as Continue).0: (u128, u128))<br/>_52 = _71<br/>StorageDead(_71)<br/>StorageLive(_50)<br/>_50 = (_52.0: u128)<br/>StorageLive(_51)<br/>_51 = (_52.1: u128)<br/>StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/>StorageLive(_72)<br/>StorageLive(_73)<br/>StorageLive(_74)<br/>StorageLive(_75)<br/>_75 = _50<br/>StorageLive(_76)<br/>_76 = ((*_1).6: u128)<br/>StorageLive(_77)<br/>_78 = discriminant(_3)<br/></td></tr><tr><td align="left">switchInt(move _78)</td></tr></table>>];
    bb33__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageLive(_68)<br/>_68 = ((_53 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_70)<br/>_70 = _68<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _70)</td></tr></table>>];
    bb34__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_70)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb35__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">_77 = SwapDirection::Remove<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb36__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">_77 = SwapDirection::Add<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb37__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = ((*_1).11: u128)<br/>StorageLive(_80)<br/>_80 = _38<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>_82 = &amp;_3<br/>StorageLive(_83)<br/>_111 = const _<br/>_83 = &amp;(*_111)<br/></td></tr><tr><td align="left">_81 = &lt;SwapDirection as PartialEq&gt;::eq(move _82, move _83)</td></tr></table>>];
    bb38__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_83)<br/>StorageDead(_82)<br/></td></tr><tr><td align="left">_74 = controller::amm::calculate_quote_asset_amount_surplus(move _75, move _76, move _77, move _79, move _80, move _81)</td></tr></table>>];
    bb39__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_81)<br/>StorageDead(_80)<br/>StorageDead(_79)<br/>StorageDead(_77)<br/>StorageDead(_76)<br/>StorageDead(_75)<br/></td></tr><tr><td align="left">_73 = &lt;std::result::Result&lt;u128, error::ErrorCode&gt; as Try&gt;::branch(move _74)</td></tr></table>>];
    bb40__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>_85 = discriminant(_73)<br/></td></tr><tr><td align="left">switchInt(move _85)</td></tr></table>>];
    bb41__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_89)<br/>_89 = ((_73 as Continue).0: u128)<br/>_72 = _89<br/>StorageDead(_89)<br/>StorageDead(_73)<br/>StorageLive(_90)<br/>StorageLive(_91)<br/>_91 = _51<br/>StorageLive(_92)<br/>_92 = _50<br/>StorageLive(_93)<br/>StorageLive(_94)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>_96 = _38<br/></td></tr><tr><td align="left">_95 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _96)</td></tr></table>>];
    bb42__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_86)<br/>_86 = ((_73 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_88)<br/>_88 = _86<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _88)</td></tr></table>>];
    bb43__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_86)<br/>StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_96)<br/></td></tr><tr><td align="left">_94 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _95)</td></tr></table>>];
    bb45__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/>_97 = discriminant(_94)<br/></td></tr><tr><td align="left">switchInt(move _97)</td></tr></table>>];
    bb46__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageLive(_101)<br/>_101 = ((_94 as Continue).0: u64)<br/>_93 = _101<br/>StorageDead(_101)<br/>StorageLive(_102)<br/>StorageLive(_103)<br/>StorageLive(_104)<br/>StorageLive(_105)<br/>_105 = _72<br/></td></tr><tr><td align="left">_104 = &lt;u128 as Cast&gt;::cast::&lt;u64&gt;(move _105)</td></tr></table>>];
    bb47__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_98)<br/>_98 = ((_94 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_100)<br/>_100 = _98<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _100)</td></tr></table>>];
    bb48__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageDead(_100)<br/>StorageDead(_98)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_72)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_38)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb49__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_105)<br/></td></tr><tr><td align="left">_103 = &lt;std::result::Result&lt;u64, error::ErrorCode&gt; as Try&gt;::branch(move _104)</td></tr></table>>];
    bb50__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>_106 = discriminant(_103)<br/></td></tr><tr><td align="left">switchInt(move _106)</td></tr></table>>];
    bb51__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageLive(_110)<br/>_110 = ((_103 as Continue).0: u64)<br/>_102 = _110<br/>StorageDead(_110)<br/>_90 = (move _91, move _92, move _93, move _102)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>_0 = std::result::Result::&lt;(u128, u128, u64, u64), error::ErrorCode&gt;::Ok(move _90)<br/>StorageDead(_90)<br/>StorageDead(_72)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_38)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_103)<br/>StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb52__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageLive(_107)<br/>_107 = ((_103 as Break).0: std::result::Result&lt;std::convert::Infallible, error::ErrorCode&gt;)<br/>StorageLive(_109)<br/>_109 = _107<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;(u128, u128, u64, u64), error::ErrorCode&gt; as FromResidual&lt;std::result::Result&lt;Infallible, error::ErrorCode&gt;&gt;&gt;::from_residual(move _109)</td></tr></table>>];
    bb53__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageDead(_109)<br/>StorageDead(_107)<br/>StorageDead(_102)<br/>StorageDead(_93)<br/>StorageDead(_92)<br/>StorageDead(_91)<br/>StorageDead(_90)<br/>StorageDead(_72)<br/>StorageDead(_51)<br/>StorageDead(_50)<br/>StorageDead(_38)<br/>StorageDead(_17)<br/>StorageDead(_5)<br/>StorageDead(_4)<br/>StorageDead(_103)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb54__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageDead(_94)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb55__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_56)<br/>StorageDead(_53)<br/>StorageDead(_52)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left" balign="left">StorageDead(_38)<br/>StorageDead(_17)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb57__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>StorageDead(_19)<br/>StorageDead(_18)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb58__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageDead(_5)<br/>StorageDead(_4)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb59__0_84 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_84 -> bb3__0_84 [label="0"];
    bb0__0_84 -> bb1__0_84 [label="1"];
    bb0__0_84 -> bb2__0_84 [label="otherwise"];
    bb1__0_84 -> bb4__0_84 [label=""];
    bb3__0_84 -> bb4__0_84 [label=""];
    bb4__0_84 -> bb5__0_84 [label="return"];
    bb5__0_84 -> bb6__0_84 [label="return"];
    bb6__0_84 -> bb7__0_84 [label="0"];
    bb6__0_84 -> bb8__0_84 [label="1"];
    bb6__0_84 -> bb2__0_84 [label="otherwise"];
    bb7__0_84 -> bb10__0_84 [label="return"];
    bb8__0_84 -> bb9__0_84 [label="return"];
    bb9__0_84 -> bb59__0_84 [label=""];
    bb10__0_84 -> bb11__0_84 [label="return"];
    bb11__0_84 -> bb12__0_84 [label="0"];
    bb11__0_84 -> bb13__0_84 [label="1"];
    bb11__0_84 -> bb2__0_84 [label="otherwise"];
    bb12__0_84 -> bb15__0_84 [label="return"];
    bb13__0_84 -> bb14__0_84 [label="return"];
    bb14__0_84 -> bb57__0_84 [label=""];
    bb15__0_84 -> bb16__0_84 [label="return"];
    bb16__0_84 -> bb17__0_84 [label="0"];
    bb16__0_84 -> bb18__0_84 [label="1"];
    bb16__0_84 -> bb2__0_84 [label="otherwise"];
    bb17__0_84 -> bb20__0_84 [label="return"];
    bb18__0_84 -> bb19__0_84 [label="return"];
    bb19__0_84 -> bb57__0_84 [label=""];
    bb20__0_84 -> bb21__0_84 [label="return"];
    bb21__0_84 -> bb22__0_84 [label="0"];
    bb21__0_84 -> bb23__0_84 [label="1"];
    bb21__0_84 -> bb2__0_84 [label="otherwise"];
    bb22__0_84 -> bb25__0_84 [label="return"];
    bb23__0_84 -> bb24__0_84 [label="return"];
    bb24__0_84 -> bb56__0_84 [label=""];
    bb25__0_84 -> bb26__0_84 [label="return"];
    bb26__0_84 -> bb27__0_84 [label="0"];
    bb26__0_84 -> bb28__0_84 [label="1"];
    bb26__0_84 -> bb2__0_84 [label="otherwise"];
    bb27__0_84 -> bb30__0_84 [label="return"];
    bb28__0_84 -> bb29__0_84 [label="return"];
    bb29__0_84 -> bb55__0_84 [label=""];
    bb30__0_84 -> bb31__0_84 [label="return"];
    bb31__0_84 -> bb32__0_84 [label="0"];
    bb31__0_84 -> bb33__0_84 [label="1"];
    bb31__0_84 -> bb2__0_84 [label="otherwise"];
    bb32__0_84 -> bb35__0_84 [label="0"];
    bb32__0_84 -> bb36__0_84 [label="1"];
    bb32__0_84 -> bb2__0_84 [label="otherwise"];
    bb33__0_84 -> bb34__0_84 [label="return"];
    bb34__0_84 -> bb55__0_84 [label=""];
    bb35__0_84 -> bb37__0_84 [label=""];
    bb36__0_84 -> bb37__0_84 [label=""];
    bb37__0_84 -> bb38__0_84 [label="return"];
    bb38__0_84 -> bb39__0_84 [label="return"];
    bb39__0_84 -> bb40__0_84 [label="return"];
    bb40__0_84 -> bb41__0_84 [label="0"];
    bb40__0_84 -> bb42__0_84 [label="1"];
    bb40__0_84 -> bb2__0_84 [label="otherwise"];
    bb41__0_84 -> bb44__0_84 [label="return"];
    bb42__0_84 -> bb43__0_84 [label="return"];
    bb43__0_84 -> bb56__0_84 [label=""];
    bb44__0_84 -> bb45__0_84 [label="return"];
    bb45__0_84 -> bb46__0_84 [label="0"];
    bb45__0_84 -> bb47__0_84 [label="1"];
    bb45__0_84 -> bb2__0_84 [label="otherwise"];
    bb46__0_84 -> bb49__0_84 [label="return"];
    bb47__0_84 -> bb48__0_84 [label="return"];
    bb48__0_84 -> bb54__0_84 [label=""];
    bb49__0_84 -> bb50__0_84 [label="return"];
    bb50__0_84 -> bb51__0_84 [label="0"];
    bb50__0_84 -> bb52__0_84 [label="1"];
    bb50__0_84 -> bb2__0_84 [label="otherwise"];
    bb51__0_84 -> bb59__0_84 [label=""];
    bb52__0_84 -> bb53__0_84 [label="return"];
    bb53__0_84 -> bb54__0_84 [label=""];
    bb54__0_84 -> bb59__0_84 [label=""];
    bb55__0_84 -> bb56__0_84 [label=""];
    bb56__0_84 -> bb58__0_84 [label=""];
    bb57__0_84 -> bb58__0_84 [label=""];
    bb58__0_84 -> bb59__0_84 [label=""];
}
