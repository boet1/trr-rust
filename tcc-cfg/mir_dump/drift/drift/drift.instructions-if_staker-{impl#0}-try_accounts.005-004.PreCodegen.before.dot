digraph Mir_0_8533 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn &lt;if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(_1: &amp;ReErased anchor_lang::prelude::Pubkey, _2: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;], _3: &amp;ReErased [u8], _4: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps, _5: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;) -&gt; std::result::Result&lt;instructions::if_staker::InitializeInsuranceFundStake&lt;ReErased&gt;, anchor_lang::error::Error&gt;<br align="left"/>let mut _6: &amp;ReErased [u8];<br align="left"/>let _7: u16;<br align="left"/>let mut _8: &lt;instructions::if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let mut _9: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;, &lt;instructions::if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args&gt;;<br align="left"/>let mut _10: std::result::Result&lt;&lt;instructions::if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _11: std::result::Result&lt;&lt;instructions::if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;;<br align="left"/>let mut _12: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _13: &amp;ReErased mut &amp;ReErased [u8];<br align="left"/>let mut _14: Closure(DefId(0:8534 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#0}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((std::io::Error,)) -&gt; anchor_lang::error::ErrorCode, []), ()]);<br align="left"/>let mut _15: isize;<br align="left"/>let _16: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let mut _17: !;<br align="left"/>let mut _18: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;;<br align="left"/>let _19: &lt;instructions::if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args;<br align="left"/>let _20: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _21: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;&gt;;<br align="left"/>let mut _22: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _23: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _24: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _25: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _26: &amp;ReErased [u8];<br align="left"/>let mut _27: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps;<br align="left"/>let mut _28: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _29: Closure(DefId(0:8535 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#1}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _30: isize;<br align="left"/>let _31: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _32: !;<br align="left"/>let mut _33: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _34: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let _35: ();<br align="left"/>let mut _36: bool;<br align="left"/>let mut _37: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _38: !;<br align="left"/>let mut _39: anchor_lang::error::Error;<br align="left"/>let mut _40: anchor_lang::error::ErrorCode;<br align="left"/>let _41: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _42: usize;<br align="left"/>let mut _43: usize;<br align="left"/>let mut _44: bool;<br align="left"/>let mut _45: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _46: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let _47: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _48: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _49: std::ops::RangeFrom&lt;usize&gt;;<br align="left"/>let _50: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _51: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _52: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _53: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _54: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _55: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _56: &amp;ReErased [u8];<br align="left"/>let mut _57: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps;<br align="left"/>let mut _58: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _59: Closure(DefId(0:8536 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#2}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _60: isize;<br align="left"/>let _61: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _62: !;<br align="left"/>let mut _63: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _64: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _65: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _66: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;&gt;;<br align="left"/>let mut _67: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _68: std::result::Result&lt;std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _69: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _70: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _71: &amp;ReErased [u8];<br align="left"/>let mut _72: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps;<br align="left"/>let mut _73: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _74: Closure(DefId(0:8537 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#3}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _75: isize;<br align="left"/>let _76: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _77: !;<br align="left"/>let mut _78: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _79: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let _80: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _81: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _82: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _83: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _84: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _85: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _86: &amp;ReErased [u8];<br align="left"/>let mut _87: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps;<br align="left"/>let mut _88: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _89: Closure(DefId(0:8538 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#4}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _90: isize;<br align="left"/>let _91: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _92: !;<br align="left"/>let mut _93: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _94: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _95: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _96: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Signer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _97: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _98: std::result::Result&lt;anchor_lang::prelude::Signer&lt;ReErased&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _99: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _100: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _101: &amp;ReErased [u8];<br align="left"/>let mut _102: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps;<br align="left"/>let mut _103: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _104: Closure(DefId(0:8539 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#5}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _105: isize;<br align="left"/>let _106: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _107: !;<br align="left"/>let mut _108: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _109: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _110: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _111: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;&gt;;<br align="left"/>let mut _112: std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _113: std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _114: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _115: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _116: &amp;ReErased [u8];<br align="left"/>let mut _117: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps;<br align="left"/>let mut _118: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _119: Closure(DefId(0:8540 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#6}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _120: isize;<br align="left"/>let _121: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _122: !;<br align="left"/>let mut _123: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _124: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let _125: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _126: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;&gt;;<br align="left"/>let mut _127: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _128: std::result::Result&lt;anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _129: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _130: &amp;ReErased mut &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _131: &amp;ReErased [u8];<br align="left"/>let mut _132: &amp;ReErased mut instructions::if_staker::InitializeInsuranceFundStakeBumps;<br align="left"/>let mut _133: &amp;ReErased mut std::collections::BTreeSet&lt;anchor_lang::prelude::Pubkey, std::alloc::Global&gt;;<br align="left"/>let mut _134: Closure(DefId(0:8541 ~ drift[d311]::instructions::if_staker::{impl#0}::try_accounts::{closure#7}), [ReErased, i32, Binder(extern &quot;RustCall&quot; fn((anchor_lang::error::Error,)) -&gt; anchor_lang::error::Error, []), ()]);<br align="left"/>let mut _135: isize;<br align="left"/>let _136: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _137: !;<br align="left"/>let mut _138: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _139: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let _140: anchor_lang::prelude::Rent;<br align="left"/>let mut _141: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _142: std::result::Result&lt;anchor_lang::prelude::Rent, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _143: isize;<br align="left"/>let _144: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _145: !;<br align="left"/>let mut _146: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _147: anchor_lang::prelude::Rent;<br align="left"/>let _148: anchor_lang::prelude::Pubkey;<br align="left"/>let _149: u8;<br align="left"/>let mut _150: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _151: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _152: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _153: &amp;ReErased [&amp;ReErased [u8]; 3_usize];<br align="left"/>let _154: [&amp;ReErased [u8]; 3_usize];<br align="left"/>let mut _155: &amp;ReErased [u8];<br align="left"/>let mut _156: &amp;ReErased [u8; 20_usize];<br align="left"/>let _157: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _158: &amp;ReErased [u8];<br align="left"/>let _159: &amp;ReErased [u8];<br align="left"/>let mut _160: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _161: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _162: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _163: &amp;ReErased [u8];<br align="left"/>let _164: &amp;ReErased [u8];<br align="left"/>let mut _165: &amp;ReErased [u8; 2_usize];<br align="left"/>let _166: [u8; 2_usize];<br align="left"/>let mut _167: u16;<br align="left"/>let mut _168: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _169: u8;<br align="left"/>let _170: ();<br align="left"/>let mut _171: bool;<br align="left"/>let mut _172: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _173: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _174: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _175: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _176: !;<br align="left"/>let mut _177: anchor_lang::error::Error;<br align="left"/>let mut _178: anchor_lang::error::Error;<br align="left"/>let mut _179: anchor_lang::error::Error;<br align="left"/>let mut _180: anchor_lang::error::ErrorCode;<br align="left"/>let mut _181: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _182: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _183: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _184: anchor_lang::prelude::Pubkey;<br align="left"/>let _185: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _186: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _187: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _188: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _189: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _190: usize;<br align="left"/>let _191: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _192: bool;<br align="left"/>let mut _193: bool;<br align="left"/>let mut _194: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _195: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _196: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _197: anchor_lang::prelude::Pubkey;<br align="left"/>let _198: u64;<br align="left"/>let mut _199: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _200: ();<br align="left"/>let mut _201: bool;<br align="left"/>let mut _202: u64;<br align="left"/>let _203: usize;<br align="left"/>let _204: u64;<br align="left"/>let mut _205: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _206: usize;<br align="left"/>let _207: anchor_lang::system_program::CreateAccount&lt;ReErased&gt;;<br align="left"/>let mut _208: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _209: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _210: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _211: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _212: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::CreateAccount&lt;ReErased&gt;&gt;;<br align="left"/>let mut _213: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _214: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _215: anchor_lang::system_program::CreateAccount&lt;ReErased&gt;;<br align="left"/>let _216: ();<br align="left"/>let mut _217: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _218: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _219: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::CreateAccount&lt;ReErased&gt;&gt;;<br align="left"/>let mut _220: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::CreateAccount&lt;ReErased&gt;&gt;;<br align="left"/>let mut _221: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _222: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _223: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _224: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _225: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _226: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _227: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _228: &amp;ReErased [&amp;ReErased [u8]; 4_usize];<br align="left"/>let _229: [&amp;ReErased [u8]; 4_usize];<br align="left"/>let mut _230: &amp;ReErased [u8];<br align="left"/>let mut _231: &amp;ReErased [u8; 20_usize];<br align="left"/>let _232: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _233: &amp;ReErased [u8];<br align="left"/>let mut _234: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _235: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _236: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _237: &amp;ReErased [u8];<br align="left"/>let _238: &amp;ReErased [u8];<br align="left"/>let mut _239: &amp;ReErased [u8; 2_usize];<br align="left"/>let _240: [u8; 2_usize];<br align="left"/>let mut _241: u16;<br align="left"/>let mut _242: &amp;ReErased [u8];<br align="left"/>let _243: &amp;ReErased [u8];<br align="left"/>let _244: &amp;ReErased [u8];<br align="left"/>let mut _245: &amp;ReErased [u8; 1_usize];<br align="left"/>let _246: [u8; 1_usize];<br align="left"/>let mut _247: u8;<br align="left"/>let mut _248: std::ops::RangeFull;<br align="left"/>let mut _249: std::ops::RangeFull;<br align="left"/>let mut _250: u64;<br align="left"/>let mut _251: u64;<br align="left"/>let mut _252: usize;<br align="left"/>let mut _253: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _254: isize;<br align="left"/>let _255: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _256: !;<br align="left"/>let mut _257: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _258: ();<br align="left"/>let _259: ();<br align="left"/>let mut _260: bool;<br align="left"/>let mut _261: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _262: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _263: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _264: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _265: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _266: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _267: !;<br align="left"/>let mut _268: anchor_lang::error::Error;<br align="left"/>let mut _269: anchor_lang::error::Error;<br align="left"/>let mut _270: anchor_lang::error::AnchorError;<br align="left"/>let mut _271: std::string::String;<br align="left"/>let mut _272: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _273: anchor_lang::error::ErrorCode;<br align="left"/>let mut _274: u32;<br align="left"/>let mut _275: anchor_lang::error::ErrorCode;<br align="left"/>let mut _276: std::string::String;<br align="left"/>let mut _277: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let _278: anchor_lang::error::ErrorCode;<br align="left"/>let mut _279: std::option::Option&lt;anchor_lang::error::ErrorOrigin&gt;;<br align="left"/>let mut _280: anchor_lang::error::ErrorOrigin;<br align="left"/>let mut _281: anchor_lang::error::Source;<br align="left"/>let mut _282: std::option::Option&lt;anchor_lang::error::ComparedValues&gt;;<br align="left"/>let mut _283: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _284: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _285: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _286: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _287: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _288: u64;<br align="left"/>let mut _289: u64;<br align="left"/>let mut _290: u64;<br align="left"/>let mut _291: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _292: usize;<br align="left"/>let mut _293: u64;<br align="left"/>let _294: ();<br align="left"/>let mut _295: bool;<br align="left"/>let mut _296: u64;<br align="left"/>let _297: anchor_lang::system_program::Transfer&lt;ReErased&gt;;<br align="left"/>let mut _298: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _299: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _300: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _301: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _302: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Transfer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _303: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _304: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _305: anchor_lang::system_program::Transfer&lt;ReErased&gt;;<br align="left"/>let _306: ();<br align="left"/>let mut _307: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _308: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _309: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Transfer&lt;ReErased&gt;&gt;;<br align="left"/>let mut _310: u64;<br align="left"/>let mut _311: isize;<br align="left"/>let _312: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _313: !;<br align="left"/>let mut _314: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _315: ();<br align="left"/>let _316: anchor_lang::system_program::Allocate&lt;ReErased&gt;;<br align="left"/>let mut _317: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _318: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _319: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Allocate&lt;ReErased&gt;&gt;;<br align="left"/>let mut _320: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _321: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _322: anchor_lang::system_program::Allocate&lt;ReErased&gt;;<br align="left"/>let _323: ();<br align="left"/>let mut _324: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _325: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _326: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Allocate&lt;ReErased&gt;&gt;;<br align="left"/>let mut _327: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Allocate&lt;ReErased&gt;&gt;;<br align="left"/>let mut _328: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _329: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _330: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _331: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _332: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _333: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _334: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _335: &amp;ReErased [&amp;ReErased [u8]; 4_usize];<br align="left"/>let _336: [&amp;ReErased [u8]; 4_usize];<br align="left"/>let mut _337: &amp;ReErased [u8];<br align="left"/>let mut _338: &amp;ReErased [u8; 20_usize];<br align="left"/>let _339: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _340: &amp;ReErased [u8];<br align="left"/>let mut _341: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _342: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _343: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _344: &amp;ReErased [u8];<br align="left"/>let _345: &amp;ReErased [u8];<br align="left"/>let mut _346: &amp;ReErased [u8; 2_usize];<br align="left"/>let _347: [u8; 2_usize];<br align="left"/>let mut _348: u16;<br align="left"/>let mut _349: &amp;ReErased [u8];<br align="left"/>let _350: &amp;ReErased [u8];<br align="left"/>let _351: &amp;ReErased [u8];<br align="left"/>let mut _352: &amp;ReErased [u8; 1_usize];<br align="left"/>let _353: [u8; 1_usize];<br align="left"/>let mut _354: u8;<br align="left"/>let mut _355: std::ops::RangeFull;<br align="left"/>let mut _356: std::ops::RangeFull;<br align="left"/>let mut _357: u64;<br align="left"/>let mut _358: usize;<br align="left"/>let mut _359: isize;<br align="left"/>let _360: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _361: !;<br align="left"/>let mut _362: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _363: ();<br align="left"/>let _364: anchor_lang::system_program::Assign&lt;ReErased&gt;;<br align="left"/>let mut _365: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _366: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _367: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Assign&lt;ReErased&gt;&gt;;<br align="left"/>let mut _368: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _369: &amp;ReErased anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _370: anchor_lang::system_program::Assign&lt;ReErased&gt;;<br align="left"/>let _371: ();<br align="left"/>let mut _372: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, ()&gt;;<br align="left"/>let mut _373: std::result::Result&lt;(), anchor_lang::error::Error&gt;;<br align="left"/>let mut _374: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Assign&lt;ReErased&gt;&gt;;<br align="left"/>let mut _375: anchor_lang::context::CpiContext&lt;ReErased, ReErased, ReErased, ReErased, anchor_lang::system_program::Assign&lt;ReErased&gt;&gt;;<br align="left"/>let mut _376: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]];<br align="left"/>let mut _377: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _378: &amp;ReErased [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let _379: [&amp;ReErased [&amp;ReErased [u8]]; 1_usize];<br align="left"/>let mut _380: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _381: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let _382: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _383: &amp;ReErased [&amp;ReErased [u8]; 4_usize];<br align="left"/>let _384: [&amp;ReErased [u8]; 4_usize];<br align="left"/>let mut _385: &amp;ReErased [u8];<br align="left"/>let mut _386: &amp;ReErased [u8; 20_usize];<br align="left"/>let _387: &amp;ReErased [u8; 20_usize];<br align="left"/>let mut _388: &amp;ReErased [u8];<br align="left"/>let mut _389: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _390: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _391: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _392: &amp;ReErased [u8];<br align="left"/>let _393: &amp;ReErased [u8];<br align="left"/>let mut _394: &amp;ReErased [u8; 2_usize];<br align="left"/>let _395: [u8; 2_usize];<br align="left"/>let mut _396: u16;<br align="left"/>let mut _397: &amp;ReErased [u8];<br align="left"/>let _398: &amp;ReErased [u8];<br align="left"/>let _399: &amp;ReErased [u8];<br align="left"/>let mut _400: &amp;ReErased [u8; 1_usize];<br align="left"/>let _401: [u8; 1_usize];<br align="left"/>let mut _402: u8;<br align="left"/>let mut _403: std::ops::RangeFull;<br align="left"/>let mut _404: std::ops::RangeFull;<br align="left"/>let mut _405: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _406: isize;<br align="left"/>let _407: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _408: !;<br align="left"/>let mut _409: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _410: ();<br align="left"/>let mut _411: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _412: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _413: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _414: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _415: isize;<br align="left"/>let _416: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _417: anchor_lang::error::Error;<br align="left"/>let mut _418: !;<br align="left"/>let mut _419: anchor_lang::error::Error;<br align="left"/>let mut _420: anchor_lang::error::Error;<br align="left"/>let mut _421: std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _422: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _423: &amp;ReErased &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _424: isize;<br align="left"/>let _425: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _426: anchor_lang::error::Error;<br align="left"/>let mut _427: !;<br align="left"/>let mut _428: anchor_lang::error::Error;<br align="left"/>let mut _429: anchor_lang::error::Error;<br align="left"/>let _430: ();<br align="left"/>let mut _431: bool;<br align="left"/>let _432: ();<br align="left"/>let mut _433: bool;<br align="left"/>let mut _434: usize;<br align="left"/>let mut _435: usize;<br align="left"/>let mut _436: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _437: !;<br align="left"/>let mut _438: anchor_lang::error::Error;<br align="left"/>let mut _439: anchor_lang::error::Error;<br align="left"/>let mut _440: anchor_lang::error::Error;<br align="left"/>let mut _441: anchor_lang::error::ErrorCode;<br align="left"/>let mut _442: (usize, usize);<br align="left"/>let mut _443: usize;<br align="left"/>let mut _444: usize;<br align="left"/>let mut _445: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _446: ();<br align="left"/>let mut _447: bool;<br align="left"/>let mut _448: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _449: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _450: !;<br align="left"/>let mut _451: anchor_lang::error::Error;<br align="left"/>let mut _452: anchor_lang::error::Error;<br align="left"/>let mut _453: anchor_lang::error::Error;<br align="left"/>let mut _454: anchor_lang::error::ErrorCode;<br align="left"/>let mut _455: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _456: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _457: anchor_lang::prelude::Pubkey;<br align="left"/>let _458: u64;<br align="left"/>let mut _459: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _460: usize;<br align="left"/>let mut _461: bool;<br align="left"/>let mut _462: u64;<br align="left"/>let mut _463: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _464: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _465: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _466: u64;<br align="left"/>let mut _467: !;<br align="left"/>let mut _468: anchor_lang::error::Error;<br align="left"/>let mut _469: anchor_lang::error::Error;<br align="left"/>let mut _470: anchor_lang::error::ErrorCode;<br align="left"/>let _471: ();<br align="left"/>let mut _472: bool;<br align="left"/>let mut _473: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _474: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let _475: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _476: !;<br align="left"/>let mut _477: anchor_lang::error::Error;<br align="left"/>let mut _478: anchor_lang::error::Error;<br align="left"/>let mut _479: anchor_lang::error::ErrorCode;<br align="left"/>let _480: ();<br align="left"/>let mut _481: bool;<br align="left"/>let mut _482: &amp;ReErased anchor_lang::prelude::Rent;<br align="left"/>let mut _483: u64;<br align="left"/>let mut _484: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _485: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _486: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _487: usize;<br align="left"/>let mut _488: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;, usize&gt;;<br align="left"/>let mut _489: std::result::Result&lt;usize, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _490: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let _491: anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _492: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _493: isize;<br align="left"/>let _494: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let mut _495: !;<br align="left"/>let mut _496: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;;<br align="left"/>let _497: usize;<br align="left"/>let mut _498: !;<br align="left"/>let mut _499: anchor_lang::error::Error;<br align="left"/>let mut _500: anchor_lang::error::Error;<br align="left"/>let mut _501: anchor_lang::error::ErrorCode;<br align="left"/>let _502: anchor_lang::prelude::Pubkey;<br align="left"/>let _503: u8;<br align="left"/>let mut _504: (anchor_lang::prelude::Pubkey, u8);<br align="left"/>let mut _505: &amp;ReErased [&amp;ReErased [u8]];<br align="left"/>let mut _506: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _507: &amp;ReErased [&amp;ReErased [u8]; 2_usize];<br align="left"/>let _508: [&amp;ReErased [u8]; 2_usize];<br align="left"/>let mut _509: &amp;ReErased [u8];<br align="left"/>let mut _510: &amp;ReErased [u8; 11_usize];<br align="left"/>let _511: &amp;ReErased [u8; 11_usize];<br align="left"/>let mut _512: &amp;ReErased [u8];<br align="left"/>let _513: &amp;ReErased [u8];<br align="left"/>let mut _514: &amp;ReErased [u8; 2_usize];<br align="left"/>let _515: [u8; 2_usize];<br align="left"/>let mut _516: u16;<br align="left"/>let mut _517: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _518: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _519: u8;<br align="left"/>let _520: ();<br align="left"/>let mut _521: bool;<br align="left"/>let mut _522: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let _523: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _524: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _525: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _526: !;<br align="left"/>let mut _527: anchor_lang::error::Error;<br align="left"/>let mut _528: anchor_lang::error::Error;<br align="left"/>let mut _529: anchor_lang::error::Error;<br align="left"/>let mut _530: anchor_lang::error::ErrorCode;<br align="left"/>let mut _531: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _532: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _533: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _534: anchor_lang::prelude::Pubkey;<br align="left"/>let _535: ();<br align="left"/>let mut _536: bool;<br align="left"/>let mut _537: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _538: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _539: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _540: !;<br align="left"/>let mut _541: anchor_lang::error::Error;<br align="left"/>let mut _542: anchor_lang::error::Error;<br align="left"/>let mut _543: anchor_lang::error::ErrorCode;<br align="left"/>let _544: ();<br align="left"/>let _545: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _546: &amp;ReErased state::user::UserStats;<br align="left"/>let mut _547: &amp;ReErased std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _548: std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _549: std::ops::ControlFlow&lt;std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;, std::cell::Ref&lt;ReErased, state::user::UserStats&gt;&gt;;<br align="left"/>let mut _550: std::result::Result&lt;std::cell::Ref&lt;ReErased, state::user::UserStats&gt;, anchor_lang::error::Error&gt;;<br align="left"/>let mut _551: &amp;ReErased anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _552: isize;<br align="left"/>let _553: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let mut _554: !;<br align="left"/>let mut _555: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;;<br align="left"/>let _556: std::cell::Ref&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let _557: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _558: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _559: bool;<br align="left"/>let mut _560: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _561: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _562: !;<br align="left"/>let mut _563: anchor_lang::error::Error;<br align="left"/>let mut _564: anchor_lang::error::Error;<br align="left"/>let mut _565: anchor_lang::error::Error;<br align="left"/>let mut _566: anchor_lang::error::ErrorCode;<br align="left"/>let mut _567: (anchor_lang::prelude::Pubkey, anchor_lang::prelude::Pubkey);<br align="left"/>let mut _568: anchor_lang::prelude::Pubkey;<br align="left"/>let mut _569: anchor_lang::prelude::Pubkey;<br align="left"/>let _570: ();<br align="left"/>let mut _571: bool;<br align="left"/>let mut _572: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _573: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let _574: &amp;ReErased anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _575: !;<br align="left"/>let mut _576: anchor_lang::error::Error;<br align="left"/>let mut _577: anchor_lang::error::Error;<br align="left"/>let mut _578: anchor_lang::error::ErrorCode;<br align="left"/>let mut _579: instructions::if_staker::InitializeInsuranceFundStake&lt;ReErased&gt;;<br align="left"/>let mut _580: anchor_lang::prelude::AccountLoader&lt;ReErased, state::spot_market::SpotMarket&gt;;<br align="left"/>let mut _581: anchor_lang::prelude::AccountLoader&lt;ReErased, state::insurance_fund_stake::InsuranceFundStake&gt;;<br align="left"/>let mut _582: anchor_lang::prelude::AccountLoader&lt;ReErased, state::user::UserStats&gt;;<br align="left"/>let mut _583: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;ReErased, state::state::State&gt;, std::alloc::Global&gt;;<br align="left"/>let mut _584: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _585: anchor_lang::prelude::Signer&lt;ReErased&gt;;<br align="left"/>let mut _586: anchor_lang::prelude::Sysvar&lt;ReErased, anchor_lang::prelude::Rent&gt;;<br align="left"/>let mut _587: anchor_lang::prelude::Program&lt;ReErased, anchor_lang::system_program::System&gt;;<br align="left"/>let mut _588: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _589: &amp;ReErased anchor_lang::error::ErrorCode;<br align="left"/>let mut _590: &amp;ReErased &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _591: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _592: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _593: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _594: &amp;ReErased [anchor_lang::prelude::AccountInfo&lt;ReErased&gt;];<br align="left"/>let mut _595: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _596: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _597: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _598: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _599: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _600: &amp;ReErased anchor_lang::prelude::AccountInfo&lt;ReErased&gt;;<br align="left"/>let mut _601: &amp;ReErased anchor_lang::prelude::Pubkey;<br align="left"/>let mut _602: bool;<br align="left"/>let mut _603: bool;<br align="left"/>let mut _604: bool;<br align="left"/>let mut _605: bool;<br align="left"/>let mut _606: bool;<br align="left"/>let mut _607: bool;<br align="left"/>let mut _608: bool;<br align="left"/>let mut _609: bool;<br align="left"/>let mut _610: bool;<br align="left"/>let mut _611: bool;<br align="left"/>let mut _612: bool;<br align="left"/>let mut _613: bool;<br align="left"/>let mut _614: bool;<br align="left"/>let mut _615: bool;<br align="left"/>let mut _616: isize;<br align="left"/>let mut _617: isize;<br align="left"/>let mut _618: isize;<br align="left"/>let mut _619: isize;<br align="left"/>let mut _620: isize;<br align="left"/>let mut _621: isize;<br align="left"/>let mut _622: isize;<br align="left"/>let mut _623: isize;<br align="left"/>let mut _624: isize;<br align="left"/>let mut _625: isize;<br align="left"/>let mut _626: isize;<br align="left"/>let mut _627: isize;<br align="left"/>let mut _628: isize;<br align="left"/>let mut _629: isize;<br align="left"/>let mut _630: isize;<br align="left"/>let mut _631: isize;<br align="left"/>let mut _632: isize;<br align="left"/>let mut _633: isize;<br align="left"/>let mut _634: isize;<br align="left"/>let mut _635: isize;<br align="left"/>let mut _636: isize;<br align="left"/>let mut _637: isize;<br align="left"/>let mut _638: isize;<br align="left"/>let mut _639: isize;<br align="left"/>let mut _640: isize;<br align="left"/>let mut _641: isize;<br align="left"/>let mut _642: isize;<br align="left"/>let mut _643: isize;<br align="left"/>let mut _644: isize;<br align="left"/>let mut _645: isize;<br align="left"/>let mut _646: isize;<br align="left"/>let mut _647: isize;<br align="left"/>let mut _648: isize;<br align="left"/>let mut _649: isize;<br align="left"/>let mut _650: isize;<br align="left"/>let mut _651: isize;<br align="left"/>let mut _652: isize;<br align="left"/>let mut _653: isize;<br align="left"/>let mut _654: isize;<br align="left"/>let mut _655: isize;<br align="left"/>let mut _656: isize;<br align="left"/>let mut _657: isize;<br align="left"/>let mut _658: isize;<br align="left"/>let mut _659: isize;<br align="left"/>let mut _660: isize;<br align="left"/>let mut _661: isize;<br align="left"/>let mut _662: isize;<br align="left"/>let mut _663: isize;<br align="left"/>let mut _664: isize;<br align="left"/>let mut _665: isize;<br align="left"/>let mut _666: isize;<br align="left"/>let mut _667: isize;<br align="left"/>let mut _668: isize;<br align="left"/>let mut _669: isize;<br align="left"/>let mut _670: isize;<br align="left"/>let mut _671: isize;<br align="left"/>let mut _672: isize;<br align="left"/>let mut _673: isize;<br align="left"/>let mut _674: isize;<br align="left"/>let mut _675: isize;<br align="left"/>let mut _676: isize;<br align="left"/>let mut _677: isize;<br align="left"/>let mut _678: isize;<br align="left"/>let mut _679: isize;<br align="left"/>let mut _680: isize;<br align="left"/>let mut _681: isize;<br align="left"/>let mut _682: isize;<br align="left"/>let mut _683: isize;<br align="left"/>let mut _684: isize;<br align="left"/>let mut _685: isize;<br align="left"/>let mut _686: isize;<br align="left"/>let mut _687: isize;<br align="left"/>let mut _688: isize;<br align="left"/>let mut _689: isize;<br align="left"/>let mut _690: isize;<br align="left"/>let mut _691: isize;<br align="left"/>let mut _692: isize;<br align="left"/>let mut _693: isize;<br align="left"/>let mut _694: isize;<br align="left"/>let mut _695: isize;<br align="left"/>let mut _696: isize;<br align="left"/>let mut _697: isize;<br align="left"/>debug __program_id =&gt; _1;<br align="left"/>debug __accounts =&gt; _2;<br align="left"/>debug __ix_data =&gt; _3;<br align="left"/>debug __bumps =&gt; _4;<br align="left"/>debug __reallocs =&gt; _5;<br align="left"/>debug __ix_data =&gt; _6;<br align="left"/>debug market_index =&gt; _7;<br align="left"/>debug residual =&gt; _16;<br align="left"/>debug val =&gt; _19;<br align="left"/>debug spot_market =&gt; _20;<br align="left"/>debug residual =&gt; _31;<br align="left"/>debug val =&gt; _34;<br align="left"/>debug insurance_fund_stake =&gt; _41;<br align="left"/>debug user_stats =&gt; _50;<br align="left"/>debug residual =&gt; _61;<br align="left"/>debug val =&gt; _64;<br align="left"/>debug state =&gt; _65;<br align="left"/>debug residual =&gt; _76;<br align="left"/>debug val =&gt; _79;<br align="left"/>debug authority =&gt; _80;<br align="left"/>debug residual =&gt; _91;<br align="left"/>debug val =&gt; _94;<br align="left"/>debug payer =&gt; _95;<br align="left"/>debug residual =&gt; _106;<br align="left"/>debug val =&gt; _109;<br align="left"/>debug rent =&gt; _110;<br align="left"/>debug residual =&gt; _121;<br align="left"/>debug val =&gt; _124;<br align="left"/>debug system_program =&gt; _125;<br align="left"/>debug residual =&gt; _136;<br align="left"/>debug val =&gt; _139;<br align="left"/>debug __anchor_rent =&gt; _140;<br align="left"/>debug residual =&gt; _144;<br align="left"/>debug val =&gt; _147;<br align="left"/>debug __pda_address =&gt; _148;<br align="left"/>debug __bump =&gt; _149;<br align="left"/>debug insurance_fund_stake =&gt; _185;<br align="left"/>debug actual_field =&gt; _186;<br align="left"/>debug actual_owner =&gt; _189;<br align="left"/>debug space =&gt; _190;<br align="left"/>debug pa =&gt; _191;<br align="left"/>debug __current_lamports =&gt; _198;<br align="left"/>debug space =&gt; _203;<br align="left"/>debug lamports =&gt; _204;<br align="left"/>debug cpi_accounts =&gt; _207;<br align="left"/>debug cpi_context =&gt; _212;<br align="left"/>debug residual =&gt; _255;<br align="left"/>debug val =&gt; _258;<br align="left"/>debug required_lamports =&gt; _288;<br align="left"/>debug cpi_accounts =&gt; _297;<br align="left"/>debug cpi_context =&gt; _302;<br align="left"/>debug residual =&gt; _312;<br align="left"/>debug val =&gt; _315;<br align="left"/>debug cpi_accounts =&gt; _316;<br align="left"/>debug cpi_context =&gt; _319;<br align="left"/>debug residual =&gt; _360;<br align="left"/>debug val =&gt; _363;<br align="left"/>debug cpi_accounts =&gt; _364;<br align="left"/>debug cpi_context =&gt; _367;<br align="left"/>debug residual =&gt; _407;<br align="left"/>debug val =&gt; _410;<br align="left"/>debug val =&gt; _416;<br align="left"/>debug e =&gt; _417;<br align="left"/>debug val =&gt; _425;<br align="left"/>debug e =&gt; _426;<br align="left"/>debug required_lamports =&gt; _458;<br align="left"/>debug residual =&gt; _494;<br align="left"/>debug val =&gt; _497;<br align="left"/>debug __pda_address =&gt; _502;<br align="left"/>debug __bump =&gt; _503;<br align="left"/>debug my_key =&gt; _545;<br align="left"/>debug residual =&gt; _553;<br align="left"/>debug val =&gt; _556;<br align="left"/>debug target_key =&gt; _557;<br align="left"/>>;
    bb0__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_615 = const false<br/>_614 = const false<br/>_613 = const false<br/>_612 = const false<br/>_611 = const false<br/>_610 = const false<br/>_609 = const false<br/>_608 = const false<br/>_607 = const false<br/>_606 = const false<br/>_604 = const false<br/>_605 = const false<br/>_603 = const false<br/>_602 = const false<br/>StorageLive(_6)<br/>_6 = _3<br/>StorageLive(_8)<br/>StorageLive(_9)<br/>StorageLive(_10)<br/>StorageLive(_11)<br/>StorageLive(_12)<br/>StorageLive(_13)<br/>_13 = &amp;mut _6<br/>_12 = &amp;mut (*_13)<br/></td></tr><tr><td align="left">_11 = &lt;&lt;if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args as BorshDeserialize&gt;::deserialize(move _12)</td></tr></table>>];
    bb1__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left" balign="left">StorageDead(_12)<br/>StorageLive(_14)<br/>_14 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_10 = std::result::Result::&lt;&lt;if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, std::io::Error&gt;::map_err::&lt;anchor_lang::error::ErrorCode, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _11, move _14)</td></tr></table>>];
    bb2__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">StorageDead(_14)<br/>StorageDead(_11)<br/></td></tr><tr><td align="left">_9 = &lt;std::result::Result&lt;&lt;if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args, anchor_lang::error::ErrorCode&gt; as Try&gt;::branch(move _10)</td></tr></table>>];
    bb3__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">StorageDead(_10)<br/>_15 = discriminant(_9)<br/></td></tr><tr><td align="left">switchInt(move _15)</td></tr></table>>];
    bb4__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">StorageLive(_19)<br/>_19 = move ((_9 as Continue).0: &lt;instructions::if_staker::InitializeInsuranceFundStake&lt;'info&gt; as anchor_lang::Accounts&lt;'info, instructions::if_staker::InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts::__Args)<br/>_8 = move _19<br/>StorageDead(_19)<br/>StorageLive(_7)<br/>_7 = (_8.0: u16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/>StorageLive(_20)<br/>StorageLive(_21)<br/>StorageLive(_22)<br/>StorageLive(_23)<br/>StorageLive(_24)<br/>_24 = &amp;(*_1)<br/>StorageLive(_25)<br/>_25 = &amp;mut (*_2)<br/>StorageLive(_26)<br/>_26 = &amp;(*_6)<br/>StorageLive(_27)<br/>_27 = &amp;mut (*_4)<br/>StorageLive(_28)<br/>_28 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_23 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Accounts&lt;'_, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _24, move _25, move _26, move _27, move _28)</td></tr></table>>];
    bb5__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left">unreachable</td></tr></table>>];
    bb6__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left" balign="left">StorageLive(_16)<br/>_16 = ((_9 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::ErrorCode&gt;)<br/>StorageLive(_18)<br/>_18 = _16<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::ErrorCode&gt;&gt;&gt;::from_residual(move _18)</td></tr></table>>];
    bb7__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">StorageDead(_18)<br/>StorageDead(_16)<br/>StorageDead(_13)<br/>StorageDead(_9)<br/>StorageDead(_8)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb8__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">StorageDead(_28)<br/>StorageDead(_27)<br/>StorageDead(_26)<br/>StorageDead(_25)<br/>StorageDead(_24)<br/>StorageLive(_29)<br/>_29 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_22 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _23, move _29)</td></tr></table>>];
    bb9__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">StorageDead(_29)<br/>StorageDead(_23)<br/></td></tr><tr><td align="left">_21 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _22)</td></tr></table>>];
    bb10__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left" balign="left">StorageDead(_22)<br/>_30 = discriminant(_21)<br/></td></tr><tr><td align="left">switchInt(move _30)</td></tr></table>>];
    bb11__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">StorageLive(_34)<br/>_34 = move ((_21 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::spot_market::SpotMarket&gt;)<br/>_20 = move _34<br/>StorageDead(_34)<br/>_616 = discriminant(_21)<br/>StorageDead(_21)<br/>StorageLive(_35)<br/>StorageLive(_36)<br/>StorageLive(_37)<br/>_591 = deref_copy (*_2)<br/>_37 = &amp;(*_591)<br/></td></tr><tr><td align="left">_36 = core::slice::&lt;impl [anchor_lang::prelude::AccountInfo&lt;'_&gt;]&gt;::is_empty(move _37)</td></tr></table>>];
    bb12__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">StorageLive(_31)<br/>_31 = move ((_21 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_33)<br/>_33 = move _31<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _33)</td></tr></table>>];
    bb13__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">StorageDead(_33)<br/>StorageDead(_31)<br/>_680 = discriminant(_21)<br/>StorageDead(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb14__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">switchInt(move _36)</td></tr></table>>];
    bb15__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>StorageLive(_39)<br/>StorageLive(_40)<br/>_40 = AccountNotEnoughKeys<br/></td></tr><tr><td align="left">_39 = &lt;anchor_lang::error::ErrorCode as Into&lt;anchor_lang::error::Error&gt;&gt;::into(move _40)</td></tr></table>>];
    bb16__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left" balign="left">StorageDead(_40)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _39)<br/>StorageDead(_39)<br/>StorageDead(_36)<br/>StorageDead(_35)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb17__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">StorageDead(_37)<br/>_35 = const ()<br/>StorageDead(_36)<br/>StorageDead(_35)<br/>StorageLive(_41)<br/>StorageLive(_42)<br/>_42 = const 0_usize<br/>_592 = deref_copy (*_2)<br/>_43 = Len((*_592))<br/>_44 = Lt(_42, _43)<br/></td></tr><tr><td align="left">assert(move _44, &quot;index out of bounds: the length is {} but the index is {}&quot;, move _43, _42)</td></tr></table>>];
    bb18__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_593 = deref_copy (*_2)<br/>_41 = &amp;(*_593)[_42]<br/>StorageLive(_45)<br/>StorageLive(_46)<br/>StorageLive(_47)<br/>StorageLive(_48)<br/>_594 = deref_copy (*_2)<br/>_48 = &amp;(*_594)<br/>StorageLive(_49)<br/>_49 = RangeFrom::&lt;usize&gt; { start: const 1_usize }<br/></td></tr><tr><td align="left">_47 = &lt;[anchor_lang::prelude::AccountInfo&lt;'_&gt;] as Index&lt;RangeFrom&lt;usize&gt;&gt;&gt;::index(move _48, move _49)</td></tr></table>>];
    bb19__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">StorageDead(_49)<br/>StorageDead(_48)<br/>_46 = &amp;(*_47)<br/>_45 = &amp;(*_46)<br/>(*_2) = move _45<br/>StorageDead(_45)<br/>StorageDead(_47)<br/>StorageDead(_46)<br/>StorageLive(_50)<br/>StorageLive(_51)<br/>StorageLive(_52)<br/>StorageLive(_53)<br/>StorageLive(_54)<br/>_54 = &amp;(*_1)<br/>StorageLive(_55)<br/>_55 = &amp;mut (*_2)<br/>StorageLive(_56)<br/>_56 = &amp;(*_6)<br/>StorageLive(_57)<br/>_57 = &amp;mut (*_4)<br/>StorageLive(_58)<br/>_58 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_53 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as anchor_lang::Accounts&lt;'_, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _54, move _55, move _56, move _57, move _58)</td></tr></table>>];
    bb20__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">StorageDead(_58)<br/>StorageDead(_57)<br/>StorageDead(_56)<br/>StorageDead(_55)<br/>StorageDead(_54)<br/>StorageLive(_59)<br/>_59 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_52 = std::result::Result::&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _53, move _59)</td></tr></table>>];
    bb21__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left" balign="left">StorageDead(_59)<br/>StorageDead(_53)<br/></td></tr><tr><td align="left">_51 = &lt;std::result::Result&lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _52)</td></tr></table>>];
    bb22__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">StorageDead(_52)<br/>_60 = discriminant(_51)<br/></td></tr><tr><td align="left">switchInt(move _60)</td></tr></table>>];
    bb23__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">23</td></tr><tr><td align="left" balign="left">StorageLive(_64)<br/>_64 = move ((_51 as Continue).0: anchor_lang::prelude::AccountLoader&lt;'_, state::user::UserStats&gt;)<br/>_50 = move _64<br/>StorageDead(_64)<br/>_618 = discriminant(_51)<br/>StorageDead(_51)<br/>StorageLive(_65)<br/>StorageLive(_66)<br/>StorageLive(_67)<br/>StorageLive(_68)<br/>StorageLive(_69)<br/>_69 = &amp;(*_1)<br/>StorageLive(_70)<br/>_70 = &amp;mut (*_2)<br/>StorageLive(_71)<br/>_71 = &amp;(*_6)<br/>StorageLive(_72)<br/>_72 = &amp;mut (*_4)<br/>StorageLive(_73)<br/>_73 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_68 = &lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt; as anchor_lang::Accounts&lt;'_, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _69, move _70, move _71, move _72, move _73)</td></tr></table>>];
    bb24__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">24</td></tr><tr><td align="left" balign="left">StorageLive(_61)<br/>_61 = move ((_51 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_63)<br/>_63 = move _61<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _63)</td></tr></table>>];
    bb25__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">25</td></tr><tr><td align="left" balign="left">StorageDead(_63)<br/>StorageDead(_61)<br/>_678 = discriminant(_51)<br/>StorageDead(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb26__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">26</td></tr><tr><td align="left" balign="left">StorageDead(_73)<br/>StorageDead(_72)<br/>StorageDead(_71)<br/>StorageDead(_70)<br/>StorageDead(_69)<br/>StorageLive(_74)<br/>_74 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_67 = std::result::Result::&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _68, move _74)</td></tr></table>>];
    bb27__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">27</td></tr><tr><td align="left" balign="left">StorageDead(_74)<br/>StorageDead(_68)<br/></td></tr><tr><td align="left">_66 = &lt;std::result::Result&lt;Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _67)</td></tr></table>>];
    bb28__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">28</td></tr><tr><td align="left" balign="left">StorageDead(_67)<br/>_75 = discriminant(_66)<br/></td></tr><tr><td align="left">switchInt(move _75)</td></tr></table>>];
    bb29__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">29</td></tr><tr><td align="left" balign="left">StorageLive(_79)<br/>_79 = move ((_66 as Continue).0: std::boxed::Box&lt;anchor_lang::prelude::Account&lt;'_, state::state::State&gt;&gt;)<br/>_65 = move _79<br/>StorageDead(_79)<br/>_620 = discriminant(_66)<br/>StorageDead(_66)<br/>StorageLive(_80)<br/>StorageLive(_81)<br/>StorageLive(_82)<br/>StorageLive(_83)<br/>StorageLive(_84)<br/>_84 = &amp;(*_1)<br/>StorageLive(_85)<br/>_85 = &amp;mut (*_2)<br/>StorageLive(_86)<br/>_86 = &amp;(*_6)<br/>StorageLive(_87)<br/>_87 = &amp;mut (*_4)<br/>StorageLive(_88)<br/>_88 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_83 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _84, move _85, move _86, move _87, move _88)</td></tr></table>>];
    bb30__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">30</td></tr><tr><td align="left" balign="left">StorageLive(_76)<br/>_76 = move ((_66 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_78)<br/>_78 = move _76<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _78)</td></tr></table>>];
    bb31__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">31</td></tr><tr><td align="left" balign="left">StorageDead(_78)<br/>StorageDead(_76)<br/>_676 = discriminant(_66)<br/>StorageDead(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb32__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">32</td></tr><tr><td align="left" balign="left">StorageDead(_88)<br/>StorageDead(_87)<br/>StorageDead(_86)<br/>StorageDead(_85)<br/>StorageDead(_84)<br/>StorageLive(_89)<br/>_89 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_82 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _83, move _89)</td></tr></table>>];
    bb33__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">33</td></tr><tr><td align="left" balign="left">StorageDead(_89)<br/>StorageDead(_83)<br/></td></tr><tr><td align="left">_81 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _82)</td></tr></table>>];
    bb34__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">34</td></tr><tr><td align="left" balign="left">StorageDead(_82)<br/>_90 = discriminant(_81)<br/></td></tr><tr><td align="left">switchInt(move _90)</td></tr></table>>];
    bb35__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">35</td></tr><tr><td align="left" balign="left">StorageLive(_94)<br/>_94 = move ((_81 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_80 = move _94<br/>StorageDead(_94)<br/>_622 = discriminant(_81)<br/>StorageDead(_81)<br/>StorageLive(_95)<br/>StorageLive(_96)<br/>StorageLive(_97)<br/>StorageLive(_98)<br/>StorageLive(_99)<br/>_99 = &amp;(*_1)<br/>StorageLive(_100)<br/>_100 = &amp;mut (*_2)<br/>StorageLive(_101)<br/>_101 = &amp;(*_6)<br/>StorageLive(_102)<br/>_102 = &amp;mut (*_4)<br/>StorageLive(_103)<br/>_103 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_98 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Accounts&lt;'_, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _99, move _100, move _101, move _102, move _103)</td></tr></table>>];
    bb36__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">36</td></tr><tr><td align="left" balign="left">StorageLive(_91)<br/>_91 = move ((_81 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_93)<br/>_93 = move _91<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _93)</td></tr></table>>];
    bb37__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">37</td></tr><tr><td align="left" balign="left">StorageDead(_93)<br/>StorageDead(_91)<br/>_674 = discriminant(_81)<br/>StorageDead(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb38__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">38</td></tr><tr><td align="left" balign="left">StorageDead(_103)<br/>StorageDead(_102)<br/>StorageDead(_101)<br/>StorageDead(_100)<br/>StorageDead(_99)<br/>StorageLive(_104)<br/>_104 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_97 = std::result::Result::&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _98, move _104)</td></tr></table>>];
    bb39__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">39</td></tr><tr><td align="left" balign="left">StorageDead(_104)<br/>StorageDead(_98)<br/></td></tr><tr><td align="left">_96 = &lt;std::result::Result&lt;anchor_lang::prelude::Signer&lt;'_&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _97)</td></tr></table>>];
    bb40__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">40</td></tr><tr><td align="left" balign="left">StorageDead(_97)<br/>_105 = discriminant(_96)<br/></td></tr><tr><td align="left">switchInt(move _105)</td></tr></table>>];
    bb41__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">41</td></tr><tr><td align="left" balign="left">StorageLive(_109)<br/>_109 = move ((_96 as Continue).0: anchor_lang::prelude::Signer&lt;'_&gt;)<br/>_95 = move _109<br/>StorageDead(_109)<br/>_624 = discriminant(_96)<br/>StorageDead(_96)<br/>StorageLive(_110)<br/>StorageLive(_111)<br/>StorageLive(_112)<br/>StorageLive(_113)<br/>StorageLive(_114)<br/>_114 = &amp;(*_1)<br/>StorageLive(_115)<br/>_115 = &amp;mut (*_2)<br/>StorageLive(_116)<br/>_116 = &amp;(*_6)<br/>StorageLive(_117)<br/>_117 = &amp;mut (*_4)<br/>StorageLive(_118)<br/>_118 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_113 = &lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt; as anchor_lang::Accounts&lt;'_, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _114, move _115, move _116, move _117, move _118)</td></tr></table>>];
    bb42__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">42</td></tr><tr><td align="left" balign="left">StorageLive(_106)<br/>_106 = move ((_96 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_108)<br/>_108 = move _106<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _108)</td></tr></table>>];
    bb43__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">43</td></tr><tr><td align="left" balign="left">StorageDead(_108)<br/>StorageDead(_106)<br/>_672 = discriminant(_96)<br/>StorageDead(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb44__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">44</td></tr><tr><td align="left" balign="left">StorageDead(_118)<br/>StorageDead(_117)<br/>StorageDead(_116)<br/>StorageDead(_115)<br/>StorageDead(_114)<br/>StorageLive(_119)<br/>_119 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_112 = std::result::Result::&lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _113, move _119)</td></tr></table>>];
    bb45__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">45</td></tr><tr><td align="left" balign="left">StorageDead(_119)<br/>StorageDead(_113)<br/></td></tr><tr><td align="left">_111 = &lt;std::result::Result&lt;anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _112)</td></tr></table>>];
    bb46__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">46</td></tr><tr><td align="left" balign="left">StorageDead(_112)<br/>_120 = discriminant(_111)<br/></td></tr><tr><td align="left">switchInt(move _120)</td></tr></table>>];
    bb47__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">47</td></tr><tr><td align="left" balign="left">StorageLive(_124)<br/>_124 = move ((_111 as Continue).0: anchor_lang::prelude::Sysvar&lt;'_, anchor_lang::prelude::Rent&gt;)<br/>_110 = move _124<br/>StorageDead(_124)<br/>_626 = discriminant(_111)<br/>StorageDead(_111)<br/>StorageLive(_125)<br/>StorageLive(_126)<br/>StorageLive(_127)<br/>StorageLive(_128)<br/>StorageLive(_129)<br/>_129 = &amp;(*_1)<br/>StorageLive(_130)<br/>_130 = &amp;mut (*_2)<br/>StorageLive(_131)<br/>_131 = &amp;(*_6)<br/>StorageLive(_132)<br/>_132 = &amp;mut (*_4)<br/>StorageLive(_133)<br/>_133 = &amp;mut (*_5)<br/></td></tr><tr><td align="left">_128 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::Accounts&lt;'_, InitializeInsuranceFundStakeBumps&gt;&gt;::try_accounts(move _129, move _130, move _131, move _132, move _133)</td></tr></table>>];
    bb48__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">48</td></tr><tr><td align="left" balign="left">StorageLive(_121)<br/>_121 = move ((_111 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_123)<br/>_123 = move _121<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _123)</td></tr></table>>];
    bb49__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">49</td></tr><tr><td align="left" balign="left">StorageDead(_123)<br/>StorageDead(_121)<br/>_670 = discriminant(_111)<br/>StorageDead(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb50__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">50</td></tr><tr><td align="left" balign="left">StorageDead(_133)<br/>StorageDead(_132)<br/>StorageDead(_131)<br/>StorageDead(_130)<br/>StorageDead(_129)<br/>StorageLive(_134)<br/>_134 = {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}<br/></td></tr><tr><td align="left">_127 = std::result::Result::&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt;::map_err::&lt;anchor_lang::error::Error, {closure@programs/drift/src/instructions/if_staker.rs:827:10: 827:18}&gt;(move _128, move _134)</td></tr></table>>];
    bb51__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">51</td></tr><tr><td align="left" balign="left">StorageDead(_134)<br/>StorageDead(_128)<br/></td></tr><tr><td align="left">_126 = &lt;std::result::Result&lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _127)</td></tr></table>>];
    bb52__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">52</td></tr><tr><td align="left" balign="left">StorageDead(_127)<br/>_135 = discriminant(_126)<br/></td></tr><tr><td align="left">switchInt(move _135)</td></tr></table>>];
    bb53__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">53</td></tr><tr><td align="left" balign="left">StorageLive(_139)<br/>_139 = move ((_126 as Continue).0: anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt;)<br/>_125 = move _139<br/>StorageDead(_139)<br/>_628 = discriminant(_126)<br/>StorageDead(_126)<br/>StorageLive(_140)<br/>StorageLive(_141)<br/>StorageLive(_142)<br/></td></tr><tr><td align="left">_142 = &lt;anchor_lang::prelude::Rent as anchor_lang::prelude::SolanaSysvar&gt;::get()</td></tr></table>>];
    bb54__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">54</td></tr><tr><td align="left" balign="left">StorageLive(_136)<br/>_136 = move ((_126 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_138)<br/>_138 = move _136<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _138)</td></tr></table>>];
    bb55__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">55</td></tr><tr><td align="left" balign="left">StorageDead(_138)<br/>StorageDead(_136)<br/>_668 = discriminant(_126)<br/>StorageDead(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb56__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">56</td></tr><tr><td align="left">_141 = &lt;std::result::Result&lt;anchor_lang::prelude::Rent, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _142)</td></tr></table>>];
    bb57__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">57</td></tr><tr><td align="left" balign="left">StorageDead(_142)<br/>_143 = discriminant(_141)<br/></td></tr><tr><td align="left">switchInt(move _143)</td></tr></table>>];
    bb58__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">58</td></tr><tr><td align="left" balign="left">StorageLive(_147)<br/>_147 = ((_141 as Continue).0: anchor_lang::prelude::Rent)<br/>_140 = _147<br/>StorageDead(_147)<br/>_630 = discriminant(_141)<br/>StorageDead(_141)<br/>StorageLive(_150)<br/>StorageLive(_151)<br/>StorageLive(_152)<br/>StorageLive(_153)<br/>StorageLive(_154)<br/>StorageLive(_155)<br/>StorageLive(_156)<br/>StorageLive(_157)<br/>_157 = const b&quot;insurance_fund_stake&quot;<br/>_156 = &amp;(*_157)<br/>_155 = move _156 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_156)<br/>StorageLive(_158)<br/>StorageLive(_159)<br/>StorageLive(_160)<br/>StorageLive(_161)<br/>StorageLive(_162)<br/>_162 = &amp;_80<br/></td></tr><tr><td align="left">_161 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _162)</td></tr></table>>];
    bb59__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">59</td></tr><tr><td align="left" balign="left">StorageLive(_144)<br/>_144 = move ((_141 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_146)<br/>_146 = move _144<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _146)</td></tr></table>>];
    bb60__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">60</td></tr><tr><td align="left" balign="left">StorageDead(_146)<br/>StorageDead(_144)<br/>_666 = discriminant(_141)<br/>StorageDead(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb61__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">61</td></tr><tr><td align="left" balign="left">StorageDead(_162)<br/>_595 = deref_copy ((*_161).0: &amp;anchor_lang::prelude::Pubkey)<br/>_160 = &amp;(*_595)<br/></td></tr><tr><td align="left">_159 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _160)</td></tr></table>>];
    bb62__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">62</td></tr><tr><td align="left" balign="left">_158 = &amp;(*_159)<br/>StorageDead(_160)<br/>StorageLive(_163)<br/>StorageLive(_164)<br/>StorageLive(_165)<br/>StorageLive(_166)<br/>StorageLive(_167)<br/>_167 = _7<br/></td></tr><tr><td align="left">_166 = core::num::&lt;impl u16&gt;::to_le_bytes(move _167)</td></tr></table>>];
    bb63__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">63</td></tr><tr><td align="left" balign="left">_165 = &amp;_166<br/>StorageDead(_167)<br/></td></tr><tr><td align="left">_164 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _165)</td></tr></table>>];
    bb64__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">64</td></tr><tr><td align="left" balign="left">_163 = &amp;(*_164)<br/>StorageDead(_165)<br/>_154 = [move _155, move _158, move _163]<br/>StorageDead(_163)<br/>StorageDead(_158)<br/>StorageDead(_155)<br/>_153 = &amp;_154<br/>_152 = &amp;(*_153)<br/>_151 = move _152 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_152)<br/>StorageLive(_168)<br/>_168 = &amp;(*_1)<br/></td></tr><tr><td align="left">_150 = anchor_lang::prelude::Pubkey::find_program_address(move _151, move _168)</td></tr></table>>];
    bb65__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">65</td></tr><tr><td align="left" balign="left">StorageDead(_168)<br/>StorageDead(_151)<br/>StorageLive(_148)<br/>_148 = (_150.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_149)<br/>_149 = (_150.1: u8)<br/>StorageDead(_166)<br/>StorageDead(_164)<br/>StorageDead(_161)<br/>StorageDead(_159)<br/>StorageDead(_157)<br/>StorageDead(_154)<br/>StorageDead(_153)<br/>StorageDead(_150)<br/>StorageLive(_169)<br/>_169 = _149<br/>((*_4).1: u8) = move _169<br/>StorageDead(_169)<br/>StorageLive(_170)<br/>StorageLive(_171)<br/>StorageLive(_172)<br/>StorageLive(_173)<br/>StorageLive(_174)<br/>_174 = &amp;(*_41)<br/></td></tr><tr><td align="left">_173 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _174)</td></tr></table>>];
    bb66__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">66</td></tr><tr><td align="left" balign="left">_172 = &amp;_173<br/>StorageDead(_174)<br/>StorageLive(_175)<br/>_175 = &amp;_148<br/></td></tr><tr><td align="left">_171 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _172, move _175)</td></tr></table>>];
    bb67__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">67</td></tr><tr><td align="left">switchInt(move _171)</td></tr></table>>];
    bb68__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">68</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>StorageLive(_177)<br/>StorageLive(_178)<br/>StorageLive(_179)<br/>StorageLive(_180)<br/>_180 = ConstraintSeeds<br/></td></tr><tr><td align="left">_179 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _180)</td></tr></table>>];
    bb69__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">69</td></tr><tr><td align="left" balign="left">StorageDead(_180)<br/></td></tr><tr><td align="left">_178 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _179, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb70__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">70</td></tr><tr><td align="left" balign="left">_615 = const true<br/>StorageDead(_179)<br/>StorageLive(_181)<br/>StorageLive(_182)<br/>StorageLive(_183)<br/>_183 = &amp;(*_41)<br/></td></tr><tr><td align="left">_182 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _183)</td></tr></table>>];
    bb71__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">71</td></tr><tr><td align="left" balign="left">StorageDead(_183)<br/>StorageLive(_184)<br/>_184 = _148<br/>_181 = (move _182, move _184)<br/>StorageDead(_184)<br/>StorageDead(_182)<br/>_615 = const false<br/></td></tr><tr><td align="left">_177 = anchor_lang::error::Error::with_pubkeys(move _178, move _181)</td></tr></table>>];
    bb72__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">72</td></tr><tr><td align="left" balign="left">StorageDead(_181)<br/>_615 = const false<br/>StorageDead(_178)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _177)<br/>StorageDead(_177)<br/>StorageDead(_171)<br/>StorageDead(_170)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb73__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">73</td></tr><tr><td align="left" balign="left">StorageDead(_175)<br/>StorageDead(_173)<br/>StorageDead(_172)<br/>_170 = const ()<br/>StorageDead(_171)<br/>StorageDead(_170)<br/>StorageLive(_185)<br/>StorageLive(_186)<br/>StorageLive(_187)<br/>StorageLive(_188)<br/>_188 = &amp;_41<br/>_187 = &amp;(*_188)<br/></td></tr><tr><td align="left">_186 = &lt;&amp;anchor_lang::prelude::AccountInfo&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _187)</td></tr></table>>];
    bb74__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">74</td></tr><tr><td align="left" balign="left">StorageDead(_187)<br/>StorageDead(_188)<br/>StorageLive(_189)<br/>_189 = ((*_186).3: &amp;anchor_lang::prelude::Pubkey)<br/>StorageLive(_190)<br/>_190 = const _<br/>StorageLive(_191)<br/>StorageLive(_192)<br/>_192 = const false<br/></td></tr><tr><td align="left">switchInt(move _192)</td></tr></table>>];
    bb75__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">75</td></tr><tr><td align="left" balign="left">StorageLive(_193)<br/>StorageLive(_194)<br/>_194 = &amp;_189<br/>StorageLive(_195)<br/>_590 = const _<br/>_195 = &amp;(*_590)<br/></td></tr><tr><td align="left">_193 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _194, move _195)</td></tr></table>>];
    bb76__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">76</td></tr><tr><td align="left">switchInt(move _193)</td></tr></table>>];
    bb77__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">77</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/>StorageLive(_198)<br/>StorageLive(_199)<br/>_199 = &amp;(*_41)<br/></td></tr><tr><td align="left">_198 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::lamports(move _199)</td></tr></table>>];
    bb78__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">78</td></tr><tr><td align="left" balign="left">StorageDead(_199)<br/>StorageLive(_200)<br/>StorageLive(_201)<br/>StorageLive(_202)<br/>_202 = _198<br/>_201 = Eq(move _202, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _201)</td></tr></table>>];
    bb79__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">79</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageLive(_203)<br/>_203 = _190<br/>StorageLive(_204)<br/>StorageLive(_205)<br/>_205 = &amp;_140<br/>StorageLive(_206)<br/>_206 = _203<br/></td></tr><tr><td align="left">_204 = anchor_lang::prelude::Rent::minimum_balance(move _205, move _206)</td></tr></table>>];
    bb80__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">80</td></tr><tr><td align="left" balign="left">StorageDead(_206)<br/>StorageDead(_205)<br/>StorageLive(_207)<br/>StorageLive(_208)<br/>StorageLive(_209)<br/>_209 = &amp;_95<br/></td></tr><tr><td align="left">_208 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _209)</td></tr></table>>];
    bb81__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">81</td></tr><tr><td align="left" balign="left">StorageDead(_209)<br/>StorageLive(_210)<br/>StorageLive(_211)<br/>_211 = &amp;(*_41)<br/></td></tr><tr><td align="left">_210 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _211)</td></tr></table>>];
    bb82__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">82</td></tr><tr><td align="left" balign="left">StorageDead(_211)<br/>_614 = const true<br/>_207 = anchor_lang::system_program::CreateAccount::&lt;'_&gt; { from: move _208, to: move _210 }<br/>StorageDead(_210)<br/>StorageDead(_208)<br/>StorageLive(_212)<br/>StorageLive(_213)<br/>StorageLive(_214)<br/>_214 = &amp;_125<br/></td></tr><tr><td align="left">_213 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _214)</td></tr></table>>];
    bb83__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">83</td></tr><tr><td align="left" balign="left">StorageDead(_214)<br/>StorageLive(_215)<br/>_614 = const false<br/>_215 = move _207<br/></td></tr><tr><td align="left">_212 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::CreateAccount&lt;'_&gt;&gt;::new(move _213, move _215)</td></tr></table>>];
    bb84__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">84</td></tr><tr><td align="left" balign="left">StorageDead(_215)<br/>StorageDead(_213)<br/>StorageLive(_216)<br/>StorageLive(_217)<br/>StorageLive(_218)<br/>StorageLive(_219)<br/>StorageLive(_220)<br/>_613 = const true<br/>_220 = move _212<br/>StorageLive(_221)<br/>StorageLive(_222)<br/>StorageLive(_223)<br/>StorageLive(_224)<br/>StorageLive(_225)<br/>StorageLive(_226)<br/>StorageLive(_227)<br/>StorageLive(_228)<br/>StorageLive(_229)<br/>StorageLive(_230)<br/>StorageLive(_231)<br/>StorageLive(_232)<br/>_232 = const b&quot;insurance_fund_stake&quot;<br/>_231 = &amp;(*_232)<br/>_230 = move _231 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_231)<br/>StorageLive(_233)<br/>StorageLive(_234)<br/>StorageLive(_235)<br/>StorageLive(_236)<br/>_236 = &amp;_80<br/></td></tr><tr><td align="left">_235 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _236)</td></tr></table>>];
    bb85__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">85</td></tr><tr><td align="left" balign="left">StorageDead(_236)<br/>_596 = deref_copy ((*_235).0: &amp;anchor_lang::prelude::Pubkey)<br/>_234 = &amp;(*_596)<br/></td></tr><tr><td align="left">_233 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _234)</td></tr></table>>];
    bb86__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">86</td></tr><tr><td align="left" balign="left">StorageDead(_234)<br/>StorageLive(_237)<br/>StorageLive(_238)<br/>StorageLive(_239)<br/>StorageLive(_240)<br/>StorageLive(_241)<br/>_241 = _7<br/></td></tr><tr><td align="left">_240 = core::num::&lt;impl u16&gt;::to_le_bytes(move _241)</td></tr></table>>];
    bb87__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">87</td></tr><tr><td align="left" balign="left">_239 = &amp;_240<br/>StorageDead(_241)<br/></td></tr><tr><td align="left">_238 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _239)</td></tr></table>>];
    bb88__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">88</td></tr><tr><td align="left" balign="left">_237 = &amp;(*_238)<br/>StorageDead(_239)<br/>StorageLive(_242)<br/>StorageLive(_243)<br/>StorageLive(_244)<br/>StorageLive(_245)<br/>StorageLive(_246)<br/>StorageLive(_247)<br/>_247 = _149<br/>_246 = [move _247]<br/>_245 = &amp;_246<br/>StorageDead(_247)<br/>StorageLive(_248)<br/>_248 = RangeFull<br/></td></tr><tr><td align="left">_244 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _245, move _248)</td></tr></table>>];
    bb89__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">89</td></tr><tr><td align="left" balign="left">StorageDead(_248)<br/>StorageDead(_245)<br/>_243 = &amp;(*_244)<br/>_242 = &amp;(*_243)<br/>_229 = [move _230, move _233, move _237, move _242]<br/>_228 = &amp;_229<br/>StorageDead(_242)<br/>StorageDead(_237)<br/>StorageDead(_233)<br/>StorageDead(_230)<br/>StorageLive(_249)<br/>_249 = RangeFull<br/></td></tr><tr><td align="left">_227 = &lt;[&amp;[u8]; 4] as Index&lt;RangeFull&gt;&gt;::index(move _228, move _249)</td></tr></table>>];
    bb90__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">90</td></tr><tr><td align="left" balign="left">StorageDead(_249)<br/>StorageDead(_228)<br/>_226 = &amp;(*_227)<br/>_225 = &amp;(*_226)<br/>_224 = [move _225]<br/>StorageDead(_225)<br/>_223 = &amp;_224<br/>_222 = &amp;(*_223)<br/>_221 = move _222 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_222)<br/>_613 = const false<br/></td></tr><tr><td align="left">_219 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::CreateAccount&lt;'_&gt;&gt;::with_signer(move _220, move _221)</td></tr></table>>];
    bb91__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">91</td></tr><tr><td align="left" balign="left">StorageDead(_221)<br/>_613 = const false<br/>StorageDead(_220)<br/>StorageLive(_250)<br/>_250 = _204<br/>StorageLive(_251)<br/>StorageLive(_252)<br/>_252 = _203<br/>_251 = move _252 as u64 (IntToInt)<br/>StorageDead(_252)<br/>StorageLive(_253)<br/>_253 = &amp;(*_1)<br/></td></tr><tr><td align="left">_218 = anchor_lang::system_program::create_account(move _219, move _250, move _251, move _253)</td></tr></table>>];
    bb92__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">92</td></tr><tr><td align="left" balign="left">StorageDead(_253)<br/>StorageDead(_251)<br/>StorageDead(_250)<br/>StorageDead(_219)<br/></td></tr><tr><td align="left">_217 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _218)</td></tr></table>>];
    bb93__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">93</td></tr><tr><td align="left" balign="left">StorageDead(_218)<br/>_254 = discriminant(_217)<br/></td></tr><tr><td align="left">switchInt(move _254)</td></tr></table>>];
    bb94__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">94</td></tr><tr><td align="left" balign="left">StorageLive(_258)<br/>_258 = ((_217 as Continue).0: ())<br/>_216 = _258<br/>StorageDead(_258)<br/>_632 = discriminant(_217)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_243)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>_200 = const ()<br/>StorageDead(_212)<br/>_614 = const false<br/>StorageDead(_207)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb95__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">95</td></tr><tr><td align="left" balign="left">StorageLive(_255)<br/>_255 = move ((_217 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_257)<br/>_257 = move _255<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _257)</td></tr></table>>];
    bb96__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">96</td></tr><tr><td align="left" balign="left">StorageDead(_257)<br/>StorageDead(_255)<br/>_664 = discriminant(_217)<br/>StorageDead(_246)<br/>StorageDead(_244)<br/>StorageDead(_243)<br/>StorageDead(_240)<br/>StorageDead(_238)<br/>StorageDead(_235)<br/>StorageDead(_232)<br/>StorageDead(_229)<br/>StorageDead(_227)<br/>StorageDead(_226)<br/>StorageDead(_224)<br/>StorageDead(_223)<br/>StorageDead(_217)<br/>StorageDead(_216)<br/>StorageDead(_212)<br/>_614 = const false<br/>StorageDead(_207)<br/>StorageDead(_204)<br/>StorageDead(_203)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb97__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">97</td></tr><tr><td align="left" balign="left">StorageDead(_202)<br/>StorageLive(_259)<br/>StorageLive(_260)<br/>StorageLive(_261)<br/>StorageLive(_262)<br/>StorageLive(_263)<br/>_263 = &amp;_95<br/></td></tr><tr><td align="left">_262 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _263)</td></tr></table>>];
    bb98__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">98</td></tr><tr><td align="left" balign="left">_261 = &amp;_262<br/>StorageDead(_263)<br/>StorageLive(_264)<br/>StorageLive(_265)<br/>StorageLive(_266)<br/>_266 = &amp;(*_41)<br/></td></tr><tr><td align="left">_265 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _266)</td></tr></table>>];
    bb99__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">99</td></tr><tr><td align="left" balign="left">_264 = &amp;_265<br/>StorageDead(_266)<br/></td></tr><tr><td align="left">_260 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::eq(move _261, move _264)</td></tr></table>>];
    bb100__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">100</td></tr><tr><td align="left">switchInt(move _260)</td></tr></table>>];
    bb101__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">101</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>StorageLive(_268)<br/>StorageLive(_269)<br/>StorageLive(_270)<br/>StorageLive(_271)<br/>StorageLive(_272)<br/>_589 = const _<br/>_272 = &amp;(*_589)<br/></td></tr><tr><td align="left">_271 = anchor_lang::error::ErrorCode::name(move _272)</td></tr></table>>];
    bb102__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">102</td></tr><tr><td align="left" balign="left">StorageDead(_272)<br/>StorageLive(_274)<br/>StorageLive(_275)<br/>_275 = TryingToInitPayerAsProgramAccount<br/></td></tr><tr><td align="left">_274 = &lt;anchor_lang::error::ErrorCode as Into&lt;u32&gt;&gt;::into(move _275)</td></tr></table>>];
    bb103__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">103</td></tr><tr><td align="left" balign="left">StorageDead(_275)<br/>StorageLive(_276)<br/>StorageLive(_277)<br/>_588 = const _<br/>_277 = &amp;(*_588)<br/></td></tr><tr><td align="left">_276 = &lt;anchor_lang::error::ErrorCode as ToString&gt;::to_string(move _277)</td></tr></table>>];
    bb104__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">104</td></tr><tr><td align="left" balign="left">StorageDead(_277)<br/>StorageLive(_279)<br/>StorageLive(_280)<br/>StorageLive(_281)<br/>_281 = anchor_lang::error::Source { filename: const &quot;programs/drift/src/instructions/if_staker.rs&quot;, line: const 827_u32 }<br/>_280 = anchor_lang::error::ErrorOrigin::Source(move _281)<br/>StorageDead(_281)<br/>_279 = Option::&lt;ErrorOrigin&gt;::Some(move _280)<br/>StorageDead(_280)<br/>StorageLive(_282)<br/>_282 = Option::&lt;ComparedValues&gt;::None<br/>_270 = anchor_lang::error::AnchorError { error_name: move _271, error_code_number: move _274, error_msg: move _276, error_origin: move _279, compared_values: move _282 }<br/>StorageDead(_282)<br/>StorageDead(_279)<br/>StorageDead(_276)<br/>StorageDead(_274)<br/>StorageDead(_271)<br/></td></tr><tr><td align="left">_269 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::AnchorError&gt;&gt;::from(move _270)</td></tr></table>>];
    bb105__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">105</td></tr><tr><td align="left" balign="left">_612 = const true<br/>StorageDead(_270)<br/>StorageLive(_283)<br/>StorageLive(_284)<br/>StorageLive(_285)<br/>_285 = &amp;_95<br/></td></tr><tr><td align="left">_284 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _285)</td></tr></table>>];
    bb106__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">106</td></tr><tr><td align="left" balign="left">StorageDead(_285)<br/>StorageLive(_286)<br/>StorageLive(_287)<br/>_287 = &amp;(*_41)<br/></td></tr><tr><td align="left">_286 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::Key&gt;::key(move _287)</td></tr></table>>];
    bb107__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">107</td></tr><tr><td align="left" balign="left">StorageDead(_287)<br/>_283 = (move _284, move _286)<br/>StorageDead(_286)<br/>StorageDead(_284)<br/>_612 = const false<br/></td></tr><tr><td align="left">_268 = anchor_lang::error::Error::with_pubkeys(move _269, move _283)</td></tr></table>>];
    bb108__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">108</td></tr><tr><td align="left" balign="left">StorageDead(_283)<br/>_612 = const false<br/>StorageDead(_269)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _268)<br/>StorageDead(_268)<br/>StorageDead(_260)<br/>StorageDead(_259)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb109__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">109</td></tr><tr><td align="left" balign="left">StorageDead(_265)<br/>StorageDead(_264)<br/>StorageDead(_262)<br/>StorageDead(_261)<br/>_259 = const ()<br/>StorageDead(_260)<br/>StorageDead(_259)<br/>StorageLive(_288)<br/>StorageLive(_289)<br/>StorageLive(_290)<br/>StorageLive(_291)<br/>_291 = &amp;_140<br/>StorageLive(_292)<br/>_292 = _190<br/></td></tr><tr><td align="left">_290 = anchor_lang::prelude::Rent::minimum_balance(move _291, move _292)</td></tr></table>>];
    bb110__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">110</td></tr><tr><td align="left" balign="left">StorageDead(_292)<br/>StorageDead(_291)<br/></td></tr><tr><td align="left">_289 = &lt;u64 as Ord&gt;::max(move _290, const 1_u64)</td></tr></table>>];
    bb111__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">111</td></tr><tr><td align="left" balign="left">StorageDead(_290)<br/>StorageLive(_293)<br/>_293 = _198<br/></td></tr><tr><td align="left">_288 = core::num::&lt;impl u64&gt;::saturating_sub(move _289, move _293)</td></tr></table>>];
    bb112__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">112</td></tr><tr><td align="left" balign="left">StorageDead(_293)<br/>StorageDead(_289)<br/>StorageLive(_294)<br/>StorageLive(_295)<br/>StorageLive(_296)<br/>_296 = _288<br/>_295 = Gt(move _296, const 0_u64)<br/></td></tr><tr><td align="left">switchInt(move _295)</td></tr></table>>];
    bb113__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">113</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>StorageLive(_297)<br/>StorageLive(_298)<br/>StorageLive(_299)<br/>_299 = &amp;_95<br/></td></tr><tr><td align="left">_298 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _299)</td></tr></table>>];
    bb114__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">114</td></tr><tr><td align="left" balign="left">StorageDead(_299)<br/>StorageLive(_300)<br/>StorageLive(_301)<br/>_301 = &amp;(*_41)<br/></td></tr><tr><td align="left">_300 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _301)</td></tr></table>>];
    bb115__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">115</td></tr><tr><td align="left" balign="left">StorageDead(_301)<br/>_611 = const true<br/>_297 = anchor_lang::system_program::Transfer::&lt;'_&gt; { from: move _298, to: move _300 }<br/>StorageDead(_300)<br/>StorageDead(_298)<br/>StorageLive(_302)<br/>StorageLive(_303)<br/>StorageLive(_304)<br/>_304 = &amp;_125<br/></td></tr><tr><td align="left">_303 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _304)</td></tr></table>>];
    bb116__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">116</td></tr><tr><td align="left" balign="left">StorageDead(_304)<br/>StorageLive(_305)<br/>_611 = const false<br/>_305 = move _297<br/></td></tr><tr><td align="left">_302 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Transfer&lt;'_&gt;&gt;::new(move _303, move _305)</td></tr></table>>];
    bb117__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">117</td></tr><tr><td align="left" balign="left">StorageDead(_305)<br/>StorageDead(_303)<br/>StorageLive(_306)<br/>StorageLive(_307)<br/>StorageLive(_308)<br/>StorageLive(_309)<br/>_309 = move _302<br/>StorageLive(_310)<br/>_310 = _288<br/></td></tr><tr><td align="left">_308 = anchor_lang::system_program::transfer(move _309, move _310)</td></tr></table>>];
    bb118__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">118</td></tr><tr><td align="left" balign="left">StorageDead(_310)<br/>StorageDead(_309)<br/></td></tr><tr><td align="left">_307 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _308)</td></tr></table>>];
    bb119__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">119</td></tr><tr><td align="left" balign="left">StorageDead(_308)<br/>_311 = discriminant(_307)<br/></td></tr><tr><td align="left">switchInt(move _311)</td></tr></table>>];
    bb120__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">120</td></tr><tr><td align="left" balign="left">StorageLive(_315)<br/>_315 = ((_307 as Continue).0: ())<br/>_306 = _315<br/>StorageDead(_315)<br/>_634 = discriminant(_307)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>_294 = const ()<br/>StorageDead(_302)<br/>_611 = const false<br/>StorageDead(_297)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb121__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">121</td></tr><tr><td align="left" balign="left">StorageLive(_312)<br/>_312 = move ((_307 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_314)<br/>_314 = move _312<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _314)</td></tr></table>>];
    bb122__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">122</td></tr><tr><td align="left" balign="left">StorageDead(_314)<br/>StorageDead(_312)<br/>_662 = discriminant(_307)<br/>StorageDead(_307)<br/>StorageDead(_306)<br/>StorageDead(_302)<br/>_611 = const false<br/>StorageDead(_297)<br/>StorageDead(_295)<br/>StorageDead(_294)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb123__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">123</td></tr><tr><td align="left" balign="left">StorageDead(_296)<br/>_294 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb124__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">124</td></tr><tr><td align="left" balign="left">StorageDead(_295)<br/>StorageDead(_294)<br/>StorageLive(_316)<br/>StorageLive(_317)<br/>StorageLive(_318)<br/>_318 = &amp;(*_41)<br/></td></tr><tr><td align="left">_317 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _318)</td></tr></table>>];
    bb125__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">125</td></tr><tr><td align="left" balign="left">StorageDead(_318)<br/>_610 = const true<br/>_316 = anchor_lang::system_program::Allocate::&lt;'_&gt; { account_to_allocate: move _317 }<br/>StorageDead(_317)<br/>StorageLive(_319)<br/>StorageLive(_320)<br/>StorageLive(_321)<br/>_321 = &amp;_125<br/></td></tr><tr><td align="left">_320 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _321)</td></tr></table>>];
    bb126__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">126</td></tr><tr><td align="left" balign="left">StorageDead(_321)<br/>StorageLive(_322)<br/>_610 = const false<br/>_322 = move _316<br/></td></tr><tr><td align="left">_319 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Allocate&lt;'_&gt;&gt;::new(move _320, move _322)</td></tr></table>>];
    bb127__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">127</td></tr><tr><td align="left" balign="left">StorageDead(_322)<br/>StorageDead(_320)<br/>StorageLive(_323)<br/>StorageLive(_324)<br/>StorageLive(_325)<br/>StorageLive(_326)<br/>StorageLive(_327)<br/>_609 = const true<br/>_327 = move _319<br/>StorageLive(_328)<br/>StorageLive(_329)<br/>StorageLive(_330)<br/>StorageLive(_331)<br/>StorageLive(_332)<br/>StorageLive(_333)<br/>StorageLive(_334)<br/>StorageLive(_335)<br/>StorageLive(_336)<br/>StorageLive(_337)<br/>StorageLive(_338)<br/>StorageLive(_339)<br/>_339 = const b&quot;insurance_fund_stake&quot;<br/>_338 = &amp;(*_339)<br/>_337 = move _338 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_338)<br/>StorageLive(_340)<br/>StorageLive(_341)<br/>StorageLive(_342)<br/>StorageLive(_343)<br/>_343 = &amp;_80<br/></td></tr><tr><td align="left">_342 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _343)</td></tr></table>>];
    bb128__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">128</td></tr><tr><td align="left" balign="left">StorageDead(_343)<br/>_597 = deref_copy ((*_342).0: &amp;anchor_lang::prelude::Pubkey)<br/>_341 = &amp;(*_597)<br/></td></tr><tr><td align="left">_340 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _341)</td></tr></table>>];
    bb129__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">129</td></tr><tr><td align="left" balign="left">StorageDead(_341)<br/>StorageLive(_344)<br/>StorageLive(_345)<br/>StorageLive(_346)<br/>StorageLive(_347)<br/>StorageLive(_348)<br/>_348 = _7<br/></td></tr><tr><td align="left">_347 = core::num::&lt;impl u16&gt;::to_le_bytes(move _348)</td></tr></table>>];
    bb130__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">130</td></tr><tr><td align="left" balign="left">_346 = &amp;_347<br/>StorageDead(_348)<br/></td></tr><tr><td align="left">_345 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _346)</td></tr></table>>];
    bb131__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">131</td></tr><tr><td align="left" balign="left">_344 = &amp;(*_345)<br/>StorageDead(_346)<br/>StorageLive(_349)<br/>StorageLive(_350)<br/>StorageLive(_351)<br/>StorageLive(_352)<br/>StorageLive(_353)<br/>StorageLive(_354)<br/>_354 = _149<br/>_353 = [move _354]<br/>_352 = &amp;_353<br/>StorageDead(_354)<br/>StorageLive(_355)<br/>_355 = RangeFull<br/></td></tr><tr><td align="left">_351 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _352, move _355)</td></tr></table>>];
    bb132__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">132</td></tr><tr><td align="left" balign="left">StorageDead(_355)<br/>StorageDead(_352)<br/>_350 = &amp;(*_351)<br/>_349 = &amp;(*_350)<br/>_336 = [move _337, move _340, move _344, move _349]<br/>_335 = &amp;_336<br/>StorageDead(_349)<br/>StorageDead(_344)<br/>StorageDead(_340)<br/>StorageDead(_337)<br/>StorageLive(_356)<br/>_356 = RangeFull<br/></td></tr><tr><td align="left">_334 = &lt;[&amp;[u8]; 4] as Index&lt;RangeFull&gt;&gt;::index(move _335, move _356)</td></tr></table>>];
    bb133__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">133</td></tr><tr><td align="left" balign="left">StorageDead(_356)<br/>StorageDead(_335)<br/>_333 = &amp;(*_334)<br/>_332 = &amp;(*_333)<br/>_331 = [move _332]<br/>StorageDead(_332)<br/>_330 = &amp;_331<br/>_329 = &amp;(*_330)<br/>_328 = move _329 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_329)<br/>_609 = const false<br/></td></tr><tr><td align="left">_326 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Allocate&lt;'_&gt;&gt;::with_signer(move _327, move _328)</td></tr></table>>];
    bb134__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">134</td></tr><tr><td align="left" balign="left">StorageDead(_328)<br/>_609 = const false<br/>StorageDead(_327)<br/>StorageLive(_357)<br/>StorageLive(_358)<br/>_358 = _190<br/>_357 = move _358 as u64 (IntToInt)<br/>StorageDead(_358)<br/></td></tr><tr><td align="left">_325 = anchor_lang::system_program::allocate(move _326, move _357)</td></tr></table>>];
    bb135__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">135</td></tr><tr><td align="left" balign="left">StorageDead(_357)<br/>StorageDead(_326)<br/></td></tr><tr><td align="left">_324 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _325)</td></tr></table>>];
    bb136__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">136</td></tr><tr><td align="left" balign="left">StorageDead(_325)<br/>_359 = discriminant(_324)<br/></td></tr><tr><td align="left">switchInt(move _359)</td></tr></table>>];
    bb137__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">137</td></tr><tr><td align="left" balign="left">StorageLive(_363)<br/>_363 = ((_324 as Continue).0: ())<br/>_323 = _363<br/>StorageDead(_363)<br/>_636 = discriminant(_324)<br/>StorageDead(_353)<br/>StorageDead(_351)<br/>StorageDead(_350)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageDead(_324)<br/>StorageDead(_323)<br/>StorageLive(_364)<br/>StorageLive(_365)<br/>StorageLive(_366)<br/>_366 = &amp;(*_41)<br/></td></tr><tr><td align="left">_365 = &lt;anchor_lang::prelude::AccountInfo&lt;'_&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _366)</td></tr></table>>];
    bb138__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">138</td></tr><tr><td align="left" balign="left">StorageLive(_360)<br/>_360 = move ((_324 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_362)<br/>_362 = move _360<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _362)</td></tr></table>>];
    bb139__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">139</td></tr><tr><td align="left" balign="left">StorageDead(_362)<br/>StorageDead(_360)<br/>_660 = discriminant(_324)<br/>StorageDead(_353)<br/>StorageDead(_351)<br/>StorageDead(_350)<br/>StorageDead(_347)<br/>StorageDead(_345)<br/>StorageDead(_342)<br/>StorageDead(_339)<br/>StorageDead(_336)<br/>StorageDead(_334)<br/>StorageDead(_333)<br/>StorageDead(_331)<br/>StorageDead(_330)<br/>StorageDead(_324)<br/>StorageDead(_323)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb140__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">140</td></tr><tr><td align="left" balign="left">StorageDead(_366)<br/>_608 = const true<br/>_364 = anchor_lang::system_program::Assign::&lt;'_&gt; { account_to_assign: move _365 }<br/>StorageDead(_365)<br/>StorageLive(_367)<br/>StorageLive(_368)<br/>StorageLive(_369)<br/>_369 = &amp;_125<br/></td></tr><tr><td align="left">_368 = &lt;anchor_lang::prelude::Program&lt;'_, anchor_lang::system_program::System&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _369)</td></tr></table>>];
    bb141__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">141</td></tr><tr><td align="left" balign="left">StorageDead(_369)<br/>StorageLive(_370)<br/>_608 = const false<br/>_370 = move _364<br/></td></tr><tr><td align="left">_367 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Assign&lt;'_&gt;&gt;::new(move _368, move _370)</td></tr></table>>];
    bb142__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">142</td></tr><tr><td align="left" balign="left">StorageDead(_370)<br/>StorageDead(_368)<br/>StorageLive(_371)<br/>StorageLive(_372)<br/>StorageLive(_373)<br/>StorageLive(_374)<br/>StorageLive(_375)<br/>_607 = const true<br/>_375 = move _367<br/>StorageLive(_376)<br/>StorageLive(_377)<br/>StorageLive(_378)<br/>StorageLive(_379)<br/>StorageLive(_380)<br/>StorageLive(_381)<br/>StorageLive(_382)<br/>StorageLive(_383)<br/>StorageLive(_384)<br/>StorageLive(_385)<br/>StorageLive(_386)<br/>StorageLive(_387)<br/>_387 = const b&quot;insurance_fund_stake&quot;<br/>_386 = &amp;(*_387)<br/>_385 = move _386 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_386)<br/>StorageLive(_388)<br/>StorageLive(_389)<br/>StorageLive(_390)<br/>StorageLive(_391)<br/>_391 = &amp;_80<br/></td></tr><tr><td align="left">_390 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as Deref&gt;::deref(move _391)</td></tr></table>>];
    bb143__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">143</td></tr><tr><td align="left" balign="left">StorageDead(_391)<br/>_598 = deref_copy ((*_390).0: &amp;anchor_lang::prelude::Pubkey)<br/>_389 = &amp;(*_598)<br/></td></tr><tr><td align="left">_388 = &lt;anchor_lang::prelude::Pubkey as AsRef&lt;[u8]&gt;&gt;::as_ref(move _389)</td></tr></table>>];
    bb144__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">144</td></tr><tr><td align="left" balign="left">StorageDead(_389)<br/>StorageLive(_392)<br/>StorageLive(_393)<br/>StorageLive(_394)<br/>StorageLive(_395)<br/>StorageLive(_396)<br/>_396 = _7<br/></td></tr><tr><td align="left">_395 = core::num::&lt;impl u16&gt;::to_le_bytes(move _396)</td></tr></table>>];
    bb145__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">145</td></tr><tr><td align="left" balign="left">_394 = &amp;_395<br/>StorageDead(_396)<br/></td></tr><tr><td align="left">_393 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _394)</td></tr></table>>];
    bb146__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">146</td></tr><tr><td align="left" balign="left">_392 = &amp;(*_393)<br/>StorageDead(_394)<br/>StorageLive(_397)<br/>StorageLive(_398)<br/>StorageLive(_399)<br/>StorageLive(_400)<br/>StorageLive(_401)<br/>StorageLive(_402)<br/>_402 = _149<br/>_401 = [move _402]<br/>_400 = &amp;_401<br/>StorageDead(_402)<br/>StorageLive(_403)<br/>_403 = RangeFull<br/></td></tr><tr><td align="left">_399 = &lt;[u8; 1] as Index&lt;RangeFull&gt;&gt;::index(move _400, move _403)</td></tr></table>>];
    bb147__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">147</td></tr><tr><td align="left" balign="left">StorageDead(_403)<br/>StorageDead(_400)<br/>_398 = &amp;(*_399)<br/>_397 = &amp;(*_398)<br/>_384 = [move _385, move _388, move _392, move _397]<br/>_383 = &amp;_384<br/>StorageDead(_397)<br/>StorageDead(_392)<br/>StorageDead(_388)<br/>StorageDead(_385)<br/>StorageLive(_404)<br/>_404 = RangeFull<br/></td></tr><tr><td align="left">_382 = &lt;[&amp;[u8]; 4] as Index&lt;RangeFull&gt;&gt;::index(move _383, move _404)</td></tr></table>>];
    bb148__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">148</td></tr><tr><td align="left" balign="left">StorageDead(_404)<br/>StorageDead(_383)<br/>_381 = &amp;(*_382)<br/>_380 = &amp;(*_381)<br/>_379 = [move _380]<br/>StorageDead(_380)<br/>_378 = &amp;_379<br/>_377 = &amp;(*_378)<br/>_376 = move _377 as &amp;[&amp;[&amp;[u8]]] (PointerCoercion(Unsize))<br/>StorageDead(_377)<br/>_607 = const false<br/></td></tr><tr><td align="left">_374 = anchor_lang::context::CpiContext::&lt;'_, '_, '_, '_, anchor_lang::system_program::Assign&lt;'_&gt;&gt;::with_signer(move _375, move _376)</td></tr></table>>];
    bb149__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">149</td></tr><tr><td align="left" balign="left">StorageDead(_376)<br/>_607 = const false<br/>StorageDead(_375)<br/>StorageLive(_405)<br/>_405 = &amp;(*_1)<br/></td></tr><tr><td align="left">_373 = anchor_lang::system_program::assign(move _374, move _405)</td></tr></table>>];
    bb150__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">150</td></tr><tr><td align="left" balign="left">StorageDead(_405)<br/>StorageDead(_374)<br/></td></tr><tr><td align="left">_372 = &lt;std::result::Result&lt;(), anchor_lang::error::Error&gt; as Try&gt;::branch(move _373)</td></tr></table>>];
    bb151__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">151</td></tr><tr><td align="left" balign="left">StorageDead(_373)<br/>_406 = discriminant(_372)<br/></td></tr><tr><td align="left">switchInt(move _406)</td></tr></table>>];
    bb152__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">152</td></tr><tr><td align="left" balign="left">StorageLive(_410)<br/>_410 = ((_372 as Continue).0: ())<br/>_371 = _410<br/>StorageDead(_410)<br/>_638 = discriminant(_372)<br/>StorageDead(_401)<br/>StorageDead(_399)<br/>StorageDead(_398)<br/>StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_390)<br/>StorageDead(_387)<br/>StorageDead(_384)<br/>StorageDead(_382)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_378)<br/>StorageDead(_372)<br/>StorageDead(_371)<br/>_200 = const ()<br/>StorageDead(_367)<br/>_608 = const false<br/>StorageDead(_364)<br/>StorageDead(_319)<br/>_610 = const false<br/>StorageDead(_316)<br/>StorageDead(_288)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb153__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">153</td></tr><tr><td align="left" balign="left">StorageLive(_407)<br/>_407 = move ((_372 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_409)<br/>_409 = move _407<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _409)</td></tr></table>>];
    bb154__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">154</td></tr><tr><td align="left" balign="left">StorageDead(_409)<br/>StorageDead(_407)<br/>_658 = discriminant(_372)<br/>StorageDead(_401)<br/>StorageDead(_399)<br/>StorageDead(_398)<br/>StorageDead(_395)<br/>StorageDead(_393)<br/>StorageDead(_390)<br/>StorageDead(_387)<br/>StorageDead(_384)<br/>StorageDead(_382)<br/>StorageDead(_381)<br/>StorageDead(_379)<br/>StorageDead(_378)<br/>StorageDead(_372)<br/>StorageDead(_371)<br/>StorageDead(_367)<br/>_608 = const false<br/>StorageDead(_364)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb155__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">155</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/>StorageLive(_411)<br/>StorageLive(_412)<br/>_412 = &amp;(*_1)<br/>StorageLive(_413)<br/>StorageLive(_414)<br/>_414 = &amp;_41<br/>_599 = deref_copy (*_414)<br/>_413 = &amp;(*_599)<br/></td></tr><tr><td align="left">_411 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::try_from_unchecked(move _412, move _413)</td></tr></table>>];
    bb156__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">156</td></tr><tr><td align="left" balign="left">StorageDead(_413)<br/>StorageDead(_412)<br/>_415 = discriminant(_411)<br/></td></tr><tr><td align="left">switchInt(move _415)</td></tr></table>>];
    bb157__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">157</td></tr><tr><td align="left" balign="left">StorageLive(_417)<br/>_417 = move ((_411 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_419)<br/>StorageLive(_420)<br/>_420 = move _417<br/></td></tr><tr><td align="left">_419 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _420, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb158__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">158</td></tr><tr><td align="left" balign="left">StorageLive(_416)<br/>_416 = move ((_411 as Ok).0: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_191 = move _416<br/>StorageDead(_416)<br/>StorageDead(_198)<br/>_640 = discriminant(_411)<br/>StorageDead(_414)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb159__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">159</td></tr><tr><td align="left" balign="left">StorageDead(_420)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _419)<br/>StorageDead(_419)<br/>StorageDead(_417)<br/>StorageDead(_198)<br/>_656 = discriminant(_411)<br/>StorageDead(_414)<br/>StorageDead(_411)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb160__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">160</td></tr><tr><td align="left" balign="left">StorageDead(_195)<br/>StorageDead(_194)<br/>StorageLive(_421)<br/>StorageLive(_422)<br/>StorageLive(_423)<br/>_423 = &amp;_41<br/>_600 = deref_copy (*_423)<br/>_422 = &amp;(*_600)<br/></td></tr><tr><td align="left">_421 = anchor_lang::prelude::AccountLoader::&lt;'_, InsuranceFundStake&gt;::try_from(move _422)</td></tr></table>>];
    bb161__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">161</td></tr><tr><td align="left" balign="left">StorageDead(_422)<br/>_424 = discriminant(_421)<br/></td></tr><tr><td align="left">switchInt(move _424)</td></tr></table>>];
    bb162__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">162</td></tr><tr><td align="left" balign="left">StorageLive(_426)<br/>_426 = move ((_421 as Err).0: anchor_lang::error::Error)<br/>StorageLive(_428)<br/>StorageLive(_429)<br/>_429 = move _426<br/></td></tr><tr><td align="left">_428 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _429, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb163__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">163</td></tr><tr><td align="left" balign="left">StorageLive(_425)<br/>_425 = move ((_421 as Ok).0: anchor_lang::prelude::AccountLoader&lt;'_, state::insurance_fund_stake::InsuranceFundStake&gt;)<br/>_191 = move _425<br/>StorageDead(_425)<br/>_642 = discriminant(_421)<br/>StorageDead(_423)<br/>StorageDead(_421)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb164__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">164</td></tr><tr><td align="left" balign="left">StorageDead(_429)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _428)<br/>StorageDead(_428)<br/>StorageDead(_426)<br/>_654 = discriminant(_421)<br/>StorageDead(_423)<br/>StorageDead(_421)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb165__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">165</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/>StorageLive(_430)<br/>StorageLive(_431)<br/>_431 = const false<br/></td></tr><tr><td align="left">switchInt(move _431)</td></tr></table>>];
    bb166__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">166</td></tr><tr><td align="left" balign="left">StorageLive(_432)<br/>StorageLive(_433)<br/>StorageLive(_434)<br/>_434 = _190<br/>StorageLive(_435)<br/>StorageLive(_436)<br/>_436 = &amp;(*_186)<br/></td></tr><tr><td align="left">_435 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::data_len(move _436)</td></tr></table>>];
    bb167__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">167</td></tr><tr><td align="left" balign="left">StorageDead(_436)<br/>_433 = Ne(move _434, move _435)<br/></td></tr><tr><td align="left">switchInt(move _433)</td></tr></table>>];
    bb168__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">168</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_434)<br/>StorageLive(_438)<br/>StorageLive(_439)<br/>StorageLive(_440)<br/>StorageLive(_441)<br/>_441 = ConstraintSpace<br/></td></tr><tr><td align="left">_440 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _441)</td></tr></table>>];
    bb169__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">169</td></tr><tr><td align="left" balign="left">StorageDead(_441)<br/></td></tr><tr><td align="left">_439 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _440, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb170__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">170</td></tr><tr><td align="left" balign="left">_606 = const true<br/>StorageDead(_440)<br/>StorageLive(_442)<br/>StorageLive(_443)<br/>_443 = _190<br/>StorageLive(_444)<br/>StorageLive(_445)<br/>_445 = &amp;(*_186)<br/></td></tr><tr><td align="left">_444 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::data_len(move _445)</td></tr></table>>];
    bb171__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">171</td></tr><tr><td align="left" balign="left">StorageDead(_445)<br/>_442 = (move _443, move _444)<br/>StorageDead(_444)<br/>StorageDead(_443)<br/>_606 = const false<br/></td></tr><tr><td align="left">_438 = anchor_lang::error::Error::with_values::&lt;usize, usize&gt;(move _439, move _442)</td></tr></table>>];
    bb172__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">172</td></tr><tr><td align="left" balign="left">StorageDead(_442)<br/>_606 = const false<br/>StorageDead(_439)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _438)<br/>StorageDead(_438)<br/>StorageDead(_433)<br/>StorageDead(_432)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb173__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">173</td></tr><tr><td align="left" balign="left">StorageDead(_435)<br/>StorageDead(_434)<br/>_432 = const ()<br/>StorageDead(_433)<br/>StorageDead(_432)<br/>StorageLive(_446)<br/>StorageLive(_447)<br/>StorageLive(_448)<br/>_448 = &amp;_189<br/>StorageLive(_449)<br/>_449 = &amp;_1<br/></td></tr><tr><td align="left">_447 = &lt;&amp;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _448, move _449)</td></tr></table>>];
    bb174__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">174</td></tr><tr><td align="left">switchInt(move _447)</td></tr></table>>];
    bb175__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">175</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/>StorageLive(_451)<br/>StorageLive(_452)<br/>StorageLive(_453)<br/>StorageLive(_454)<br/>_454 = ConstraintOwner<br/></td></tr><tr><td align="left">_453 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _454)</td></tr></table>>];
    bb176__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">176</td></tr><tr><td align="left" balign="left">StorageDead(_454)<br/></td></tr><tr><td align="left">_452 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _453, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb177__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">177</td></tr><tr><td align="left" balign="left">StorageDead(_453)<br/>StorageLive(_455)<br/>StorageLive(_456)<br/>_456 = (*_189)<br/>StorageLive(_457)<br/>_457 = (*_1)<br/>_455 = (move _456, move _457)<br/>StorageDead(_457)<br/>StorageDead(_456)<br/></td></tr><tr><td align="left">_451 = anchor_lang::error::Error::with_pubkeys(move _452, move _455)</td></tr></table>>];
    bb178__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">178</td></tr><tr><td align="left" balign="left">StorageDead(_455)<br/>StorageDead(_452)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _451)<br/>StorageDead(_451)<br/>StorageDead(_447)<br/>StorageDead(_446)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb179__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">179</td></tr><tr><td align="left" balign="left">StorageDead(_449)<br/>StorageDead(_448)<br/>_446 = const ()<br/>StorageDead(_447)<br/>StorageDead(_446)<br/>StorageLive(_458)<br/>StorageLive(_459)<br/>_459 = &amp;_140<br/>StorageLive(_460)<br/>_460 = _190<br/></td></tr><tr><td align="left">_458 = anchor_lang::prelude::Rent::minimum_balance(move _459, move _460)</td></tr></table>>];
    bb180__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">180</td></tr><tr><td align="left" balign="left">StorageDead(_460)<br/>StorageDead(_459)<br/>StorageLive(_461)<br/>StorageLive(_462)<br/>StorageLive(_463)<br/>StorageLive(_464)<br/>StorageLive(_465)<br/>_465 = &amp;_191<br/></td></tr><tr><td align="left">_464 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _465)</td></tr></table>>];
    bb181__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">181</td></tr><tr><td align="left" balign="left">_463 = &amp;_464<br/>StorageDead(_465)<br/></td></tr><tr><td align="left">_462 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::lamports(move _463)</td></tr></table>>];
    bb182__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">182</td></tr><tr><td align="left" balign="left">StorageDead(_463)<br/>StorageLive(_466)<br/>_466 = _458<br/>_461 = Lt(move _462, move _466)<br/></td></tr><tr><td align="left">switchInt(move _461)</td></tr></table>>];
    bb183__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">183</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/></td></tr><tr><td align="left">drop(_464)</td></tr></table>>];
    bb184__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">184</td></tr><tr><td align="left" balign="left">StorageDead(_464)<br/>StorageDead(_462)<br/>StorageLive(_468)<br/>StorageLive(_469)<br/>StorageLive(_470)<br/>_470 = ConstraintRentExempt<br/></td></tr><tr><td align="left">_469 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _470)</td></tr></table>>];
    bb185__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">185</td></tr><tr><td align="left" balign="left">StorageDead(_470)<br/></td></tr><tr><td align="left">_468 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _469, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb186__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">186</td></tr><tr><td align="left" balign="left">StorageDead(_469)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _468)<br/>StorageDead(_468)<br/>StorageDead(_461)<br/>StorageDead(_458)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb187__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">187</td></tr><tr><td align="left" balign="left">StorageDead(_466)<br/></td></tr><tr><td align="left">drop(_464)</td></tr></table>>];
    bb188__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">188</td></tr><tr><td align="left" balign="left">StorageDead(_464)<br/>StorageDead(_462)<br/>_430 = const ()<br/>StorageDead(_461)<br/>StorageDead(_458)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb189__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">189</td></tr><tr><td align="left" balign="left">_430 = const ()<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb190__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">190</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_430)<br/>_185 = move _191<br/>StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_186)<br/>StorageLive(_471)<br/>StorageLive(_472)<br/>StorageLive(_473)<br/>StorageLive(_474)<br/>StorageLive(_475)<br/>_475 = &amp;_185<br/>_474 = &amp;(*_475)<br/></td></tr><tr><td align="left">_473 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _474)</td></tr></table>>];
    bb191__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">191</td></tr><tr><td align="left" balign="left">StorageDead(_474)<br/>_472 = ((*_473).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _472)</td></tr></table>>];
    bb192__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">192</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_473)<br/>StorageLive(_477)<br/>StorageLive(_478)<br/>StorageLive(_479)<br/>_479 = ConstraintMut<br/></td></tr><tr><td align="left">_478 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _479)</td></tr></table>>];
    bb193__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">193</td></tr><tr><td align="left" balign="left">StorageDead(_479)<br/></td></tr><tr><td align="left">_477 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _478, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb194__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">194</td></tr><tr><td align="left" balign="left">StorageDead(_478)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _477)<br/>StorageDead(_477)<br/>StorageDead(_472)<br/>StorageDead(_471)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb195__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">195</td></tr><tr><td align="left" balign="left">StorageDead(_475)<br/>StorageDead(_473)<br/>_471 = const ()<br/>StorageDead(_472)<br/>StorageDead(_471)<br/>StorageLive(_480)<br/>StorageLive(_481)<br/>StorageLive(_482)<br/>_482 = &amp;_140<br/>StorageLive(_483)<br/>StorageLive(_484)<br/>StorageLive(_485)<br/>StorageLive(_486)<br/>_486 = &amp;_185<br/></td></tr><tr><td align="left">_485 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _486)</td></tr></table>>];
    bb196__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">196</td></tr><tr><td align="left" balign="left">_484 = &amp;_485<br/>StorageDead(_486)<br/></td></tr><tr><td align="left">_483 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::lamports(move _484)</td></tr></table>>];
    bb197__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">197</td></tr><tr><td align="left" balign="left">StorageDead(_484)<br/>StorageLive(_487)<br/>StorageLive(_488)<br/>StorageLive(_489)<br/>StorageLive(_490)<br/>StorageLive(_491)<br/>StorageLive(_492)<br/>_492 = &amp;_185<br/></td></tr><tr><td align="left">_491 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, InsuranceFundStake&gt; as anchor_lang::ToAccountInfo&lt;'_&gt;&gt;::to_account_info(move _492)</td></tr></table>>];
    bb198__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">198</td></tr><tr><td align="left" balign="left">_490 = &amp;_491<br/>StorageDead(_492)<br/></td></tr><tr><td align="left">_489 = anchor_lang::prelude::AccountInfo::&lt;'_&gt;::try_data_len(move _490)</td></tr></table>>];
    bb199__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">199</td></tr><tr><td align="left" balign="left">StorageDead(_490)<br/></td></tr><tr><td align="left">_488 = &lt;std::result::Result&lt;usize, anchor_lang::prelude::ProgramError&gt; as Try&gt;::branch(move _489)</td></tr></table>>];
    bb200__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">200</td></tr><tr><td align="left" balign="left">_605 = const true<br/>StorageDead(_489)<br/>_493 = discriminant(_488)<br/></td></tr><tr><td align="left">switchInt(move _493)</td></tr></table>>];
    bb201__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">201</td></tr><tr><td align="left" balign="left">StorageLive(_497)<br/>_497 = ((_488 as Continue).0: usize)<br/>_487 = _497<br/>StorageDead(_497)<br/></td></tr><tr><td align="left">_481 = anchor_lang::prelude::Rent::is_exempt(move _482, move _483, move _487)</td></tr></table>>];
    bb202__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">202</td></tr><tr><td align="left" balign="left">StorageLive(_494)<br/>_494 = move ((_488 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::prelude::ProgramError&gt;)<br/>StorageLive(_496)<br/>_496 = move _494<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::prelude::ProgramError&gt;&gt;&gt;::from_residual(move _496)</td></tr></table>>];
    bb203__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">203</td></tr><tr><td align="left" balign="left">StorageDead(_496)<br/>StorageDead(_494)<br/>StorageDead(_487)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/>_652 = discriminant(_488)<br/></td></tr><tr><td align="left">drop(_491)</td></tr></table>>];
    bb204__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">204</td></tr><tr><td align="left">switchInt(move _481)</td></tr></table>>];
    bb205__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">205</td></tr><tr><td align="left" balign="left">StorageDead(_487)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/>_644 = discriminant(_488)<br/></td></tr><tr><td align="left">drop(_491)</td></tr></table>>];
    bb206__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">206</td></tr><tr><td align="left" balign="left">StorageDead(_487)<br/>StorageDead(_483)<br/>StorageDead(_482)<br/>_646 = discriminant(_488)<br/></td></tr><tr><td align="left">drop(_491)</td></tr></table>>];
    bb207__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">207</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_605 = const false<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">drop(_485)</td></tr></table>>];
    bb208__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">208</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>StorageLive(_499)<br/>StorageLive(_500)<br/>StorageLive(_501)<br/>_501 = ConstraintRentExempt<br/></td></tr><tr><td align="left">_500 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _501)</td></tr></table>>];
    bb209__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">209</td></tr><tr><td align="left" balign="left">StorageDead(_501)<br/></td></tr><tr><td align="left">_499 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _500, const &quot;insurance_fund_stake&quot;)</td></tr></table>>];
    bb210__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">210</td></tr><tr><td align="left" balign="left">StorageDead(_500)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _499)<br/>StorageDead(_499)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb211__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">211</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_605 = const false<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">drop(_485)</td></tr></table>>];
    bb212__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">212</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/>_480 = const ()<br/>StorageDead(_481)<br/>StorageDead(_480)<br/>StorageLive(_504)<br/>StorageLive(_505)<br/>StorageLive(_506)<br/>StorageLive(_507)<br/>StorageLive(_508)<br/>StorageLive(_509)<br/>StorageLive(_510)<br/>StorageLive(_511)<br/>_511 = const b&quot;spot_market&quot;<br/>_510 = &amp;(*_511)<br/>_509 = move _510 as &amp;[u8] (PointerCoercion(Unsize))<br/>StorageDead(_510)<br/>StorageLive(_512)<br/>StorageLive(_513)<br/>StorageLive(_514)<br/>StorageLive(_515)<br/>StorageLive(_516)<br/>_516 = _7<br/></td></tr><tr><td align="left">_515 = core::num::&lt;impl u16&gt;::to_le_bytes(move _516)</td></tr></table>>];
    bb213__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">213</td></tr><tr><td align="left" balign="left">_514 = &amp;_515<br/>StorageDead(_516)<br/></td></tr><tr><td align="left">_513 = &lt;[u8; 2] as AsRef&lt;[u8]&gt;&gt;::as_ref(move _514)</td></tr></table>>];
    bb214__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">214</td></tr><tr><td align="left" balign="left">_512 = &amp;(*_513)<br/>StorageDead(_514)<br/>_508 = [move _509, move _512]<br/>StorageDead(_512)<br/>StorageDead(_509)<br/>_507 = &amp;_508<br/>_506 = &amp;(*_507)<br/>_505 = move _506 as &amp;[&amp;[u8]] (PointerCoercion(Unsize))<br/>StorageDead(_506)<br/>StorageLive(_517)<br/>StorageLive(_518)<br/>_518 = &amp;_1<br/>_601 = deref_copy (*_518)<br/>_517 = &amp;(*_601)<br/></td></tr><tr><td align="left">_504 = anchor_lang::prelude::Pubkey::find_program_address(move _505, move _517)</td></tr></table>>];
    bb215__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">215</td></tr><tr><td align="left" balign="left">StorageDead(_517)<br/>StorageDead(_505)<br/>StorageLive(_502)<br/>_502 = (_504.0: anchor_lang::prelude::Pubkey)<br/>StorageLive(_503)<br/>_503 = (_504.1: u8)<br/>StorageDead(_518)<br/>StorageDead(_515)<br/>StorageDead(_513)<br/>StorageDead(_511)<br/>StorageDead(_508)<br/>StorageDead(_507)<br/>StorageDead(_504)<br/>StorageLive(_519)<br/>_519 = _503<br/>((*_4).0: u8) = move _519<br/>StorageDead(_519)<br/>StorageLive(_520)<br/>StorageLive(_521)<br/>StorageLive(_522)<br/>StorageLive(_523)<br/>StorageLive(_524)<br/>_524 = &amp;_20<br/></td></tr><tr><td align="left">_523 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _524)</td></tr></table>>];
    bb216__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">216</td></tr><tr><td align="left" balign="left">_522 = &amp;_523<br/>StorageDead(_524)<br/>StorageLive(_525)<br/>_525 = &amp;_502<br/></td></tr><tr><td align="left">_521 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _522, move _525)</td></tr></table>>];
    bb217__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">217</td></tr><tr><td align="left">switchInt(move _521)</td></tr></table>>];
    bb218__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">218</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/>StorageDead(_523)<br/>StorageDead(_522)<br/>StorageLive(_527)<br/>StorageLive(_528)<br/>StorageLive(_529)<br/>StorageLive(_530)<br/>_530 = ConstraintSeeds<br/></td></tr><tr><td align="left">_529 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _530)</td></tr></table>>];
    bb219__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">219</td></tr><tr><td align="left" balign="left">StorageDead(_530)<br/></td></tr><tr><td align="left">_528 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _529, const &quot;spot_market&quot;)</td></tr></table>>];
    bb220__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">220</td></tr><tr><td align="left" balign="left">_604 = const true<br/>StorageDead(_529)<br/>StorageLive(_531)<br/>StorageLive(_532)<br/>StorageLive(_533)<br/>_533 = &amp;_20<br/></td></tr><tr><td align="left">_532 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, SpotMarket&gt; as anchor_lang::Key&gt;::key(move _533)</td></tr></table>>];
    bb221__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">221</td></tr><tr><td align="left" balign="left">StorageDead(_533)<br/>StorageLive(_534)<br/>_534 = _502<br/>_531 = (move _532, move _534)<br/>StorageDead(_534)<br/>StorageDead(_532)<br/>_604 = const false<br/></td></tr><tr><td align="left">_527 = anchor_lang::error::Error::with_pubkeys(move _528, move _531)</td></tr></table>>];
    bb222__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">222</td></tr><tr><td align="left" balign="left">StorageDead(_531)<br/>_604 = const false<br/>StorageDead(_528)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _527)<br/>StorageDead(_527)<br/>StorageDead(_521)<br/>StorageDead(_520)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb223__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">223</td></tr><tr><td align="left" balign="left">StorageDead(_525)<br/>StorageDead(_523)<br/>StorageDead(_522)<br/>_520 = const ()<br/>StorageDead(_521)<br/>StorageDead(_520)<br/>StorageLive(_535)<br/>StorageLive(_536)<br/>StorageLive(_537)<br/>StorageLive(_538)<br/>StorageLive(_539)<br/>_539 = &amp;_50<br/>_538 = &amp;(*_539)<br/></td></tr><tr><td align="left">_537 = &lt;anchor_lang::prelude::AccountLoader&lt;'_, UserStats&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _538)</td></tr></table>>];
    bb224__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">224</td></tr><tr><td align="left" balign="left">StorageDead(_538)<br/>_536 = ((*_537).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _536)</td></tr></table>>];
    bb225__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">225</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/>StorageDead(_537)<br/>StorageLive(_541)<br/>StorageLive(_542)<br/>StorageLive(_543)<br/>_543 = ConstraintMut<br/></td></tr><tr><td align="left">_542 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _543)</td></tr></table>>];
    bb226__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">226</td></tr><tr><td align="left" balign="left">StorageDead(_543)<br/></td></tr><tr><td align="left">_541 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _542, const &quot;user_stats&quot;)</td></tr></table>>];
    bb227__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">227</td></tr><tr><td align="left" balign="left">StorageDead(_542)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _541)<br/>StorageDead(_541)<br/>StorageDead(_536)<br/>StorageDead(_535)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb228__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">228</td></tr><tr><td align="left" balign="left">StorageDead(_539)<br/>StorageDead(_537)<br/>_535 = const ()<br/>StorageDead(_536)<br/>StorageDead(_535)<br/>StorageLive(_544)<br/>StorageLive(_545)<br/>StorageLive(_546)<br/>StorageLive(_547)<br/>StorageLive(_548)<br/>StorageLive(_549)<br/>StorageLive(_550)<br/>StorageLive(_551)<br/>_551 = &amp;_50<br/></td></tr><tr><td align="left">_550 = anchor_lang::prelude::AccountLoader::&lt;'_, UserStats&gt;::load(move _551)</td></tr></table>>];
    bb229__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">229</td></tr><tr><td align="left" balign="left">StorageDead(_551)<br/></td></tr><tr><td align="left">_549 = &lt;std::result::Result&lt;Ref&lt;'_, UserStats&gt;, anchor_lang::error::Error&gt; as Try&gt;::branch(move _550)</td></tr></table>>];
    bb230__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">230</td></tr><tr><td align="left" balign="left">_602 = const true<br/>_603 = const true<br/>StorageDead(_550)<br/>_552 = discriminant(_549)<br/></td></tr><tr><td align="left">switchInt(move _552)</td></tr></table>>];
    bb231__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">231</td></tr><tr><td align="left" balign="left">StorageLive(_556)<br/>_556 = move ((_549 as Continue).0: std::cell::Ref&lt;'_, state::user::UserStats&gt;)<br/>_548 = move _556<br/>StorageDead(_556)<br/>_547 = &amp;_548<br/></td></tr><tr><td align="left">_546 = &lt;Ref&lt;'_, UserStats&gt; as Deref&gt;::deref(move _547)</td></tr></table>>];
    bb232__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">232</td></tr><tr><td align="left" balign="left">StorageLive(_553)<br/>_553 = move ((_549 as Break).0: std::result::Result&lt;std::convert::Infallible, anchor_lang::error::Error&gt;)<br/>StorageLive(_555)<br/>_555 = move _553<br/></td></tr><tr><td align="left">_0 = &lt;std::result::Result&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt; as FromResidual&lt;std::result::Result&lt;Infallible, anchor_lang::error::Error&gt;&gt;&gt;::from_residual(move _555)</td></tr></table>>];
    bb233__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">233</td></tr><tr><td align="left" balign="left">StorageDead(_555)<br/>StorageDead(_553)<br/>StorageDead(_547)<br/>_650 = discriminant(_549)<br/>_602 = const false<br/>_603 = const false<br/>StorageDead(_549)<br/>StorageDead(_548)<br/>StorageDead(_546)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb234__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">234</td></tr><tr><td align="left" balign="left">StorageDead(_547)<br/>_545 = ((*_546).0: anchor_lang::prelude::Pubkey)<br/></td></tr><tr><td align="left">drop(_548)</td></tr></table>>];
    bb235__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">235</td></tr><tr><td align="left" balign="left">StorageDead(_558)<br/>StorageLive(_559)<br/>StorageLive(_560)<br/>_560 = &amp;_545<br/>StorageLive(_561)<br/>_561 = &amp;_557<br/></td></tr><tr><td align="left">_559 = &lt;anchor_lang::prelude::Pubkey as PartialEq&gt;::ne(move _560, move _561)</td></tr></table>>];
    bb236__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">236</td></tr><tr><td align="left">switchInt(move _559)</td></tr></table>>];
    bb237__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">237</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>StorageDead(_560)<br/>StorageLive(_563)<br/>StorageLive(_564)<br/>StorageLive(_565)<br/>StorageLive(_566)<br/>_566 = ConstraintHasOne<br/></td></tr><tr><td align="left">_565 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _566)</td></tr></table>>];
    bb238__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">238</td></tr><tr><td align="left" balign="left">StorageDead(_566)<br/></td></tr><tr><td align="left">_564 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _565, const &quot;user_stats&quot;)</td></tr></table>>];
    bb239__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">239</td></tr><tr><td align="left" balign="left">StorageDead(_565)<br/>StorageLive(_567)<br/>StorageLive(_568)<br/>_568 = _545<br/>StorageLive(_569)<br/>_569 = _557<br/>_567 = (move _568, move _569)<br/>StorageDead(_569)<br/>StorageDead(_568)<br/></td></tr><tr><td align="left">_563 = anchor_lang::error::Error::with_pubkeys(move _564, move _567)</td></tr></table>>];
    bb240__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">240</td></tr><tr><td align="left" balign="left">StorageDead(_567)<br/>StorageDead(_564)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _563)<br/>StorageDead(_563)<br/>StorageDead(_559)<br/>StorageDead(_557)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb241__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">241</td></tr><tr><td align="left" balign="left">StorageDead(_561)<br/>StorageDead(_560)<br/>_544 = const ()<br/>StorageDead(_559)<br/>StorageDead(_557)<br/>StorageDead(_545)<br/>StorageDead(_544)<br/>StorageLive(_570)<br/>StorageLive(_571)<br/>StorageLive(_572)<br/>StorageLive(_573)<br/>StorageLive(_574)<br/>_574 = &amp;_95<br/>_573 = &amp;(*_574)<br/></td></tr><tr><td align="left">_572 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as AsRef&lt;anchor_lang::prelude::AccountInfo&lt;'_&gt;&gt;&gt;::as_ref(move _573)</td></tr></table>>];
    bb242__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">242</td></tr><tr><td align="left" balign="left">StorageDead(_573)<br/>_571 = ((*_572).6: bool)<br/></td></tr><tr><td align="left">switchInt(move _571)</td></tr></table>>];
    bb243__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">243</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/>StorageDead(_572)<br/>StorageLive(_576)<br/>StorageLive(_577)<br/>StorageLive(_578)<br/>_578 = ConstraintMut<br/></td></tr><tr><td align="left">_577 = &lt;anchor_lang::error::Error as From&lt;anchor_lang::error::ErrorCode&gt;&gt;::from(move _578)</td></tr></table>>];
    bb244__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">244</td></tr><tr><td align="left" balign="left">StorageDead(_578)<br/></td></tr><tr><td align="left">_576 = anchor_lang::error::Error::with_account_name::&lt;&amp;str&gt;(move _577, const &quot;payer&quot;)</td></tr></table>>];
    bb245__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">245</td></tr><tr><td align="left" balign="left">StorageDead(_577)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Err(move _576)<br/>StorageDead(_576)<br/>StorageDead(_571)<br/>StorageDead(_570)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb246__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">246</td></tr><tr><td align="left" balign="left">StorageDead(_574)<br/>StorageDead(_572)<br/>_570 = const ()<br/>StorageDead(_571)<br/>StorageDead(_570)<br/>StorageLive(_579)<br/>StorageLive(_580)<br/>_580 = move _20<br/>StorageLive(_581)<br/>_581 = move _185<br/>StorageLive(_582)<br/>_582 = move _50<br/>StorageLive(_583)<br/>_583 = move _65<br/>StorageLive(_584)<br/>_584 = move _80<br/>StorageLive(_585)<br/>_585 = move _95<br/>StorageLive(_586)<br/>_586 = move _110<br/>StorageLive(_587)<br/>_587 = move _125<br/>_579 = if_staker::InitializeInsuranceFundStake::&lt;'_&gt; { spot_market: move _580, insurance_fund_stake: move _581, user_stats: move _582, state: move _583, authority: move _584, payer: move _585, rent: move _586, system_program: move _587 }<br/>StorageDead(_587)<br/>StorageDead(_586)<br/>StorageDead(_585)<br/>StorageDead(_584)<br/>StorageDead(_583)<br/>StorageDead(_582)<br/>StorageDead(_581)<br/>StorageDead(_580)<br/>_0 = std::result::Result::&lt;if_staker::InitializeInsuranceFundStake&lt;'_&gt;, anchor_lang::error::Error&gt;::Ok(move _579)<br/>StorageDead(_579)<br/>StorageDead(_503)<br/>StorageDead(_502)<br/>StorageDead(_185)<br/>StorageDead(_149)<br/>StorageDead(_148)<br/>StorageDead(_140)<br/>StorageDead(_125)<br/>StorageDead(_110)<br/>StorageDead(_95)<br/>StorageDead(_80)<br/>StorageDead(_65)<br/>StorageDead(_50)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/>StorageDead(_20)<br/>StorageDead(_7)<br/>StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb247__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">247</td></tr><tr><td align="left" balign="left">StorageDead(_545)<br/>StorageDead(_544)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb248__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">248</td></tr><tr><td align="left" balign="left">StorageDead(_503)<br/>StorageDead(_502)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb249__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">249</td></tr><tr><td align="left" balign="left">StorageDead(_491)<br/>_605 = const false<br/>StorageDead(_488)<br/></td></tr><tr><td align="left">drop(_485)</td></tr></table>>];
    bb250__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">250</td></tr><tr><td align="left" balign="left">StorageDead(_485)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb251__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">251</td></tr><tr><td align="left" balign="left">StorageDead(_481)<br/>StorageDead(_480)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb252__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">252</td></tr><tr><td align="left" balign="left">StorageDead(_431)<br/>StorageDead(_430)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb253__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">253</td></tr><tr><td align="left" balign="left">StorageDead(_319)<br/>_610 = const false<br/>StorageDead(_316)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb254__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">254</td></tr><tr><td align="left" balign="left">StorageDead(_288)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb255__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">255</td></tr><tr><td align="left" balign="left">StorageDead(_201)<br/>StorageDead(_200)<br/>StorageDead(_198)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb256__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">256</td></tr><tr><td align="left" balign="left">StorageDead(_193)<br/>StorageDead(_192)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb257__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">257</td></tr><tr><td align="left" balign="left">StorageDead(_191)<br/>StorageDead(_190)<br/>StorageDead(_189)<br/>StorageDead(_186)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb258__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">258</td></tr><tr><td align="left" balign="left">StorageDead(_185)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb259__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">259</td></tr><tr><td align="left" balign="left">StorageDead(_149)<br/>StorageDead(_148)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb260__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">260</td></tr><tr><td align="left" balign="left">StorageDead(_140)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb261__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">261</td></tr><tr><td align="left" balign="left">StorageDead(_125)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb262__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">262</td></tr><tr><td align="left" balign="left">StorageDead(_110)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb263__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">263</td></tr><tr><td align="left" balign="left">StorageDead(_95)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb264__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">264</td></tr><tr><td align="left" balign="left">StorageDead(_80)<br/></td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb265__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">265</td></tr><tr><td align="left" balign="left">StorageDead(_65)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb266__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">266</td></tr><tr><td align="left" balign="left">StorageDead(_50)<br/>StorageDead(_42)<br/>StorageDead(_41)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb267__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">267</td></tr><tr><td align="left" balign="left">StorageDead(_20)<br/>StorageDead(_7)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb268__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">268</td></tr><tr><td align="left" balign="left">StorageDead(_6)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb269__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">269</td></tr><tr><td align="left">return</td></tr></table>>];
    bb270__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">270 (cleanup)</td></tr><tr><td align="left">drop(_548)</td></tr></table>>];
    bb271__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">271 (cleanup)</td></tr><tr><td align="left">drop(_491)</td></tr></table>>];
    bb272__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">272 (cleanup)</td></tr><tr><td align="left">drop(_485)</td></tr></table>>];
    bb273__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">273 (cleanup)</td></tr><tr><td align="left">drop(_464)</td></tr></table>>];
    bb274__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">274 (cleanup)</td></tr><tr><td align="left">drop(_298)</td></tr></table>>];
    bb275__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">275 (cleanup)</td></tr><tr><td align="left">drop(_271)</td></tr></table>>];
    bb276__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">276 (cleanup)</td></tr><tr><td align="left">drop(_208)</td></tr></table>>];
    bb277__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">277 (cleanup)</td></tr><tr><td align="left">drop(_65)</td></tr></table>>];
    bb278__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">278 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb279__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">279</td></tr><tr><td align="left" balign="left">_648 = discriminant(_549)<br/>_602 = const false<br/>_603 = const false<br/>StorageDead(_549)<br/>StorageDead(_548)<br/>StorageDead(_546)<br/>StorageLive(_557)<br/>StorageLive(_558)<br/>_558 = &amp;_80<br/></td></tr><tr><td align="left">_557 = &lt;anchor_lang::prelude::Signer&lt;'_&gt; as anchor_lang::Key&gt;::key(move _558)</td></tr></table>>];
    bb280__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">280 (cleanup)</td></tr><tr><td align="left" balign="left">_682 = discriminant(_549)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb281__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">281 (cleanup)</td></tr><tr><td align="left">drop(_528)</td></tr></table>>];
    bb282__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">282 (cleanup)</td></tr><tr><td align="left">switchInt(_604)</td></tr></table>>];
    bb283__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">283 (cleanup)</td></tr><tr><td align="left" balign="left">_683 = discriminant(_488)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb284__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">284 (cleanup)</td></tr><tr><td align="left">drop(_439)</td></tr></table>>];
    bb285__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">285 (cleanup)</td></tr><tr><td align="left">switchInt(_606)</td></tr></table>>];
    bb286__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">286 (cleanup)</td></tr><tr><td align="left" balign="left">_684 = discriminant(_421)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb287__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">287 (cleanup)</td></tr><tr><td align="left" balign="left">_685 = discriminant(_411)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb288__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">288 (cleanup)</td></tr><tr><td align="left" balign="left">_686 = discriminant(_372)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb289__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">289 (cleanup)</td></tr><tr><td align="left">drop(_375)</td></tr></table>>];
    bb290__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">290 (cleanup)</td></tr><tr><td align="left">switchInt(_607)</td></tr></table>>];
    bb291__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">291 (cleanup)</td></tr><tr><td align="left">drop(_364)</td></tr></table>>];
    bb292__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">292 (cleanup)</td></tr><tr><td align="left">switchInt(_608)</td></tr></table>>];
    bb293__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">293 (cleanup)</td></tr><tr><td align="left" balign="left">_687 = discriminant(_324)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb294__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">294 (cleanup)</td></tr><tr><td align="left">drop(_327)</td></tr></table>>];
    bb295__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">295 (cleanup)</td></tr><tr><td align="left">switchInt(_609)</td></tr></table>>];
    bb296__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">296 (cleanup)</td></tr><tr><td align="left">drop(_316)</td></tr></table>>];
    bb297__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">297 (cleanup)</td></tr><tr><td align="left">switchInt(_610)</td></tr></table>>];
    bb298__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">298 (cleanup)</td></tr><tr><td align="left" balign="left">_688 = discriminant(_307)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb299__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">299 (cleanup)</td></tr><tr><td align="left">drop(_297)</td></tr></table>>];
    bb300__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">300 (cleanup)</td></tr><tr><td align="left">switchInt(_611)</td></tr></table>>];
    bb301__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">301 (cleanup)</td></tr><tr><td align="left">drop(_269)</td></tr></table>>];
    bb302__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">302 (cleanup)</td></tr><tr><td align="left">switchInt(_612)</td></tr></table>>];
    bb303__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">303 (cleanup)</td></tr><tr><td align="left" balign="left">_689 = discriminant(_217)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb304__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">304 (cleanup)</td></tr><tr><td align="left">drop(_220)</td></tr></table>>];
    bb305__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">305 (cleanup)</td></tr><tr><td align="left">switchInt(_613)</td></tr></table>>];
    bb306__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">306 (cleanup)</td></tr><tr><td align="left">drop(_207)</td></tr></table>>];
    bb307__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">307 (cleanup)</td></tr><tr><td align="left">switchInt(_614)</td></tr></table>>];
    bb308__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">308 (cleanup)</td></tr><tr><td align="left">drop(_178)</td></tr></table>>];
    bb309__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">309 (cleanup)</td></tr><tr><td align="left">switchInt(_615)</td></tr></table>>];
    bb310__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">310 (cleanup)</td></tr><tr><td align="left" balign="left">_690 = discriminant(_141)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb311__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">311 (cleanup)</td></tr><tr><td align="left" balign="left">_691 = discriminant(_126)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb312__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">312 (cleanup)</td></tr><tr><td align="left" balign="left">_692 = discriminant(_111)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb313__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">313 (cleanup)</td></tr><tr><td align="left" balign="left">_693 = discriminant(_96)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb314__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">314 (cleanup)</td></tr><tr><td align="left" balign="left">_694 = discriminant(_81)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb315__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">315 (cleanup)</td></tr><tr><td align="left" balign="left">_695 = discriminant(_66)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb316__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">316 (cleanup)</td></tr><tr><td align="left" balign="left">_696 = discriminant(_51)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb317__0_8533 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">317 (cleanup)</td></tr><tr><td align="left" balign="left">_697 = discriminant(_21)<br/></td></tr><tr><td align="left">goto</td></tr></table>>];
    bb0__0_8533 -> bb1__0_8533 [label="return"];
    bb1__0_8533 -> bb2__0_8533 [label="return"];
    bb1__0_8533 -> bb278__0_8533 [label="unwind"];
    bb2__0_8533 -> bb3__0_8533 [label="return"];
    bb3__0_8533 -> bb4__0_8533 [label="0"];
    bb3__0_8533 -> bb6__0_8533 [label="1"];
    bb3__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb4__0_8533 -> bb8__0_8533 [label="return"];
    bb6__0_8533 -> bb7__0_8533 [label="return"];
    bb7__0_8533 -> bb268__0_8533 [label=""];
    bb8__0_8533 -> bb9__0_8533 [label="return"];
    bb8__0_8533 -> bb278__0_8533 [label="unwind"];
    bb9__0_8533 -> bb10__0_8533 [label="return"];
    bb9__0_8533 -> bb278__0_8533 [label="unwind"];
    bb10__0_8533 -> bb11__0_8533 [label="0"];
    bb10__0_8533 -> bb12__0_8533 [label="1"];
    bb10__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb11__0_8533 -> bb14__0_8533 [label="return"];
    bb12__0_8533 -> bb13__0_8533 [label="return"];
    bb12__0_8533 -> bb317__0_8533 [label="unwind"];
    bb13__0_8533 -> bb267__0_8533 [label=""];
    bb14__0_8533 -> bb17__0_8533 [label="0"];
    bb14__0_8533 -> bb15__0_8533 [label="otherwise"];
    bb15__0_8533 -> bb16__0_8533 [label="return"];
    bb16__0_8533 -> bb267__0_8533 [label=""];
    bb17__0_8533 -> bb18__0_8533 [label="success"];
    bb18__0_8533 -> bb19__0_8533 [label="return"];
    bb19__0_8533 -> bb20__0_8533 [label="return"];
    bb20__0_8533 -> bb21__0_8533 [label="return"];
    bb20__0_8533 -> bb278__0_8533 [label="unwind"];
    bb21__0_8533 -> bb22__0_8533 [label="return"];
    bb21__0_8533 -> bb278__0_8533 [label="unwind"];
    bb22__0_8533 -> bb23__0_8533 [label="0"];
    bb22__0_8533 -> bb24__0_8533 [label="1"];
    bb22__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb23__0_8533 -> bb26__0_8533 [label="return"];
    bb24__0_8533 -> bb25__0_8533 [label="return"];
    bb24__0_8533 -> bb316__0_8533 [label="unwind"];
    bb25__0_8533 -> bb266__0_8533 [label=""];
    bb26__0_8533 -> bb27__0_8533 [label="return"];
    bb26__0_8533 -> bb278__0_8533 [label="unwind"];
    bb27__0_8533 -> bb28__0_8533 [label="return"];
    bb27__0_8533 -> bb278__0_8533 [label="unwind"];
    bb28__0_8533 -> bb29__0_8533 [label="0"];
    bb28__0_8533 -> bb30__0_8533 [label="1"];
    bb28__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb29__0_8533 -> bb32__0_8533 [label="return"];
    bb29__0_8533 -> bb277__0_8533 [label="unwind"];
    bb30__0_8533 -> bb31__0_8533 [label="return"];
    bb30__0_8533 -> bb315__0_8533 [label="unwind"];
    bb31__0_8533 -> bb265__0_8533 [label=""];
    bb32__0_8533 -> bb33__0_8533 [label="return"];
    bb32__0_8533 -> bb277__0_8533 [label="unwind"];
    bb33__0_8533 -> bb34__0_8533 [label="return"];
    bb33__0_8533 -> bb277__0_8533 [label="unwind"];
    bb34__0_8533 -> bb35__0_8533 [label="0"];
    bb34__0_8533 -> bb36__0_8533 [label="1"];
    bb34__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb35__0_8533 -> bb38__0_8533 [label="return"];
    bb35__0_8533 -> bb277__0_8533 [label="unwind"];
    bb36__0_8533 -> bb37__0_8533 [label="return"];
    bb36__0_8533 -> bb314__0_8533 [label="unwind"];
    bb37__0_8533 -> bb264__0_8533 [label=""];
    bb38__0_8533 -> bb39__0_8533 [label="return"];
    bb38__0_8533 -> bb277__0_8533 [label="unwind"];
    bb39__0_8533 -> bb40__0_8533 [label="return"];
    bb39__0_8533 -> bb277__0_8533 [label="unwind"];
    bb40__0_8533 -> bb41__0_8533 [label="0"];
    bb40__0_8533 -> bb42__0_8533 [label="1"];
    bb40__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb41__0_8533 -> bb44__0_8533 [label="return"];
    bb41__0_8533 -> bb277__0_8533 [label="unwind"];
    bb42__0_8533 -> bb43__0_8533 [label="return"];
    bb42__0_8533 -> bb313__0_8533 [label="unwind"];
    bb43__0_8533 -> bb263__0_8533 [label=""];
    bb44__0_8533 -> bb45__0_8533 [label="return"];
    bb44__0_8533 -> bb277__0_8533 [label="unwind"];
    bb45__0_8533 -> bb46__0_8533 [label="return"];
    bb45__0_8533 -> bb277__0_8533 [label="unwind"];
    bb46__0_8533 -> bb47__0_8533 [label="0"];
    bb46__0_8533 -> bb48__0_8533 [label="1"];
    bb46__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb47__0_8533 -> bb50__0_8533 [label="return"];
    bb47__0_8533 -> bb277__0_8533 [label="unwind"];
    bb48__0_8533 -> bb49__0_8533 [label="return"];
    bb48__0_8533 -> bb312__0_8533 [label="unwind"];
    bb49__0_8533 -> bb262__0_8533 [label=""];
    bb50__0_8533 -> bb51__0_8533 [label="return"];
    bb50__0_8533 -> bb277__0_8533 [label="unwind"];
    bb51__0_8533 -> bb52__0_8533 [label="return"];
    bb51__0_8533 -> bb277__0_8533 [label="unwind"];
    bb52__0_8533 -> bb53__0_8533 [label="0"];
    bb52__0_8533 -> bb54__0_8533 [label="1"];
    bb52__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb53__0_8533 -> bb56__0_8533 [label="return"];
    bb53__0_8533 -> bb277__0_8533 [label="unwind"];
    bb54__0_8533 -> bb55__0_8533 [label="return"];
    bb54__0_8533 -> bb311__0_8533 [label="unwind"];
    bb55__0_8533 -> bb261__0_8533 [label=""];
    bb56__0_8533 -> bb57__0_8533 [label="return"];
    bb56__0_8533 -> bb277__0_8533 [label="unwind"];
    bb57__0_8533 -> bb58__0_8533 [label="0"];
    bb57__0_8533 -> bb59__0_8533 [label="1"];
    bb57__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb58__0_8533 -> bb61__0_8533 [label="return"];
    bb58__0_8533 -> bb277__0_8533 [label="unwind"];
    bb59__0_8533 -> bb60__0_8533 [label="return"];
    bb59__0_8533 -> bb310__0_8533 [label="unwind"];
    bb60__0_8533 -> bb260__0_8533 [label=""];
    bb61__0_8533 -> bb62__0_8533 [label="return"];
    bb61__0_8533 -> bb277__0_8533 [label="unwind"];
    bb62__0_8533 -> bb63__0_8533 [label="return"];
    bb62__0_8533 -> bb277__0_8533 [label="unwind"];
    bb63__0_8533 -> bb64__0_8533 [label="return"];
    bb63__0_8533 -> bb277__0_8533 [label="unwind"];
    bb64__0_8533 -> bb65__0_8533 [label="return"];
    bb64__0_8533 -> bb277__0_8533 [label="unwind"];
    bb65__0_8533 -> bb66__0_8533 [label="return"];
    bb65__0_8533 -> bb277__0_8533 [label="unwind"];
    bb66__0_8533 -> bb67__0_8533 [label="return"];
    bb66__0_8533 -> bb277__0_8533 [label="unwind"];
    bb67__0_8533 -> bb73__0_8533 [label="0"];
    bb67__0_8533 -> bb68__0_8533 [label="otherwise"];
    bb68__0_8533 -> bb69__0_8533 [label="return"];
    bb68__0_8533 -> bb277__0_8533 [label="unwind"];
    bb69__0_8533 -> bb70__0_8533 [label="return"];
    bb69__0_8533 -> bb277__0_8533 [label="unwind"];
    bb70__0_8533 -> bb71__0_8533 [label="return"];
    bb70__0_8533 -> bb309__0_8533 [label="unwind"];
    bb71__0_8533 -> bb72__0_8533 [label="return"];
    bb71__0_8533 -> bb309__0_8533 [label="unwind"];
    bb72__0_8533 -> bb259__0_8533 [label=""];
    bb73__0_8533 -> bb74__0_8533 [label="return"];
    bb73__0_8533 -> bb277__0_8533 [label="unwind"];
    bb74__0_8533 -> bb77__0_8533 [label="0"];
    bb74__0_8533 -> bb75__0_8533 [label="otherwise"];
    bb75__0_8533 -> bb76__0_8533 [label="return"];
    bb75__0_8533 -> bb277__0_8533 [label="unwind"];
    bb76__0_8533 -> bb160__0_8533 [label="0"];
    bb76__0_8533 -> bb77__0_8533 [label="otherwise"];
    bb77__0_8533 -> bb78__0_8533 [label="return"];
    bb77__0_8533 -> bb277__0_8533 [label="unwind"];
    bb78__0_8533 -> bb97__0_8533 [label="0"];
    bb78__0_8533 -> bb79__0_8533 [label="otherwise"];
    bb79__0_8533 -> bb80__0_8533 [label="return"];
    bb79__0_8533 -> bb277__0_8533 [label="unwind"];
    bb80__0_8533 -> bb81__0_8533 [label="return"];
    bb80__0_8533 -> bb277__0_8533 [label="unwind"];
    bb81__0_8533 -> bb82__0_8533 [label="return"];
    bb81__0_8533 -> bb276__0_8533 [label="unwind"];
    bb82__0_8533 -> bb83__0_8533 [label="return"];
    bb82__0_8533 -> bb307__0_8533 [label="unwind"];
    bb83__0_8533 -> bb84__0_8533 [label="return"];
    bb83__0_8533 -> bb307__0_8533 [label="unwind"];
    bb84__0_8533 -> bb85__0_8533 [label="return"];
    bb84__0_8533 -> bb305__0_8533 [label="unwind"];
    bb85__0_8533 -> bb86__0_8533 [label="return"];
    bb85__0_8533 -> bb305__0_8533 [label="unwind"];
    bb86__0_8533 -> bb87__0_8533 [label="return"];
    bb86__0_8533 -> bb305__0_8533 [label="unwind"];
    bb87__0_8533 -> bb88__0_8533 [label="return"];
    bb87__0_8533 -> bb305__0_8533 [label="unwind"];
    bb88__0_8533 -> bb89__0_8533 [label="return"];
    bb88__0_8533 -> bb305__0_8533 [label="unwind"];
    bb89__0_8533 -> bb90__0_8533 [label="return"];
    bb89__0_8533 -> bb305__0_8533 [label="unwind"];
    bb90__0_8533 -> bb91__0_8533 [label="return"];
    bb90__0_8533 -> bb305__0_8533 [label="unwind"];
    bb91__0_8533 -> bb92__0_8533 [label="return"];
    bb91__0_8533 -> bb307__0_8533 [label="unwind"];
    bb92__0_8533 -> bb93__0_8533 [label="return"];
    bb92__0_8533 -> bb307__0_8533 [label="unwind"];
    bb93__0_8533 -> bb94__0_8533 [label="0"];
    bb93__0_8533 -> bb95__0_8533 [label="1"];
    bb93__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb94__0_8533 -> bb155__0_8533 [label=""];
    bb95__0_8533 -> bb96__0_8533 [label="return"];
    bb95__0_8533 -> bb303__0_8533 [label="unwind"];
    bb96__0_8533 -> bb255__0_8533 [label=""];
    bb97__0_8533 -> bb98__0_8533 [label="return"];
    bb97__0_8533 -> bb277__0_8533 [label="unwind"];
    bb98__0_8533 -> bb99__0_8533 [label="return"];
    bb98__0_8533 -> bb277__0_8533 [label="unwind"];
    bb99__0_8533 -> bb100__0_8533 [label="return"];
    bb99__0_8533 -> bb277__0_8533 [label="unwind"];
    bb100__0_8533 -> bb109__0_8533 [label="0"];
    bb100__0_8533 -> bb101__0_8533 [label="otherwise"];
    bb101__0_8533 -> bb102__0_8533 [label="return"];
    bb101__0_8533 -> bb277__0_8533 [label="unwind"];
    bb102__0_8533 -> bb103__0_8533 [label="return"];
    bb102__0_8533 -> bb275__0_8533 [label="unwind"];
    bb103__0_8533 -> bb104__0_8533 [label="return"];
    bb103__0_8533 -> bb275__0_8533 [label="unwind"];
    bb104__0_8533 -> bb105__0_8533 [label="return"];
    bb104__0_8533 -> bb277__0_8533 [label="unwind"];
    bb105__0_8533 -> bb106__0_8533 [label="return"];
    bb105__0_8533 -> bb302__0_8533 [label="unwind"];
    bb106__0_8533 -> bb107__0_8533 [label="return"];
    bb106__0_8533 -> bb302__0_8533 [label="unwind"];
    bb107__0_8533 -> bb108__0_8533 [label="return"];
    bb107__0_8533 -> bb302__0_8533 [label="unwind"];
    bb108__0_8533 -> bb255__0_8533 [label=""];
    bb109__0_8533 -> bb110__0_8533 [label="return"];
    bb109__0_8533 -> bb277__0_8533 [label="unwind"];
    bb110__0_8533 -> bb111__0_8533 [label="return"];
    bb110__0_8533 -> bb277__0_8533 [label="unwind"];
    bb111__0_8533 -> bb112__0_8533 [label="return"];
    bb111__0_8533 -> bb277__0_8533 [label="unwind"];
    bb112__0_8533 -> bb123__0_8533 [label="0"];
    bb112__0_8533 -> bb113__0_8533 [label="otherwise"];
    bb113__0_8533 -> bb114__0_8533 [label="return"];
    bb113__0_8533 -> bb277__0_8533 [label="unwind"];
    bb114__0_8533 -> bb115__0_8533 [label="return"];
    bb114__0_8533 -> bb274__0_8533 [label="unwind"];
    bb115__0_8533 -> bb116__0_8533 [label="return"];
    bb115__0_8533 -> bb300__0_8533 [label="unwind"];
    bb116__0_8533 -> bb117__0_8533 [label="return"];
    bb116__0_8533 -> bb300__0_8533 [label="unwind"];
    bb117__0_8533 -> bb118__0_8533 [label="return"];
    bb117__0_8533 -> bb300__0_8533 [label="unwind"];
    bb118__0_8533 -> bb119__0_8533 [label="return"];
    bb118__0_8533 -> bb300__0_8533 [label="unwind"];
    bb119__0_8533 -> bb120__0_8533 [label="0"];
    bb119__0_8533 -> bb121__0_8533 [label="1"];
    bb119__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb120__0_8533 -> bb124__0_8533 [label=""];
    bb121__0_8533 -> bb122__0_8533 [label="return"];
    bb121__0_8533 -> bb298__0_8533 [label="unwind"];
    bb122__0_8533 -> bb254__0_8533 [label=""];
    bb123__0_8533 -> bb124__0_8533 [label=""];
    bb124__0_8533 -> bb125__0_8533 [label="return"];
    bb124__0_8533 -> bb277__0_8533 [label="unwind"];
    bb125__0_8533 -> bb126__0_8533 [label="return"];
    bb125__0_8533 -> bb297__0_8533 [label="unwind"];
    bb126__0_8533 -> bb127__0_8533 [label="return"];
    bb126__0_8533 -> bb297__0_8533 [label="unwind"];
    bb127__0_8533 -> bb128__0_8533 [label="return"];
    bb127__0_8533 -> bb295__0_8533 [label="unwind"];
    bb128__0_8533 -> bb129__0_8533 [label="return"];
    bb128__0_8533 -> bb295__0_8533 [label="unwind"];
    bb129__0_8533 -> bb130__0_8533 [label="return"];
    bb129__0_8533 -> bb295__0_8533 [label="unwind"];
    bb130__0_8533 -> bb131__0_8533 [label="return"];
    bb130__0_8533 -> bb295__0_8533 [label="unwind"];
    bb131__0_8533 -> bb132__0_8533 [label="return"];
    bb131__0_8533 -> bb295__0_8533 [label="unwind"];
    bb132__0_8533 -> bb133__0_8533 [label="return"];
    bb132__0_8533 -> bb295__0_8533 [label="unwind"];
    bb133__0_8533 -> bb134__0_8533 [label="return"];
    bb133__0_8533 -> bb295__0_8533 [label="unwind"];
    bb134__0_8533 -> bb135__0_8533 [label="return"];
    bb134__0_8533 -> bb297__0_8533 [label="unwind"];
    bb135__0_8533 -> bb136__0_8533 [label="return"];
    bb135__0_8533 -> bb297__0_8533 [label="unwind"];
    bb136__0_8533 -> bb137__0_8533 [label="0"];
    bb136__0_8533 -> bb138__0_8533 [label="1"];
    bb136__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb137__0_8533 -> bb140__0_8533 [label="return"];
    bb137__0_8533 -> bb297__0_8533 [label="unwind"];
    bb138__0_8533 -> bb139__0_8533 [label="return"];
    bb138__0_8533 -> bb293__0_8533 [label="unwind"];
    bb139__0_8533 -> bb253__0_8533 [label=""];
    bb140__0_8533 -> bb141__0_8533 [label="return"];
    bb140__0_8533 -> bb292__0_8533 [label="unwind"];
    bb141__0_8533 -> bb142__0_8533 [label="return"];
    bb141__0_8533 -> bb292__0_8533 [label="unwind"];
    bb142__0_8533 -> bb143__0_8533 [label="return"];
    bb142__0_8533 -> bb290__0_8533 [label="unwind"];
    bb143__0_8533 -> bb144__0_8533 [label="return"];
    bb143__0_8533 -> bb290__0_8533 [label="unwind"];
    bb144__0_8533 -> bb145__0_8533 [label="return"];
    bb144__0_8533 -> bb290__0_8533 [label="unwind"];
    bb145__0_8533 -> bb146__0_8533 [label="return"];
    bb145__0_8533 -> bb290__0_8533 [label="unwind"];
    bb146__0_8533 -> bb147__0_8533 [label="return"];
    bb146__0_8533 -> bb290__0_8533 [label="unwind"];
    bb147__0_8533 -> bb148__0_8533 [label="return"];
    bb147__0_8533 -> bb290__0_8533 [label="unwind"];
    bb148__0_8533 -> bb149__0_8533 [label="return"];
    bb148__0_8533 -> bb290__0_8533 [label="unwind"];
    bb149__0_8533 -> bb150__0_8533 [label="return"];
    bb149__0_8533 -> bb292__0_8533 [label="unwind"];
    bb150__0_8533 -> bb151__0_8533 [label="return"];
    bb150__0_8533 -> bb292__0_8533 [label="unwind"];
    bb151__0_8533 -> bb152__0_8533 [label="0"];
    bb151__0_8533 -> bb153__0_8533 [label="1"];
    bb151__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb152__0_8533 -> bb155__0_8533 [label=""];
    bb153__0_8533 -> bb154__0_8533 [label="return"];
    bb153__0_8533 -> bb288__0_8533 [label="unwind"];
    bb154__0_8533 -> bb253__0_8533 [label=""];
    bb155__0_8533 -> bb156__0_8533 [label="return"];
    bb155__0_8533 -> bb277__0_8533 [label="unwind"];
    bb156__0_8533 -> bb158__0_8533 [label="0"];
    bb156__0_8533 -> bb157__0_8533 [label="1"];
    bb156__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb157__0_8533 -> bb159__0_8533 [label="return"];
    bb157__0_8533 -> bb287__0_8533 [label="unwind"];
    bb158__0_8533 -> bb165__0_8533 [label=""];
    bb159__0_8533 -> bb256__0_8533 [label=""];
    bb160__0_8533 -> bb161__0_8533 [label="return"];
    bb160__0_8533 -> bb277__0_8533 [label="unwind"];
    bb161__0_8533 -> bb163__0_8533 [label="0"];
    bb161__0_8533 -> bb162__0_8533 [label="1"];
    bb161__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb162__0_8533 -> bb164__0_8533 [label="return"];
    bb162__0_8533 -> bb286__0_8533 [label="unwind"];
    bb163__0_8533 -> bb165__0_8533 [label=""];
    bb164__0_8533 -> bb256__0_8533 [label=""];
    bb165__0_8533 -> bb189__0_8533 [label="0"];
    bb165__0_8533 -> bb166__0_8533 [label="otherwise"];
    bb166__0_8533 -> bb167__0_8533 [label="return"];
    bb166__0_8533 -> bb277__0_8533 [label="unwind"];
    bb167__0_8533 -> bb173__0_8533 [label="0"];
    bb167__0_8533 -> bb168__0_8533 [label="otherwise"];
    bb168__0_8533 -> bb169__0_8533 [label="return"];
    bb168__0_8533 -> bb277__0_8533 [label="unwind"];
    bb169__0_8533 -> bb170__0_8533 [label="return"];
    bb169__0_8533 -> bb277__0_8533 [label="unwind"];
    bb170__0_8533 -> bb171__0_8533 [label="return"];
    bb170__0_8533 -> bb285__0_8533 [label="unwind"];
    bb171__0_8533 -> bb172__0_8533 [label="return"];
    bb171__0_8533 -> bb285__0_8533 [label="unwind"];
    bb172__0_8533 -> bb252__0_8533 [label=""];
    bb173__0_8533 -> bb174__0_8533 [label="return"];
    bb173__0_8533 -> bb277__0_8533 [label="unwind"];
    bb174__0_8533 -> bb179__0_8533 [label="0"];
    bb174__0_8533 -> bb175__0_8533 [label="otherwise"];
    bb175__0_8533 -> bb176__0_8533 [label="return"];
    bb175__0_8533 -> bb277__0_8533 [label="unwind"];
    bb176__0_8533 -> bb177__0_8533 [label="return"];
    bb176__0_8533 -> bb277__0_8533 [label="unwind"];
    bb177__0_8533 -> bb178__0_8533 [label="return"];
    bb177__0_8533 -> bb277__0_8533 [label="unwind"];
    bb178__0_8533 -> bb252__0_8533 [label=""];
    bb179__0_8533 -> bb180__0_8533 [label="return"];
    bb179__0_8533 -> bb277__0_8533 [label="unwind"];
    bb180__0_8533 -> bb181__0_8533 [label="return"];
    bb180__0_8533 -> bb277__0_8533 [label="unwind"];
    bb181__0_8533 -> bb182__0_8533 [label="return"];
    bb181__0_8533 -> bb273__0_8533 [label="unwind"];
    bb182__0_8533 -> bb187__0_8533 [label="0"];
    bb182__0_8533 -> bb183__0_8533 [label="otherwise"];
    bb183__0_8533 -> bb184__0_8533 [label="return"];
    bb183__0_8533 -> bb277__0_8533 [label="unwind"];
    bb184__0_8533 -> bb185__0_8533 [label="return"];
    bb184__0_8533 -> bb277__0_8533 [label="unwind"];
    bb185__0_8533 -> bb186__0_8533 [label="return"];
    bb185__0_8533 -> bb277__0_8533 [label="unwind"];
    bb186__0_8533 -> bb252__0_8533 [label=""];
    bb187__0_8533 -> bb188__0_8533 [label="return"];
    bb187__0_8533 -> bb277__0_8533 [label="unwind"];
    bb188__0_8533 -> bb190__0_8533 [label=""];
    bb189__0_8533 -> bb190__0_8533 [label=""];
    bb190__0_8533 -> bb191__0_8533 [label="return"];
    bb190__0_8533 -> bb277__0_8533 [label="unwind"];
    bb191__0_8533 -> bb192__0_8533 [label="0"];
    bb191__0_8533 -> bb195__0_8533 [label="otherwise"];
    bb192__0_8533 -> bb193__0_8533 [label="return"];
    bb192__0_8533 -> bb277__0_8533 [label="unwind"];
    bb193__0_8533 -> bb194__0_8533 [label="return"];
    bb193__0_8533 -> bb277__0_8533 [label="unwind"];
    bb194__0_8533 -> bb258__0_8533 [label=""];
    bb195__0_8533 -> bb196__0_8533 [label="return"];
    bb195__0_8533 -> bb277__0_8533 [label="unwind"];
    bb196__0_8533 -> bb197__0_8533 [label="return"];
    bb196__0_8533 -> bb272__0_8533 [label="unwind"];
    bb197__0_8533 -> bb198__0_8533 [label="return"];
    bb197__0_8533 -> bb272__0_8533 [label="unwind"];
    bb198__0_8533 -> bb199__0_8533 [label="return"];
    bb198__0_8533 -> bb271__0_8533 [label="unwind"];
    bb199__0_8533 -> bb200__0_8533 [label="return"];
    bb199__0_8533 -> bb271__0_8533 [label="unwind"];
    bb200__0_8533 -> bb201__0_8533 [label="0"];
    bb200__0_8533 -> bb202__0_8533 [label="1"];
    bb200__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb201__0_8533 -> bb204__0_8533 [label="return"];
    bb201__0_8533 -> bb283__0_8533 [label="unwind"];
    bb202__0_8533 -> bb203__0_8533 [label="return"];
    bb202__0_8533 -> bb283__0_8533 [label="unwind"];
    bb203__0_8533 -> bb249__0_8533 [label="return"];
    bb203__0_8533 -> bb272__0_8533 [label="unwind"];
    bb204__0_8533 -> bb206__0_8533 [label="0"];
    bb204__0_8533 -> bb205__0_8533 [label="otherwise"];
    bb205__0_8533 -> bb211__0_8533 [label="return"];
    bb205__0_8533 -> bb272__0_8533 [label="unwind"];
    bb206__0_8533 -> bb207__0_8533 [label="return"];
    bb206__0_8533 -> bb272__0_8533 [label="unwind"];
    bb207__0_8533 -> bb208__0_8533 [label="return"];
    bb207__0_8533 -> bb277__0_8533 [label="unwind"];
    bb208__0_8533 -> bb209__0_8533 [label="return"];
    bb208__0_8533 -> bb277__0_8533 [label="unwind"];
    bb209__0_8533 -> bb210__0_8533 [label="return"];
    bb209__0_8533 -> bb277__0_8533 [label="unwind"];
    bb210__0_8533 -> bb251__0_8533 [label=""];
    bb211__0_8533 -> bb212__0_8533 [label="return"];
    bb211__0_8533 -> bb277__0_8533 [label="unwind"];
    bb212__0_8533 -> bb213__0_8533 [label="return"];
    bb212__0_8533 -> bb277__0_8533 [label="unwind"];
    bb213__0_8533 -> bb214__0_8533 [label="return"];
    bb213__0_8533 -> bb277__0_8533 [label="unwind"];
    bb214__0_8533 -> bb215__0_8533 [label="return"];
    bb214__0_8533 -> bb277__0_8533 [label="unwind"];
    bb215__0_8533 -> bb216__0_8533 [label="return"];
    bb215__0_8533 -> bb277__0_8533 [label="unwind"];
    bb216__0_8533 -> bb217__0_8533 [label="return"];
    bb216__0_8533 -> bb277__0_8533 [label="unwind"];
    bb217__0_8533 -> bb223__0_8533 [label="0"];
    bb217__0_8533 -> bb218__0_8533 [label="otherwise"];
    bb218__0_8533 -> bb219__0_8533 [label="return"];
    bb218__0_8533 -> bb277__0_8533 [label="unwind"];
    bb219__0_8533 -> bb220__0_8533 [label="return"];
    bb219__0_8533 -> bb277__0_8533 [label="unwind"];
    bb220__0_8533 -> bb221__0_8533 [label="return"];
    bb220__0_8533 -> bb282__0_8533 [label="unwind"];
    bb221__0_8533 -> bb222__0_8533 [label="return"];
    bb221__0_8533 -> bb282__0_8533 [label="unwind"];
    bb222__0_8533 -> bb248__0_8533 [label=""];
    bb223__0_8533 -> bb224__0_8533 [label="return"];
    bb223__0_8533 -> bb277__0_8533 [label="unwind"];
    bb224__0_8533 -> bb225__0_8533 [label="0"];
    bb224__0_8533 -> bb228__0_8533 [label="otherwise"];
    bb225__0_8533 -> bb226__0_8533 [label="return"];
    bb225__0_8533 -> bb277__0_8533 [label="unwind"];
    bb226__0_8533 -> bb227__0_8533 [label="return"];
    bb226__0_8533 -> bb277__0_8533 [label="unwind"];
    bb227__0_8533 -> bb248__0_8533 [label=""];
    bb228__0_8533 -> bb229__0_8533 [label="return"];
    bb228__0_8533 -> bb277__0_8533 [label="unwind"];
    bb229__0_8533 -> bb230__0_8533 [label="return"];
    bb229__0_8533 -> bb277__0_8533 [label="unwind"];
    bb230__0_8533 -> bb231__0_8533 [label="0"];
    bb230__0_8533 -> bb232__0_8533 [label="1"];
    bb230__0_8533 -> bb5__0_8533 [label="otherwise"];
    bb231__0_8533 -> bb234__0_8533 [label="return"];
    bb231__0_8533 -> bb270__0_8533 [label="unwind"];
    bb232__0_8533 -> bb233__0_8533 [label="return"];
    bb232__0_8533 -> bb280__0_8533 [label="unwind"];
    bb233__0_8533 -> bb247__0_8533 [label=""];
    bb234__0_8533 -> bb279__0_8533 [label="return"];
    bb234__0_8533 -> bb280__0_8533 [label="unwind"];
    bb235__0_8533 -> bb236__0_8533 [label="return"];
    bb235__0_8533 -> bb277__0_8533 [label="unwind"];
    bb236__0_8533 -> bb241__0_8533 [label="0"];
    bb236__0_8533 -> bb237__0_8533 [label="otherwise"];
    bb237__0_8533 -> bb238__0_8533 [label="return"];
    bb237__0_8533 -> bb277__0_8533 [label="unwind"];
    bb238__0_8533 -> bb239__0_8533 [label="return"];
    bb238__0_8533 -> bb277__0_8533 [label="unwind"];
    bb239__0_8533 -> bb240__0_8533 [label="return"];
    bb239__0_8533 -> bb277__0_8533 [label="unwind"];
    bb240__0_8533 -> bb247__0_8533 [label=""];
    bb241__0_8533 -> bb242__0_8533 [label="return"];
    bb241__0_8533 -> bb277__0_8533 [label="unwind"];
    bb242__0_8533 -> bb243__0_8533 [label="0"];
    bb242__0_8533 -> bb246__0_8533 [label="otherwise"];
    bb243__0_8533 -> bb244__0_8533 [label="return"];
    bb243__0_8533 -> bb277__0_8533 [label="unwind"];
    bb244__0_8533 -> bb245__0_8533 [label="return"];
    bb244__0_8533 -> bb277__0_8533 [label="unwind"];
    bb245__0_8533 -> bb248__0_8533 [label=""];
    bb246__0_8533 -> bb269__0_8533 [label=""];
    bb247__0_8533 -> bb248__0_8533 [label=""];
    bb248__0_8533 -> bb258__0_8533 [label=""];
    bb249__0_8533 -> bb250__0_8533 [label="return"];
    bb249__0_8533 -> bb277__0_8533 [label="unwind"];
    bb250__0_8533 -> bb251__0_8533 [label=""];
    bb251__0_8533 -> bb258__0_8533 [label=""];
    bb252__0_8533 -> bb257__0_8533 [label=""];
    bb253__0_8533 -> bb254__0_8533 [label=""];
    bb254__0_8533 -> bb255__0_8533 [label=""];
    bb255__0_8533 -> bb256__0_8533 [label=""];
    bb256__0_8533 -> bb257__0_8533 [label=""];
    bb257__0_8533 -> bb258__0_8533 [label=""];
    bb258__0_8533 -> bb259__0_8533 [label=""];
    bb259__0_8533 -> bb260__0_8533 [label=""];
    bb260__0_8533 -> bb261__0_8533 [label=""];
    bb261__0_8533 -> bb262__0_8533 [label=""];
    bb262__0_8533 -> bb263__0_8533 [label=""];
    bb263__0_8533 -> bb264__0_8533 [label=""];
    bb264__0_8533 -> bb265__0_8533 [label="return"];
    bb264__0_8533 -> bb278__0_8533 [label="unwind"];
    bb265__0_8533 -> bb266__0_8533 [label=""];
    bb266__0_8533 -> bb267__0_8533 [label=""];
    bb267__0_8533 -> bb268__0_8533 [label=""];
    bb268__0_8533 -> bb269__0_8533 [label=""];
    bb270__0_8533 -> bb280__0_8533 [label="return"];
    bb271__0_8533 -> bb272__0_8533 [label="return"];
    bb272__0_8533 -> bb277__0_8533 [label="return"];
    bb273__0_8533 -> bb277__0_8533 [label="return"];
    bb274__0_8533 -> bb277__0_8533 [label="return"];
    bb275__0_8533 -> bb277__0_8533 [label="return"];
    bb276__0_8533 -> bb277__0_8533 [label="return"];
    bb277__0_8533 -> bb278__0_8533 [label="return"];
    bb279__0_8533 -> bb235__0_8533 [label="return"];
    bb279__0_8533 -> bb277__0_8533 [label="unwind"];
    bb280__0_8533 -> bb277__0_8533 [label=""];
    bb281__0_8533 -> bb277__0_8533 [label="return"];
    bb282__0_8533 -> bb277__0_8533 [label="0"];
    bb282__0_8533 -> bb281__0_8533 [label="otherwise"];
    bb283__0_8533 -> bb271__0_8533 [label=""];
    bb284__0_8533 -> bb277__0_8533 [label="return"];
    bb285__0_8533 -> bb277__0_8533 [label="0"];
    bb285__0_8533 -> bb284__0_8533 [label="otherwise"];
    bb286__0_8533 -> bb277__0_8533 [label=""];
    bb287__0_8533 -> bb277__0_8533 [label=""];
    bb288__0_8533 -> bb292__0_8533 [label=""];
    bb289__0_8533 -> bb292__0_8533 [label="return"];
    bb290__0_8533 -> bb292__0_8533 [label="0"];
    bb290__0_8533 -> bb289__0_8533 [label="otherwise"];
    bb291__0_8533 -> bb297__0_8533 [label="return"];
    bb292__0_8533 -> bb297__0_8533 [label="0"];
    bb292__0_8533 -> bb291__0_8533 [label="otherwise"];
    bb293__0_8533 -> bb297__0_8533 [label=""];
    bb294__0_8533 -> bb297__0_8533 [label="return"];
    bb295__0_8533 -> bb297__0_8533 [label="0"];
    bb295__0_8533 -> bb294__0_8533 [label="otherwise"];
    bb296__0_8533 -> bb277__0_8533 [label="return"];
    bb297__0_8533 -> bb277__0_8533 [label="0"];
    bb297__0_8533 -> bb296__0_8533 [label="otherwise"];
    bb298__0_8533 -> bb300__0_8533 [label=""];
    bb299__0_8533 -> bb277__0_8533 [label="return"];
    bb300__0_8533 -> bb277__0_8533 [label="0"];
    bb300__0_8533 -> bb299__0_8533 [label="otherwise"];
    bb301__0_8533 -> bb277__0_8533 [label="return"];
    bb302__0_8533 -> bb277__0_8533 [label="0"];
    bb302__0_8533 -> bb301__0_8533 [label="otherwise"];
    bb303__0_8533 -> bb307__0_8533 [label=""];
    bb304__0_8533 -> bb307__0_8533 [label="return"];
    bb305__0_8533 -> bb307__0_8533 [label="0"];
    bb305__0_8533 -> bb304__0_8533 [label="otherwise"];
    bb306__0_8533 -> bb277__0_8533 [label="return"];
    bb307__0_8533 -> bb277__0_8533 [label="0"];
    bb307__0_8533 -> bb306__0_8533 [label="otherwise"];
    bb308__0_8533 -> bb277__0_8533 [label="return"];
    bb309__0_8533 -> bb277__0_8533 [label="0"];
    bb309__0_8533 -> bb308__0_8533 [label="otherwise"];
    bb310__0_8533 -> bb277__0_8533 [label=""];
    bb311__0_8533 -> bb277__0_8533 [label=""];
    bb312__0_8533 -> bb277__0_8533 [label=""];
    bb313__0_8533 -> bb277__0_8533 [label=""];
    bb314__0_8533 -> bb277__0_8533 [label=""];
    bb315__0_8533 -> bb278__0_8533 [label=""];
    bb316__0_8533 -> bb278__0_8533 [label=""];
    bb317__0_8533 -> bb278__0_8533 [label=""];
}
